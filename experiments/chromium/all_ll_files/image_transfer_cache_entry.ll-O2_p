; ModuleID = '../../cc/paint/image_transfer_cache_entry.cc'
source_filename = "../../cc/paint/image_transfer_cache_entry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::ClientImageTransferCacheEntry" = type { %"class.cc::TransferCacheEntryBase", i8, i32, i32, i32, %class.SkPixmap*, %class.SkColorSpace*, %"class.absl::optional", %class.SkColorSpace*, i32, i32 }
%"class.cc::TransferCacheEntryBase" = type { %"class.cc::ClientTransferCacheEntry" }
%"class.cc::ClientTransferCacheEntry" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [4 x %class.SkPixmap*] }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%struct.SkISize = type { i32, i32 }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.cc::ServiceImageTransferCacheEntry" = type <{ %"class.cc::TransferCacheEntryBase.7", %class.GrDirectContext*, %"class.std::__1::vector", i32, [4 x i8], %"class.std::__1::vector.86", %class.sk_sp.82, %"class.absl::optional.93", %"class.absl::optional.98", i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.cc::TransferCacheEntryBase.7" = type { %"class.cc::ServiceTransferCacheEntry" }
%"class.cc::ServiceTransferCacheEntry" = type { i32 (...)** }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.45", %class.sk_sp.51, %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.58", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.76" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.9", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.8 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.8 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21" }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.51 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %class.GrResourceCache* }
%class.GrResourceCache = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.82*, %class.sk_sp.82*, %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %class.sk_sp.82* }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { i64*, i64*, %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { i64* }
%class.sk_sp.82 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"class.absl::optional.93" = type { %"class.absl::optional_internal::optional_data.94" }
%"class.absl::optional_internal::optional_data.94" = type { %"class.absl::optional_internal::optional_data_base.95" }
%"class.absl::optional_internal::optional_data_base.95" = type { %"class.absl::optional_internal::optional_data_dtor_base.96" }
%"class.absl::optional_internal::optional_data_dtor_base.96" = type { i8, %union.anon.97 }
%union.anon.97 = type { i32 }
%"class.absl::optional.98" = type { %"class.absl::optional_internal::optional_data.99" }
%"class.absl::optional_internal::optional_data.99" = type { %"class.absl::optional_internal::optional_data_base.100" }
%"class.absl::optional_internal::optional_data_base.100" = type { %"class.absl::optional_internal::optional_data_dtor_base.101" }
%"class.absl::optional_internal::optional_data_dtor_base.101" = type { i8, %union.anon.102 }
%union.anon.102 = type { i32 }
%"struct.cc::PaintOp::SerializeOptions" = type <{ %"class.cc::ImageProvider"*, %"class.cc::TransferCacheSerializeHelper"*, %"class.cc::ClientPaintCache"*, %class.SkStrikeServer*, %class.sk_sp, i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.cc::ImageProvider" = type { i32 (...)** }
%"class.cc::TransferCacheSerializeHelper" = type opaque
%"class.cc::ClientPaintCache" = type opaque
%class.SkStrikeServer = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkStrikeServerImpl* }
%class.SkStrikeServerImpl = type opaque
%"class.cc::PaintOpWriter" = type <{ i8*, i64, i64, %"struct.cc::PaintOp::SerializeOptions"*, i8, i8, [6 x i8] }>
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::array.122" = type { [4 x %class.GrBackendTexture] }
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.119, %class.sk_sp.121 }
%union.anon.119 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.120, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.120 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.121 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%class.GrYUVABackendTextures = type <{ %class.SkYUVAInfo, %"struct.std::__1::array.122", i32, [4 x i8] }>
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { i8*, i8*, %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { i8* }
%"struct.cc::PaintOp::DeserializeOptions" = type { %"class.cc::TransferCacheDeserializeHelper"*, %"class.cc::ServicePaintCache"*, %class.SkStrikeClient*, i8, %"class.std::__1::vector.106"*, i8, %"class.cc::SharedImageProvider"* }
%"class.cc::TransferCacheDeserializeHelper" = type { i32 (...)**, i64 }
%"class.cc::ServicePaintCache" = type opaque
%class.SkStrikeClient = type { %"class.std::__1::unique_ptr.113" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %class.SkStrikeClientImpl* }
%class.SkStrikeClientImpl = type opaque
%"class.cc::SharedImageProvider" = type { i32 (...)** }
%"class.cc::PaintOpReader" = type <{ i8*, i64, i8, [7 x i8], %"struct.cc::PaintOp::DeserializeOptions"*, i8, [7 x i8] }>

$_ZNK2cc22TransferCacheEntryBaseINS_24ClientTransferCacheEntryELNS_22TransferCacheEntryTypeE1EE4TypeEv = comdat any

$_ZNK2cc22TransferCacheEntryBaseINS_25ServiceTransferCacheEntryELNS_22TransferCacheEntryTypeE1EE4TypeEv = comdat any

$_ZNSt3__16vectorI5sk_spI7SkImageENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

@_ZTVN2cc29ClientImageTransferCacheEntryE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::ClientImageTransferCacheEntry"*)* @_ZN2cc29ClientImageTransferCacheEntryD2Ev to i8*), i8* bitcast (void (%"class.cc::ClientImageTransferCacheEntry"*)* @_ZN2cc29ClientImageTransferCacheEntryD0Ev to i8*), i8* bitcast (i32 (%"class.cc::TransferCacheEntryBase"*)* @_ZNK2cc22TransferCacheEntryBaseINS_24ClientTransferCacheEntryELNS_22TransferCacheEntryTypeE1EE4TypeEv to i8*), i8* bitcast (i32 (%"class.cc::ClientImageTransferCacheEntry"*)* @_ZNK2cc29ClientImageTransferCacheEntry2IdEv to i8*), i8* bitcast (i32 (%"class.cc::ClientImageTransferCacheEntry"*)* @_ZNK2cc29ClientImageTransferCacheEntry14SerializedSizeEv to i8*), i8* bitcast (i1 (%"class.cc::ClientImageTransferCacheEntry"*, i64, i8*)* @_ZNK2cc29ClientImageTransferCacheEntry9SerializeEN4base4spanIhLm18446744073709551615EEE to i8*)] }, align 8
@_ZN2cc29ClientImageTransferCacheEntry10s_next_id_E = hidden global { { { i32 } } } zeroinitializer, align 4
@_ZTVN2cc30ServiceImageTransferCacheEntryE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::ServiceImageTransferCacheEntry"*)* @_ZN2cc30ServiceImageTransferCacheEntryD2Ev to i8*), i8* bitcast (void (%"class.cc::ServiceImageTransferCacheEntry"*)* @_ZN2cc30ServiceImageTransferCacheEntryD0Ev to i8*), i8* bitcast (i32 (%"class.cc::TransferCacheEntryBase.7"*)* @_ZNK2cc22TransferCacheEntryBaseINS_25ServiceTransferCacheEntryELNS_22TransferCacheEntryTypeE1EE4TypeEv to i8*), i8* bitcast (i64 (%"class.cc::ServiceImageTransferCacheEntry"*)* @_ZNK2cc30ServiceImageTransferCacheEntry10CachedSizeEv to i8*), i8* bitcast (i1 (%"class.cc::ServiceImageTransferCacheEntry"*, %class.GrDirectContext*, i64, i8*)* @_ZN2cc30ServiceImageTransferCacheEntry11DeserializeEP15GrDirectContextN4base4spanIKhLm18446744073709551615EEE to i8*)] }, align 8
@switch.table._ZN2cc32NumberOfPlanesForYUVDecodeFormatENS_15YUVDecodeFormatE = private unnamed_addr constant [5 x i64] [i64 3, i64 4, i64 3, i64 2, i64 0], align 8
@switch.table._ZNK2cc29ClientImageTransferCacheEntry9SerializeEN4base4spanIhLm18446744073709551615EEE = private unnamed_addr constant [13 x i32] [i32 0, i32 3, i32 3, i32 2, i32 2, i32 1, i32 1, i32 4, i32 4, i32 3, i32 3, i32 1, i32 1], align 4

@_ZN2cc29ClientImageTransferCacheEntryC1EPK8SkPixmapPK12SkColorSpaceb = hidden unnamed_addr alias void (%"class.cc::ClientImageTransferCacheEntry"*, %class.SkPixmap*, %class.SkColorSpace*, i1), void (%"class.cc::ClientImageTransferCacheEntry"*, %class.SkPixmap*, %class.SkColorSpace*, i1)* @_ZN2cc29ClientImageTransferCacheEntryC2EPK8SkPixmapPK12SkColorSpaceb
@_ZN2cc29ClientImageTransferCacheEntryC1EPK8SkPixmapN10SkYUVAInfo11PlaneConfigENS4_11SubsamplingEPK12SkColorSpace15SkYUVColorSpaceb = hidden unnamed_addr alias void (%"class.cc::ClientImageTransferCacheEntry"*, %class.SkPixmap*, i32, i32, %class.SkColorSpace*, i32, i1), void (%"class.cc::ClientImageTransferCacheEntry"*, %class.SkPixmap*, i32, i32, %class.SkColorSpace*, i32, i1)* @_ZN2cc29ClientImageTransferCacheEntryC2EPK8SkPixmapN10SkYUVAInfo11PlaneConfigENS4_11SubsamplingEPK12SkColorSpace15SkYUVColorSpaceb
@_ZN2cc29ClientImageTransferCacheEntryD1Ev = hidden unnamed_addr alias void (%"class.cc::ClientImageTransferCacheEntry"*), void (%"class.cc::ClientImageTransferCacheEntry"*)* @_ZN2cc29ClientImageTransferCacheEntryD2Ev
@_ZN2cc30ServiceImageTransferCacheEntryC1Ev = hidden unnamed_addr alias void (%"class.cc::ServiceImageTransferCacheEntry"*), void (%"class.cc::ServiceImageTransferCacheEntry"*)* @_ZN2cc30ServiceImageTransferCacheEntryC2Ev
@_ZN2cc30ServiceImageTransferCacheEntryD1Ev = hidden unnamed_addr alias void (%"class.cc::ServiceImageTransferCacheEntry"*), void (%"class.cc::ServiceImageTransferCacheEntry"*)* @_ZN2cc30ServiceImageTransferCacheEntryD2Ev
@_ZN2cc30ServiceImageTransferCacheEntryC1EOS0_ = hidden unnamed_addr alias void (%"class.cc::ServiceImageTransferCacheEntry"*, %"class.cc::ServiceImageTransferCacheEntry"*), void (%"class.cc::ServiceImageTransferCacheEntry"*, %"class.cc::ServiceImageTransferCacheEntry"*)* @_ZN2cc30ServiceImageTransferCacheEntryC2EOS0_

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN2cc32NumberOfPlanesForYUVDecodeFormatENS_15YUVDecodeFormatE(i32) local_unnamed_addr #0 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [5 x i64], [5 x i64]* @switch.table._ZN2cc32NumberOfPlanesForYUVDecodeFormatENS_15YUVDecodeFormatE, i64 0, i64 %2
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc29ClientImageTransferCacheEntryC2EPK8SkPixmapPK12SkColorSpaceb(%"class.cc::ClientImageTransferCacheEntry"* nocapture, %class.SkPixmap*, %class.SkColorSpace*, i1 zeroext) unnamed_addr #1 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2cc29ClientImageTransferCacheEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 1
  store i8 %5, i8* %7, align 8
  %8 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 2
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 3
  %10 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN2cc29ClientImageTransferCacheEntry10s_next_id_E, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  store i32 %10, i32* %9, align 8
  %11 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 4
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 5
  store %class.SkPixmap* %1, %class.SkPixmap** %12, align 8
  %13 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 6
  store %class.SkColorSpace* %2, %class.SkColorSpace** %13, align 8
  %14 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %16 = icmp eq %class.SkColorSpace* %2, null
  %17 = bitcast %union.anon* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 44, i1 false)
  br i1 %16, label %22, label %18

18:                                               ; preds = %4
  %19 = tail call i64 @_ZNK12SkColorSpace13writeToMemoryEPv(%class.SkColorSpace* nonnull %2, i8* null) #14
  %20 = add i64 %19, 16
  %21 = load %class.SkPixmap*, %class.SkPixmap** %12, align 8
  br label %22

22:                                               ; preds = %4, %18
  %23 = phi %class.SkPixmap* [ %21, %18 ], [ %1, %4 ]
  %24 = phi i64 [ %20, %18 ], [ 16, %4 ]
  %25 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %23, i64 0, i32 2, i32 0, i32 0, i32 0
  %26 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8
  %27 = icmp eq %class.SkColorSpace* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = tail call i64 @_ZNK12SkColorSpace13writeToMemoryEPv(%class.SkColorSpace* nonnull %26, i8* null) #14
  %30 = add i64 %29, 16
  br label %31

31:                                               ; preds = %22, %28
  %32 = phi i64 [ %30, %28 ], [ 16, %22 ]
  %33 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %24, i64 56) #14
  %34 = extractvalue { i64, i1 } %33, 1
  %35 = extractvalue { i64, i1 } %33, 0
  %36 = icmp ugt i64 %35, 4294967295
  %37 = or i1 %34, %36
  br i1 %37, label %55, label %38, !prof !2

38:                                               ; preds = %31
  %39 = and i64 %35, 4294967295
  %40 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %39, i64 %32) #14
  %41 = extractvalue { i64, i1 } %40, 1
  %42 = extractvalue { i64, i1 } %40, 0
  %43 = icmp ugt i64 %42, 4294967295
  %44 = or i1 %41, %43
  br i1 %44, label %55, label %45, !prof !2

45:                                               ; preds = %38
  %46 = and i64 %42, 4294967295
  %47 = trunc i64 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 4) #14
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  %53 = and i33 %50, 4294967295
  %54 = zext i33 %53 to i64
  br label %55

55:                                               ; preds = %31, %38, %45
  %56 = phi i64 [ %54, %45 ], [ 0, %38 ], [ 0, %31 ]
  %57 = phi i1 [ %52, %45 ], [ true, %38 ], [ true, %31 ]
  %58 = load %class.SkPixmap*, %class.SkPixmap** %12, align 8
  %59 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %58, i64 0, i32 2
  %60 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %58, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = tail call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %59, i64 %61) #14
  br i1 %57, label %69, label %63, !prof !2

63:                                               ; preds = %55
  %64 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %56, i64 %62) #14
  %65 = extractvalue { i64, i1 } %64, 1
  %66 = extractvalue { i64, i1 } %64, 0
  %67 = icmp ugt i64 %66, 4294967295
  %68 = or i1 %65, %67
  br i1 %68, label %69, label %70, !prof !3

69:                                               ; preds = %55, %63
  tail call void @llvm.trap() #14
  unreachable

70:                                               ; preds = %63
  %71 = trunc i64 %66 to i32
  store i32 %71, i32* %11, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZNK12SkColorSpace13writeToMemoryEPv(%class.SkColorSpace*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc29ClientImageTransferCacheEntryC2EPK8SkPixmapN10SkYUVAInfo11PlaneConfigENS4_11SubsamplingEPK12SkColorSpace15SkYUVColorSpaceb(%"class.cc::ClientImageTransferCacheEntry"* nocapture, %class.SkPixmap*, i32, i32, %class.SkColorSpace*, i32, i1 zeroext) unnamed_addr #1 align 2 {
  %8 = zext i1 %6 to i8
  %9 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2cc29ClientImageTransferCacheEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 1
  store i8 %8, i8* %10, align 8
  %11 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 2
  store i32 %2, i32* %11, align 4
  %12 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 3
  %13 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZN2cc29ClientImageTransferCacheEntry10s_next_id_E, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  store i32 %13, i32* %12, align 8
  %14 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %union.anon* %16 to i8*
  %18 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 8
  %19 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 20, i1 false)
  store %class.SkColorSpace* %4, %class.SkColorSpace** %18, align 8
  %20 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 9
  store i32 %3, i32* %20, align 8
  %21 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 10
  store i32 %5, i32* %21, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false)
  store i8 1, i8* %15, align 8
  switch i32 %2, label %30 [
    i32 0, label %31
    i32 1, label %35
    i32 2, label %35
    i32 3, label %22
    i32 4, label %23
    i32 5, label %24
    i32 6, label %25
    i32 7, label %26
    i32 8, label %27
    i32 9, label %35
    i32 10, label %35
    i32 11, label %28
    i32 12, label %29
  ]

22:                                               ; preds = %7
  br label %35

23:                                               ; preds = %7
  br label %35

24:                                               ; preds = %7
  br label %35

25:                                               ; preds = %7
  br label %35

26:                                               ; preds = %7
  br label %35

27:                                               ; preds = %7
  br label %35

28:                                               ; preds = %7
  br label %35

29:                                               ; preds = %7
  br label %35

30:                                               ; preds = %7
  tail call void @llvm.trap() #14
  unreachable

31:                                               ; preds = %35, %113, %117, %121, %7
  %32 = phi i1 [ true, %7 ], [ false, %121 ], [ false, %117 ], [ false, %113 ], [ false, %35 ]
  %33 = phi i64 [ 0, %7 ], [ %36, %121 ], [ %36, %117 ], [ %36, %113 ], [ %36, %35 ]
  %34 = icmp eq %class.SkColorSpace* %4, null
  br i1 %34, label %42, label %39

35:                                               ; preds = %22, %23, %24, %25, %26, %27, %28, %29, %7, %7, %7, %7
  %36 = phi i64 [ 2, %22 ], [ 2, %23 ], [ 1, %24 ], [ 1, %25 ], [ 4, %26 ], [ 4, %27 ], [ 1, %28 ], [ 1, %29 ], [ 3, %7 ], [ 3, %7 ], [ 3, %7 ], [ 3, %7 ]
  %37 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  store %class.SkPixmap* %1, %class.SkPixmap** %37, align 8
  %38 = icmp eq i64 %36, 1
  br i1 %38, label %31, label %113

39:                                               ; preds = %31
  %40 = tail call i64 @_ZNK12SkColorSpace13writeToMemoryEPv(%class.SkColorSpace* nonnull %4, i8* null) #14
  %41 = add i64 %40, 8
  br label %42

42:                                               ; preds = %31, %39
  %43 = phi i64 [ %41, %39 ], [ 8, %31 ]
  %44 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %43, i64 24) #14
  %45 = extractvalue { i64, i1 } %44, 1
  %46 = extractvalue { i64, i1 } %44, 0
  %47 = icmp ugt i64 %46, 4294967295
  %48 = or i1 %45, %47
  %49 = shl nuw nsw i64 %33, 3
  br i1 %48, label %74, label %50

50:                                               ; preds = %42
  %51 = and i64 %46, 4294967295
  %52 = add nuw nsw i64 %51, %49
  %53 = icmp ugt i64 %52, 4294967295
  br i1 %53, label %74, label %54

54:                                               ; preds = %50
  %55 = and i64 %52, 4294967295
  %56 = add nuw nsw i64 %55, %49
  %57 = icmp ugt i64 %56, 4294967295
  br i1 %57, label %74, label %58

58:                                               ; preds = %54
  %59 = and i64 %56, 4294967295
  %60 = add nuw nsw i64 %59, %49
  %61 = icmp ugt i64 %60, 4294967295
  br i1 %61, label %74, label %62

62:                                               ; preds = %58
  %63 = and i64 %60, 4294967295
  %64 = shl nuw nsw i64 %33, 4
  %65 = add nuw nsw i64 %63, %64
  %66 = icmp ugt i64 %65, 4294967295
  br i1 %66, label %74, label %67

67:                                               ; preds = %62
  %68 = and i64 %65, 4294967295
  %69 = shl nuw nsw i64 %33, 2
  %70 = add nuw nsw i64 %68, %69
  %71 = icmp ult i64 %70, 4294967296
  %72 = and i64 %70, 4294967295
  %73 = zext i1 %71 to i8
  br label %74

74:                                               ; preds = %42, %50, %54, %58, %62, %67
  %75 = phi i64 [ %72, %67 ], [ 0, %62 ], [ 0, %58 ], [ 0, %54 ], [ 0, %50 ], [ 0, %42 ]
  %76 = phi i8 [ %73, %67 ], [ 0, %62 ], [ 0, %58 ], [ 0, %54 ], [ 0, %50 ], [ 0, %42 ]
  br i1 %32, label %77, label %84

77:                                               ; preds = %108, %74
  %78 = phi i8 [ %76, %74 ], [ %110, %108 ]
  %79 = phi i64 [ %75, %74 ], [ %109, %108 ]
  %80 = icmp eq i8 %78, 0
  br i1 %80, label %81, label %82, !prof !3

81:                                               ; preds = %77
  tail call void @llvm.trap() #14
  unreachable

82:                                               ; preds = %77
  %83 = trunc i64 %79 to i32
  store i32 %83, i32* %14, align 4
  ret void

84:                                               ; preds = %74, %108
  %85 = phi i8 [ %110, %108 ], [ %76, %74 ]
  %86 = phi i64 [ %111, %108 ], [ 0, %74 ]
  %87 = phi i64 [ %109, %108 ], [ %75, %74 ]
  %88 = load i8, i8* %15, align 8, !range !4
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %91, !prof !3

90:                                               ; preds = %84
  tail call void @llvm.trap() #14
  unreachable

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 %86
  %93 = load %class.SkPixmap*, %class.SkPixmap** %92, align 8
  %94 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %93, i64 0, i32 2
  %95 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %93, i64 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = tail call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %94, i64 %96) #14
  %98 = icmp eq i8 %85, 0
  br i1 %98, label %108, label %99

99:                                               ; preds = %91
  %100 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %87, i64 %97) #14
  %101 = extractvalue { i64, i1 } %100, 1
  %102 = extractvalue { i64, i1 } %100, 0
  %103 = icmp ugt i64 %102, 4294967295
  %104 = or i1 %101, %103
  %105 = xor i1 %104, true
  %106 = and i64 %102, 4294967295
  %107 = zext i1 %105 to i8
  br label %108

108:                                              ; preds = %91, %99
  %109 = phi i64 [ %106, %99 ], [ 0, %91 ]
  %110 = phi i8 [ %107, %99 ], [ 0, %91 ]
  %111 = add nuw nsw i64 %86, 1
  %112 = icmp eq i64 %111, %33
  br i1 %112, label %77, label %84

113:                                              ; preds = %35
  %114 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 1
  %115 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 1
  store %class.SkPixmap* %114, %class.SkPixmap** %115, align 8
  %116 = icmp eq i64 %36, 2
  br i1 %116, label %31, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 2
  %119 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 2
  store %class.SkPixmap* %118, %class.SkPixmap** %119, align 8
  %120 = icmp eq i64 %36, 3
  br i1 %120, label %31, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %1, i64 3
  %123 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 3
  store %class.SkPixmap* %122, %class.SkPixmap** %123, align 8
  br label %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc29ClientImageTransferCacheEntryD2Ev(%"class.cc::ClientImageTransferCacheEntry"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc29ClientImageTransferCacheEntryD0Ev(%"class.cc::ClientImageTransferCacheEntry"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.cc::ClientImageTransferCacheEntry"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc29ClientImageTransferCacheEntry14SerializedSizeEv(%"class.cc::ClientImageTransferCacheEntry"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2cc29ClientImageTransferCacheEntry2IdEv(%"class.cc::ClientImageTransferCacheEntry"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc29ClientImageTransferCacheEntry32ValidateYUVDataBeforeSerializingEv(%"class.cc::ClientImageTransferCacheEntry"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %4 [
    i32 0, label %9
    i32 1, label %5
    i32 2, label %5
    i32 3, label %5
    i32 4, label %5
    i32 5, label %5
    i32 6, label %5
    i32 7, label %5
    i32 8, label %5
    i32 9, label %5
    i32 10, label %5
    i32 11, label %5
    i32 12, label %5
  ]

4:                                                ; preds = %1
  tail call void @llvm.trap() #14
  unreachable

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  %6 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %5, %1
  ret void

10:                                               ; preds = %5
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc29ClientImageTransferCacheEntry9SerializeEN4base4spanIhLm18446744073709551615EEE(%"class.cc::ClientImageTransferCacheEntry"* nocapture readonly, i64, i8*) unnamed_addr #1 align 2 {
  %4 = alloca %"struct.cc::PaintOp::SerializeOptions", align 8
  %5 = alloca %"class.cc::PaintOpWriter", align 8
  %6 = bitcast %"struct.cc::PaintOp::SerializeOptions"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 56, i1 false)
  call void @_ZN2cc7PaintOp16SerializeOptionsC1Ev(%"struct.cc::PaintOp::SerializeOptions"* nonnull %4) #14
  %7 = bitcast %"class.cc::PaintOpWriter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  call void @_ZN2cc13PaintOpWriterC1EPvmRKNS_7PaintOp16SerializeOptionsEb(%"class.cc::PaintOpWriter"* nonnull %5, i8* %2, i64 %1, %"struct.cc::PaintOp::SerializeOptions"* nonnull dereferenceable(56) %4, i1 zeroext false) #14
  %8 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  call void @_ZN2cc13PaintOpWriter5WriteEN10SkYUVAInfo11PlaneConfigE(%"class.cc::PaintOpWriter"* nonnull %5, i32 %9) #14
  %10 = load i32, i32* %8, align 4
  switch i32 %10, label %11 [
    i32 0, label %85
    i32 12, label %12
    i32 1, label %12
    i32 2, label %12
    i32 3, label %12
    i32 4, label %12
    i32 5, label %12
    i32 6, label %12
    i32 7, label %12
    i32 8, label %12
    i32 9, label %12
    i32 10, label %12
    i32 11, label %12
  ]

11:                                               ; preds = %3
  call void @llvm.trap() #14
  unreachable

12:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3, %3
  %13 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !4
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %21, label %16, !prof !3

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 9
  %18 = load i32, i32* %17, align 8
  call void @_ZN2cc13PaintOpWriter5WriteEN10SkYUVAInfo11SubsamplingE(%"class.cc::PaintOpWriter"* nonnull %5, i32 %18) #14
  %19 = load i32, i32* %8, align 4
  %20 = icmp ult i32 %19, 13
  br i1 %20, label %23, label %22

21:                                               ; preds = %12
  call void @llvm.trap() #14
  unreachable

22:                                               ; preds = %16
  call void @llvm.trap() #14
  unreachable

23:                                               ; preds = %16
  %24 = sext i32 %19 to i64
  %25 = getelementptr inbounds [13 x i32], [13 x i32]* @switch.table._ZNK2cc29ClientImageTransferCacheEntry9SerializeEN4base4spanIhLm18446744073709551615EEE, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 1
  %28 = load i8, i8* %27, align 8, !range !4
  %29 = zext i8 %28 to i32
  call void @_ZN2cc13PaintOpWriter5WriteEj(%"class.cc::PaintOpWriter"* nonnull %5, i32 %29) #14
  %30 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 10
  %31 = load i32, i32* %30, align 4
  call void @_ZN2cc13PaintOpWriter5WriteE15SkYUVColorSpace(%"class.cc::PaintOpWriter"* nonnull %5, i32 %31) #14
  %32 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 8
  %33 = load %class.SkColorSpace*, %class.SkColorSpace** %32, align 8
  call void @_ZN2cc13PaintOpWriter5WriteEPK12SkColorSpace(%"class.cc::PaintOpWriter"* nonnull %5, %class.SkColorSpace* %33) #14
  %34 = load i8, i8* %13, align 8, !range !4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %37, !prof !3

36:                                               ; preds = %23
  call void @llvm.trap() #14
  unreachable

37:                                               ; preds = %23
  %38 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %39 = load %class.SkPixmap*, %class.SkPixmap** %38, align 8
  %40 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %39, i64 0, i32 2, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ult i32 %41, 256
  br i1 %42, label %44, label %43, !prof !5

43:                                               ; preds = %37
  call void @llvm.trap() #14
  unreachable

44:                                               ; preds = %37
  %45 = trunc i32 %41 to i8
  call void @_ZN2cc13PaintOpWriter5WriteEh(%"class.cc::PaintOpWriter"* nonnull %5, i8 zeroext %45) #14
  %46 = icmp eq i32 %19, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %44
  %48 = zext i32 %26 to i64
  br label %49

49:                                               ; preds = %68, %47
  %50 = phi i64 [ 0, %47 ], [ %72, %68 ]
  %51 = load i8, i8* %13, align 8, !range !4
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %49
  call void @llvm.trap() #14
  unreachable

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 %50
  %56 = load %class.SkPixmap*, %class.SkPixmap** %55, align 8
  %57 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %56, i64 0, i32 2, i32 1, i32 0
  %58 = load i32, i32* %57, align 4
  call void @_ZN2cc13PaintOpWriter5WriteEi(%"class.cc::PaintOpWriter"* nonnull %5, i32 %58) #14
  %59 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %56, i64 0, i32 2, i32 1, i32 1
  %60 = load i32, i32* %59, align 4
  call void @_ZN2cc13PaintOpWriter5WriteEi(%"class.cc::PaintOpWriter"* nonnull %5, i32 %60) #14
  %61 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %56, i64 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = call i64* @_ZN2cc13PaintOpWriter9WriteSizeEm(%"class.cc::PaintOpWriter"* nonnull %5, i64 %62) #14
  %64 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %56, i64 0, i32 2
  %65 = load i64, i64* %61, align 8
  %66 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %64, i64 %65) #14
  %67 = icmp eq i64 %66, -1
  br i1 %67, label %133, label %68

68:                                               ; preds = %54
  %69 = call i64* @_ZN2cc13PaintOpWriter9WriteSizeEm(%"class.cc::PaintOpWriter"* nonnull %5, i64 %66) #14
  call void @_ZN2cc13PaintOpWriter11AlignMemoryEm(%"class.cc::PaintOpWriter"* nonnull %5, i64 4) #14
  %70 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %56, i64 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZN2cc13PaintOpWriter9WriteDataEmPKv(%"class.cc::PaintOpWriter"* nonnull %5, i64 %66, i8* %71) #14
  %72 = add nuw nsw i64 %50, 1
  %73 = icmp eq i64 %72, %48
  br i1 %73, label %74, label %49

74:                                               ; preds = %68, %44
  %75 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %5, i64 0, i32 4
  %76 = load i8, i8* %75, align 8, !range !4
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %84, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %5, i64 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %5, i64 0, i32 2
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %80, %82
  br i1 %83, label %84, label %133

84:                                               ; preds = %74, %78
  br label %133

85:                                               ; preds = %3
  %86 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 5
  %87 = load %class.SkPixmap*, %class.SkPixmap** %86, align 8
  %88 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %87, i64 0, i32 2, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = icmp ult i32 %89, 256
  br i1 %90, label %92, label %91, !prof !5

91:                                               ; preds = %85
  call void @llvm.trap() #14
  unreachable

92:                                               ; preds = %85
  %93 = trunc i32 %89 to i8
  call void @_ZN2cc13PaintOpWriter5WriteEh(%"class.cc::PaintOpWriter"* nonnull %5, i8 zeroext %93) #14
  %94 = load %class.SkPixmap*, %class.SkPixmap** %86, align 8
  %95 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %94, i64 0, i32 2, i32 1, i32 0
  %96 = load i32, i32* %95, align 4
  call void @_ZN2cc13PaintOpWriter5WriteEi(%"class.cc::PaintOpWriter"* nonnull %5, i32 %96) #14
  %97 = load %class.SkPixmap*, %class.SkPixmap** %86, align 8
  %98 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %97, i64 0, i32 2, i32 1, i32 1
  %99 = load i32, i32* %98, align 4
  call void @_ZN2cc13PaintOpWriter5WriteEi(%"class.cc::PaintOpWriter"* nonnull %5, i32 %99) #14
  %100 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 1
  %101 = load i8, i8* %100, align 8, !range !4
  %102 = zext i8 %101 to i32
  call void @_ZN2cc13PaintOpWriter5WriteEj(%"class.cc::PaintOpWriter"* nonnull %5, i32 %102) #14
  %103 = load %class.SkPixmap*, %class.SkPixmap** %86, align 8
  %104 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %103, i64 0, i32 2
  %105 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %103, i64 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %104, i64 %106) #14
  %108 = icmp eq i64 %107, -1
  br i1 %108, label %133, label %109

109:                                              ; preds = %92
  %110 = call i64* @_ZN2cc13PaintOpWriter9WriteSizeEm(%"class.cc::PaintOpWriter"* nonnull %5, i64 %107) #14
  %111 = load %class.SkPixmap*, %class.SkPixmap** %86, align 8
  %112 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %111, i64 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = call i64* @_ZN2cc13PaintOpWriter9WriteSizeEm(%"class.cc::PaintOpWriter"* nonnull %5, i64 %113) #14
  %115 = load %class.SkPixmap*, %class.SkPixmap** %86, align 8
  %116 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %115, i64 0, i32 2, i32 0, i32 0, i32 0
  %117 = load %class.SkColorSpace*, %class.SkColorSpace** %116, align 8
  call void @_ZN2cc13PaintOpWriter5WriteEPK12SkColorSpace(%"class.cc::PaintOpWriter"* nonnull %5, %class.SkColorSpace* %117) #14
  %118 = getelementptr inbounds %"class.cc::ClientImageTransferCacheEntry", %"class.cc::ClientImageTransferCacheEntry"* %0, i64 0, i32 6
  %119 = load %class.SkColorSpace*, %class.SkColorSpace** %118, align 8
  call void @_ZN2cc13PaintOpWriter5WriteEPK12SkColorSpace(%"class.cc::PaintOpWriter"* nonnull %5, %class.SkColorSpace* %119) #14
  call void @_ZN2cc13PaintOpWriter11AlignMemoryEm(%"class.cc::PaintOpWriter"* nonnull %5, i64 4) #14
  %120 = load %class.SkPixmap*, %class.SkPixmap** %86, align 8
  %121 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %120, i64 0, i32 0
  %122 = load i8*, i8** %121, align 8
  call void @_ZN2cc13PaintOpWriter9WriteDataEmPKv(%"class.cc::PaintOpWriter"* nonnull %5, i64 %107, i8* %122) #14
  %123 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %5, i64 0, i32 4
  %124 = load i8, i8* %123, align 8, !range !4
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %132, label %126

126:                                              ; preds = %109
  %127 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %5, i64 0, i32 1
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds %"class.cc::PaintOpWriter", %"class.cc::PaintOpWriter"* %5, i64 0, i32 2
  %130 = load i64, i64* %129, align 8
  %131 = icmp eq i64 %128, %130
  br i1 %131, label %132, label %133

132:                                              ; preds = %109, %126
  br label %133

133:                                              ; preds = %54, %132, %126, %84, %78, %92
  %134 = phi i1 [ false, %92 ], [ false, %84 ], [ true, %78 ], [ false, %132 ], [ true, %126 ], [ false, %54 ]
  call void @_ZN2cc13PaintOpWriterD1Ev(%"class.cc::PaintOpWriter"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #14
  call void @_ZN2cc7PaintOp16SerializeOptionsD1Ev(%"struct.cc::PaintOp::SerializeOptions"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #14
  ret i1 %134
}

declare void @_ZN2cc7PaintOp16SerializeOptionsC1Ev(%"struct.cc::PaintOp::SerializeOptions"*) unnamed_addr #3

declare void @_ZN2cc13PaintOpWriterC1EPvmRKNS_7PaintOp16SerializeOptionsEb(%"class.cc::PaintOpWriter"*, i8*, i64, %"struct.cc::PaintOp::SerializeOptions"* dereferenceable(56), i1 zeroext) unnamed_addr #3

declare void @_ZN2cc13PaintOpWriter5WriteEN10SkYUVAInfo11PlaneConfigE(%"class.cc::PaintOpWriter"*, i32) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpWriter5WriteEN10SkYUVAInfo11SubsamplingE(%"class.cc::PaintOpWriter"*, i32) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpWriter5WriteEj(%"class.cc::PaintOpWriter"*, i32) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpWriter5WriteE15SkYUVColorSpace(%"class.cc::PaintOpWriter"*, i32) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpWriter5WriteEPK12SkColorSpace(%"class.cc::PaintOpWriter"*, %class.SkColorSpace*) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpWriter5WriteEi(%"class.cc::PaintOpWriter"*, i32) local_unnamed_addr #3

declare i64* @_ZN2cc13PaintOpWriter9WriteSizeEm(%"class.cc::PaintOpWriter"*, i64) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpWriter11AlignMemoryEm(%"class.cc::PaintOpWriter"*, i64) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpWriter9WriteDataEmPKv(%"class.cc::PaintOpWriter"*, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc13PaintOpWriterD1Ev(%"class.cc::PaintOpWriter"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN2cc7PaintOp16SerializeOptionsD1Ev(%"struct.cc::PaintOp::SerializeOptions"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc30ServiceImageTransferCacheEntryC2Ev(%"class.cc::ServiceImageTransferCacheEntry"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc30ServiceImageTransferCacheEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 9
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 11
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 12
  store i8 0, i8* %8, align 8
  %9 = bitcast %class.GrDirectContext** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 36, i1 false)
  %10 = bitcast %"class.std::__1::vector.86"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 33, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc30ServiceImageTransferCacheEntryD2Ev(%"class.cc::ServiceImageTransferCacheEntry"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc30ServiceImageTransferCacheEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 6, i32 0
  %4 = load %class.SkImage*, %class.SkImage** %3, align 8
  %5 = icmp eq %class.SkImage* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImage, %class.SkImage* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImage* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImage* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = ptrtoint i64* %18 to i64
  %22 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 1
  %23 = bitcast i64** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast i64* %18 to i8*
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %16, %20
  %26 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 0
  %28 = load %class.sk_sp.82*, %class.sk_sp.82** %27, align 8
  %29 = icmp eq %class.sk_sp.82* %28, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %25
  %31 = bitcast %class.sk_sp.82* %28 to i8*
  %32 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 1
  %33 = load %class.sk_sp.82*, %class.sk_sp.82** %32, align 8
  %34 = icmp eq %class.sk_sp.82* %33, %28
  br i1 %34, label %56, label %35

35:                                               ; preds = %30, %51
  %36 = phi %class.sk_sp.82* [ %37, %51 ], [ %33, %30 ]
  %37 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %36, i64 -1
  %38 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %37, i64 0, i32 0
  %39 = load %class.SkImage*, %class.SkImage** %38, align 8
  %40 = icmp eq %class.SkImage* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %class.SkImage, %class.SkImage* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %class.SkImage* %39 to %class.SkRefCntBase*
  %47 = bitcast %class.SkImage* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  tail call void %50(%class.SkRefCntBase* nonnull %46) #14
  br label %51

51:                                               ; preds = %45, %41, %35
  %52 = icmp eq %class.sk_sp.82* %37, %28
  br i1 %52, label %53, label %35

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %26 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %30
  %57 = phi i8* [ %55, %53 ], [ %31, %30 ]
  store %class.sk_sp.82* %28, %class.sk_sp.82** %32, align 8
  tail call void @_ZdlPv(i8* %57) #15
  br label %58

58:                                               ; preds = %25, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc30ServiceImageTransferCacheEntryD0Ev(%"class.cc::ServiceImageTransferCacheEntry"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc30ServiceImageTransferCacheEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 6, i32 0
  %4 = load %class.SkImage*, %class.SkImage** %3, align 8
  %5 = icmp eq %class.SkImage* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkImage, %class.SkImage* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkImage* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkImage* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #14
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = icmp eq i64* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = ptrtoint i64* %18 to i64
  %22 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 1
  %23 = bitcast i64** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast i64* %18 to i8*
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %20, %16
  %26 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 0
  %28 = load %class.sk_sp.82*, %class.sk_sp.82** %27, align 8
  %29 = icmp eq %class.sk_sp.82* %28, null
  br i1 %29, label %58, label %30

30:                                               ; preds = %25
  %31 = bitcast %class.sk_sp.82* %28 to i8*
  %32 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 1
  %33 = load %class.sk_sp.82*, %class.sk_sp.82** %32, align 8
  %34 = icmp eq %class.sk_sp.82* %33, %28
  br i1 %34, label %56, label %35

35:                                               ; preds = %30, %51
  %36 = phi %class.sk_sp.82* [ %37, %51 ], [ %33, %30 ]
  %37 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %36, i64 -1
  %38 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %37, i64 0, i32 0
  %39 = load %class.SkImage*, %class.SkImage** %38, align 8
  %40 = icmp eq %class.SkImage* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %class.SkImage, %class.SkImage* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 -1 acq_rel
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %51

45:                                               ; preds = %41
  %46 = bitcast %class.SkImage* %39 to %class.SkRefCntBase*
  %47 = bitcast %class.SkImage* %39 to void (%class.SkRefCntBase*)***
  %48 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %47, align 8
  %49 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %48, i64 2
  %50 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %49, align 8
  tail call void %50(%class.SkRefCntBase* nonnull %46) #14
  br label %51

51:                                               ; preds = %45, %41, %35
  %52 = icmp eq %class.sk_sp.82* %37, %28
  br i1 %52, label %53, label %35

53:                                               ; preds = %51
  %54 = bitcast %"class.std::__1::vector"* %26 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %30
  %57 = phi i8* [ %55, %53 ], [ %31, %30 ]
  store %class.sk_sp.82* %28, %class.sk_sp.82** %32, align 8
  tail call void @_ZdlPv(i8* %57) #15
  br label %58

58:                                               ; preds = %25, %56
  %59 = bitcast %"class.cc::ServiceImageTransferCacheEntry"* %0 to i8*
  tail call void @_ZdlPv(i8* %59) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc30ServiceImageTransferCacheEntryC2EOS0_(%"class.cc::ServiceImageTransferCacheEntry"* nocapture, %"class.cc::ServiceImageTransferCacheEntry"* nocapture dereferenceable(120)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN2cc30ServiceImageTransferCacheEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 1
  %6 = bitcast %class.GrDirectContext** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %class.GrDirectContext** %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 2
  %11 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #14
  %12 = bitcast %"class.std::__1::vector"* %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %9 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast %class.sk_sp.82** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 1
  %19 = bitcast %class.sk_sp.82** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %class.sk_sp.82** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %class.sk_sp.82** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #14
  %26 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 3
  %27 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 3
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5
  %30 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 5
  %31 = bitcast %"class.std::__1::vector.86"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #14
  %32 = bitcast %"class.std::__1::vector.86"* %30 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector.86"* %29 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 5, i32 0, i32 1
  %36 = bitcast i64** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 1
  %39 = bitcast i64** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast i64** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast i64** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast %"class.std::__1::vector.86"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #14
  %46 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 6
  %47 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 6
  %48 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %47, i64 0, i32 0
  %49 = bitcast %class.sk_sp.82* %47 to i64*
  %50 = load i64, i64* %49, align 8
  store %class.SkImage* null, %class.SkImage** %48, align 8
  %51 = bitcast %class.sk_sp.82* %46 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 33, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"class.cc::ServiceImageTransferCacheEntry"* @_ZN2cc30ServiceImageTransferCacheEntryaSEOS0_(%"class.cc::ServiceImageTransferCacheEntry"* returned, %"class.cc::ServiceImageTransferCacheEntry"* nocapture dereferenceable(120)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 1
  %4 = bitcast %class.GrDirectContext** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 1
  %7 = bitcast %class.GrDirectContext** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %11 = load %class.sk_sp.82*, %class.sk_sp.82** %10, align 8
  %12 = icmp eq %class.sk_sp.82* %11, null
  br i1 %12, label %42, label %13

13:                                               ; preds = %2
  %14 = bitcast %class.sk_sp.82* %11 to i8*
  %15 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = load %class.sk_sp.82*, %class.sk_sp.82** %15, align 8
  %17 = icmp eq %class.sk_sp.82* %16, %11
  br i1 %17, label %39, label %18

18:                                               ; preds = %13, %34
  %19 = phi %class.sk_sp.82* [ %20, %34 ], [ %16, %13 ]
  %20 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %19, i64 -1
  %21 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %20, i64 0, i32 0
  %22 = load %class.SkImage*, %class.SkImage** %21, align 8
  %23 = icmp eq %class.SkImage* %22, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %class.SkImage, %class.SkImage* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %class.SkImage* %22 to %class.SkRefCntBase*
  %30 = bitcast %class.SkImage* %22 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  tail call void %33(%class.SkRefCntBase* nonnull %29) #14
  br label %34

34:                                               ; preds = %28, %24, %18
  %35 = icmp eq %class.sk_sp.82* %20, %11
  br i1 %35, label %36, label %18

36:                                               ; preds = %34
  %37 = bitcast %"class.std::__1::vector"* %8 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %13
  %40 = phi i8* [ %38, %36 ], [ %14, %13 ]
  store %class.sk_sp.82* %11, %class.sk_sp.82** %15, align 8
  tail call void @_ZdlPv(i8* %40) #15
  %41 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #14
  br label %42

42:                                               ; preds = %2, %39
  %43 = bitcast %"class.std::__1::vector"* %9 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector"* %8 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 2, i32 0, i32 1
  %47 = bitcast %class.sk_sp.82** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 1
  %50 = bitcast %class.sk_sp.82** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %class.sk_sp.82** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast %class.sk_sp.82** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #14
  %57 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 3
  store i32 %58, i32* %59, align 8
  %60 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5
  %61 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 5
  %62 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %60, i64 0, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = icmp eq i64* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %42
  %66 = ptrtoint i64* %63 to i64
  %67 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 1
  %68 = bitcast i64** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast i64* %63 to i8*
  tail call void @_ZdlPv(i8* %69) #15
  %70 = bitcast %"class.std::__1::vector.86"* %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #14
  br label %71

71:                                               ; preds = %42, %65
  %72 = bitcast %"class.std::__1::vector.86"* %61 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector.86"* %60 to i64*
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 5, i32 0, i32 1
  %76 = bitcast i64** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 1
  %79 = bitcast i64** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast i64** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %84 = bitcast i64** %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = bitcast %"class.std::__1::vector.86"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #14
  %86 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 6
  %87 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 6
  %88 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %87, i64 0, i32 0
  %89 = bitcast %class.sk_sp.82* %87 to i64*
  %90 = load i64, i64* %89, align 8
  store %class.SkImage* null, %class.SkImage** %88, align 8
  %91 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %86, i64 0, i32 0
  %92 = load %class.SkImage*, %class.SkImage** %91, align 8
  %93 = bitcast %class.sk_sp.82* %86 to i64*
  store i64 %90, i64* %93, align 8
  %94 = icmp eq %class.SkImage* %92, null
  br i1 %94, label %105, label %95

95:                                               ; preds = %71
  %96 = getelementptr inbounds %class.SkImage, %class.SkImage* %92, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = atomicrmw add i32* %96, i32 -1 acq_rel
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %99, label %105

99:                                               ; preds = %95
  %100 = bitcast %class.SkImage* %92 to %class.SkRefCntBase*
  %101 = bitcast %class.SkImage* %92 to void (%class.SkRefCntBase*)***
  %102 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %101, align 8
  %103 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %102, i64 2
  %104 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %103, align 8
  tail call void %104(%class.SkRefCntBase* nonnull %100) #14
  br label %105

105:                                              ; preds = %71, %95, %99
  %106 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* align 8 %107, i64 33, i1 false)
  ret %"class.cc::ServiceImageTransferCacheEntry"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc30ServiceImageTransferCacheEntry29BuildFromHardwareDecodedImageEP15GrDirectContextNSt3__16vectorI5sk_spI7SkImageENS3_9allocatorIS7_EEEEN10SkYUVAInfo11PlaneConfigENSB_11SubsamplingE15SkYUVColorSpacemb(%"class.cc::ServiceImageTransferCacheEntry"*, %class.GrDirectContext*, %"class.std::__1::vector"* nocapture, i32, i32, i32, i64, i1 zeroext) local_unnamed_addr #1 align 2 {
  %9 = alloca %class.sk_sp.82, align 8
  %10 = alloca %class.sk_sp.82, align 8
  %11 = alloca %class.sk_sp, align 8
  %12 = zext i1 %7 to i8
  %13 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 1
  store %class.GrDirectContext* %1, %class.GrDirectContext** %13, align 8
  %14 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 11
  store i64 %6, i64* %14, align 8
  br i1 %7, label %15, label %165

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %17 = bitcast %class.sk_sp.82** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %2 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %163, label %22

22:                                               ; preds = %15
  %23 = bitcast %class.sk_sp.82* %9 to i8*
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %9, i64 0, i32 0
  %26 = bitcast %class.sk_sp.82* %9 to i64*
  %27 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5
  %28 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 1
  %29 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast i64** %28 to i64*
  %31 = bitcast %"class.std::__1::vector.86"* %27 to i64*
  %32 = bitcast i64** %29 to i64*
  %33 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %27, i64 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %159, %22
  %35 = phi %class.GrDirectContext* [ %1, %22 ], [ %160, %159 ]
  %36 = phi i64 [ %20, %22 ], [ %155, %159 ]
  %37 = phi i64 [ 0, %22 ], [ %153, %159 ]
  %38 = phi i64 [ 0, %22 ], [ %151, %159 ]
  %39 = phi i8 [ 1, %22 ], [ %152, %159 ]
  %40 = inttoptr i64 %36 to %class.sk_sp.82*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #14
  %41 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %40, i64 %37, i32 0
  %42 = load %class.SkImage*, %class.SkImage** %41, align 8
  call void @_ZNK7SkImage16makeTextureImageEP15GrDirectContext11GrMipmapped10SkBudgeted(%class.sk_sp.82* nonnull sret %9, %class.SkImage* %42, %class.GrDirectContext* %35, i1 zeroext true, i1 zeroext false) #14
  %43 = load %class.sk_sp.82*, %class.sk_sp.82** %24, align 8
  %44 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %43, i64 %37
  %45 = load i64, i64* %26, align 8
  store %class.SkImage* null, %class.SkImage** %25, align 8
  %46 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %44, i64 0, i32 0
  %47 = load %class.SkImage*, %class.SkImage** %46, align 8
  %48 = bitcast %class.sk_sp.82* %44 to i64*
  store i64 %45, i64* %48, align 8
  %49 = icmp eq %class.SkImage* %47, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %34
  %51 = getelementptr inbounds %class.SkImage, %class.SkImage* %47, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 -1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = bitcast %class.SkImage* %47 to %class.SkRefCntBase*
  %56 = bitcast %class.SkImage* %47 to void (%class.SkRefCntBase*)***
  %57 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, i64 2
  %59 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, align 8
  call void %59(%class.SkRefCntBase* nonnull %55) #14
  br label %60

60:                                               ; preds = %34, %50, %54
  %61 = load %class.SkImage*, %class.SkImage** %25, align 8
  %62 = icmp eq %class.SkImage* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %class.SkImage, %class.SkImage* %61, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %73

67:                                               ; preds = %63
  %68 = bitcast %class.SkImage* %61 to %class.SkRefCntBase*
  %69 = bitcast %class.SkImage* %61 to void (%class.SkRefCntBase*)***
  %70 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %69, align 8
  %71 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %70, i64 2
  %72 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, align 8
  call void %72(%class.SkRefCntBase* nonnull %68) #14
  br label %73

73:                                               ; preds = %60, %63, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #14
  %74 = load %class.sk_sp.82*, %class.sk_sp.82** %24, align 8
  %75 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %74, i64 %37, i32 0
  %76 = load %class.SkImage*, %class.SkImage** %75, align 8
  %77 = icmp eq %class.SkImage* %76, null
  br i1 %77, label %274, label %78

78:                                               ; preds = %73
  %79 = call i64 @_ZNK7SkImage11textureSizeEv(%class.SkImage* nonnull %76) #14
  %80 = load i64*, i64** %28, align 8
  %81 = load i64*, i64** %29, align 8
  %82 = icmp ult i64* %80, %81
  %83 = ptrtoint i64* %81 to i64
  br i1 %82, label %84, label %87

84:                                               ; preds = %78
  store i64 %79, i64* %80, align 8
  %85 = getelementptr inbounds i64, i64* %80, i64 1
  %86 = ptrtoint i64* %85 to i64
  store i64 %86, i64* %30, align 8
  br label %139

87:                                               ; preds = %78
  %88 = ptrtoint i64* %80 to i64
  %89 = load i64, i64* %31, align 8
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 3
  %92 = add nsw i64 %91, 1
  %93 = icmp ugt i64 %92, 2305843009213693951
  br i1 %93, label %94, label %96

94:                                               ; preds = %87
  %95 = bitcast %"class.std::__1::vector.86"* %27 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %95) #16
  unreachable

96:                                               ; preds = %87
  %97 = sub i64 %83, %89
  %98 = ashr exact i64 %97, 3
  %99 = icmp ult i64 %98, 1152921504606846975
  br i1 %99, label %100, label %108

100:                                              ; preds = %96
  %101 = ashr exact i64 %97, 2
  %102 = icmp ult i64 %101, %92
  %103 = select i1 %102, i64 %92, i64 %101
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %113, label %105

105:                                              ; preds = %100
  %106 = icmp ugt i64 %103, 2305843009213693951
  br i1 %106, label %107, label %108

107:                                              ; preds = %105
  call void @abort() #16
  unreachable

108:                                              ; preds = %105, %96
  %109 = phi i64 [ %103, %105 ], [ 2305843009213693951, %96 ]
  %110 = shl i64 %109, 3
  %111 = call i8* @_Znwm(i64 %110) #15
  %112 = bitcast i8* %111 to i64*
  br label %113

113:                                              ; preds = %108, %100
  %114 = phi i64 [ %109, %108 ], [ 0, %100 ]
  %115 = phi i64* [ %112, %108 ], [ null, %100 ]
  %116 = getelementptr inbounds i64, i64* %115, i64 %91
  %117 = getelementptr inbounds i64, i64* %115, i64 %114
  %118 = ptrtoint i64* %117 to i64
  store i64 %79, i64* %116, align 8
  %119 = getelementptr inbounds i64, i64* %116, i64 1
  %120 = ptrtoint i64* %119 to i64
  %121 = load i64*, i64** %33, align 8
  %122 = load i64, i64* %30, align 8
  %123 = ptrtoint i64* %121 to i64
  %124 = sub i64 %122, %123
  %125 = ashr exact i64 %124, 3
  %126 = sub nsw i64 0, %125
  %127 = getelementptr inbounds i64, i64* %116, i64 %126
  %128 = ptrtoint i64* %127 to i64
  %129 = icmp sgt i64 %124, 0
  br i1 %129, label %130, label %134

130:                                              ; preds = %113
  %131 = bitcast i64* %127 to i8*
  %132 = bitcast i64* %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 %124, i1 false) #14
  %133 = load i64*, i64** %33, align 8
  br label %134

134:                                              ; preds = %130, %113
  %135 = phi i64* [ %121, %113 ], [ %133, %130 ]
  store i64 %128, i64* %31, align 8
  store i64 %120, i64* %30, align 8
  store i64 %118, i64* %32, align 8
  %136 = icmp eq i64* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %134
  %138 = bitcast i64* %135 to i8*
  call void @_ZdlPv(i8* %138) #15
  br label %139

139:                                              ; preds = %84, %134, %137
  %140 = icmp eq i8 %39, 0
  br i1 %140, label %150, label %141

141:                                              ; preds = %139
  %142 = load i64*, i64** %28, align 8
  %143 = getelementptr inbounds i64, i64* %142, i64 -1
  %144 = load i64, i64* %143, align 8
  %145 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %38, i64 %144) #14
  %146 = extractvalue { i64, i1 } %145, 1
  %147 = extractvalue { i64, i1 } %145, 0
  %148 = xor i1 %146, true
  %149 = zext i1 %148 to i8
  br label %150

150:                                              ; preds = %139, %141
  %151 = phi i64 [ %147, %141 ], [ 0, %139 ]
  %152 = phi i8 [ %149, %141 ], [ 0, %139 ]
  %153 = add nuw i64 %37, 1
  %154 = load i64, i64* %17, align 8
  %155 = load i64, i64* %19, align 8
  %156 = sub i64 %154, %155
  %157 = ashr exact i64 %156, 3
  %158 = icmp ult i64 %153, %157
  br i1 %158, label %159, label %161

159:                                              ; preds = %150
  %160 = load %class.GrDirectContext*, %class.GrDirectContext** %13, align 8
  br label %34

161:                                              ; preds = %150
  %162 = icmp eq i8 %152, 0
  br i1 %162, label %274, label %163, !prof !3

163:                                              ; preds = %15, %161
  %164 = phi i64 [ %151, %161 ], [ 0, %15 ]
  store i64 %164, i64* %14, align 8
  br label %165

165:                                              ; preds = %163, %8
  %166 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2
  %167 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %166, i64 0, i32 0, i32 0
  %168 = load %class.sk_sp.82*, %class.sk_sp.82** %167, align 8
  %169 = icmp eq %class.sk_sp.82* %168, null
  br i1 %169, label %199, label %170

170:                                              ; preds = %165
  %171 = bitcast %class.sk_sp.82* %168 to i8*
  %172 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 1
  %173 = load %class.sk_sp.82*, %class.sk_sp.82** %172, align 8
  %174 = icmp eq %class.sk_sp.82* %173, %168
  br i1 %174, label %196, label %175

175:                                              ; preds = %170, %191
  %176 = phi %class.sk_sp.82* [ %177, %191 ], [ %173, %170 ]
  %177 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %176, i64 -1
  %178 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %177, i64 0, i32 0
  %179 = load %class.SkImage*, %class.SkImage** %178, align 8
  %180 = icmp eq %class.SkImage* %179, null
  br i1 %180, label %191, label %181

181:                                              ; preds = %175
  %182 = getelementptr inbounds %class.SkImage, %class.SkImage* %179, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = atomicrmw add i32* %182, i32 -1 acq_rel
  %184 = icmp eq i32 %183, 1
  br i1 %184, label %185, label %191

185:                                              ; preds = %181
  %186 = bitcast %class.SkImage* %179 to %class.SkRefCntBase*
  %187 = bitcast %class.SkImage* %179 to void (%class.SkRefCntBase*)***
  %188 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %187, align 8
  %189 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %188, i64 2
  %190 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %189, align 8
  call void %190(%class.SkRefCntBase* nonnull %186) #14
  br label %191

191:                                              ; preds = %185, %181, %175
  %192 = icmp eq %class.sk_sp.82* %177, %168
  br i1 %192, label %193, label %175

193:                                              ; preds = %191
  %194 = bitcast %"class.std::__1::vector"* %166 to i8**
  %195 = load i8*, i8** %194, align 8
  br label %196

196:                                              ; preds = %193, %170
  %197 = phi i8* [ %195, %193 ], [ %171, %170 ]
  store %class.sk_sp.82* %168, %class.sk_sp.82** %172, align 8
  call void @_ZdlPv(i8* %197) #15
  %198 = bitcast %"class.std::__1::vector"* %166 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %198, i8 0, i64 24, i1 false) #14
  br label %199

199:                                              ; preds = %165, %196
  %200 = bitcast %"class.std::__1::vector"* %2 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.std::__1::vector"* %166 to i64*
  store i64 %201, i64* %202, align 8
  %203 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %204 = bitcast %class.sk_sp.82** %203 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 1
  %207 = bitcast %class.sk_sp.82** %206 to i64*
  store i64 %205, i64* %207, align 8
  %208 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %209 = bitcast %class.sk_sp.82** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %212 = bitcast %class.sk_sp.82** %211 to i64*
  store i64 %210, i64* %212, align 8
  %213 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %213, i8 0, i64 24, i1 false) #14
  %214 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 3
  store i32 %3, i32* %214, align 8
  %215 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %216 = bitcast i8* %215 to i64*
  %217 = zext i32 %4 to i64
  %218 = shl nuw i64 %217, 32
  %219 = or i64 %218, 1
  store i64 %219, i64* %216, align 8
  %220 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %221 = bitcast i8* %220 to i64*
  %222 = zext i32 %5 to i64
  %223 = shl nuw i64 %222, 32
  %224 = or i64 %223, 1
  store i64 %224, i64* %221, align 8
  %225 = bitcast %class.sk_sp.82* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %225) #14
  %226 = load %class.GrDirectContext*, %class.GrDirectContext** %13, align 8
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp* nonnull sret %11) #14
  call fastcc void @_ZN2cc12_GLOBAL__N_130MakeYUVImageFromUploadedPlanesEP15GrDirectContextRKNSt3__16vectorI5sk_spI7SkImageENS3_9allocatorIS7_EEEEN10SkYUVAInfo11PlaneConfigENSD_11SubsamplingE15SkYUVColorSpaceS5_I12SkColorSpaceE(%class.sk_sp.82* nonnull sret %10, %class.GrDirectContext* %226, %"class.std::__1::vector"* dereferenceable(24) %166, i32 %3, i32 %4, i32 %5, %class.sk_sp* nonnull %11)
  %227 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 6
  %228 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %10, i64 0, i32 0
  %229 = bitcast %class.sk_sp.82* %10 to i64*
  %230 = load i64, i64* %229, align 8
  store %class.SkImage* null, %class.SkImage** %228, align 8
  %231 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %227, i64 0, i32 0
  %232 = load %class.SkImage*, %class.SkImage** %231, align 8
  %233 = bitcast %class.sk_sp.82* %227 to i64*
  store i64 %230, i64* %233, align 8
  %234 = icmp eq %class.SkImage* %232, null
  br i1 %234, label %245, label %235

235:                                              ; preds = %199
  %236 = getelementptr inbounds %class.SkImage, %class.SkImage* %232, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = atomicrmw add i32* %236, i32 -1 acq_rel
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %239, label %245

239:                                              ; preds = %235
  %240 = bitcast %class.SkImage* %232 to %class.SkRefCntBase*
  %241 = bitcast %class.SkImage* %232 to void (%class.SkRefCntBase*)***
  %242 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %241, align 8
  %243 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %242, i64 2
  %244 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %243, align 8
  call void %244(%class.SkRefCntBase* nonnull %240) #14
  br label %245

245:                                              ; preds = %199, %235, %239
  %246 = load %class.SkImage*, %class.SkImage** %228, align 8
  %247 = icmp eq %class.SkImage* %246, null
  br i1 %247, label %258, label %248

248:                                              ; preds = %245
  %249 = getelementptr inbounds %class.SkImage, %class.SkImage* %246, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = atomicrmw add i32* %249, i32 -1 acq_rel
  %251 = icmp eq i32 %250, 1
  br i1 %251, label %252, label %258

252:                                              ; preds = %248
  %253 = bitcast %class.SkImage* %246 to %class.SkRefCntBase*
  %254 = bitcast %class.SkImage* %246 to void (%class.SkRefCntBase*)***
  %255 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %254, align 8
  %256 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %255, i64 2
  %257 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %256, align 8
  call void %257(%class.SkRefCntBase* nonnull %253) #14
  br label %258

258:                                              ; preds = %245, %248, %252
  %259 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %260 = load %class.SkColorSpace*, %class.SkColorSpace** %259, align 8
  %261 = icmp eq %class.SkColorSpace* %260, null
  br i1 %261, label %268, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %260, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = atomicrmw add i32* %263, i32 -1 acq_rel
  %265 = icmp eq i32 %264, 1
  br i1 %265, label %266, label %268

266:                                              ; preds = %262
  %267 = bitcast %class.SkColorSpace* %260 to i8*
  call void @_ZdlPv(i8* %267) #15
  br label %268

268:                                              ; preds = %258, %262, %266
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %225) #14
  %269 = load %class.SkImage*, %class.SkImage** %231, align 8
  %270 = icmp eq %class.SkImage* %269, null
  br i1 %270, label %274, label %271

271:                                              ; preds = %268
  %272 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 9
  store i8 %12, i8* %272, align 8
  %273 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 12
  store i8 1, i8* %273, align 8
  br label %274

274:                                              ; preds = %73, %161, %268, %271
  %275 = phi i1 [ true, %271 ], [ false, %268 ], [ false, %161 ], [ false, %73 ]
  ret i1 %275
}

declare void @_ZNK7SkImage16makeTextureImageEP15GrDirectContext11GrMipmapped10SkBudgeted(%class.sk_sp.82* sret, %class.SkImage*, %class.GrDirectContext*, i1 zeroext, i1 zeroext) local_unnamed_addr #3

declare i64 @_ZNK7SkImage11textureSizeEv(%class.SkImage*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2cc12_GLOBAL__N_130MakeYUVImageFromUploadedPlanesEP15GrDirectContextRKNSt3__16vectorI5sk_spI7SkImageENS3_9allocatorIS7_EEEEN10SkYUVAInfo11PlaneConfigENSD_11SubsamplingE15SkYUVColorSpaceS5_I12SkColorSpaceE(%class.sk_sp.82* noalias nocapture sret, %class.GrDirectContext*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i32, i32, i32, %class.sk_sp* nocapture) unnamed_addr #1 {
  %8 = alloca %"struct.std::__1::array.122", align 8
  %9 = alloca %class.GrBackendTexture, align 8
  %10 = alloca %class.SkYUVAInfo, align 4
  %11 = alloca %class.GrYUVABackendTextures, align 8
  %12 = alloca %class.sk_sp.82, align 8
  %13 = alloca %class.sk_sp, align 8
  %14 = getelementptr inbounds %"struct.std::__1::array.122", %"struct.std::__1::array.122"* %8, i64 0, i32 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 704, i8* nonnull %14) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 704, i1 false)
  %15 = getelementptr inbounds %"struct.std::__1::array.122", %"struct.std::__1::array.122"* %8, i64 0, i32 0, i64 0
  call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* nonnull %15) #14
  %16 = getelementptr inbounds %"struct.std::__1::array.122", %"struct.std::__1::array.122"* %8, i64 0, i32 0, i64 1
  call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %16) #14
  %17 = getelementptr inbounds %"struct.std::__1::array.122", %"struct.std::__1::array.122"* %8, i64 0, i32 0, i64 2
  call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %17) #14
  %18 = getelementptr inbounds %"struct.std::__1::array.122", %"struct.std::__1::array.122"* %8, i64 0, i32 0, i64 3
  call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %18) #14
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %20 = bitcast %class.sk_sp.82** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %2 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %21, %23
  %25 = inttoptr i64 %23 to %class.sk_sp.82*
  br i1 %24, label %50, label %26

26:                                               ; preds = %7
  %27 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %9, i64 0, i32 0
  br label %35

28:                                               ; preds = %35
  %29 = load i64, i64* %20, align 8
  %30 = load i64, i64* %22, align 8
  %31 = sub i64 %29, %30
  %32 = ashr exact i64 %31, 3
  %33 = icmp ult i64 %45, %32
  %34 = inttoptr i64 %30 to %class.sk_sp.82*
  br i1 %33, label %35, label %48

35:                                               ; preds = %26, %28
  %36 = phi %class.sk_sp.82* [ %25, %26 ], [ %34, %28 ]
  %37 = phi i64 [ 0, %26 ], [ %45, %28 ]
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %27) #14
  %38 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %36, i64 %37, i32 0
  %39 = load %class.SkImage*, %class.SkImage** %38, align 8
  call void @_ZNK7SkImage17getBackendTextureEbP15GrSurfaceOrigin(%class.GrBackendTexture* nonnull sret %9, %class.SkImage* %39, i1 zeroext true, i32* null) #14
  %40 = getelementptr inbounds %"struct.std::__1::array.122", %"struct.std::__1::array.122"* %8, i64 0, i32 0, i64 %37
  %41 = call dereferenceable(176) %class.GrBackendTexture* @_ZN16GrBackendTextureaSERKS_(%class.GrBackendTexture* %40, %class.GrBackendTexture* nonnull dereferenceable(176) %9) #14
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %27) #14
  %42 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %40, i64 0, i32 0
  %43 = load i8, i8* %42, align 8, !range !4
  %44 = icmp eq i8 %43, 0
  %45 = add nuw i64 %37, 1
  br i1 %44, label %46, label %28

46:                                               ; preds = %35
  %47 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %47, align 8
  br label %170

48:                                               ; preds = %28
  %49 = inttoptr i64 %30 to %class.sk_sp.82*
  br label %50

50:                                               ; preds = %48, %7
  %51 = phi %class.sk_sp.82* [ %25, %7 ], [ %49, %48 ]
  %52 = bitcast %class.SkYUVAInfo* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #14
  %53 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %51, i64 0, i32 0
  %54 = bitcast %class.SkYUVAInfo* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %54, i8 -86, i64 32, i1 false)
  %55 = load %class.SkImage*, %class.SkImage** %53, align 8
  %56 = getelementptr inbounds %class.SkImage, %class.SkImage* %55, i64 0, i32 2, i32 1, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %class.SkImage, %class.SkImage* %55, i64 0, i32 2, i32 1, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = shl nuw i64 %60, 32
  %62 = zext i32 %57 to i64
  %63 = or i64 %61, %62
  call void @_ZN10SkYUVAInfoC1E7SkISizeNS_11PlaneConfigENS_11SubsamplingE15SkYUVColorSpace15SkEncodedOriginNS_6SitingES5_(%class.SkYUVAInfo* nonnull %10, i64 %63, i32 %3, i32 %4, i32 %5, i32 1, i32 0, i32 0) #14
  %64 = bitcast %class.GrYUVABackendTextures* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 744, i8* nonnull %64) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 744, i1 false)
  call void @_ZN21GrYUVABackendTexturesC1ERK10SkYUVAInfoPK16GrBackendTexture15GrSurfaceOrigin(%class.GrYUVABackendTextures* nonnull %11, %class.SkYUVAInfo* nonnull dereferenceable(32) %10, %class.GrBackendTexture* nonnull %15, i32 0) #14
  %65 = call i8* @_Znwm(i64 24) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 24, i1 false) #14
  %66 = load i64, i64* %20, align 8
  %67 = load i64, i64* %22, align 8
  %68 = sub i64 %66, %67
  %69 = ashr exact i64 %68, 3
  %70 = icmp eq i64 %68, 0
  %71 = inttoptr i64 %67 to %class.sk_sp.82*
  %72 = inttoptr i64 %66 to %class.sk_sp.82*
  br i1 %70, label %140, label %73

73:                                               ; preds = %50
  %74 = icmp ugt i64 %69, 2305843009213693951
  br i1 %74, label %75, label %77

75:                                               ; preds = %73
  %76 = bitcast i8* %65 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %76) #16
  unreachable

77:                                               ; preds = %73
  %78 = call i8* @_Znwm(i64 %68) #15
  %79 = bitcast i8* %78 to %class.sk_sp.82*
  %80 = getelementptr inbounds i8, i8* %65, i64 8
  %81 = bitcast i8* %80 to i8**
  store i8* %78, i8** %81, align 8
  %82 = bitcast i8* %65 to i8**
  store i8* %78, i8** %82, align 8
  %83 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %79, i64 %69
  %84 = getelementptr inbounds i8, i8* %65, i64 16
  %85 = bitcast i8* %84 to %class.sk_sp.82**
  store %class.sk_sp.82* %83, %class.sk_sp.82** %85, align 8
  %86 = bitcast i8* %80 to i64*
  %87 = ptrtoint i8* %78 to i64
  %88 = icmp eq %class.sk_sp.82* %71, %72
  br i1 %88, label %138, label %89

89:                                               ; preds = %77
  %90 = getelementptr %class.sk_sp.82, %class.sk_sp.82* %72, i64 -1, i32 0
  %91 = bitcast %class.SkImage** %90 to i8*
  %92 = sub i64 0, %67
  %93 = getelementptr i8, i8* %91, i64 %92
  %94 = ptrtoint i8* %93 to i64
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 3
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %115, label %99

99:                                               ; preds = %89, %110
  %100 = phi %class.sk_sp.82* [ %112, %110 ], [ %79, %89 ]
  %101 = phi %class.sk_sp.82* [ %111, %110 ], [ %71, %89 ]
  %102 = phi i64 [ %113, %110 ], [ %97, %89 ]
  %103 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %100, i64 0, i32 0
  %104 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %101, i64 0, i32 0
  %105 = load %class.SkImage*, %class.SkImage** %104, align 8
  %106 = icmp eq %class.SkImage* %105, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %99
  %108 = getelementptr inbounds %class.SkImage, %class.SkImage* %105, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw add i32* %108, i32 1 monotonic
  br label %110

110:                                              ; preds = %107, %99
  store %class.SkImage* %105, %class.SkImage** %103, align 8
  %111 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %101, i64 1
  %112 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %100, i64 1
  %113 = add i64 %102, -1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %99, !llvm.loop !6

115:                                              ; preds = %110, %89
  %116 = phi %class.sk_sp.82* [ undef, %89 ], [ %112, %110 ]
  %117 = phi %class.sk_sp.82* [ %79, %89 ], [ %112, %110 ]
  %118 = phi %class.sk_sp.82* [ %71, %89 ], [ %111, %110 ]
  %119 = icmp ult i8* %93, inttoptr (i64 24 to i8*)
  br i1 %119, label %135, label %120

120:                                              ; preds = %115, %190
  %121 = phi %class.sk_sp.82* [ %192, %190 ], [ %117, %115 ]
  %122 = phi %class.sk_sp.82* [ %191, %190 ], [ %118, %115 ]
  %123 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %121, i64 0, i32 0
  %124 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %122, i64 0, i32 0
  %125 = load %class.SkImage*, %class.SkImage** %124, align 8
  %126 = icmp eq %class.SkImage* %125, null
  br i1 %126, label %130, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds %class.SkImage, %class.SkImage* %125, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = atomicrmw add i32* %128, i32 1 monotonic
  br label %130

130:                                              ; preds = %127, %120
  store %class.SkImage* %125, %class.SkImage** %123, align 8
  %131 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %121, i64 1, i32 0
  %132 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %122, i64 1, i32 0
  %133 = load %class.SkImage*, %class.SkImage** %132, align 8
  %134 = icmp eq %class.SkImage* %133, null
  br i1 %134, label %174, label %171

135:                                              ; preds = %190, %115
  %136 = phi %class.sk_sp.82* [ %116, %115 ], [ %192, %190 ]
  %137 = ptrtoint %class.sk_sp.82* %136 to i64
  br label %138

138:                                              ; preds = %135, %77
  %139 = phi i64 [ %87, %77 ], [ %137, %135 ]
  store i64 %139, i64* %86, align 8
  br label %140

140:                                              ; preds = %50, %138
  %141 = bitcast %class.sk_sp.82* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #14
  %142 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %12, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %142, align 8
  %143 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %1, i64 0, i32 0
  %144 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %145 = bitcast %class.sk_sp* %6 to i64*
  %146 = load i64, i64* %145, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %144, align 8
  %147 = bitcast %class.sk_sp* %13 to i64*
  store i64 %146, i64* %147, align 8
  call void @_ZN7SkImage20MakeFromYUVATexturesEP18GrRecordingContextRK21GrYUVABackendTextures5sk_spI12SkColorSpaceEPFvPvES8_(%class.sk_sp.82* nonnull sret %12, %class.GrRecordingContext* %143, %class.GrYUVABackendTextures* nonnull dereferenceable(744) %11, %class.sk_sp* nonnull %13, void (i8*)* nonnull @_ZN2cc12_GLOBAL__N_114ReleaseContextEPv, i8* nonnull %65) #14
  %148 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  %149 = load %class.SkColorSpace*, %class.SkColorSpace** %148, align 8
  %150 = icmp eq %class.SkColorSpace* %149, null
  br i1 %150, label %157, label %151

151:                                              ; preds = %140
  %152 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = atomicrmw add i32* %152, i32 -1 acq_rel
  %154 = icmp eq i32 %153, 1
  br i1 %154, label %155, label %157

155:                                              ; preds = %151
  %156 = bitcast %class.SkColorSpace* %149 to i8*
  call void @_ZdlPv(i8* %156) #15
  br label %157

157:                                              ; preds = %140, %151, %155
  %158 = load %class.SkImage*, %class.SkImage** %142, align 8
  %159 = icmp eq %class.SkImage* %158, null
  br i1 %159, label %160, label %162

160:                                              ; preds = %157
  %161 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %161, align 8
  br label %165

162:                                              ; preds = %157
  %163 = ptrtoint %class.SkImage* %158 to i64
  store %class.SkImage* null, %class.SkImage** %142, align 8
  %164 = bitcast %class.sk_sp.82* %0 to i64*
  store i64 %163, i64* %164, align 8
  br label %165

165:                                              ; preds = %160, %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #14
  %166 = getelementptr inbounds %class.GrYUVABackendTextures, %class.GrYUVABackendTextures* %11, i64 0, i32 1, i32 0, i64 3
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* %166) #14
  %167 = getelementptr inbounds %class.GrYUVABackendTextures, %class.GrYUVABackendTextures* %11, i64 0, i32 1, i32 0, i64 2
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* %167) #14
  %168 = getelementptr inbounds %class.GrYUVABackendTextures, %class.GrYUVABackendTextures* %11, i64 0, i32 1, i32 0, i64 1
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* %168) #14
  %169 = getelementptr inbounds %class.GrYUVABackendTextures, %class.GrYUVABackendTextures* %11, i64 0, i32 1, i32 0, i64 0
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* %169) #14
  call void @llvm.lifetime.end.p0i8(i64 744, i8* nonnull %64) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #14
  br label %170

170:                                              ; preds = %46, %165
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* %18) #14
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* %17) #14
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* %16) #14
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 704, i8* nonnull %14) #14
  ret void

171:                                              ; preds = %130
  %172 = getelementptr inbounds %class.SkImage, %class.SkImage* %133, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = atomicrmw add i32* %172, i32 1 monotonic
  br label %174

174:                                              ; preds = %171, %130
  store %class.SkImage* %133, %class.SkImage** %131, align 8
  %175 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %121, i64 2, i32 0
  %176 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %122, i64 2, i32 0
  %177 = load %class.SkImage*, %class.SkImage** %176, align 8
  %178 = icmp eq %class.SkImage* %177, null
  br i1 %178, label %182, label %179

179:                                              ; preds = %174
  %180 = getelementptr inbounds %class.SkImage, %class.SkImage* %177, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = atomicrmw add i32* %180, i32 1 monotonic
  br label %182

182:                                              ; preds = %179, %174
  store %class.SkImage* %177, %class.SkImage** %175, align 8
  %183 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %121, i64 3, i32 0
  %184 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %122, i64 3, i32 0
  %185 = load %class.SkImage*, %class.SkImage** %184, align 8
  %186 = icmp eq %class.SkImage* %185, null
  br i1 %186, label %190, label %187

187:                                              ; preds = %182
  %188 = getelementptr inbounds %class.SkImage, %class.SkImage* %185, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = atomicrmw add i32* %188, i32 1 monotonic
  br label %190

190:                                              ; preds = %187, %182
  store %class.SkImage* %185, %class.SkImage** %183, align 8
  %191 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %122, i64 4
  %192 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %121, i64 4
  %193 = icmp eq %class.sk_sp.82* %191, %72
  br i1 %193, label %135, label %120
}

declare void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp* sret) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2cc30ServiceImageTransferCacheEntry10CachedSizeEv(%"class.cc::ServiceImageTransferCacheEntry"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 11
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc30ServiceImageTransferCacheEntry11DeserializeEP15GrDirectContextN4base4spanIKhLm18446744073709551615EEE(%"class.cc::ServiceImageTransferCacheEntry"*, %class.GrDirectContext*, i64, i8*) unnamed_addr #1 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::vector.106", align 8
  %8 = alloca %"struct.cc::PaintOp::DeserializeOptions", align 8
  %9 = alloca %"class.cc::PaintOpReader", align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %class.sk_sp, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca %struct.SkImageInfo, align 8
  %19 = alloca %class.SkPixmap, align 8
  %20 = alloca %class.sk_sp.82, align 8
  %21 = alloca %class.sk_sp, align 8
  %22 = alloca %class.sk_sp.82, align 8
  %23 = alloca %class.sk_sp, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  %29 = alloca %class.sk_sp, align 8
  %30 = alloca %class.sk_sp, align 8
  %31 = alloca %struct.SkImageInfo, align 8
  %32 = alloca %class.SkPixmap, align 8
  %33 = alloca %class.sk_sp.82, align 8
  %34 = alloca %class.sk_sp, align 8
  %35 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 1
  store %class.GrDirectContext* %1, %class.GrDirectContext** %35, align 8
  %36 = bitcast %"class.std::__1::vector.106"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #14
  %37 = getelementptr inbounds %"class.std::__1::vector.106", %"class.std::__1::vector.106"* %7, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::vector.106", %"class.std::__1::vector.106"* %7, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 24, i1 false) #14
  %39 = bitcast %"struct.cc::PaintOp::DeserializeOptions"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %39) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 56, i1 false)
  call void @_ZN2cc7PaintOp18DeserializeOptionsC1EPNS_30TransferCacheDeserializeHelperEPNS_17ServicePaintCacheEP14SkStrikeClientPNSt3__16vectorIhNS8_9allocatorIhEEEEbPNS_19SharedImageProviderE(%"struct.cc::PaintOp::DeserializeOptions"* nonnull %8, %"class.cc::TransferCacheDeserializeHelper"* null, %"class.cc::ServicePaintCache"* null, %class.SkStrikeClient* null, %"class.std::__1::vector.106"* nonnull %7, i1 zeroext false, %"class.cc::SharedImageProvider"* null) #14
  %40 = bitcast %"class.cc::PaintOpReader"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 40, i1 false)
  %41 = getelementptr inbounds %"class.cc::PaintOpReader", %"class.cc::PaintOpReader"* %9, i64 0, i32 0
  %42 = getelementptr inbounds i8, i8* %3, i64 4
  store i8* %42, i8** %41, align 8
  %43 = getelementptr inbounds %"class.cc::PaintOpReader", %"class.cc::PaintOpReader"* %9, i64 0, i32 1
  %44 = add i64 %2, -4
  store i64 %44, i64* %43, align 8
  %45 = getelementptr inbounds %"class.cc::PaintOpReader", %"class.cc::PaintOpReader"* %9, i64 0, i32 2
  store i8 1, i8* %45, align 8
  %46 = getelementptr inbounds %"class.cc::PaintOpReader", %"class.cc::PaintOpReader"* %9, i64 0, i32 4
  store %"struct.cc::PaintOp::DeserializeOptions"* %8, %"struct.cc::PaintOp::DeserializeOptions"** %46, align 8
  %47 = getelementptr inbounds %"class.cc::PaintOpReader", %"class.cc::PaintOpReader"* %9, i64 0, i32 5
  store i8 0, i8* %47, align 8
  %48 = icmp ult i64 %2, 4
  br i1 %48, label %49, label %50

49:                                               ; preds = %4
  store i8 0, i8* %45, align 8
  br label %50

50:                                               ; preds = %4, %49
  %51 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 3
  store i32 0, i32* %51, align 8
  call void @_ZN2cc13PaintOpReader4ReadEPN10SkYUVAInfo11PlaneConfigE(%"class.cc::PaintOpReader"* nonnull %9, i32* %51) #14
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %411, label %54

54:                                               ; preds = %50
  %55 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #14
  store i32 0, i32* %10, align 4
  call void @_ZN2cc13PaintOpReader4ReadEPN10SkYUVAInfo11SubsamplingE(%"class.cc::PaintOpReader"* nonnull %9, i32* nonnull %10) #14
  %56 = load i32, i32* %10, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %409, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 7
  %60 = bitcast %"class.absl::optional.93"* %59 to i64*
  %61 = zext i32 %56 to i64
  %62 = shl nuw i64 %61, 32
  %63 = or i64 %62, 1
  store i64 %63, i64* %60, align 8
  %64 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #14
  store i32 -1431655766, i32* %11, align 4
  call void @_ZN2cc13PaintOpReader4ReadEPj(%"class.cc::PaintOpReader"* nonnull %9, i32* nonnull %11) #14
  %65 = load i32, i32* %11, align 4
  %66 = icmp ne i32 %65, 0
  %67 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 9
  %68 = zext i1 %66 to i8
  store i8 %68, i8* %67, align 8
  %69 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69) #14
  store i32 -1431655766, i32* %12, align 4
  call void @_ZN2cc13PaintOpReader4ReadEP15SkYUVColorSpace(%"class.cc::PaintOpReader"* nonnull %9, i32* nonnull %12) #14
  %70 = load i32, i32* %12, align 4
  %71 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 8
  %72 = bitcast %"class.absl::optional.98"* %71 to i64*
  %73 = zext i32 %70 to i64
  %74 = shl nuw i64 %73, 32
  %75 = or i64 %74, 1
  store i64 %75, i64* %72, align 8
  %76 = bitcast %class.sk_sp* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #14
  %77 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %13, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %77, align 8
  call void @_ZN2cc13PaintOpReader4ReadEP5sk_spI12SkColorSpaceE(%"class.cc::PaintOpReader"* nonnull %9, %class.sk_sp* nonnull %13) #14
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #14
  store i8 0, i8* %6, align 1
  call void @_ZN2cc13PaintOpReader4ReadEPh(%"class.cc::PaintOpReader"* nonnull %9, i8* nonnull %6) #14
  %78 = load i8, i8* %6, align 1
  %79 = icmp ugt i8 %78, 20
  br i1 %79, label %80, label %81

80:                                               ; preds = %58
  call void @_ZN2cc13PaintOpReader10SetInvalidEb(%"class.cc::PaintOpReader"* nonnull %9, i1 zeroext false) #14
  br label %84

81:                                               ; preds = %58
  %82 = zext i8 %78 to i64
  %83 = or i64 %82, 8589934592
  br label %84

84:                                               ; preds = %80, %81
  %85 = phi i64 [ 8589934592, %80 ], [ %83, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #14
  %86 = load i32, i32* %51, align 8
  switch i32 %86, label %95 [
    i32 0, label %329
    i32 1, label %96
    i32 2, label %96
    i32 3, label %87
    i32 4, label %88
    i32 5, label %89
    i32 6, label %90
    i32 7, label %91
    i32 8, label %92
    i32 9, label %96
    i32 10, label %96
    i32 11, label %93
    i32 12, label %94
  ]

87:                                               ; preds = %84
  br label %96

88:                                               ; preds = %84
  br label %96

89:                                               ; preds = %84
  br label %96

90:                                               ; preds = %84
  br label %96

91:                                               ; preds = %84
  br label %96

92:                                               ; preds = %84
  br label %96

93:                                               ; preds = %84
  br label %96

94:                                               ; preds = %84
  br label %96

95:                                               ; preds = %84
  call void @llvm.trap() #14
  unreachable

96:                                               ; preds = %84, %84, %84, %84, %94, %93, %92, %91, %90, %89, %88, %87
  %97 = phi i32 [ 2, %87 ], [ 2, %88 ], [ 1, %89 ], [ 1, %90 ], [ 4, %91 ], [ 4, %92 ], [ 1, %93 ], [ 1, %94 ], [ 3, %84 ], [ 3, %84 ], [ 3, %84 ], [ 3, %84 ]
  %98 = bitcast i32* %14 to i8*
  %99 = bitcast i32* %15 to i8*
  %100 = bitcast i64* %16 to i8*
  %101 = bitcast %class.GrDirectContext** %35 to %class.GrRecordingContext**
  %102 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 12
  %103 = bitcast i64* %17 to i8*
  %104 = bitcast %struct.SkImageInfo* %18 to i8*
  %105 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %18, i64 0, i32 0, i32 0, i32 0
  %106 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %18, i64 0, i32 0, i32 1
  %107 = bitcast %struct.SkImageInfo* %18 to i64*
  %108 = bitcast i32* %106 to i64*
  %109 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %18, i64 0, i32 1
  %110 = bitcast %struct.SkISize* %109 to i64*
  %111 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %18, i64 0, i32 0
  %112 = bitcast %class.SkPixmap* %19 to i8*
  %113 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %19, i64 0, i32 0
  %114 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %19, i64 0, i32 1
  %115 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %19, i64 0, i32 2, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %19, i64 0, i32 2, i32 0, i32 1
  %117 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %19, i64 0, i32 2
  %118 = bitcast %class.sk_sp.82* %20 to i8*
  %119 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %20, i64 0, i32 0
  %120 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %21, i64 0, i32 0
  %121 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5
  %122 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 1
  %123 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %124 = bitcast i64** %122 to i64*
  %125 = bitcast %"class.std::__1::vector.86"* %121 to i64*
  %126 = bitcast i64** %123 to i64*
  %127 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %121, i64 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 11
  %129 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 1
  %130 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %131 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2
  %132 = bitcast %class.sk_sp.82* %20 to i64*
  %133 = bitcast %class.sk_sp.82** %129 to i64*
  %134 = bitcast %struct.SkImageInfo* %18 to i8*
  %135 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %19, i64 0, i32 2
  %136 = bitcast %struct.SkImageInfo* %135 to i8*
  %137 = bitcast i32* %106 to <2 x i64>*
  %138 = bitcast i32* %116 to <2 x i64>*
  br label %141

139:                                              ; preds = %323
  %140 = icmp eq i32 %326, %97
  br i1 %140, label %327, label %141

141:                                              ; preds = %139, %96
  %142 = phi i32 [ 0, %96 ], [ %326, %139 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %98) #14
  store i32 0, i32* %14, align 4
  call void @_ZN2cc13PaintOpReader4ReadEPj(%"class.cc::PaintOpReader"* nonnull %9, i32* nonnull %14) #14
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #14
  store i32 0, i32* %15, align 4
  call void @_ZN2cc13PaintOpReader4ReadEPj(%"class.cc::PaintOpReader"* nonnull %9, i32* nonnull %15) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #14
  store i64 0, i64* %16, align 8
  call void @_ZN2cc13PaintOpReader8ReadSizeEPm(%"class.cc::PaintOpReader"* nonnull %9, i64* nonnull %16) #14
  %143 = load %class.GrRecordingContext*, %class.GrRecordingContext** %101, align 8
  %144 = call i32 @_ZNK18GrRecordingContext14maxTextureSizeEv(%class.GrRecordingContext* %143) #14
  %145 = load i64, i64* %16, align 8
  %146 = zext i32 %144 to i64
  %147 = icmp ule i64 %145, %146
  %148 = load i32, i32* %14, align 4
  %149 = icmp ule i32 %148, %144
  %150 = load i32, i32* %15, align 4
  %151 = icmp ule i32 %150, %144
  %152 = and i1 %149, %147
  %153 = and i1 %151, %152
  %154 = zext i1 %153 to i8
  store i8 %154, i8* %102, align 8
  %155 = xor i1 %153, true
  %156 = icmp eq i32 %148, 0
  %157 = or i1 %156, %155
  %158 = icmp eq i32 %150, 0
  %159 = or i1 %157, %158
  %160 = icmp eq i64 %145, 0
  %161 = or i1 %160, %159
  br i1 %161, label %323, label %162

162:                                              ; preds = %141
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #14
  store i64 0, i64* %17, align 8
  call void @_ZN2cc13PaintOpReader8ReadSizeEPm(%"class.cc::PaintOpReader"* nonnull %9, i64* nonnull %17) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 -86, i64 24, i1 false)
  %163 = load i32, i32* %14, align 4
  %164 = load i32, i32* %15, align 4
  %165 = load %class.SkColorSpace*, %class.SkColorSpace** %77, align 8
  %166 = icmp eq %class.SkColorSpace* %165, null
  br i1 %166, label %170, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %165, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = atomicrmw add i32* %168, i32 1 monotonic
  br label %170

170:                                              ; preds = %167, %162
  %171 = ptrtoint %class.SkColorSpace* %165 to i64
  %172 = zext i32 %164 to i64
  %173 = shl nuw i64 %172, 32
  %174 = zext i32 %163 to i64
  %175 = or i64 %173, %174
  store i64 %171, i64* %107, align 8, !alias.scope !8
  store i64 %85, i64* %108, align 8, !alias.scope !8
  store i64 %175, i64* %110, align 8, !alias.scope !8
  %176 = sext i32 %163 to i64
  %177 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %111) #14
  %178 = sext i32 %177 to i64
  %179 = mul nsw i64 %178, %176
  %180 = icmp ult i64 %179, 2147483648
  %181 = select i1 %180, i64 %179, i64 0
  %182 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %18, i64 %181) #14
  %183 = load i64, i64* %17, align 8
  %184 = icmp ugt i64 %182, %183
  br i1 %184, label %312, label %185

185:                                              ; preds = %170
  call void @_ZN2cc13PaintOpReader11AlignMemoryEm(%"class.cc::PaintOpReader"* nonnull %9, i64 4) #14
  %186 = load i64, i64* %17, align 8
  %187 = call i8* @_ZN2cc13PaintOpReader21ExtractReadableMemoryEm(%"class.cc::PaintOpReader"* nonnull %9, i64 %186) #14
  %188 = load i8, i8* %45, align 8, !range !4
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %312, label %190

190:                                              ; preds = %185
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %112) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %136, i8 -86, i64 24, i1 false)
  %191 = load i64, i64* %16, align 8
  store i8* %187, i8** %113, align 8
  store i64 %191, i64* %114, align 8
  %192 = load %class.SkColorSpace*, %class.SkColorSpace** %105, align 8
  %193 = icmp eq %class.SkColorSpace* %192, null
  br i1 %193, label %198, label %194

194:                                              ; preds = %190
  %195 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %192, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = atomicrmw add i32* %195, i32 1 monotonic
  %197 = load i64, i64* %114, align 8
  br label %198

198:                                              ; preds = %190, %194
  %199 = phi i64 [ %191, %190 ], [ %197, %194 ]
  store %class.SkColorSpace* %192, %class.SkColorSpace** %115, align 8
  %200 = load <2 x i64>, <2 x i64>* %137, align 8
  store <2 x i64> %200, <2 x i64>* %138, align 8
  %201 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %117, i64 %199) #14
  %202 = load i64, i64* %17, align 8
  %203 = icmp ugt i64 %201, %202
  br i1 %203, label %301, label %204

204:                                              ; preds = %198
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #14
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %119, align 8
  %205 = load i32, i32* %14, align 4
  %206 = load i32, i32* %15, align 4
  store %class.SkColorSpace* null, %class.SkColorSpace** %120, align 8
  call void @_ZN2cc30ServiceImageTransferCacheEntry11MakeSkImageERK8SkPixmapjj5sk_spI12SkColorSpaceE(%class.sk_sp.82* nonnull sret %20, %"class.cc::ServiceImageTransferCacheEntry"* %0, %class.SkPixmap* nonnull dereferenceable(40) %19, i32 %205, i32 %206, %class.sk_sp* nonnull %21)
  %207 = load %class.SkImage*, %class.SkImage** %119, align 8
  %208 = icmp eq %class.SkImage* %207, null
  br i1 %208, label %299, label %209

209:                                              ; preds = %204
  %210 = call i64 @_ZNK7SkImage11textureSizeEv(%class.SkImage* nonnull %207) #14
  %211 = load i64*, i64** %122, align 8
  %212 = load i64*, i64** %123, align 8
  %213 = icmp ult i64* %211, %212
  %214 = ptrtoint i64* %212 to i64
  br i1 %213, label %215, label %218

215:                                              ; preds = %209
  store i64 %210, i64* %211, align 8
  %216 = getelementptr inbounds i64, i64* %211, i64 1
  %217 = ptrtoint i64* %216 to i64
  store i64 %217, i64* %124, align 8
  br label %271

218:                                              ; preds = %209
  %219 = ptrtoint i64* %211 to i64
  %220 = load i64, i64* %125, align 8
  %221 = sub i64 %219, %220
  %222 = ashr exact i64 %221, 3
  %223 = add nsw i64 %222, 1
  %224 = icmp ugt i64 %223, 2305843009213693951
  br i1 %224, label %225, label %227

225:                                              ; preds = %218
  %226 = bitcast %"class.std::__1::vector.86"* %121 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %226) #16
  unreachable

227:                                              ; preds = %218
  %228 = sub i64 %214, %220
  %229 = ashr exact i64 %228, 3
  %230 = icmp ult i64 %229, 1152921504606846975
  br i1 %230, label %231, label %239

231:                                              ; preds = %227
  %232 = ashr exact i64 %228, 2
  %233 = icmp ult i64 %232, %223
  %234 = select i1 %233, i64 %223, i64 %232
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %244, label %236

236:                                              ; preds = %231
  %237 = icmp ugt i64 %234, 2305843009213693951
  br i1 %237, label %238, label %239

238:                                              ; preds = %236
  call void @abort() #16
  unreachable

239:                                              ; preds = %236, %227
  %240 = phi i64 [ %234, %236 ], [ 2305843009213693951, %227 ]
  %241 = shl i64 %240, 3
  %242 = call i8* @_Znwm(i64 %241) #15
  %243 = bitcast i8* %242 to i64*
  br label %244

244:                                              ; preds = %239, %231
  %245 = phi i64 [ %240, %239 ], [ 0, %231 ]
  %246 = phi i64* [ %243, %239 ], [ null, %231 ]
  %247 = getelementptr inbounds i64, i64* %246, i64 %222
  %248 = getelementptr inbounds i64, i64* %246, i64 %245
  %249 = ptrtoint i64* %248 to i64
  store i64 %210, i64* %247, align 8
  %250 = getelementptr inbounds i64, i64* %247, i64 1
  %251 = ptrtoint i64* %250 to i64
  %252 = load i64*, i64** %127, align 8
  %253 = load i64, i64* %124, align 8
  %254 = ptrtoint i64* %252 to i64
  %255 = sub i64 %253, %254
  %256 = ashr exact i64 %255, 3
  %257 = sub nsw i64 0, %256
  %258 = getelementptr inbounds i64, i64* %247, i64 %257
  %259 = ptrtoint i64* %258 to i64
  %260 = icmp sgt i64 %255, 0
  br i1 %260, label %261, label %265

261:                                              ; preds = %244
  %262 = bitcast i64* %258 to i8*
  %263 = bitcast i64* %252 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* align 8 %263, i64 %255, i1 false) #14
  %264 = load i64*, i64** %127, align 8
  br label %265

265:                                              ; preds = %261, %244
  %266 = phi i64* [ %252, %244 ], [ %264, %261 ]
  store i64 %259, i64* %125, align 8
  store i64 %251, i64* %124, align 8
  store i64 %249, i64* %126, align 8
  %267 = icmp eq i64* %266, null
  br i1 %267, label %271, label %268

268:                                              ; preds = %265
  %269 = bitcast i64* %266 to i8*
  call void @_ZdlPv(i8* %269) #15
  %270 = load i64*, i64** %122, align 8
  br label %271

271:                                              ; preds = %215, %265, %268
  %272 = phi i64* [ %216, %215 ], [ %250, %265 ], [ %270, %268 ]
  %273 = getelementptr inbounds i64, i64* %272, i64 -1
  %274 = load i64, i64* %273, align 8
  %275 = load i64, i64* %128, align 8
  %276 = add i64 %275, %274
  store i64 %276, i64* %128, align 8
  %277 = load %class.sk_sp.82*, %class.sk_sp.82** %129, align 8
  %278 = load %class.sk_sp.82*, %class.sk_sp.82** %130, align 8
  %279 = icmp ult %class.sk_sp.82* %277, %278
  br i1 %279, label %280, label %285

280:                                              ; preds = %271
  %281 = load i64, i64* %132, align 8
  store %class.SkImage* null, %class.SkImage** %119, align 8
  %282 = bitcast %class.sk_sp.82* %277 to i64*
  store i64 %281, i64* %282, align 8
  %283 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %277, i64 1
  %284 = ptrtoint %class.sk_sp.82* %283 to i64
  store i64 %284, i64* %133, align 8
  br label %286

285:                                              ; preds = %271
  call void @_ZNSt3__16vectorI5sk_spI7SkImageENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %131, %class.sk_sp.82* nonnull dereferenceable(8) %20) #14
  br label %286

286:                                              ; preds = %285, %280
  %287 = load %class.SkImage*, %class.SkImage** %119, align 8
  %288 = icmp eq %class.SkImage* %287, null
  br i1 %288, label %299, label %289

289:                                              ; preds = %286
  %290 = getelementptr inbounds %class.SkImage, %class.SkImage* %287, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %291 = atomicrmw add i32* %290, i32 -1 acq_rel
  %292 = icmp eq i32 %291, 1
  br i1 %292, label %293, label %299

293:                                              ; preds = %289
  %294 = bitcast %class.SkImage* %287 to %class.SkRefCntBase*
  %295 = bitcast %class.SkImage* %287 to void (%class.SkRefCntBase*)***
  %296 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %295, align 8
  %297 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %296, i64 2
  %298 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %297, align 8
  call void %298(%class.SkRefCntBase* nonnull %294) #14
  br label %299

299:                                              ; preds = %204, %286, %289, %293
  %300 = phi i32 [ 0, %286 ], [ 0, %289 ], [ 0, %293 ], [ 1, %204 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #14
  br label %301

301:                                              ; preds = %198, %299
  %302 = phi i32 [ %300, %299 ], [ 1, %198 ]
  %303 = load %class.SkColorSpace*, %class.SkColorSpace** %115, align 8
  %304 = icmp eq %class.SkColorSpace* %303, null
  br i1 %304, label %311, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %303, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %307 = atomicrmw add i32* %306, i32 -1 acq_rel
  %308 = icmp eq i32 %307, 1
  br i1 %308, label %309, label %311

309:                                              ; preds = %305
  %310 = bitcast %class.SkColorSpace* %303 to i8*
  call void @_ZdlPv(i8* %310) #15
  br label %311

311:                                              ; preds = %301, %305, %309
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %112) #14
  br label %312

312:                                              ; preds = %185, %311, %170
  %313 = phi i32 [ 1, %170 ], [ %302, %311 ], [ 1, %185 ]
  %314 = load %class.SkColorSpace*, %class.SkColorSpace** %105, align 8
  %315 = icmp eq %class.SkColorSpace* %314, null
  br i1 %315, label %322, label %316

316:                                              ; preds = %312
  %317 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %314, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %318 = atomicrmw add i32* %317, i32 -1 acq_rel
  %319 = icmp eq i32 %318, 1
  br i1 %319, label %320, label %322

320:                                              ; preds = %316
  %321 = bitcast %class.SkColorSpace* %314 to i8*
  call void @_ZdlPv(i8* %321) #15
  br label %322

322:                                              ; preds = %312, %316, %320
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #14
  br label %323

323:                                              ; preds = %141, %322
  %324 = phi i32 [ %313, %322 ], [ 1, %141 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %98) #14
  %325 = icmp eq i32 %324, 0
  %326 = add nuw nsw i32 %142, 1
  br i1 %325, label %139, label %398

327:                                              ; preds = %139
  %328 = load i32, i32* %51, align 8
  br label %329

329:                                              ; preds = %84, %327
  %330 = phi i32 [ %328, %327 ], [ %86, %84 ]
  %331 = bitcast %class.sk_sp.82* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %331) #14
  %332 = load %class.GrDirectContext*, %class.GrDirectContext** %35, align 8
  %333 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2
  %334 = getelementptr inbounds %"class.absl::optional.93", %"class.absl::optional.93"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %335 = load i8, i8* %334, align 4, !range !4
  %336 = icmp eq i8 %335, 0
  br i1 %336, label %337, label %338

337:                                              ; preds = %329
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #16
  unreachable

338:                                              ; preds = %329
  %339 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = getelementptr inbounds %"class.absl::optional.98", %"class.absl::optional.98"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %342 = load i8, i8* %341, align 4, !range !4
  %343 = icmp eq i8 %342, 0
  br i1 %343, label %344, label %345

344:                                              ; preds = %338
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #16
  unreachable

345:                                              ; preds = %338
  %346 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %347 = load i32, i32* %346, align 4
  %348 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %23, i64 0, i32 0
  %349 = load %class.SkColorSpace*, %class.SkColorSpace** %77, align 8
  %350 = icmp eq %class.SkColorSpace* %349, null
  br i1 %350, label %354, label %351

351:                                              ; preds = %345
  %352 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %349, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = atomicrmw add i32* %352, i32 1 monotonic
  br label %354

354:                                              ; preds = %345, %351
  store %class.SkColorSpace* %349, %class.SkColorSpace** %348, align 8
  call fastcc void @_ZN2cc12_GLOBAL__N_130MakeYUVImageFromUploadedPlanesEP15GrDirectContextRKNSt3__16vectorI5sk_spI7SkImageENS3_9allocatorIS7_EEEEN10SkYUVAInfo11PlaneConfigENSD_11SubsamplingE15SkYUVColorSpaceS5_I12SkColorSpaceE(%class.sk_sp.82* nonnull sret %22, %class.GrDirectContext* %332, %"class.std::__1::vector"* dereferenceable(24) %333, i32 %330, i32 %340, i32 %347, %class.sk_sp* nonnull %23)
  %355 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 6
  %356 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %22, i64 0, i32 0
  %357 = bitcast %class.sk_sp.82* %22 to i64*
  %358 = load i64, i64* %357, align 8
  store %class.SkImage* null, %class.SkImage** %356, align 8
  %359 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %355, i64 0, i32 0
  %360 = load %class.SkImage*, %class.SkImage** %359, align 8
  %361 = bitcast %class.sk_sp.82* %355 to i64*
  store i64 %358, i64* %361, align 8
  %362 = icmp eq %class.SkImage* %360, null
  br i1 %362, label %373, label %363

363:                                              ; preds = %354
  %364 = getelementptr inbounds %class.SkImage, %class.SkImage* %360, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %365 = atomicrmw add i32* %364, i32 -1 acq_rel
  %366 = icmp eq i32 %365, 1
  br i1 %366, label %367, label %373

367:                                              ; preds = %363
  %368 = bitcast %class.SkImage* %360 to %class.SkRefCntBase*
  %369 = bitcast %class.SkImage* %360 to void (%class.SkRefCntBase*)***
  %370 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %369, align 8
  %371 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %370, i64 2
  %372 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %371, align 8
  call void %372(%class.SkRefCntBase* nonnull %368) #14
  br label %373

373:                                              ; preds = %354, %363, %367
  %374 = load %class.SkImage*, %class.SkImage** %356, align 8
  %375 = icmp eq %class.SkImage* %374, null
  br i1 %375, label %386, label %376

376:                                              ; preds = %373
  %377 = getelementptr inbounds %class.SkImage, %class.SkImage* %374, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %378 = atomicrmw add i32* %377, i32 -1 acq_rel
  %379 = icmp eq i32 %378, 1
  br i1 %379, label %380, label %386

380:                                              ; preds = %376
  %381 = bitcast %class.SkImage* %374 to %class.SkRefCntBase*
  %382 = bitcast %class.SkImage* %374 to void (%class.SkRefCntBase*)***
  %383 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %382, align 8
  %384 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %383, i64 2
  %385 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %384, align 8
  call void %385(%class.SkRefCntBase* nonnull %381) #14
  br label %386

386:                                              ; preds = %373, %376, %380
  %387 = load %class.SkColorSpace*, %class.SkColorSpace** %348, align 8
  %388 = icmp eq %class.SkColorSpace* %387, null
  br i1 %388, label %395, label %389

389:                                              ; preds = %386
  %390 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %387, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = atomicrmw add i32* %390, i32 -1 acq_rel
  %392 = icmp eq i32 %391, 1
  br i1 %392, label %393, label %395

393:                                              ; preds = %389
  %394 = bitcast %class.SkColorSpace* %387 to i8*
  call void @_ZdlPv(i8* %394) #15
  br label %395

395:                                              ; preds = %386, %389, %393
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %331) #14
  %396 = load %class.SkImage*, %class.SkImage** %359, align 8
  %397 = icmp ne %class.SkImage* %396, null
  br label %398

398:                                              ; preds = %323, %395
  %399 = phi i1 [ %397, %395 ], [ false, %323 ]
  %400 = load %class.SkColorSpace*, %class.SkColorSpace** %77, align 8
  %401 = icmp eq %class.SkColorSpace* %400, null
  br i1 %401, label %408, label %402

402:                                              ; preds = %398
  %403 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %400, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %404 = atomicrmw add i32* %403, i32 -1 acq_rel
  %405 = icmp eq i32 %404, 1
  br i1 %405, label %406, label %408

406:                                              ; preds = %402
  %407 = bitcast %class.SkColorSpace* %400 to i8*
  call void @_ZdlPv(i8* %407) #15
  br label %408

408:                                              ; preds = %398, %402, %406
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #14
  br label %409

409:                                              ; preds = %54, %408
  %410 = phi i1 [ %399, %408 ], [ false, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #14
  br label %601

411:                                              ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #14
  store i8 0, i8* %5, align 1
  call void @_ZN2cc13PaintOpReader4ReadEPh(%"class.cc::PaintOpReader"* nonnull %9, i8* nonnull %5) #14
  %412 = load i8, i8* %5, align 1
  %413 = icmp ugt i8 %412, 20
  br i1 %413, label %414, label %415

414:                                              ; preds = %411
  call void @_ZN2cc13PaintOpReader10SetInvalidEb(%"class.cc::PaintOpReader"* nonnull %9, i1 zeroext false) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #14
  br label %601

415:                                              ; preds = %411
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #14
  switch i8 %412, label %416 [
    i8 9, label %601
    i8 0, label %601
  ]

416:                                              ; preds = %415
  %417 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %417) #14
  store i32 -1431655766, i32* %24, align 4
  call void @_ZN2cc13PaintOpReader4ReadEPj(%"class.cc::PaintOpReader"* nonnull %9, i32* nonnull %24) #14
  %418 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %418) #14
  store i32 -1431655766, i32* %25, align 4
  call void @_ZN2cc13PaintOpReader4ReadEPj(%"class.cc::PaintOpReader"* nonnull %9, i32* nonnull %25) #14
  %419 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %419) #14
  store i32 -1431655766, i32* %26, align 4
  call void @_ZN2cc13PaintOpReader4ReadEPj(%"class.cc::PaintOpReader"* nonnull %9, i32* nonnull %26) #14
  %420 = load i32, i32* %26, align 4
  %421 = icmp ne i32 %420, 0
  %422 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 9
  %423 = zext i1 %421 to i8
  store i8 %423, i8* %422, align 8
  %424 = bitcast i64* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %424) #14
  store i64 -6148914691236517206, i64* %27, align 8
  call void @_ZN2cc13PaintOpReader8ReadSizeEPm(%"class.cc::PaintOpReader"* nonnull %9, i64* nonnull %27) #14
  %425 = bitcast i64* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %425) #14
  store i64 -6148914691236517206, i64* %28, align 8
  call void @_ZN2cc13PaintOpReader8ReadSizeEPm(%"class.cc::PaintOpReader"* nonnull %9, i64* nonnull %28) #14
  %426 = bitcast %class.sk_sp* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %426) #14
  %427 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %29, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %427, align 8
  call void @_ZN2cc13PaintOpReader4ReadEP5sk_spI12SkColorSpaceE(%"class.cc::PaintOpReader"* nonnull %9, %class.sk_sp* nonnull %29) #14
  %428 = bitcast %class.sk_sp* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %428) #14
  %429 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %30, i64 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %429, align 8
  call void @_ZN2cc13PaintOpReader4ReadEP5sk_spI12SkColorSpaceE(%"class.cc::PaintOpReader"* nonnull %9, %class.sk_sp* nonnull %30) #14
  %430 = load i8, i8* %45, align 8, !range !4
  %431 = icmp eq i8 %430, 0
  br i1 %431, label %581, label %432

432:                                              ; preds = %416
  %433 = bitcast %struct.SkImageInfo* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %433) #14
  %434 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %31, i64 0, i32 0, i32 0, i32 0
  %435 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %31, i64 0, i32 0, i32 1
  %436 = bitcast %struct.SkImageInfo* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %436, i8 -86, i64 24, i1 false)
  %437 = load i32, i32* %24, align 4
  %438 = load i32, i32* %25, align 4
  %439 = load %class.SkColorSpace*, %class.SkColorSpace** %427, align 8
  %440 = icmp eq %class.SkColorSpace* %439, null
  br i1 %440, label %444, label %441

441:                                              ; preds = %432
  %442 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %439, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %443 = atomicrmw add i32* %442, i32 1 monotonic
  br label %444

444:                                              ; preds = %441, %432
  %445 = ptrtoint %class.SkColorSpace* %439 to i64
  %446 = zext i8 %412 to i64
  %447 = or i64 %446, 8589934592
  %448 = zext i32 %438 to i64
  %449 = shl nuw i64 %448, 32
  %450 = zext i32 %437 to i64
  %451 = or i64 %449, %450
  %452 = bitcast %struct.SkImageInfo* %31 to i64*
  store i64 %445, i64* %452, align 8, !alias.scope !11
  %453 = bitcast i32* %435 to i64*
  store i64 %447, i64* %453, align 8, !alias.scope !11
  %454 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %31, i64 0, i32 1
  %455 = bitcast %struct.SkISize* %454 to i64*
  store i64 %451, i64* %455, align 8, !alias.scope !11
  %456 = load i64, i64* %28, align 8
  %457 = sext i32 %437 to i64
  %458 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %31, i64 0, i32 0
  %459 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %458) #14
  %460 = sext i32 %459 to i64
  %461 = mul nsw i64 %460, %457
  %462 = icmp ult i64 %461, 2147483648
  %463 = select i1 %462, i64 %461, i64 0
  %464 = icmp ult i64 %456, %463
  br i1 %464, label %570, label %465

465:                                              ; preds = %444
  %466 = load i64, i64* %28, align 8
  %467 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %31, i64 %466) #14
  %468 = load i64, i64* %27, align 8
  %469 = icmp ugt i64 %467, %468
  br i1 %469, label %570, label %470

470:                                              ; preds = %465
  call void @_ZN2cc13PaintOpReader11AlignMemoryEm(%"class.cc::PaintOpReader"* nonnull %9, i64 4) #14
  %471 = load i64, i64* %27, align 8
  %472 = call i8* @_ZN2cc13PaintOpReader21ExtractReadableMemoryEm(%"class.cc::PaintOpReader"* nonnull %9, i64 %471) #14
  %473 = load i8, i8* %45, align 8, !range !4
  %474 = icmp eq i8 %473, 0
  br i1 %474, label %570, label %475

475:                                              ; preds = %470
  %476 = load i32, i32* %24, align 4
  %477 = icmp eq i32 %476, 0
  %478 = load i32, i32* %25, align 4
  %479 = icmp eq i32 %478, 0
  %480 = or i1 %477, %479
  br i1 %480, label %570, label %481

481:                                              ; preds = %475
  %482 = bitcast %class.SkPixmap* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %482) #14
  %483 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %32, i64 0, i32 2
  %484 = bitcast %struct.SkImageInfo* %483 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %484, i8 -86, i64 24, i1 false)
  %485 = load i64, i64* %28, align 8
  %486 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %32, i64 0, i32 0
  store i8* %472, i8** %486, align 8
  %487 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %32, i64 0, i32 1
  store i64 %485, i64* %487, align 8
  %488 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %32, i64 0, i32 2, i32 0, i32 0, i32 0
  %489 = load %class.SkColorSpace*, %class.SkColorSpace** %434, align 8
  %490 = icmp eq %class.SkColorSpace* %489, null
  br i1 %490, label %496, label %491

491:                                              ; preds = %481
  %492 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %489, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %493 = atomicrmw add i32* %492, i32 1 monotonic
  %494 = load i32, i32* %24, align 4
  %495 = load i32, i32* %25, align 4
  br label %496

496:                                              ; preds = %481, %491
  %497 = phi i32 [ %478, %481 ], [ %495, %491 ]
  %498 = phi i32 [ %476, %481 ], [ %494, %491 ]
  store %class.SkColorSpace* %489, %class.SkColorSpace** %488, align 8
  %499 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %32, i64 0, i32 2, i32 0, i32 1
  %500 = bitcast i32* %435 to <2 x i64>*
  %501 = load <2 x i64>, <2 x i64>* %500, align 8
  %502 = bitcast i32* %499 to <2 x i64>*
  store <2 x i64> %501, <2 x i64>* %502, align 8
  %503 = bitcast %class.sk_sp.82* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %503) #14
  %504 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %34, i64 0, i32 0
  %505 = load %class.SkColorSpace*, %class.SkColorSpace** %429, align 8
  %506 = icmp eq %class.SkColorSpace* %505, null
  br i1 %506, label %510, label %507

507:                                              ; preds = %496
  %508 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %505, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %509 = atomicrmw add i32* %508, i32 1 monotonic
  br label %510

510:                                              ; preds = %496, %507
  store %class.SkColorSpace* %505, %class.SkColorSpace** %504, align 8
  call void @_ZN2cc30ServiceImageTransferCacheEntry11MakeSkImageERK8SkPixmapjj5sk_spI12SkColorSpaceE(%class.sk_sp.82* nonnull sret %33, %"class.cc::ServiceImageTransferCacheEntry"* %0, %class.SkPixmap* nonnull dereferenceable(40) %32, i32 %498, i32 %497, %class.sk_sp* nonnull %34)
  %511 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 6
  %512 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %33, i64 0, i32 0
  %513 = bitcast %class.sk_sp.82* %33 to i64*
  %514 = load i64, i64* %513, align 8
  store %class.SkImage* null, %class.SkImage** %512, align 8
  %515 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %511, i64 0, i32 0
  %516 = load %class.SkImage*, %class.SkImage** %515, align 8
  %517 = bitcast %class.sk_sp.82* %511 to i64*
  store i64 %514, i64* %517, align 8
  %518 = icmp eq %class.SkImage* %516, null
  br i1 %518, label %529, label %519

519:                                              ; preds = %510
  %520 = getelementptr inbounds %class.SkImage, %class.SkImage* %516, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %521 = atomicrmw add i32* %520, i32 -1 acq_rel
  %522 = icmp eq i32 %521, 1
  br i1 %522, label %523, label %529

523:                                              ; preds = %519
  %524 = bitcast %class.SkImage* %516 to %class.SkRefCntBase*
  %525 = bitcast %class.SkImage* %516 to void (%class.SkRefCntBase*)***
  %526 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %525, align 8
  %527 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %526, i64 2
  %528 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %527, align 8
  call void %528(%class.SkRefCntBase* nonnull %524) #14
  br label %529

529:                                              ; preds = %510, %519, %523
  %530 = load %class.SkImage*, %class.SkImage** %512, align 8
  %531 = icmp eq %class.SkImage* %530, null
  br i1 %531, label %542, label %532

532:                                              ; preds = %529
  %533 = getelementptr inbounds %class.SkImage, %class.SkImage* %530, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %534 = atomicrmw add i32* %533, i32 -1 acq_rel
  %535 = icmp eq i32 %534, 1
  br i1 %535, label %536, label %542

536:                                              ; preds = %532
  %537 = bitcast %class.SkImage* %530 to %class.SkRefCntBase*
  %538 = bitcast %class.SkImage* %530 to void (%class.SkRefCntBase*)***
  %539 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %538, align 8
  %540 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %539, i64 2
  %541 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %540, align 8
  call void %541(%class.SkRefCntBase* nonnull %537) #14
  br label %542

542:                                              ; preds = %529, %532, %536
  %543 = load %class.SkColorSpace*, %class.SkColorSpace** %504, align 8
  %544 = icmp eq %class.SkColorSpace* %543, null
  br i1 %544, label %551, label %545

545:                                              ; preds = %542
  %546 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %543, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = atomicrmw add i32* %546, i32 -1 acq_rel
  %548 = icmp eq i32 %547, 1
  br i1 %548, label %549, label %551

549:                                              ; preds = %545
  %550 = bitcast %class.SkColorSpace* %543 to i8*
  call void @_ZdlPv(i8* %550) #15
  br label %551

551:                                              ; preds = %542, %545, %549
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %503) #14
  %552 = load %class.SkImage*, %class.SkImage** %515, align 8
  %553 = icmp eq %class.SkImage* %552, null
  br i1 %553, label %559, label %554

554:                                              ; preds = %551
  %555 = call i64 @_ZNK7SkImage11textureSizeEv(%class.SkImage* nonnull %552) #14
  %556 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 11
  store i64 %555, i64* %556, align 8
  %557 = load %class.SkImage*, %class.SkImage** %515, align 8
  %558 = icmp ne %class.SkImage* %557, null
  br label %559

559:                                              ; preds = %551, %554
  %560 = phi i1 [ false, %551 ], [ %558, %554 ]
  %561 = load %class.SkColorSpace*, %class.SkColorSpace** %488, align 8
  %562 = icmp eq %class.SkColorSpace* %561, null
  br i1 %562, label %569, label %563

563:                                              ; preds = %559
  %564 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %561, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %565 = atomicrmw add i32* %564, i32 -1 acq_rel
  %566 = icmp eq i32 %565, 1
  br i1 %566, label %567, label %569

567:                                              ; preds = %563
  %568 = bitcast %class.SkColorSpace* %561 to i8*
  call void @_ZdlPv(i8* %568) #15
  br label %569

569:                                              ; preds = %559, %563, %567
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %482) #14
  br label %570

570:                                              ; preds = %470, %569, %475, %444, %465
  %571 = phi i1 [ false, %465 ], [ false, %444 ], [ %560, %569 ], [ false, %470 ], [ false, %475 ]
  %572 = load %class.SkColorSpace*, %class.SkColorSpace** %434, align 8
  %573 = icmp eq %class.SkColorSpace* %572, null
  br i1 %573, label %580, label %574

574:                                              ; preds = %570
  %575 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %572, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %576 = atomicrmw add i32* %575, i32 -1 acq_rel
  %577 = icmp eq i32 %576, 1
  br i1 %577, label %578, label %580

578:                                              ; preds = %574
  %579 = bitcast %class.SkColorSpace* %572 to i8*
  call void @_ZdlPv(i8* %579) #15
  br label %580

580:                                              ; preds = %570, %574, %578
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %433) #14
  br label %581

581:                                              ; preds = %416, %580
  %582 = phi i1 [ %571, %580 ], [ false, %416 ]
  %583 = load %class.SkColorSpace*, %class.SkColorSpace** %429, align 8
  %584 = icmp eq %class.SkColorSpace* %583, null
  br i1 %584, label %591, label %585

585:                                              ; preds = %581
  %586 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %583, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %587 = atomicrmw add i32* %586, i32 -1 acq_rel
  %588 = icmp eq i32 %587, 1
  br i1 %588, label %589, label %591

589:                                              ; preds = %585
  %590 = bitcast %class.SkColorSpace* %583 to i8*
  call void @_ZdlPv(i8* %590) #15
  br label %591

591:                                              ; preds = %581, %585, %589
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %428) #14
  %592 = load %class.SkColorSpace*, %class.SkColorSpace** %427, align 8
  %593 = icmp eq %class.SkColorSpace* %592, null
  br i1 %593, label %600, label %594

594:                                              ; preds = %591
  %595 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %592, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %596 = atomicrmw add i32* %595, i32 -1 acq_rel
  %597 = icmp eq i32 %596, 1
  br i1 %597, label %598, label %600

598:                                              ; preds = %594
  %599 = bitcast %class.SkColorSpace* %592 to i8*
  call void @_ZdlPv(i8* %599) #15
  br label %600

600:                                              ; preds = %591, %594, %598
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %426) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %425) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %424) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %419) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %418) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %417) #14
  br label %601

601:                                              ; preds = %600, %415, %415, %414, %409
  %602 = phi i1 [ %410, %409 ], [ %582, %600 ], [ false, %415 ], [ false, %415 ], [ false, %414 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %39) #14
  %603 = load i8*, i8** %37, align 8
  %604 = icmp eq i8* %603, null
  br i1 %604, label %608, label %605

605:                                              ; preds = %601
  %606 = ptrtoint i8* %603 to i64
  %607 = bitcast i8** %38 to i64*
  store i64 %606, i64* %607, align 8
  call void @_ZdlPv(i8* nonnull %603) #15
  br label %608

608:                                              ; preds = %601, %605
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #14
  ret i1 %602
}

declare void @_ZN2cc7PaintOp18DeserializeOptionsC1EPNS_30TransferCacheDeserializeHelperEPNS_17ServicePaintCacheEP14SkStrikeClientPNSt3__16vectorIhNS8_9allocatorIhEEEEbPNS_19SharedImageProviderE(%"struct.cc::PaintOp::DeserializeOptions"*, %"class.cc::TransferCacheDeserializeHelper"*, %"class.cc::ServicePaintCache"*, %class.SkStrikeClient*, %"class.std::__1::vector.106"*, i1 zeroext, %"class.cc::SharedImageProvider"*) unnamed_addr #3

declare void @_ZN2cc13PaintOpReader4ReadEPN10SkYUVAInfo11PlaneConfigE(%"class.cc::PaintOpReader"*, i32*) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpReader4ReadEPN10SkYUVAInfo11SubsamplingE(%"class.cc::PaintOpReader"*, i32*) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpReader4ReadEPj(%"class.cc::PaintOpReader"*, i32*) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpReader4ReadEP15SkYUVColorSpace(%"class.cc::PaintOpReader"*, i32*) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpReader4ReadEP5sk_spI12SkColorSpaceE(%"class.cc::PaintOpReader"*, %class.sk_sp*) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpReader8ReadSizeEPm(%"class.cc::PaintOpReader"*, i64*) local_unnamed_addr #3

declare i32 @_ZNK18GrRecordingContext14maxTextureSizeEv(%class.GrRecordingContext*) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpReader11AlignMemoryEm(%"class.cc::PaintOpReader"*, i64) local_unnamed_addr #3

declare i8* @_ZN2cc13PaintOpReader21ExtractReadableMemoryEm(%"class.cc::PaintOpReader"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc30ServiceImageTransferCacheEntry11MakeSkImageERK8SkPixmapjj5sk_spI12SkColorSpaceE(%class.sk_sp.82* noalias nocapture sret, %"class.cc::ServiceImageTransferCacheEntry"* nocapture, %class.SkPixmap* dereferenceable(40), i32, i32, %class.sk_sp* nocapture readonly) local_unnamed_addr #1 align 2 {
  %7 = alloca %class.sk_sp.82, align 8
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca %class.sk_sp.82, align 8
  %10 = alloca %class.sk_sp.82, align 8
  %11 = alloca %class.sk_sp.82, align 8
  %12 = alloca %class.sk_sp.82, align 8
  %13 = alloca %class.sk_sp.82, align 8
  %14 = alloca %class.sk_sp, align 8
  %15 = alloca %class.sk_sp.82, align 8
  %16 = alloca %class.sk_sp.82, align 8
  %17 = alloca %class.GrBackendTexture, align 8
  %18 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 1
  %19 = bitcast %class.GrDirectContext** %18 to %class.GrRecordingContext**
  %20 = load %class.GrRecordingContext*, %class.GrRecordingContext** %19, align 8
  %21 = tail call i32 @_ZNK18GrRecordingContext14maxTextureSizeEv(%class.GrRecordingContext* %20) #14
  %22 = icmp uge i32 %21, %3
  %23 = icmp uge i32 %21, %4
  %24 = and i1 %23, %22
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 12
  store i8 %25, i8* %26, align 8
  br i1 %24, label %27, label %158

27:                                               ; preds = %6
  %28 = bitcast %class.sk_sp.82* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7SkImage14MakeFromRasterERK8SkPixmapPFvPKvPvES5_(%class.sk_sp.82* nonnull sret %10, %class.SkPixmap* dereferenceable(40) %2, void (i8*, i8*)* null, i8* null) #14
  %29 = bitcast %class.sk_sp.82* %10 to i64*
  %30 = load i64, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  %31 = inttoptr i64 %30 to %class.SkImage*
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %249, label %33

33:                                               ; preds = %27
  %34 = bitcast %class.sk_sp.82* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %35 = load %class.GrDirectContext*, %class.GrDirectContext** %18, align 8
  %36 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %37 = load %class.SkColorSpace*, %class.SkColorSpace** %36, align 8
  %38 = icmp eq %class.SkColorSpace* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  br label %42

42:                                               ; preds = %33, %39
  %43 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 9
  %44 = load i8, i8* %43, align 8, !range !4
  %45 = icmp ne i8 %44, 0
  %46 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  %47 = icmp ne %class.SkColorSpace* %37, null
  %48 = and i1 %47, %45
  %49 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %11, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %49, align 8, !alias.scope !14
  %50 = xor i1 %45, %48
  call void @_ZNK7SkImage16makeTextureImageEP15GrDirectContext11GrMipmapped10SkBudgeted(%class.sk_sp.82* nonnull sret %11, %class.SkImage* nonnull %31, %class.GrDirectContext* %35, i1 zeroext %50, i1 zeroext false) #14
  %51 = load %class.SkImage*, %class.SkImage** %49, align 8, !alias.scope !14
  %52 = icmp eq %class.SkImage* %51, null
  %53 = ptrtoint %class.SkImage* %51 to i64
  br i1 %52, label %140, label %54

54:                                               ; preds = %42
  br i1 %38, label %101, label %55

55:                                               ; preds = %54
  %56 = bitcast %class.sk_sp.82* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14, !noalias !14
  %57 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  %58 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = atomicrmw add i32* %58, i32 1 monotonic
  store %class.SkColorSpace* %37, %class.SkColorSpace** %57, align 8, !noalias !14
  call void @_ZNK7SkImage14makeColorSpaceE5sk_spI12SkColorSpaceEP15GrDirectContext(%class.sk_sp.82* nonnull sret %7, %class.SkImage* nonnull %51, %class.sk_sp* nonnull %8, %class.GrDirectContext* %35) #14
  %60 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %7, i64 0, i32 0
  %61 = bitcast %class.sk_sp.82* %7 to i64*
  %62 = load i64, i64* %61, align 8, !noalias !14
  store %class.SkImage* null, %class.SkImage** %60, align 8, !noalias !14
  %63 = load %class.SkImage*, %class.SkImage** %49, align 8, !alias.scope !14
  %64 = bitcast %class.sk_sp.82* %11 to i64*
  store i64 %62, i64* %64, align 8, !alias.scope !14
  %65 = icmp eq %class.SkImage* %63, null
  br i1 %65, label %89, label %66

66:                                               ; preds = %55
  %67 = getelementptr inbounds %class.SkImage, %class.SkImage* %63, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 -1 acq_rel
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %70, label %76

70:                                               ; preds = %66
  %71 = bitcast %class.SkImage* %63 to %class.SkRefCntBase*
  %72 = bitcast %class.SkImage* %63 to void (%class.SkRefCntBase*)***
  %73 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %72, align 8
  %74 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %73, i64 2
  %75 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, align 8
  call void %75(%class.SkRefCntBase* nonnull %71) #14
  br label %76

76:                                               ; preds = %70, %66
  %77 = load %class.SkImage*, %class.SkImage** %60, align 8, !noalias !14
  %78 = icmp eq %class.SkImage* %77, null
  br i1 %78, label %89, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %class.SkImage, %class.SkImage* %77, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %89

83:                                               ; preds = %79
  %84 = bitcast %class.SkImage* %77 to %class.SkRefCntBase*
  %85 = bitcast %class.SkImage* %77 to void (%class.SkRefCntBase*)***
  %86 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %85, align 8
  %87 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %86, i64 2
  %88 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %87, align 8
  call void %88(%class.SkRefCntBase* nonnull %84) #14
  br label %89

89:                                               ; preds = %83, %79, %76, %55
  %90 = load %class.SkColorSpace*, %class.SkColorSpace** %57, align 8, !noalias !14
  %91 = icmp eq %class.SkColorSpace* %90, null
  br i1 %91, label %98, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = atomicrmw add i32* %93, i32 -1 acq_rel
  %95 = icmp eq i32 %94, 1
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = bitcast %class.SkColorSpace* %90 to i8*
  call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %96, %92, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14, !noalias !14
  %99 = load %class.SkImage*, %class.SkImage** %49, align 8, !alias.scope !14
  %100 = ptrtoint %class.SkImage* %99 to i64
  br label %101

101:                                              ; preds = %98, %54
  %102 = phi i64 [ %53, %54 ], [ %100, %98 ]
  %103 = phi %class.SkImage* [ %51, %54 ], [ %99, %98 ]
  %104 = icmp eq %class.SkImage* %103, null
  %105 = xor i1 %48, true
  %106 = or i1 %104, %105
  br i1 %106, label %140, label %107

107:                                              ; preds = %101
  %108 = bitcast %class.sk_sp.82* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #14, !noalias !14
  call void @_ZNK7SkImage16makeTextureImageEP15GrDirectContext11GrMipmapped10SkBudgeted(%class.sk_sp.82* nonnull sret %9, %class.SkImage* nonnull %103, %class.GrDirectContext* %35, i1 zeroext true, i1 zeroext false) #14
  %109 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %9, i64 0, i32 0
  %110 = bitcast %class.sk_sp.82* %9 to i64*
  %111 = load i64, i64* %110, align 8, !noalias !14
  store %class.SkImage* null, %class.SkImage** %109, align 8, !noalias !14
  %112 = load %class.SkImage*, %class.SkImage** %49, align 8, !alias.scope !14
  %113 = bitcast %class.sk_sp.82* %11 to i64*
  store i64 %111, i64* %113, align 8, !alias.scope !14
  %114 = icmp eq %class.SkImage* %112, null
  br i1 %114, label %138, label %115

115:                                              ; preds = %107
  %116 = getelementptr inbounds %class.SkImage, %class.SkImage* %112, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 -1 acq_rel
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %119, label %125

119:                                              ; preds = %115
  %120 = bitcast %class.SkImage* %112 to %class.SkRefCntBase*
  %121 = bitcast %class.SkImage* %112 to void (%class.SkRefCntBase*)***
  %122 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %121, align 8
  %123 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %122, i64 2
  %124 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %123, align 8
  call void %124(%class.SkRefCntBase* nonnull %120) #14
  br label %125

125:                                              ; preds = %119, %115
  %126 = load %class.SkImage*, %class.SkImage** %109, align 8, !noalias !14
  %127 = icmp eq %class.SkImage* %126, null
  br i1 %127, label %138, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %class.SkImage, %class.SkImage* %126, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw add i32* %129, i32 -1 acq_rel
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %138

132:                                              ; preds = %128
  %133 = bitcast %class.SkImage* %126 to %class.SkRefCntBase*
  %134 = bitcast %class.SkImage* %126 to void (%class.SkRefCntBase*)***
  %135 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %134, align 8
  %136 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %135, i64 2
  %137 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %136, align 8
  call void %137(%class.SkRefCntBase* nonnull %133) #14
  br label %138

138:                                              ; preds = %132, %128, %125, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #14, !noalias !14
  %139 = load i64, i64* %113, align 8
  br label %140

140:                                              ; preds = %42, %101, %138
  %141 = phi i64 [ %53, %42 ], [ %102, %101 ], [ %139, %138 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  store %class.SkImage* null, %class.SkImage** %49, align 8
  br i1 %38, label %148, label %142

142:                                              ; preds = %140
  %143 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = atomicrmw add i32* %143, i32 -1 acq_rel
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %148

146:                                              ; preds = %142
  %147 = bitcast %class.SkColorSpace* %37 to i8*
  call void @_ZdlPv(i8* %147) #15
  br label %148

148:                                              ; preds = %146, %142, %140
  %149 = getelementptr inbounds %class.SkImage, %class.SkImage* %31, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = atomicrmw add i32* %149, i32 -1 acq_rel
  %151 = icmp eq i32 %150, 1
  br i1 %151, label %152, label %241

152:                                              ; preds = %148
  %153 = inttoptr i64 %30 to %class.SkRefCntBase*
  %154 = inttoptr i64 %30 to void (%class.SkRefCntBase*)***
  %155 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %154, align 8
  %156 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %155, i64 2
  %157 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %156, align 8
  call void %157(%class.SkRefCntBase* nonnull %153) #14
  br label %241

158:                                              ; preds = %6
  %159 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %1, i64 0, i32 9
  store i8 1, i8* %159, align 8
  %160 = bitcast %class.sk_sp.82* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #14
  %161 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %12, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %161, align 8
  call void @_ZN7SkImage14MakeFromRasterERK8SkPixmapPFvPKvPvES5_(%class.sk_sp.82* nonnull sret %12, %class.SkPixmap* dereferenceable(40) %2, void (i8*, i8*)* nonnull @"_ZZN2cc30ServiceImageTransferCacheEntry11MakeSkImageERK8SkPixmapjj5sk_spI12SkColorSpaceEEN3$_08__invokeEPKvPv", i8* null) #14
  %162 = load %class.SkImage*, %class.SkImage** %161, align 8
  %163 = icmp eq %class.SkImage* %162, null
  br i1 %163, label %164, label %166

164:                                              ; preds = %158
  %165 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %165, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #14
  br label %251

166:                                              ; preds = %158
  %167 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %168 = load %class.SkColorSpace*, %class.SkColorSpace** %167, align 8
  %169 = icmp eq %class.SkColorSpace* %168, null
  br i1 %169, label %219, label %170

170:                                              ; preds = %166
  %171 = bitcast %class.sk_sp.82* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #14
  %172 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %14, i64 0, i32 0
  %173 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = atomicrmw add i32* %173, i32 1 monotonic
  store %class.SkColorSpace* %168, %class.SkColorSpace** %172, align 8
  call void @_ZNK7SkImage14makeColorSpaceE5sk_spI12SkColorSpaceEP15GrDirectContext(%class.sk_sp.82* nonnull sret %13, %class.SkImage* nonnull %162, %class.sk_sp* nonnull %14, %class.GrDirectContext* null) #14
  %175 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %13, i64 0, i32 0
  %176 = bitcast %class.sk_sp.82* %13 to i64*
  %177 = load i64, i64* %176, align 8
  store %class.SkImage* null, %class.SkImage** %175, align 8
  %178 = load %class.SkColorSpace*, %class.SkColorSpace** %172, align 8
  %179 = icmp eq %class.SkColorSpace* %178, null
  br i1 %179, label %186, label %180

180:                                              ; preds = %170
  %181 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = atomicrmw add i32* %181, i32 -1 acq_rel
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %184, label %186

184:                                              ; preds = %180
  %185 = bitcast %class.SkColorSpace* %178 to i8*
  call void @_ZdlPv(i8* %185) #15
  br label %186

186:                                              ; preds = %170, %180, %184
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #14
  %187 = inttoptr i64 %177 to %class.SkImage*
  %188 = load %class.SkImage*, %class.SkImage** %161, align 8
  %189 = icmp eq %class.SkImage* %188, %187
  br i1 %189, label %190, label %227

190:                                              ; preds = %186
  %191 = bitcast %class.sk_sp.82* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #14
  call void @_ZN7SkImage14MakeRasterCopyERK8SkPixmap(%class.sk_sp.82* nonnull sret %15, %class.SkPixmap* dereferenceable(40) %2) #14
  %192 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %15, i64 0, i32 0
  %193 = bitcast %class.sk_sp.82* %15 to i64*
  %194 = load i64, i64* %193, align 8
  store %class.SkImage* null, %class.SkImage** %192, align 8
  %195 = icmp eq i64 %177, 0
  br i1 %195, label %223, label %196

196:                                              ; preds = %190
  %197 = getelementptr inbounds %class.SkImage, %class.SkImage* %187, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = atomicrmw add i32* %197, i32 -1 acq_rel
  %199 = icmp eq i32 %198, 1
  br i1 %199, label %200, label %206

200:                                              ; preds = %196
  %201 = inttoptr i64 %177 to %class.SkRefCntBase*
  %202 = inttoptr i64 %177 to void (%class.SkRefCntBase*)***
  %203 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %202, align 8
  %204 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %203, i64 2
  %205 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %204, align 8
  call void %205(%class.SkRefCntBase* nonnull %201) #14
  br label %206

206:                                              ; preds = %196, %200
  %207 = load %class.SkImage*, %class.SkImage** %192, align 8
  %208 = icmp eq %class.SkImage* %207, null
  br i1 %208, label %223, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %class.SkImage, %class.SkImage* %207, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = atomicrmw add i32* %210, i32 -1 acq_rel
  %212 = icmp eq i32 %211, 1
  br i1 %212, label %213, label %223

213:                                              ; preds = %209
  %214 = bitcast %class.SkImage* %207 to %class.SkRefCntBase*
  %215 = bitcast %class.SkImage* %207 to void (%class.SkRefCntBase*)***
  %216 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %215, align 8
  %217 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %216, i64 2
  %218 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %217, align 8
  call void %218(%class.SkRefCntBase* nonnull %214) #14
  br label %223

219:                                              ; preds = %166
  %220 = bitcast %class.sk_sp.82* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #14
  call void @_ZN7SkImage14MakeRasterCopyERK8SkPixmap(%class.sk_sp.82* nonnull sret %16, %class.SkPixmap* dereferenceable(40) %2) #14
  %221 = bitcast %class.sk_sp.82* %16 to i64*
  %222 = load i64, i64* %221, align 8
  br label %223

223:                                              ; preds = %213, %209, %206, %190, %219
  %224 = phi i8* [ %220, %219 ], [ %191, %190 ], [ %191, %206 ], [ %191, %209 ], [ %191, %213 ]
  %225 = phi i64 [ %222, %219 ], [ %194, %190 ], [ %194, %206 ], [ %194, %209 ], [ %194, %213 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #14
  %226 = load %class.SkImage*, %class.SkImage** %161, align 8
  br label %227

227:                                              ; preds = %223, %186
  %228 = phi %class.SkImage* [ %226, %223 ], [ %188, %186 ]
  %229 = phi i64 [ %225, %223 ], [ %177, %186 ]
  %230 = icmp eq %class.SkImage* %228, null
  br i1 %230, label %241, label %231

231:                                              ; preds = %227
  %232 = getelementptr inbounds %class.SkImage, %class.SkImage* %228, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = atomicrmw add i32* %232, i32 -1 acq_rel
  %234 = icmp eq i32 %233, 1
  br i1 %234, label %235, label %241

235:                                              ; preds = %231
  %236 = bitcast %class.SkImage* %228 to %class.SkRefCntBase*
  %237 = bitcast %class.SkImage* %228 to void (%class.SkRefCntBase*)***
  %238 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %237, align 8
  %239 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %238, i64 2
  %240 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %239, align 8
  call void %240(%class.SkRefCntBase* nonnull %236) #14
  br label %241

241:                                              ; preds = %235, %231, %227, %152, %148
  %242 = phi i8* [ %34, %148 ], [ %34, %152 ], [ %160, %227 ], [ %160, %231 ], [ %160, %235 ]
  %243 = phi i64 [ %141, %148 ], [ %141, %152 ], [ %229, %227 ], [ %229, %231 ], [ %229, %235 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #14
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %247, label %245

245:                                              ; preds = %241
  %246 = inttoptr i64 %243 to %class.SkImage*
  call void @_ZNK7SkImage17getBackendTextureEbP15GrSurfaceOrigin(%class.GrBackendTexture* nonnull sret %17, %class.SkImage* nonnull %246, i1 zeroext true, i32* null) #14
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* nonnull %17) #14
  br label %247

247:                                              ; preds = %241, %245
  %248 = bitcast %class.sk_sp.82* %0 to i64*
  store i64 %243, i64* %248, align 8
  br label %251

249:                                              ; preds = %27
  %250 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %250, align 8
  br label %251

251:                                              ; preds = %249, %164, %247
  ret void
}

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #3

declare void @_ZN7SkImage14MakeFromRasterERK8SkPixmapPFvPKvPvES5_(%class.sk_sp.82* sret, %class.SkPixmap* dereferenceable(40), void (i8*, i8*)*, i8*) local_unnamed_addr #3

declare void @_ZNK7SkImage14makeColorSpaceE5sk_spI12SkColorSpaceEP15GrDirectContext(%class.sk_sp.82* sret, %class.SkImage*, %class.sk_sp*, %class.GrDirectContext*) local_unnamed_addr #3

declare void @_ZN7SkImage14MakeRasterCopyERK8SkPixmap(%class.sk_sp.82* sret, %class.SkPixmap* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZNK7SkImage17getBackendTextureEbP15GrSurfaceOrigin(%class.GrBackendTexture* sret, %class.SkImage*, i1 zeroext, i32*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %class.sk_sp.82* @_ZNK2cc30ServiceImageTransferCacheEntry13GetPlaneImageEm(%"class.cc::ServiceImageTransferCacheEntry"*, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast %class.sk_sp.82** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ugt i64 %10, %1
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = inttoptr i64 %8 to %class.sk_sp.82*
  %16 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %15, i64 %1
  ret %class.sk_sp.82* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc30ServiceImageTransferCacheEntry10EnsureMipsEv(%"class.cc::ServiceImageTransferCacheEntry"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.std::__1::vector", align 16
  %3 = alloca %"class.std::__1::vector.86", align 16
  %4 = alloca %class.sk_sp.82, align 8
  %5 = alloca %class.sk_sp.82, align 8
  %6 = alloca %class.sk_sp, align 8
  %7 = alloca %class.sk_sp.82, align 8
  %8 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 9
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %334

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 0
  %13 = load %class.sk_sp.82*, %class.sk_sp.82** %12, align 8
  %14 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 1
  %15 = load %class.sk_sp.82*, %class.sk_sp.82** %14, align 8
  %16 = icmp eq %class.sk_sp.82* %13, %15
  br i1 %16, label %294, label %17

17:                                               ; preds = %11
  %18 = ptrtoint %class.sk_sp.82* %13 to i64
  %19 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 0, i64 24, i1 false) #14
  %23 = bitcast %"class.std::__1::vector.86"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #14
  %24 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %3, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %3, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 0, i64 24, i1 false) #14
  %27 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2
  %28 = bitcast %class.sk_sp.82** %14 to i64*
  %29 = bitcast %"class.std::__1::vector"* %27 to i64*
  %30 = bitcast %class.sk_sp.82* %4 to i8*
  %31 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %4, i64 0, i32 0
  %32 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 1
  %33 = bitcast %class.sk_sp.82** %21 to i64*
  %34 = bitcast i64** %25 to i64*
  %35 = bitcast %"class.std::__1::vector.86"* %3 to i64*
  %36 = bitcast i64** %26 to i64*
  br label %37

37:                                               ; preds = %17, %125
  %38 = phi i64 [ %18, %17 ], [ %128, %125 ]
  %39 = phi i64 [ 0, %17 ], [ %126, %125 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %31, align 8
  %40 = inttoptr i64 %38 to %class.sk_sp.82*
  %41 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %40, i64 %39, i32 0
  %42 = load %class.SkImage*, %class.SkImage** %41, align 8
  %43 = load %class.GrDirectContext*, %class.GrDirectContext** %32, align 8
  call void @_ZNK7SkImage16makeTextureImageEP15GrDirectContext11GrMipmapped10SkBudgeted(%class.sk_sp.82* nonnull sret %4, %class.SkImage* %42, %class.GrDirectContext* %43, i1 zeroext true, i1 zeroext false) #14
  %44 = load %class.SkImage*, %class.SkImage** %31, align 8
  %45 = icmp eq %class.SkImage* %44, null
  %46 = ptrtoint %class.SkImage* %44 to i64
  br i1 %45, label %255, label %47

47:                                               ; preds = %37
  %48 = load %class.sk_sp.82*, %class.sk_sp.82** %21, align 8
  %49 = load %class.sk_sp.82*, %class.sk_sp.82** %22, align 16
  %50 = icmp ult %class.sk_sp.82* %48, %49
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  store %class.SkImage* null, %class.SkImage** %31, align 8
  %52 = bitcast %class.sk_sp.82* %48 to i64*
  store i64 %46, i64* %52, align 8
  %53 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %48, i64 1
  %54 = ptrtoint %class.sk_sp.82* %53 to i64
  store i64 %54, i64* %33, align 8
  br label %57

55:                                               ; preds = %47
  call void @_ZNSt3__16vectorI5sk_spI7SkImageENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %2, %class.sk_sp.82* nonnull dereferenceable(8) %4) #14
  %56 = load %class.sk_sp.82*, %class.sk_sp.82** %21, align 8
  br label %57

57:                                               ; preds = %51, %55
  %58 = phi %class.sk_sp.82* [ %53, %51 ], [ %56, %55 ]
  %59 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %58, i64 -1, i32 0
  %60 = load %class.SkImage*, %class.SkImage** %59, align 8
  %61 = call i64 @_ZNK7SkImage11textureSizeEv(%class.SkImage* %60) #14
  %62 = load i64*, i64** %25, align 8
  %63 = load i64*, i64** %26, align 16
  %64 = icmp ult i64* %62, %63
  %65 = ptrtoint i64* %63 to i64
  br i1 %64, label %66, label %69

66:                                               ; preds = %57
  store i64 %61, i64* %62, align 8
  %67 = getelementptr inbounds i64, i64* %62, i64 1
  %68 = ptrtoint i64* %67 to i64
  store i64 %68, i64* %34, align 8
  br label %112

69:                                               ; preds = %57
  %70 = ptrtoint i64* %62 to i64
  %71 = load i64, i64* %35, align 16
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = add nsw i64 %73, 1
  %75 = icmp ugt i64 %74, 2305843009213693951
  br i1 %75, label %76, label %78

76:                                               ; preds = %69
  %77 = bitcast %"class.std::__1::vector.86"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %77) #16
  unreachable

78:                                               ; preds = %69
  %79 = sub i64 %65, %71
  %80 = ashr exact i64 %79, 3
  %81 = icmp ult i64 %80, 1152921504606846975
  br i1 %81, label %82, label %90

82:                                               ; preds = %78
  %83 = ashr exact i64 %79, 2
  %84 = icmp ult i64 %83, %74
  %85 = select i1 %84, i64 %74, i64 %83
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %95, label %87

87:                                               ; preds = %82
  %88 = icmp ugt i64 %85, 2305843009213693951
  br i1 %88, label %89, label %90

89:                                               ; preds = %87
  call void @abort() #16
  unreachable

90:                                               ; preds = %87, %78
  %91 = phi i64 [ %85, %87 ], [ 2305843009213693951, %78 ]
  %92 = shl i64 %91, 3
  %93 = call i8* @_Znwm(i64 %92) #15
  %94 = bitcast i8* %93 to i64*
  br label %95

95:                                               ; preds = %90, %82
  %96 = phi i64 [ %91, %90 ], [ 0, %82 ]
  %97 = phi i8* [ %93, %90 ], [ null, %82 ]
  %98 = phi i64* [ %94, %90 ], [ null, %82 ]
  %99 = getelementptr inbounds i64, i64* %98, i64 %73
  %100 = getelementptr inbounds i64, i64* %98, i64 %96
  %101 = ptrtoint i64* %100 to i64
  store i64 %61, i64* %99, align 8
  %102 = getelementptr inbounds i64, i64* %99, i64 1
  %103 = ptrtoint i64* %102 to i64
  %104 = ptrtoint i64* %98 to i64
  %105 = icmp sgt i64 %72, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %95
  %107 = inttoptr i64 %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %107, i64 %72, i1 false) #14
  br label %108

108:                                              ; preds = %106, %95
  store i64 %104, i64* %35, align 16
  store i64 %103, i64* %34, align 8
  store i64 %101, i64* %36, align 16
  %109 = icmp eq i64 %71, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = inttoptr i64 %71 to i8*
  call void @_ZdlPv(i8* %111) #15
  br label %112

112:                                              ; preds = %110, %108, %66
  %113 = load %class.SkImage*, %class.SkImage** %31, align 8
  %114 = icmp eq %class.SkImage* %113, null
  br i1 %114, label %125, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %class.SkImage, %class.SkImage* %113, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = atomicrmw add i32* %116, i32 -1 acq_rel
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %119, label %125

119:                                              ; preds = %115
  %120 = bitcast %class.SkImage* %113 to %class.SkRefCntBase*
  %121 = bitcast %class.SkImage* %113 to void (%class.SkRefCntBase*)***
  %122 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %121, align 8
  %123 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %122, i64 2
  %124 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %123, align 8
  call void %124(%class.SkRefCntBase* nonnull %120) #14
  br label %125

125:                                              ; preds = %112, %115, %119
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  %126 = add nuw i64 %39, 1
  %127 = load i64, i64* %28, align 8
  %128 = load i64, i64* %29, align 8
  %129 = sub i64 %127, %128
  %130 = ashr exact i64 %129, 3
  %131 = icmp ult i64 %126, %130
  br i1 %131, label %37, label %132

132:                                              ; preds = %125
  %133 = bitcast %class.sk_sp.82* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #14
  %134 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %5, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %134, align 8
  %135 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 1
  %136 = load %class.GrDirectContext*, %class.GrDirectContext** %135, align 8
  %137 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 3
  %138 = load i32, i32* %137, align 8
  %139 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %140 = load i8, i8* %139, align 4, !range !4
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %132
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #16
  unreachable

143:                                              ; preds = %132
  %144 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %145 = load i8, i8* %144, align 4, !range !4
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %143
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #16
  unreachable

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 6
  %154 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %153, i64 0, i32 0
  %155 = load %class.SkImage*, %class.SkImage** %154, align 8
  call void @_ZNK7SkImage13refColorSpaceEv(%class.sk_sp* nonnull sret %6, %class.SkImage* %155) #14
  call fastcc void @_ZN2cc12_GLOBAL__N_130MakeYUVImageFromUploadedPlanesEP15GrDirectContextRKNSt3__16vectorI5sk_spI7SkImageENS3_9allocatorIS7_EEEEN10SkYUVAInfo11PlaneConfigENSD_11SubsamplingE15SkYUVColorSpaceS5_I12SkColorSpaceE(%class.sk_sp.82* nonnull sret %5, %class.GrDirectContext* %136, %"class.std::__1::vector"* nonnull dereferenceable(24) %2, i32 %138, i32 %150, i32 %152, %class.sk_sp* nonnull %6)
  %156 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %6, i64 0, i32 0
  %157 = load %class.SkColorSpace*, %class.SkColorSpace** %156, align 8
  %158 = icmp eq %class.SkColorSpace* %157, null
  br i1 %158, label %165, label %159

159:                                              ; preds = %148
  %160 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i32* %160, i32 -1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = bitcast %class.SkColorSpace* %157 to i8*
  call void @_ZdlPv(i8* %164) #15
  br label %165

165:                                              ; preds = %148, %159, %163
  %166 = load %class.SkImage*, %class.SkImage** %134, align 8
  %167 = icmp eq %class.SkImage* %166, null
  br i1 %167, label %255, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %27, i64 0, i32 0, i32 0
  %170 = load %class.sk_sp.82*, %class.sk_sp.82** %169, align 8
  %171 = icmp eq %class.sk_sp.82* %170, null
  br i1 %171, label %200, label %172

172:                                              ; preds = %168
  %173 = bitcast %class.sk_sp.82* %170 to i8*
  %174 = load %class.sk_sp.82*, %class.sk_sp.82** %14, align 8
  %175 = icmp eq %class.sk_sp.82* %174, %170
  br i1 %175, label %197, label %176

176:                                              ; preds = %172, %192
  %177 = phi %class.sk_sp.82* [ %178, %192 ], [ %174, %172 ]
  %178 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %177, i64 -1
  %179 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %178, i64 0, i32 0
  %180 = load %class.SkImage*, %class.SkImage** %179, align 8
  %181 = icmp eq %class.SkImage* %180, null
  br i1 %181, label %192, label %182

182:                                              ; preds = %176
  %183 = getelementptr inbounds %class.SkImage, %class.SkImage* %180, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = atomicrmw add i32* %183, i32 -1 acq_rel
  %185 = icmp eq i32 %184, 1
  br i1 %185, label %186, label %192

186:                                              ; preds = %182
  %187 = bitcast %class.SkImage* %180 to %class.SkRefCntBase*
  %188 = bitcast %class.SkImage* %180 to void (%class.SkRefCntBase*)***
  %189 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %188, align 8
  %190 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %189, i64 2
  %191 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %190, align 8
  call void %191(%class.SkRefCntBase* nonnull %187) #14
  br label %192

192:                                              ; preds = %186, %182, %176
  %193 = icmp eq %class.sk_sp.82* %178, %170
  br i1 %193, label %194, label %176

194:                                              ; preds = %192
  %195 = bitcast %"class.std::__1::vector"* %27 to i8**
  %196 = load i8*, i8** %195, align 8
  br label %197

197:                                              ; preds = %194, %172
  %198 = phi i8* [ %196, %194 ], [ %173, %172 ]
  store %class.sk_sp.82* %170, %class.sk_sp.82** %14, align 8
  call void @_ZdlPv(i8* %198) #15
  %199 = bitcast %"class.std::__1::vector"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %199, i8 0, i64 24, i1 false) #14
  br label %200

200:                                              ; preds = %168, %197
  %201 = bitcast %"class.std::__1::vector"* %2 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 16
  %203 = bitcast %"class.std::__1::vector"* %27 to <2 x i64>*
  store <2 x i64> %202, <2 x i64>* %203, align 8
  %204 = bitcast %class.sk_sp.82** %22 to i64*
  %205 = load i64, i64* %204, align 16
  %206 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %207 = bitcast %class.sk_sp.82** %206 to i64*
  store i64 %205, i64* %207, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %19, i8 0, i64 24, i1 false) #14
  %208 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5
  %209 = getelementptr inbounds %"class.std::__1::vector.86", %"class.std::__1::vector.86"* %208, i64 0, i32 0, i32 0
  %210 = load i64*, i64** %209, align 8
  %211 = icmp eq i64* %210, null
  br i1 %211, label %218, label %212

212:                                              ; preds = %200
  %213 = ptrtoint i64* %210 to i64
  %214 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 1
  %215 = bitcast i64** %214 to i64*
  store i64 %213, i64* %215, align 8
  %216 = bitcast i64* %210 to i8*
  call void @_ZdlPv(i8* %216) #15
  %217 = bitcast %"class.std::__1::vector.86"* %208 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 24, i1 false) #14
  br label %218

218:                                              ; preds = %200, %212
  %219 = bitcast %"class.std::__1::vector.86"* %3 to <2 x i64>*
  %220 = load <2 x i64>, <2 x i64>* %219, align 16
  %221 = bitcast %"class.std::__1::vector.86"* %208 to <2 x i64>*
  store <2 x i64> %220, <2 x i64>* %221, align 8
  %222 = bitcast i64** %26 to i64*
  %223 = load i64, i64* %222, align 16
  %224 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %225 = bitcast i64** %224 to i64*
  store i64 %223, i64* %225, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 0, i64 24, i1 false) #14
  %226 = bitcast %class.sk_sp.82* %5 to i64*
  %227 = load i64, i64* %226, align 8
  store %class.SkImage* null, %class.SkImage** %134, align 8
  %228 = load %class.SkImage*, %class.SkImage** %154, align 8
  %229 = bitcast %class.sk_sp.82* %153 to i64*
  store i64 %227, i64* %229, align 8
  %230 = icmp eq %class.SkImage* %228, null
  br i1 %230, label %231, label %232

231:                                              ; preds = %218
  store i8 1, i8* %8, align 8
  br label %255

232:                                              ; preds = %218
  %233 = getelementptr inbounds %class.SkImage, %class.SkImage* %228, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = atomicrmw add i32* %233, i32 -1 acq_rel
  %235 = icmp eq i32 %234, 1
  br i1 %235, label %236, label %242

236:                                              ; preds = %232
  %237 = bitcast %class.SkImage* %228 to %class.SkRefCntBase*
  %238 = bitcast %class.SkImage* %228 to void (%class.SkRefCntBase*)***
  %239 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %238, align 8
  %240 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %239, i64 2
  %241 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %240, align 8
  call void %241(%class.SkRefCntBase* nonnull %237) #14
  br label %242

242:                                              ; preds = %236, %232
  %243 = load %class.SkImage*, %class.SkImage** %134, align 8
  store i8 1, i8* %8, align 8
  %244 = icmp eq %class.SkImage* %243, null
  br i1 %244, label %255, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %class.SkImage, %class.SkImage* %243, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = atomicrmw add i32* %246, i32 -1 acq_rel
  %248 = icmp eq i32 %247, 1
  br i1 %248, label %249, label %255

249:                                              ; preds = %245
  %250 = bitcast %class.SkImage* %243 to %class.SkRefCntBase*
  %251 = bitcast %class.SkImage* %243 to void (%class.SkRefCntBase*)***
  %252 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %251, align 8
  %253 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %252, i64 2
  %254 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %253, align 8
  call void %254(%class.SkRefCntBase* nonnull %250) #14
  br label %255

255:                                              ; preds = %37, %249, %245, %242, %231, %165
  %256 = phi i8* [ %133, %165 ], [ %133, %231 ], [ %133, %242 ], [ %133, %245 ], [ %133, %249 ], [ %30, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #14
  %257 = load i64*, i64** %24, align 16
  %258 = icmp eq i64* %257, null
  br i1 %258, label %263, label %259

259:                                              ; preds = %255
  %260 = ptrtoint i64* %257 to i64
  %261 = bitcast i64** %25 to i64*
  store i64 %260, i64* %261, align 8
  %262 = bitcast i64* %257 to i8*
  call void @_ZdlPv(i8* %262) #15
  br label %263

263:                                              ; preds = %255, %259
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #14
  %264 = load %class.sk_sp.82*, %class.sk_sp.82** %20, align 16
  %265 = icmp eq %class.sk_sp.82* %264, null
  br i1 %265, label %293, label %266

266:                                              ; preds = %263
  %267 = bitcast %class.sk_sp.82* %264 to i8*
  %268 = load %class.sk_sp.82*, %class.sk_sp.82** %21, align 8
  %269 = icmp eq %class.sk_sp.82* %268, %264
  br i1 %269, label %291, label %270

270:                                              ; preds = %266, %286
  %271 = phi %class.sk_sp.82* [ %272, %286 ], [ %268, %266 ]
  %272 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %271, i64 -1
  %273 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %272, i64 0, i32 0
  %274 = load %class.SkImage*, %class.SkImage** %273, align 8
  %275 = icmp eq %class.SkImage* %274, null
  br i1 %275, label %286, label %276

276:                                              ; preds = %270
  %277 = getelementptr inbounds %class.SkImage, %class.SkImage* %274, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = atomicrmw add i32* %277, i32 -1 acq_rel
  %279 = icmp eq i32 %278, 1
  br i1 %279, label %280, label %286

280:                                              ; preds = %276
  %281 = bitcast %class.SkImage* %274 to %class.SkRefCntBase*
  %282 = bitcast %class.SkImage* %274 to void (%class.SkRefCntBase*)***
  %283 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %282, align 8
  %284 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %283, i64 2
  %285 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %284, align 8
  call void %285(%class.SkRefCntBase* nonnull %281) #14
  br label %286

286:                                              ; preds = %280, %276, %270
  %287 = icmp eq %class.sk_sp.82* %272, %264
  br i1 %287, label %288, label %270

288:                                              ; preds = %286
  %289 = bitcast %"class.std::__1::vector"* %2 to i8**
  %290 = load i8*, i8** %289, align 16
  br label %291

291:                                              ; preds = %288, %266
  %292 = phi i8* [ %290, %288 ], [ %267, %266 ]
  store %class.sk_sp.82* %264, %class.sk_sp.82** %21, align 8
  call void @_ZdlPv(i8* %292) #15
  br label %293

293:                                              ; preds = %263, %291
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #14
  br label %334

294:                                              ; preds = %11
  %295 = bitcast %class.sk_sp.82* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %295) #14
  %296 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %7, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %296, align 8
  %297 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 6
  %298 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %297, i64 0, i32 0
  %299 = load %class.SkImage*, %class.SkImage** %298, align 8
  %300 = getelementptr inbounds %"class.cc::ServiceImageTransferCacheEntry", %"class.cc::ServiceImageTransferCacheEntry"* %0, i64 0, i32 1
  %301 = load %class.GrDirectContext*, %class.GrDirectContext** %300, align 8
  call void @_ZNK7SkImage16makeTextureImageEP15GrDirectContext11GrMipmapped10SkBudgeted(%class.sk_sp.82* nonnull sret %7, %class.SkImage* %299, %class.GrDirectContext* %301, i1 zeroext true, i1 zeroext false) #14
  %302 = load %class.SkImage*, %class.SkImage** %296, align 8
  %303 = icmp eq %class.SkImage* %302, null
  br i1 %303, label %333, label %304

304:                                              ; preds = %294
  %305 = ptrtoint %class.SkImage* %302 to i64
  store %class.SkImage* null, %class.SkImage** %296, align 8
  %306 = load %class.SkImage*, %class.SkImage** %298, align 8
  %307 = bitcast %class.sk_sp.82* %297 to i64*
  store i64 %305, i64* %307, align 8
  %308 = icmp eq %class.SkImage* %306, null
  br i1 %308, label %309, label %310

309:                                              ; preds = %304
  store i8 1, i8* %8, align 8
  br label %333

310:                                              ; preds = %304
  %311 = getelementptr inbounds %class.SkImage, %class.SkImage* %306, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = atomicrmw add i32* %311, i32 -1 acq_rel
  %313 = icmp eq i32 %312, 1
  br i1 %313, label %314, label %320

314:                                              ; preds = %310
  %315 = bitcast %class.SkImage* %306 to %class.SkRefCntBase*
  %316 = bitcast %class.SkImage* %306 to void (%class.SkRefCntBase*)***
  %317 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %316, align 8
  %318 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %317, i64 2
  %319 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %318, align 8
  call void %319(%class.SkRefCntBase* nonnull %315) #14
  br label %320

320:                                              ; preds = %314, %310
  %321 = load %class.SkImage*, %class.SkImage** %296, align 8
  store i8 1, i8* %8, align 8
  %322 = icmp eq %class.SkImage* %321, null
  br i1 %322, label %333, label %323

323:                                              ; preds = %320
  %324 = getelementptr inbounds %class.SkImage, %class.SkImage* %321, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = atomicrmw add i32* %324, i32 -1 acq_rel
  %326 = icmp eq i32 %325, 1
  br i1 %326, label %327, label %333

327:                                              ; preds = %323
  %328 = bitcast %class.SkImage* %321 to %class.SkRefCntBase*
  %329 = bitcast %class.SkImage* %321 to void (%class.SkRefCntBase*)***
  %330 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %329, align 8
  %331 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %330, i64 2
  %332 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %331, align 8
  call void %332(%class.SkRefCntBase* nonnull %328) #14
  br label %333

333:                                              ; preds = %294, %309, %320, %323, %327
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %295) #14
  br label %334

334:                                              ; preds = %1, %333, %293
  ret void
}

declare void @_ZNK7SkImage13refColorSpaceEv(%class.sk_sp* sret, %class.SkImage*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2cc22TransferCacheEntryBaseINS_24ClientTransferCacheEntryELNS_22TransferCacheEntryTypeE1EE4TypeEv(%"class.cc::TransferCacheEntryBase"*) unnamed_addr #1 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK2cc22TransferCacheEntryBaseINS_25ServiceTransferCacheEntryELNS_22TransferCacheEntryTypeE1EE4TypeEv(%"class.cc::TransferCacheEntryBase.7"*) unnamed_addr #1 comdat align 2 {
  ret i32 1
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #8

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare void @_ZN2cc13PaintOpWriter5WriteEh(%"class.cc::PaintOpWriter"*, i8 zeroext) local_unnamed_addr #3

declare dereferenceable(176) %class.GrBackendTexture* @_ZN16GrBackendTextureaSERKS_(%class.GrBackendTexture*, %class.GrBackendTexture* dereferenceable(176)) local_unnamed_addr #3

declare void @_ZN10SkYUVAInfoC1E7SkISizeNS_11PlaneConfigENS_11SubsamplingE15SkYUVColorSpace15SkEncodedOriginNS_6SitingES5_(%class.SkYUVAInfo*, i64, i32, i32, i32, i32, i32, i32) unnamed_addr #3

declare void @_ZN21GrYUVABackendTexturesC1ERK10SkYUVAInfoPK16GrBackendTexture15GrSurfaceOrigin(%class.GrYUVABackendTextures*, %class.SkYUVAInfo* dereferenceable(32), %class.GrBackendTexture*, i32) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN7SkImage20MakeFromYUVATexturesEP18GrRecordingContextRK21GrYUVABackendTextures5sk_spI12SkColorSpaceEPFvPvES8_(%class.sk_sp.82* sret, %class.GrRecordingContext*, %class.GrYUVABackendTextures* dereferenceable(744), %class.sk_sp*, void (i8*)*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2cc12_GLOBAL__N_114ReleaseContextEPv(i8*) #1 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %37, label %3

3:                                                ; preds = %1
  %4 = bitcast i8* %0 to %class.sk_sp.82**
  %5 = load %class.sk_sp.82*, %class.sk_sp.82** %4, align 8
  %6 = icmp eq %class.sk_sp.82* %5, null
  br i1 %6, label %36, label %7

7:                                                ; preds = %3
  %8 = bitcast %class.sk_sp.82* %5 to i8*
  %9 = getelementptr inbounds i8, i8* %0, i64 8
  %10 = bitcast i8* %9 to %class.sk_sp.82**
  %11 = load %class.sk_sp.82*, %class.sk_sp.82** %10, align 8
  %12 = icmp eq %class.sk_sp.82* %11, %5
  br i1 %12, label %34, label %13

13:                                               ; preds = %7, %29
  %14 = phi %class.sk_sp.82* [ %15, %29 ], [ %11, %7 ]
  %15 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %14, i64 -1
  %16 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %15, i64 0, i32 0
  %17 = load %class.SkImage*, %class.SkImage** %16, align 8
  %18 = icmp eq %class.SkImage* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %class.SkImage, %class.SkImage* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %class.SkImage* %17 to %class.SkRefCntBase*
  %25 = bitcast %class.SkImage* %17 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  tail call void %28(%class.SkRefCntBase* nonnull %24) #14
  br label %29

29:                                               ; preds = %23, %19, %13
  %30 = icmp eq %class.sk_sp.82* %15, %5
  br i1 %30, label %31, label %13

31:                                               ; preds = %29
  %32 = bitcast i8* %0 to i8**
  %33 = load i8*, i8** %32, align 8
  br label %34

34:                                               ; preds = %31, %7
  %35 = phi i8* [ %33, %31 ], [ %8, %7 ]
  store %class.sk_sp.82* %5, %class.sk_sp.82** %10, align 8
  tail call void @_ZdlPv(i8* %35) #15
  br label %36

36:                                               ; preds = %3, %34
  tail call void @_ZdlPv(i8* %0) #15
  br label %37

37:                                               ; preds = %36, %1
  ret void
}

declare void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

declare void @_ZN2cc13PaintOpReader4ReadEPh(%"class.cc::PaintOpReader"*, i8*) local_unnamed_addr #3

declare void @_ZN2cc13PaintOpReader10SetInvalidEb(%"class.cc::PaintOpReader"*, i1 zeroext) local_unnamed_addr #3

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #3

; Function Attrs: inlinehint norecurse nounwind readnone ssp uwtable
define internal void @"_ZZN2cc30ServiceImageTransferCacheEntry11MakeSkImageERK8SkPixmapjj5sk_spI12SkColorSpaceEEN3$_08__invokeEPKvPv"(i8* nocapture, i8* nocapture) #12 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spI7SkImageENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.82* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.82** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.82** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #15
  %33 = bitcast i8* %32 to %class.sk_sp.82*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.82* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.82* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.82* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.SkImage* null, %class.SkImage** %40, align 8
  %43 = bitcast %class.sk_sp.82* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %37, i64 1
  %45 = ptrtoint %class.sk_sp.82* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.82*, %class.sk_sp.82** %46, align 8
  %48 = ptrtoint %class.sk_sp.82* %47 to i64
  %49 = load %class.sk_sp.82*, %class.sk_sp.82** %3, align 8
  %50 = icmp eq %class.sk_sp.82* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.82, %class.sk_sp.82* %49, i64 -1, i32 0
  %53 = ptrtoint %class.SkImage** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.82* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.82* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.82* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.SkImage* null, %class.SkImage** %65, align 8
  %68 = bitcast %class.sk_sp.82* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !17

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.82* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.82* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.82* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.82* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.82* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.82* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.SkImage* null, %class.SkImage** %81, align 8
  %84 = bitcast %class.sk_sp.82* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.82* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.SkImage* null, %class.SkImage** %87, align 8
  %90 = bitcast %class.sk_sp.82* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.82* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.SkImage* null, %class.SkImage** %93, align 8
  %96 = bitcast %class.sk_sp.82* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.82* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.SkImage* null, %class.SkImage** %99, align 8
  %102 = bitcast %class.sk_sp.82* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.82* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.SkImage* null, %class.SkImage** %105, align 8
  %108 = bitcast %class.sk_sp.82* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.82* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.SkImage* null, %class.SkImage** %111, align 8
  %114 = bitcast %class.sk_sp.82* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.82* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.SkImage* null, %class.SkImage** %117, align 8
  %120 = bitcast %class.sk_sp.82* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.82* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.SkImage* null, %class.SkImage** %123, align 8
  %126 = bitcast %class.sk_sp.82* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.82* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.82* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.82*, %class.sk_sp.82** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.82* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.82* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.82* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.82*
  %138 = icmp eq %class.sk_sp.82* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.82* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.82, %class.sk_sp.82* %141, i64 0, i32 0
  %143 = load %class.SkImage*, %class.SkImage** %142, align 8
  %144 = icmp eq %class.SkImage* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %class.SkImage, %class.SkImage* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %class.SkImage* %143 to %class.SkRefCntBase*
  %151 = bitcast %class.SkImage* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #14
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.82* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #15
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { inlinehint norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1073205, i32 2146410443}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!10 = distinct !{!10, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!13 = distinct !{!13, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN2cc12_GLOBAL__N_116MakeTextureImageEP15GrDirectContext5sk_spI7SkImageES3_I12SkColorSpaceE11GrMipmapped: argument 0"}
!16 = distinct !{!16, !"_ZN2cc12_GLOBAL__N_116MakeTextureImageEP15GrDirectContext5sk_spI7SkImageES3_I12SkColorSpaceE11GrMipmapped"}
!17 = distinct !{!17, !7}
