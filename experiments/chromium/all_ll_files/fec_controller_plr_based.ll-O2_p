; ModuleID = '../../third_party/webrtc/modules/audio_coding/audio_network_adaptor/fec_controller_plr_based.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/audio_network_adaptor/fec_controller_plr_based.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.webrtc::FecControllerPlrBased::Config" = type { i8, %"class.webrtc::ThresholdCurve", %"class.webrtc::ThresholdCurve", i32 }
%"class.webrtc::ThresholdCurve" = type { %"struct.webrtc::ThresholdCurve::Point", %"struct.webrtc::ThresholdCurve::Point", float, float }
%"struct.webrtc::ThresholdCurve::Point" = type { float, float }
%"class.webrtc::FecControllerPlrBased" = type { %"class.webrtc::Controller", %"struct.webrtc::FecControllerPlrBased::Config", i8, %"class.absl::optional", %"class.std::__1::unique_ptr" }
%"class.webrtc::Controller" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::SmoothingFilter"* }
%"class.webrtc::SmoothingFilter" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.3 }
%union.anon.3 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webrtc::SmoothingFilterImpl" = type { %"class.webrtc::SmoothingFilter", i32, float, float, %"class.absl::optional.16", float, float, float, i64 }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { i64 }
%"struct.webrtc::Controller::NetworkMetrics" = type { %"class.absl::optional", %"class.absl::optional.8", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.21" }
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, %union.anon.12 }
%union.anon.12 = type { float }
%"class.absl::optional.21" = type { %"class.absl::optional_internal::optional_data.22" }
%"class.absl::optional_internal::optional_data.22" = type { %"class.absl::optional_internal::optional_data_base.23" }
%"class.absl::optional_internal::optional_data_base.23" = type { %"class.absl::optional_internal::optional_data_dtor_base.24" }
%"class.absl::optional_internal::optional_data_dtor_base.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { i64 }
%"struct.webrtc::AudioEncoderRuntimeConfig" = type <{ %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.8", %"class.absl::optional.26", %"class.absl::optional.26", [4 x i8], %"class.absl::optional.21", i8, [7 x i8] }>
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { i8 }
%"class.webrtc::(anonymous namespace)::NullSmoothingFilter" = type { %"class.webrtc::SmoothingFilter", %"class.absl::optional.8" }

$_ZN6webrtc15SmoothingFilterD2Ev = comdat any

@_ZTVN6webrtc21FecControllerPlrBasedE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::FecControllerPlrBased"*)* @_ZN6webrtc21FecControllerPlrBasedD2Ev to i8*), i8* bitcast (void (%"class.webrtc::FecControllerPlrBased"*)* @_ZN6webrtc21FecControllerPlrBasedD0Ev to i8*), i8* bitcast (void (%"class.webrtc::FecControllerPlrBased"*, %"struct.webrtc::Controller::NetworkMetrics"*)* @_ZN6webrtc21FecControllerPlrBased20UpdateNetworkMetricsERKNS_10Controller14NetworkMetricsE to i8*), i8* bitcast (void (%"class.webrtc::FecControllerPlrBased"*, %"struct.webrtc::AudioEncoderRuntimeConfig"*)* @_ZN6webrtc21FecControllerPlrBased12MakeDecisionEPNS_25AudioEncoderRuntimeConfigE to i8*)] }, align 8
@.str = private unnamed_addr constant [17 x i8] c"UseTwccPlrForAna\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1
@_ZTVN6webrtc12_GLOBAL__N_119NullSmoothingFilterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::SmoothingFilter"*)* @_ZN6webrtc15SmoothingFilterD2Ev to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::NullSmoothingFilter"*)* @_ZN6webrtc12_GLOBAL__N_119NullSmoothingFilterD0Ev to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::NullSmoothingFilter"*, float)* @_ZN6webrtc12_GLOBAL__N_119NullSmoothingFilter9AddSampleEf to i8*), i8* bitcast (i64 (%"class.webrtc::(anonymous namespace)::NullSmoothingFilter"*)* @_ZN6webrtc12_GLOBAL__N_119NullSmoothingFilter10GetAverageEv to i8*), i8* bitcast (i1 (%"class.webrtc::(anonymous namespace)::NullSmoothingFilter"*, i32)* @_ZN6webrtc12_GLOBAL__N_119NullSmoothingFilter17SetTimeConstantMsEi to i8*)] }, align 8

@_ZN6webrtc21FecControllerPlrBased6ConfigC1EbRKNS_14ThresholdCurveES4_i = hidden unnamed_addr alias void (%"struct.webrtc::FecControllerPlrBased::Config"*, i1, %"class.webrtc::ThresholdCurve"*, %"class.webrtc::ThresholdCurve"*, i32), void (%"struct.webrtc::FecControllerPlrBased::Config"*, i1, %"class.webrtc::ThresholdCurve"*, %"class.webrtc::ThresholdCurve"*, i32)* @_ZN6webrtc21FecControllerPlrBased6ConfigC2EbRKNS_14ThresholdCurveES4_i
@_ZN6webrtc21FecControllerPlrBasedC1ERKNS0_6ConfigENSt3__110unique_ptrINS_15SmoothingFilterENS4_14default_deleteIS6_EEEE = hidden unnamed_addr alias void (%"class.webrtc::FecControllerPlrBased"*, %"struct.webrtc::FecControllerPlrBased::Config"*, %"class.webrtc::SmoothingFilter"*), void (%"class.webrtc::FecControllerPlrBased"*, %"struct.webrtc::FecControllerPlrBased::Config"*, %"class.webrtc::SmoothingFilter"*)* @_ZN6webrtc21FecControllerPlrBasedC2ERKNS0_6ConfigENSt3__110unique_ptrINS_15SmoothingFilterENS4_14default_deleteIS6_EEEE
@_ZN6webrtc21FecControllerPlrBasedC1ERKNS0_6ConfigE = hidden unnamed_addr alias void (%"class.webrtc::FecControllerPlrBased"*, %"struct.webrtc::FecControllerPlrBased::Config"*), void (%"class.webrtc::FecControllerPlrBased"*, %"struct.webrtc::FecControllerPlrBased::Config"*)* @_ZN6webrtc21FecControllerPlrBasedC2ERKNS0_6ConfigE
@_ZN6webrtc21FecControllerPlrBasedD1Ev = hidden unnamed_addr alias void (%"class.webrtc::FecControllerPlrBased"*), void (%"class.webrtc::FecControllerPlrBased"*)* @_ZN6webrtc21FecControllerPlrBasedD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21FecControllerPlrBased6ConfigC2EbRKNS_14ThresholdCurveES4_i(%"struct.webrtc::FecControllerPlrBased::Config"* nocapture, i1 zeroext, %"class.webrtc::ThresholdCurve"* nocapture readonly dereferenceable(24), %"class.webrtc::ThresholdCurve"* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %6 = zext i1 %1 to i8
  %7 = getelementptr inbounds %"struct.webrtc::FecControllerPlrBased::Config", %"struct.webrtc::FecControllerPlrBased::Config"* %0, i64 0, i32 0
  store i8 %6, i8* %7, align 4
  %8 = getelementptr inbounds %"struct.webrtc::FecControllerPlrBased::Config", %"struct.webrtc::FecControllerPlrBased::Config"* %0, i64 0, i32 1
  %9 = bitcast %"class.webrtc::ThresholdCurve"* %8 to i8*
  %10 = bitcast %"class.webrtc::ThresholdCurve"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 24, i1 false)
  %11 = getelementptr inbounds %"struct.webrtc::FecControllerPlrBased::Config", %"struct.webrtc::FecControllerPlrBased::Config"* %0, i64 0, i32 2
  %12 = bitcast %"class.webrtc::ThresholdCurve"* %11 to i8*
  %13 = bitcast %"class.webrtc::ThresholdCurve"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 24, i1 false)
  %14 = getelementptr inbounds %"struct.webrtc::FecControllerPlrBased::Config", %"struct.webrtc::FecControllerPlrBased::Config"* %0, i64 0, i32 3
  store i32 %4, i32* %14, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21FecControllerPlrBasedC2ERKNS0_6ConfigENSt3__110unique_ptrINS_15SmoothingFilterENS4_14default_deleteIS6_EEEE(%"class.webrtc::FecControllerPlrBased"* nocapture, %"struct.webrtc::FecControllerPlrBased::Config"* nocapture readonly dereferenceable(56), %"class.webrtc::SmoothingFilter"*) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.webrtc::SmoothingFilter"* %2 to i64
  %5 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc21FecControllerPlrBasedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"struct.webrtc::FecControllerPlrBased::Config", %"struct.webrtc::FecControllerPlrBased::Config"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 4 %7, i64 56, i1 false)
  %8 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 2
  %9 = load i8, i8* %7, align 4, !range !2
  store i8 %9, i8* %8, align 8
  %10 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 4
  %12 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  store i64 %4, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21FecControllerPlrBasedC2ERKNS0_6ConfigE(%"class.webrtc::FecControllerPlrBased"* nocapture, %"struct.webrtc::FecControllerPlrBased::Config"* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 16, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 1 getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i64 16, i1 false) #9
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = bitcast i64* %9 to i8*
  store i8 0, i8* %10, align 8
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #9
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %18, 7
  br i1 %19, label %20, label %30

20:                                               ; preds = %2
  %21 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7) #9
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %20
  %24 = call i8* @_Znwm(i64 16) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 0, i64 16, i1 false)
  %25 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6webrtc12_GLOBAL__N_119NullSmoothingFilterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 8
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc21FecControllerPlrBasedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 0
  %29 = getelementptr inbounds %"struct.webrtc::FecControllerPlrBased::Config", %"struct.webrtc::FecControllerPlrBased::Config"* %1, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 4 %29, i64 56, i1 false) #9
  br label %38

30:                                               ; preds = %2, %20
  %31 = call i8* @_Znwm(i64 64) #10
  %32 = bitcast i8* %31 to %"class.webrtc::SmoothingFilterImpl"*
  %33 = getelementptr inbounds %"struct.webrtc::FecControllerPlrBased::Config", %"struct.webrtc::FecControllerPlrBased::Config"* %1, i64 0, i32 3
  %34 = load i32, i32* %33, align 4
  call void @_ZN6webrtc19SmoothingFilterImplC1Ei(%"class.webrtc::SmoothingFilterImpl"* nonnull %32, i32 %34) #9
  %35 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc21FecControllerPlrBasedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds %"struct.webrtc::FecControllerPlrBased::Config", %"struct.webrtc::FecControllerPlrBased::Config"* %1, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 4 %37, i64 56, i1 false) #9
  br label %38

38:                                               ; preds = %30, %23
  %39 = phi i8* [ %37, %30 ], [ %29, %23 ]
  %40 = phi i8* [ %31, %30 ], [ %24, %23 ]
  %41 = ptrtoint i8* %40 to i64
  %42 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 2
  %43 = load i8, i8* %39, align 4, !range !2
  store i8 %43, i8* %42, align 8
  %44 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %44, align 4
  %45 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 4
  %46 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  store i64 %41, i64* %46, align 8
  %47 = load i8, i8* %12, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %38, %49
  %53 = load i8, i8* %8, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %52, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6webrtc19SmoothingFilterImplC1Ei(%"class.webrtc::SmoothingFilterImpl"*, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21FecControllerPlrBasedD2Ev(%"class.webrtc::FecControllerPlrBased"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc21FecControllerPlrBasedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::SmoothingFilter"*, %"class.webrtc::SmoothingFilter"** %3, align 8
  store %"class.webrtc::SmoothingFilter"* null, %"class.webrtc::SmoothingFilter"** %3, align 8
  %5 = icmp eq %"class.webrtc::SmoothingFilter"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::SmoothingFilter"* %4 to void (%"class.webrtc::SmoothingFilter"*)***
  %8 = load void (%"class.webrtc::SmoothingFilter"*)**, void (%"class.webrtc::SmoothingFilter"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::SmoothingFilter"*)*, void (%"class.webrtc::SmoothingFilter"*)** %8, i64 1
  %10 = load void (%"class.webrtc::SmoothingFilter"*)*, void (%"class.webrtc::SmoothingFilter"*)** %9, align 8
  tail call void %10(%"class.webrtc::SmoothingFilter"* nonnull %4) #9
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21FecControllerPlrBasedD0Ev(%"class.webrtc::FecControllerPlrBased"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6webrtc21FecControllerPlrBasedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::SmoothingFilter"*, %"class.webrtc::SmoothingFilter"** %3, align 8
  store %"class.webrtc::SmoothingFilter"* null, %"class.webrtc::SmoothingFilter"** %3, align 8
  %5 = icmp eq %"class.webrtc::SmoothingFilter"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::SmoothingFilter"* %4 to void (%"class.webrtc::SmoothingFilter"*)***
  %8 = load void (%"class.webrtc::SmoothingFilter"*)**, void (%"class.webrtc::SmoothingFilter"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.webrtc::SmoothingFilter"*)*, void (%"class.webrtc::SmoothingFilter"*)** %8, i64 1
  %10 = load void (%"class.webrtc::SmoothingFilter"*)*, void (%"class.webrtc::SmoothingFilter"*)** %9, align 8
  tail call void %10(%"class.webrtc::SmoothingFilter"* nonnull %4) #9
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.webrtc::FecControllerPlrBased"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21FecControllerPlrBased20UpdateNetworkMetricsERKNS_10Controller14NetworkMetricsE(%"class.webrtc::FecControllerPlrBased"* nocapture, %"struct.webrtc::Controller::NetworkMetrics"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::Controller::NetworkMetrics", %"struct.webrtc::Controller::NetworkMetrics"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"struct.webrtc::Controller::NetworkMetrics"* %1 to i64*
  %9 = bitcast i8* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 4
  br label %11

11:                                               ; preds = %2, %6
  %12 = getelementptr inbounds %"struct.webrtc::Controller::NetworkMetrics", %"struct.webrtc::Controller::NetworkMetrics"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.webrtc::SmoothingFilter"*, %"class.webrtc::SmoothingFilter"** %16, align 8
  %18 = getelementptr inbounds %"struct.webrtc::Controller::NetworkMetrics", %"struct.webrtc::Controller::NetworkMetrics"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = load float, float* %18, align 4
  %20 = bitcast %"class.webrtc::SmoothingFilter"* %17 to void (%"class.webrtc::SmoothingFilter"*, float)***
  %21 = load void (%"class.webrtc::SmoothingFilter"*, float)**, void (%"class.webrtc::SmoothingFilter"*, float)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.webrtc::SmoothingFilter"*, float)*, void (%"class.webrtc::SmoothingFilter"*, float)** %21, i64 2
  %23 = load void (%"class.webrtc::SmoothingFilter"*, float)*, void (%"class.webrtc::SmoothingFilter"*, float)** %22, align 8
  tail call void %23(%"class.webrtc::SmoothingFilter"* %17, float %19) #9
  br label %24

24:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc21FecControllerPlrBased12MakeDecisionEPNS_25AudioEncoderRuntimeConfigE(%"class.webrtc::FecControllerPlrBased"* nocapture, %"struct.webrtc::AudioEncoderRuntimeConfig"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::SmoothingFilter"*, %"class.webrtc::SmoothingFilter"** %3, align 8
  %5 = bitcast %"class.webrtc::SmoothingFilter"* %4 to i64 (%"class.webrtc::SmoothingFilter"*)***
  %6 = load i64 (%"class.webrtc::SmoothingFilter"*)**, i64 (%"class.webrtc::SmoothingFilter"*)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.webrtc::SmoothingFilter"*)*, i64 (%"class.webrtc::SmoothingFilter"*)** %6, i64 3
  %8 = load i64 (%"class.webrtc::SmoothingFilter"*)*, i64 (%"class.webrtc::SmoothingFilter"*)** %7, align 8
  %9 = tail call i64 %8(%"class.webrtc::SmoothingFilter"* %4) #9
  %10 = trunc i64 %9 to i8
  %11 = lshr i64 %9, 32
  %12 = trunc i64 %11 to i32
  %13 = bitcast i32 %12 to float
  %14 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 2
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = icmp eq i8 %10, 0
  %21 = or i1 %20, %19
  br i1 %16, label %57, label %22

22:                                               ; preds = %2
  br i1 %21, label %54, label %23

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = sitofp i32 %25 to float
  %27 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %28 = load float, float* %27, align 4
  %29 = fcmp ogt float %28, %26
  br i1 %29, label %54, label %30

30:                                               ; preds = %23
  %31 = fcmp oeq float %28, %26
  br i1 %31, label %32, label %36

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %34 = load float, float* %33, align 4
  %35 = fcmp ogt float %34, %13
  br label %54

36:                                               ; preds = %30
  %37 = fcmp olt float %28, %26
  br i1 %37, label %38, label %50

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %40 = load float, float* %39, align 4
  %41 = fcmp ogt float %40, %26
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 2, i32 3
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 2, i32 2
  %46 = load float, float* %45, align 4
  %47 = fmul float %46, %26
  %48 = fadd float %44, %47
  %49 = fcmp ogt float %48, %13
  br label %54

50:                                               ; preds = %38, %36
  %51 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %52 = load float, float* %51, align 4
  %53 = fcmp ogt float %52, %13
  br label %54

54:                                               ; preds = %22, %23, %32, %42, %50
  %55 = phi i1 [ false, %22 ], [ %35, %32 ], [ %49, %42 ], [ %53, %50 ], [ true, %23 ]
  %56 = xor i1 %55, true
  br label %92

57:                                               ; preds = %2
  br i1 %21, label %92, label %58

58:                                               ; preds = %57
  %59 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = sitofp i32 %60 to float
  %62 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %63 = load float, float* %62, align 4
  %64 = fcmp ogt float %63, %61
  br i1 %64, label %89, label %65

65:                                               ; preds = %58
  %66 = fcmp oeq float %63, %61
  br i1 %66, label %67, label %71

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %69 = load float, float* %68, align 4
  %70 = fcmp ogt float %69, %13
  br label %89

71:                                               ; preds = %65
  %72 = fcmp olt float %63, %61
  br i1 %72, label %73, label %85

73:                                               ; preds = %71
  %74 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %75 = load float, float* %74, align 4
  %76 = fcmp ogt float %75, %61
  br i1 %76, label %77, label %85

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 1, i32 3
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 1, i32 2
  %81 = load float, float* %80, align 4
  %82 = fmul float %81, %61
  %83 = fadd float %79, %82
  %84 = fcmp ogt float %83, %13
  br label %89

85:                                               ; preds = %73, %71
  %86 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 1, i32 1, i32 1
  %87 = load float, float* %86, align 4
  %88 = fcmp ogt float %87, %13
  br label %89

89:                                               ; preds = %85, %77, %67, %58
  %90 = phi i1 [ %70, %67 ], [ %84, %77 ], [ %88, %85 ], [ true, %58 ]
  %91 = xor i1 %90, true
  br label %92

92:                                               ; preds = %89, %57, %54
  %93 = phi i1 [ %56, %54 ], [ %91, %89 ], [ false, %57 ]
  %94 = zext i1 %93 to i8
  store i8 %94, i8* %14, align 8
  %95 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %96 = bitcast i8* %95 to i16*
  %97 = zext i1 %93 to i16
  %98 = shl nuw nsw i16 %97, 8
  %99 = or i16 %98, 1
  store i16 %99, i16* %96, align 8
  %100 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %101 = load i8, i8* %100, align 4, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %92
  store i8 1, i8* %100, align 4
  br label %104

104:                                              ; preds = %92, %103
  %105 = select i1 %20, float 0.000000e+00, float %13
  %106 = getelementptr inbounds %"struct.webrtc::AudioEncoderRuntimeConfig", %"struct.webrtc::AudioEncoderRuntimeConfig"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  store float %105, float* %106, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc21FecControllerPlrBased20FecDisablingDecisionERKN4absl8optionalIfEE(%"class.webrtc::FecControllerPlrBased"* nocapture readonly, %"class.absl::optional.8"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %43, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %43, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %17 = load float, float* %16, align 4
  %18 = fcmp ogt float %17, %13
  br i1 %18, label %43, label %19

19:                                               ; preds = %10
  %20 = fcmp oeq float %17, %13
  br i1 %20, label %21, label %25

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 2, i32 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = fcmp olt float %15, %23
  br label %43

25:                                               ; preds = %19
  %26 = fcmp olt float %17, %13
  br i1 %26, label %27, label %39

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 2, i32 1, i32 0
  %29 = load float, float* %28, align 4
  %30 = fcmp ogt float %29, %13
  br i1 %30, label %31, label %39

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 2, i32 3
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 2, i32 2
  %35 = load float, float* %34, align 4
  %36 = fmul float %35, %13
  %37 = fadd float %33, %36
  %38 = fcmp olt float %15, %37
  br label %43

39:                                               ; preds = %27, %25
  %40 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 2, i32 1, i32 1
  %41 = load float, float* %40, align 4
  %42 = fcmp olt float %15, %41
  br label %43

43:                                               ; preds = %6, %2, %39, %31, %21, %10
  %44 = phi i1 [ false, %6 ], [ false, %2 ], [ %24, %21 ], [ %38, %31 ], [ %42, %39 ], [ true, %10 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc21FecControllerPlrBased19FecEnablingDecisionERKN4absl8optionalIfEE(%"class.webrtc::FecControllerPlrBased"* nocapture readonly, %"class.absl::optional.8"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %46, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %46, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sitofp i32 %12 to float
  %14 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %17 = load float, float* %16, align 4
  %18 = fcmp ogt float %17, %13
  br i1 %18, label %43, label %19

19:                                               ; preds = %10
  %20 = fcmp oeq float %17, %13
  br i1 %20, label %21, label %25

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = fcmp olt float %15, %23
  br label %43

25:                                               ; preds = %19
  %26 = fcmp olt float %17, %13
  br i1 %26, label %27, label %39

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %29 = load float, float* %28, align 4
  %30 = fcmp ogt float %29, %13
  br i1 %30, label %31, label %39

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 1, i32 3
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 1, i32 2
  %35 = load float, float* %34, align 4
  %36 = fmul float %35, %13
  %37 = fadd float %33, %36
  %38 = fcmp olt float %15, %37
  br label %43

39:                                               ; preds = %27, %25
  %40 = getelementptr inbounds %"class.webrtc::FecControllerPlrBased", %"class.webrtc::FecControllerPlrBased"* %0, i64 0, i32 1, i32 1, i32 1, i32 1
  %41 = load float, float* %40, align 4
  %42 = fcmp olt float %15, %41
  br label %43

43:                                               ; preds = %10, %21, %31, %39
  %44 = phi i1 [ %24, %21 ], [ %38, %31 ], [ %42, %39 ], [ true, %10 ]
  %45 = xor i1 %44, true
  br label %46

46:                                               ; preds = %6, %2, %43
  %47 = phi i1 [ %45, %43 ], [ false, %6 ], [ false, %2 ]
  ret i1 %47
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_119NullSmoothingFilterD0Ev(%"class.webrtc::(anonymous namespace)::NullSmoothingFilter"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.webrtc::(anonymous namespace)::NullSmoothingFilter"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define internal void @_ZN6webrtc12_GLOBAL__N_119NullSmoothingFilter9AddSampleEf(%"class.webrtc::(anonymous namespace)::NullSmoothingFilter"* nocapture, float) unnamed_addr #6 align 2 {
  %3 = bitcast float %1 to i32
  %4 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::NullSmoothingFilter", %"class.webrtc::(anonymous namespace)::NullSmoothingFilter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = bitcast i8* %4 to i64*
  %6 = zext i32 %3 to i64
  %7 = shl nuw i64 %6, 32
  %8 = or i64 %7, 1
  store i64 %8, i64* %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZN6webrtc12_GLOBAL__N_119NullSmoothingFilter10GetAverageEv(%"class.webrtc::(anonymous namespace)::NullSmoothingFilter"* nocapture readonly) unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::NullSmoothingFilter", %"class.webrtc::(anonymous namespace)::NullSmoothingFilter"* %0, i64 0, i32 1
  %3 = bitcast %"class.absl::optional.8"* %2 to i64*
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN6webrtc12_GLOBAL__N_119NullSmoothingFilter17SetTimeConstantMsEi(%"class.webrtc::(anonymous namespace)::NullSmoothingFilter"* nocapture readnone, i32) unnamed_addr #8 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc15SmoothingFilterD2Ev(%"class.webrtc::SmoothingFilter"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
