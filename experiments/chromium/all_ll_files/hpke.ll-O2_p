; ModuleID = '../../third_party/boringssl/src/crypto/hpke/hpke.c'
source_filename = "../../third_party/boringssl/src/crypto/hpke/hpke.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.evp_hpke_kem_st = type { i16, i64, i64, i32 (%struct.evp_hpke_key_st*, %struct.evp_hpke_kem_st*, i8*, i64)*, i32 (%struct.evp_hpke_kem_st*, i8*, i64*, i8*, i64*, i64, i8*, i64, i8*, i64)*, i32 (%struct.evp_hpke_key_st*, i8*, i64*, i8*, i64)* }
%struct.evp_hpke_key_st = type { %struct.evp_hpke_kem_st*, [32 x i8], [32 x i8] }
%struct.evp_hpke_kdf_st = type { i16, %struct.env_md_st* ()* }
%struct.env_md_st = type opaque
%struct.evp_hpke_aead_st = type { i16, %struct.evp_aead_st* ()* }
%struct.evp_aead_st = type opaque
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%struct.engine_st = type opaque

@EVP_hpke_x25519_hkdf_sha256.kKEM = internal constant %struct.evp_hpke_kem_st { i16 32, i64 32, i64 32, i32 (%struct.evp_hpke_key_st*, %struct.evp_hpke_kem_st*, i8*, i64)* @x25519_init_key, i32 (%struct.evp_hpke_kem_st*, i8*, i64*, i8*, i64*, i64, i8*, i64, i8*, i64)* @x25519_encap_with_seed, i32 (%struct.evp_hpke_key_st*, i8*, i64*, i8*, i64)* @x25519_decap }, align 8
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/boringssl/src/crypto/hpke/hpke.c\00", align 1
@EVP_hpke_hkdf_sha256.kKDF = internal constant %struct.evp_hpke_kdf_st { i16 1, %struct.env_md_st* ()* @EVP_sha256 }, align 8
@EVP_hpke_aes_128_gcm.kAEAD = internal constant %struct.evp_hpke_aead_st { i16 1, %struct.evp_aead_st* ()* @EVP_aead_aes_128_gcm }, align 8
@EVP_hpke_aes_256_gcm.kAEAD = internal constant %struct.evp_hpke_aead_st { i16 2, %struct.evp_aead_st* ()* @EVP_aead_aes_256_gcm }, align 8
@EVP_hpke_chacha20_poly1305.kAEAD = internal constant %struct.evp_hpke_aead_st { i16 3, %struct.evp_aead_st* ()* @EVP_aead_chacha20_poly1305 }, align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"sec\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"eae_prk\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"shared_secret\00", align 1
@kHpkeVersionId = internal constant [8 x i8] c"HPKE-v1\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"psk_id_hash\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"info_hash\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"secret\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"key\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"base_nonce\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"HPKE\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.evp_hpke_kem_st* @EVP_hpke_x25519_hkdf_sha256() local_unnamed_addr #0 {
  ret %struct.evp_hpke_kem_st* @EVP_hpke_x25519_hkdf_sha256.kKEM
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @x25519_init_key(%struct.evp_hpke_key_st*, %struct.evp_hpke_kem_st* nocapture readnone, i8*, i64) #1 {
  %5 = icmp eq i64 %3, 32
  br i1 %5, label %7, label %6

6:                                                ; preds = %4
  tail call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 136) #6
  br label %10

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.evp_hpke_key_st, %struct.evp_hpke_key_st* %0, i64 0, i32 1, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %2, i64 32, i1 false) #6
  %9 = getelementptr inbounds %struct.evp_hpke_key_st, %struct.evp_hpke_key_st* %0, i64 0, i32 2, i64 0
  tail call void @X25519_public_from_private(i8* %9, i8* %2) #6
  br label %10

10:                                               ; preds = %7, %6
  %11 = phi i32 [ 0, %6 ], [ 1, %7 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @x25519_encap_with_seed(%struct.evp_hpke_kem_st* nocapture readonly, i8*, i64* nocapture, i8*, i64* nocapture, i64, i8*, i64, i8*, i64) #1 {
  %11 = alloca [5 x i8], align 1
  %12 = alloca [64 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca [32 x i8], align 16
  %15 = alloca [64 x i8], align 16
  %16 = icmp ult i64 %5, 32
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  tail call void @ERR_put_error(i32 6, i32 0, i32 137, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 151) #6
  br label %56

18:                                               ; preds = %10
  %19 = icmp eq i64 %9, 32
  br i1 %19, label %21, label %20

20:                                               ; preds = %18
  tail call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 155) #6
  br label %56

21:                                               ; preds = %18
  tail call void @X25519_public_from_private(i8* %3, i8* %8) #6
  %22 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #6
  %23 = icmp eq i64 %7, 32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 -86, i64 32, i1 false)
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = call i32 @X25519(i8* nonnull %22, i8* %8, i8* %6) #6
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24, %21
  call void @ERR_put_error(i32 6, i32 0, i32 134, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 163) #6
  br label %54

28:                                               ; preds = %24
  %29 = getelementptr inbounds [64 x i8], [64 x i8]* %15, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %29) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %29, i8* align 1 %3, i64 32, i1 false) #6
  %30 = getelementptr inbounds [64 x i8], [64 x i8]* %15, i64 0, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %30, i8* align 1 %6, i64 32, i1 false) #6
  %31 = getelementptr inbounds %struct.evp_hpke_kem_st, %struct.evp_hpke_kem_st* %0, i64 0, i32 0
  %32 = load i16, i16* %31, align 8
  %33 = call %struct.env_md_st* @EVP_sha256() #6
  %34 = getelementptr inbounds [5 x i8], [5 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %34) #6
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %11, i64 0, i64 1
  %36 = getelementptr inbounds [5 x i8], [5 x i8]* %11, i64 0, i64 2
  %37 = getelementptr inbounds [5 x i8], [5 x i8]* %11, i64 0, i64 3
  %38 = getelementptr inbounds [5 x i8], [5 x i8]* %11, i64 0, i64 4
  store i8 75, i8* %34, align 1
  store i8 69, i8* %35, align 1
  store i8 77, i8* %36, align 1
  %39 = lshr i16 %32, 8
  %40 = trunc i16 %39 to i8
  store i8 %40, i8* %37, align 1
  %41 = trunc i16 %32 to i8
  store i8 %41, i8* %38, align 1
  %42 = getelementptr inbounds [64 x i8], [64 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %42) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %42, i8 -86, i64 64, i1 false) #6
  %43 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #6
  store i64 -6148914691236517206, i64* %13, align 8
  %44 = call fastcc i32 @hpke_labeled_extract(%struct.env_md_st* %33, i8* nonnull %42, i64* nonnull %13, i8* null, i64 0, i8* nonnull %34, i64 5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* nonnull %22, i64 32) #6
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %28
  %47 = load i64, i64* %13, align 8
  %48 = call fastcc i32 @hpke_labeled_expand(%struct.env_md_st* %33, i8* %1, i64 32, i8* nonnull %42, i64 %47, i8* nonnull %34, i64 5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %29, i64 64) #6
  %49 = icmp eq i32 %48, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %42) #6
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %34) #6
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  store i64 32, i64* %4, align 8
  store i64 32, i64* %2, align 8
  br label %52

51:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %42) #6
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %34) #6
  br label %52

52:                                               ; preds = %51, %46, %50
  %53 = phi i32 [ 1, %50 ], [ 0, %46 ], [ 0, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %29) #6
  br label %54

54:                                               ; preds = %52, %27
  %55 = phi i32 [ 0, %27 ], [ %53, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #6
  br label %56

56:                                               ; preds = %54, %20, %17
  %57 = phi i32 [ 0, %17 ], [ 0, %20 ], [ %55, %54 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @x25519_decap(%struct.evp_hpke_key_st*, i8*, i64* nocapture, i8*, i64) #1 {
  %6 = alloca [5 x i8], align 1
  %7 = alloca [64 x i8], align 16
  %8 = alloca i64, align 8
  %9 = alloca [32 x i8], align 16
  %10 = alloca [64 x i8], align 16
  %11 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6
  %12 = icmp eq i64 %4, 32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 32, i1 false)
  br i1 %12, label %13, label %17

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.evp_hpke_key_st, %struct.evp_hpke_key_st* %0, i64 0, i32 1, i64 0
  %15 = call i32 @X25519(i8* nonnull %11, i8* %14, i8* %3) #6
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %13, %5
  call void @ERR_put_error(i32 6, i32 0, i32 134, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 188) #6
  br label %47

18:                                               ; preds = %13
  %19 = getelementptr inbounds [64 x i8], [64 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %19) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %19, i8* align 1 %3, i64 32, i1 false) #6
  %20 = getelementptr inbounds [64 x i8], [64 x i8]* %10, i64 0, i64 32
  %21 = getelementptr inbounds %struct.evp_hpke_key_st, %struct.evp_hpke_key_st* %0, i64 0, i32 2, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %20, i8* align 1 %21, i64 32, i1 false) #6
  %22 = getelementptr inbounds %struct.evp_hpke_key_st, %struct.evp_hpke_key_st* %0, i64 0, i32 0
  %23 = load %struct.evp_hpke_kem_st*, %struct.evp_hpke_kem_st** %22, align 8
  %24 = getelementptr inbounds %struct.evp_hpke_kem_st, %struct.evp_hpke_kem_st* %23, i64 0, i32 0
  %25 = load i16, i16* %24, align 8
  %26 = call %struct.env_md_st* @EVP_sha256() #6
  %27 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %27) #6
  %28 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 1
  %29 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 2
  %30 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 3
  %31 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 4
  store i8 75, i8* %27, align 1
  store i8 69, i8* %28, align 1
  store i8 77, i8* %29, align 1
  %32 = lshr i16 %25, 8
  %33 = trunc i16 %32 to i8
  store i8 %33, i8* %30, align 1
  %34 = trunc i16 %25 to i8
  store i8 %34, i8* %31, align 1
  %35 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %35) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 -86, i64 64, i1 false) #6
  %36 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  store i64 -6148914691236517206, i64* %8, align 8
  %37 = call fastcc i32 @hpke_labeled_extract(%struct.env_md_st* %26, i8* nonnull %35, i64* nonnull %8, i8* null, i64 0, i8* nonnull %27, i64 5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* nonnull %11, i64 32) #6
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %18
  %40 = load i64, i64* %8, align 8
  %41 = call fastcc i32 @hpke_labeled_expand(%struct.env_md_st* %26, i8* %1, i64 32, i8* nonnull %35, i64 %40, i8* nonnull %27, i64 5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8* nonnull %19, i64 64) #6
  %42 = icmp eq i32 %41, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %35) #6
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %27) #6
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  store i64 32, i64* %2, align 8
  br label %45

44:                                               ; preds = %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %35) #6
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %27) #6
  br label %45

45:                                               ; preds = %44, %39, %43
  %46 = phi i32 [ 1, %43 ], [ 0, %39 ], [ 0, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %19) #6
  br label %47

47:                                               ; preds = %45, %17
  %48 = phi i32 [ 0, %17 ], [ %46, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6
  ret i32 %48
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @EVP_HPKE_KEM_id(%struct.evp_hpke_kem_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.evp_hpke_kem_st, %struct.evp_hpke_kem_st* %0, i64 0, i32 0
  %3 = load i16, i16* %2, align 8
  ret i16 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @EVP_HPKE_KEY_zero(%struct.evp_hpke_key_st* nocapture) local_unnamed_addr #1 {
  %2 = bitcast %struct.evp_hpke_key_st* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 72, i1 false) #6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @EVP_HPKE_KEY_cleanup(%struct.evp_hpke_key_st* nocapture) local_unnamed_addr #0 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_HPKE_KEY_init(%struct.evp_hpke_key_st*, %struct.evp_hpke_kem_st*, i8*, i64) local_unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.evp_hpke_key_st, %struct.evp_hpke_key_st* %0, i64 0, i32 1, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 64, i1 false) #6
  %6 = getelementptr inbounds %struct.evp_hpke_key_st, %struct.evp_hpke_key_st* %0, i64 0, i32 0
  store %struct.evp_hpke_kem_st* %1, %struct.evp_hpke_kem_st** %6, align 8
  %7 = getelementptr inbounds %struct.evp_hpke_kem_st, %struct.evp_hpke_kem_st* %1, i64 0, i32 3
  %8 = load i32 (%struct.evp_hpke_key_st*, %struct.evp_hpke_kem_st*, i8*, i64)*, i32 (%struct.evp_hpke_key_st*, %struct.evp_hpke_kem_st*, i8*, i64)** %7, align 8
  %9 = tail call i32 %8(%struct.evp_hpke_key_st* %0, %struct.evp_hpke_kem_st* %1, i8* %2, i64 %3) #6
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %4
  store %struct.evp_hpke_kem_st* null, %struct.evp_hpke_kem_st** %6, align 8
  br label %12

12:                                               ; preds = %4, %11
  %13 = phi i32 [ 0, %11 ], [ 1, %4 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_HPKE_KEY_public_key(%struct.evp_hpke_key_st* nocapture readonly, i8* nocapture, i64* nocapture, i64) local_unnamed_addr #1 {
  %5 = getelementptr inbounds %struct.evp_hpke_key_st, %struct.evp_hpke_key_st* %0, i64 0, i32 0
  %6 = load %struct.evp_hpke_kem_st*, %struct.evp_hpke_kem_st** %5, align 8
  %7 = getelementptr inbounds %struct.evp_hpke_kem_st, %struct.evp_hpke_kem_st* %6, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %3
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  tail call void @ERR_put_error(i32 6, i32 0, i32 137, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 243) #6
  br label %20

11:                                               ; preds = %4
  %12 = icmp eq i64 %8, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.evp_hpke_key_st, %struct.evp_hpke_key_st* %0, i64 0, i32 2, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %14, i64 %8, i1 false) #6
  %15 = load %struct.evp_hpke_kem_st*, %struct.evp_hpke_kem_st** %5, align 8
  %16 = getelementptr inbounds %struct.evp_hpke_kem_st, %struct.evp_hpke_kem_st* %15, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  br label %18

18:                                               ; preds = %11, %13
  %19 = phi i64 [ 0, %11 ], [ %17, %13 ]
  store i64 %19, i64* %2, align 8
  br label %20

20:                                               ; preds = %18, %10
  %21 = phi i32 [ 0, %10 ], [ 1, %18 ]
  ret i32 %21
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.evp_hpke_kdf_st* @EVP_hpke_hkdf_sha256() local_unnamed_addr #0 {
  ret %struct.evp_hpke_kdf_st* @EVP_hpke_hkdf_sha256.kKDF
}

declare %struct.env_md_st* @EVP_sha256() #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @EVP_HPKE_KDF_id(%struct.evp_hpke_kdf_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.evp_hpke_kdf_st, %struct.evp_hpke_kdf_st* %0, i64 0, i32 0
  %3 = load i16, i16* %2, align 8
  ret i16 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.evp_hpke_aead_st* @EVP_hpke_aes_128_gcm() local_unnamed_addr #0 {
  ret %struct.evp_hpke_aead_st* @EVP_hpke_aes_128_gcm.kAEAD
}

declare %struct.evp_aead_st* @EVP_aead_aes_128_gcm() #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.evp_hpke_aead_st* @EVP_hpke_aes_256_gcm() local_unnamed_addr #0 {
  ret %struct.evp_hpke_aead_st* @EVP_hpke_aes_256_gcm.kAEAD
}

declare %struct.evp_aead_st* @EVP_aead_aes_256_gcm() #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.evp_hpke_aead_st* @EVP_hpke_chacha20_poly1305() local_unnamed_addr #0 {
  ret %struct.evp_hpke_aead_st* @EVP_hpke_chacha20_poly1305.kAEAD
}

declare %struct.evp_aead_st* @EVP_aead_chacha20_poly1305() #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i16 @EVP_HPKE_AEAD_id(%struct.evp_hpke_aead_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.evp_hpke_aead_st, %struct.evp_hpke_aead_st* %0, i64 0, i32 0
  %3 = load i16, i16* %2, align 8
  ret i16 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @EVP_HPKE_CTX_zero(%struct.evp_hpke_ctx_st*) local_unnamed_addr #1 {
  %2 = bitcast %struct.evp_hpke_ctx_st* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 720, i1 false) #6
  %3 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 2
  tail call void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st* %3) #6
  ret void
}

declare void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @EVP_HPKE_CTX_cleanup(%struct.evp_hpke_ctx_st*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 2
  tail call void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st* %2) #6
  ret void
}

declare void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_HPKE_CTX_setup_sender(%struct.evp_hpke_ctx_st*, i8*, i64*, i64, %struct.evp_hpke_kem_st*, %struct.evp_hpke_kdf_st*, %struct.evp_hpke_aead_st*, i8*, i64, i8*, i64) local_unnamed_addr #1 {
  %12 = alloca [32 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca [32 x i8], align 16
  %15 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #6
  %16 = getelementptr inbounds %struct.evp_hpke_kem_st, %struct.evp_hpke_kem_st* %4, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -86, i64 32, i1 false)
  %17 = load i64, i64* %16, align 8
  %18 = call i32 @RAND_bytes(i8* nonnull %15, i64 %17) #6
  %19 = load i64, i64* %16, align 8
  %20 = bitcast %struct.evp_hpke_ctx_st* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %20, i8 0, i64 720, i1 false) #6
  %21 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 2
  call void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st* %21) #6
  %22 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 6
  store i32 1, i32* %22, align 8
  %23 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 1
  store %struct.evp_hpke_kdf_st* %5, %struct.evp_hpke_kdf_st** %23, align 8
  %24 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 0
  store %struct.evp_hpke_aead_st* %6, %struct.evp_hpke_aead_st** %24, align 8
  %25 = getelementptr inbounds [32 x i8], [32 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #6
  %26 = bitcast i64* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %25, i8 -86, i64 32, i1 false) #6
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #6
  store i64 -6148914691236517206, i64* %13, align 8
  %27 = getelementptr inbounds %struct.evp_hpke_kem_st, %struct.evp_hpke_kem_st* %4, i64 0, i32 4
  %28 = load i32 (%struct.evp_hpke_kem_st*, i8*, i64*, i8*, i64*, i64, i8*, i64, i8*, i64)*, i32 (%struct.evp_hpke_kem_st*, i8*, i64*, i8*, i64*, i64, i8*, i64, i8*, i64)** %27, align 8
  %29 = call i32 %28(%struct.evp_hpke_kem_st* %4, i8* nonnull %25, i64* nonnull %13, i8* %1, i64* %2, i64 %3, i8* %7, i64 %8, i8* nonnull %15, i64 %19) #6
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %11
  %32 = load i64, i64* %13, align 8
  %33 = call fastcc i32 @hpke_key_schedule(%struct.evp_hpke_ctx_st* %0, i8* nonnull %25, i64 %32, i8* %9, i64 %10) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31, %11
  call void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st* %21) #6
  br label %36

36:                                               ; preds = %31, %35
  %37 = phi i32 [ 0, %35 ], [ 1, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #6
  ret i32 %37
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @RAND_bytes(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_HPKE_CTX_setup_sender_with_seed_for_testing(%struct.evp_hpke_ctx_st*, i8*, i64*, i64, %struct.evp_hpke_kem_st*, %struct.evp_hpke_kdf_st*, %struct.evp_hpke_aead_st*, i8*, i64, i8*, i64, i8*, i64) local_unnamed_addr #1 {
  %14 = alloca [32 x i8], align 16
  %15 = alloca i64, align 8
  %16 = bitcast %struct.evp_hpke_ctx_st* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %16, i8 0, i64 720, i1 false) #6
  %17 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 2
  tail call void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st* %17) #6
  %18 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 6
  store i32 1, i32* %18, align 8
  %19 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 1
  store %struct.evp_hpke_kdf_st* %5, %struct.evp_hpke_kdf_st** %19, align 8
  %20 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 0
  store %struct.evp_hpke_aead_st* %6, %struct.evp_hpke_aead_st** %20, align 8
  %21 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #6
  %22 = bitcast i64* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #6
  store i64 -6148914691236517206, i64* %15, align 8
  %23 = getelementptr inbounds %struct.evp_hpke_kem_st, %struct.evp_hpke_kem_st* %4, i64 0, i32 4
  %24 = load i32 (%struct.evp_hpke_kem_st*, i8*, i64*, i8*, i64*, i64, i8*, i64, i8*, i64)*, i32 (%struct.evp_hpke_kem_st*, i8*, i64*, i8*, i64*, i64, i8*, i64, i8*, i64)** %23, align 8
  %25 = call i32 %24(%struct.evp_hpke_kem_st* %4, i8* nonnull %21, i64* nonnull %15, i8* %1, i64* %2, i64 %3, i8* %7, i64 %8, i8* %11, i64 %12) #6
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %13
  %28 = load i64, i64* %15, align 8
  %29 = call fastcc i32 @hpke_key_schedule(%struct.evp_hpke_ctx_st* %0, i8* nonnull %21, i64 %28, i8* %9, i64 %10)
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %27, %13
  call void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st* %17) #6
  br label %32

32:                                               ; preds = %27, %31
  %33 = phi i32 [ 0, %31 ], [ 1, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #6
  ret i32 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @hpke_key_schedule(%struct.evp_hpke_ctx_st*, i8*, i64, i8*, i64) unnamed_addr #1 {
  %6 = alloca [10 x i8], align 1
  %7 = alloca [64 x i8], align 16
  %8 = alloca i64, align 8
  %9 = alloca [64 x i8], align 16
  %10 = alloca i64, align 8
  %11 = alloca [129 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca %struct.cbb_st, align 8
  %14 = alloca [64 x i8], align 16
  %15 = alloca i64, align 8
  %16 = alloca [80 x i8], align 16
  %17 = getelementptr inbounds [10 x i8], [10 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %17) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %17, i8 -86, i64 10, i1 false)
  %18 = call fastcc i32 @hpke_build_suite_id(%struct.evp_hpke_ctx_st* %0, i8* nonnull %17)
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %101, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 1
  %22 = load %struct.evp_hpke_kdf_st*, %struct.evp_hpke_kdf_st** %21, align 8
  %23 = getelementptr inbounds %struct.evp_hpke_kdf_st, %struct.evp_hpke_kdf_st* %22, i64 0, i32 1
  %24 = load %struct.env_md_st* ()*, %struct.env_md_st* ()** %23, align 8
  %25 = call %struct.env_md_st* %24() #6
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 -86, i64 64, i1 false)
  %27 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  store i64 -6148914691236517206, i64* %8, align 8
  %28 = call fastcc i32 @hpke_labeled_extract(%struct.env_md_st* %25, i8* nonnull %26, i64* nonnull %8, i8* null, i64 0, i8* nonnull %17, i64 10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0)
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %99, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds [64 x i8], [64 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %31) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -86, i64 64, i1 false)
  %32 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  store i64 -6148914691236517206, i64* %10, align 8
  %33 = call fastcc i32 @hpke_labeled_extract(%struct.env_md_st* %25, i8* nonnull %31, i64* nonnull %10, i8* null, i64 0, i8* nonnull %17, i64 10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8* %3, i64 %4)
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %97, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds [129 x i8], [129 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 129, i8* nonnull %36) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 -86, i64 129, i1 false)
  %37 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #6
  store i64 -6148914691236517206, i64* %12, align 8
  %38 = bitcast %struct.cbb_st* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 32, i1 false)
  %39 = call i32 @CBB_init_fixed(%struct.cbb_st* nonnull %13, i8* nonnull %36, i64 129) #6
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %95, label %41

41:                                               ; preds = %35
  %42 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %13, i8 zeroext 0) #6
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %95, label %44

44:                                               ; preds = %41
  %45 = load i64, i64* %8, align 8
  %46 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %13, i8* nonnull %26, i64 %45) #6
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %95, label %48

48:                                               ; preds = %44
  %49 = load i64, i64* %10, align 8
  %50 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %13, i8* nonnull %31, i64 %49) #6
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %95, label %52

52:                                               ; preds = %48
  %53 = call i32 @CBB_finish(%struct.cbb_st* nonnull %13, i8** null, i64* nonnull %12) #6
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %95, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds [64 x i8], [64 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %56) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %56, i8 -86, i64 64, i1 false)
  %57 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #6
  store i64 -6148914691236517206, i64* %15, align 8
  %58 = call fastcc i32 @hpke_labeled_extract(%struct.env_md_st* %25, i8* nonnull %56, i64* nonnull %15, i8* %1, i64 %2, i8* nonnull %17, i64 10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0)
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %93, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 0
  %62 = load %struct.evp_hpke_aead_st*, %struct.evp_hpke_aead_st** %61, align 8
  %63 = getelementptr inbounds %struct.evp_hpke_aead_st, %struct.evp_hpke_aead_st* %62, i64 0, i32 1
  %64 = load %struct.evp_aead_st* ()*, %struct.evp_aead_st* ()** %63, align 8
  %65 = call %struct.evp_aead_st* %64() #6
  %66 = getelementptr inbounds [80 x i8], [80 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %66) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %66, i8 -86, i64 80, i1 false)
  %67 = call i64 @EVP_AEAD_key_length(%struct.evp_aead_st* %65) #6
  %68 = load i64, i64* %15, align 8
  %69 = load i64, i64* %12, align 8
  %70 = call fastcc i32 @hpke_labeled_expand(%struct.env_md_st* %25, i8* nonnull %66, i64 %67, i8* nonnull %56, i64 %68, i8* nonnull %17, i64 10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i8* nonnull %36, i64 %69)
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %91, label %72

72:                                               ; preds = %60
  %73 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 2
  %74 = call i32 @EVP_AEAD_CTX_init(%struct.evp_aead_ctx_st* %73, %struct.evp_aead_st* %65, i8* nonnull %66, i64 %67, i64 0, %struct.engine_st* null) #6
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %91, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 3, i64 0
  %78 = call i64 @EVP_AEAD_nonce_length(%struct.evp_aead_st* %65) #6
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %12, align 8
  %81 = call fastcc i32 @hpke_labeled_expand(%struct.env_md_st* %25, i8* %77, i64 %78, i8* nonnull %56, i64 %79, i8* nonnull %17, i64 10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* nonnull %36, i64 %80)
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %91, label %83

83:                                               ; preds = %76
  %84 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 4, i64 0
  %85 = call i64 @EVP_MD_size(%struct.env_md_st* %25) #6
  %86 = load i64, i64* %15, align 8
  %87 = load i64, i64* %12, align 8
  %88 = call fastcc i32 @hpke_labeled_expand(%struct.env_md_st* %25, i8* %84, i64 %85, i8* nonnull %56, i64 %86, i8* nonnull %17, i64 10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i8* nonnull %36, i64 %87)
  %89 = icmp ne i32 %88, 0
  %90 = zext i1 %89 to i32
  br label %91

91:                                               ; preds = %83, %76, %60, %72
  %92 = phi i32 [ 0, %72 ], [ 0, %60 ], [ 0, %76 ], [ %90, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %66) #6
  br label %93

93:                                               ; preds = %55, %91
  %94 = phi i32 [ %92, %91 ], [ 0, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %56) #6
  br label %95

95:                                               ; preds = %35, %41, %44, %48, %52, %93
  %96 = phi i32 [ %94, %93 ], [ 0, %52 ], [ 0, %48 ], [ 0, %44 ], [ 0, %41 ], [ 0, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #6
  call void @llvm.lifetime.end.p0i8(i64 129, i8* nonnull %36) #6
  br label %97

97:                                               ; preds = %30, %95
  %98 = phi i32 [ %96, %95 ], [ 0, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %31) #6
  br label %99

99:                                               ; preds = %20, %97
  %100 = phi i32 [ %98, %97 ], [ 0, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #6
  br label %101

101:                                              ; preds = %5, %99
  %102 = phi i32 [ %100, %99 ], [ 0, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %17) #6
  ret i32 %102
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_HPKE_CTX_setup_recipient(%struct.evp_hpke_ctx_st*, %struct.evp_hpke_key_st*, %struct.evp_hpke_kdf_st*, %struct.evp_hpke_aead_st*, i8*, i64, i8*, i64) local_unnamed_addr #1 {
  %9 = alloca [32 x i8], align 16
  %10 = alloca i64, align 8
  %11 = bitcast %struct.evp_hpke_ctx_st* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 720, i1 false) #6
  %12 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 2
  tail call void @EVP_AEAD_CTX_zero(%struct.evp_aead_ctx_st* %12) #6
  %13 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 6
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 1
  store %struct.evp_hpke_kdf_st* %2, %struct.evp_hpke_kdf_st** %14, align 8
  %15 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 0
  store %struct.evp_hpke_aead_st* %3, %struct.evp_hpke_aead_st** %15, align 8
  %16 = getelementptr inbounds [32 x i8], [32 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6
  %17 = bitcast i64* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  store i64 -6148914691236517206, i64* %10, align 8
  %18 = getelementptr inbounds %struct.evp_hpke_key_st, %struct.evp_hpke_key_st* %1, i64 0, i32 0
  %19 = load %struct.evp_hpke_kem_st*, %struct.evp_hpke_kem_st** %18, align 8
  %20 = getelementptr inbounds %struct.evp_hpke_kem_st, %struct.evp_hpke_kem_st* %19, i64 0, i32 5
  %21 = load i32 (%struct.evp_hpke_key_st*, i8*, i64*, i8*, i64)*, i32 (%struct.evp_hpke_key_st*, i8*, i64*, i8*, i64)** %20, align 8
  %22 = call i32 %21(%struct.evp_hpke_key_st* %1, i8* nonnull %16, i64* nonnull %10, i8* %4, i64 %5) #6
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %8
  %25 = call fastcc i32 @hpke_key_schedule(%struct.evp_hpke_ctx_st* %0, i8* nonnull %16, i64 32, i8* %6, i64 %7)
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24, %8
  call void @EVP_AEAD_CTX_cleanup(%struct.evp_aead_ctx_st* %12) #6
  br label %28

28:                                               ; preds = %24, %27
  %29 = phi i32 [ 0, %27 ], [ 1, %24 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_HPKE_CTX_open(%struct.evp_hpke_ctx_st*, i8*, i64*, i64, i8*, i64, i8*, i64) local_unnamed_addr #1 {
  %9 = alloca [24 x i8], align 16
  %10 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %8
  tail call void @ERR_put_error(i32 6, i32 0, i32 66, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 469) #6
  br label %151

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, -1
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @ERR_put_error(i32 6, i32 0, i32 69, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 473) #6
  br label %151

19:                                               ; preds = %14
  %20 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #6
  %21 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 2
  %22 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %21, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 24, i1 false)
  %23 = load %struct.evp_aead_st*, %struct.evp_aead_st** %22, align 8
  %24 = tail call i64 @EVP_AEAD_nonce_length(%struct.evp_aead_st* %23) #6
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 0, i64 %24, i1 false) #6
  br label %27

27:                                               ; preds = %26, %19
  %28 = load i64, i64* %15, align 8
  %29 = trunc i64 %28 to i8
  %30 = add i64 %24, -1
  %31 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %30
  store i8 %29, i8* %31, align 1
  %32 = lshr i64 %28, 8
  %33 = trunc i64 %32 to i8
  %34 = add i64 %24, -2
  %35 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %34
  store i8 %33, i8* %35, align 1
  %36 = lshr i64 %28, 16
  %37 = trunc i64 %36 to i8
  %38 = add i64 %24, -3
  %39 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %38
  store i8 %37, i8* %39, align 1
  %40 = lshr i64 %28, 24
  %41 = trunc i64 %40 to i8
  %42 = add i64 %24, -4
  %43 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %42
  store i8 %41, i8* %43, align 1
  %44 = lshr i64 %28, 32
  %45 = trunc i64 %44 to i8
  %46 = add i64 %24, -5
  %47 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %46
  store i8 %45, i8* %47, align 1
  %48 = lshr i64 %28, 40
  %49 = trunc i64 %48 to i8
  %50 = add i64 %24, -6
  %51 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %50
  store i8 %49, i8* %51, align 1
  %52 = lshr i64 %28, 48
  %53 = trunc i64 %52 to i8
  %54 = add i64 %24, -7
  %55 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %54
  store i8 %53, i8* %55, align 1
  %56 = lshr i64 %28, 56
  %57 = trunc i64 %56 to i8
  %58 = add i64 %24, -8
  %59 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %58
  store i8 %57, i8* %59, align 1
  br i1 %25, label %143, label %60

60:                                               ; preds = %27
  %61 = icmp ult i64 %24, 32
  br i1 %61, label %132, label %62

62:                                               ; preds = %60
  %63 = and i64 %24, -32
  %64 = add i64 %63, -32
  %65 = lshr exact i64 %64, 5
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %64, 0
  br i1 %68, label %110, label %69

69:                                               ; preds = %62
  %70 = sub nuw nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %107, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %108, %71 ]
  %74 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 3, i64 %72
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1
  %77 = getelementptr inbounds i8, i8* %74, i64 16
  %78 = bitcast i8* %77 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1
  %80 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %72
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 16
  %83 = getelementptr inbounds i8, i8* %80, i64 16
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 16
  %86 = xor <16 x i8> %82, %76
  %87 = xor <16 x i8> %85, %79
  %88 = bitcast i8* %80 to <16 x i8>*
  store <16 x i8> %86, <16 x i8>* %88, align 16
  %89 = bitcast i8* %83 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %89, align 16
  %90 = or i64 %72, 32
  %91 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 3, i64 %90
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1
  %94 = getelementptr inbounds i8, i8* %91, i64 16
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1
  %97 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %90
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 16
  %100 = getelementptr inbounds i8, i8* %97, i64 16
  %101 = bitcast i8* %100 to <16 x i8>*
  %102 = load <16 x i8>, <16 x i8>* %101, align 16
  %103 = xor <16 x i8> %99, %93
  %104 = xor <16 x i8> %102, %96
  %105 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %105, align 16
  %106 = bitcast i8* %100 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %106, align 16
  %107 = add i64 %72, 64
  %108 = add i64 %73, -2
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %71, !llvm.loop !2

110:                                              ; preds = %71, %62
  %111 = phi i64 [ 0, %62 ], [ %107, %71 ]
  %112 = icmp eq i64 %67, 0
  br i1 %112, label %130, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 3, i64 %111
  %115 = bitcast i8* %114 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 1
  %117 = getelementptr inbounds i8, i8* %114, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1
  %120 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %111
  %121 = bitcast i8* %120 to <16 x i8>*
  %122 = load <16 x i8>, <16 x i8>* %121, align 16
  %123 = getelementptr inbounds i8, i8* %120, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  %125 = load <16 x i8>, <16 x i8>* %124, align 16
  %126 = xor <16 x i8> %122, %116
  %127 = xor <16 x i8> %125, %119
  %128 = bitcast i8* %120 to <16 x i8>*
  store <16 x i8> %126, <16 x i8>* %128, align 16
  %129 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %127, <16 x i8>* %129, align 16
  br label %130

130:                                              ; preds = %110, %113
  %131 = icmp eq i64 %24, %63
  br i1 %131, label %143, label %132

132:                                              ; preds = %130, %60
  %133 = phi i64 [ 0, %60 ], [ %63, %130 ]
  br label %134

134:                                              ; preds = %132, %134
  %135 = phi i64 [ %141, %134 ], [ %133, %132 ]
  %136 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 3, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %135
  %139 = load i8, i8* %138, align 1
  %140 = xor i8 %139, %137
  store i8 %140, i8* %138, align 1
  %141 = add nuw i64 %135, 1
  %142 = icmp eq i64 %141, %24
  br i1 %142, label %143, label %134, !llvm.loop !4

143:                                              ; preds = %134, %130, %27
  %144 = call i32 @EVP_AEAD_CTX_open(%struct.evp_aead_ctx_st* %21, i8* %1, i64* %2, i64 %3, i8* nonnull %20, i64 %24, i8* %4, i64 %5, i8* %6, i64 %7) #6
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %149, label %146

146:                                              ; preds = %143
  %147 = load i64, i64* %15, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %15, align 8
  br label %149

149:                                              ; preds = %143, %146
  %150 = phi i32 [ 1, %146 ], [ 0, %143 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #6
  br label %151

151:                                              ; preds = %149, %18, %13
  %152 = phi i32 [ 0, %13 ], [ 0, %18 ], [ %150, %149 ]
  ret i32 %152
}

declare i64 @EVP_AEAD_nonce_length(%struct.evp_aead_st*) local_unnamed_addr #3

declare i32 @EVP_AEAD_CTX_open(%struct.evp_aead_ctx_st*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_HPKE_CTX_seal(%struct.evp_hpke_ctx_st*, i8*, i64*, i64, i8*, i64, i8*, i64) local_unnamed_addr #1 {
  %9 = alloca [24 x i8], align 16
  %10 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %8
  tail call void @ERR_put_error(i32 6, i32 0, i32 66, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 493) #6
  br label %151

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 5
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, -1
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  tail call void @ERR_put_error(i32 6, i32 0, i32 69, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 497) #6
  br label %151

19:                                               ; preds = %14
  %20 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #6
  %21 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 2
  %22 = getelementptr inbounds %struct.evp_aead_ctx_st, %struct.evp_aead_ctx_st* %21, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 24, i1 false)
  %23 = load %struct.evp_aead_st*, %struct.evp_aead_st** %22, align 8
  %24 = tail call i64 @EVP_AEAD_nonce_length(%struct.evp_aead_st* %23) #6
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 0, i64 %24, i1 false) #6
  br label %27

27:                                               ; preds = %26, %19
  %28 = load i64, i64* %15, align 8
  %29 = trunc i64 %28 to i8
  %30 = add i64 %24, -1
  %31 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %30
  store i8 %29, i8* %31, align 1
  %32 = lshr i64 %28, 8
  %33 = trunc i64 %32 to i8
  %34 = add i64 %24, -2
  %35 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %34
  store i8 %33, i8* %35, align 1
  %36 = lshr i64 %28, 16
  %37 = trunc i64 %36 to i8
  %38 = add i64 %24, -3
  %39 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %38
  store i8 %37, i8* %39, align 1
  %40 = lshr i64 %28, 24
  %41 = trunc i64 %40 to i8
  %42 = add i64 %24, -4
  %43 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %42
  store i8 %41, i8* %43, align 1
  %44 = lshr i64 %28, 32
  %45 = trunc i64 %44 to i8
  %46 = add i64 %24, -5
  %47 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %46
  store i8 %45, i8* %47, align 1
  %48 = lshr i64 %28, 40
  %49 = trunc i64 %48 to i8
  %50 = add i64 %24, -6
  %51 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %50
  store i8 %49, i8* %51, align 1
  %52 = lshr i64 %28, 48
  %53 = trunc i64 %52 to i8
  %54 = add i64 %24, -7
  %55 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %54
  store i8 %53, i8* %55, align 1
  %56 = lshr i64 %28, 56
  %57 = trunc i64 %56 to i8
  %58 = add i64 %24, -8
  %59 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %58
  store i8 %57, i8* %59, align 1
  br i1 %25, label %143, label %60

60:                                               ; preds = %27
  %61 = icmp ult i64 %24, 32
  br i1 %61, label %132, label %62

62:                                               ; preds = %60
  %63 = and i64 %24, -32
  %64 = add i64 %63, -32
  %65 = lshr exact i64 %64, 5
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %64, 0
  br i1 %68, label %110, label %69

69:                                               ; preds = %62
  %70 = sub nuw nsw i64 %66, %67
  br label %71

71:                                               ; preds = %71, %69
  %72 = phi i64 [ 0, %69 ], [ %107, %71 ]
  %73 = phi i64 [ %70, %69 ], [ %108, %71 ]
  %74 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 3, i64 %72
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1
  %77 = getelementptr inbounds i8, i8* %74, i64 16
  %78 = bitcast i8* %77 to <16 x i8>*
  %79 = load <16 x i8>, <16 x i8>* %78, align 1
  %80 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %72
  %81 = bitcast i8* %80 to <16 x i8>*
  %82 = load <16 x i8>, <16 x i8>* %81, align 16
  %83 = getelementptr inbounds i8, i8* %80, i64 16
  %84 = bitcast i8* %83 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 16
  %86 = xor <16 x i8> %82, %76
  %87 = xor <16 x i8> %85, %79
  %88 = bitcast i8* %80 to <16 x i8>*
  store <16 x i8> %86, <16 x i8>* %88, align 16
  %89 = bitcast i8* %83 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %89, align 16
  %90 = or i64 %72, 32
  %91 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 3, i64 %90
  %92 = bitcast i8* %91 to <16 x i8>*
  %93 = load <16 x i8>, <16 x i8>* %92, align 1
  %94 = getelementptr inbounds i8, i8* %91, i64 16
  %95 = bitcast i8* %94 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1
  %97 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %90
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 16
  %100 = getelementptr inbounds i8, i8* %97, i64 16
  %101 = bitcast i8* %100 to <16 x i8>*
  %102 = load <16 x i8>, <16 x i8>* %101, align 16
  %103 = xor <16 x i8> %99, %93
  %104 = xor <16 x i8> %102, %96
  %105 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %105, align 16
  %106 = bitcast i8* %100 to <16 x i8>*
  store <16 x i8> %104, <16 x i8>* %106, align 16
  %107 = add i64 %72, 64
  %108 = add i64 %73, -2
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %71, !llvm.loop !6

110:                                              ; preds = %71, %62
  %111 = phi i64 [ 0, %62 ], [ %107, %71 ]
  %112 = icmp eq i64 %67, 0
  br i1 %112, label %130, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 3, i64 %111
  %115 = bitcast i8* %114 to <16 x i8>*
  %116 = load <16 x i8>, <16 x i8>* %115, align 1
  %117 = getelementptr inbounds i8, i8* %114, i64 16
  %118 = bitcast i8* %117 to <16 x i8>*
  %119 = load <16 x i8>, <16 x i8>* %118, align 1
  %120 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %111
  %121 = bitcast i8* %120 to <16 x i8>*
  %122 = load <16 x i8>, <16 x i8>* %121, align 16
  %123 = getelementptr inbounds i8, i8* %120, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  %125 = load <16 x i8>, <16 x i8>* %124, align 16
  %126 = xor <16 x i8> %122, %116
  %127 = xor <16 x i8> %125, %119
  %128 = bitcast i8* %120 to <16 x i8>*
  store <16 x i8> %126, <16 x i8>* %128, align 16
  %129 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %127, <16 x i8>* %129, align 16
  br label %130

130:                                              ; preds = %110, %113
  %131 = icmp eq i64 %24, %63
  br i1 %131, label %143, label %132

132:                                              ; preds = %130, %60
  %133 = phi i64 [ 0, %60 ], [ %63, %130 ]
  br label %134

134:                                              ; preds = %132, %134
  %135 = phi i64 [ %141, %134 ], [ %133, %132 ]
  %136 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 3, i64 %135
  %137 = load i8, i8* %136, align 1
  %138 = getelementptr inbounds [24 x i8], [24 x i8]* %9, i64 0, i64 %135
  %139 = load i8, i8* %138, align 1
  %140 = xor i8 %139, %137
  store i8 %140, i8* %138, align 1
  %141 = add nuw i64 %135, 1
  %142 = icmp eq i64 %141, %24
  br i1 %142, label %143, label %134, !llvm.loop !7

143:                                              ; preds = %134, %130, %27
  %144 = call i32 @EVP_AEAD_CTX_seal(%struct.evp_aead_ctx_st* %21, i8* %1, i64* %2, i64 %3, i8* nonnull %20, i64 %24, i8* %4, i64 %5, i8* %6, i64 %7) #6
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %149, label %146

146:                                              ; preds = %143
  %147 = load i64, i64* %15, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %15, align 8
  br label %149

149:                                              ; preds = %143, %146
  %150 = phi i32 [ 1, %146 ], [ 0, %143 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #6
  br label %151

151:                                              ; preds = %149, %18, %13
  %152 = phi i32 [ 0, %18 ], [ %150, %149 ], [ 0, %13 ]
  ret i32 %152
}

declare i32 @EVP_AEAD_CTX_seal(%struct.evp_aead_ctx_st*, i8*, i64*, i64, i8*, i64, i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_HPKE_CTX_export(%struct.evp_hpke_ctx_st*, i8*, i64, i8*, i64) local_unnamed_addr #1 {
  %6 = alloca [10 x i8], align 1
  %7 = getelementptr inbounds [10 x i8], [10 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %7, i8 -86, i64 10, i1 false)
  %8 = call fastcc i32 @hpke_build_suite_id(%struct.evp_hpke_ctx_st* %0, i8* nonnull %7)
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 1
  %12 = load %struct.evp_hpke_kdf_st*, %struct.evp_hpke_kdf_st** %11, align 8
  %13 = getelementptr inbounds %struct.evp_hpke_kdf_st, %struct.evp_hpke_kdf_st* %12, i64 0, i32 1
  %14 = load %struct.env_md_st* ()*, %struct.env_md_st* ()** %13, align 8
  %15 = call %struct.env_md_st* %14() #6
  %16 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 4, i64 0
  %17 = call i64 @EVP_MD_size(%struct.env_md_st* %15) #6
  %18 = call fastcc i32 @hpke_labeled_expand(%struct.env_md_st* %15, i8* %1, i64 %2, i8* %16, i64 %17, i8* nonnull %7, i64 10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %3, i64 %4)
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  br label %21

21:                                               ; preds = %5, %10
  %22 = phi i32 [ %20, %10 ], [ 0, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %7) #6
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @hpke_build_suite_id(%struct.evp_hpke_ctx_st* nocapture readonly, i8*) unnamed_addr #1 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = call i32 @CBB_init_fixed(%struct.cbb_st* nonnull %3, i8* %1, i64 10) #6
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %2
  %8 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i64 4) #6
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %28, label %10

10:                                               ; preds = %7
  %11 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %3, i16 zeroext 32) #6
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %28, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 1
  %15 = load %struct.evp_hpke_kdf_st*, %struct.evp_hpke_kdf_st** %14, align 8
  %16 = getelementptr inbounds %struct.evp_hpke_kdf_st, %struct.evp_hpke_kdf_st* %15, i64 0, i32 0
  %17 = load i16, i16* %16, align 8
  %18 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %3, i16 zeroext %17) #6
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 0
  %22 = load %struct.evp_hpke_aead_st*, %struct.evp_hpke_aead_st** %21, align 8
  %23 = getelementptr inbounds %struct.evp_hpke_aead_st, %struct.evp_hpke_aead_st* %22, i64 0, i32 0
  %24 = load i16, i16* %23, align 8
  %25 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %3, i16 zeroext %24) #6
  %26 = icmp ne i32 %25, 0
  %27 = zext i1 %26 to i32
  br label %28

28:                                               ; preds = %13, %10, %7, %2, %20
  %29 = phi i32 [ 0, %13 ], [ 0, %10 ], [ 0, %7 ], [ 0, %2 ], [ %27, %20 ]
  call void @CBB_cleanup(%struct.cbb_st* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #6
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @hpke_labeled_expand(%struct.env_md_st*, i8*, i64, i8*, i64, i8*, i64, i8*, i8*, i64) unnamed_addr #1 {
  %11 = alloca %struct.cbb_st, align 8
  %12 = bitcast %struct.cbb_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = call i32 @CBB_init(%struct.cbb_st* nonnull %11, i64 0) #6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = trunc i64 %2 to i16
  %17 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %11, i16 zeroext %16) #6
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %38, label %19

19:                                               ; preds = %15
  %20 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @kHpkeVersionId, i64 0, i64 0), i64 7) #6
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %38, label %22

22:                                               ; preds = %19
  %23 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %11, i8* %5, i64 %6) #6
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %22
  %26 = call i64 @strlen(i8* %7) #7
  %27 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %11, i8* %7, i64 %26) #6
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %38, label %29

29:                                               ; preds = %25
  %30 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %11, i8* %8, i64 %9) #6
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = call i8* @CBB_data(%struct.cbb_st* nonnull %11) #6
  %34 = call i64 @CBB_len(%struct.cbb_st* nonnull %11) #6
  %35 = call i32 @HKDF_expand(i8* %1, i64 %2, %struct.env_md_st* %0, i8* %3, i64 %4, i8* %33, i64 %34) #6
  %36 = icmp ne i32 %35, 0
  %37 = zext i1 %36 to i32
  br label %38

38:                                               ; preds = %29, %25, %22, %19, %15, %10, %32
  %39 = phi i32 [ 0, %29 ], [ 0, %25 ], [ 0, %22 ], [ 0, %19 ], [ 0, %15 ], [ 0, %10 ], [ %37, %32 ]
  call void @CBB_cleanup(%struct.cbb_st* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  ret i32 %39
}

declare i64 @EVP_MD_size(%struct.env_md_st*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @EVP_HPKE_CTX_max_overhead(%struct.evp_hpke_ctx_st*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 2
  %3 = tail call %struct.evp_aead_st* @EVP_AEAD_CTX_aead(%struct.evp_aead_ctx_st* %2) #6
  %4 = tail call i64 @EVP_AEAD_max_overhead(%struct.evp_aead_st* %3) #6
  ret i64 %4
}

declare i64 @EVP_AEAD_max_overhead(%struct.evp_aead_st*) local_unnamed_addr #3

declare %struct.evp_aead_st* @EVP_AEAD_CTX_aead(%struct.evp_aead_ctx_st*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.evp_hpke_aead_st* @EVP_HPKE_CTX_aead(%struct.evp_hpke_ctx_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 0
  %3 = load %struct.evp_hpke_aead_st*, %struct.evp_hpke_aead_st** %2, align 8
  ret %struct.evp_hpke_aead_st* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.evp_hpke_kdf_st* @EVP_HPKE_CTX_kdf(%struct.evp_hpke_ctx_st* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.evp_hpke_ctx_st, %struct.evp_hpke_ctx_st* %0, i64 0, i32 1
  %3 = load %struct.evp_hpke_kdf_st*, %struct.evp_hpke_kdf_st** %2, align 8
  ret %struct.evp_hpke_kdf_st* %3
}

declare void @X25519_public_from_private(i8*, i8*) local_unnamed_addr #3

declare i32 @X25519(i8*, i8*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @hpke_labeled_extract(%struct.env_md_st*, i8*, i64*, i8*, i64, i8*, i64, i8*, i8*, i64) unnamed_addr #1 {
  %11 = alloca %struct.cbb_st, align 8
  %12 = bitcast %struct.cbb_st* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = call i32 @CBB_init(%struct.cbb_st* nonnull %11, i64 0) #6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %10
  %16 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @kHpkeVersionId, i64 0, i64 0), i64 7) #6
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %15
  %19 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %11, i8* %5, i64 %6) #6
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %34, label %21

21:                                               ; preds = %18
  %22 = call i64 @strlen(i8* %7) #7
  %23 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %11, i8* %7, i64 %22) #6
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %21
  %26 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %11, i8* %8, i64 %9) #6
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = call i8* @CBB_data(%struct.cbb_st* nonnull %11) #6
  %30 = call i64 @CBB_len(%struct.cbb_st* nonnull %11) #6
  %31 = call i32 @HKDF_extract(i8* %1, i64* %2, %struct.env_md_st* %0, i8* %29, i64 %30, i8* %3, i64 %4) #6
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i32
  br label %34

34:                                               ; preds = %25, %21, %18, %15, %10, %28
  %35 = phi i32 [ 0, %25 ], [ 0, %21 ], [ 0, %18 ], [ 0, %15 ], [ 0, %10 ], [ %33, %28 ]
  call void @CBB_cleanup(%struct.cbb_st* nonnull %11) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #6
  ret i32 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #3

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #3

declare i32 @HKDF_extract(i8*, i64*, %struct.env_md_st*, i8*, i64, i8*, i64) local_unnamed_addr #3

declare i8* @CBB_data(%struct.cbb_st*) local_unnamed_addr #3

declare i64 @CBB_len(%struct.cbb_st*) local_unnamed_addr #3

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare i32 @CBB_init_fixed(%struct.cbb_st*, i8*, i64) local_unnamed_addr #3

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #3

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #3

declare i64 @EVP_AEAD_key_length(%struct.evp_aead_st*) local_unnamed_addr #3

declare i32 @EVP_AEAD_CTX_init(%struct.evp_aead_ctx_st*, %struct.evp_aead_st*, i8*, i64, i64, %struct.engine_st*) local_unnamed_addr #3

declare i32 @CBB_add_u16(%struct.cbb_st*, i16 zeroext) local_unnamed_addr #3

declare i32 @HKDF_expand(i8*, i64, %struct.env_md_st*, i8*, i64, i8*, i64) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !5, !3}
