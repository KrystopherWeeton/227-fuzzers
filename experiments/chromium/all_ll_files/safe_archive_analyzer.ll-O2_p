; ModuleID = '../../chrome/services/file_util/safe_archive_analyzer.cc'
source_filename = "../../chrome/services/file_util/safe_archive_analyzer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SafeArchiveAnalyzer = type { %"class.chrome::mojom::SafeArchiveAnalyzer" }
%"class.chrome::mojom::SafeArchiveAnalyzer" = type { i32 (...)** }
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.safe_browsing::ArchiveAnalyzerResults" = type { i8, i8, i8, %"class.google::protobuf::RepeatedPtrField", %"class.std::__1::vector", i32, i32 }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.2", %"struct.std::__1::atomic.2", %"struct.std::__1::atomic.6", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::FilePath"*, %"class.base::FilePath"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::FilePath"* }

@_ZTV19SafeArchiveAnalyzer = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SafeArchiveAnalyzer*)* @_ZN19SafeArchiveAnalyzerD2Ev to i8*), i8* bitcast (void (%class.SafeArchiveAnalyzer*)* @_ZN19SafeArchiveAnalyzerD0Ev to i8*), i8* bitcast (void (%class.SafeArchiveAnalyzer*, %"class.base::File"*, %"class.base::File"*, %"class.base::OnceCallback"*)* @_ZN19SafeArchiveAnalyzer14AnalyzeZipFileEN4base4FileES1_NS0_12OnceCallbackIFvRKN13safe_browsing22ArchiveAnalyzerResultsEEEE to i8*), i8* bitcast (void (%class.SafeArchiveAnalyzer*, %"class.base::File"*, %"class.base::OnceCallback"*)* @_ZN19SafeArchiveAnalyzer14AnalyzeDmgFileEN4base4FileENS0_12OnceCallbackIFvRKN13safe_browsing22ArchiveAnalyzerResultsEEEE to i8*), i8* bitcast (void (%class.SafeArchiveAnalyzer*, %"class.base::File"*, %"class.base::File"*, %"class.base::OnceCallback"*)* @_ZN19SafeArchiveAnalyzer14AnalyzeRarFileEN4base4FileES1_NS0_12OnceCallbackIFvRKN13safe_browsing22ArchiveAnalyzerResultsEEEE to i8*)] }, align 8

@_ZN19SafeArchiveAnalyzerC1Ev = hidden unnamed_addr alias void (%class.SafeArchiveAnalyzer*), void (%class.SafeArchiveAnalyzer*)* @_ZN19SafeArchiveAnalyzerC2Ev
@_ZN19SafeArchiveAnalyzerD1Ev = hidden unnamed_addr alias void (%class.SafeArchiveAnalyzer*), void (%class.SafeArchiveAnalyzer*)* @_ZN19SafeArchiveAnalyzerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN19SafeArchiveAnalyzerC2Ev(%class.SafeArchiveAnalyzer* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SafeArchiveAnalyzer, %class.SafeArchiveAnalyzer* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV19SafeArchiveAnalyzer, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN19SafeArchiveAnalyzerD2Ev(%class.SafeArchiveAnalyzer* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SafeArchiveAnalyzerD0Ev(%class.SafeArchiveAnalyzer*) unnamed_addr #2 align 2 {
  %2 = bitcast %class.SafeArchiveAnalyzer* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SafeArchiveAnalyzer14AnalyzeZipFileEN4base4FileES1_NS0_12OnceCallbackIFvRKN13safe_browsing22ArchiveAnalyzerResultsEEEE(%class.SafeArchiveAnalyzer* nocapture readnone, %"class.base::File"*, %"class.base::File"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"struct.safe_browsing::ArchiveAnalyzerResults", align 8
  %7 = alloca %"class.base::File", align 8
  %8 = alloca %"class.base::File", align 8
  %9 = getelementptr inbounds %"struct.safe_browsing::ArchiveAnalyzerResults", %"struct.safe_browsing::ArchiveAnalyzerResults"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @_ZN13safe_browsing22ArchiveAnalyzerResultsC1Ev(%"struct.safe_browsing::ArchiveAnalyzerResults"* nonnull %6) #8
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %7, %"class.base::File"* dereferenceable(56) %1) #8
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %8, %"class.base::File"* dereferenceable(56) %2) #8
  call void @_ZN13safe_browsing12zip_analyzer14AnalyzeZipFileEN4base4FileES2_PNS_22ArchiveAnalyzerResultsE(%"class.base::File"* nonnull %7, %"class.base::File"* nonnull %8, %"struct.safe_browsing::ArchiveAnalyzerResults"* nonnull %6) #8
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %8) #8
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %7) #8
  %10 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %16 = inttoptr i64 %13 to %"class.base::internal::BindStateBase"*
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %18 = bitcast void ()** %17 to void (%"class.base::internal::BindStateBase"*, %"struct.safe_browsing::ArchiveAnalyzerResults"*)**
  %19 = load void (%"class.base::internal::BindStateBase"*, %"struct.safe_browsing::ArchiveAnalyzerResults"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.safe_browsing::ArchiveAnalyzerResults"*)** %18, align 8
  call void %19(%"class.base::internal::BindStateBase"* %16, %"struct.safe_browsing::ArchiveAnalyzerResults"* nonnull dereferenceable(64) %6) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  call void @_ZN13safe_browsing22ArchiveAnalyzerResultsD1Ev(%"struct.safe_browsing::ArchiveAnalyzerResults"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN13safe_browsing22ArchiveAnalyzerResultsC1Ev(%"struct.safe_browsing::ArchiveAnalyzerResults"*) unnamed_addr #5

declare void @_ZN13safe_browsing12zip_analyzer14AnalyzeZipFileEN4base4FileES2_PNS_22ArchiveAnalyzerResultsE(%"class.base::File"*, %"class.base::File"*, %"struct.safe_browsing::ArchiveAnalyzerResults"*) local_unnamed_addr #5

declare void @_ZN4base4FileC1EOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN13safe_browsing22ArchiveAnalyzerResultsD1Ev(%"struct.safe_browsing::ArchiveAnalyzerResults"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN19SafeArchiveAnalyzer14AnalyzeDmgFileEN4base4FileENS0_12OnceCallbackIFvRKN13safe_browsing22ArchiveAnalyzerResultsEEEE(%class.SafeArchiveAnalyzer* nocapture, %"class.base::File"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SafeArchiveAnalyzer14AnalyzeRarFileEN4base4FileES1_NS0_12OnceCallbackIFvRKN13safe_browsing22ArchiveAnalyzerResultsEEEE(%class.SafeArchiveAnalyzer* nocapture readnone, %"class.base::File"*, %"class.base::File"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"struct.safe_browsing::ArchiveAnalyzerResults", align 8
  %7 = alloca %"class.base::File", align 8
  %8 = alloca %"class.base::File", align 8
  %9 = getelementptr inbounds %"struct.safe_browsing::ArchiveAnalyzerResults", %"struct.safe_browsing::ArchiveAnalyzerResults"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 64, i1 false)
  call void @_ZN13safe_browsing22ArchiveAnalyzerResultsC1Ev(%"struct.safe_browsing::ArchiveAnalyzerResults"* nonnull %6) #8
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %7, %"class.base::File"* dereferenceable(56) %1) #8
  call void @_ZN4base4FileC1EOS0_(%"class.base::File"* nonnull %8, %"class.base::File"* dereferenceable(56) %2) #8
  call void @_ZN13safe_browsing12rar_analyzer14AnalyzeRarFileEN4base4FileES2_PNS_22ArchiveAnalyzerResultsE(%"class.base::File"* nonnull %7, %"class.base::File"* nonnull %8, %"struct.safe_browsing::ArchiveAnalyzerResults"* nonnull %6) #8
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %8) #8
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %7) #8
  %10 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %16 = inttoptr i64 %13 to %"class.base::internal::BindStateBase"*
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %18 = bitcast void ()** %17 to void (%"class.base::internal::BindStateBase"*, %"struct.safe_browsing::ArchiveAnalyzerResults"*)**
  %19 = load void (%"class.base::internal::BindStateBase"*, %"struct.safe_browsing::ArchiveAnalyzerResults"*)*, void (%"class.base::internal::BindStateBase"*, %"struct.safe_browsing::ArchiveAnalyzerResults"*)** %18, align 8
  call void %19(%"class.base::internal::BindStateBase"* %16, %"struct.safe_browsing::ArchiveAnalyzerResults"* nonnull dereferenceable(64) %6) #8
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  call void @_ZN13safe_browsing22ArchiveAnalyzerResultsD1Ev(%"struct.safe_browsing::ArchiveAnalyzerResults"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #8
  ret void
}

declare void @_ZN13safe_browsing12rar_analyzer14AnalyzeRarFileEN4base4FileES2_PNS_22ArchiveAnalyzerResultsE(%"class.base::File"*, %"class.base::File"*, %"struct.safe_browsing::ArchiveAnalyzerResults"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
