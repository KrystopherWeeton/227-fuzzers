; ModuleID = '../../chrome/utility/importer/nss_decryptor_system_nss.cc'
source_filename = "../../chrome/utility/importer/nss_decryptor_system_nss.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.sec_ASN1Template_struct = type { i64, i64, i8*, i32 }
%class.NSSDecryptor = type { i8, %struct.PK11SlotInfoStr* }
%struct.PK11SlotInfoStr = type opaque
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.SECItemStr = type { i32, i8*, i32 }
%struct.SDRResult = type { %struct.SECItemStr, %struct.SECAlgorithmIDStr, %struct.SECItemStr }
%struct.SECAlgorithmIDStr = type { %struct.SECItemStr, %struct.SECItemStr }
%struct.PLArenaPool = type { %struct.PLArena, %struct.PLArena*, i32, i64 }
%struct.PLArena = type { %struct.PLArena*, i64, i64, i64 }
%struct.PK11SymKeyStr = type opaque
%struct.PK11ContextStr = type opaque

@.str = private unnamed_addr constant [70 x i8] c"configDir='%s' tokenDescription='Firefox NSS database' flags=readOnly\00", align 1
@_ZL10g_template = internal global [5 x %struct.sec_ASN1Template_struct] [%struct.sec_ASN1Template_struct { i64 16, i64 0, i8* null, i32 96 }, %struct.sec_ASN1Template_struct { i64 4, i64 0, i8* null, i32 0 }, %struct.sec_ASN1Template_struct { i64 2048, i64 24, i8* bitcast ([0 x %struct.sec_ASN1Template_struct]* @SECOID_AlgorithmIDTemplate to i8*), i32 0 }, %struct.sec_ASN1Template_struct { i64 4, i64 72, i8* null, i32 0 }, %struct.sec_ASN1Template_struct zeroinitializer], align 16
@SECOID_AlgorithmIDTemplate = external global [0 x %struct.sec_ASN1Template_struct], align 8

@_ZN12NSSDecryptorC1Ev = hidden unnamed_addr alias void (%class.NSSDecryptor*), void (%class.NSSDecryptor*)* @_ZN12NSSDecryptorC2Ev
@_ZN12NSSDecryptorD1Ev = hidden unnamed_addr alias void (%class.NSSDecryptor*), void (%class.NSSDecryptor*)* @_ZN12NSSDecryptorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12NSSDecryptorC2Ev(%class.NSSDecryptor* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.NSSDecryptor, %class.NSSDecryptor* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %class.NSSDecryptor, %class.NSSDecryptor* %0, i64 0, i32 1
  store %struct.PK11SlotInfoStr* null, %struct.PK11SlotInfoStr** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12NSSDecryptorD2Ev(%class.NSSDecryptor* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.NSSDecryptor, %class.NSSDecryptor* %0, i64 0, i32 1
  %3 = load %struct.PK11SlotInfoStr*, %struct.PK11SlotInfoStr** %2, align 8
  %4 = icmp eq %struct.PK11SlotInfoStr* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @PK11_FreeSlot(%struct.PK11SlotInfoStr* nonnull %3) #5
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare void @PK11_FreeSlot(%struct.PK11SlotInfoStr*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12NSSDecryptor4InitERKN4base8FilePathES3_(%class.NSSDecryptor* nocapture, %"class.base::FilePath"* nocapture readnone dereferenceable(24), %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  tail call void @_ZN6crypto13EnsureNSSInitEv() #5
  %5 = getelementptr inbounds %class.NSSDecryptor, %class.NSSDecryptor* %0, i64 0, i32 0
  store i8 1, i8* %5, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::FilePath"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load i8, i8* %9, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.base::FilePath"* %2 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str, i64 0, i64 0), i8* %16) #5
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = load i8*, i8** %7, align 8
  %22 = select i1 %20, i8* %21, i8* %6
  %23 = call %struct.PK11SlotInfoStr* @SECMOD_OpenUserDB(i8* %22) #5
  %24 = getelementptr inbounds %class.NSSDecryptor, %class.NSSDecryptor* %0, i64 0, i32 1
  store %struct.PK11SlotInfoStr* %23, %struct.PK11SlotInfoStr** %24, align 8
  %25 = icmp ne %struct.PK11SlotInfoStr* %23, null
  %26 = load i8, i8* %18, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %3
  %29 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %29) #6
  br label %30

30:                                               ; preds = %3, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #5
  ret i1 %25
}

declare void @_ZN6crypto13EnsureNSSInitEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #2

declare %struct.PK11SlotInfoStr* @SECMOD_OpenUserDB(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK12NSSDecryptor23PK11SDR_DecryptWithSlotEP15PK11SlotInfoStrP10SECItemStrS3_Pv(%class.NSSDecryptor* nocapture readnone, %struct.PK11SlotInfoStr*, %struct.SECItemStr*, %struct.SECItemStr*, i8*) local_unnamed_addr #1 align 2 {
  %6 = alloca %struct.SDRResult, align 8
  %7 = alloca %struct.SECItemStr, align 8
  %8 = bitcast %struct.SDRResult* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 96, i1 false)
  %9 = bitcast %struct.SECItemStr* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false)
  %10 = tail call %struct.PLArenaPool* @PORT_NewArena(i64 2048) #5
  %11 = icmp eq %struct.PLArenaPool* %10, null
  br i1 %11, label %71, label %12

12:                                               ; preds = %5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 96, i1 false)
  %13 = call i32 @SEC_QuickDERDecodeItem(%struct.PLArenaPool* nonnull %10, i8* nonnull %8, %struct.sec_ASN1Template_struct* getelementptr inbounds ([5 x %struct.sec_ASN1Template_struct], [5 x %struct.sec_ASN1Template_struct]* @_ZL10g_template, i64 0, i64 0), %struct.SECItemStr* %2) #5
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %62

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.SDRResult, %struct.SDRResult* %6, i64 0, i32 1
  %17 = call %struct.SECItemStr* @PK11_ParamFromAlgid(%struct.SECAlgorithmIDStr* %16) #5
  %18 = icmp eq %struct.SECItemStr* %17, null
  br i1 %18, label %62, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.SDRResult, %struct.SDRResult* %6, i64 0, i32 0
  %21 = call %struct.PK11SymKeyStr* @PK11_FindFixedKey(%struct.PK11SlotInfoStr* %1, i64 307, %struct.SECItemStr* nonnull %20, i8* %4) #5
  %22 = icmp eq %struct.PK11SymKeyStr* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.SDRResult, %struct.SDRResult* %6, i64 0, i32 2
  %25 = call fastcc i32 @_ZL11pk11DecryptP15PK11SlotInfoStrP11PLArenaPoolmP13PK11SymKeyStrP10SECItemStrS6_S6_(%struct.PLArenaPool* nonnull %10, %struct.PK11SymKeyStr* nonnull %21, %struct.SECItemStr* nonnull %17, %struct.SECItemStr* %24, %struct.SECItemStr* %3)
  switch i32 %25, label %29 [
    i32 -2, label %27
    i32 0, label %26
  ]

26:                                               ; preds = %23
  call void @PORT_FreeArena(%struct.PLArenaPool* nonnull %10, i32 1) #5
  br label %67

27:                                               ; preds = %23
  %28 = bitcast %struct.SECItemStr* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %28, i64 24, i1 false)
  br label %29

29:                                               ; preds = %19, %27, %23
  %30 = phi i32 [ -2, %27 ], [ %25, %23 ], [ -1, %19 ]
  %31 = call %struct.PK11SymKeyStr* @PK11_ListFixedKeysInSlot(%struct.PK11SlotInfoStr* %1, i8* null, i8* %4) #5
  %32 = icmp eq %struct.PK11SymKeyStr* %31, null
  br i1 %32, label %55, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.SDRResult, %struct.SDRResult* %6, i64 0, i32 2
  %35 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %7, i64 0, i32 1
  %36 = bitcast %struct.SECItemStr* %3 to i8*
  br label %37

37:                                               ; preds = %33, %45
  %38 = phi %struct.PK11SymKeyStr* [ %31, %33 ], [ %46, %45 ]
  %39 = call fastcc i32 @_ZL11pk11DecryptP15PK11SlotInfoStrP11PLArenaPoolmP13PK11SymKeyStrP10SECItemStrS6_S6_(%struct.PLArenaPool* nonnull %10, %struct.PK11SymKeyStr* nonnull %38, %struct.SECItemStr* nonnull %17, %struct.SECItemStr* %34, %struct.SECItemStr* %3)
  switch i32 %39, label %45 [
    i32 0, label %48
    i32 -2, label %40
  ]

40:                                               ; preds = %37
  %41 = load i8*, i8** %35, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %40
  call void @SECITEM_ZfreeItem(%struct.SECItemStr* %3, i32 0) #5
  br label %45

44:                                               ; preds = %40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %36, i64 24, i1 false)
  br label %45

45:                                               ; preds = %37, %44, %43
  %46 = call %struct.PK11SymKeyStr* @PK11_GetNextSymKey(%struct.PK11SymKeyStr* nonnull %38) #5
  %47 = icmp eq %struct.PK11SymKeyStr* %46, null
  br i1 %47, label %48, label %37

48:                                               ; preds = %45, %37
  br i1 %32, label %53, label %49

49:                                               ; preds = %48, %49
  %50 = phi %struct.PK11SymKeyStr* [ %51, %49 ], [ %31, %48 ]
  %51 = call %struct.PK11SymKeyStr* @PK11_GetNextSymKey(%struct.PK11SymKeyStr* nonnull %50) #5
  call void @PK11_FreeSymKey(%struct.PK11SymKeyStr* nonnull %50) #5
  %52 = icmp eq %struct.PK11SymKeyStr* %51, null
  br i1 %52, label %53, label %49

53:                                               ; preds = %49, %48
  %54 = icmp eq i32 %39, 0
  br i1 %54, label %64, label %55

55:                                               ; preds = %29, %53
  %56 = phi i32 [ %39, %53 ], [ %30, %29 ]
  %57 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %7, i64 0, i32 1
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %55
  %61 = bitcast %struct.SECItemStr* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* nonnull align 8 %9, i64 24, i1 false)
  store i8* null, i8** %57, align 8
  br label %64

62:                                               ; preds = %12, %15
  %63 = phi i32 [ %13, %12 ], [ -1, %15 ]
  call void @PORT_FreeArena(%struct.PLArenaPool* nonnull %10, i32 1) #5
  br label %71

64:                                               ; preds = %55, %53, %60
  %65 = phi i32 [ 0, %60 ], [ %56, %55 ], [ 0, %53 ]
  call void @PORT_FreeArena(%struct.PLArenaPool* nonnull %10, i32 1) #5
  %66 = icmp eq %struct.PK11SymKeyStr* %21, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %26, %64
  %68 = phi i32 [ 0, %26 ], [ %65, %64 ]
  call void @PK11_FreeSymKey(%struct.PK11SymKeyStr* nonnull %21) #5
  br label %69

69:                                               ; preds = %67, %64
  %70 = phi i32 [ %65, %64 ], [ %68, %67 ]
  call void @SECITEM_ZfreeItem(%struct.SECItemStr* nonnull %17, i32 1) #5
  br label %71

71:                                               ; preds = %62, %5, %69
  %72 = phi i32 [ %70, %69 ], [ -1, %5 ], [ %63, %62 ]
  %73 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %7, i64 0, i32 1
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %71
  call void @SECITEM_ZfreeItem(%struct.SECItemStr* nonnull %7, i32 0) #5
  br label %77

77:                                               ; preds = %71, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %8) #5
  ret i32 %72
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare %struct.PLArenaPool* @PORT_NewArena(i64) local_unnamed_addr #2

declare i32 @SEC_QuickDERDecodeItem(%struct.PLArenaPool*, i8*, %struct.sec_ASN1Template_struct*, %struct.SECItemStr*) local_unnamed_addr #2

declare %struct.SECItemStr* @PK11_ParamFromAlgid(%struct.SECAlgorithmIDStr*) local_unnamed_addr #2

declare %struct.PK11SymKeyStr* @PK11_FindFixedKey(%struct.PK11SlotInfoStr*, i64, %struct.SECItemStr*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL11pk11DecryptP15PK11SlotInfoStrP11PLArenaPoolmP13PK11SymKeyStrP10SECItemStrS6_S6_(%struct.PLArenaPool*, %struct.PK11SymKeyStr*, %struct.SECItemStr*, %struct.SECItemStr* nocapture readonly, %struct.SECItemStr* nocapture) unnamed_addr #1 {
  %6 = alloca %struct.SECItemStr, align 8
  %7 = bitcast %struct.SECItemStr* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  %8 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %6, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %6, i64 0, i32 1
  store i8* null, i8** %9, align 8
  %10 = tail call %struct.PK11ContextStr* @PK11_CreateContextBySymKey(i64 307, i64 261, %struct.PK11SymKeyStr* %1, %struct.SECItemStr* %2) #5
  %11 = icmp eq %struct.PK11ContextStr* %10, null
  br i1 %11, label %67, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %3, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  store i32 %14, i32* %8, align 8
  %15 = zext i32 %14 to i64
  %16 = tail call i8* @PORT_ArenaAlloc(%struct.PLArenaPool* %0, i64 %15) #5
  store i8* %16, i8** %9, align 8
  %17 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %3, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = load i32, i32* %13, align 8
  %20 = call i32 @PK11_CipherOp(%struct.PK11ContextStr* nonnull %10, i8* %16, i32* %8, i32 %14, i8* %18, i32 %19) #5
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %65

22:                                               ; preds = %12
  %23 = call i32 @PK11_Finalize(%struct.PK11ContextStr* nonnull %10) #5
  %24 = call i32 @PK11_GetBlockSize(i64 307, %struct.SECItemStr* null) #5
  %25 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %4, i64 0, i32 1
  store i8* null, i8** %25, align 8
  %26 = getelementptr inbounds %struct.SECItemStr, %struct.SECItemStr* %4, i64 0, i32 2
  store i32 0, i32* %26, align 8
  %27 = load i32, i32* %8, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %63, label %29

29:                                               ; preds = %22
  %30 = urem i32 %27, %24
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %63

32:                                               ; preds = %29
  %33 = load i8*, i8** %9, align 8
  %34 = add i32 %27, -1
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %33, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = icmp slt i32 %24, %38
  br i1 %39, label %63, label %40

40:                                               ; preds = %32
  %41 = sub i32 %27, %38
  %42 = icmp ult i32 %41, %27
  br i1 %42, label %43, label %54

43:                                               ; preds = %40
  %44 = sext i32 %41 to i64
  br label %48

45:                                               ; preds = %48
  %46 = trunc i64 %53 to i32
  %47 = icmp ugt i32 %27, %46
  br i1 %47, label %48, label %54

48:                                               ; preds = %45, %43
  %49 = phi i64 [ %44, %43 ], [ %53, %45 ]
  %50 = getelementptr inbounds i8, i8* %33, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, %37
  %53 = add nsw i64 %49, 1
  br i1 %52, label %45, label %63

54:                                               ; preds = %45, %40
  store i32 %41, i32* %26, align 8
  %55 = zext i32 %41 to i64
  %56 = call i8* @PORT_Alloc(i64 %55) #5
  store i8* %56, i8** %25, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = load i8*, i8** %9, align 8
  %60 = load i32, i32* %26, align 8
  %61 = zext i32 %60 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %56, i8* align 1 %59, i64 %61, i1 false) #5
  %62 = icmp ult i8 %37, 2
  br i1 %62, label %65, label %63

63:                                               ; preds = %48, %58, %54, %32, %29, %22
  %64 = phi i32 [ 0, %58 ], [ -1, %29 ], [ -1, %22 ], [ -1, %32 ], [ -1, %54 ], [ -1, %48 ]
  br label %65

65:                                               ; preds = %58, %63, %12
  %66 = phi i32 [ %20, %12 ], [ %64, %63 ], [ -2, %58 ]
  call void @PK11_DestroyContext(%struct.PK11ContextStr* nonnull %10, i32 1) #5
  br label %67

67:                                               ; preds = %5, %65
  %68 = phi i32 [ %66, %65 ], [ -1, %5 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #5
  ret i32 %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %struct.PK11SymKeyStr* @PK11_ListFixedKeysInSlot(%struct.PK11SlotInfoStr*, i8*, i8*) local_unnamed_addr #2

declare void @SECITEM_ZfreeItem(%struct.SECItemStr*, i32) local_unnamed_addr #2

declare %struct.PK11SymKeyStr* @PK11_GetNextSymKey(%struct.PK11SymKeyStr*) local_unnamed_addr #2

declare void @PK11_FreeSymKey(%struct.PK11SymKeyStr*) local_unnamed_addr #2

declare void @PORT_FreeArena(%struct.PLArenaPool*, i32) local_unnamed_addr #2

declare %struct.PK11ContextStr* @PK11_CreateContextBySymKey(i64, i64, %struct.PK11SymKeyStr*, %struct.SECItemStr*) local_unnamed_addr #2

declare i8* @PORT_ArenaAlloc(%struct.PLArenaPool*, i64) local_unnamed_addr #2

declare i32 @PK11_CipherOp(%struct.PK11ContextStr*, i8*, i32*, i32, i8*, i32) local_unnamed_addr #2

declare i32 @PK11_Finalize(%struct.PK11ContextStr*) local_unnamed_addr #2

declare i32 @PK11_GetBlockSize(i64, %struct.SECItemStr*) local_unnamed_addr #2

declare void @PK11_DestroyContext(%struct.PK11ContextStr*, i32) local_unnamed_addr #2

declare i8* @PORT_Alloc(i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
