; ModuleID = '../../third_party/ffmpeg/libavcodec/opus_rc.c'
source_filename = "../../third_party/ffmpeg/libavcodec/opus_rc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.OpusRangeCoder = type { %struct.GetBitContext, %struct.RawBitsContext, i32, i32, i32, [1287 x i8], i8*, i32, i32, i32 }
%struct.GetBitContext = type { i8*, i8*, i32, i32, i32 }
%struct.RawBitsContext = type { i8*, i32, i32, i32 }

@.str = private unnamed_addr constant [30 x i8] c"Assertion %s failed at %s:%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"rc->rng_cur < rc->rb.position\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"../../third_party/ffmpeg/libavcodec/opus_rc.c\00", align 1
@ff_sqrt_tab = external local_unnamed_addr constant [256 x i8], align 16
@ff_inverse = external local_unnamed_addr constant [257 x i32], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_opus_rc_dec_cdf(%struct.OpusRangeCoder* nocapture, i16* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds i16, i16* %1, i64 1
  %4 = load i16, i16* %1, align 2
  %5 = zext i16 %4 to i32
  %6 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = udiv i32 %7, %5
  %9 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = udiv i32 %10, %8
  %12 = add i32 %11, 1
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %5, i32 %12
  %15 = sub nsw i32 %5, %14
  br label %16

16:                                               ; preds = %16, %2
  %17 = phi i32 [ 0, %2 ], [ %23, %16 ]
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i16, i16* %3, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i32
  %22 = icmp ult i32 %15, %21
  %23 = add i32 %17, 1
  br i1 %22, label %24, label %16

24:                                               ; preds = %16
  %25 = zext i16 %20 to i32
  %26 = icmp eq i32 %17, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %24
  %28 = sub nsw i32 %5, %25
  %29 = mul i32 %28, %8
  %30 = sub i32 %10, %29
  store i32 %30, i32* %9, align 4
  br label %44

31:                                               ; preds = %24
  %32 = add i32 %17, -1
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i16, i16* %3, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = sub nsw i32 %5, %25
  %37 = mul i32 %36, %8
  %38 = sub i32 %10, %37
  store i32 %38, i32* %9, align 4
  %39 = icmp eq i16 %35, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %31
  %41 = zext i16 %35 to i32
  %42 = sub nsw i32 %25, %41
  %43 = mul i32 %42, %8
  br label %48

44:                                               ; preds = %27, %31
  %45 = phi i32 [ %30, %27 ], [ %38, %31 ]
  %46 = phi i32 [ %29, %27 ], [ %37, %31 ]
  %47 = sub i32 %7, %46
  br label %48

48:                                               ; preds = %44, %40
  %49 = phi i32 [ %38, %40 ], [ %45, %44 ]
  %50 = phi i32 [ %43, %40 ], [ %47, %44 ]
  store i32 %50, i32* %6, align 8
  %51 = icmp ult i32 %50, 8388609
  br i1 %51, label %52, label %85

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 2
  %54 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 4
  %55 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  %57 = load i32, i32* %53, align 8
  %58 = load i32, i32* %54, align 8
  %59 = load i8*, i8** %55, align 8
  %60 = load i32, i32* %56, align 8
  br label %61

61:                                               ; preds = %61, %52
  %62 = phi i32 [ %60, %52 ], [ %83, %61 ]
  %63 = phi i32 [ %57, %52 ], [ %78, %61 ]
  %64 = phi i32 [ %49, %52 ], [ %81, %61 ]
  %65 = phi i32 [ %50, %52 ], [ %82, %61 ]
  %66 = shl i32 %64, 8
  %67 = lshr i32 %63, 3
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %59, i64 %68
  %70 = bitcast i8* %69 to i32*
  %71 = load i32, i32* %70, align 1
  %72 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %71) #7, !srcloc !2
  %73 = and i32 %63, 7
  %74 = shl i32 %72, %73
  %75 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -8, i32 %74) #7, !srcloc !3
  %76 = add i32 %63, 8
  %77 = icmp ugt i32 %58, %76
  %78 = select i1 %77, i32 %76, i32 %58
  store i32 %78, i32* %53, align 8
  %79 = or i32 %75, %66
  %80 = and i32 %79, 2147483647
  %81 = xor i32 %80, 255
  store i32 %81, i32* %9, align 4
  %82 = shl i32 %65, 8
  store i32 %82, i32* %6, align 8
  %83 = add i32 %62, 8
  store i32 %83, i32* %56, align 8
  %84 = icmp ult i32 %82, 8388609
  br i1 %84, label %61, label %85

85:                                               ; preds = %61, %48
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_opus_rc_enc_cdf(%struct.OpusRangeCoder* nocapture, i32, i16* nocapture readonly) local_unnamed_addr #0 {
  %4 = icmp eq i32 %1, 0
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds i16, i16* %2, i64 %5
  %7 = load i16, i16* %6, align 2
  %8 = zext i16 %7 to i32
  %9 = select i1 %4, i32 0, i32 %8
  %10 = add nsw i32 %1, 1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i16, i16* %2, i64 %11
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = load i16, i16* %2, align 2
  %16 = zext i16 %15 to i32
  %17 = icmp ne i32 %9, 0
  %18 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = or i32 %16, 1
  %21 = tail call i32 @llvm.ctlz.i32(i32 %20, i1 true) #8, !range !4
  %22 = xor i32 %21, 31
  %23 = lshr i32 %19, %22
  %24 = sub nsw i32 %16, %9
  %25 = mul i32 %23, %24
  %26 = sub i32 %19, %25
  %27 = select i1 %17, i32 %26, i32 0
  %28 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = add i32 %27, %29
  store i32 %30, i32* %28, align 4
  %31 = sub nsw i32 %16, %14
  %32 = mul i32 %23, %31
  %33 = sub i32 %19, %32
  %34 = select i1 %17, i32 0, i32 %33
  %35 = select i1 %17, i32 %23, i32 0
  %36 = sub nsw i32 %14, %9
  %37 = mul i32 %35, %36
  %38 = add i32 %34, %37
  store i32 %38, i32* %18, align 8
  %39 = icmp ult i32 %38, 8388609
  br i1 %39, label %40, label %96

40:                                               ; preds = %3
  %41 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 8
  %42 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 6
  %43 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 7
  %44 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 0
  %45 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  br label %46

46:                                               ; preds = %87, %40
  %47 = phi i32 [ %38, %40 ], [ %92, %87 ]
  %48 = phi i32 [ %30, %40 ], [ %91, %87 ]
  %49 = lshr i32 %48, 23
  %50 = lshr i32 %48, 31
  %51 = icmp eq i32 %49, 255
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = load i32, i32* %43, align 8
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %43, align 8
  br label %87

55:                                               ; preds = %46
  %56 = load i32, i32* %41, align 4
  %57 = add nsw i32 %56, %50
  %58 = trunc i32 %57 to i8
  %59 = load i8*, i8** %42, align 8
  store i8 %58, i8* %59, align 1
  %60 = load i32, i32* %41, align 4
  %61 = lshr i32 %60, 31
  %62 = xor i32 %61, 1
  %63 = load i8*, i8** %42, align 8
  %64 = zext i32 %62 to i64
  %65 = getelementptr inbounds i8, i8* %63, i64 %64
  store i8* %65, i8** %42, align 8
  %66 = load i32, i32* %43, align 8
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %78

68:                                               ; preds = %55
  %69 = trunc i32 %50 to i8
  %70 = add nsw i8 %69, -1
  br label %71

71:                                               ; preds = %71, %68
  %72 = phi i8* [ %65, %68 ], [ %77, %71 ]
  %73 = getelementptr inbounds i8, i8* %72, i64 1
  store i8* %73, i8** %42, align 8
  store i8 %70, i8* %72, align 1
  %74 = load i32, i32* %43, align 8
  %75 = add nsw i32 %74, -1
  store i32 %75, i32* %43, align 8
  %76 = icmp sgt i32 %75, 0
  %77 = load i8*, i8** %42, align 8
  br i1 %76, label %71, label %78

78:                                               ; preds = %71, %55
  %79 = phi i8* [ %65, %55 ], [ %77, %71 ]
  %80 = load i8*, i8** %44, align 8
  %81 = icmp ult i8* %79, %80
  br i1 %81, label %83, label %82

82:                                               ; preds = %78
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 43) #8
  tail call void @abort() #9
  unreachable

83:                                               ; preds = %78
  %84 = and i32 %49, 255
  store i32 %84, i32* %41, align 4
  %85 = load i32, i32* %28, align 4
  %86 = load i32, i32* %18, align 8
  br label %87

87:                                               ; preds = %83, %52
  %88 = phi i32 [ %47, %52 ], [ %86, %83 ]
  %89 = phi i32 [ %48, %52 ], [ %85, %83 ]
  %90 = shl i32 %89, 8
  %91 = and i32 %90, 2147483392
  store i32 %91, i32* %28, align 4
  %92 = shl i32 %88, 8
  store i32 %92, i32* %18, align 8
  %93 = load i32, i32* %45, align 8
  %94 = add i32 %93, 8
  store i32 %94, i32* %45, align 8
  %95 = icmp ult i32 %92, 8388609
  br i1 %95, label %46, label %96

96:                                               ; preds = %87, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_opus_rc_dec_log(%struct.OpusRangeCoder* nocapture, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = lshr i32 %4, %1
  %6 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = icmp ult i32 %7, %5
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = sub i32 %7, %5
  store i32 %10, i32* %6, align 4
  %11 = sub i32 %4, %5
  br label %12

12:                                               ; preds = %2, %9
  %13 = phi i32 [ %10, %9 ], [ %7, %2 ]
  %14 = phi i32 [ %11, %9 ], [ %5, %2 ]
  %15 = phi i32 [ 0, %9 ], [ 1, %2 ]
  store i32 %14, i32* %3, align 8
  %16 = icmp ult i32 %14, 8388609
  br i1 %16, label %17, label %50

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 2
  %19 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 4
  %20 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  %22 = load i32, i32* %18, align 8
  %23 = load i32, i32* %19, align 8
  %24 = load i8*, i8** %20, align 8
  %25 = load i32, i32* %21, align 8
  br label %26

26:                                               ; preds = %26, %17
  %27 = phi i32 [ %25, %17 ], [ %48, %26 ]
  %28 = phi i32 [ %22, %17 ], [ %43, %26 ]
  %29 = phi i32 [ %13, %17 ], [ %46, %26 ]
  %30 = phi i32 [ %14, %17 ], [ %47, %26 ]
  %31 = shl i32 %29, 8
  %32 = lshr i32 %28, 3
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %24, i64 %33
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %36) #7, !srcloc !2
  %38 = and i32 %28, 7
  %39 = shl i32 %37, %38
  %40 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -8, i32 %39) #7, !srcloc !3
  %41 = add i32 %28, 8
  %42 = icmp ugt i32 %23, %41
  %43 = select i1 %42, i32 %41, i32 %23
  store i32 %43, i32* %18, align 8
  %44 = or i32 %40, %31
  %45 = and i32 %44, 2147483647
  %46 = xor i32 %45, 255
  store i32 %46, i32* %6, align 4
  %47 = shl i32 %30, 8
  store i32 %47, i32* %3, align 8
  %48 = add i32 %27, 8
  store i32 %48, i32* %21, align 8
  %49 = icmp ult i32 %47, 8388609
  br i1 %49, label %26, label %50

50:                                               ; preds = %26, %12
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_opus_rc_enc_log(%struct.OpusRangeCoder* nocapture, i32, i32) local_unnamed_addr #0 {
  %4 = shl i32 1, %2
  %5 = add nsw i32 %4, -1
  %6 = icmp ne i32 %1, 0
  %7 = zext i1 %6 to i32
  %8 = select i1 %6, i32 %5, i32 0
  %9 = add nsw i32 %5, %7
  %10 = icmp ne i32 %8, 0
  %11 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = or i32 %4, 1
  %14 = tail call i32 @llvm.ctlz.i32(i32 %13, i1 true) #8, !range !4
  %15 = xor i32 %14, 31
  %16 = lshr i32 %12, %15
  %17 = sub i32 %4, %8
  %18 = mul i32 %16, %17
  %19 = sub i32 %12, %18
  %20 = select i1 %10, i32 %19, i32 0
  %21 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %20, %22
  store i32 %23, i32* %21, align 4
  %24 = sub i32 %4, %9
  %25 = mul i32 %16, %24
  %26 = sub i32 %12, %25
  %27 = select i1 %10, i32 0, i32 %26
  %28 = select i1 %10, i32 %16, i32 0
  %29 = sub i32 %9, %8
  %30 = mul i32 %28, %29
  %31 = add i32 %27, %30
  store i32 %31, i32* %11, align 8
  %32 = icmp ult i32 %31, 8388609
  br i1 %32, label %33, label %89

33:                                               ; preds = %3
  %34 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 8
  %35 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 6
  %36 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 7
  %37 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 0
  %38 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  br label %39

39:                                               ; preds = %80, %33
  %40 = phi i32 [ %31, %33 ], [ %85, %80 ]
  %41 = phi i32 [ %23, %33 ], [ %84, %80 ]
  %42 = lshr i32 %41, 23
  %43 = lshr i32 %41, 31
  %44 = icmp eq i32 %42, 255
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = load i32, i32* %36, align 8
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %36, align 8
  br label %80

48:                                               ; preds = %39
  %49 = load i32, i32* %34, align 4
  %50 = add nsw i32 %49, %43
  %51 = trunc i32 %50 to i8
  %52 = load i8*, i8** %35, align 8
  store i8 %51, i8* %52, align 1
  %53 = load i32, i32* %34, align 4
  %54 = lshr i32 %53, 31
  %55 = xor i32 %54, 1
  %56 = load i8*, i8** %35, align 8
  %57 = zext i32 %55 to i64
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  store i8* %58, i8** %35, align 8
  %59 = load i32, i32* %36, align 8
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %61, label %71

61:                                               ; preds = %48
  %62 = trunc i32 %43 to i8
  %63 = add nsw i8 %62, -1
  br label %64

64:                                               ; preds = %64, %61
  %65 = phi i8* [ %58, %61 ], [ %70, %64 ]
  %66 = getelementptr inbounds i8, i8* %65, i64 1
  store i8* %66, i8** %35, align 8
  store i8 %63, i8* %65, align 1
  %67 = load i32, i32* %36, align 8
  %68 = add nsw i32 %67, -1
  store i32 %68, i32* %36, align 8
  %69 = icmp sgt i32 %68, 0
  %70 = load i8*, i8** %35, align 8
  br i1 %69, label %64, label %71

71:                                               ; preds = %64, %48
  %72 = phi i8* [ %58, %48 ], [ %70, %64 ]
  %73 = load i8*, i8** %37, align 8
  %74 = icmp ult i8* %72, %73
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 43) #8
  tail call void @abort() #9
  unreachable

76:                                               ; preds = %71
  %77 = and i32 %42, 255
  store i32 %77, i32* %34, align 4
  %78 = load i32, i32* %21, align 4
  %79 = load i32, i32* %11, align 8
  br label %80

80:                                               ; preds = %76, %45
  %81 = phi i32 [ %40, %45 ], [ %79, %76 ]
  %82 = phi i32 [ %41, %45 ], [ %78, %76 ]
  %83 = shl i32 %82, 8
  %84 = and i32 %83, 2147483392
  store i32 %84, i32* %21, align 4
  %85 = shl i32 %81, 8
  store i32 %85, i32* %11, align 8
  %86 = load i32, i32* %38, align 8
  %87 = add i32 %86, 8
  store i32 %87, i32* %38, align 8
  %88 = icmp ult i32 %85, 8388609
  br i1 %88, label %39, label %89

89:                                               ; preds = %80, %3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @ff_opus_rc_get_raw(%struct.OpusRangeCoder* nocapture, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 2
  %4 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = load i32, i32* %3, align 4
  br label %28

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 3
  %12 = load i32, i32* %3, align 4
  br label %13

13:                                               ; preds = %9, %17
  %14 = phi i32 [ %12, %9 ], [ %25, %17 ]
  %15 = phi i32 [ %5, %9 ], [ %26, %17 ]
  %16 = icmp ult i32 %14, %1
  br i1 %16, label %17, label %28

17:                                               ; preds = %13
  %18 = load i8*, i8** %10, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 -1
  store i8* %19, i8** %10, align 8
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = shl i32 %21, %14
  %23 = load i32, i32* %11, align 8
  %24 = or i32 %22, %23
  store i32 %24, i32* %11, align 8
  %25 = add i32 %14, 8
  store i32 %25, i32* %3, align 4
  %26 = add i32 %15, -1
  store i32 %26, i32* %4, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %13

28:                                               ; preds = %13, %17, %7
  %29 = phi i32 [ %8, %7 ], [ %14, %13 ], [ %25, %17 ]
  %30 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = shl nsw i32 -1, %1
  %33 = xor i32 %32, -1
  %34 = and i32 %31, %33
  %35 = lshr i32 %31, %1
  store i32 %35, i32* %30, align 8
  %36 = sub i32 %29, %1
  store i32 %36, i32* %3, align 4
  %37 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = add i32 %38, %1
  store i32 %39, i32* %37, align 8
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_opus_rc_put_raw(%struct.OpusRangeCoder* nocapture, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1
  %5 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = sub i32 32, %6
  %8 = icmp ugt i32 %7, %2
  %9 = select i1 %8, i32 %2, i32 %7
  %10 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, %2
  store i32 %12, i32* %10, align 8
  %13 = shl nsw i32 -1, %9
  %14 = xor i32 %13, -1
  %15 = and i32 %14, %1
  %16 = shl i32 %15, %6
  %17 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = or i32 %16, %18
  store i32 %19, i32* %17, align 8
  %20 = add i32 %9, %6
  %21 = and i32 %20, 31
  store i32 %21, i32* %5, align 4
  %22 = icmp eq i32 %21, 0
  %23 = icmp ne i32 %2, 0
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %44

25:                                               ; preds = %3
  %26 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %19) #7, !srcloc !2
  %27 = getelementptr inbounds %struct.RawBitsContext, %struct.RawBitsContext* %4, i64 0, i32 0
  %28 = bitcast %struct.RawBitsContext* %4 to i32**
  %29 = load i32*, i32** %28, align 8
  store i32 %26, i32* %29, align 1
  %30 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, 4
  store i32 %32, i32* %30, align 8
  %33 = load i8*, i8** %27, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  store i8* %34, i8** %27, align 8
  %35 = sub i32 %2, %9
  store i32 %35, i32* %5, align 4
  %36 = lshr i32 %1, %9
  %37 = shl nsw i32 -1, %35
  %38 = xor i32 %37, -1
  %39 = and i32 %36, %38
  store i32 %39, i32* %17, align 8
  %40 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 6
  %41 = load i8*, i8** %40, align 8
  %42 = icmp ult i8* %41, %34
  br i1 %42, label %44, label %43

43:                                               ; preds = %25
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 175) #8
  tail call void @abort() #9
  unreachable

44:                                               ; preds = %25, %3
  ret void
}

declare void @av_log(i8*, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_opus_rc_dec_uint(%struct.OpusRangeCoder* nocapture, i32) local_unnamed_addr #0 {
  %3 = add i32 %1, -1
  %4 = or i32 %3, 1
  %5 = tail call i32 @llvm.ctlz.i32(i32 %4, i1 true), !range !4
  %6 = xor i32 %5, 31
  %7 = icmp ne i32 %3, 0
  %8 = zext i1 %7 to i32
  %9 = add nuw nsw i32 %6, %8
  %10 = icmp ugt i32 %9, 8
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = add nsw i32 %9, -8
  %13 = lshr i32 %3, %12
  %14 = add nuw i32 %13, 1
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i32 [ %14, %11 ], [ %1, %2 ]
  %17 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = udiv i32 %18, %16
  %20 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = udiv i32 %21, %19
  %23 = add i32 %22, 1
  %24 = icmp ugt i32 %23, %16
  %25 = select i1 %24, i32 %16, i32 %23
  %26 = sub i32 %16, %25
  %27 = xor i32 %26, -1
  %28 = add i32 %16, %27
  %29 = mul i32 %28, %19
  %30 = sub i32 %21, %29
  store i32 %30, i32* %20, align 4
  %31 = icmp eq i32 %26, 0
  %32 = sub i32 %18, %29
  %33 = select i1 %31, i32 %32, i32 %19
  store i32 %33, i32* %17, align 8
  %34 = icmp ult i32 %33, 8388609
  br i1 %34, label %35, label %68

35:                                               ; preds = %15
  %36 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 2
  %37 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 4
  %38 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  %40 = load i32, i32* %36, align 8
  %41 = load i32, i32* %37, align 8
  %42 = load i8*, i8** %38, align 8
  %43 = load i32, i32* %39, align 8
  br label %44

44:                                               ; preds = %44, %35
  %45 = phi i32 [ %43, %35 ], [ %66, %44 ]
  %46 = phi i32 [ %40, %35 ], [ %61, %44 ]
  %47 = phi i32 [ %30, %35 ], [ %64, %44 ]
  %48 = phi i32 [ %33, %35 ], [ %65, %44 ]
  %49 = shl i32 %47, 8
  %50 = lshr i32 %46, 3
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %42, i64 %51
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 1
  %55 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %54) #7, !srcloc !2
  %56 = and i32 %46, 7
  %57 = shl i32 %55, %56
  %58 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -8, i32 %57) #7, !srcloc !3
  %59 = add i32 %46, 8
  %60 = icmp ugt i32 %41, %59
  %61 = select i1 %60, i32 %59, i32 %41
  store i32 %61, i32* %36, align 8
  %62 = or i32 %58, %49
  %63 = and i32 %62, 2147483647
  %64 = xor i32 %63, 255
  store i32 %64, i32* %20, align 4
  %65 = shl i32 %48, 8
  store i32 %65, i32* %17, align 8
  %66 = add i32 %45, 8
  store i32 %66, i32* %39, align 8
  %67 = icmp ult i32 %65, 8388609
  br i1 %67, label %44, label %68

68:                                               ; preds = %44, %15
  br i1 %10, label %69, label %112

69:                                               ; preds = %68
  %70 = add nsw i32 %9, -8
  %71 = shl i32 %26, %70
  %72 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 2
  %73 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %69
  %77 = load i32, i32* %72, align 4
  br label %97

78:                                               ; preds = %69
  %79 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 0
  %80 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 3
  %81 = load i32, i32* %72, align 4
  br label %82

82:                                               ; preds = %86, %78
  %83 = phi i32 [ %81, %78 ], [ %94, %86 ]
  %84 = phi i32 [ %74, %78 ], [ %95, %86 ]
  %85 = icmp ult i32 %83, %70
  br i1 %85, label %86, label %97

86:                                               ; preds = %82
  %87 = load i8*, i8** %79, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 -1
  store i8* %88, i8** %79, align 8
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = shl i32 %90, %83
  %92 = load i32, i32* %80, align 8
  %93 = or i32 %91, %92
  store i32 %93, i32* %80, align 8
  %94 = add i32 %83, 8
  store i32 %94, i32* %72, align 4
  %95 = add i32 %84, -1
  store i32 %95, i32* %73, align 8
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %82

97:                                               ; preds = %82, %86, %76
  %98 = phi i32 [ %77, %76 ], [ %94, %86 ], [ %83, %82 ]
  %99 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = shl nsw i32 -1, %70
  %102 = xor i32 %101, -1
  %103 = and i32 %100, %102
  %104 = lshr i32 %100, %70
  store i32 %104, i32* %99, align 8
  %105 = sub i32 %98, %70
  store i32 %105, i32* %72, align 4
  %106 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  %107 = load i32, i32* %106, align 8
  %108 = add i32 %107, %70
  store i32 %108, i32* %106, align 8
  %109 = or i32 %103, %71
  %110 = icmp ugt i32 %109, %3
  %111 = select i1 %110, i32 %3, i32 %109
  br label %112

112:                                              ; preds = %68, %97
  %113 = phi i32 [ %111, %97 ], [ %26, %68 ]
  ret i32 %113
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_opus_rc_enc_uint(%struct.OpusRangeCoder* nocapture, i32, i32) local_unnamed_addr #0 {
  %4 = add i32 %2, -1
  %5 = or i32 %4, 1
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 true), !range !4
  %7 = xor i32 %6, 31
  %8 = icmp ne i32 %4, 0
  %9 = zext i1 %8 to i32
  %10 = add nuw nsw i32 %7, %9
  %11 = icmp ugt i32 %10, 8
  %12 = select i1 %11, i32 %10, i32 8
  %13 = add nsw i32 %12, -8
  %14 = lshr i32 %1, %13
  %15 = lshr i32 %4, %13
  %16 = add i32 %15, 1
  %17 = icmp ne i32 %14, 0
  %18 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = udiv i32 %19, %16
  %21 = sub i32 %16, %14
  %22 = mul i32 %20, %21
  %23 = sub i32 %19, %22
  %24 = select i1 %17, i32 %23, i32 0
  %25 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %24, %26
  store i32 %27, i32* %25, align 4
  %28 = sub i32 %15, %14
  %29 = mul i32 %20, %28
  %30 = sub i32 %19, %29
  %31 = select i1 %17, i32 %20, i32 %30
  store i32 %31, i32* %18, align 8
  %32 = icmp ult i32 %31, 8388609
  br i1 %32, label %33, label %89

33:                                               ; preds = %3
  %34 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 8
  %35 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 6
  %36 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 7
  %37 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 0
  %38 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  br label %39

39:                                               ; preds = %80, %33
  %40 = phi i32 [ %31, %33 ], [ %85, %80 ]
  %41 = phi i32 [ %27, %33 ], [ %84, %80 ]
  %42 = lshr i32 %41, 23
  %43 = lshr i32 %41, 31
  %44 = icmp eq i32 %42, 255
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = load i32, i32* %36, align 8
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %36, align 8
  br label %80

48:                                               ; preds = %39
  %49 = load i32, i32* %34, align 4
  %50 = add nsw i32 %49, %43
  %51 = trunc i32 %50 to i8
  %52 = load i8*, i8** %35, align 8
  store i8 %51, i8* %52, align 1
  %53 = load i32, i32* %34, align 4
  %54 = lshr i32 %53, 31
  %55 = xor i32 %54, 1
  %56 = load i8*, i8** %35, align 8
  %57 = zext i32 %55 to i64
  %58 = getelementptr inbounds i8, i8* %56, i64 %57
  store i8* %58, i8** %35, align 8
  %59 = load i32, i32* %36, align 8
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %61, label %71

61:                                               ; preds = %48
  %62 = trunc i32 %43 to i8
  %63 = add nsw i8 %62, -1
  br label %64

64:                                               ; preds = %64, %61
  %65 = phi i8* [ %58, %61 ], [ %70, %64 ]
  %66 = getelementptr inbounds i8, i8* %65, i64 1
  store i8* %66, i8** %35, align 8
  store i8 %63, i8* %65, align 1
  %67 = load i32, i32* %36, align 8
  %68 = add nsw i32 %67, -1
  store i32 %68, i32* %36, align 8
  %69 = icmp sgt i32 %68, 0
  %70 = load i8*, i8** %35, align 8
  br i1 %69, label %64, label %71

71:                                               ; preds = %64, %48
  %72 = phi i8* [ %58, %48 ], [ %70, %64 ]
  %73 = load i8*, i8** %37, align 8
  %74 = icmp ult i8* %72, %73
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 43) #8
  tail call void @abort() #9
  unreachable

76:                                               ; preds = %71
  %77 = and i32 %42, 255
  store i32 %77, i32* %34, align 4
  %78 = load i32, i32* %25, align 4
  %79 = load i32, i32* %18, align 8
  br label %80

80:                                               ; preds = %76, %45
  %81 = phi i32 [ %40, %45 ], [ %79, %76 ]
  %82 = phi i32 [ %41, %45 ], [ %78, %76 ]
  %83 = shl i32 %82, 8
  %84 = and i32 %83, 2147483392
  store i32 %84, i32* %25, align 4
  %85 = shl i32 %81, 8
  store i32 %85, i32* %18, align 8
  %86 = load i32, i32* %38, align 8
  %87 = add i32 %86, 8
  store i32 %87, i32* %38, align 8
  %88 = icmp ult i32 %85, 8388609
  br i1 %88, label %39, label %89

89:                                               ; preds = %80, %3
  tail call void @ff_opus_rc_put_raw(%struct.OpusRangeCoder* %0, i32 %1, i32 %13)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_opus_rc_dec_uint_step(%struct.OpusRangeCoder* nocapture, i32) local_unnamed_addr #0 {
  %3 = add nsw i32 %1, 1
  %4 = mul nsw i32 %3, 3
  %5 = add nsw i32 %4, %1
  %6 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = udiv i32 %7, %5
  %9 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = udiv i32 %10, %8
  %12 = add i32 %11, 1
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %5, i32 %12
  %15 = sub i32 %5, %14
  %16 = icmp ult i32 %15, %4
  %17 = udiv i32 %15, 3
  %18 = shl nsw i32 %3, 1
  %19 = sub i32 %15, %18
  %20 = select i1 %16, i32 %17, i32 %19
  %21 = icmp ule i32 %20, %1
  br i1 %21, label %22, label %24

22:                                               ; preds = %2
  %23 = mul i32 %20, 3
  br label %29

24:                                               ; preds = %2
  %25 = xor i32 %1, -1
  %26 = add i32 %4, %25
  %27 = add i32 %26, %20
  %28 = mul i32 %20, 3
  br label %29

29:                                               ; preds = %24, %22
  %30 = phi i32 [ %28, %24 ], [ %23, %22 ]
  %31 = phi i32 [ %27, %24 ], [ %23, %22 ]
  %32 = add i32 %30, 3
  %33 = sub i32 %4, %1
  %34 = add i32 %33, %20
  %35 = select i1 %21, i32 %32, i32 %34
  %36 = sub i32 %5, %35
  %37 = mul i32 %36, %8
  %38 = sub i32 %10, %37
  store i32 %38, i32* %9, align 4
  %39 = icmp eq i32 %31, 0
  %40 = sub i32 %35, %31
  %41 = mul i32 %40, %8
  %42 = sub i32 %7, %37
  %43 = select i1 %39, i32 %42, i32 %41
  store i32 %43, i32* %6, align 8
  %44 = icmp ult i32 %43, 8388609
  br i1 %44, label %45, label %78

45:                                               ; preds = %29
  %46 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 2
  %47 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 4
  %48 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  %50 = load i32, i32* %46, align 8
  %51 = load i32, i32* %47, align 8
  %52 = load i8*, i8** %48, align 8
  %53 = load i32, i32* %49, align 8
  br label %54

54:                                               ; preds = %54, %45
  %55 = phi i32 [ %53, %45 ], [ %76, %54 ]
  %56 = phi i32 [ %50, %45 ], [ %71, %54 ]
  %57 = phi i32 [ %38, %45 ], [ %74, %54 ]
  %58 = phi i32 [ %43, %45 ], [ %75, %54 ]
  %59 = shl i32 %57, 8
  %60 = lshr i32 %56, 3
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %52, i64 %61
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 1
  %65 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %64) #7, !srcloc !2
  %66 = and i32 %56, 7
  %67 = shl i32 %65, %66
  %68 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -8, i32 %67) #7, !srcloc !3
  %69 = add i32 %56, 8
  %70 = icmp ugt i32 %51, %69
  %71 = select i1 %70, i32 %69, i32 %51
  store i32 %71, i32* %46, align 8
  %72 = or i32 %68, %59
  %73 = and i32 %72, 2147483647
  %74 = xor i32 %73, 255
  store i32 %74, i32* %9, align 4
  %75 = shl i32 %58, 8
  store i32 %75, i32* %6, align 8
  %76 = add i32 %55, 8
  store i32 %76, i32* %49, align 8
  %77 = icmp ult i32 %75, 8388609
  br i1 %77, label %54, label %78

78:                                               ; preds = %54, %29
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_opus_rc_enc_uint_step(%struct.OpusRangeCoder* nocapture, i32, i32) local_unnamed_addr #0 {
  %4 = icmp ule i32 %1, %2
  %5 = zext i1 %4 to i32
  %6 = shl nuw nsw i32 %5, 1
  %7 = or i32 %6, 1
  %8 = shl i32 %2, 1
  %9 = add i32 %8, 2
  %10 = add i32 %9, %1
  %11 = mul i32 %7, %10
  %12 = select i1 %4, i32 3, i32 0
  %13 = mul i32 %12, %9
  %14 = sub i32 %11, %13
  %15 = shl i32 %9, 1
  %16 = add nsw i32 %15, -1
  %17 = icmp ne i32 %14, 0
  %18 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = udiv i32 %19, %16
  %21 = sub i32 %16, %14
  %22 = mul i32 %20, %21
  %23 = sub i32 %19, %22
  %24 = select i1 %17, i32 %23, i32 0
  %25 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %24, %26
  store i32 %27, i32* %25, align 4
  %28 = sub nuw nsw i32 %16, %7
  %29 = sub i32 %28, %14
  %30 = mul i32 %20, %29
  %31 = sub i32 %19, %30
  %32 = select i1 %17, i32 0, i32 %31
  %33 = select i1 %17, i32 %20, i32 0
  %34 = mul i32 %33, %7
  %35 = add i32 %32, %34
  store i32 %35, i32* %18, align 8
  %36 = icmp ult i32 %35, 8388609
  br i1 %36, label %37, label %93

37:                                               ; preds = %3
  %38 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 8
  %39 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 6
  %40 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 7
  %41 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  br label %43

43:                                               ; preds = %84, %37
  %44 = phi i32 [ %35, %37 ], [ %89, %84 ]
  %45 = phi i32 [ %27, %37 ], [ %88, %84 ]
  %46 = lshr i32 %45, 23
  %47 = lshr i32 %45, 31
  %48 = icmp eq i32 %46, 255
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = load i32, i32* %40, align 8
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %40, align 8
  br label %84

52:                                               ; preds = %43
  %53 = load i32, i32* %38, align 4
  %54 = add nsw i32 %53, %47
  %55 = trunc i32 %54 to i8
  %56 = load i8*, i8** %39, align 8
  store i8 %55, i8* %56, align 1
  %57 = load i32, i32* %38, align 4
  %58 = lshr i32 %57, 31
  %59 = xor i32 %58, 1
  %60 = load i8*, i8** %39, align 8
  %61 = zext i32 %59 to i64
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  store i8* %62, i8** %39, align 8
  %63 = load i32, i32* %40, align 8
  %64 = icmp sgt i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %52
  %66 = trunc i32 %47 to i8
  %67 = add nsw i8 %66, -1
  br label %68

68:                                               ; preds = %68, %65
  %69 = phi i8* [ %62, %65 ], [ %74, %68 ]
  %70 = getelementptr inbounds i8, i8* %69, i64 1
  store i8* %70, i8** %39, align 8
  store i8 %67, i8* %69, align 1
  %71 = load i32, i32* %40, align 8
  %72 = add nsw i32 %71, -1
  store i32 %72, i32* %40, align 8
  %73 = icmp sgt i32 %72, 0
  %74 = load i8*, i8** %39, align 8
  br i1 %73, label %68, label %75

75:                                               ; preds = %68, %52
  %76 = phi i8* [ %62, %52 ], [ %74, %68 ]
  %77 = load i8*, i8** %41, align 8
  %78 = icmp ult i8* %76, %77
  br i1 %78, label %80, label %79

79:                                               ; preds = %75
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 43) #8
  tail call void @abort() #9
  unreachable

80:                                               ; preds = %75
  %81 = and i32 %46, 255
  store i32 %81, i32* %38, align 4
  %82 = load i32, i32* %25, align 4
  %83 = load i32, i32* %18, align 8
  br label %84

84:                                               ; preds = %80, %49
  %85 = phi i32 [ %44, %49 ], [ %83, %80 ]
  %86 = phi i32 [ %45, %49 ], [ %82, %80 ]
  %87 = shl i32 %86, 8
  %88 = and i32 %87, 2147483392
  store i32 %88, i32* %25, align 4
  %89 = shl i32 %85, 8
  store i32 %89, i32* %18, align 8
  %90 = load i32, i32* %42, align 8
  %91 = add i32 %90, 8
  store i32 %91, i32* %42, align 8
  %92 = icmp ult i32 %89, 8388609
  br i1 %92, label %43, label %93

93:                                               ; preds = %84, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_opus_rc_dec_uint_tri(%struct.OpusRangeCoder* nocapture, i32) local_unnamed_addr #0 {
  %3 = ashr i32 %1, 1
  %4 = add nsw i32 %3, 1
  %5 = mul nsw i32 %4, %4
  %6 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = udiv i32 %7, %5
  %9 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = udiv i32 %10, %8
  %12 = add i32 %11, 1
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %5, i32 %12
  %15 = sub nsw i32 %5, %14
  %16 = lshr i32 %5, 1
  %17 = icmp ult i32 %15, %16
  br i1 %17, label %18, label %97

18:                                               ; preds = %2
  %19 = shl i32 %15, 3
  %20 = or i32 %19, 1
  %21 = icmp ult i32 %20, 255
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = add nuw nsw i32 %20, 1
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %24
  %26 = load i8, i8* %25, align 2
  %27 = zext i8 %26 to i32
  %28 = add nsw i32 %27, -1
  %29 = ashr i32 %28, 4
  br label %90

30:                                               ; preds = %18
  %31 = icmp ult i32 %20, 4096
  br i1 %31, label %32, label %40

32:                                               ; preds = %30
  %33 = lshr i32 %15, 1
  %34 = and i32 %33, 268435455
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = lshr i8 %37, 2
  %39 = zext i8 %38 to i32
  br label %84

40:                                               ; preds = %30
  %41 = icmp ult i32 %20, 16384
  br i1 %41, label %42, label %50

42:                                               ; preds = %40
  %43 = lshr i32 %15, 3
  %44 = and i32 %43, 67108863
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = lshr i8 %47, 1
  %49 = zext i8 %48 to i32
  br label %84

50:                                               ; preds = %40
  %51 = icmp ult i32 %20, 65536
  br i1 %51, label %52, label %59

52:                                               ; preds = %50
  %53 = lshr i32 %15, 5
  %54 = and i32 %53, 16777215
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  br label %84

59:                                               ; preds = %50
  %60 = lshr i32 %15, 13
  %61 = and i32 %60, 65534
  %62 = or i32 %61, 1
  %63 = tail call i32 @llvm.ctlz.i32(i32 %62, i1 true) #8, !range !5
  %64 = lshr i32 %63, 1
  %65 = xor i32 %64, 15
  %66 = add nuw nsw i32 %65, 2
  %67 = lshr i32 %20, %66
  %68 = or i32 %65, 8
  %69 = lshr i32 %67, %68
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = zext i32 %67 to i64
  %75 = zext i8 %72 to i64
  %76 = getelementptr inbounds [257 x i32], [257 x i32]* @ff_inverse, i64 0, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = mul nuw nsw i64 %78, %74
  %80 = lshr i64 %79, 32
  %81 = trunc i64 %80 to i32
  %82 = shl i32 %73, %65
  %83 = add nuw i32 %82, %81
  br label %84

84:                                               ; preds = %59, %52, %42, %32
  %85 = phi i32 [ %39, %32 ], [ %49, %42 ], [ %58, %52 ], [ %83, %59 ]
  %86 = mul i32 %85, %85
  %87 = icmp ugt i32 %86, %20
  %88 = zext i1 %87 to i32
  %89 = sub i32 %85, %88
  br label %90

90:                                               ; preds = %22, %84
  %91 = phi i32 [ %29, %22 ], [ %89, %84 ]
  %92 = add i32 %91, -1
  %93 = lshr i32 %92, 1
  %94 = add nuw i32 %93, 1
  %95 = mul i32 %94, %93
  %96 = lshr i32 %95, 1
  br label %177

97:                                               ; preds = %2
  %98 = add nsw i32 %1, 1
  %99 = shl nsw i32 %98, 1
  %100 = shl i32 %14, 3
  %101 = add i32 %100, -7
  %102 = icmp ult i32 %101, 255
  br i1 %102, label %103, label %111

103:                                              ; preds = %97
  %104 = add nsw i32 %100, -6
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %105
  %107 = load i8, i8* %106, align 2
  %108 = zext i8 %107 to i32
  %109 = add nsw i32 %108, -1
  %110 = ashr i32 %109, 4
  br label %167

111:                                              ; preds = %97
  %112 = icmp ult i32 %101, 4096
  br i1 %112, label %113, label %120

113:                                              ; preds = %111
  %114 = lshr i32 %101, 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = lshr i8 %117, 2
  %119 = zext i8 %118 to i32
  br label %161

120:                                              ; preds = %111
  %121 = icmp ult i32 %101, 16384
  br i1 %121, label %122, label %129

122:                                              ; preds = %120
  %123 = lshr i32 %101, 6
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = lshr i8 %126, 1
  %128 = zext i8 %127 to i32
  br label %161

129:                                              ; preds = %120
  %130 = icmp ult i32 %101, 65536
  br i1 %130, label %131, label %137

131:                                              ; preds = %129
  %132 = lshr i32 %101, 8
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  br label %161

137:                                              ; preds = %129
  %138 = lshr i32 %101, 16
  %139 = or i32 %138, 1
  %140 = tail call i32 @llvm.ctlz.i32(i32 %139, i1 true) #8, !range !5
  %141 = lshr i32 %140, 1
  %142 = xor i32 %141, 15
  %143 = add nuw nsw i32 %142, 2
  %144 = lshr i32 %101, %143
  %145 = or i32 %142, 8
  %146 = lshr i32 %144, %145
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds [256 x i8], [256 x i8]* @ff_sqrt_tab, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = zext i32 %144 to i64
  %152 = zext i8 %149 to i64
  %153 = getelementptr inbounds [257 x i32], [257 x i32]* @ff_inverse, i64 0, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = zext i32 %154 to i64
  %156 = mul nuw nsw i64 %155, %151
  %157 = lshr i64 %156, 32
  %158 = trunc i64 %157 to i32
  %159 = shl i32 %150, %142
  %160 = add nuw i32 %159, %158
  br label %161

161:                                              ; preds = %137, %131, %122, %113
  %162 = phi i32 [ %119, %113 ], [ %128, %122 ], [ %136, %131 ], [ %160, %137 ]
  %163 = mul i32 %162, %162
  %164 = icmp ugt i32 %163, %101
  %165 = zext i1 %164 to i32
  %166 = sub i32 %162, %165
  br label %167

167:                                              ; preds = %103, %161
  %168 = phi i32 [ %110, %103 ], [ %166, %161 ]
  %169 = sub i32 %99, %168
  %170 = lshr i32 %169, 1
  %171 = sub i32 %98, %170
  %172 = add nsw i32 %1, 2
  %173 = sub i32 %172, %170
  %174 = mul i32 %171, %173
  %175 = lshr i32 %174, 1
  %176 = sub nsw i32 %5, %175
  br label %177

177:                                              ; preds = %167, %90
  %178 = phi i32 [ %93, %90 ], [ %170, %167 ]
  %179 = phi i32 [ %94, %90 ], [ %171, %167 ]
  %180 = phi i32 [ %96, %90 ], [ %176, %167 ]
  %181 = sub i32 %5, %179
  %182 = sub i32 %181, %180
  %183 = mul i32 %182, %8
  %184 = sub i32 %10, %183
  store i32 %184, i32* %9, align 4
  %185 = icmp eq i32 %180, 0
  %186 = mul i32 %179, %8
  %187 = sub i32 %7, %183
  %188 = select i1 %185, i32 %187, i32 %186
  store i32 %188, i32* %6, align 8
  %189 = icmp ult i32 %188, 8388609
  br i1 %189, label %190, label %223

190:                                              ; preds = %177
  %191 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 2
  %192 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 4
  %193 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 0
  %194 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  %195 = load i32, i32* %191, align 8
  %196 = load i32, i32* %192, align 8
  %197 = load i8*, i8** %193, align 8
  %198 = load i32, i32* %194, align 8
  br label %199

199:                                              ; preds = %199, %190
  %200 = phi i32 [ %198, %190 ], [ %221, %199 ]
  %201 = phi i32 [ %195, %190 ], [ %216, %199 ]
  %202 = phi i32 [ %184, %190 ], [ %219, %199 ]
  %203 = phi i32 [ %188, %190 ], [ %220, %199 ]
  %204 = shl i32 %202, 8
  %205 = lshr i32 %201, 3
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds i8, i8* %197, i64 %206
  %208 = bitcast i8* %207 to i32*
  %209 = load i32, i32* %208, align 1
  %210 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %209) #7, !srcloc !2
  %211 = and i32 %201, 7
  %212 = shl i32 %210, %211
  %213 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -8, i32 %212) #7, !srcloc !3
  %214 = add i32 %201, 8
  %215 = icmp ugt i32 %196, %214
  %216 = select i1 %215, i32 %214, i32 %196
  store i32 %216, i32* %191, align 8
  %217 = or i32 %213, %204
  %218 = and i32 %217, 2147483647
  %219 = xor i32 %218, 255
  store i32 %219, i32* %9, align 4
  %220 = shl i32 %203, 8
  store i32 %220, i32* %6, align 8
  %221 = add i32 %200, 8
  store i32 %221, i32* %194, align 8
  %222 = icmp ult i32 %220, 8388609
  br i1 %222, label %199, label %223

223:                                              ; preds = %199, %177
  ret i32 %178
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_opus_rc_enc_uint_tri(%struct.OpusRangeCoder* nocapture, i32, i32) local_unnamed_addr #0 {
  %4 = ashr i32 %2, 1
  %5 = add nsw i32 %4, 1
  %6 = mul nsw i32 %5, %5
  %7 = icmp ult i32 %4, %1
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = add i32 %1, 1
  %10 = mul i32 %9, %1
  %11 = lshr i32 %10, 1
  br label %20

12:                                               ; preds = %3
  %13 = sub i32 1, %1
  %14 = add i32 %13, %2
  %15 = sub i32 2, %1
  %16 = add i32 %15, %2
  %17 = mul i32 %14, %16
  %18 = lshr i32 %17, 1
  %19 = sub nsw i32 %6, %18
  br label %20

20:                                               ; preds = %12, %8
  %21 = phi i32 [ %9, %8 ], [ %14, %12 ]
  %22 = phi i32 [ %11, %8 ], [ %19, %12 ]
  %23 = icmp ne i32 %22, 0
  %24 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = udiv i32 %25, %6
  %27 = sub i32 %6, %22
  %28 = mul i32 %26, %27
  %29 = sub i32 %25, %28
  %30 = select i1 %23, i32 %29, i32 0
  %31 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = add i32 %30, %32
  store i32 %33, i32* %31, align 4
  %34 = sub i32 %6, %21
  %35 = sub i32 %34, %22
  %36 = mul i32 %26, %35
  %37 = sub i32 %25, %36
  %38 = select i1 %23, i32 0, i32 %37
  %39 = select i1 %23, i32 %26, i32 0
  %40 = mul i32 %39, %21
  %41 = add i32 %38, %40
  store i32 %41, i32* %24, align 8
  %42 = icmp ult i32 %41, 8388609
  br i1 %42, label %43, label %99

43:                                               ; preds = %20
  %44 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 8
  %45 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 6
  %46 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 7
  %47 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  br label %49

49:                                               ; preds = %90, %43
  %50 = phi i32 [ %41, %43 ], [ %95, %90 ]
  %51 = phi i32 [ %33, %43 ], [ %94, %90 ]
  %52 = lshr i32 %51, 23
  %53 = lshr i32 %51, 31
  %54 = icmp eq i32 %52, 255
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = load i32, i32* %46, align 8
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %46, align 8
  br label %90

58:                                               ; preds = %49
  %59 = load i32, i32* %44, align 4
  %60 = add nsw i32 %59, %53
  %61 = trunc i32 %60 to i8
  %62 = load i8*, i8** %45, align 8
  store i8 %61, i8* %62, align 1
  %63 = load i32, i32* %44, align 4
  %64 = lshr i32 %63, 31
  %65 = xor i32 %64, 1
  %66 = load i8*, i8** %45, align 8
  %67 = zext i32 %65 to i64
  %68 = getelementptr inbounds i8, i8* %66, i64 %67
  store i8* %68, i8** %45, align 8
  %69 = load i32, i32* %46, align 8
  %70 = icmp sgt i32 %69, 0
  br i1 %70, label %71, label %81

71:                                               ; preds = %58
  %72 = trunc i32 %53 to i8
  %73 = add nsw i8 %72, -1
  br label %74

74:                                               ; preds = %74, %71
  %75 = phi i8* [ %68, %71 ], [ %80, %74 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 1
  store i8* %76, i8** %45, align 8
  store i8 %73, i8* %75, align 1
  %77 = load i32, i32* %46, align 8
  %78 = add nsw i32 %77, -1
  store i32 %78, i32* %46, align 8
  %79 = icmp sgt i32 %78, 0
  %80 = load i8*, i8** %45, align 8
  br i1 %79, label %74, label %81

81:                                               ; preds = %74, %58
  %82 = phi i8* [ %68, %58 ], [ %80, %74 ]
  %83 = load i8*, i8** %47, align 8
  %84 = icmp ult i8* %82, %83
  br i1 %84, label %86, label %85

85:                                               ; preds = %81
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 43) #8
  tail call void @abort() #9
  unreachable

86:                                               ; preds = %81
  %87 = and i32 %52, 255
  store i32 %87, i32* %44, align 4
  %88 = load i32, i32* %31, align 4
  %89 = load i32, i32* %24, align 8
  br label %90

90:                                               ; preds = %86, %55
  %91 = phi i32 [ %50, %55 ], [ %89, %86 ]
  %92 = phi i32 [ %51, %55 ], [ %88, %86 ]
  %93 = shl i32 %92, 8
  %94 = and i32 %93, 2147483392
  store i32 %94, i32* %31, align 4
  %95 = shl i32 %91, 8
  store i32 %95, i32* %24, align 8
  %96 = load i32, i32* %48, align 8
  %97 = add i32 %96, 8
  store i32 %97, i32* %48, align 8
  %98 = icmp ult i32 %95, 8388609
  br i1 %98, label %49, label %99

99:                                               ; preds = %90, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_opus_rc_dec_laplace(%struct.OpusRangeCoder* nocapture, i32, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = lshr i32 %5, 15
  %7 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = udiv i32 %8, %6
  %10 = add i32 %9, 1
  %11 = icmp ult i32 %10, 32768
  %12 = select i1 %11, i32 %10, i32 32768
  %13 = sub nuw nsw i32 32768, %12
  %14 = icmp ult i32 %13, %1
  br i1 %14, label %54, label %15

15:                                               ; preds = %3
  %16 = sub i32 32736, %1
  %17 = sub nsw i32 16384, %2
  %18 = mul i32 %17, %16
  %19 = lshr i32 %18, 15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %37, label %21

21:                                               ; preds = %15, %29
  %22 = phi i32 [ %33, %29 ], [ %19, %15 ]
  %23 = phi i32 [ %27, %29 ], [ %1, %15 ]
  %24 = phi i32 [ %30, %29 ], [ 1, %15 ]
  %25 = add nuw nsw i32 %22, 1
  %26 = shl nuw nsw i32 %25, 1
  %27 = add i32 %26, %23
  %28 = icmp ult i32 %13, %27
  br i1 %28, label %35, label %29

29:                                               ; preds = %21
  %30 = add nuw nsw i32 %24, 1
  %31 = add nsw i32 %26, -2
  %32 = mul i32 %31, %2
  %33 = lshr i32 %32, 15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %37, label %21

35:                                               ; preds = %21
  %36 = icmp ult i32 %25, 2
  br i1 %36, label %37, label %45

37:                                               ; preds = %29, %15, %35
  %38 = phi i32 [ %24, %35 ], [ 1, %15 ], [ %30, %29 ]
  %39 = phi i32 [ %23, %35 ], [ %1, %15 ], [ %27, %29 ]
  %40 = sub i32 %13, %39
  %41 = lshr i32 %40, 1
  %42 = add nuw nsw i32 %41, %38
  %43 = and i32 %40, -2
  %44 = add i32 %43, %39
  br label %45

45:                                               ; preds = %37, %35
  %46 = phi i32 [ 1, %37 ], [ %25, %35 ]
  %47 = phi i32 [ %42, %37 ], [ %24, %35 ]
  %48 = phi i32 [ %44, %37 ], [ %23, %35 ]
  %49 = add i32 %48, %46
  %50 = icmp ult i32 %13, %49
  %51 = sub nsw i32 0, %47
  %52 = select i1 %50, i32 %51, i32 %47
  %53 = select i1 %50, i32 %48, i32 %49
  br label %54

54:                                               ; preds = %45, %3
  %55 = phi i32 [ 0, %3 ], [ %52, %45 ]
  %56 = phi i32 [ 0, %3 ], [ %53, %45 ]
  %57 = phi i32 [ %1, %3 ], [ %46, %45 ]
  %58 = add i32 %57, %56
  %59 = icmp ult i32 %58, 32768
  %60 = select i1 %59, i32 %58, i32 32768
  %61 = sub nuw nsw i32 32768, %60
  %62 = mul i32 %61, %6
  %63 = sub i32 %8, %62
  store i32 %63, i32* %7, align 4
  %64 = icmp eq i32 %56, 0
  %65 = sub i32 %60, %56
  %66 = mul i32 %65, %6
  %67 = sub i32 %5, %62
  %68 = select i1 %64, i32 %67, i32 %66
  store i32 %68, i32* %4, align 8
  %69 = icmp ult i32 %68, 8388609
  br i1 %69, label %70, label %103

70:                                               ; preds = %54
  %71 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 2
  %72 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 4
  %73 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 0
  %74 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  %75 = load i32, i32* %71, align 8
  %76 = load i32, i32* %72, align 8
  %77 = load i8*, i8** %73, align 8
  %78 = load i32, i32* %74, align 8
  br label %79

79:                                               ; preds = %79, %70
  %80 = phi i32 [ %78, %70 ], [ %101, %79 ]
  %81 = phi i32 [ %75, %70 ], [ %96, %79 ]
  %82 = phi i32 [ %63, %70 ], [ %99, %79 ]
  %83 = phi i32 [ %68, %70 ], [ %100, %79 ]
  %84 = shl i32 %82, 8
  %85 = lshr i32 %81, 3
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %77, i64 %86
  %88 = bitcast i8* %87 to i32*
  %89 = load i32, i32* %88, align 1
  %90 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %89) #7, !srcloc !2
  %91 = and i32 %81, 7
  %92 = shl i32 %90, %91
  %93 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -8, i32 %92) #7, !srcloc !3
  %94 = add i32 %81, 8
  %95 = icmp ugt i32 %76, %94
  %96 = select i1 %95, i32 %94, i32 %76
  store i32 %96, i32* %71, align 8
  %97 = or i32 %93, %84
  %98 = and i32 %97, 2147483647
  %99 = xor i32 %98, 255
  store i32 %99, i32* %7, align 4
  %100 = shl i32 %83, 8
  store i32 %100, i32* %4, align 8
  %101 = add i32 %80, 8
  store i32 %101, i32* %74, align 8
  %102 = icmp ult i32 %100, 8388609
  br i1 %102, label %79, label %103

103:                                              ; preds = %79, %54
  ret i32 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_opus_rc_enc_laplace(%struct.OpusRangeCoder* nocapture, i32* nocapture, i32, i32) local_unnamed_addr #0 {
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 0
  %7 = sub nsw i32 0, %5
  %8 = select i1 %6, i32 %7, i32 %5
  %9 = icmp sgt i32 %5, 0
  %10 = zext i1 %9 to i32
  %11 = icmp eq i32 %5, 0
  br i1 %11, label %12, label %78

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = lshr i32 %14, 15
  %16 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = sub i32 32768, %2
  %19 = mul i32 %15, %18
  %20 = sub i32 %14, %19
  store i32 %20, i32* %13, align 8
  %21 = icmp ult i32 %20, 8388609
  br i1 %21, label %22, label %203

22:                                               ; preds = %12
  %23 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 8
  %24 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 6
  %25 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 7
  %26 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 0
  %27 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  br label %28

28:                                               ; preds = %69, %22
  %29 = phi i32 [ %20, %22 ], [ %74, %69 ]
  %30 = phi i32 [ %17, %22 ], [ %73, %69 ]
  %31 = lshr i32 %30, 23
  %32 = lshr i32 %30, 31
  %33 = icmp eq i32 %31, 255
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = load i32, i32* %25, align 8
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %25, align 8
  br label %69

37:                                               ; preds = %28
  %38 = load i32, i32* %23, align 4
  %39 = add nsw i32 %38, %32
  %40 = trunc i32 %39 to i8
  %41 = load i8*, i8** %24, align 8
  store i8 %40, i8* %41, align 1
  %42 = load i32, i32* %23, align 4
  %43 = lshr i32 %42, 31
  %44 = xor i32 %43, 1
  %45 = load i8*, i8** %24, align 8
  %46 = zext i32 %44 to i64
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  store i8* %47, i8** %24, align 8
  %48 = load i32, i32* %25, align 8
  %49 = icmp sgt i32 %48, 0
  br i1 %49, label %50, label %60

50:                                               ; preds = %37
  %51 = trunc i32 %32 to i8
  %52 = add nsw i8 %51, -1
  br label %53

53:                                               ; preds = %53, %50
  %54 = phi i8* [ %47, %50 ], [ %59, %53 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 1
  store i8* %55, i8** %24, align 8
  store i8 %52, i8* %54, align 1
  %56 = load i32, i32* %25, align 8
  %57 = add nsw i32 %56, -1
  store i32 %57, i32* %25, align 8
  %58 = icmp sgt i32 %57, 0
  %59 = load i8*, i8** %24, align 8
  br i1 %58, label %53, label %60

60:                                               ; preds = %53, %37
  %61 = phi i8* [ %47, %37 ], [ %59, %53 ]
  %62 = load i8*, i8** %26, align 8
  %63 = icmp ult i8* %61, %62
  br i1 %63, label %65, label %64

64:                                               ; preds = %60
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 43) #8
  tail call void @abort() #9
  unreachable

65:                                               ; preds = %60
  %66 = and i32 %31, 255
  store i32 %66, i32* %23, align 4
  %67 = load i32, i32* %16, align 4
  %68 = load i32, i32* %13, align 8
  br label %69

69:                                               ; preds = %65, %34
  %70 = phi i32 [ %29, %34 ], [ %68, %65 ]
  %71 = phi i32 [ %30, %34 ], [ %67, %65 ]
  %72 = shl i32 %71, 8
  %73 = and i32 %72, 2147483392
  store i32 %73, i32* %16, align 4
  %74 = shl i32 %70, 8
  store i32 %74, i32* %13, align 8
  %75 = load i32, i32* %27, align 8
  %76 = add i32 %75, 8
  store i32 %76, i32* %27, align 8
  %77 = icmp ult i32 %74, 8388609
  br i1 %77, label %28, label %203

78:                                               ; preds = %4
  %79 = sub i32 32736, %2
  %80 = sub nsw i32 16384, %3
  %81 = mul i32 %80, %79
  %82 = lshr i32 %81, 15
  %83 = icmp sgt i32 %8, 1
  %84 = icmp ne i32 %82, 0
  %85 = and i1 %84, %83
  br i1 %85, label %86, label %99

86:                                               ; preds = %78, %86
  %87 = phi i32 [ %95, %86 ], [ 1, %78 ]
  %88 = phi i32 [ %92, %86 ], [ %2, %78 ]
  %89 = phi i32 [ %94, %86 ], [ %82, %78 ]
  %90 = shl nuw nsw i32 %89, 1
  %91 = add nuw nsw i32 %90, 2
  %92 = add i32 %91, %88
  %93 = mul i32 %89, %3
  %94 = lshr i32 %93, 14
  %95 = add nuw nsw i32 %87, 1
  %96 = icmp sgt i32 %8, %95
  %97 = icmp ne i32 %94, 0
  %98 = and i1 %97, %96
  br i1 %98, label %86, label %99

99:                                               ; preds = %86, %78
  %100 = phi i32 [ %82, %78 ], [ %94, %86 ]
  %101 = phi i32 [ %2, %78 ], [ %92, %86 ]
  %102 = phi i32 [ 1, %78 ], [ %95, %86 ]
  %103 = phi i1 [ %84, %78 ], [ %97, %86 ]
  br i1 %103, label %104, label %108

104:                                              ; preds = %99
  %105 = add nuw nsw i32 %100, 1
  %106 = select i1 %9, i32 %105, i32 0
  %107 = add i32 %106, %101
  br label %124

108:                                              ; preds = %99
  %109 = sub nsw i32 %8, %102
  %110 = select i1 %9, i32 32768, i32 32767
  %111 = sub i32 %110, %101
  %112 = lshr i32 %111, 1
  %113 = add nsw i32 %112, -1
  %114 = icmp ugt i32 %109, %113
  %115 = select i1 %114, i32 %113, i32 %109
  %116 = shl i32 %115, 1
  %117 = or i32 %116, %10
  %118 = add i32 %117, %101
  %119 = icmp ne i32 %118, 32768
  %120 = zext i1 %119 to i32
  %121 = select i1 %9, i32 1, i32 -1
  %122 = add nsw i32 %115, %102
  %123 = mul nsw i32 %122, %121
  store i32 %123, i32* %1, align 4
  br label %124

124:                                              ; preds = %108, %104
  %125 = phi i32 [ %105, %104 ], [ %120, %108 ]
  %126 = phi i32 [ %107, %104 ], [ %118, %108 ]
  %127 = icmp ne i32 %126, 0
  %128 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %129 = load i32, i32* %128, align 8
  %130 = lshr i32 %129, 15
  %131 = sub i32 32768, %126
  %132 = mul i32 %130, %131
  %133 = sub i32 %129, %132
  %134 = select i1 %127, i32 %133, i32 0
  %135 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %136 = load i32, i32* %135, align 4
  %137 = add i32 %134, %136
  store i32 %137, i32* %135, align 4
  %138 = sub nsw i32 32768, %125
  %139 = sub i32 %138, %126
  %140 = mul i32 %130, %139
  %141 = sub i32 %129, %140
  %142 = select i1 %127, i32 0, i32 %141
  %143 = select i1 %127, i32 %130, i32 0
  %144 = mul i32 %143, %125
  %145 = add i32 %142, %144
  store i32 %145, i32* %128, align 8
  %146 = icmp ult i32 %145, 8388609
  br i1 %146, label %147, label %203

147:                                              ; preds = %124
  %148 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 8
  %149 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 6
  %150 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 7
  %151 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 0
  %152 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  br label %153

153:                                              ; preds = %194, %147
  %154 = phi i32 [ %145, %147 ], [ %199, %194 ]
  %155 = phi i32 [ %137, %147 ], [ %198, %194 ]
  %156 = lshr i32 %155, 23
  %157 = lshr i32 %155, 31
  %158 = icmp eq i32 %156, 255
  br i1 %158, label %159, label %162

159:                                              ; preds = %153
  %160 = load i32, i32* %150, align 8
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %150, align 8
  br label %194

162:                                              ; preds = %153
  %163 = load i32, i32* %148, align 4
  %164 = add nsw i32 %163, %157
  %165 = trunc i32 %164 to i8
  %166 = load i8*, i8** %149, align 8
  store i8 %165, i8* %166, align 1
  %167 = load i32, i32* %148, align 4
  %168 = lshr i32 %167, 31
  %169 = xor i32 %168, 1
  %170 = load i8*, i8** %149, align 8
  %171 = zext i32 %169 to i64
  %172 = getelementptr inbounds i8, i8* %170, i64 %171
  store i8* %172, i8** %149, align 8
  %173 = load i32, i32* %150, align 8
  %174 = icmp sgt i32 %173, 0
  br i1 %174, label %175, label %185

175:                                              ; preds = %162
  %176 = trunc i32 %157 to i8
  %177 = add nsw i8 %176, -1
  br label %178

178:                                              ; preds = %178, %175
  %179 = phi i8* [ %172, %175 ], [ %184, %178 ]
  %180 = getelementptr inbounds i8, i8* %179, i64 1
  store i8* %180, i8** %149, align 8
  store i8 %177, i8* %179, align 1
  %181 = load i32, i32* %150, align 8
  %182 = add nsw i32 %181, -1
  store i32 %182, i32* %150, align 8
  %183 = icmp sgt i32 %182, 0
  %184 = load i8*, i8** %149, align 8
  br i1 %183, label %178, label %185

185:                                              ; preds = %178, %162
  %186 = phi i8* [ %172, %162 ], [ %184, %178 ]
  %187 = load i8*, i8** %151, align 8
  %188 = icmp ult i8* %186, %187
  br i1 %188, label %190, label %189

189:                                              ; preds = %185
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 43) #8
  tail call void @abort() #9
  unreachable

190:                                              ; preds = %185
  %191 = and i32 %156, 255
  store i32 %191, i32* %148, align 4
  %192 = load i32, i32* %135, align 4
  %193 = load i32, i32* %128, align 8
  br label %194

194:                                              ; preds = %190, %159
  %195 = phi i32 [ %154, %159 ], [ %193, %190 ]
  %196 = phi i32 [ %155, %159 ], [ %192, %190 ]
  %197 = shl i32 %196, 8
  %198 = and i32 %197, 2147483392
  store i32 %198, i32* %135, align 4
  %199 = shl i32 %195, 8
  store i32 %199, i32* %128, align 8
  %200 = load i32, i32* %152, align 8
  %201 = add i32 %200, 8
  store i32 %201, i32* %152, align 8
  %202 = icmp ult i32 %199, 8388609
  br i1 %202, label %153, label %203

203:                                              ; preds = %194, %69, %124, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ff_opus_rc_dec_init(%struct.OpusRangeCoder* nocapture, i8*, i32) local_unnamed_addr #0 {
  %4 = icmp ugt i32 %2, 268435455
  %5 = shl i32 %2, 3
  %6 = select i1 %4, i32 -8, i32 %5
  %7 = icmp ult i32 %6, 2147483135
  %8 = icmp ne i8* %1, null
  %9 = and i1 %8, %7
  %10 = select i1 %9, i32 %6, i32 0
  %11 = select i1 %9, i8* %1, i8* null
  %12 = ashr exact i32 %10, 3
  %13 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 0
  store i8* %11, i8** %13, align 8
  %14 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 3
  store i32 %10, i32* %14, align 4
  %15 = add nsw i32 %10, 8
  %16 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 4
  store i32 %15, i32* %16, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds i8, i8* %11, i64 %17
  %19 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 1
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 0, i32 2
  store i32 0, i32* %20, align 8
  br i1 %9, label %21, label %75

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  store i32 128, i32* %22, align 8
  %23 = bitcast i8* %11 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %24) #7, !srcloc !2
  %26 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -7, i32 %25) #7, !srcloc !3
  %27 = icmp eq i32 %15, 0
  %28 = select i1 %27, i32 0, i32 7
  store i32 %28, i32* %20, align 8
  %29 = sub i32 127, %26
  %30 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  store i32 %29, i32* %30, align 4
  %31 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  store i32 9, i32* %31, align 8
  %32 = shl i32 %29, 8
  %33 = load i32, i32* %23, align 1
  %34 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %33) #7, !srcloc !2
  %35 = shl i32 %34, %28
  %36 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -8, i32 %35) #7, !srcloc !3
  %37 = or i32 %28, 8
  %38 = icmp ugt i32 %15, %37
  %39 = select i1 %38, i32 %37, i32 %15
  store i32 %39, i32* %20, align 8
  %40 = or i32 %36, %32
  %41 = and i32 %40, 2147483647
  %42 = xor i32 %41, 255
  store i32 %42, i32* %30, align 4
  store i32 32768, i32* %22, align 8
  store i32 17, i32* %31, align 8
  %43 = shl i32 %42, 8
  %44 = lshr i32 %39, 3
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %11, i64 %45
  %47 = bitcast i8* %46 to i32*
  %48 = load i32, i32* %47, align 1
  %49 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %48) #7, !srcloc !2
  %50 = and i32 %39, 7
  %51 = shl i32 %49, %50
  %52 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -8, i32 %51) #7, !srcloc !3
  %53 = add nuw nsw i32 %39, 8
  %54 = icmp ugt i32 %15, %53
  %55 = select i1 %54, i32 %53, i32 %15
  store i32 %55, i32* %20, align 8
  %56 = or i32 %52, %43
  %57 = and i32 %56, 2147483647
  %58 = xor i32 %57, 255
  store i32 %58, i32* %30, align 4
  store i32 8388608, i32* %22, align 8
  store i32 25, i32* %31, align 8
  %59 = shl i32 %58, 8
  %60 = lshr i32 %55, 3
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %11, i64 %61
  %63 = bitcast i8* %62 to i32*
  %64 = load i32, i32* %63, align 1
  %65 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %64) #7, !srcloc !2
  %66 = and i32 %55, 7
  %67 = shl i32 %65, %66
  %68 = tail call i32 asm "shrl $1, $0\0A\09", "=r,i{cx},0,~{dirflag},~{fpsr},~{flags}"(i8 -8, i32 %67) #7, !srcloc !3
  %69 = add nuw nsw i32 %55, 8
  %70 = icmp ugt i32 %15, %69
  %71 = select i1 %70, i32 %69, i32 %15
  store i32 %71, i32* %20, align 8
  %72 = or i32 %68, %59
  %73 = and i32 %72, 2147483647
  %74 = xor i32 %73, 255
  store i32 %74, i32* %30, align 4
  store i32 -2147483648, i32* %22, align 8
  store i32 33, i32* %31, align 8
  br label %75

75:                                               ; preds = %21, %3
  %76 = phi i32 [ -1094995529, %3 ], [ 0, %21 ]
  ret i32 %76
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @ff_opus_rc_dec_raw_init(%struct.OpusRangeCoder* nocapture, i8*, i32) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %6, align 4
  %7 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @ff_opus_rc_enc_end(%struct.OpusRangeCoder*, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = or i32 %5, 1
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 true), !range !4
  %8 = xor i32 %7, 31
  %9 = icmp ne i32 %5, 0
  %10 = zext i1 %9 to i32
  %11 = add nuw nsw i32 %8, %10
  %12 = sub nsw i32 32, %11
  %13 = lshr i32 2147483647, %12
  %14 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %13, %15
  %17 = ashr i32 -2147483648, %12
  %18 = and i32 %16, %17
  %19 = or i32 %18, %13
  %20 = add i32 %15, %5
  %21 = icmp ult i32 %19, %20
  br i1 %21, label %28, label %22

22:                                               ; preds = %3
  %23 = sub nsw i32 33, %11
  %24 = lshr i32 %13, 1
  %25 = add i32 %24, %15
  %26 = xor i32 %24, -1
  %27 = and i32 %25, %26
  br label %28

28:                                               ; preds = %3, %22
  %29 = phi i32 [ %23, %22 ], [ %12, %3 ]
  %30 = phi i32 [ %27, %22 ], [ %18, %3 ]
  %31 = icmp sgt i32 %29, 0
  br i1 %31, label %32, label %81

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 8
  %34 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 6
  %35 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 7
  %36 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 0
  br label %37

37:                                               ; preds = %32, %76
  %38 = phi i32 [ %30, %32 ], [ %78, %76 ]
  %39 = phi i32 [ %29, %32 ], [ %79, %76 ]
  %40 = lshr i32 %38, 23
  %41 = lshr i32 %38, 31
  %42 = icmp eq i32 %40, 255
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = load i32, i32* %35, align 8
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %35, align 8
  br label %76

46:                                               ; preds = %37
  %47 = load i32, i32* %33, align 4
  %48 = add nsw i32 %47, %41
  %49 = trunc i32 %48 to i8
  %50 = load i8*, i8** %34, align 8
  store i8 %49, i8* %50, align 1
  %51 = load i32, i32* %33, align 4
  %52 = lshr i32 %51, 31
  %53 = xor i32 %52, 1
  %54 = load i8*, i8** %34, align 8
  %55 = zext i32 %53 to i64
  %56 = getelementptr inbounds i8, i8* %54, i64 %55
  store i8* %56, i8** %34, align 8
  %57 = load i32, i32* %35, align 8
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %69

59:                                               ; preds = %46
  %60 = trunc i32 %41 to i8
  %61 = add nsw i8 %60, -1
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i8* [ %56, %59 ], [ %68, %62 ]
  %64 = getelementptr inbounds i8, i8* %63, i64 1
  store i8* %64, i8** %34, align 8
  store i8 %61, i8* %63, align 1
  %65 = load i32, i32* %35, align 8
  %66 = add nsw i32 %65, -1
  store i32 %66, i32* %35, align 8
  %67 = icmp sgt i32 %66, 0
  %68 = load i8*, i8** %34, align 8
  br i1 %67, label %62, label %69

69:                                               ; preds = %62, %46
  %70 = phi i8* [ %56, %46 ], [ %68, %62 ]
  %71 = load i8*, i8** %36, align 8
  %72 = icmp ult i8* %70, %71
  br i1 %72, label %74, label %73

73:                                               ; preds = %69
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 43) #8
  tail call void @abort() #9
  unreachable

74:                                               ; preds = %69
  %75 = and i32 %40, 255
  store i32 %75, i32* %33, align 4
  br label %76

76:                                               ; preds = %43, %74
  %77 = shl i32 %38, 8
  %78 = and i32 %77, 2147483392
  %79 = add nsw i32 %39, -8
  %80 = icmp sgt i32 %79, 0
  br i1 %80, label %37, label %81

81:                                               ; preds = %76, %28
  %82 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 8
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %83, -1
  br i1 %84, label %93, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 7
  %87 = load i32, i32* %86, align 8
  %88 = icmp sgt i32 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 6
  %91 = bitcast i8** %90 to i64*
  %92 = load i64, i64* %91, align 8
  br label %121

93:                                               ; preds = %85, %81
  %94 = trunc i32 %83 to i8
  %95 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 6
  %96 = load i8*, i8** %95, align 8
  store i8 %94, i8* %96, align 1
  %97 = load i32, i32* %82, align 4
  %98 = lshr i32 %97, 31
  %99 = xor i32 %98, 1
  %100 = load i8*, i8** %95, align 8
  %101 = zext i32 %99 to i64
  %102 = getelementptr inbounds i8, i8* %100, i64 %101
  store i8* %102, i8** %95, align 8
  %103 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 7
  %104 = load i32, i32* %103, align 8
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %106, label %113

106:                                              ; preds = %93, %106
  %107 = phi i8* [ %112, %106 ], [ %102, %93 ]
  %108 = getelementptr inbounds i8, i8* %107, i64 1
  store i8* %108, i8** %95, align 8
  store i8 -1, i8* %107, align 1
  %109 = load i32, i32* %103, align 8
  %110 = add nsw i32 %109, -1
  store i32 %110, i32* %103, align 8
  %111 = icmp sgt i32 %110, 0
  %112 = load i8*, i8** %95, align 8
  br i1 %111, label %106, label %113

113:                                              ; preds = %106, %93
  %114 = phi i8* [ %102, %93 ], [ %112, %106 ]
  %115 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = icmp ult i8* %114, %116
  br i1 %117, label %119, label %118

118:                                              ; preds = %113
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 43) #8
  tail call void @abort() #9
  unreachable

119:                                              ; preds = %113
  %120 = ptrtoint i8* %114 to i64
  store i32 0, i32* %82, align 4
  br label %121

121:                                              ; preds = %89, %119
  %122 = phi i64 [ %92, %89 ], [ %120, %119 ]
  %123 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 6
  %124 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 5, i64 0
  %125 = ptrtoint i8* %124 to i64
  %126 = sub i64 %122, %125
  %127 = trunc i64 %126 to i32
  %128 = shl i64 %126, 32
  %129 = ashr exact i64 %128, 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 4 %124, i64 %129, i1 false)
  %130 = shl nsw i32 %2, 3
  %131 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 1
  %132 = load i32, i32* %131, align 8
  %133 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = mul i32 %132, -8
  %136 = shl nsw i32 %127, 3
  %137 = sub i32 %130, %134
  %138 = add i32 %137, %135
  %139 = sub i32 %138, %136
  %140 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 9
  store i32 %139, i32* %140, align 8
  %141 = or i32 %134, %132
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %239, label %143

143:                                              ; preds = %121
  %144 = sub i32 32, %134
  %145 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1
  %146 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  %147 = load i32, i32* %146, align 8
  %148 = add i32 %147, %144
  store i32 %148, i32* %146, align 8
  %149 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 3
  %150 = load i32, i32* %149, align 8
  store i32 0, i32* %133, align 4
  %151 = icmp eq i32 %144, 0
  br i1 %151, label %164, label %152

152:                                              ; preds = %143
  %153 = tail call i32 asm "bswap   $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %150) #7, !srcloc !2
  %154 = getelementptr inbounds %struct.RawBitsContext, %struct.RawBitsContext* %145, i64 0, i32 0
  %155 = bitcast %struct.RawBitsContext* %145 to i32**
  %156 = load i32*, i32** %155, align 8
  store i32 %153, i32* %156, align 1
  %157 = load i32, i32* %131, align 8
  %158 = add i32 %157, 4
  store i32 %158, i32* %131, align 8
  %159 = load i8*, i8** %154, align 8
  %160 = getelementptr inbounds i8, i8* %159, i64 -4
  store i8* %160, i8** %154, align 8
  store i32 0, i32* %133, align 4
  store i32 0, i32* %149, align 8
  %161 = load i8*, i8** %123, align 8
  %162 = icmp ult i8* %161, %160
  br i1 %162, label %164, label %163

163:                                              ; preds = %152
  tail call void (i8*, i32, i8*, ...) @av_log(i8* null, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i32 175) #8
  tail call void @abort() #9
  unreachable

164:                                              ; preds = %143, %152
  %165 = phi i32 [ %132, %143 ], [ %158, %152 ]
  %166 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 5, i64 1287
  %167 = zext i32 %165 to i64
  %168 = sub nsw i64 0, %167
  %169 = getelementptr inbounds i8, i8* %166, i64 %168
  %170 = sub i32 %2, %165
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %1, i64 %171
  %173 = getelementptr inbounds i8, i8* %1, i64 %129
  %174 = ptrtoint i8* %173 to i64
  %175 = ptrtoint i8* %172 to i64
  %176 = sub i64 %174, %175
  %177 = trunc i64 %176 to i32
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %179, label %231

179:                                              ; preds = %164
  %180 = and i64 %176, 4294967295
  %181 = add nsw i64 %180, -1
  %182 = and i64 %176, 3
  %183 = icmp ult i64 %181, 3
  br i1 %183, label %215, label %184

184:                                              ; preds = %179
  %185 = sub nsw i64 %180, %182
  br label %186

186:                                              ; preds = %186, %184
  %187 = phi i64 [ 0, %184 ], [ %212, %186 ]
  %188 = phi i64 [ %185, %184 ], [ %213, %186 ]
  %189 = getelementptr inbounds i8, i8* %169, i64 %187
  %190 = load i8, i8* %189, align 1
  %191 = getelementptr inbounds i8, i8* %172, i64 %187
  %192 = load i8, i8* %191, align 1
  %193 = or i8 %192, %190
  store i8 %193, i8* %191, align 1
  %194 = or i64 %187, 1
  %195 = getelementptr inbounds i8, i8* %169, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = getelementptr inbounds i8, i8* %172, i64 %194
  %198 = load i8, i8* %197, align 1
  %199 = or i8 %198, %196
  store i8 %199, i8* %197, align 1
  %200 = or i64 %187, 2
  %201 = getelementptr inbounds i8, i8* %169, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = getelementptr inbounds i8, i8* %172, i64 %200
  %204 = load i8, i8* %203, align 1
  %205 = or i8 %204, %202
  store i8 %205, i8* %203, align 1
  %206 = or i64 %187, 3
  %207 = getelementptr inbounds i8, i8* %169, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = getelementptr inbounds i8, i8* %172, i64 %206
  %210 = load i8, i8* %209, align 1
  %211 = or i8 %210, %208
  store i8 %211, i8* %209, align 1
  %212 = add nuw nsw i64 %187, 4
  %213 = add i64 %188, -4
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %186

215:                                              ; preds = %186, %179
  %216 = phi i64 [ 0, %179 ], [ %212, %186 ]
  %217 = icmp eq i64 %182, 0
  br i1 %217, label %229, label %218

218:                                              ; preds = %215, %218
  %219 = phi i64 [ %226, %218 ], [ %216, %215 ]
  %220 = phi i64 [ %227, %218 ], [ %182, %215 ]
  %221 = getelementptr inbounds i8, i8* %169, i64 %219
  %222 = load i8, i8* %221, align 1
  %223 = getelementptr inbounds i8, i8* %172, i64 %219
  %224 = load i8, i8* %223, align 1
  %225 = or i8 %224, %222
  store i8 %225, i8* %223, align 1
  %226 = add nuw nsw i64 %219, 1
  %227 = add i64 %220, -1
  %228 = icmp eq i64 %227, 0
  br i1 %228, label %229, label %218, !llvm.loop !6

229:                                              ; preds = %218, %215
  %230 = load i32, i32* %131, align 8
  br label %231

231:                                              ; preds = %229, %164
  %232 = phi i32 [ %230, %229 ], [ %165, %164 ]
  %233 = shl i64 %176, 32
  %234 = ashr exact i64 %233, 32
  %235 = getelementptr inbounds i8, i8* %172, i64 %234
  %236 = getelementptr inbounds i8, i8* %169, i64 %234
  %237 = sub i32 %232, %177
  %238 = zext i32 %237 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %235, i8* align 1 %236, i64 %238, i1 false)
  br label %239

239:                                              ; preds = %121, %231
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @ff_opus_rc_enc_init(%struct.OpusRangeCoder*) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 3
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 2
  store i32 -2147483648, i32* %3, align 8
  %4 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 4
  store i32 33, i32* %4, align 8
  %5 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 8
  store i32 -1, i32* %5, align 4
  %6 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 7
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 5, i64 0
  %8 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 6
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 5, i64 1283
  %10 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 1
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 2
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %struct.OpusRangeCoder, %struct.OpusRangeCoder* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %13, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readnone }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 1453721}
!3 = !{i32 1809360, i32 1809374}
!4 = !{i32 0, i32 32}
!5 = !{i32 16, i32 32}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
