; ModuleID = '../../third_party/pdfium/core/fxge/cfx_fontcache.cpp'
source_filename = "../../third_party/pdfium/core/fxge/cfx_fontcache.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_FontCache = type { %"class.std::__1::map", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %class.CFX_Face*, %"class.fxcrt::ObservedPtr" }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.24", %"class.fxcrt::RetainPtr.28" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.28" = type { %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %class.CFX_GlyphCache* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%class.CFX_GlyphCache = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::RetainPtr.11", %"class.std::__1::map.40", %"class.std::__1::map.51" }
%"class.fxcrt::RetainPtr.11" = type { %"class.std::__1::unique_ptr.12" }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.CFX_Face* }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.51" = type { %"class.std::__1::__tree.52" }
%"class.std::__1::__tree.52" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.36" = type { %"class.std::__1::unique_ptr.37" }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %class.CFX_GlyphCache* }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.7", %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.36", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70", %"class.std::__1::vector", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %struct.FT_StreamRec_* }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }

$_ZNSt3__16__treeINS_12__value_typeIP8CFX_FaceN5fxcrt11ObservedPtrI14CFX_GlyphCacheEEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN5fxcrt11ObservedPtrI14CFX_GlyphCacheED2Ev = comdat any

$_ZN5fxcrt11ObservedPtrI14CFX_GlyphCacheED0Ev = comdat any

$_ZN5fxcrt11ObservedPtrI14CFX_GlyphCacheE21OnObservableDestroyedEv = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZTVN5fxcrt11ObservedPtrI14CFX_GlyphCacheEE = comdat any

@_ZTVN5fxcrt11ObservedPtrI14CFX_GlyphCacheEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::ObservedPtr"*)* @_ZN5fxcrt11ObservedPtrI14CFX_GlyphCacheED2Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr"*)* @_ZN5fxcrt11ObservedPtrI14CFX_GlyphCacheED0Ev to i8*), i8* bitcast (void (%"class.fxcrt::ObservedPtr"*)* @_ZN5fxcrt11ObservedPtrI14CFX_GlyphCacheE21OnObservableDestroyedEv to i8*)] }, comdat, align 8

@_ZN13CFX_FontCacheC1Ev = hidden unnamed_addr alias void (%class.CFX_FontCache*), void (%class.CFX_FontCache*)* @_ZN13CFX_FontCacheC2Ev
@_ZN13CFX_FontCacheD1Ev = hidden unnamed_addr alias void (%class.CFX_FontCache*), void (%class.CFX_FontCache*)* @_ZN13CFX_FontCacheD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFX_FontCacheC2Ev(%class.CFX_FontCache*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_FontCache, %class.CFX_FontCache* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %class.CFX_FontCache, %class.CFX_FontCache* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %class.CFX_FontCache, %class.CFX_FontCache* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_node_base"** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = getelementptr inbounds %class.CFX_FontCache, %class.CFX_FontCache* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.CFX_FontCache, %class.CFX_FontCache* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %class.CFX_FontCache, %class.CFX_FontCache* %0, i64 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFX_FontCacheD2Ev(%class.CFX_FontCache*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_FontCache, %class.CFX_FontCache* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %class.CFX_FontCache, %class.CFX_FontCache* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP8CFX_FaceN5fxcrt11ObservedPtrI14CFX_GlyphCacheEEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node"* %5) #5
  %6 = getelementptr inbounds %class.CFX_FontCache, %class.CFX_FontCache* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.CFX_FontCache, %class.CFX_FontCache* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP8CFX_FaceN5fxcrt11ObservedPtrI14CFX_GlyphCacheEEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %6, %"class.std::__1::__tree_node"* %9) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CFX_FontCache13GetGlyphCacheEPK8CFX_Font(%"class.fxcrt::RetainPtr.36"* noalias nocapture sret, %class.CFX_FontCache*, %class.CFX_Font* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.11", align 8
  %5 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6 = load %class.CFX_Face*, %class.CFX_Face** %5, align 8, !noalias !2
  %7 = ptrtoint %class.CFX_Face* %6 to i64
  %8 = icmp eq %class.CFX_Face* %6, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %6, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8, !noalias !2
  %12 = add nsw i64 %11, 1
  store i64 %12, i64* %10, align 8, !noalias !2
  br label %13

13:                                               ; preds = %3, %9
  %14 = getelementptr inbounds %class.CFX_FontCache, %class.CFX_FontCache* %1, i64 0, i32 1
  %15 = getelementptr inbounds %class.CFX_FontCache, %class.CFX_FontCache* %1, i64 0, i32 0
  %16 = select i1 %8, %"class.std::__1::map"* %14, %"class.std::__1::map"* %15
  %17 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_end_node"* %17 to %"class.std::__1::__tree_node"**
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %53, label %21

21:                                               ; preds = %13, %21
  %22 = phi %"class.std::__1::__tree_end_node"* [ %32, %21 ], [ %17, %13 ]
  %23 = phi %"class.std::__1::__tree_node"* [ %33, %21 ], [ %19, %13 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0
  %25 = load %class.CFX_Face*, %class.CFX_Face** %24, align 8
  %26 = icmp ult %class.CFX_Face* %25, %6
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::__tree_node_base"** %27 to %"class.std::__1::__tree_node"**
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_node"* %23 to %"class.std::__1::__tree_node"**
  %31 = select i1 %26, %"class.std::__1::__tree_node"** %28, %"class.std::__1::__tree_node"** %30
  %32 = select i1 %26, %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"* %29
  %33 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %31, align 8
  %34 = icmp eq %"class.std::__1::__tree_node"* %33, null
  br i1 %34, label %35, label %21

35:                                               ; preds = %21
  %36 = icmp eq %"class.std::__1::__tree_end_node"* %32, %17
  br i1 %36, label %53, label %37

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 4
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %class.CFX_Face**
  %40 = load %class.CFX_Face*, %class.CFX_Face** %39, align 8
  %41 = icmp ult %class.CFX_Face* %6, %40
  br i1 %41, label %53, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 6
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to %class.CFX_GlyphCache**
  %45 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %44, align 8
  %46 = icmp eq %class.CFX_GlyphCache* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %42
  %48 = ptrtoint %class.CFX_GlyphCache* %45 to i64
  %49 = bitcast %"class.fxcrt::RetainPtr.36"* %0 to i64*
  store i64 %48, i64* %49, align 8, !alias.scope !5
  %50 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %45, i64 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8, !noalias !5
  %52 = add nsw i64 %51, 1
  store i64 %52, i64* %50, align 8, !noalias !5
  br label %165

53:                                               ; preds = %42, %37, %35, %13
  %54 = bitcast %"class.fxcrt::RetainPtr.11"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = tail call i8* @_Znwm(i64 96) #6, !noalias !8
  %56 = bitcast i8* %55 to %class.CFX_GlyphCache*
  %57 = bitcast %"class.fxcrt::RetainPtr.11"* %4 to i64*
  store i64 %7, i64* %57, align 8, !noalias !8
  br i1 %8, label %62, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %6, i64 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8, !noalias !8
  %61 = add nsw i64 %60, 1
  store i64 %61, i64* %59, align 8, !noalias !8
  br label %62

62:                                               ; preds = %58, %53
  call void @_ZN14CFX_GlyphCacheC1EN5fxcrt9RetainPtrI8CFX_FaceEE(%class.CFX_GlyphCache* nonnull %56, %"class.fxcrt::RetainPtr.11"* nonnull %4) #5, !noalias !8
  %63 = ptrtoint i8* %55 to i64
  %64 = getelementptr inbounds i8, i8* %55, i64 8
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 8, !noalias !8
  %67 = add nsw i64 %66, 1
  store i64 %67, i64* %65, align 8, !noalias !8
  %68 = getelementptr inbounds %"class.fxcrt::RetainPtr.11", %"class.fxcrt::RetainPtr.11"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %class.CFX_Face*, %class.CFX_Face** %68, align 8, !noalias !8
  store %class.CFX_Face* null, %class.CFX_Face** %68, align 8, !noalias !8
  %70 = icmp eq %class.CFX_Face* %69, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %62
  %72 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %69, i64 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8, !noalias !8
  %74 = add nsw i64 %73, -1
  store i64 %74, i64* %72, align 8, !noalias !8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %82

76:                                               ; preds = %71
  %77 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %69, i64 0, i32 0
  %78 = bitcast %class.CFX_Face* %69 to void (%"class.fxcrt::Retainable"*)***
  %79 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %78, align 8, !noalias !8
  %80 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %79, i64 1
  %81 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %80, align 8, !noalias !8
  call void %81(%"class.fxcrt::Retainable"* nonnull %77) #5, !noalias !8
  br label %82

82:                                               ; preds = %62, %71, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  %83 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  %84 = icmp eq %"class.std::__1::__tree_node"* %83, null
  br i1 %84, label %113, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %16, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %87

87:                                               ; preds = %109, %85
  %88 = phi %"class.std::__1::__tree_node"* [ %112, %109 ], [ %83, %85 ]
  %89 = phi %"class.std::__1::__tree_node_base"** [ %111, %109 ], [ %86, %85 ]
  %90 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 1, i32 0, i32 0
  %91 = load %class.CFX_Face*, %class.CFX_Face** %90, align 8
  %92 = icmp ult %class.CFX_Face* %6, %91
  br i1 %92, label %93, label %99

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_node_base"* %95, null
  br i1 %96, label %97, label %109

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 0, i32 0
  br label %115

99:                                               ; preds = %87
  %100 = icmp ult %class.CFX_Face* %91, %6
  br i1 %100, label %101, label %107

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %105, label %109

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 0, i32 0
  br label %115

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 0, i32 0
  br label %115

109:                                              ; preds = %101, %93
  %110 = phi %"class.std::__1::__tree_node_base"* [ %95, %93 ], [ %103, %101 ]
  %111 = phi %"class.std::__1::__tree_node_base"** [ %94, %93 ], [ %102, %101 ]
  %112 = bitcast %"class.std::__1::__tree_node_base"* %110 to %"class.std::__1::__tree_node"*
  br label %87

113:                                              ; preds = %82
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 0, i32 0
  br label %115

115:                                              ; preds = %113, %107, %105, %97
  %116 = phi %"class.std::__1::__tree_end_node"* [ %17, %113 ], [ %98, %97 ], [ %106, %105 ], [ %108, %107 ]
  %117 = phi %"class.std::__1::__tree_node_base"** [ %114, %113 ], [ %94, %97 ], [ %102, %105 ], [ %89, %107 ]
  %118 = bitcast %"class.std::__1::__tree_node_base"** %117 to %"class.std::__1::__tree_node"**
  %119 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node"* %119, null
  br i1 %120, label %121, label %150

121:                                              ; preds = %115
  %122 = call i8* @_Znwm(i64 56) #6, !noalias !11
  %123 = getelementptr inbounds i8, i8* %122, i64 32
  %124 = bitcast i8* %123 to i64*
  store i64 %7, i64* %124, align 8, !noalias !11
  %125 = getelementptr inbounds i8, i8* %122, i64 40
  %126 = bitcast i8* %125 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CFX_GlyphCacheEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8, !noalias !11
  %127 = getelementptr inbounds i8, i8* %122, i64 48
  %128 = bitcast i8* %127 to %class.CFX_GlyphCache**
  store %class.CFX_GlyphCache* null, %class.CFX_GlyphCache** %128, align 8, !noalias !11
  %129 = bitcast i8* %122 to %"class.std::__1::__tree_node"*
  %130 = bitcast i8* %122 to %"class.std::__1::__tree_node_base"*
  %131 = getelementptr inbounds i8, i8* %122, i64 16
  %132 = bitcast i8* %131 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 0, i64 16, i1 false) #5
  store %"class.std::__1::__tree_end_node"* %116, %"class.std::__1::__tree_end_node"** %132, align 8
  %133 = bitcast %"class.std::__1::__tree_node_base"** %117 to i8**
  store i8* %122, i8** %133, align 8
  %134 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %16, i64 0, i32 0, i32 0
  %135 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 0, i32 0
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %136, align 8
  %138 = icmp eq %"class.std::__1::__tree_node_base"* %137, null
  br i1 %138, label %143, label %139

139:                                              ; preds = %121
  %140 = ptrtoint %"class.std::__1::__tree_node_base"* %137 to i64
  %141 = bitcast %"class.std::__1::map"* %16 to i64*
  store i64 %140, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  br label %143

143:                                              ; preds = %139, %121
  %144 = phi %"class.std::__1::__tree_node_base"* [ %130, %121 ], [ %142, %139 ]
  %145 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %16, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %146, %"class.std::__1::__tree_node_base"* %144) #5
  %147 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = add i64 %148, 1
  store i64 %149, i64* %147, align 8
  br label %150

150:                                              ; preds = %115, %143
  %151 = phi %"class.std::__1::__tree_node"* [ %129, %143 ], [ %119, %115 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 1, i32 0, i32 1
  %153 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 1, i32 0, i32 1, i32 1
  %154 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %153, align 8
  %155 = icmp eq %class.CFX_GlyphCache* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %154, i64 0, i32 1
  %158 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %152, i64 0, i32 0
  call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %157, %"class.fxcrt::Observable::ObserverIface"* %158) #5
  br label %159

159:                                              ; preds = %150, %156
  %160 = bitcast %class.CFX_GlyphCache** %153 to i8**
  store i8* %55, i8** %160, align 8
  %161 = getelementptr inbounds i8, i8* %55, i64 16
  %162 = bitcast i8* %161 to %"class.fxcrt::Observable"*
  %163 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %152, i64 0, i32 0
  call void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %162, %"class.fxcrt::Observable::ObserverIface"* %163) #5
  %164 = bitcast %"class.fxcrt::RetainPtr.36"* %0 to i64*
  store i64 %63, i64* %164, align 8
  br label %165

165:                                              ; preds = %159, %47
  br i1 %8, label %177, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %6, i64 0, i32 0, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = add nsw i64 %168, -1
  store i64 %169, i64* %167, align 8
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %177

171:                                              ; preds = %166
  %172 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %6, i64 0, i32 0
  %173 = bitcast %class.CFX_Face* %6 to void (%"class.fxcrt::Retainable"*)***
  %174 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %174, i64 1
  %176 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %175, align 8
  call void %176(%"class.fxcrt::Retainable"* nonnull %172) #5
  br label %177

177:                                              ; preds = %165, %166, %171
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIP8CFX_FaceN5fxcrt11ObservedPtrI14CFX_GlyphCacheEEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP8CFX_FaceN5fxcrt11ObservedPtrI14CFX_GlyphCacheEEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #5
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIP8CFX_FaceN5fxcrt11ObservedPtrI14CFX_GlyphCacheEEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #5
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %10, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CFX_GlyphCacheEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 1
  %13 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %12, align 8
  %14 = icmp eq %class.CFX_GlyphCache* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %13, i64 0, i32 1
  %17 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %10, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %16, %"class.fxcrt::Observable::ObserverIface"* %17) #5
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #6
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI14CFX_GlyphCacheED2Ev(%"class.fxcrt::ObservedPtr"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CFX_GlyphCacheEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 1
  %4 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %3, align 8
  %5 = icmp eq %class.CFX_GlyphCache* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #5
  br label %9

9:                                                ; preds = %1, %6
  ret void
}

declare void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"*, %"class.fxcrt::Observable::ObserverIface"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI14CFX_GlyphCacheED0Ev(%"class.fxcrt::ObservedPtr"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5fxcrt11ObservedPtrI14CFX_GlyphCacheEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 1
  %4 = load %class.CFX_GlyphCache*, %class.CFX_GlyphCache** %3, align 8
  %5 = icmp eq %class.CFX_GlyphCache* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CFX_GlyphCache, %class.CFX_GlyphCache* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 0
  tail call void @_ZN5fxcrt10Observable14RemoveObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"* %7, %"class.fxcrt::Observable::ObserverIface"* %8) #5
  br label %9

9:                                                ; preds = %1, %6
  %10 = bitcast %"class.fxcrt::ObservedPtr"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt11ObservedPtrI14CFX_GlyphCacheE21OnObservableDestroyedEv(%"class.fxcrt::ObservedPtr"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::ObservedPtr", %"class.fxcrt::ObservedPtr"* %0, i64 0, i32 1
  store %class.CFX_GlyphCache* null, %class.CFX_GlyphCache** %2, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN14CFX_GlyphCacheC1EN5fxcrt9RetainPtrI8CFX_FaceEE(%class.CFX_GlyphCache*, %"class.fxcrt::RetainPtr.11"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !14
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !14
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !14
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN5fxcrt10Observable11AddObserverEPNS0_13ObserverIfaceE(%"class.fxcrt::Observable"*, %"class.fxcrt::Observable::ObserverIface"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK8CFX_Font7GetFaceEv: argument 0"}
!4 = distinct !{!4, !"_ZNK8CFX_Font7GetFaceEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6pdfium10WrapRetainI14CFX_GlyphCacheEEN5fxcrt9RetainPtrIT_EEPS4_: argument 0"}
!7 = distinct !{!7, !"_ZN6pdfium10WrapRetainI14CFX_GlyphCacheEEN5fxcrt9RetainPtrIT_EEPS4_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6pdfium10MakeRetainI14CFX_GlyphCacheJRN5fxcrt9RetainPtrI8CFX_FaceEEEEENS3_IT_EEDpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN6pdfium10MakeRetainI14CFX_GlyphCacheJRN5fxcrt9RetainPtrI8CFX_FaceEEEEENS3_IT_EEDpOT0_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeINS_12__value_typeIP8CFX_FaceN5fxcrt11ObservedPtrI14CFX_GlyphCacheEEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeINS_12__value_typeIP8CFX_FaceN5fxcrt11ObservedPtrI14CFX_GlyphCacheEEEENS_19__map_value_compareIS3_S8_NS_4lessIS3_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS3_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISR_EEEEEEDpOT_"}
!14 = !{i8 0, i8 2}
