; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/propagator.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/propagator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.spvtools::opt::SSAPropagator" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::function.910", %"class.std::__1::queue", %"class.std::__1::queue.925", %"class.std::__1::unordered_set.938", %"class.std::__1::unordered_set.964", %"class.std::__1::unordered_map.986", %"class.std::__1::unordered_map.986", %"class.std::__1::set.1010", %"class.std::__1::unordered_map.1020" }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::function.910" = type { %"class.std::__1::__function::__policy_func.914" }
%"class.std::__1::__function::__policy_func.914" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.915", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.915" = type { i32 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"**)* }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.921" }
%"struct.std::__1::__split_buffer" = type { %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"class.spvtools::opt::Instruction"*** }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::queue.925" = type { %"class.std::__1::deque.926" }
%"class.std::__1::deque.926" = type { %"class.std::__1::__deque_base.927" }
%"class.std::__1::__deque_base.927" = type { %"struct.std::__1::__split_buffer.928", i64, %"class.std::__1::__compressed_pair.934" }
%"struct.std::__1::__split_buffer.928" = type { %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.std::__1::__compressed_pair.929" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"class.spvtools::opt::BasicBlock"*** }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set.938" = type { %"class.std::__1::__hash_table.939" }
%"class.std::__1::__hash_table.939" = type <{ %"class.std::__1::unique_ptr.940", %"class.std::__1::__compressed_pair.950", %"class.std::__1::__compressed_pair.955", %"class.std::__1::__compressed_pair.959", [4 x i8] }>
%"class.std::__1::unique_ptr.940" = type { %"class.std::__1::__compressed_pair.941" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942", %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"struct.std::__1::__hash_node_base.943"** }
%"struct.std::__1::__hash_node_base.943" = type { %"struct.std::__1::__hash_node_base.943"* }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.std::__1::__bucket_list_deallocator.945" }
%"class.std::__1::__bucket_list_deallocator.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"struct.std::__1::__hash_node_base.943" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.964" = type { %"class.std::__1::__hash_table.965" }
%"class.std::__1::__hash_table.965" = type <{ %"class.std::__1::unique_ptr.966", %"class.std::__1::__compressed_pair.976", %"class.std::__1::__compressed_pair.981", %"class.std::__1::__compressed_pair.983", [4 x i8] }>
%"class.std::__1::unique_ptr.966" = type { %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.968", %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.968" = type { %"struct.std::__1::__hash_node_base.969"** }
%"struct.std::__1::__hash_node_base.969" = type { %"struct.std::__1::__hash_node_base.969"* }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"class.std::__1::__bucket_list_deallocator.971" }
%"class.std::__1::__bucket_list_deallocator.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"struct.std::__1::__hash_node_base.969" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.986" = type { %"class.std::__1::__hash_table.987" }
%"class.std::__1::__hash_table.987" = type <{ %"class.std::__1::unique_ptr.988", %"class.std::__1::__compressed_pair.998", %"class.std::__1::__compressed_pair.1003", %"class.std::__1::__compressed_pair.1006", [4 x i8] }>
%"class.std::__1::unique_ptr.988" = type { %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990", %"struct.std::__1::__compressed_pair_elem.992" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"struct.std::__1::__hash_node_base.991"** }
%"struct.std::__1::__hash_node_base.991" = type { %"struct.std::__1::__hash_node_base.991"* }
%"struct.std::__1::__compressed_pair_elem.992" = type { %"class.std::__1::__bucket_list_deallocator.993" }
%"class.std::__1::__bucket_list_deallocator.993" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"struct.std::__1::__hash_node_base.991" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::set.1010" = type { %"class.std::__1::__tree.1011" }
%"class.std::__1::__tree.1011" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1012", %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.1020" = type { %"class.std::__1::__hash_table.1021" }
%"class.std::__1::__hash_table.1021" = type <{ %"class.std::__1::unique_ptr.1022", %"class.std::__1::__compressed_pair.1032", %"class.std::__1::__compressed_pair.1037", %"class.std::__1::__compressed_pair.1040", [4 x i8] }>
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024", %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"struct.std::__1::__hash_node_base.1025"** }
%"struct.std::__1::__hash_node_base.1025" = type { %"struct.std::__1::__hash_node_base.1025"* }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"class.std::__1::__bucket_list_deallocator.1027" }
%"class.std::__1::__bucket_list_deallocator.1027" = type { %"class.std::__1::__compressed_pair.1028" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"struct.std::__1::__hash_node_base.1025" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.spvtools::opt::Edge" = type { %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"* }
%"class.std::__1::function.1044" = type { %"class.std::__1::__function::__policy_func.1048" }
%"class.std::__1::__function::__policy_func.1048" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1049", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1049" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.spvtools::opt::Edge" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::tuple.1109" = type { i8 }
%"class.std::__1::function.1057" = type { %"class.std::__1::__function::__policy_func.1061" }
%"class.std::__1::__function::__policy_func.1061" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1062", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1062" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::vector.1050" = type { %"class.std::__1::__vector_base.1051" }
%"class.std::__1::__vector_base.1051" = type { %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"*, %"class.std::__1::__compressed_pair.1052" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.1053" }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"struct.spvtools::opt::Edge"* }
%"class.std::__1::function.1135" = type { %"class.std::__1::__function::__policy_func.1139" }
%"class.std::__1::__function::__policy_func.1139" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1140", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1140" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::tuple.1204" = type { %"struct.std::__1::__tuple_impl.1205" }
%"struct.std::__1::__tuple_impl.1205" = type { %"class.std::__1::__tuple_leaf.1206" }
%"class.std::__1::__tuple_leaf.1206" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::function.1067" = type { %"class.std::__1::__function::__policy_func.1071" }
%"class.std::__1::__function::__policy_func.1071" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1072", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1072" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::__tree_node.1096" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1097" }
%"struct.std::__1::pair.1097" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"struct.std::__1::__split_buffer.1162" = type { %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.std::__1::__compressed_pair.1163" }
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.930", %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"class.std::__1::allocator.932"* }
%"class.std::__1::allocator.932" = type { i8 }
%"struct.std::__1::__split_buffer.1171" = type { %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"***, %"class.std::__1::__compressed_pair.1172" }
%"class.std::__1::__compressed_pair.1172" = type { %"struct.std::__1::__compressed_pair_elem.917", %"struct.std::__1::__compressed_pair_elem.1173" }
%"struct.std::__1::__compressed_pair_elem.1173" = type { %"class.std::__1::allocator.919"* }
%"class.std::__1::allocator.919" = type { i8 }
%"class.std::__1::tuple.1218" = type { %"struct.std::__1::__tuple_impl.1219" }
%"struct.std::__1::__tuple_impl.1219" = type { %"class.std::__1::__tuple_leaf.1220" }
%"class.std::__1::__tuple_leaf.1220" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.1225 }
%union.anon.1225 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZNSt3__113unordered_mapIPN8spvtools3opt10BasicBlockENS_6vectorINS2_4EdgeENS_9allocatorIS6_EEEENS_4hashIS4_EENS_8equal_toIS4_EENS7_INS_4pairIKS4_S9_EEEEE2atERSF_ = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNSt3__16__treeIN8spvtools3opt4EdgeENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNK8spvtools3opt4EdgeltERKS1_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__15dequeIPN8spvtools3opt10BasicBlockENS_9allocatorIS4_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE10push_frontEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockERNS_9allocatorIS5_EEE10push_frontERKS5_ = comdat any

$_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE10push_frontEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionERNS_9allocatorIS5_EEE10push_frontERKS5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionENS3_13SSAPropagator10PropStatusEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionENS3_13SSAPropagator10PropStatusEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionENS3_13SSAPropagator10PropStatusEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@.str = private unnamed_addr constant [8 x i8] c"Varying\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"Interesting\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"Not interesting\00", align 1
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator11AddSSAEdgesEPNS5_11InstructionEE3$_0FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator8SimulateEPNS5_11InstructionEE3$_1FbPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator8SimulateEPNS5_10BasicBlockEE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator8SimulateEPNS5_10BasicBlockEE3$_3FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator10InitializeEPNS5_8FunctionEE3$_4FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt13SSAPropagator14AddControlEdgeERKNS0_4EdgeE(%"class.spvtools::opt::SSAPropagator"*, %"struct.spvtools::opt::Edge"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %1, i64 0, i32 1
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %3, align 8
  %5 = ptrtoint %"class.spvtools::opt::BasicBlock"* %4 to i64
  %6 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 0
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i8* @_Znwm(i64 400) #10
  %16 = bitcast i8* %15 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %16, %"class.spvtools::opt::Module"* %14) #11
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 15
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.273"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::CFG"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %12
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %20) #11
  %24 = bitcast %"class.spvtools::opt::CFG"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %23, %12
  %26 = load i32, i32* %8, align 8
  %27 = or i32 %26, 16
  store i32 %27, i32* %8, align 8
  br label %28

28:                                               ; preds = %2, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 15, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %30, i64 0, i32 3
  %32 = icmp eq %"class.spvtools::opt::BasicBlock"* %4, %31
  br i1 %32, label %82, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 8, i32 0
  %35 = tail call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN8spvtools3opt4EdgeENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1011"* %34, %"struct.spvtools::opt::Edge"* dereferenceable(16) %1, %"struct.spvtools::opt::Edge"* dereferenceable(16) %1) #11
  %36 = extractvalue { %"class.std::__1::__tree_end_node"*, i8 } %35, 1
  %37 = and i8 %36, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %82, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %41 = bitcast %"class.spvtools::opt::BasicBlock"**** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %"class.spvtools::opt::BasicBlock"**** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %42, %45
  %47 = icmp eq i64 %46, 0
  %48 = shl i64 %46, 6
  %49 = add i64 %48, -1
  %50 = select i1 %47, i64 0, i64 %49
  %51 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, %52
  %56 = icmp eq i64 %50, %55
  %57 = inttoptr i64 %45 to %"class.spvtools::opt::BasicBlock"***
  %58 = inttoptr i64 %42 to %"class.spvtools::opt::BasicBlock"***
  br i1 %56, label %59, label %66

59:                                               ; preds = %39
  %60 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNSt3__15dequeIPN8spvtools3opt10BasicBlockENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.926"* %60) #11
  %61 = load i64, i64* %53, align 8
  %62 = load i64, i64* %51, align 8
  %63 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %43, align 8
  %64 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %40, align 8
  %65 = add i64 %62, %61
  br label %66

66:                                               ; preds = %59, %39
  %67 = phi i64 [ %65, %59 ], [ %55, %39 ]
  %68 = phi %"class.spvtools::opt::BasicBlock"*** [ %64, %59 ], [ %58, %39 ]
  %69 = phi %"class.spvtools::opt::BasicBlock"*** [ %63, %59 ], [ %57, %39 ]
  %70 = icmp eq %"class.spvtools::opt::BasicBlock"*** %68, %69
  br i1 %70, label %78, label %71

71:                                               ; preds = %66
  %72 = lshr i64 %67, 9
  %73 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %69, i64 %72
  %74 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %73, align 8
  %75 = and i64 %67, 511
  %76 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %74, i64 %75
  %77 = bitcast %"class.spvtools::opt::BasicBlock"** %76 to i64*
  br label %78

78:                                               ; preds = %66, %71
  %79 = phi i64* [ %77, %71 ], [ null, %66 ]
  store i64 %5, i64* %79, align 8
  %80 = load i64, i64* %53, align 8
  %81 = add i64 %80, 1
  store i64 %81, i64* %53, align 8
  br label %82

82:                                               ; preds = %33, %28, %78
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt13SSAPropagator11AddSSAEdgesEPNS0_11InstructionE(%"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.1044", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %68, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = zext i8 %9 to i32
  %11 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %10) #11
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %68, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 0
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 11
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %44

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %21, align 8
  %23 = tail call i8* @_Znwm(i64 104) #10
  %24 = bitcast i8* %23 to %"class.spvtools::opt::analysis::DefUseManager"*
  %25 = getelementptr inbounds i8, i8* %23, i64 32
  %26 = bitcast i8* %25 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %23, i64 48
  %28 = getelementptr inbounds i8, i8* %23, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #11
  %29 = bitcast i8* %28 to i8**
  store i8* %27, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 64
  %31 = getelementptr inbounds i8, i8* %23, i64 96
  %32 = bitcast i8* %31 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %32, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %24, %"class.spvtools::opt::Module"* %22) #11
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 6
  %34 = ptrtoint i8* %23 to i64
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %35, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.62"* %33 to i64*
  store i64 %34, i64* %37, align 8
  %38 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %20
  %40 = bitcast %"class.std::__1::unique_ptr.62"* %33 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %40, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %36) #11
  br label %41

41:                                               ; preds = %39, %20
  %42 = load i32, i32* %16, align 8
  %43 = or i32 %42, 1
  store i32 %43, i32* %16, align 8
  br label %44

44:                                               ; preds = %13, %41
  %45 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 6, i32 0, i32 0, i32 0
  %46 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %45, align 8
  %47 = load i8, i8* %4, align 1, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %44
  %50 = load i8, i8* %8, align 4, !range !2
  %51 = zext i8 %50 to i32
  %52 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %51) #11
  br label %53

53:                                               ; preds = %44, %49
  %54 = phi i32 [ %52, %49 ], [ 0, %44 ]
  %55 = bitcast %"class.std::__1::function.1044"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #11
  %56 = ptrtoint %"class.spvtools::opt::SSAPropagator"* %0 to i64
  %57 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %3, i64 0, i32 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_13SSAPropagator11AddSSAEdgesES5_E3$_0S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %57, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator11AddSSAEdgesEPNS5_11InstructionEE3$_0FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %58, align 8
  %59 = bitcast %"class.std::__1::function.1044"* %3 to i64*
  store i64 %56, i64* %59, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEjRKNSt3__18functionIFvPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"* %46, i32 %54, %"class.std::__1::function.1044"* nonnull dereferenceable(32) %3) #11
  %60 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %58, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %60, i64 0, i32 1
  %62 = load void (i8*)*, void (i8*)** %61, align 8
  %63 = icmp eq void (i8*)* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %3, i64 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void %62(i8* %66) #11
  br label %67

67:                                               ; preds = %53, %64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #11
  br label %68

68:                                               ; preds = %2, %7, %67
  ret void
}

declare void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEjRKNSt3__18functionIFvPNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DefUseManager"*, i32, %"class.std::__1::function.1044"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt13SSAPropagator18IsPhiArgExecutableEPNS0_11InstructionEj(%"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.spvtools::opt::Edge", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %6, %"class.spvtools::opt::Instruction"* %1)
  %8 = add i32 %2, 1
  %9 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %8) #11
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %39

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 104) #10
  %19 = bitcast i8* %18 to %"class.spvtools::opt::analysis::DefUseManager"*
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = getelementptr inbounds i8, i8* %18, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #11
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 64
  %26 = getelementptr inbounds i8, i8* %18, i64 96
  %27 = bitcast i8* %26 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %27, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %19, %"class.spvtools::opt::Module"* %17) #11
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6
  %29 = ptrtoint i8* %18 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %28 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %15
  %35 = bitcast %"class.std::__1::unique_ptr.62"* %28 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %35, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %31) #11
  br label %36

36:                                               ; preds = %34, %15
  %37 = load i32, i32* %11, align 8
  %38 = or i32 %37, 1
  store i32 %38, i32* %11, align 8
  br label %39

39:                                               ; preds = %3, %36
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %40, align 8
  %42 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %41, i32 %9) #11
  %43 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %44 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %43, %"class.spvtools::opt::Instruction"* %42)
  %45 = bitcast %"struct.spvtools::opt::Edge"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %4, i64 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* %44, %"class.spvtools::opt::BasicBlock"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %4, i64 0, i32 1
  store %"class.spvtools::opt::BasicBlock"* %7, %"class.spvtools::opt::BasicBlock"** %47, align 8
  %48 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %49 = bitcast %"class.std::__1::__tree_end_node"* %48 to %"class.std::__1::__tree_node"**
  %50 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node"* %50, null
  br i1 %51, label %71, label %52

52:                                               ; preds = %39, %52
  %53 = phi %"class.std::__1::__tree_end_node"* [ %62, %52 ], [ %48, %39 ]
  %54 = phi %"class.std::__1::__tree_node"* [ %63, %52 ], [ %50, %39 ]
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %54, i64 0, i32 1
  %56 = call zeroext i1 @_ZNK8spvtools3opt4EdgeltERKS1_(%"struct.spvtools::opt::Edge"* %55, %"struct.spvtools::opt::Edge"* nonnull dereferenceable(16) %4) #11
  %57 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %54, i64 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::__tree_node_base"** %57 to %"class.std::__1::__tree_node"**
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %54, i64 0, i32 0, i32 0
  %60 = bitcast %"class.std::__1::__tree_node"* %54 to %"class.std::__1::__tree_node"**
  %61 = select i1 %56, %"class.std::__1::__tree_node"** %58, %"class.std::__1::__tree_node"** %60
  %62 = select i1 %56, %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"* %59
  %63 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %64 = icmp eq %"class.std::__1::__tree_node"* %63, null
  br i1 %64, label %65, label %52

65:                                               ; preds = %52
  %66 = icmp eq %"class.std::__1::__tree_end_node"* %62, %48
  br i1 %66, label %71, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 4
  %69 = bitcast %"class.std::__1::__tree_end_node"* %68 to %"struct.spvtools::opt::Edge"*
  %70 = call zeroext i1 @_ZNK8spvtools3opt4EdgeltERKS1_(%"struct.spvtools::opt::Edge"* nonnull %4, %"struct.spvtools::opt::Edge"* dereferenceable(16) %69) #11
  br i1 %70, label %71, label %72

71:                                               ; preds = %67, %65, %39
  br label %72

72:                                               ; preds = %67, %71
  %73 = phi %"class.std::__1::__tree_end_node"* [ %48, %71 ], [ %62, %67 ]
  %74 = icmp ne %"class.std::__1::__tree_end_node"* %73, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #11
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #11, !range !3
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.178"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.178"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.178"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.178"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.178"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.178"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.178"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt13SSAPropagator9SetStatusEPNS0_11InstructionENS1_10PropStatusE(%"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.1109", align 1
  %6 = alloca %"class.spvtools::opt::Instruction"*, align 8
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %6, align 8
  %7 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %119, label %24

24:                                               ; preds = %3
  %25 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %39, null
  br i1 %40, label %119, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %43, null
  br i1 %44, label %119, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi %"struct.std::__1::__hash_node_base.1025"* [ %43, %45 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.1025"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %20, %51
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %46
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %58, %56, %54
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %68, label %119

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.1025"* %64 to %"class.spvtools::opt::Instruction"**
  %66 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %65, align 8
  %67 = icmp eq %"class.spvtools::opt::Instruction"* %66, %1
  br i1 %67, label %72, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %70, null
  br i1 %71, label %119, label %47

72:                                               ; preds = %63
  br i1 %26, label %75, label %73

73:                                               ; preds = %72
  %74 = and i64 %46, %20
  br label %79

75:                                               ; preds = %72
  %76 = icmp ult i64 %20, %22
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = urem i64 %20, %22
  br label %79

79:                                               ; preds = %77, %75, %73
  %80 = phi i64 [ %74, %73 ], [ %78, %77 ], [ %20, %75 ]
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %37, i64 %80
  %82 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %82, null
  br i1 %83, label %113, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %82, i64 0, i32 0
  %86 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %85, align 8
  %87 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %86, null
  br i1 %87, label %113, label %88

88:                                               ; preds = %84, %109
  %89 = phi %"struct.std::__1::__hash_node_base.1025"* [ %111, %109 ], [ %86, %84 ]
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %89, i64 1
  %91 = bitcast %"struct.std::__1::__hash_node_base.1025"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %20, %92
  br i1 %93, label %104, label %94

94:                                               ; preds = %88
  br i1 %26, label %97, label %95

95:                                               ; preds = %94
  %96 = and i64 %92, %46
  br label %101

97:                                               ; preds = %94
  %98 = icmp ult i64 %92, %22
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %92, %22
  br label %101

101:                                              ; preds = %99, %97, %95
  %102 = phi i64 [ %96, %95 ], [ %100, %99 ], [ %92, %97 ]
  %103 = icmp eq i64 %102, %80
  br i1 %103, label %109, label %113

104:                                              ; preds = %88
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %89, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.1025"* %105 to %"class.spvtools::opt::Instruction"**
  %107 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %106, align 8
  %108 = icmp eq %"class.spvtools::opt::Instruction"* %107, %1
  br i1 %108, label %113, label %109

109:                                              ; preds = %104, %101
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %89, i64 0, i32 0
  %111 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %110, align 8
  %112 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %111, null
  br i1 %112, label %113, label %88

113:                                              ; preds = %101, %104, %109, %79, %84
  %114 = phi %"struct.std::__1::__hash_node_base.1025"* [ null, %79 ], [ null, %84 ], [ null, %101 ], [ null, %109 ], [ %89, %104 ]
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %114, i64 3
  %116 = bitcast %"struct.std::__1::__hash_node_base.1025"* %115 to i32*
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, %2
  br i1 %118, label %128, label %119

119:                                              ; preds = %60, %68, %34, %3, %41, %113
  %120 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 9, i32 0
  %121 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #11
  %122 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %6, %"class.spvtools::opt::Instruction"*** %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::tuple.1109", %"class.std::__1::tuple.1109"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %123) #11
  %124 = call { %"struct.std::__1::__hash_node_base.1025"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionENS3_13SSAPropagator10PropStatusEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1021"* %120, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1109"* nonnull dereferenceable(1) %5) #11
  %125 = extractvalue { %"struct.std::__1::__hash_node_base.1025"*, i8 } %124, 0
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %125, i64 3
  %127 = bitcast %"struct.std::__1::__hash_node_base.1025"* %126 to i32*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %123) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #11
  store i32 %2, i32* %127, align 4
  br label %128

128:                                              ; preds = %113, %119
  %129 = phi i1 [ true, %119 ], [ false, %113 ]
  ret i1 %129
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt13SSAPropagator8SimulateEPNS0_11InstructionE(%"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %6 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %7 = alloca %"struct.spvtools::opt::Edge", align 8
  %8 = alloca %"class.std::__1::function.1057", align 8
  %9 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %10 = lshr i64 %9, 32
  %11 = shl i64 %9, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %74, label %26

26:                                               ; preds = %2
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #11, !range !3
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.969"* %41, null
  br i1 %42, label %74, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.969"* %45, null
  br i1 %46, label %74, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.969"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.969"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %22, %53
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %74

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.969"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %302, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.969"* %72, null
  br i1 %73, label %74, label %49

74:                                               ; preds = %70, %62, %36, %2, %43
  %75 = bitcast %"class.spvtools::opt::BasicBlock"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #11
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %77 = load i32 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"**)*, i32 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"**)** %76, align 8
  %78 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 1, i32 0, i32 0
  %79 = call i32 %77(%"union.std::__1::__function::__policy_storage"* %78, %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::BasicBlock"** nonnull %5) #11
  %80 = call zeroext i1 @_ZN8spvtools3opt13SSAPropagator9SetStatusEPNS0_11InstructionENS1_10PropStatusE(%"class.spvtools::opt::SSAPropagator"* %0, %"class.spvtools::opt::Instruction"* %1, i32 %79)
  switch i32 %79, label %122 [
    i32 2, label %81
    i32 1, label %107
  ]

81:                                               ; preds = %74
  %82 = bitcast %"class.spvtools::opt::Instruction"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82)
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %3, align 8
  %83 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 5, i32 0
  %84 = call { %"struct.std::__1::__hash_node_base.969"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.965"* %83, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %3, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  br i1 %80, label %85, label %86

85:                                               ; preds = %81
  call void @_ZN8spvtools3opt13SSAPropagator11AddSSAEdgesEPNS0_11InstructionE(%"class.spvtools::opt::SSAPropagator"* %0, %"class.spvtools::opt::Instruction"* %1)
  br label %86

86:                                               ; preds = %85, %81
  %87 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %88 = load i32, i32* %87, align 8
  %89 = call zeroext i1 @_Z26spvOpcodeIsBlockTerminator6SpvOp_(i32 %88) #11
  br i1 %89, label %90, label %300

90:                                               ; preds = %86
  %91 = bitcast %"class.spvtools::opt::BasicBlock"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #11
  %92 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 0
  %93 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %92, align 8
  %94 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %93, %"class.spvtools::opt::Instruction"* %1)
  store %"class.spvtools::opt::BasicBlock"* %94, %"class.spvtools::opt::BasicBlock"** %6, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 7
  %96 = call dereferenceable(24) %"class.std::__1::vector.1050"* @_ZNSt3__113unordered_mapIPN8spvtools3opt10BasicBlockENS_6vectorINS2_4EdgeENS_9allocatorIS6_EEEENS_4hashIS4_EENS_8equal_toIS4_EENS7_INS_4pairIKS4_S9_EEEEE2atERSF_(%"class.std::__1::unordered_map.986"* %95, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %6)
  %97 = getelementptr inbounds %"class.std::__1::vector.1050", %"class.std::__1::vector.1050"* %96, i64 0, i32 0, i32 0
  %98 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::vector.1050", %"class.std::__1::vector.1050"* %96, i64 0, i32 0, i32 1
  %100 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %99, align 8
  %101 = icmp eq %"struct.spvtools::opt::Edge"* %98, %100
  br i1 %101, label %102, label %103

102:                                              ; preds = %103, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #11
  br label %300

103:                                              ; preds = %90, %103
  %104 = phi %"struct.spvtools::opt::Edge"* [ %105, %103 ], [ %98, %90 ]
  call void @_ZN8spvtools3opt13SSAPropagator14AddControlEdgeERKNS0_4EdgeE(%"class.spvtools::opt::SSAPropagator"* %0, %"struct.spvtools::opt::Edge"* dereferenceable(16) %104)
  %105 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %104, i64 1
  %106 = icmp eq %"struct.spvtools::opt::Edge"* %105, %100
  br i1 %106, label %102, label %103

107:                                              ; preds = %74
  br i1 %80, label %108, label %109

108:                                              ; preds = %107
  call void @_ZN8spvtools3opt13SSAPropagator11AddSSAEdgesEPNS0_11InstructionE(%"class.spvtools::opt::SSAPropagator"* %0, %"class.spvtools::opt::Instruction"* %1)
  br label %109

109:                                              ; preds = %108, %107
  %110 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %111 = icmp eq %"class.spvtools::opt::BasicBlock"* %110, null
  br i1 %111, label %122, label %112

112:                                              ; preds = %109
  %113 = bitcast %"struct.spvtools::opt::Edge"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #11
  %114 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 0
  %115 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %114, align 8
  %116 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %115, %"class.spvtools::opt::Instruction"* %1)
  %117 = bitcast %"class.spvtools::opt::BasicBlock"** %5 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %7, i64 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* %116, %"class.spvtools::opt::BasicBlock"** %119, align 8
  %120 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %7, i64 0, i32 1
  %121 = bitcast %"class.spvtools::opt::BasicBlock"** %120 to i64*
  store i64 %118, i64* %121, align 8
  call void @_ZN8spvtools3opt13SSAPropagator14AddControlEdgeERKNS0_4EdgeE(%"class.spvtools::opt::SSAPropagator"* %0, %"struct.spvtools::opt::Edge"* nonnull dereferenceable(16) %7)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #11
  br label %122

122:                                              ; preds = %112, %109, %74
  %123 = phi i1 [ false, %74 ], [ true, %109 ], [ true, %112 ]
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %125 = load i32, i32* %124, align 8
  %126 = icmp eq i32 %125, 245
  br i1 %126, label %127, label %250

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %130 = bitcast %"struct.spvtools::opt::Operand"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.std::__1::vector"* %128 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = sdiv exact i64 %134, 48
  %136 = trunc i64 %135 to i32
  %137 = icmp ugt i32 %136, 2
  br i1 %137, label %138, label %296

138:                                              ; preds = %127
  %139 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 0
  %140 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %141

141:                                              ; preds = %138, %242
  %142 = phi i32 [ 2, %138 ], [ %243, %242 ]
  %143 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %142) #11
  %144 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %139, align 8
  %145 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %144, i64 0, i32 11
  %146 = load i32, i32* %145, align 8
  %147 = and i32 %146, 1
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %173

149:                                              ; preds = %141
  %150 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %144, i64 0, i32 4, i32 0, i32 0, i32 0
  %151 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %150, align 8
  %152 = call i8* @_Znwm(i64 104) #10
  %153 = bitcast i8* %152 to %"class.spvtools::opt::analysis::DefUseManager"*
  %154 = getelementptr inbounds i8, i8* %152, i64 32
  %155 = bitcast i8* %154 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %152, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %155, align 4
  %156 = getelementptr inbounds i8, i8* %152, i64 48
  %157 = getelementptr inbounds i8, i8* %152, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 16, i1 false) #11
  %158 = bitcast i8* %157 to i8**
  store i8* %156, i8** %158, align 8
  %159 = getelementptr inbounds i8, i8* %152, i64 64
  %160 = getelementptr inbounds i8, i8* %152, i64 96
  %161 = bitcast i8* %160 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %161, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %153, %"class.spvtools::opt::Module"* %151) #11
  %162 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %144, i64 0, i32 6
  %163 = ptrtoint i8* %152 to i64
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %162, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %164, align 8
  %166 = bitcast %"class.std::__1::unique_ptr.62"* %162 to i64*
  store i64 %163, i64* %166, align 8
  %167 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %165, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %149
  %169 = bitcast %"class.std::__1::unique_ptr.62"* %162 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %169, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %165) #11
  br label %170

170:                                              ; preds = %168, %149
  %171 = load i32, i32* %145, align 8
  %172 = or i32 %171, 1
  store i32 %172, i32* %145, align 8
  br label %173

173:                                              ; preds = %141, %170
  %174 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %144, i64 0, i32 6, i32 0, i32 0, i32 0
  %175 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %174, align 8
  %176 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %175, i32 %143) #11
  %177 = call zeroext i1 @_ZNK8spvtools3opt13SSAPropagator18IsPhiArgExecutableEPNS0_11InstructionEj(%"class.spvtools::opt::SSAPropagator"* %0, %"class.spvtools::opt::Instruction"* %1, i32 %142)
  br i1 %177, label %178, label %300

178:                                              ; preds = %173
  %179 = ptrtoint %"class.spvtools::opt::Instruction"* %176 to i64
  %180 = lshr i64 %179, 32
  %181 = shl i64 %179, 3
  %182 = and i64 %181, 4294967288
  %183 = add nuw nsw i64 %182, 8
  %184 = xor i64 %183, %180
  %185 = mul i64 %184, -7070675565921424023
  %186 = lshr i64 %185, 47
  %187 = xor i64 %185, %180
  %188 = xor i64 %187, %186
  %189 = mul i64 %188, -7070675565921424023
  %190 = lshr i64 %189, 47
  %191 = xor i64 %190, %189
  %192 = mul i64 %191, -7070675565921424023
  %193 = load i64, i64* %23, align 8
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %300, label %195

195:                                              ; preds = %178
  %196 = call i64 @llvm.ctpop.i64(i64 %193) #11, !range !3
  %197 = icmp ugt i64 %196, 1
  br i1 %197, label %201, label %198

198:                                              ; preds = %195
  %199 = add i64 %193, -1
  %200 = and i64 %199, %192
  br label %205

201:                                              ; preds = %195
  %202 = icmp ult i64 %192, %193
  br i1 %202, label %205, label %203

203:                                              ; preds = %201
  %204 = urem i64 %192, %193
  br label %205

205:                                              ; preds = %203, %201, %198
  %206 = phi i64 [ %200, %198 ], [ %204, %203 ], [ %192, %201 ]
  %207 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %140, align 8
  %208 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %207, i64 %206
  %209 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %208, align 8
  %210 = icmp eq %"struct.std::__1::__hash_node_base.969"* %209, null
  br i1 %210, label %300, label %211

211:                                              ; preds = %205
  %212 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %209, i64 0, i32 0
  %213 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %212, align 8
  %214 = icmp eq %"struct.std::__1::__hash_node_base.969"* %213, null
  br i1 %214, label %300, label %215

215:                                              ; preds = %211
  %216 = add i64 %193, -1
  br label %217

217:                                              ; preds = %238, %215
  %218 = phi %"struct.std::__1::__hash_node_base.969"* [ %213, %215 ], [ %240, %238 ]
  %219 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %218, i64 1
  %220 = bitcast %"struct.std::__1::__hash_node_base.969"* %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = icmp eq i64 %192, %221
  br i1 %222, label %233, label %223

223:                                              ; preds = %217
  br i1 %197, label %226, label %224

224:                                              ; preds = %223
  %225 = and i64 %221, %216
  br label %230

226:                                              ; preds = %223
  %227 = icmp ult i64 %221, %193
  br i1 %227, label %230, label %228

228:                                              ; preds = %226
  %229 = urem i64 %221, %193
  br label %230

230:                                              ; preds = %228, %226, %224
  %231 = phi i64 [ %225, %224 ], [ %229, %228 ], [ %221, %226 ]
  %232 = icmp eq i64 %231, %206
  br i1 %232, label %238, label %300

233:                                              ; preds = %217
  %234 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %218, i64 2
  %235 = bitcast %"struct.std::__1::__hash_node_base.969"* %234 to %"class.spvtools::opt::Instruction"**
  %236 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %235, align 8
  %237 = icmp eq %"class.spvtools::opt::Instruction"* %236, %176
  br i1 %237, label %242, label %238

238:                                              ; preds = %233, %230
  %239 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %218, i64 0, i32 0
  %240 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %239, align 8
  %241 = icmp eq %"struct.std::__1::__hash_node_base.969"* %240, null
  br i1 %241, label %300, label %217

242:                                              ; preds = %233
  %243 = add i32 %142, 2
  %244 = load i64, i64* %130, align 8
  %245 = load i64, i64* %132, align 8
  %246 = sub i64 %244, %245
  %247 = sdiv exact i64 %246, 48
  %248 = trunc i64 %247 to i32
  %249 = icmp ult i32 %243, %248
  br i1 %249, label %141, label %296

250:                                              ; preds = %122
  %251 = bitcast %"class.std::__1::function.1057"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %251) #11
  %252 = ptrtoint %"class.spvtools::opt::SSAPropagator"* %0 to i64
  %253 = getelementptr inbounds %"class.std::__1::function.1057", %"class.std::__1::function.1057"* %8, i64 0, i32 0, i32 1, i32 0
  %254 = getelementptr inbounds %"class.std::__1::function.1057", %"class.std::__1::function.1057"* %8, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator8SimulateEPNS8_11InstructionEE3$_1S3_EEEEbPKNS0_16__policy_storageES2_", i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %253, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator8SimulateEPNS5_11InstructionEE3$_1FbPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %254, align 8
  %255 = bitcast %"class.std::__1::function.1057"* %8 to i64*
  store i64 %252, i64* %255, align 8
  %256 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %257 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %256, align 8
  %258 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %259 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %258, align 8
  %260 = icmp eq %"struct.spvtools::opt::Operand"* %257, %259
  br i1 %260, label %284, label %261

261:                                              ; preds = %250
  %262 = getelementptr inbounds %"class.std::__1::function.1057", %"class.std::__1::function.1057"* %8, i64 0, i32 0, i32 0
  br label %263

263:                                              ; preds = %278, %261
  %264 = phi %"struct.spvtools::opt::Operand"* [ %257, %261 ], [ %279, %278 ]
  %265 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %264, i64 0, i32 0
  %266 = load i32, i32* %265, align 8
  %267 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %266) #11
  br i1 %267, label %268, label %278

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %264, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %270 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %269, align 8
  %271 = icmp eq %"class.std::__1::vector.3"* %270, null
  %272 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %270, i64 0, i32 0, i32 0
  %273 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %264, i64 0, i32 1, i32 2
  %274 = select i1 %271, i32** %273, i32** %272
  %275 = load i32*, i32** %274, align 8
  %276 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %253, align 8
  %277 = call zeroext i1 %276(%"union.std::__1::__function::__policy_storage"* nonnull %262, i32* %275) #11
  br i1 %277, label %278, label %281

278:                                              ; preds = %268, %263
  %279 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %264, i64 1
  %280 = icmp eq %"struct.spvtools::opt::Operand"* %279, %259
  br i1 %280, label %281, label %263

281:                                              ; preds = %278, %268
  %282 = phi i8 [ 0, %278 ], [ 1, %268 ]
  %283 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %254, align 8
  br label %284

284:                                              ; preds = %281, %250
  %285 = phi %"struct.std::__1::__function::__policy"* [ @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator8SimulateEPNS5_11InstructionEE3$_1FbPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %250 ], [ %283, %281 ]
  %286 = phi i8 [ 0, %250 ], [ %282, %281 ]
  %287 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %285, i64 0, i32 1
  %288 = load void (i8*)*, void (i8*)** %287, align 8
  %289 = icmp eq void (i8*)* %288, null
  br i1 %289, label %293, label %290

290:                                              ; preds = %284
  %291 = getelementptr inbounds %"class.std::__1::function.1057", %"class.std::__1::function.1057"* %8, i64 0, i32 0, i32 0, i32 0
  %292 = load i8*, i8** %291, align 8
  call void %288(i8* %292) #11
  br label %293

293:                                              ; preds = %290, %284
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %251) #11
  %294 = and i8 %286, 1
  %295 = icmp eq i8 %294, 0
  br i1 %295, label %296, label %300

296:                                              ; preds = %242, %127, %293
  %297 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %297)
  store %"class.spvtools::opt::Instruction"* %1, %"class.spvtools::opt::Instruction"** %4, align 8
  %298 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 5, i32 0
  %299 = call { %"struct.std::__1::__hash_node_base.969"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.965"* %298, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %297)
  br label %300

300:                                              ; preds = %211, %178, %205, %173, %230, %238, %296, %293, %86, %102
  %301 = phi i1 [ false, %102 ], [ false, %86 ], [ %123, %293 ], [ %123, %296 ], [ %123, %238 ], [ %123, %230 ], [ %123, %173 ], [ %123, %205 ], [ %123, %178 ], [ %123, %211 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #11
  br label %302

302:                                              ; preds = %65, %300
  %303 = phi i1 [ %301, %300 ], [ false, %65 ]
  ret i1 %303
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::vector.1050"* @_ZNSt3__113unordered_mapIPN8spvtools3opt10BasicBlockENS_6vectorINS2_4EdgeENS_9allocatorIS6_EEEENS_4hashIS4_EENS_8equal_toIS4_EENS7_INS_4pairIKS4_S9_EEEEE2atERSF_(%"class.std::__1::unordered_map.986"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.spvtools::opt::BasicBlock"** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::unordered_map.986", %"class.std::__1::unordered_map.986"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %4 to %"class.spvtools::opt::BasicBlock"*
  br i1 %20, label %70, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %19) #11, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %19, -1
  %27 = and i64 %17, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %17, %19
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %17, %19
  br label %32

32:                                               ; preds = %30, %28, %25
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %17, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::unordered_map.986", %"class.std::__1::unordered_map.986"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.991"* %37, null
  br i1 %38, label %70, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.991"* %41, null
  br i1 %42, label %70, label %43

43:                                               ; preds = %39
  %44 = add i64 %19, -1
  br label %45

45:                                               ; preds = %66, %43
  %46 = phi %"struct.std::__1::__hash_node_base.991"* [ %41, %43 ], [ %68, %66 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.991"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %17
  br i1 %50, label %61, label %51

51:                                               ; preds = %45
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %44
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %19
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %19
  br label %58

58:                                               ; preds = %56, %54, %52
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %66, label %70

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %46, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.991"* %62 to %"class.spvtools::opt::BasicBlock"**
  %64 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::BasicBlock"* %64, %21
  br i1 %65, label %71, label %66

66:                                               ; preds = %61, %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %46, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.991"* %68, null
  br i1 %69, label %70, label %45

70:                                               ; preds = %58, %66, %32, %2, %39
  tail call void @abort() #12
  unreachable

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %46, i64 3
  %73 = bitcast %"struct.std::__1::__hash_node_base.991"* %72 to %"class.std::__1::vector.1050"*
  ret %"class.std::__1::vector.1050"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt13SSAPropagator8SimulateEPNS0_10BasicBlockE(%"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %4 = alloca %"class.std::__1::function.1135", align 8
  %5 = alloca %"class.std::__1::function.1135", align 8
  %6 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::__1::function.1044", align 8
  %9 = alloca %"class.std::__1::function.1044", align 8
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %6, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 0
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 16
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %17, align 8
  %19 = tail call i8* @_Znwm(i64 400) #10
  %20 = bitcast i8* %19 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %20, %"class.spvtools::opt::Module"* %18) #11
  %21 = ptrtoint i8* %19 to i64
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 15
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %23, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.273"* %22 to i64*
  store i64 %21, i64* %25, align 8
  %26 = icmp eq %"class.spvtools::opt::CFG"* %24, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %16
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %24) #11
  %28 = bitcast %"class.spvtools::opt::CFG"* %24 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %27, %16
  %30 = load i32, i32* %12, align 8
  %31 = or i32 %30, 16
  store i32 %31, i32* %12, align 8
  br label %32

32:                                               ; preds = %2, %29
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 15, i32 0, i32 0, i32 0
  %34 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %34, i64 0, i32 3
  %36 = icmp eq %"class.spvtools::opt::BasicBlock"* %35, %1
  br i1 %36, label %252, label %37

37:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  store i8 0, i8* %7, align 1
  %38 = bitcast %"class.std::__1::function.1044"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %8, i64 0, i32 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %8, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_13SSAPropagator8SimulateEPNS3_10BasicBlockEE3$_2S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %39, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator8SimulateEPNS5_10BasicBlockEE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %8, i64 0, i32 0, i32 0, i32 0
  store i8* %7, i8** %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %8, i64 0, i32 0, i32 0, i32 1
  %43 = bitcast [8 x i8]* %42 to %"class.spvtools::opt::SSAPropagator"**
  store %"class.spvtools::opt::SSAPropagator"* %0, %"class.spvtools::opt::SSAPropagator"** %43, align 8
  %44 = bitcast %"class.std::__1::function.1135"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #11
  %45 = ptrtoint %"class.std::__1::function.1044"* %8 to i64
  %46 = getelementptr inbounds %"class.std::__1::function.1135", %"class.std::__1::function.1135"* %5, i64 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.std::__1::function.1135", %"class.std::__1::function.1135"* %5, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %46, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %47, align 8
  %48 = bitcast %"class.std::__1::function.1135"* %5 to i64*
  store i64 %45, i64* %48, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %50 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %49, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %50, i64 0, i32 0, i32 3
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp ne i8 %52, 0
  %54 = icmp eq %"class.spvtools::opt::Instruction"* %50, null
  %55 = or i1 %54, %53
  br i1 %55, label %76, label %56

56:                                               ; preds = %37
  %57 = getelementptr inbounds %"class.std::__1::function.1135", %"class.std::__1::function.1135"* %5, i64 0, i32 0, i32 0
  br label %58

58:                                               ; preds = %67, %56
  %59 = phi %"class.spvtools::opt::Instruction"* [ %71, %67 ], [ %50, %56 ]
  %60 = icmp eq %"class.spvtools::opt::Instruction"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %59, i64 0, i32 0, i32 1
  %63 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %59, i64 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 245
  br i1 %66, label %67, label %74

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %63, i64 0, i32 0, i32 3
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  %71 = select i1 %70, %"class.spvtools::opt::Instruction"* %63, %"class.spvtools::opt::Instruction"* null
  %72 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %46, align 8
  %73 = call zeroext i1 %72(%"union.std::__1::__function::__policy_storage"* nonnull %57, %"class.spvtools::opt::Instruction"* nonnull %59) #11
  br i1 %73, label %58, label %74

74:                                               ; preds = %58, %61, %67
  %75 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %47, align 8
  br label %76

76:                                               ; preds = %74, %37
  %77 = phi %"struct.std::__1::__function::__policy"* [ %75, %74 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %37 ]
  %78 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %77, i64 0, i32 1
  %79 = load void (i8*)*, void (i8*)** %78, align 8
  %80 = icmp eq void (i8*)* %79, null
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.std::__1::function.1135", %"class.std::__1::function.1135"* %5, i64 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void %79(i8* %83) #11
  br label %84

84:                                               ; preds = %76, %81
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #11
  %85 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %40, align 8
  %86 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %85, i64 0, i32 1
  %87 = load void (i8*)*, void (i8*)** %86, align 8
  %88 = icmp eq void (i8*)* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %84
  %90 = load i8*, i8** %41, align 8
  call void %87(i8* %90) #11
  br label %91

91:                                               ; preds = %84, %89
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #11
  %92 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %6, align 8
  %93 = ptrtoint %"class.spvtools::opt::BasicBlock"* %92 to i64
  %94 = lshr i64 %93, 32
  %95 = shl i64 %93, 3
  %96 = and i64 %95, 4294967288
  %97 = add nuw nsw i64 %96, 8
  %98 = xor i64 %97, %94
  %99 = mul i64 %98, -7070675565921424023
  %100 = lshr i64 %99, 47
  %101 = xor i64 %99, %94
  %102 = xor i64 %101, %100
  %103 = mul i64 %102, -7070675565921424023
  %104 = lshr i64 %103, 47
  %105 = xor i64 %104, %103
  %106 = mul i64 %105, -7070675565921424023
  %107 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %158, label %110

110:                                              ; preds = %91
  %111 = call i64 @llvm.ctpop.i64(i64 %108) #11, !range !3
  %112 = icmp ugt i64 %111, 1
  br i1 %112, label %116, label %113

113:                                              ; preds = %110
  %114 = add i64 %108, -1
  %115 = and i64 %106, %114
  br label %120

116:                                              ; preds = %110
  %117 = icmp ult i64 %106, %108
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = urem i64 %106, %108
  br label %120

120:                                              ; preds = %118, %116, %113
  %121 = phi i64 [ %115, %113 ], [ %119, %118 ], [ %106, %116 ]
  %122 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %122, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %123, i64 %121
  %125 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %124, align 8
  %126 = icmp eq %"struct.std::__1::__hash_node_base.943"* %125, null
  br i1 %126, label %158, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %125, i64 0, i32 0
  %129 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %128, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.943"* %129, null
  br i1 %130, label %158, label %131

131:                                              ; preds = %127
  %132 = add i64 %108, -1
  br label %133

133:                                              ; preds = %154, %131
  %134 = phi %"struct.std::__1::__hash_node_base.943"* [ %129, %131 ], [ %156, %154 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %134, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.943"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = icmp eq i64 %106, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %133
  br i1 %112, label %142, label %140

140:                                              ; preds = %139
  %141 = and i64 %137, %132
  br label %146

142:                                              ; preds = %139
  %143 = icmp ult i64 %137, %108
  br i1 %143, label %146, label %144

144:                                              ; preds = %142
  %145 = urem i64 %137, %108
  br label %146

146:                                              ; preds = %144, %142, %140
  %147 = phi i64 [ %141, %140 ], [ %145, %144 ], [ %137, %142 ]
  %148 = icmp eq i64 %147, %121
  br i1 %148, label %154, label %158

149:                                              ; preds = %133
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %134, i64 2
  %151 = bitcast %"struct.std::__1::__hash_node_base.943"* %150 to %"class.spvtools::opt::BasicBlock"**
  %152 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %151, align 8
  %153 = icmp eq %"class.spvtools::opt::BasicBlock"* %152, %92
  br i1 %153, label %249, label %154

154:                                              ; preds = %149, %146
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %134, i64 0, i32 0
  %156 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %155, align 8
  %157 = icmp eq %"struct.std::__1::__hash_node_base.943"* %156, null
  br i1 %157, label %158, label %133

158:                                              ; preds = %154, %146, %120, %91, %127
  %159 = bitcast %"class.std::__1::function.1044"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %159) #11
  %160 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %9, i64 0, i32 0, i32 1, i32 0
  %161 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %9, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_13SSAPropagator8SimulateEPNS3_10BasicBlockEE3$_3S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %160, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator8SimulateEPNS5_10BasicBlockEE3$_3FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %161, align 8
  %162 = bitcast %"class.std::__1::function.1044"* %9 to %"class.spvtools::opt::SSAPropagator"**
  store %"class.spvtools::opt::SSAPropagator"* %0, %"class.spvtools::opt::SSAPropagator"** %162, align 8
  %163 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %9, i64 0, i32 0, i32 0, i32 1
  %164 = bitcast [8 x i8]* %163 to i8**
  store i8* %7, i8** %164, align 8
  %165 = bitcast %"class.std::__1::function.1135"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %165) #11
  %166 = ptrtoint %"class.std::__1::function.1044"* %9 to i64
  %167 = getelementptr inbounds %"class.std::__1::function.1135", %"class.std::__1::function.1135"* %4, i64 0, i32 0, i32 1, i32 0
  %168 = getelementptr inbounds %"class.std::__1::function.1135", %"class.std::__1::function.1135"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %167, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %168, align 8
  %169 = bitcast %"class.std::__1::function.1135"* %4 to i64*
  store i64 %166, i64* %169, align 8
  %170 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %92, i64 0, i32 1, i32 0, i32 0, i32 0
  %171 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %170, align 8
  %172 = icmp eq %"class.spvtools::opt::Instruction"* %171, null
  br i1 %172, label %183, label %173

173:                                              ; preds = %158
  %174 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %171, i64 0, i32 2
  %175 = load i32, i32* %174, align 8
  %176 = icmp eq i32 %175, 245
  br i1 %176, label %183, label %177

177:                                              ; preds = %173
  %178 = call zeroext i1 @_ZN8spvtools3opt13SSAPropagator8SimulateEPNS0_11InstructionE(%"class.spvtools::opt::SSAPropagator"* %0, %"class.spvtools::opt::Instruction"* nonnull %171) #11
  %179 = zext i1 %178 to i8
  %180 = load i8*, i8** %164, align 8
  %181 = load i8, i8* %180, align 1, !range !2
  %182 = or i8 %181, %179
  store i8 %182, i8* %180, align 1
  br label %183

183:                                              ; preds = %177, %173, %158
  %184 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %92, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %185 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %184, align 8
  %186 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %185, i64 0, i32 0, i32 3
  %187 = load i8, i8* %186, align 8, !range !2
  %188 = icmp ne i8 %187, 0
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %185, null
  %190 = or i1 %189, %188
  br i1 %190, label %205, label %191

191:                                              ; preds = %183
  %192 = getelementptr inbounds %"class.std::__1::function.1135", %"class.std::__1::function.1135"* %4, i64 0, i32 0, i32 0
  br label %193

193:                                              ; preds = %196, %191
  %194 = phi %"class.spvtools::opt::Instruction"* [ %202, %196 ], [ %185, %191 ]
  %195 = icmp eq %"class.spvtools::opt::Instruction"* %194, null
  br i1 %195, label %205, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %194, i64 0, i32 0, i32 1
  %198 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %197, align 8
  %199 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %198, i64 0, i32 0, i32 3
  %200 = load i8, i8* %199, align 8, !range !2
  %201 = icmp eq i8 %200, 0
  %202 = select i1 %201, %"class.spvtools::opt::Instruction"* %198, %"class.spvtools::opt::Instruction"* null
  %203 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %167, align 8
  %204 = call zeroext i1 %203(%"union.std::__1::__function::__policy_storage"* nonnull %192, %"class.spvtools::opt::Instruction"* nonnull %194) #11
  br i1 %204, label %193, label %205

205:                                              ; preds = %196, %193, %183
  %206 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %168, align 8
  %207 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %206, i64 0, i32 1
  %208 = load void (i8*)*, void (i8*)** %207, align 8
  %209 = icmp eq void (i8*)* %208, null
  br i1 %209, label %213, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.std::__1::function.1135", %"class.std::__1::function.1135"* %4, i64 0, i32 0, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  call void %208(i8* %212) #11
  br label %213

213:                                              ; preds = %205, %210
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %165) #11
  %214 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %161, align 8
  %215 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %214, i64 0, i32 1
  %216 = load void (i8*)*, void (i8*)** %215, align 8
  %217 = icmp eq void (i8*)* %216, null
  br i1 %217, label %221, label %218

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %9, i64 0, i32 0, i32 0, i32 0
  %220 = load i8*, i8** %219, align 8
  call void %216(i8* %220) #11
  br label %221

221:                                              ; preds = %213, %218
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %159) #11
  %222 = bitcast %"class.spvtools::opt::BasicBlock"** %6 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"class.spvtools::opt::BasicBlock"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224)
  %225 = bitcast %"class.spvtools::opt::BasicBlock"** %3 to i64*
  store i64 %223, i64* %225, align 8
  %226 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 4, i32 0
  %227 = call { %"struct.std::__1::__hash_node_base.943"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.939"* %226, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %3, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224)
  %228 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 7
  %229 = call dereferenceable(24) %"class.std::__1::vector.1050"* @_ZNSt3__113unordered_mapIPN8spvtools3opt10BasicBlockENS_6vectorINS2_4EdgeENS_9allocatorIS6_EEEENS_4hashIS4_EENS_8equal_toIS4_EENS7_INS_4pairIKS4_S9_EEEEE2atERSF_(%"class.std::__1::unordered_map.986"* %228, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %6)
  %230 = getelementptr inbounds %"class.std::__1::vector.1050", %"class.std::__1::vector.1050"* %229, i64 0, i32 0, i32 1
  %231 = bitcast %"struct.spvtools::opt::Edge"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.std::__1::vector.1050"* %229 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = sub i64 %232, %234
  %236 = icmp eq i64 %235, 16
  br i1 %236, label %237, label %249

237:                                              ; preds = %221
  %238 = call dereferenceable(24) %"class.std::__1::vector.1050"* @_ZNSt3__113unordered_mapIPN8spvtools3opt10BasicBlockENS_6vectorINS2_4EdgeENS_9allocatorIS6_EEEENS_4hashIS4_EENS_8equal_toIS4_EENS7_INS_4pairIKS4_S9_EEEEE2atERSF_(%"class.std::__1::unordered_map.986"* %228, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %6)
  %239 = getelementptr inbounds %"class.std::__1::vector.1050", %"class.std::__1::vector.1050"* %238, i64 0, i32 0, i32 1
  %240 = bitcast %"struct.spvtools::opt::Edge"** %239 to i64*
  %241 = load i64, i64* %240, align 8
  %242 = bitcast %"class.std::__1::vector.1050"* %238 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = icmp eq i64 %241, %243
  br i1 %244, label %245, label %247

245:                                              ; preds = %237
  %246 = bitcast %"class.std::__1::vector.1050"* %238 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %246) #12
  unreachable

247:                                              ; preds = %237
  %248 = inttoptr i64 %243 to %"struct.spvtools::opt::Edge"*
  call void @_ZN8spvtools3opt13SSAPropagator14AddControlEdgeERKNS0_4EdgeE(%"class.spvtools::opt::SSAPropagator"* %0, %"struct.spvtools::opt::Edge"* dereferenceable(16) %248)
  br label %249

249:                                              ; preds = %149, %221, %247
  %250 = load i8, i8* %7, align 1, !range !2
  %251 = icmp ne i8 %250, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  br label %252

252:                                              ; preds = %32, %249
  %253 = phi i1 [ %251, %249 ], [ false, %32 ]
  ret i1 %253
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt13SSAPropagator10InitializeEPNS0_8FunctionE(%"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1204", align 8
  %4 = alloca %"class.std::__1::tuple.1109", align 1
  %5 = alloca %"class.std::__1::tuple.1204", align 8
  %6 = alloca %"class.std::__1::tuple.1109", align 1
  %7 = alloca %"class.std::__1::tuple.1204", align 8
  %8 = alloca %"class.std::__1::tuple.1109", align 1
  %9 = alloca %"class.std::__1::tuple.1204", align 8
  %10 = alloca %"class.std::__1::tuple.1109", align 1
  %11 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %12 = alloca %"class.std::__1::function.1067", align 8
  %13 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %14 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %15 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %16 = bitcast %"class.spvtools::opt::BasicBlock"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 0
  %18 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 11
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 16
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %39

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %24, align 8
  %26 = tail call i8* @_Znwm(i64 400) #10
  %27 = bitcast i8* %26 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %27, %"class.spvtools::opt::Module"* %25) #11
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 15
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.273"* %29 to i64*
  store i64 %28, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::CFG"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %23
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %31) #11
  %35 = bitcast %"class.spvtools::opt::CFG"* %31 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %34, %23
  %37 = load i32, i32* %19, align 8
  %38 = or i32 %37, 16
  store i32 %38, i32* %19, align 8
  br label %39

39:                                               ; preds = %2, %36
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 15, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %40, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %41, i64 0, i32 2
  store %"class.spvtools::opt::BasicBlock"* %42, %"class.spvtools::opt::BasicBlock"** %11, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 7, i32 0
  %44 = bitcast %"class.std::__1::tuple.1204"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.std::__1::tuple.1204", %"class.std::__1::tuple.1204"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %11, %"class.spvtools::opt::BasicBlock"*** %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::tuple.1109", %"class.std::__1::tuple.1109"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %46) #11
  %47 = call { %"struct.std::__1::__hash_node_base.991"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.987"* %43, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1204"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.1109"* nonnull dereferenceable(1) %10) #11
  %48 = extractvalue { %"struct.std::__1::__hash_node_base.991"*, i8 } %47, 0
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %48, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #11
  %50 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 11
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 16
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %71

55:                                               ; preds = %39
  %56 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  %57 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %56, align 8
  %58 = call i8* @_Znwm(i64 400) #10
  %59 = bitcast i8* %58 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %59, %"class.spvtools::opt::Module"* %57) #11
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 15
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %62, align 8
  %64 = bitcast %"class.std::__1::unique_ptr.273"* %61 to i64*
  store i64 %60, i64* %64, align 8
  %65 = icmp eq %"class.spvtools::opt::CFG"* %63, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %55
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %63) #11
  %67 = bitcast %"class.spvtools::opt::CFG"* %63 to i8*
  call void @_ZdlPv(i8* %67) #10
  br label %68

68:                                               ; preds = %66, %55
  %69 = load i32, i32* %51, align 8
  %70 = or i32 %69, 16
  store i32 %70, i32* %51, align 8
  br label %71

71:                                               ; preds = %39, %68
  %72 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 15, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %72, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %73, i64 0, i32 2
  %75 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr.40"** %75 to i64**
  %77 = load i64*, i64** %76, align 8
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %48, i64 4
  %80 = bitcast %"struct.std::__1::__hash_node_base.991"* %79 to %"struct.spvtools::opt::Edge"**
  %81 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %80, align 8
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %48, i64 5
  %83 = bitcast %"struct.std::__1::__hash_node_base.991"* %82 to %"struct.spvtools::opt::Edge"**
  %84 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %83, align 8
  %85 = icmp ult %"struct.spvtools::opt::Edge"* %81, %84
  %86 = ptrtoint %"struct.spvtools::opt::Edge"* %84 to i64
  br i1 %85, label %87, label %94

87:                                               ; preds = %71
  %88 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %81, i64 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* %74, %"class.spvtools::opt::BasicBlock"** %88, align 8
  %89 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %81, i64 0, i32 1
  %90 = bitcast %"class.spvtools::opt::BasicBlock"** %89 to i64*
  store i64 %78, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %81, i64 1
  %92 = ptrtoint %"struct.spvtools::opt::Edge"* %91 to i64
  %93 = bitcast %"struct.std::__1::__hash_node_base.991"* %79 to i64*
  store i64 %92, i64* %93, align 8
  br label %153

94:                                               ; preds = %71
  %95 = ptrtoint %"struct.spvtools::opt::Edge"* %81 to i64
  %96 = bitcast %"struct.std::__1::__hash_node_base.991"* %79 to i64*
  %97 = bitcast %"struct.std::__1::__hash_node_base.991"* %49 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = sub i64 %95, %98
  %100 = ashr exact i64 %99, 4
  %101 = add nsw i64 %100, 1
  %102 = icmp ugt i64 %101, 1152921504606846975
  br i1 %102, label %103, label %105

103:                                              ; preds = %94
  %104 = bitcast %"struct.std::__1::__hash_node_base.991"* %49 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %104) #12
  unreachable

105:                                              ; preds = %94
  %106 = bitcast %"struct.std::__1::__hash_node_base.991"* %82 to i64*
  %107 = sub i64 %86, %98
  %108 = ashr exact i64 %107, 4
  %109 = icmp ult i64 %108, 576460752303423487
  br i1 %109, label %110, label %118

110:                                              ; preds = %105
  %111 = ashr exact i64 %107, 3
  %112 = icmp ult i64 %111, %101
  %113 = select i1 %112, i64 %101, i64 %111
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %123, label %115

115:                                              ; preds = %110
  %116 = icmp ugt i64 %113, 1152921504606846975
  br i1 %116, label %117, label %118

117:                                              ; preds = %115
  call void @abort() #12
  unreachable

118:                                              ; preds = %115, %105
  %119 = phi i64 [ %113, %115 ], [ 1152921504606846975, %105 ]
  %120 = shl i64 %119, 4
  %121 = call i8* @_Znwm(i64 %120) #10
  %122 = bitcast i8* %121 to %"struct.spvtools::opt::Edge"*
  br label %123

123:                                              ; preds = %118, %110
  %124 = phi i64 [ %119, %118 ], [ 0, %110 ]
  %125 = phi %"struct.spvtools::opt::Edge"* [ %122, %118 ], [ null, %110 ]
  %126 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %125, i64 %100
  %127 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %125, i64 %124
  %128 = ptrtoint %"struct.spvtools::opt::Edge"* %127 to i64
  %129 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %126, i64 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* %74, %"class.spvtools::opt::BasicBlock"** %129, align 8
  %130 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %125, i64 %100, i32 1
  %131 = bitcast %"class.spvtools::opt::BasicBlock"** %130 to i64*
  store i64 %78, i64* %131, align 8
  %132 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %126, i64 1
  %133 = ptrtoint %"struct.spvtools::opt::Edge"* %132 to i64
  %134 = bitcast %"struct.std::__1::__hash_node_base.991"* %49 to %"struct.spvtools::opt::Edge"**
  %135 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %134, align 8
  %136 = load i64, i64* %96, align 8
  %137 = ptrtoint %"struct.spvtools::opt::Edge"* %135 to i64
  %138 = sub i64 %136, %137
  %139 = ashr exact i64 %138, 4
  %140 = sub nsw i64 0, %139
  %141 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %126, i64 %140
  %142 = ptrtoint %"struct.spvtools::opt::Edge"* %141 to i64
  %143 = icmp sgt i64 %138, 0
  br i1 %143, label %144, label %148

144:                                              ; preds = %123
  %145 = bitcast %"struct.spvtools::opt::Edge"* %141 to i8*
  %146 = bitcast %"struct.spvtools::opt::Edge"* %135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* align 8 %146, i64 %138, i1 false) #11
  %147 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %134, align 8
  br label %148

148:                                              ; preds = %144, %123
  %149 = phi %"struct.spvtools::opt::Edge"* [ %135, %123 ], [ %147, %144 ]
  store i64 %142, i64* %97, align 8
  store i64 %133, i64* %96, align 8
  store i64 %128, i64* %106, align 8
  %150 = icmp eq %"struct.spvtools::opt::Edge"* %149, null
  br i1 %150, label %153, label %151

151:                                              ; preds = %148
  %152 = bitcast %"struct.spvtools::opt::Edge"* %149 to i8*
  call void @_ZdlPv(i8* %152) #10
  br label %153

153:                                              ; preds = %87, %148, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  %154 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %75, align 8
  %155 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %156 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %155, align 8
  %157 = icmp eq %"class.std::__1::unique_ptr.40"* %154, %156
  br i1 %157, label %175, label %158

158:                                              ; preds = %153
  %159 = bitcast %"class.std::__1::function.1067"* %12 to i8*
  %160 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %12, i64 0, i32 0, i32 1, i32 0
  %161 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %12, i64 0, i32 0, i32 2
  %162 = bitcast %"class.std::__1::function.1067"* %12 to %"class.spvtools::opt::SSAPropagator"**
  %163 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %12, i64 0, i32 0, i32 0, i32 1
  %164 = bitcast [8 x i8]* %163 to %"class.spvtools::opt::BasicBlock"**
  %165 = getelementptr inbounds %"class.std::__1::function.1067", %"class.std::__1::function.1067"* %12, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast %"class.spvtools::opt::BasicBlock"** %13 to i8*
  %167 = bitcast %"class.std::__1::tuple.1204"* %5 to i8*
  %168 = getelementptr inbounds %"class.std::__1::tuple.1204", %"class.std::__1::tuple.1204"* %5, i64 0, i32 0, i32 0, i32 0
  %169 = getelementptr inbounds %"class.std::__1::tuple.1109", %"class.std::__1::tuple.1109"* %6, i64 0, i32 0
  %170 = bitcast %"class.spvtools::opt::BasicBlock"** %14 to i8*
  %171 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 6, i32 0
  %172 = bitcast %"class.std::__1::tuple.1204"* %3 to i8*
  %173 = getelementptr inbounds %"class.std::__1::tuple.1204", %"class.std::__1::tuple.1204"* %3, i64 0, i32 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::tuple.1109", %"class.std::__1::tuple.1109"* %4, i64 0, i32 0
  br label %214

175:                                              ; preds = %458, %153
  %176 = bitcast %"class.spvtools::opt::BasicBlock"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #11
  %177 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %178 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %177, i64 0, i32 11
  %179 = load i32, i32* %178, align 8
  %180 = and i32 %179, 16
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %198

182:                                              ; preds = %175
  %183 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %177, i64 0, i32 4, i32 0, i32 0, i32 0
  %184 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %183, align 8
  %185 = call i8* @_Znwm(i64 400) #10
  %186 = bitcast i8* %185 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %186, %"class.spvtools::opt::Module"* %184) #11
  %187 = ptrtoint i8* %185 to i64
  %188 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %177, i64 0, i32 15
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %188, i64 0, i32 0, i32 0, i32 0
  %190 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %189, align 8
  %191 = bitcast %"class.std::__1::unique_ptr.273"* %188 to i64*
  store i64 %187, i64* %191, align 8
  %192 = icmp eq %"class.spvtools::opt::CFG"* %190, null
  br i1 %192, label %195, label %193

193:                                              ; preds = %182
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %190) #11
  %194 = bitcast %"class.spvtools::opt::CFG"* %190 to i8*
  call void @_ZdlPv(i8* %194) #10
  br label %195

195:                                              ; preds = %193, %182
  %196 = load i32, i32* %178, align 8
  %197 = or i32 %196, 16
  store i32 %197, i32* %178, align 8
  br label %198

198:                                              ; preds = %175, %195
  %199 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %177, i64 0, i32 15, i32 0, i32 0, i32 0
  %200 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %199, align 8
  %201 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %200, i64 0, i32 2
  store %"class.spvtools::opt::BasicBlock"* %201, %"class.spvtools::opt::BasicBlock"** %15, align 8
  %202 = bitcast %"class.std::__1::tuple.1204"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #11
  %203 = getelementptr inbounds %"class.std::__1::tuple.1204", %"class.std::__1::tuple.1204"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %15, %"class.spvtools::opt::BasicBlock"*** %203, align 8
  %204 = getelementptr inbounds %"class.std::__1::tuple.1109", %"class.std::__1::tuple.1109"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %204) #11
  %205 = call { %"struct.std::__1::__hash_node_base.991"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.987"* %43, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1204"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1109"* nonnull dereferenceable(1) %8) #11
  %206 = extractvalue { %"struct.std::__1::__hash_node_base.991"*, i8 } %205, 0
  %207 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %206, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %204) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #11
  %208 = bitcast %"struct.std::__1::__hash_node_base.991"* %207 to %"struct.spvtools::opt::Edge"**
  %209 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %208, align 8
  %210 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %206, i64 4
  %211 = bitcast %"struct.std::__1::__hash_node_base.991"* %210 to %"struct.spvtools::opt::Edge"**
  %212 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %211, align 8
  %213 = icmp eq %"struct.spvtools::opt::Edge"* %209, %212
  br i1 %213, label %461, label %462

214:                                              ; preds = %158, %458
  %215 = phi %"class.std::__1::unique_ptr.40"* [ %154, %158 ], [ %459, %458 ]
  %216 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %215, i64 0, i32 0, i32 0, i32 0
  %217 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %216, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %159) #11
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator10InitializeEPNS7_8FunctionEE3$_4S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %160, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator10InitializeEPNS5_8FunctionEE3$_4FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %161, align 8
  store %"class.spvtools::opt::SSAPropagator"* %0, %"class.spvtools::opt::SSAPropagator"** %162, align 8
  store %"class.spvtools::opt::BasicBlock"* %217, %"class.spvtools::opt::BasicBlock"** %164, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %217, %"class.std::__1::function.1067"* nonnull dereferenceable(32) %12) #11
  %218 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %161, align 8
  %219 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %218, i64 0, i32 1
  %220 = load void (i8*)*, void (i8*)** %219, align 8
  %221 = icmp eq void (i8*)* %220, null
  br i1 %221, label %224, label %222

222:                                              ; preds = %214
  %223 = load i8*, i8** %165, align 8
  call void %220(i8* %223) #11
  br label %224

224:                                              ; preds = %214, %222
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %159) #11
  %225 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %217, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %226 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %225, align 8, !noalias !4
  %227 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %226, i64 0, i32 2
  %228 = load i32, i32* %227, align 8
  %229 = call zeroext i1 @_Z24spvOpcodeIsReturnOrAbort6SpvOp_(i32 %228) #11
  br i1 %229, label %230, label %458

230:                                              ; preds = %224
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #11
  store %"class.spvtools::opt::BasicBlock"* %217, %"class.spvtools::opt::BasicBlock"** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #11
  store %"class.spvtools::opt::BasicBlock"** %13, %"class.spvtools::opt::BasicBlock"*** %168, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %169) #11
  %231 = call { %"struct.std::__1::__hash_node_base.991"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.987"* %43, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1204"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1109"* nonnull dereferenceable(1) %6) #11
  %232 = extractvalue { %"struct.std::__1::__hash_node_base.991"*, i8 } %231, 0
  %233 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %232, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %169) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #11
  %234 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %235 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %234, i64 0, i32 11
  %236 = load i32, i32* %235, align 8
  %237 = and i32 %236, 16
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %255

239:                                              ; preds = %230
  %240 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %234, i64 0, i32 4, i32 0, i32 0, i32 0
  %241 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %240, align 8
  %242 = call i8* @_Znwm(i64 400) #10
  %243 = bitcast i8* %242 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %243, %"class.spvtools::opt::Module"* %241) #11
  %244 = ptrtoint i8* %242 to i64
  %245 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %234, i64 0, i32 15
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %245, i64 0, i32 0, i32 0, i32 0
  %247 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %246, align 8
  %248 = bitcast %"class.std::__1::unique_ptr.273"* %245 to i64*
  store i64 %244, i64* %248, align 8
  %249 = icmp eq %"class.spvtools::opt::CFG"* %247, null
  br i1 %249, label %252, label %250

250:                                              ; preds = %239
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %247) #11
  %251 = bitcast %"class.spvtools::opt::CFG"* %247 to i8*
  call void @_ZdlPv(i8* %251) #10
  br label %252

252:                                              ; preds = %250, %239
  %253 = load i32, i32* %235, align 8
  %254 = or i32 %253, 16
  store i32 %254, i32* %235, align 8
  br label %255

255:                                              ; preds = %230, %252
  %256 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %234, i64 0, i32 15, i32 0, i32 0, i32 0
  %257 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %256, align 8
  %258 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %257, i64 0, i32 3
  %259 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %232, i64 4
  %260 = bitcast %"struct.std::__1::__hash_node_base.991"* %259 to %"struct.spvtools::opt::Edge"**
  %261 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %260, align 8
  %262 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %232, i64 5
  %263 = bitcast %"struct.std::__1::__hash_node_base.991"* %262 to %"struct.spvtools::opt::Edge"**
  %264 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %263, align 8
  %265 = icmp ult %"struct.spvtools::opt::Edge"* %261, %264
  %266 = ptrtoint %"struct.spvtools::opt::Edge"* %264 to i64
  br i1 %265, label %267, label %273

267:                                              ; preds = %255
  %268 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %261, i64 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* %217, %"class.spvtools::opt::BasicBlock"** %268, align 8
  %269 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %261, i64 0, i32 1
  store %"class.spvtools::opt::BasicBlock"* %258, %"class.spvtools::opt::BasicBlock"** %269, align 8
  %270 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %261, i64 1
  %271 = ptrtoint %"struct.spvtools::opt::Edge"* %270 to i64
  %272 = bitcast %"struct.std::__1::__hash_node_base.991"* %259 to i64*
  store i64 %271, i64* %272, align 8
  br label %331

273:                                              ; preds = %255
  %274 = ptrtoint %"struct.spvtools::opt::Edge"* %261 to i64
  %275 = bitcast %"struct.std::__1::__hash_node_base.991"* %259 to i64*
  %276 = bitcast %"struct.std::__1::__hash_node_base.991"* %233 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = sub i64 %274, %277
  %279 = ashr exact i64 %278, 4
  %280 = add nsw i64 %279, 1
  %281 = icmp ugt i64 %280, 1152921504606846975
  br i1 %281, label %282, label %284

282:                                              ; preds = %273
  %283 = bitcast %"struct.std::__1::__hash_node_base.991"* %233 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %283) #12
  unreachable

284:                                              ; preds = %273
  %285 = bitcast %"struct.std::__1::__hash_node_base.991"* %262 to i64*
  %286 = sub i64 %266, %277
  %287 = ashr exact i64 %286, 4
  %288 = icmp ult i64 %287, 576460752303423487
  br i1 %288, label %289, label %297

289:                                              ; preds = %284
  %290 = ashr exact i64 %286, 3
  %291 = icmp ult i64 %290, %280
  %292 = select i1 %291, i64 %280, i64 %290
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %302, label %294

294:                                              ; preds = %289
  %295 = icmp ugt i64 %292, 1152921504606846975
  br i1 %295, label %296, label %297

296:                                              ; preds = %294
  call void @abort() #12
  unreachable

297:                                              ; preds = %294, %284
  %298 = phi i64 [ %292, %294 ], [ 1152921504606846975, %284 ]
  %299 = shl i64 %298, 4
  %300 = call i8* @_Znwm(i64 %299) #10
  %301 = bitcast i8* %300 to %"struct.spvtools::opt::Edge"*
  br label %302

302:                                              ; preds = %297, %289
  %303 = phi i64 [ %298, %297 ], [ 0, %289 ]
  %304 = phi %"struct.spvtools::opt::Edge"* [ %301, %297 ], [ null, %289 ]
  %305 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %304, i64 %279
  %306 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %304, i64 %303
  %307 = ptrtoint %"struct.spvtools::opt::Edge"* %306 to i64
  %308 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %305, i64 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* %217, %"class.spvtools::opt::BasicBlock"** %308, align 8
  %309 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %304, i64 %279, i32 1
  store %"class.spvtools::opt::BasicBlock"* %258, %"class.spvtools::opt::BasicBlock"** %309, align 8
  %310 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %305, i64 1
  %311 = ptrtoint %"struct.spvtools::opt::Edge"* %310 to i64
  %312 = bitcast %"struct.std::__1::__hash_node_base.991"* %233 to %"struct.spvtools::opt::Edge"**
  %313 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %312, align 8
  %314 = load i64, i64* %275, align 8
  %315 = ptrtoint %"struct.spvtools::opt::Edge"* %313 to i64
  %316 = sub i64 %314, %315
  %317 = ashr exact i64 %316, 4
  %318 = sub nsw i64 0, %317
  %319 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %305, i64 %318
  %320 = ptrtoint %"struct.spvtools::opt::Edge"* %319 to i64
  %321 = icmp sgt i64 %316, 0
  br i1 %321, label %322, label %326

322:                                              ; preds = %302
  %323 = bitcast %"struct.spvtools::opt::Edge"* %319 to i8*
  %324 = bitcast %"struct.spvtools::opt::Edge"* %313 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %323, i8* align 8 %324, i64 %316, i1 false) #11
  %325 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %312, align 8
  br label %326

326:                                              ; preds = %322, %302
  %327 = phi %"struct.spvtools::opt::Edge"* [ %313, %302 ], [ %325, %322 ]
  store i64 %320, i64* %276, align 8
  store i64 %311, i64* %275, align 8
  store i64 %307, i64* %285, align 8
  %328 = icmp eq %"struct.spvtools::opt::Edge"* %327, null
  br i1 %328, label %331, label %329

329:                                              ; preds = %326
  %330 = bitcast %"struct.spvtools::opt::Edge"* %327 to i8*
  call void @_ZdlPv(i8* %330) #10
  br label %331

331:                                              ; preds = %267, %326, %329
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #11
  %332 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %333 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %332, i64 0, i32 11
  %334 = load i32, i32* %333, align 8
  %335 = and i32 %334, 16
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %353

337:                                              ; preds = %331
  %338 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %332, i64 0, i32 4, i32 0, i32 0, i32 0
  %339 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %338, align 8
  %340 = call i8* @_Znwm(i64 400) #10
  %341 = bitcast i8* %340 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %341, %"class.spvtools::opt::Module"* %339) #11
  %342 = ptrtoint i8* %340 to i64
  %343 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %332, i64 0, i32 15
  %344 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %343, i64 0, i32 0, i32 0, i32 0
  %345 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %344, align 8
  %346 = bitcast %"class.std::__1::unique_ptr.273"* %343 to i64*
  store i64 %342, i64* %346, align 8
  %347 = icmp eq %"class.spvtools::opt::CFG"* %345, null
  br i1 %347, label %350, label %348

348:                                              ; preds = %337
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %345) #11
  %349 = bitcast %"class.spvtools::opt::CFG"* %345 to i8*
  call void @_ZdlPv(i8* %349) #10
  br label %350

350:                                              ; preds = %348, %337
  %351 = load i32, i32* %333, align 8
  %352 = or i32 %351, 16
  store i32 %352, i32* %333, align 8
  br label %353

353:                                              ; preds = %331, %350
  %354 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %332, i64 0, i32 15, i32 0, i32 0, i32 0
  %355 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %354, align 8
  %356 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %355, i64 0, i32 3
  store %"class.spvtools::opt::BasicBlock"* %356, %"class.spvtools::opt::BasicBlock"** %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #11
  store %"class.spvtools::opt::BasicBlock"** %14, %"class.spvtools::opt::BasicBlock"*** %173, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %174) #11
  %357 = call { %"struct.std::__1::__hash_node_base.991"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.987"* %171, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %14, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1204"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1109"* nonnull dereferenceable(1) %4) #11
  %358 = extractvalue { %"struct.std::__1::__hash_node_base.991"*, i8 } %357, 0
  %359 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %358, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %174) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #11
  %360 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %361 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %360, i64 0, i32 11
  %362 = load i32, i32* %361, align 8
  %363 = and i32 %362, 16
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %381

365:                                              ; preds = %353
  %366 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %360, i64 0, i32 4, i32 0, i32 0, i32 0
  %367 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %366, align 8
  %368 = call i8* @_Znwm(i64 400) #10
  %369 = bitcast i8* %368 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %369, %"class.spvtools::opt::Module"* %367) #11
  %370 = ptrtoint i8* %368 to i64
  %371 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %360, i64 0, i32 15
  %372 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %371, i64 0, i32 0, i32 0, i32 0
  %373 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %372, align 8
  %374 = bitcast %"class.std::__1::unique_ptr.273"* %371 to i64*
  store i64 %370, i64* %374, align 8
  %375 = icmp eq %"class.spvtools::opt::CFG"* %373, null
  br i1 %375, label %378, label %376

376:                                              ; preds = %365
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %373) #11
  %377 = bitcast %"class.spvtools::opt::CFG"* %373 to i8*
  call void @_ZdlPv(i8* %377) #10
  br label %378

378:                                              ; preds = %376, %365
  %379 = load i32, i32* %361, align 8
  %380 = or i32 %379, 16
  store i32 %380, i32* %361, align 8
  br label %381

381:                                              ; preds = %353, %378
  %382 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %360, i64 0, i32 15, i32 0, i32 0, i32 0
  %383 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %382, align 8
  %384 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %383, i64 0, i32 3
  %385 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %358, i64 4
  %386 = bitcast %"struct.std::__1::__hash_node_base.991"* %385 to %"struct.spvtools::opt::Edge"**
  %387 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %386, align 8
  %388 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %358, i64 5
  %389 = bitcast %"struct.std::__1::__hash_node_base.991"* %388 to %"struct.spvtools::opt::Edge"**
  %390 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %389, align 8
  %391 = icmp ult %"struct.spvtools::opt::Edge"* %387, %390
  %392 = ptrtoint %"struct.spvtools::opt::Edge"* %390 to i64
  br i1 %391, label %393, label %399

393:                                              ; preds = %381
  %394 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %387, i64 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* %384, %"class.spvtools::opt::BasicBlock"** %394, align 8
  %395 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %387, i64 0, i32 1
  store %"class.spvtools::opt::BasicBlock"* %217, %"class.spvtools::opt::BasicBlock"** %395, align 8
  %396 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %387, i64 1
  %397 = ptrtoint %"struct.spvtools::opt::Edge"* %396 to i64
  %398 = bitcast %"struct.std::__1::__hash_node_base.991"* %385 to i64*
  store i64 %397, i64* %398, align 8
  br label %457

399:                                              ; preds = %381
  %400 = ptrtoint %"struct.spvtools::opt::Edge"* %387 to i64
  %401 = bitcast %"struct.std::__1::__hash_node_base.991"* %385 to i64*
  %402 = bitcast %"struct.std::__1::__hash_node_base.991"* %359 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = sub i64 %400, %403
  %405 = ashr exact i64 %404, 4
  %406 = add nsw i64 %405, 1
  %407 = icmp ugt i64 %406, 1152921504606846975
  br i1 %407, label %408, label %410

408:                                              ; preds = %399
  %409 = bitcast %"struct.std::__1::__hash_node_base.991"* %359 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %409) #12
  unreachable

410:                                              ; preds = %399
  %411 = bitcast %"struct.std::__1::__hash_node_base.991"* %388 to i64*
  %412 = sub i64 %392, %403
  %413 = ashr exact i64 %412, 4
  %414 = icmp ult i64 %413, 576460752303423487
  br i1 %414, label %415, label %423

415:                                              ; preds = %410
  %416 = ashr exact i64 %412, 3
  %417 = icmp ult i64 %416, %406
  %418 = select i1 %417, i64 %406, i64 %416
  %419 = icmp eq i64 %418, 0
  br i1 %419, label %428, label %420

420:                                              ; preds = %415
  %421 = icmp ugt i64 %418, 1152921504606846975
  br i1 %421, label %422, label %423

422:                                              ; preds = %420
  call void @abort() #12
  unreachable

423:                                              ; preds = %420, %410
  %424 = phi i64 [ %418, %420 ], [ 1152921504606846975, %410 ]
  %425 = shl i64 %424, 4
  %426 = call i8* @_Znwm(i64 %425) #10
  %427 = bitcast i8* %426 to %"struct.spvtools::opt::Edge"*
  br label %428

428:                                              ; preds = %423, %415
  %429 = phi i64 [ %424, %423 ], [ 0, %415 ]
  %430 = phi %"struct.spvtools::opt::Edge"* [ %427, %423 ], [ null, %415 ]
  %431 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %430, i64 %405
  %432 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %430, i64 %429
  %433 = ptrtoint %"struct.spvtools::opt::Edge"* %432 to i64
  %434 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %431, i64 0, i32 0
  store %"class.spvtools::opt::BasicBlock"* %384, %"class.spvtools::opt::BasicBlock"** %434, align 8
  %435 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %430, i64 %405, i32 1
  store %"class.spvtools::opt::BasicBlock"* %217, %"class.spvtools::opt::BasicBlock"** %435, align 8
  %436 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %431, i64 1
  %437 = ptrtoint %"struct.spvtools::opt::Edge"* %436 to i64
  %438 = bitcast %"struct.std::__1::__hash_node_base.991"* %359 to %"struct.spvtools::opt::Edge"**
  %439 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %438, align 8
  %440 = load i64, i64* %401, align 8
  %441 = ptrtoint %"struct.spvtools::opt::Edge"* %439 to i64
  %442 = sub i64 %440, %441
  %443 = ashr exact i64 %442, 4
  %444 = sub nsw i64 0, %443
  %445 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %431, i64 %444
  %446 = ptrtoint %"struct.spvtools::opt::Edge"* %445 to i64
  %447 = icmp sgt i64 %442, 0
  br i1 %447, label %448, label %452

448:                                              ; preds = %428
  %449 = bitcast %"struct.spvtools::opt::Edge"* %445 to i8*
  %450 = bitcast %"struct.spvtools::opt::Edge"* %439 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %449, i8* align 8 %450, i64 %442, i1 false) #11
  %451 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %438, align 8
  br label %452

452:                                              ; preds = %448, %428
  %453 = phi %"struct.spvtools::opt::Edge"* [ %439, %428 ], [ %451, %448 ]
  store i64 %446, i64* %402, align 8
  store i64 %437, i64* %401, align 8
  store i64 %433, i64* %411, align 8
  %454 = icmp eq %"struct.spvtools::opt::Edge"* %453, null
  br i1 %454, label %457, label %455

455:                                              ; preds = %452
  %456 = bitcast %"struct.spvtools::opt::Edge"* %453 to i8*
  call void @_ZdlPv(i8* %456) #10
  br label %457

457:                                              ; preds = %393, %452, %455
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #11
  br label %458

458:                                              ; preds = %457, %224
  %459 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %215, i64 1
  %460 = icmp eq %"class.std::__1::unique_ptr.40"* %459, %156
  br i1 %460, label %175, label %214

461:                                              ; preds = %462, %198
  ret void

462:                                              ; preds = %198, %462
  %463 = phi %"struct.spvtools::opt::Edge"* [ %464, %462 ], [ %209, %198 ]
  call void @_ZN8spvtools3opt13SSAPropagator14AddControlEdgeERKNS0_4EdgeE(%"class.spvtools::opt::SSAPropagator"* %0, %"struct.spvtools::opt::Edge"* dereferenceable(16) %463)
  %464 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %463, i64 1
  %465 = icmp eq %"struct.spvtools::opt::Edge"* %464, %212
  br i1 %465, label %461, label %462
}

declare void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.1067"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt13SSAPropagator3RunEPNS0_8FunctionE(%"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN8spvtools3opt13SSAPropagator10InitializeEPNS0_8FunctionE(%"class.spvtools::opt::SSAPropagator"* %0, %"class.spvtools::opt::Function"* %1)
  %3 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %5 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %7 = bitcast %"class.spvtools::opt::BasicBlock"**** %5 to i8***
  %8 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = bitcast %"class.spvtools::opt::Instruction"**** %8 to i8***
  %11 = bitcast i64* %6 to <2 x i64>*
  %12 = bitcast i64* %6 to <2 x i64>*
  %13 = bitcast i64* %9 to <2 x i64>*
  %14 = bitcast i64* %9 to <2 x i64>*
  br label %15

15:                                               ; preds = %63, %2
  %16 = phi i8 [ 0, %2 ], [ %64, %63 ]
  %17 = load i64, i64* %4, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = load i64, i64* %3, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %72, label %46

22:                                               ; preds = %15
  %23 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  %24 = load i64, i64* %6, align 8
  %25 = lshr i64 %24, 9
  %26 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %23, i64 %25
  %27 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %26, align 8
  %28 = and i64 %24, 511
  %29 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %27, i64 %28
  %30 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %29, align 8
  %31 = tail call zeroext i1 @_ZN8spvtools3opt13SSAPropagator8SimulateEPNS0_10BasicBlockE(%"class.spvtools::opt::SSAPropagator"* %0, %"class.spvtools::opt::BasicBlock"* %30)
  %32 = zext i1 %31 to i8
  %33 = and i8 %16, 1
  %34 = or i8 %33, %32
  %35 = load <2 x i64>, <2 x i64>* %11, align 8
  %36 = add <2 x i64> %35, <i64 1, i64 -1>
  store <2 x i64> %36, <2 x i64>* %12, align 8
  %37 = extractelement <2 x i64> %36, i32 0
  %38 = icmp ult i64 %37, 1024
  br i1 %38, label %63, label %39

39:                                               ; preds = %22
  %40 = load i8**, i8*** %7, align 8
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZdlPv(i8* %41) #10
  %42 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  %43 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %42, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %43, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  %44 = load i64, i64* %6, align 8
  %45 = add i64 %44, -512
  store i64 %45, i64* %6, align 8
  br label %63

46:                                               ; preds = %19
  %47 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %8, align 8
  %48 = load i64, i64* %9, align 8
  %49 = lshr i64 %48, 9
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %47, i64 %49
  %51 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %50, align 8
  %52 = and i64 %48, 511
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %51, i64 %52
  %54 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %53, align 8
  %55 = tail call zeroext i1 @_ZN8spvtools3opt13SSAPropagator8SimulateEPNS0_11InstructionE(%"class.spvtools::opt::SSAPropagator"* %0, %"class.spvtools::opt::Instruction"* %54)
  %56 = zext i1 %55 to i8
  %57 = and i8 %16, 1
  %58 = or i8 %57, %56
  %59 = load <2 x i64>, <2 x i64>* %13, align 8
  %60 = add <2 x i64> %59, <i64 1, i64 -1>
  store <2 x i64> %60, <2 x i64>* %14, align 8
  %61 = extractelement <2 x i64> %60, i32 0
  %62 = icmp ult i64 %61, 1024
  br i1 %62, label %63, label %65

63:                                               ; preds = %46, %65, %39, %22
  %64 = phi i8 [ %34, %22 ], [ %34, %39 ], [ %58, %46 ], [ %58, %65 ]
  br label %15

65:                                               ; preds = %46
  %66 = load i8**, i8*** %10, align 8
  %67 = load i8*, i8** %66, align 8
  tail call void @_ZdlPv(i8* %67) #10
  %68 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %8, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %68, i64 1
  store %"class.spvtools::opt::Instruction"*** %69, %"class.spvtools::opt::Instruction"**** %8, align 8
  %70 = load i64, i64* %9, align 8
  %71 = add i64 %70, -512
  store i64 %71, i64* %9, align 8
  br label %63

72:                                               ; preds = %19
  %73 = and i8 %16, 1
  %74 = icmp ne i8 %73, 0
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN8spvtools3optlsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_13SSAPropagator10PropStatusE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 {
  %3 = load i32, i32* %1, align 4
  switch i32 %3, label %8 [
    i32 2, label %4
    i32 1, label %6
  ]

4:                                                ; preds = %2
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7) #11
  br label %10

6:                                                ; preds = %2
  %7 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #11
  br label %10

8:                                                ; preds = %2
  %9 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 15) #11
  br label %10

10:                                               ; preds = %8, %6, %4
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.333"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.333"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  %10 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.309"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.309"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.309"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  %36 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.309"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #11
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #11
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #11
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #11
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #11
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #11
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #11
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !2
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !2
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #11
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !2
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #11
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #11
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.281"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.281"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.281"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.281"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #10
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.281"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #10
  %214 = icmp eq %"struct.std::__1::__hash_node_base.281"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.281"**, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.281"** null, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.281"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.281"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #10
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #11
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #10
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #11
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeIN8spvtools3opt4EdgeENS_4lessIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__tree_iteratorIS3_PNS_11__tree_nodeIS3_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.1011"*, %"struct.spvtools::opt::Edge"* dereferenceable(16), %"struct.spvtools::opt::Edge"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.1011", %"class.std::__1::__tree.1011"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %35, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.1011", %"class.std::__1::__tree.1011"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %31, %8
  %11 = phi %"class.std::__1::__tree_node"* [ %34, %31 ], [ %6, %8 ]
  %12 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %9, %8 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1
  %14 = tail call zeroext i1 @_ZNK8spvtools3opt4EdgeltERKS1_(%"struct.spvtools::opt::Edge"* %1, %"struct.spvtools::opt::Edge"* dereferenceable(16) %13) #11
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %10
  %22 = tail call zeroext i1 @_ZNK8spvtools3opt4EdgeltERKS1_(%"struct.spvtools::opt::Edge"* %13, %"struct.spvtools::opt::Edge"* dereferenceable(16) %1) #11
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node"*
  br label %10

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %37

37:                                               ; preds = %19, %27, %29, %35
  %38 = phi %"class.std::__1::__tree_end_node"* [ %4, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %12, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %43, label %68

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 48) #10, !noalias !7
  %45 = getelementptr inbounds i8, i8* %44, i64 32
  %46 = bitcast %"struct.spvtools::opt::Edge"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false) #11, !noalias !7
  %47 = bitcast i8* %44 to %"class.std::__1::__tree_node"*
  %48 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %49 = getelementptr inbounds i8, i8* %44, i64 16
  %50 = bitcast i8* %49 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %50, align 8
  %51 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree.1011", %"class.std::__1::__tree.1011"* %0, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %43
  %58 = ptrtoint %"class.std::__1::__tree_node_base"* %55 to i64
  %59 = bitcast %"class.std::__1::__tree.1011"* %0 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %61

61:                                               ; preds = %57, %43
  %62 = phi %"class.std::__1::__tree_node_base"* [ %48, %43 ], [ %60, %57 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree.1011", %"class.std::__1::__tree.1011"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %64, %"class.std::__1::__tree_node_base"* %62) #11
  %65 = getelementptr inbounds %"class.std::__1::__tree.1011", %"class.std::__1::__tree.1011"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  br label %68

68:                                               ; preds = %61, %37
  %69 = phi i8 [ 1, %61 ], [ 0, %37 ]
  %70 = phi %"class.std::__1::__tree_node"* [ %47, %61 ], [ %41, %37 ]
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %70, i64 0, i32 0, i32 0
  %72 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %71, 0
  %73 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %72, i8 %69, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt4EdgeltERKS1_(%"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %0, i64 0, i32 0
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 4
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 3
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = zext i8 %12 to i32
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %6, i32 %13) #11
  br label %15

15:                                               ; preds = %2, %10
  %16 = phi i32 [ %14, %10 ], [ 0, %2 ]
  %17 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %0, i64 0, i32 1
  %18 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 4
  %22 = load i8, i8* %21, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 3
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = zext i8 %26 to i32
  %28 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %20, i32 %27) #11
  br label %29

29:                                               ; preds = %15, %24
  %30 = phi i32 [ %28, %24 ], [ 0, %15 ]
  %31 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %1, i64 0, i32 0
  %32 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 4
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 3
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = zext i8 %40 to i32
  %42 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %34, i32 %41) #11
  br label %43

43:                                               ; preds = %29, %38
  %44 = phi i32 [ %42, %38 ], [ 0, %29 ]
  %45 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %1, i64 0, i32 1
  %46 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %46, i64 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 4
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %57, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 3
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = zext i8 %54 to i32
  %56 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %48, i32 %55) #11
  br label %57

57:                                               ; preds = %43, %52
  %58 = phi i32 [ %56, %52 ], [ 0, %43 ]
  %59 = icmp ult i32 %16, %44
  br i1 %59, label %64, label %60

60:                                               ; preds = %57
  %61 = icmp uge i32 %44, %16
  %62 = icmp ult i32 %30, %58
  %63 = and i1 %61, %62
  ret i1 %63

64:                                               ; preds = %57
  ret i1 true
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node.1096"**
  %34 = load %"class.std::__1::__tree_node.1096"*, %"class.std::__1::__tree_node.1096"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node.1096"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.1096"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1096"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1096"* %1 to %"class.std::__1::__tree_node.1096"**
  %6 = load %"class.std::__1::__tree_node.1096"*, %"class.std::__1::__tree_node.1096"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1096"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1096", %"class.std::__1::__tree_node.1096"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1096"**
  %9 = load %"class.std::__1::__tree_node.1096"*, %"class.std::__1::__tree_node.1096"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1096"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.1096"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1109", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.1135", align 8
  %6 = alloca %"class.std::__1::function.1044", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !10

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.1044"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.1044"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.1135"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.1044"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.1135", %"class.std::__1::function.1135"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.1135", %"class.std::__1::function.1135"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.1135"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.1135", %"class.std::__1::function.1135"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.1135", %"class.std::__1::function.1135"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1109", %"class.std::__1::tuple.1109"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #11
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #11
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1109"* nonnull dereferenceable(1) %3) #11
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #11
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #11
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #11
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #11
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #11
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1109", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1109", %"class.std::__1::tuple.1109"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1109"* nonnull dereferenceable(1) %4) #11
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1109"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #10, !noalias !12
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !12
  %75 = load i64, i64* %74, align 8, !noalias !12
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !12
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !12
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !12
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !12
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !15

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.969"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.965"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"class.spvtools::opt::Instruction"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::Instruction"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.965", %"class.std::__1::__hash_table.965"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.965", %"class.std::__1::__hash_table.965"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.969"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.969"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.969"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.969"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.969"* %62 to %"class.spvtools::opt::Instruction"**
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #10, !noalias !16
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !16
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !16
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !16
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.969"**
  store %"struct.std::__1::__hash_node_base.969"* null, %"struct.std::__1::__hash_node_base.969"** %75, align 8, !noalias !16
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.965", %"class.std::__1::__hash_table.965"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.965", %"class.std::__1::__hash_table.965"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !3
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.965"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !3
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.965", %"class.std::__1::__hash_table.965"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.969"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.965", %"class.std::__1::__hash_table.965"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.969"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.969"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.969"* %118, %"struct.std::__1::__hash_node_base.969"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.969"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.969"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !3
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.969"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.969"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.969"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.969"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.969"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.969"*, i8 } undef, %"struct.std::__1::__hash_node_base.969"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.969"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.969"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.965"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.965", %"class.std::__1::__hash_table.965"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.965"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.965", %"class.std::__1::__hash_table.965"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.965", %"class.std::__1::__hash_table.965"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.965"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.965"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.965", %"class.std::__1::__hash_table.965"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.965", %"class.std::__1::__hash_table.965"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.965"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.969"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.969"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.971", %"class.std::__1::__bucket_list_deallocator.971"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.969"* null, %"struct.std::__1::__hash_node_base.969"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !19

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.965", %"class.std::__1::__hash_table.965"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.969"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.969"* null, %"struct.std::__1::__hash_node_base.969"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.969"* null, %"struct.std::__1::__hash_node_base.969"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.969"* null, %"struct.std::__1::__hash_node_base.969"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.969"* null, %"struct.std::__1::__hash_node_base.969"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.969"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.969"* %36, %"struct.std::__1::__hash_node_base.969"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.969"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.969"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.969"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.969"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.969"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.969"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.969"* %82, %"struct.std::__1::__hash_node_base.969"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.969"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.969"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.969"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.969"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.969"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.969"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.969"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.969"* %80, %"struct.std::__1::__hash_node_base.969"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.969"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.969"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.965", %"class.std::__1::__hash_table.965"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.969"** null, %"struct.std::__1::__hash_node_base.969"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.969"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.969"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.971", %"class.std::__1::__bucket_list_deallocator.971"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

declare zeroext i1 @_Z26spvOpcodeIsBlockTerminator6SpvOp_(i32) local_unnamed_addr #2

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1044"**
  %4 = load %"class.std::__1::function.1044"*, %"class.std::__1::function.1044"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1044"**
  %4 = load %"class.std::__1::function.1044"*, %"class.std::__1::function.1044"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1044", %"class.std::__1::function.1044"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.943"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.939"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"class.spvtools::opt::BasicBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::BasicBlock"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.939", %"class.std::__1::__hash_table.939"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.939", %"class.std::__1::__hash_table.939"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.943"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.943"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.943"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.943"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.943"* %62 to %"class.spvtools::opt::BasicBlock"**
  %64 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::BasicBlock"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #10, !noalias !20
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::BasicBlock"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !20
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !20
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !20
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.943"**
  store %"struct.std::__1::__hash_node_base.943"* null, %"struct.std::__1::__hash_node_base.943"** %75, align 8, !noalias !20
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.939", %"class.std::__1::__hash_table.939"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.939", %"class.std::__1::__hash_table.939"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !3
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.939"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !3
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.939", %"class.std::__1::__hash_table.939"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.943"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.939", %"class.std::__1::__hash_table.939"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.943"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.943"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.943"* %118, %"struct.std::__1::__hash_node_base.943"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.943"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.943"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !3
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.943"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.943"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.943"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.943"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.943"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.943"*, i8 } undef, %"struct.std::__1::__hash_node_base.943"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.943"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.943"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.939"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.939", %"class.std::__1::__hash_table.939"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.939"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.939", %"class.std::__1::__hash_table.939"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.939", %"class.std::__1::__hash_table.939"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.939"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.939"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.939", %"class.std::__1::__hash_table.939"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.939", %"class.std::__1::__hash_table.939"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.939"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.943"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.943"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.945", %"class.std::__1::__bucket_list_deallocator.945"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.943"* null, %"struct.std::__1::__hash_node_base.943"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !23

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.939", %"class.std::__1::__hash_table.939"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.943"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.943"* null, %"struct.std::__1::__hash_node_base.943"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.943"* null, %"struct.std::__1::__hash_node_base.943"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.943"* null, %"struct.std::__1::__hash_node_base.943"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.943"* null, %"struct.std::__1::__hash_node_base.943"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.943"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.943"* %36, %"struct.std::__1::__hash_node_base.943"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.943"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.943"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.943"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.943"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.943"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.943"* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.943"* %82, %"struct.std::__1::__hash_node_base.943"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.943"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.943"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.943"* %110 to %"class.spvtools::opt::BasicBlock"**
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.943"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.943"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.943"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.943"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.943"* %80, %"struct.std::__1::__hash_node_base.943"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.943"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.943"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.939", %"class.std::__1::__hash_table.939"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.943"** null, %"struct.std::__1::__hash_node_base.943"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.943"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.943"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.945", %"class.std::__1::__bucket_list_deallocator.945"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

declare zeroext i1 @_Z24spvOpcodeIsReturnOrAbort6SpvOp_(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN8spvtools3opt10BasicBlockENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.926"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.spvtools::opt::BasicBlock"**, align 8
  %3 = alloca %"class.spvtools::opt::BasicBlock"**, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1162", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque.926", %"class.std::__1::deque.926"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque.926", %"class.std::__1::deque.926"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %12 = bitcast %"class.spvtools::opt::BasicBlock"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %11, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %14, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque.926", %"class.std::__1::deque.926"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque.926", %"class.std::__1::deque.926"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %17, align 8
  %19 = icmp eq %"class.spvtools::opt::BasicBlock"*** %16, %18
  %20 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %18 to i64
  %21 = bitcast %"class.spvtools::opt::BasicBlock"*** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque.926", %"class.std::__1::deque.926"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %23, align 8
  %25 = icmp ugt %"class.spvtools::opt::BasicBlock"*** %14, %24
  %26 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %14, i64 %32
  %34 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.spvtools::opt::BasicBlock"*** %33 to i8*
  %40 = bitcast %"class.spvtools::opt::BasicBlock"*** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #11
  %41 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.spvtools::opt::BasicBlock"*** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %33, i64 %36
  store %"class.spvtools::opt::BasicBlock"*** %44, %"class.spvtools::opt::BasicBlock"**** %15, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %43, i64 %32
  store %"class.spvtools::opt::BasicBlock"*** %45, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %46 = bitcast %"class.spvtools::opt::BasicBlock"*** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.spvtools::opt::BasicBlock"**** %17 to i64*
  %49 = bitcast %"class.std::__1::deque.926"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #10
  %60 = bitcast i8* %59 to %"class.spvtools::opt::BasicBlock"***
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %60, i64 %57
  %63 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %62 to i64
  %64 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %60, i64 %53
  %65 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %64 to i64
  %66 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %14 to i64
  %67 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.spvtools::opt::BasicBlock"*** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.spvtools::opt::BasicBlock"*** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.spvtools::opt::BasicBlock"*** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %79, i64 1
  %87 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %86 to i64
  %88 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !24

91:                                               ; preds = %78
  %92 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.spvtools::opt::BasicBlock"*** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.spvtools::opt::BasicBlock"*** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.spvtools::opt::BasicBlock"*** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.spvtools::opt::BasicBlock"*** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.spvtools::opt::BasicBlock"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 1
  %106 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 1
  %107 = bitcast %"class.spvtools::opt::BasicBlock"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spvtools::opt::BasicBlock"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 2
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 2
  %112 = bitcast %"class.spvtools::opt::BasicBlock"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spvtools::opt::BasicBlock"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 3
  %116 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 3
  %117 = bitcast %"class.spvtools::opt::BasicBlock"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::BasicBlock"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 4
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 4
  %122 = bitcast %"class.spvtools::opt::BasicBlock"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spvtools::opt::BasicBlock"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 5
  %126 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 5
  %127 = bitcast %"class.spvtools::opt::BasicBlock"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spvtools::opt::BasicBlock"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 6
  %131 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 6
  %132 = bitcast %"class.spvtools::opt::BasicBlock"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.spvtools::opt::BasicBlock"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 7
  %136 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 7
  %137 = bitcast %"class.spvtools::opt::BasicBlock"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.spvtools::opt::BasicBlock"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 8
  %141 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %140 to i64
  %142 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 8
  %143 = icmp eq %"class.spvtools::opt::BasicBlock"*** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %70 to i64
  %146 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.spvtools::opt::BasicBlock"*** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.spvtools::opt::BasicBlock"**** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.spvtools::opt::BasicBlock"**** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.spvtools::opt::BasicBlock"*** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.spvtools::opt::BasicBlock"*** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  %156 = bitcast %"class.spvtools::opt::BasicBlock"**** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %15, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %160, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %161, %"class.spvtools::opt::BasicBlock"**** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque.926", %"class.std::__1::deque.926"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque.926", %"class.std::__1::deque.926"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::BasicBlock"**** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque.926", %"class.std::__1::deque.926"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::BasicBlock"**** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque.926", %"class.std::__1::deque.926"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.spvtools::opt::BasicBlock"**** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque.926"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.spvtools::opt::BasicBlock"***
  %181 = inttoptr i64 %169 to %"class.spvtools::opt::BasicBlock"***
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.spvtools::opt::BasicBlock"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #11
  %186 = tail call i8* @_Znwm(i64 4096) #10
  %187 = bitcast %"class.spvtools::opt::BasicBlock"*** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.928"* %163, %"class.spvtools::opt::BasicBlock"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #11
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.spvtools::opt::BasicBlock"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #11
  %190 = tail call i8* @_Znwm(i64 4096) #10
  %191 = bitcast %"class.spvtools::opt::BasicBlock"*** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer.928"* %163, %"class.spvtools::opt::BasicBlock"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #11
  %192 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %193 = bitcast %"class.spvtools::opt::BasicBlock"*** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %192, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %195, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %196 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  %197 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %172, align 8
  %198 = icmp eq %"class.spvtools::opt::BasicBlock"*** %196, %197
  %199 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %197 to i64
  %200 = bitcast %"class.spvtools::opt::BasicBlock"*** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque.926", %"class.std::__1::deque.926"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %202, align 8
  %204 = icmp ugt %"class.spvtools::opt::BasicBlock"*** %195, %203
  %205 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %195, i64 %211
  %213 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.spvtools::opt::BasicBlock"*** %212 to i8*
  %219 = bitcast %"class.spvtools::opt::BasicBlock"*** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #11
  %220 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.spvtools::opt::BasicBlock"*** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %212, i64 %215
  store %"class.spvtools::opt::BasicBlock"*** %223, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  %224 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %222, i64 %211
  store %"class.spvtools::opt::BasicBlock"*** %224, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %225 = bitcast %"class.spvtools::opt::BasicBlock"*** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #12
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #10
  %237 = bitcast i8* %236 to %"class.spvtools::opt::BasicBlock"***
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %237, i64 %234
  %240 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %239 to i64
  %241 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %237, i64 %230
  %242 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %241 to i64
  %243 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %195 to i64
  %244 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.spvtools::opt::BasicBlock"*** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.spvtools::opt::BasicBlock"*** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.spvtools::opt::BasicBlock"*** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %256, i64 1
  %264 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %263 to i64
  %265 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !25

268:                                              ; preds = %255
  %269 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.spvtools::opt::BasicBlock"*** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.spvtools::opt::BasicBlock"*** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.spvtools::opt::BasicBlock"*** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.spvtools::opt::BasicBlock"*** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.spvtools::opt::BasicBlock"*** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 1
  %283 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 1
  %284 = bitcast %"class.spvtools::opt::BasicBlock"*** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.spvtools::opt::BasicBlock"*** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 2
  %288 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 2
  %289 = bitcast %"class.spvtools::opt::BasicBlock"*** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.spvtools::opt::BasicBlock"*** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 3
  %293 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 3
  %294 = bitcast %"class.spvtools::opt::BasicBlock"*** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.spvtools::opt::BasicBlock"*** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 4
  %298 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 4
  %299 = bitcast %"class.spvtools::opt::BasicBlock"*** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.spvtools::opt::BasicBlock"*** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 5
  %303 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 5
  %304 = bitcast %"class.spvtools::opt::BasicBlock"*** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.spvtools::opt::BasicBlock"*** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 6
  %308 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 6
  %309 = bitcast %"class.spvtools::opt::BasicBlock"*** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.spvtools::opt::BasicBlock"*** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 7
  %313 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 7
  %314 = bitcast %"class.spvtools::opt::BasicBlock"*** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.spvtools::opt::BasicBlock"*** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 8
  %318 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %317 to i64
  %319 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 8
  %320 = icmp eq %"class.spvtools::opt::BasicBlock"*** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %247 to i64
  %323 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.spvtools::opt::BasicBlock"*** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.spvtools::opt::BasicBlock"*** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.spvtools::opt::BasicBlock"*** %325 to i8*
  call void @_ZdlPv(i8* %330) #10
  %331 = bitcast %"class.spvtools::opt::BasicBlock"**** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  %336 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %335, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %336, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1162"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #11
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1162", %"struct.std::__1::__split_buffer.1162"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1162", %"struct.std::__1::__split_buffer.1162"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1162", %"struct.std::__1::__split_buffer.1162"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1162", %"struct.std::__1::__split_buffer.1162"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque.926", %"class.std::__1::deque.926"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1162"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.spvtools::opt::BasicBlock"*** null, %"class.spvtools::opt::BasicBlock"**** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.932"** %342 to %"class.std::__1::__compressed_pair.929"**
  store %"class.std::__1::__compressed_pair.929"* %346, %"class.std::__1::__compressed_pair.929"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #12
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #10
  %354 = bitcast i8* %353 to %"class.spvtools::opt::BasicBlock"***
  %355 = bitcast %"struct.std::__1::__split_buffer.1162"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %354, i64 %171
  store %"class.spvtools::opt::BasicBlock"*** %356, %"class.spvtools::opt::BasicBlock"**** %340, align 8
  store %"class.spvtools::opt::BasicBlock"*** %356, %"class.spvtools::opt::BasicBlock"**** %339, align 8
  %357 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %354, i64 %345
  store %"class.spvtools::opt::BasicBlock"*** %357, %"class.spvtools::opt::BasicBlock"**** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #10
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.spvtools::opt::BasicBlock"*** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %356, i64 %370
  store %"class.spvtools::opt::BasicBlock"*** %371, %"class.spvtools::opt::BasicBlock"**** %340, align 8
  store %"class.spvtools::opt::BasicBlock"*** %371, %"class.spvtools::opt::BasicBlock"**** %339, align 8
  %372 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #12
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1162"* %4 to i64*
  %382 = bitcast %"class.spvtools::opt::BasicBlock"**** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #10
  %386 = bitcast i8* %385 to %"class.spvtools::opt::BasicBlock"***
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %386, i64 %383
  %389 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %388 to i64
  %390 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %386, i64 %377
  %391 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.spvtools::opt::BasicBlock"**** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.spvtools::opt::BasicBlock"**** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #10
  %394 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  %395 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %396 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %395 to i64
  %397 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.spvtools::opt::BasicBlock"*** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.spvtools::opt::BasicBlock"*** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.spvtools::opt::BasicBlock"*** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.spvtools::opt::BasicBlock"*** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %406, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %408, %"class.spvtools::opt::BasicBlock"**** %340, align 8
  %409 = icmp eq %"class.spvtools::opt::BasicBlock"*** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1162"* %4 to i64*
  %413 = bitcast %"class.spvtools::opt::BasicBlock"**** %339 to i64*
  %414 = bitcast %"class.spvtools::opt::BasicBlock"**** %340 to i64*
  %415 = bitcast %"class.spvtools::opt::BasicBlock"**** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1162"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.spvtools::opt::BasicBlock"**** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.spvtools::opt::BasicBlock"**** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.spvtools::opt::BasicBlock"**** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.spvtools::opt::BasicBlock"***
  %441 = inttoptr i64 %434 to %"class.spvtools::opt::BasicBlock"***
  %442 = icmp eq %"class.spvtools::opt::BasicBlock"*** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %441, i64 -1
  %445 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %441, i64 %448
  store %"class.spvtools::opt::BasicBlock"*** %449, %"class.spvtools::opt::BasicBlock"**** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #10
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #11
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.spvtools::opt::BasicBlock"*** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.1162"* nonnull %4, %"class.spvtools::opt::BasicBlock"*** dereferenceable(8) %457)
  %458 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %459 = icmp eq %"class.spvtools::opt::BasicBlock"*** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.928"*, %"class.spvtools::opt::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.928", %"struct.std::__1::__split_buffer.928"* %0, i64 0, i32 2
  %4 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.928", %"struct.std::__1::__split_buffer.928"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %6 to i64
  %9 = bitcast %"class.spvtools::opt::BasicBlock"*** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.928", %"struct.std::__1::__split_buffer.928"* %0, i64 0, i32 1
  %12 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.928", %"struct.std::__1::__split_buffer.928"* %0, i64 0, i32 0
  %14 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %13, align 8
  %15 = icmp ugt %"class.spvtools::opt::BasicBlock"*** %12, %14
  %16 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %12, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.spvtools::opt::BasicBlock"*** %23 to i8*
  %30 = bitcast %"class.spvtools::opt::BasicBlock"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.spvtools::opt::BasicBlock"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %23, i64 %26
  store %"class.spvtools::opt::BasicBlock"*** %34, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %33, i64 %22
  store %"class.spvtools::opt::BasicBlock"*** %35, %"class.spvtools::opt::BasicBlock"**** %11, align 8
  %36 = bitcast %"class.spvtools::opt::BasicBlock"*** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.spvtools::opt::BasicBlock"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.928"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #10
  %50 = bitcast i8* %49 to %"class.spvtools::opt::BasicBlock"***
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %50, i64 %47
  %53 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %52 to i64
  %54 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %50, i64 %43
  %55 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %54 to i64
  %56 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %12 to i64
  %57 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.spvtools::opt::BasicBlock"*** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.spvtools::opt::BasicBlock"*** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.spvtools::opt::BasicBlock"*** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %69, i64 1
  %77 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %76 to i64
  %78 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !26

81:                                               ; preds = %68
  %82 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.spvtools::opt::BasicBlock"*** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.spvtools::opt::BasicBlock"*** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.spvtools::opt::BasicBlock"*** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.spvtools::opt::BasicBlock"*** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.spvtools::opt::BasicBlock"*** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 1
  %96 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 1
  %97 = bitcast %"class.spvtools::opt::BasicBlock"*** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.spvtools::opt::BasicBlock"*** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 2
  %101 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 2
  %102 = bitcast %"class.spvtools::opt::BasicBlock"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.spvtools::opt::BasicBlock"*** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 3
  %106 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 3
  %107 = bitcast %"class.spvtools::opt::BasicBlock"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spvtools::opt::BasicBlock"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 4
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 4
  %112 = bitcast %"class.spvtools::opt::BasicBlock"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spvtools::opt::BasicBlock"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 5
  %116 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 5
  %117 = bitcast %"class.spvtools::opt::BasicBlock"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::BasicBlock"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 6
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 6
  %122 = bitcast %"class.spvtools::opt::BasicBlock"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spvtools::opt::BasicBlock"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 7
  %126 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 7
  %127 = bitcast %"class.spvtools::opt::BasicBlock"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spvtools::opt::BasicBlock"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 8
  %131 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %130 to i64
  %132 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 8
  %133 = icmp eq %"class.spvtools::opt::BasicBlock"*** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %60 to i64
  %136 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.spvtools::opt::BasicBlock"*** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.spvtools::opt::BasicBlock"**** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.spvtools::opt::BasicBlock"**** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.spvtools::opt::BasicBlock"*** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.spvtools::opt::BasicBlock"*** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = bitcast %"class.spvtools::opt::BasicBlock"**** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.spvtools::opt::BasicBlock"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %152, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %153, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer.928"*, %"class.spvtools::opt::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.928", %"struct.std::__1::__split_buffer.928"* %0, i64 0, i32 1
  %4 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.928", %"struct.std::__1::__split_buffer.928"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.928", %"struct.std::__1::__split_buffer.928"* %0, i64 0, i32 2
  %11 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.928", %"struct.std::__1::__split_buffer.928"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %12, align 8
  %14 = icmp ult %"class.spvtools::opt::BasicBlock"*** %11, %13
  %15 = bitcast %"class.spvtools::opt::BasicBlock"**** %12 to i64*
  %16 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %11, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %23, i64 %29
  %31 = bitcast %"class.spvtools::opt::BasicBlock"*** %30 to i8*
  %32 = bitcast %"class.spvtools::opt::BasicBlock"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spvtools::opt::BasicBlock"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spvtools::opt::BasicBlock"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spvtools::opt::BasicBlock"*** %36, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %35, i64 %22
  store %"class.spvtools::opt::BasicBlock"*** %37, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.928"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to %"class.spvtools::opt::BasicBlock"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %51, i64 %48
  %54 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %51, i64 %43
  %56 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %55 to i64
  %57 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %58 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spvtools::opt::BasicBlock"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spvtools::opt::BasicBlock"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spvtools::opt::BasicBlock"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %70, i64 1
  %78 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %77 to i64
  %79 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !27

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spvtools::opt::BasicBlock"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spvtools::opt::BasicBlock"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spvtools::opt::BasicBlock"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spvtools::opt::BasicBlock"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spvtools::opt::BasicBlock"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 1
  %98 = bitcast %"class.spvtools::opt::BasicBlock"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spvtools::opt::BasicBlock"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 2
  %103 = bitcast %"class.spvtools::opt::BasicBlock"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spvtools::opt::BasicBlock"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 3
  %108 = bitcast %"class.spvtools::opt::BasicBlock"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spvtools::opt::BasicBlock"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 4
  %113 = bitcast %"class.spvtools::opt::BasicBlock"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spvtools::opt::BasicBlock"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 5
  %118 = bitcast %"class.spvtools::opt::BasicBlock"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spvtools::opt::BasicBlock"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 6
  %123 = bitcast %"class.spvtools::opt::BasicBlock"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spvtools::opt::BasicBlock"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 7
  %128 = bitcast %"class.spvtools::opt::BasicBlock"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spvtools::opt::BasicBlock"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 8
  %132 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %131 to i64
  %133 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 8
  %134 = icmp eq %"class.spvtools::opt::BasicBlock"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %61 to i64
  %137 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spvtools::opt::BasicBlock"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spvtools::opt::BasicBlock"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spvtools::opt::BasicBlock"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spvtools::opt::BasicBlock"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spvtools::opt::BasicBlock"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spvtools::opt::BasicBlock"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %148, i64 -1
  %150 = bitcast %"class.spvtools::opt::BasicBlock"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spvtools::opt::BasicBlock"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %153, i64 -1
  store %"class.spvtools::opt::BasicBlock"*** %154, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt10BasicBlockERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.1162"*, %"class.spvtools::opt::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1162", %"struct.std::__1::__split_buffer.1162"* %0, i64 0, i32 1
  %4 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1162", %"struct.std::__1::__split_buffer.1162"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1162", %"struct.std::__1::__split_buffer.1162"* %0, i64 0, i32 2
  %11 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1162", %"struct.std::__1::__split_buffer.1162"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %12, align 8
  %14 = icmp ult %"class.spvtools::opt::BasicBlock"*** %11, %13
  %15 = bitcast %"class.spvtools::opt::BasicBlock"**** %12 to i64*
  %16 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %11, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %23, i64 %29
  %31 = bitcast %"class.spvtools::opt::BasicBlock"*** %30 to i8*
  %32 = bitcast %"class.spvtools::opt::BasicBlock"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spvtools::opt::BasicBlock"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spvtools::opt::BasicBlock"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spvtools::opt::BasicBlock"*** %36, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %35, i64 %22
  store %"class.spvtools::opt::BasicBlock"*** %37, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1162"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to %"class.spvtools::opt::BasicBlock"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %51, i64 %48
  %54 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %51, i64 %43
  %56 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %55 to i64
  %57 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %58 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spvtools::opt::BasicBlock"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spvtools::opt::BasicBlock"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spvtools::opt::BasicBlock"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %70, i64 1
  %78 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %77 to i64
  %79 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !28

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spvtools::opt::BasicBlock"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spvtools::opt::BasicBlock"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spvtools::opt::BasicBlock"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spvtools::opt::BasicBlock"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spvtools::opt::BasicBlock"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 1
  %98 = bitcast %"class.spvtools::opt::BasicBlock"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spvtools::opt::BasicBlock"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 2
  %103 = bitcast %"class.spvtools::opt::BasicBlock"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spvtools::opt::BasicBlock"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 3
  %108 = bitcast %"class.spvtools::opt::BasicBlock"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spvtools::opt::BasicBlock"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 4
  %113 = bitcast %"class.spvtools::opt::BasicBlock"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spvtools::opt::BasicBlock"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 5
  %118 = bitcast %"class.spvtools::opt::BasicBlock"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spvtools::opt::BasicBlock"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 6
  %123 = bitcast %"class.spvtools::opt::BasicBlock"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spvtools::opt::BasicBlock"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 7
  %128 = bitcast %"class.spvtools::opt::BasicBlock"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spvtools::opt::BasicBlock"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 8
  %132 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %131 to i64
  %133 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 8
  %134 = icmp eq %"class.spvtools::opt::BasicBlock"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %61 to i64
  %137 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spvtools::opt::BasicBlock"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spvtools::opt::BasicBlock"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spvtools::opt::BasicBlock"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spvtools::opt::BasicBlock"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spvtools::opt::BasicBlock"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spvtools::opt::BasicBlock"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %148, i64 -1
  %150 = bitcast %"class.spvtools::opt::BasicBlock"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spvtools::opt::BasicBlock"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %153, i64 -1
  store %"class.spvtools::opt::BasicBlock"*** %154, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_13SSAPropagator11AddSSAEdgesES5_E3$_0S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::SSAPropagator"**
  %5 = load %"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::SSAPropagator"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %5, i64 0, i32 0
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  %9 = ptrtoint %"class.spvtools::opt::BasicBlock"* %8 to i64
  %10 = lshr i64 %9, 32
  %11 = shl i64 %9, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %182, label %26

26:                                               ; preds = %2
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #11, !range !3
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %22, %30
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.943"**, %"struct.std::__1::__hash_node_base.943"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.943"* %41, null
  br i1 %42, label %182, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.943"* %45, null
  br i1 %46, label %182, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.943"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.943"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %22, %53
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %182

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.943"* %66 to %"class.spvtools::opt::BasicBlock"**
  %68 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::BasicBlock"* %68, %8
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.943", %"struct.std::__1::__hash_node_base.943"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.943"*, %"struct.std::__1::__hash_node_base.943"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.943"* %72, null
  br i1 %73, label %182, label %49

74:                                               ; preds = %65
  %75 = lshr i64 %3, 32
  %76 = shl i64 %3, 3
  %77 = and i64 %76, 4294967288
  %78 = add nuw nsw i64 %77, 8
  %79 = xor i64 %78, %75
  %80 = mul i64 %79, -7070675565921424023
  %81 = lshr i64 %80, 47
  %82 = xor i64 %80, %75
  %83 = xor i64 %82, %81
  %84 = mul i64 %83, -7070675565921424023
  %85 = lshr i64 %84, 47
  %86 = xor i64 %85, %84
  %87 = mul i64 %86, -7070675565921424023
  %88 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %5, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %139, label %91

91:                                               ; preds = %74
  %92 = tail call i64 @llvm.ctpop.i64(i64 %89) #11, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  %95 = add i64 %89, -1
  %96 = and i64 %95, %87
  br label %101

97:                                               ; preds = %91
  %98 = icmp ult i64 %87, %89
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %87, %89
  br label %101

101:                                              ; preds = %99, %97, %94
  %102 = phi i64 [ %96, %94 ], [ %100, %99 ], [ %87, %97 ]
  %103 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %5, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.969"* %106, null
  br i1 %107, label %139, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %106, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %109, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base.969"* %110, null
  br i1 %111, label %139, label %112

112:                                              ; preds = %108
  %113 = add i64 %89, -1
  br label %114

114:                                              ; preds = %135, %112
  %115 = phi %"struct.std::__1::__hash_node_base.969"* [ %110, %112 ], [ %137, %135 ]
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %115, i64 1
  %117 = bitcast %"struct.std::__1::__hash_node_base.969"* %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %87, %118
  br i1 %119, label %130, label %120

120:                                              ; preds = %114
  br i1 %93, label %123, label %121

121:                                              ; preds = %120
  %122 = and i64 %118, %113
  br label %127

123:                                              ; preds = %120
  %124 = icmp ult i64 %118, %89
  br i1 %124, label %127, label %125

125:                                              ; preds = %123
  %126 = urem i64 %118, %89
  br label %127

127:                                              ; preds = %125, %123, %121
  %128 = phi i64 [ %122, %121 ], [ %126, %125 ], [ %118, %123 ]
  %129 = icmp eq i64 %128, %102
  br i1 %129, label %135, label %139

130:                                              ; preds = %114
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %115, i64 2
  %132 = bitcast %"struct.std::__1::__hash_node_base.969"* %131 to %"class.spvtools::opt::Instruction"**
  %133 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %132, align 8
  %134 = icmp eq %"class.spvtools::opt::Instruction"* %133, %1
  br i1 %134, label %182, label %135

135:                                              ; preds = %130, %127
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %115, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.969"* %137, null
  br i1 %138, label %139, label %114

139:                                              ; preds = %135, %127, %108, %101, %74
  %140 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %141 = bitcast %"class.spvtools::opt::Instruction"**** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %144 = bitcast %"class.spvtools::opt::Instruction"**** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = sub i64 %142, %145
  %147 = icmp eq i64 %146, 0
  %148 = shl i64 %146, 6
  %149 = add i64 %148, -1
  %150 = select i1 %147, i64 0, i64 %149
  %151 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %5, i64 0, i32 2, i32 0, i32 0, i32 1
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %5, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %154 = load i64, i64* %153, align 8
  %155 = add i64 %154, %152
  %156 = icmp eq i64 %150, %155
  %157 = inttoptr i64 %145 to %"class.spvtools::opt::Instruction"***
  %158 = inttoptr i64 %142 to %"class.spvtools::opt::Instruction"***
  br i1 %156, label %159, label %166

159:                                              ; preds = %139
  %160 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %5, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %160) #11
  %161 = load i64, i64* %153, align 8
  %162 = load i64, i64* %151, align 8
  %163 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %143, align 8
  %164 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %140, align 8
  %165 = add i64 %162, %161
  br label %166

166:                                              ; preds = %159, %139
  %167 = phi i64 [ %165, %159 ], [ %155, %139 ]
  %168 = phi %"class.spvtools::opt::Instruction"*** [ %164, %159 ], [ %158, %139 ]
  %169 = phi %"class.spvtools::opt::Instruction"*** [ %163, %159 ], [ %157, %139 ]
  %170 = icmp eq %"class.spvtools::opt::Instruction"*** %168, %169
  br i1 %170, label %178, label %171

171:                                              ; preds = %166
  %172 = lshr i64 %167, 9
  %173 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %169, i64 %172
  %174 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %173, align 8
  %175 = and i64 %167, 511
  %176 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %174, i64 %175
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  br label %178

178:                                              ; preds = %171, %166
  %179 = phi i64* [ %177, %171 ], [ null, %166 ]
  store i64 %3, i64* %179, align 8
  %180 = load i64, i64* %153, align 8
  %181 = add i64 %180, 1
  store i64 %181, i64* %153, align 8
  br label %182

182:                                              ; preds = %62, %70, %130, %2, %36, %43, %178
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN8spvtools3opt11InstructionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.spvtools::opt::Instruction"**, align 8
  %3 = alloca %"class.spvtools::opt::Instruction"**, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1171", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  %12 = bitcast %"class.spvtools::opt::Instruction"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %11, i64 1
  store %"class.spvtools::opt::Instruction"*** %14, %"class.spvtools::opt::Instruction"**** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %17, align 8
  %19 = icmp eq %"class.spvtools::opt::Instruction"*** %16, %18
  %20 = ptrtoint %"class.spvtools::opt::Instruction"*** %18 to i64
  %21 = bitcast %"class.spvtools::opt::Instruction"*** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %23, align 8
  %25 = icmp ugt %"class.spvtools::opt::Instruction"*** %14, %24
  %26 = ptrtoint %"class.spvtools::opt::Instruction"*** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.spvtools::opt::Instruction"*** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %14, i64 %32
  %34 = ptrtoint %"class.spvtools::opt::Instruction"*** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.spvtools::opt::Instruction"*** %33 to i8*
  %40 = bitcast %"class.spvtools::opt::Instruction"*** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #11
  %41 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.spvtools::opt::Instruction"*** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, i64 %36
  store %"class.spvtools::opt::Instruction"*** %44, %"class.spvtools::opt::Instruction"**** %15, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %43, i64 %32
  store %"class.spvtools::opt::Instruction"*** %45, %"class.spvtools::opt::Instruction"**** %10, align 8
  %46 = bitcast %"class.spvtools::opt::Instruction"*** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.spvtools::opt::Instruction"**** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #10
  %60 = bitcast i8* %59 to %"class.spvtools::opt::Instruction"***
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %60, i64 %57
  %63 = ptrtoint %"class.spvtools::opt::Instruction"*** %62 to i64
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %60, i64 %53
  %65 = ptrtoint %"class.spvtools::opt::Instruction"*** %64 to i64
  %66 = ptrtoint %"class.spvtools::opt::Instruction"*** %14 to i64
  %67 = ptrtoint %"class.spvtools::opt::Instruction"*** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.spvtools::opt::Instruction"*** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.spvtools::opt::Instruction"*** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.spvtools::opt::Instruction"*** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %79, i64 1
  %87 = ptrtoint %"class.spvtools::opt::Instruction"*** %86 to i64
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !29

91:                                               ; preds = %78
  %92 = ptrtoint %"class.spvtools::opt::Instruction"*** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.spvtools::opt::Instruction"*** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.spvtools::opt::Instruction"*** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.spvtools::opt::Instruction"*** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.spvtools::opt::Instruction"*** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.spvtools::opt::Instruction"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 1
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 1
  %107 = bitcast %"class.spvtools::opt::Instruction"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spvtools::opt::Instruction"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 2
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 2
  %112 = bitcast %"class.spvtools::opt::Instruction"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spvtools::opt::Instruction"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 3
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 3
  %117 = bitcast %"class.spvtools::opt::Instruction"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::Instruction"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 4
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 4
  %122 = bitcast %"class.spvtools::opt::Instruction"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spvtools::opt::Instruction"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 5
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 5
  %127 = bitcast %"class.spvtools::opt::Instruction"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spvtools::opt::Instruction"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 6
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 6
  %132 = bitcast %"class.spvtools::opt::Instruction"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.spvtools::opt::Instruction"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 7
  %136 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 7
  %137 = bitcast %"class.spvtools::opt::Instruction"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.spvtools::opt::Instruction"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %99, i64 8
  %141 = ptrtoint %"class.spvtools::opt::Instruction"*** %140 to i64
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %101, i64 8
  %143 = icmp eq %"class.spvtools::opt::Instruction"*** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.spvtools::opt::Instruction"*** %70 to i64
  %146 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.spvtools::opt::Instruction"*** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.spvtools::opt::Instruction"**** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.spvtools::opt::Instruction"**** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.spvtools::opt::Instruction"*** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.spvtools::opt::Instruction"*** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #10
  %156 = bitcast %"class.spvtools::opt::Instruction"**** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %15, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %160, i64 1
  store %"class.spvtools::opt::Instruction"*** %161, %"class.spvtools::opt::Instruction"**** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"**** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"**** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.spvtools::opt::Instruction"**** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.spvtools::opt::Instruction"***
  %181 = inttoptr i64 %169 to %"class.spvtools::opt::Instruction"***
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.spvtools::opt::Instruction"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #11
  %186 = tail call i8* @_Znwm(i64 4096) #10
  %187 = bitcast %"class.spvtools::opt::Instruction"*** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"* %163, %"class.spvtools::opt::Instruction"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #11
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.spvtools::opt::Instruction"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #11
  %190 = tail call i8* @_Znwm(i64 4096) #10
  %191 = bitcast %"class.spvtools::opt::Instruction"*** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"* %163, %"class.spvtools::opt::Instruction"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #11
  %192 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %167, align 8
  %193 = bitcast %"class.spvtools::opt::Instruction"*** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %192, i64 1
  store %"class.spvtools::opt::Instruction"*** %195, %"class.spvtools::opt::Instruction"**** %167, align 8
  %196 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %164, align 8
  %197 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %172, align 8
  %198 = icmp eq %"class.spvtools::opt::Instruction"*** %196, %197
  %199 = ptrtoint %"class.spvtools::opt::Instruction"*** %197 to i64
  %200 = bitcast %"class.spvtools::opt::Instruction"*** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %202, align 8
  %204 = icmp ugt %"class.spvtools::opt::Instruction"*** %195, %203
  %205 = ptrtoint %"class.spvtools::opt::Instruction"*** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.spvtools::opt::Instruction"*** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %195, i64 %211
  %213 = ptrtoint %"class.spvtools::opt::Instruction"*** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.spvtools::opt::Instruction"*** %212 to i8*
  %219 = bitcast %"class.spvtools::opt::Instruction"*** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #11
  %220 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.spvtools::opt::Instruction"*** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %212, i64 %215
  store %"class.spvtools::opt::Instruction"*** %223, %"class.spvtools::opt::Instruction"**** %164, align 8
  %224 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %222, i64 %211
  store %"class.spvtools::opt::Instruction"*** %224, %"class.spvtools::opt::Instruction"**** %167, align 8
  %225 = bitcast %"class.spvtools::opt::Instruction"*** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #12
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #10
  %237 = bitcast i8* %236 to %"class.spvtools::opt::Instruction"***
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %237, i64 %234
  %240 = ptrtoint %"class.spvtools::opt::Instruction"*** %239 to i64
  %241 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %237, i64 %230
  %242 = ptrtoint %"class.spvtools::opt::Instruction"*** %241 to i64
  %243 = ptrtoint %"class.spvtools::opt::Instruction"*** %195 to i64
  %244 = ptrtoint %"class.spvtools::opt::Instruction"*** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.spvtools::opt::Instruction"*** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.spvtools::opt::Instruction"*** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.spvtools::opt::Instruction"*** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %256, i64 1
  %264 = ptrtoint %"class.spvtools::opt::Instruction"*** %263 to i64
  %265 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !30

268:                                              ; preds = %255
  %269 = ptrtoint %"class.spvtools::opt::Instruction"*** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.spvtools::opt::Instruction"*** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.spvtools::opt::Instruction"*** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.spvtools::opt::Instruction"*** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.spvtools::opt::Instruction"*** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.spvtools::opt::Instruction"*** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 1
  %283 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 1
  %284 = bitcast %"class.spvtools::opt::Instruction"*** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.spvtools::opt::Instruction"*** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 2
  %288 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 2
  %289 = bitcast %"class.spvtools::opt::Instruction"*** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.spvtools::opt::Instruction"*** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 3
  %293 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 3
  %294 = bitcast %"class.spvtools::opt::Instruction"*** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.spvtools::opt::Instruction"*** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 4
  %298 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 4
  %299 = bitcast %"class.spvtools::opt::Instruction"*** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.spvtools::opt::Instruction"*** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 5
  %303 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 5
  %304 = bitcast %"class.spvtools::opt::Instruction"*** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.spvtools::opt::Instruction"*** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 6
  %308 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 6
  %309 = bitcast %"class.spvtools::opt::Instruction"*** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.spvtools::opt::Instruction"*** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 7
  %313 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 7
  %314 = bitcast %"class.spvtools::opt::Instruction"*** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.spvtools::opt::Instruction"*** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %276, i64 8
  %318 = ptrtoint %"class.spvtools::opt::Instruction"*** %317 to i64
  %319 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %278, i64 8
  %320 = icmp eq %"class.spvtools::opt::Instruction"*** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.spvtools::opt::Instruction"*** %247 to i64
  %323 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.spvtools::opt::Instruction"*** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.spvtools::opt::Instruction"*** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.spvtools::opt::Instruction"*** %325 to i8*
  call void @_ZdlPv(i8* %330) #10
  %331 = bitcast %"class.spvtools::opt::Instruction"**** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %164, align 8
  %336 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %335, i64 1
  store %"class.spvtools::opt::Instruction"*** %336, %"class.spvtools::opt::Instruction"**** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1171"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #11
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1171"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.spvtools::opt::Instruction"*** null, %"class.spvtools::opt::Instruction"**** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.919"** %342 to %"class.std::__1::__compressed_pair.916"**
  store %"class.std::__1::__compressed_pair.916"* %346, %"class.std::__1::__compressed_pair.916"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #12
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #10
  %354 = bitcast i8* %353 to %"class.spvtools::opt::Instruction"***
  %355 = bitcast %"struct.std::__1::__split_buffer.1171"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %354, i64 %171
  store %"class.spvtools::opt::Instruction"*** %356, %"class.spvtools::opt::Instruction"**** %340, align 8
  store %"class.spvtools::opt::Instruction"*** %356, %"class.spvtools::opt::Instruction"**** %339, align 8
  %357 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %354, i64 %345
  store %"class.spvtools::opt::Instruction"*** %357, %"class.spvtools::opt::Instruction"**** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #10
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.spvtools::opt::Instruction"*** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.spvtools::opt::Instruction"*** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.spvtools::opt::Instruction"*** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %356, i64 %370
  store %"class.spvtools::opt::Instruction"*** %371, %"class.spvtools::opt::Instruction"**** %340, align 8
  store %"class.spvtools::opt::Instruction"*** %371, %"class.spvtools::opt::Instruction"**** %339, align 8
  %372 = ptrtoint %"class.spvtools::opt::Instruction"*** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #12
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1171"* %4 to i64*
  %382 = bitcast %"class.spvtools::opt::Instruction"**** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #10
  %386 = bitcast i8* %385 to %"class.spvtools::opt::Instruction"***
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %386, i64 %383
  %389 = ptrtoint %"class.spvtools::opt::Instruction"*** %388 to i64
  %390 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %386, i64 %377
  %391 = ptrtoint %"class.spvtools::opt::Instruction"*** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.spvtools::opt::Instruction"**** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.spvtools::opt::Instruction"**** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #10
  %394 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %164, align 8
  %395 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %167, align 8
  %396 = ptrtoint %"class.spvtools::opt::Instruction"*** %395 to i64
  %397 = ptrtoint %"class.spvtools::opt::Instruction"*** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.spvtools::opt::Instruction"*** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.spvtools::opt::Instruction"*** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.spvtools::opt::Instruction"*** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.spvtools::opt::Instruction"*** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %406, i64 1
  store %"class.spvtools::opt::Instruction"*** %408, %"class.spvtools::opt::Instruction"**** %340, align 8
  %409 = icmp eq %"class.spvtools::opt::Instruction"*** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.spvtools::opt::Instruction"*** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1171"* %4 to i64*
  %413 = bitcast %"class.spvtools::opt::Instruction"**** %339 to i64*
  %414 = bitcast %"class.spvtools::opt::Instruction"**** %340 to i64*
  %415 = bitcast %"class.spvtools::opt::Instruction"**** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.spvtools::opt::Instruction"*** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1171"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.spvtools::opt::Instruction"**** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.spvtools::opt::Instruction"**** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.spvtools::opt::Instruction"**** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.spvtools::opt::Instruction"***
  %441 = inttoptr i64 %434 to %"class.spvtools::opt::Instruction"***
  %442 = icmp eq %"class.spvtools::opt::Instruction"*** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %441, i64 -1
  %445 = ptrtoint %"class.spvtools::opt::Instruction"*** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %441, i64 %448
  store %"class.spvtools::opt::Instruction"*** %449, %"class.spvtools::opt::Instruction"**** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #10
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #11
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.spvtools::opt::Instruction"*** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.1171"* nonnull %4, %"class.spvtools::opt::Instruction"*** dereferenceable(8) %457)
  %458 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %167, align 8
  %459 = icmp eq %"class.spvtools::opt::Instruction"*** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer"*, %"class.spvtools::opt::Instruction"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Instruction"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::Instruction"*** %6 to i64
  %9 = bitcast %"class.spvtools::opt::Instruction"*** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %13, align 8
  %15 = icmp ugt %"class.spvtools::opt::Instruction"*** %12, %14
  %16 = ptrtoint %"class.spvtools::opt::Instruction"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.spvtools::opt::Instruction"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %12, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.spvtools::opt::Instruction"*** %23 to i8*
  %30 = bitcast %"class.spvtools::opt::Instruction"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #11
  %31 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.spvtools::opt::Instruction"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, i64 %26
  store %"class.spvtools::opt::Instruction"*** %34, %"class.spvtools::opt::Instruction"**** %3, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, i64 %22
  store %"class.spvtools::opt::Instruction"*** %35, %"class.spvtools::opt::Instruction"**** %11, align 8
  %36 = bitcast %"class.spvtools::opt::Instruction"*** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.spvtools::opt::Instruction"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #10
  %50 = bitcast i8* %49 to %"class.spvtools::opt::Instruction"***
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %50, i64 %47
  %53 = ptrtoint %"class.spvtools::opt::Instruction"*** %52 to i64
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %50, i64 %43
  %55 = ptrtoint %"class.spvtools::opt::Instruction"*** %54 to i64
  %56 = ptrtoint %"class.spvtools::opt::Instruction"*** %12 to i64
  %57 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.spvtools::opt::Instruction"*** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.spvtools::opt::Instruction"*** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.spvtools::opt::Instruction"*** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %69, i64 1
  %77 = ptrtoint %"class.spvtools::opt::Instruction"*** %76 to i64
  %78 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !31

81:                                               ; preds = %68
  %82 = ptrtoint %"class.spvtools::opt::Instruction"*** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.spvtools::opt::Instruction"*** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.spvtools::opt::Instruction"*** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.spvtools::opt::Instruction"*** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.spvtools::opt::Instruction"*** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.spvtools::opt::Instruction"*** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 1
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 1
  %97 = bitcast %"class.spvtools::opt::Instruction"*** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.spvtools::opt::Instruction"*** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 2
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 2
  %102 = bitcast %"class.spvtools::opt::Instruction"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.spvtools::opt::Instruction"*** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 3
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 3
  %107 = bitcast %"class.spvtools::opt::Instruction"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spvtools::opt::Instruction"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 4
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 4
  %112 = bitcast %"class.spvtools::opt::Instruction"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spvtools::opt::Instruction"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 5
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 5
  %117 = bitcast %"class.spvtools::opt::Instruction"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::Instruction"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 6
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 6
  %122 = bitcast %"class.spvtools::opt::Instruction"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spvtools::opt::Instruction"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 7
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 7
  %127 = bitcast %"class.spvtools::opt::Instruction"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spvtools::opt::Instruction"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %89, i64 8
  %131 = ptrtoint %"class.spvtools::opt::Instruction"*** %130 to i64
  %132 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %91, i64 8
  %133 = icmp eq %"class.spvtools::opt::Instruction"*** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.spvtools::opt::Instruction"*** %60 to i64
  %136 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.spvtools::opt::Instruction"*** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"**** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.spvtools::opt::Instruction"**** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.spvtools::opt::Instruction"*** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.spvtools::opt::Instruction"*** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = bitcast %"class.spvtools::opt::Instruction"**** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.spvtools::opt::Instruction"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %152, i64 1
  store %"class.spvtools::opt::Instruction"*** %153, %"class.spvtools::opt::Instruction"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer"*, %"class.spvtools::opt::Instruction"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Instruction"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::Instruction"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %14 = icmp ult %"class.spvtools::opt::Instruction"*** %11, %13
  %15 = bitcast %"class.spvtools::opt::Instruction"**** %12 to i64*
  %16 = ptrtoint %"class.spvtools::opt::Instruction"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spvtools::opt::Instruction"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %11, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, i64 %29
  %31 = bitcast %"class.spvtools::opt::Instruction"*** %30 to i8*
  %32 = bitcast %"class.spvtools::opt::Instruction"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spvtools::opt::Instruction"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spvtools::opt::Instruction"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spvtools::opt::Instruction"*** %36, %"class.spvtools::opt::Instruction"**** %3, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %35, i64 %22
  store %"class.spvtools::opt::Instruction"*** %37, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to %"class.spvtools::opt::Instruction"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %51, i64 %48
  %54 = ptrtoint %"class.spvtools::opt::Instruction"*** %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %51, i64 %43
  %56 = ptrtoint %"class.spvtools::opt::Instruction"*** %55 to i64
  %57 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %58 = ptrtoint %"class.spvtools::opt::Instruction"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spvtools::opt::Instruction"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spvtools::opt::Instruction"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spvtools::opt::Instruction"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %70, i64 1
  %78 = ptrtoint %"class.spvtools::opt::Instruction"*** %77 to i64
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !32

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spvtools::opt::Instruction"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spvtools::opt::Instruction"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spvtools::opt::Instruction"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spvtools::opt::Instruction"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spvtools::opt::Instruction"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spvtools::opt::Instruction"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 1
  %98 = bitcast %"class.spvtools::opt::Instruction"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spvtools::opt::Instruction"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 2
  %103 = bitcast %"class.spvtools::opt::Instruction"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spvtools::opt::Instruction"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 3
  %108 = bitcast %"class.spvtools::opt::Instruction"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spvtools::opt::Instruction"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 4
  %113 = bitcast %"class.spvtools::opt::Instruction"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spvtools::opt::Instruction"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 5
  %118 = bitcast %"class.spvtools::opt::Instruction"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spvtools::opt::Instruction"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 6
  %123 = bitcast %"class.spvtools::opt::Instruction"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spvtools::opt::Instruction"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 7
  %128 = bitcast %"class.spvtools::opt::Instruction"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spvtools::opt::Instruction"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 8
  %132 = ptrtoint %"class.spvtools::opt::Instruction"*** %131 to i64
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 8
  %134 = icmp eq %"class.spvtools::opt::Instruction"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spvtools::opt::Instruction"*** %61 to i64
  %137 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spvtools::opt::Instruction"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spvtools::opt::Instruction"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spvtools::opt::Instruction"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spvtools::opt::Instruction"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spvtools::opt::Instruction"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spvtools::opt::Instruction"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %148, i64 -1
  %150 = bitcast %"class.spvtools::opt::Instruction"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spvtools::opt::Instruction"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %153, i64 -1
  store %"class.spvtools::opt::Instruction"*** %154, %"class.spvtools::opt::Instruction"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN8spvtools3opt11InstructionERNS_9allocatorIS5_EEE10push_frontERKS5_(%"struct.std::__1::__split_buffer.1171"*, %"class.spvtools::opt::Instruction"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %0, i64 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::Instruction"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::Instruction"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %0, i64 0, i32 2
  %11 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1171", %"struct.std::__1::__split_buffer.1171"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %12, align 8
  %14 = icmp ult %"class.spvtools::opt::Instruction"*** %11, %13
  %15 = bitcast %"class.spvtools::opt::Instruction"**** %12 to i64*
  %16 = ptrtoint %"class.spvtools::opt::Instruction"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spvtools::opt::Instruction"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %11, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, i64 %29
  %31 = bitcast %"class.spvtools::opt::Instruction"*** %30 to i8*
  %32 = bitcast %"class.spvtools::opt::Instruction"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #11
  %33 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spvtools::opt::Instruction"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spvtools::opt::Instruction"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spvtools::opt::Instruction"*** %36, %"class.spvtools::opt::Instruction"**** %3, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %35, i64 %22
  store %"class.spvtools::opt::Instruction"*** %37, %"class.spvtools::opt::Instruction"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1171"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #10
  %51 = bitcast i8* %50 to %"class.spvtools::opt::Instruction"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %51, i64 %48
  %54 = ptrtoint %"class.spvtools::opt::Instruction"*** %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %51, i64 %43
  %56 = ptrtoint %"class.spvtools::opt::Instruction"*** %55 to i64
  %57 = ptrtoint %"class.spvtools::opt::Instruction"*** %4 to i64
  %58 = ptrtoint %"class.spvtools::opt::Instruction"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spvtools::opt::Instruction"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spvtools::opt::Instruction"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spvtools::opt::Instruction"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %70, i64 1
  %78 = ptrtoint %"class.spvtools::opt::Instruction"*** %77 to i64
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !33

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spvtools::opt::Instruction"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spvtools::opt::Instruction"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spvtools::opt::Instruction"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spvtools::opt::Instruction"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spvtools::opt::Instruction"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spvtools::opt::Instruction"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 1
  %98 = bitcast %"class.spvtools::opt::Instruction"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spvtools::opt::Instruction"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 2
  %103 = bitcast %"class.spvtools::opt::Instruction"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spvtools::opt::Instruction"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 3
  %108 = bitcast %"class.spvtools::opt::Instruction"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spvtools::opt::Instruction"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 4
  %113 = bitcast %"class.spvtools::opt::Instruction"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spvtools::opt::Instruction"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 5
  %118 = bitcast %"class.spvtools::opt::Instruction"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spvtools::opt::Instruction"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 6
  %123 = bitcast %"class.spvtools::opt::Instruction"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spvtools::opt::Instruction"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 7
  %128 = bitcast %"class.spvtools::opt::Instruction"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spvtools::opt::Instruction"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %90, i64 8
  %132 = ptrtoint %"class.spvtools::opt::Instruction"*** %131 to i64
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %92, i64 8
  %134 = icmp eq %"class.spvtools::opt::Instruction"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spvtools::opt::Instruction"*** %61 to i64
  %137 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spvtools::opt::Instruction"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spvtools::opt::Instruction"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spvtools::opt::Instruction"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spvtools::opt::Instruction"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spvtools::opt::Instruction"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #10
  %146 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spvtools::opt::Instruction"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %148, i64 -1
  %150 = bitcast %"class.spvtools::opt::Instruction"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spvtools::opt::Instruction"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spvtools::opt::Instruction"***, %"class.spvtools::opt::Instruction"**** %3, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %153, i64 -1
  store %"class.spvtools::opt::Instruction"*** %154, %"class.spvtools::opt::Instruction"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1025"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionENS3_13SSAPropagator10PropStatusEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1021"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1109"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1021", %"class.std::__1::__hash_table.1021"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.1021", %"class.std::__1::__hash_table.1021"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.1025"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.1025"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.1025"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #10, !noalias !34
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !34
  %75 = load i64, i64* %74, align 8, !noalias !34
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !34
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to i32*
  store i32 0, i32* %78, align 8, !noalias !34
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !34
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1025"**
  store %"struct.std::__1::__hash_node_base.1025"* null, %"struct.std::__1::__hash_node_base.1025"** %81, align 8, !noalias !34
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.1021", %"class.std::__1::__hash_table.1021"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.1021", %"class.std::__1::__hash_table.1021"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionENS3_13SSAPropagator10PropStatusEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.1021"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.1021", %"class.std::__1::__hash_table.1021"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.1021", %"class.std::__1::__hash_table.1021"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.1025"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.1025"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.1025"* %124, %"struct.std::__1::__hash_node_base.1025"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.1025"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.1025"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.1025"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.1025"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.1025"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.1025"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.1025"*, i8 } undef, %"struct.std::__1::__hash_node_base.1025"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.1025"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.1025"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionENS3_13SSAPropagator10PropStatusEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.1021"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1021", %"class.std::__1::__hash_table.1021"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionENS3_13SSAPropagator10PropStatusEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1021"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1021", %"class.std::__1::__hash_table.1021"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1021", %"class.std::__1::__hash_table.1021"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionENS3_13SSAPropagator10PropStatusEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1021"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionENS3_13SSAPropagator10PropStatusEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.1021"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1021", %"class.std::__1::__hash_table.1021"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1021", %"class.std::__1::__hash_table.1021"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1021"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1025"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1025"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1027", %"class.std::__1::__bucket_list_deallocator.1027"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1025"* null, %"struct.std::__1::__hash_node_base.1025"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !37

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1021", %"class.std::__1::__hash_table.1021"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1025"* null, %"struct.std::__1::__hash_node_base.1025"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1025"* null, %"struct.std::__1::__hash_node_base.1025"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1025"* null, %"struct.std::__1::__hash_node_base.1025"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1025"* null, %"struct.std::__1::__hash_node_base.1025"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1025"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1025"* %36, %"struct.std::__1::__hash_node_base.1025"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1025"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1025"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1025"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1025"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1025"* %82, %"struct.std::__1::__hash_node_base.1025"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1025"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1025"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1025"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1025"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1025"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1025"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1025"* %80, %"struct.std::__1::__hash_node_base.1025"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1025"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1025", %"struct.std::__1::__hash_node_base.1025"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1025"*, %"struct.std::__1::__hash_node_base.1025"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1025"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1021", %"class.std::__1::__hash_table.1021"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1025"**, %"struct.std::__1::__hash_node_base.1025"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1025"** null, %"struct.std::__1::__hash_node_base.1025"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1025"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1025"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1027", %"class.std::__1::__bucket_list_deallocator.1027"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator8SimulateEPNS8_11InstructionEE3$_1S3_EEEEbPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::SSAPropagator"**
  %4 = load %"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::SSAPropagator"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %4, i64 0, i32 0
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 104) #10
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DefUseManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #11
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 64
  %22 = getelementptr inbounds i8, i8* %14, i64 96
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %23, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %15, %"class.spvtools::opt::Module"* %13) #11
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6
  %25 = ptrtoint i8* %14 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.62"* %24 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %24 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %31, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %27) #11
  br label %32

32:                                               ; preds = %30, %11
  %33 = load i32, i32* %7, align 8
  %34 = or i32 %33, 1
  store i32 %34, i32* %7, align 8
  br label %35

35:                                               ; preds = %32, %2
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = load i32, i32* %1, align 4
  %39 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %37, i32 %38) #11
  %40 = ptrtoint %"class.spvtools::opt::Instruction"* %39 to i64
  %41 = lshr i64 %40, 32
  %42 = shl i64 %40, 3
  %43 = and i64 %42, 4294967288
  %44 = add nuw nsw i64 %43, 8
  %45 = xor i64 %44, %41
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %46, %41
  %49 = xor i64 %48, %47
  %50 = mul i64 %49, -7070675565921424023
  %51 = lshr i64 %50, 47
  %52 = xor i64 %51, %50
  %53 = mul i64 %52, -7070675565921424023
  %54 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %4, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %105, label %57

57:                                               ; preds = %35
  %58 = tail call i64 @llvm.ctpop.i64(i64 %55) #11, !range !3
  %59 = icmp ugt i64 %58, 1
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = add i64 %55, -1
  %62 = and i64 %53, %61
  br label %67

63:                                               ; preds = %57
  %64 = icmp ult i64 %53, %55
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %53, %55
  br label %67

67:                                               ; preds = %65, %63, %60
  %68 = phi i64 [ %62, %60 ], [ %66, %65 ], [ %53, %63 ]
  %69 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %4, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.969"**, %"struct.std::__1::__hash_node_base.969"*** %69, align 8
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %70, i64 %68
  %72 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.969"* %72, null
  br i1 %73, label %105, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %72, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %75, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base.969"* %76, null
  br i1 %77, label %105, label %78

78:                                               ; preds = %74
  %79 = add i64 %55, -1
  br label %80

80:                                               ; preds = %101, %78
  %81 = phi %"struct.std::__1::__hash_node_base.969"* [ %76, %78 ], [ %103, %101 ]
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %81, i64 1
  %83 = bitcast %"struct.std::__1::__hash_node_base.969"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %53, %84
  br i1 %85, label %96, label %86

86:                                               ; preds = %80
  br i1 %59, label %89, label %87

87:                                               ; preds = %86
  %88 = and i64 %84, %79
  br label %93

89:                                               ; preds = %86
  %90 = icmp ult i64 %84, %55
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = urem i64 %84, %55
  br label %93

93:                                               ; preds = %91, %89, %87
  %94 = phi i64 [ %88, %87 ], [ %92, %91 ], [ %84, %89 ]
  %95 = icmp eq i64 %94, %68
  br i1 %95, label %101, label %105

96:                                               ; preds = %80
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %81, i64 2
  %98 = bitcast %"struct.std::__1::__hash_node_base.969"* %97 to %"class.spvtools::opt::Instruction"**
  %99 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %98, align 8
  %100 = icmp eq %"class.spvtools::opt::Instruction"* %99, %39
  br i1 %100, label %105, label %101

101:                                              ; preds = %96, %93
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.969", %"struct.std::__1::__hash_node_base.969"* %81, i64 0, i32 0
  %103 = load %"struct.std::__1::__hash_node_base.969"*, %"struct.std::__1::__hash_node_base.969"** %102, align 8
  %104 = icmp eq %"struct.std::__1::__hash_node_base.969"* %103, null
  br i1 %104, label %105, label %80

105:                                              ; preds = %93, %96, %101, %35, %67, %74
  %106 = phi %"struct.std::__1::__hash_node_base.969"* [ null, %67 ], [ null, %35 ], [ null, %74 ], [ null, %93 ], [ null, %101 ], [ %81, %96 ]
  %107 = icmp ne %"struct.std::__1::__hash_node_base.969"* %106, null
  ret i1 %107
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_13SSAPropagator8SimulateEPNS3_10BasicBlockEE3$_2S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %4 = bitcast [8 x i8]* %3 to %"class.spvtools::opt::SSAPropagator"**
  %5 = load %"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::SSAPropagator"** %4, align 8
  %6 = tail call zeroext i1 @_ZN8spvtools3opt13SSAPropagator8SimulateEPNS0_11InstructionE(%"class.spvtools::opt::SSAPropagator"* %5, %"class.spvtools::opt::Instruction"* %1) #11
  %7 = zext i1 %6 to i8
  %8 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = or i8 %10, %7
  store i8 %11, i8* %9, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_13SSAPropagator8SimulateEPNS3_10BasicBlockEE3$_3S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 245
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::SSAPropagator"**
  %8 = load %"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::SSAPropagator"** %7, align 8
  %9 = tail call zeroext i1 @_ZN8spvtools3opt13SSAPropagator8SimulateEPNS0_11InstructionE(%"class.spvtools::opt::SSAPropagator"* %8, %"class.spvtools::opt::Instruction"* %1) #11
  %10 = zext i1 %9 to i8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i8**
  %13 = load i8*, i8** %12, align 8
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = or i8 %14, %10
  store i8 %15, i8* %13, align 1
  br label %16

16:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.991"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.987"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1204"* dereferenceable(8), %"class.std::__1::tuple.1109"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.991"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.991"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.991"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.991"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.991"* %65 to %"class.spvtools::opt::BasicBlock"**
  %67 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::BasicBlock"* %67, %24
  br i1 %68, label %159, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 48) #10, !noalias !38
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1204"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !38
  %75 = load i64, i64* %74, align 8, !noalias !38
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !38
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #11, !noalias !38
  %78 = getelementptr inbounds i8, i8* %71, i64 8
  %79 = bitcast i8* %78 to i64*
  store i64 %20, i64* %79, align 8, !noalias !38
  %80 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.991"**
  store %"struct.std::__1::__hash_node_base.991"* null, %"struct.std::__1::__hash_node_base.991"** %80, align 8, !noalias !38
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  %84 = uitofp i64 %83 to float
  %85 = uitofp i64 %22 to float
  %86 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, %85
  %89 = fcmp olt float %88, %84
  %90 = or i1 %23, %89
  br i1 %90, label %91, label %114

91:                                               ; preds = %69
  %92 = shl i64 %22, 1
  %93 = icmp ult i64 %22, 3
  %94 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %95 = icmp ugt i64 %94, 1
  %96 = or i1 %93, %95
  %97 = zext i1 %96 to i64
  %98 = or i64 %92, %97
  %99 = fdiv float %84, %87
  %100 = tail call float @llvm.ceil.f32(float %99) #11
  %101 = fptoui float %100 to i64
  %102 = icmp ult i64 %98, %101
  %103 = select i1 %102, i64 %101, i64 %98
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE6rehashEm(%"class.std::__1::__hash_table.987"* %0, i64 %103)
  %104 = load i64, i64* %21, align 8
  %105 = tail call i64 @llvm.ctpop.i64(i64 %104) #11, !range !3
  %106 = icmp ugt i64 %105, 1
  br i1 %106, label %110, label %107

107:                                              ; preds = %91
  %108 = add i64 %104, -1
  %109 = and i64 %108, %20
  br label %114

110:                                              ; preds = %91
  %111 = icmp ult i64 %20, %104
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %20, %104
  br label %114

114:                                              ; preds = %112, %110, %107, %69
  %115 = phi i64 [ %22, %69 ], [ %104, %107 ], [ %104, %110 ], [ %104, %112 ]
  %116 = phi i64 [ %70, %69 ], [ %109, %107 ], [ %20, %110 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %118, i64 %116
  %120 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.991"* %120, null
  br i1 %121, label %122, label %148

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 1, i32 0, i32 0
  %124 = bitcast %"struct.std::__1::__hash_node_base.991"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast i8* %71 to i64*
  store i64 %125, i64* %126, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base.991"* %123 to i8**
  store i8* %71, i8** %127, align 8
  store %"struct.std::__1::__hash_node_base.991"* %123, %"struct.std::__1::__hash_node_base.991"** %119, align 8
  %128 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %80, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.991"* %128, null
  br i1 %129, label %155, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %128, i64 1
  %132 = bitcast %"struct.std::__1::__hash_node_base.991"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = tail call i64 @llvm.ctpop.i64(i64 %115) #11, !range !3
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  %137 = add i64 %115, -1
  %138 = and i64 %133, %137
  br label %143

139:                                              ; preds = %130
  %140 = icmp ult i64 %133, %115
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = urem i64 %133, %115
  br label %143

143:                                              ; preds = %136, %139, %141
  %144 = phi i64 [ %138, %136 ], [ %142, %141 ], [ %133, %139 ]
  %145 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %117, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %145, i64 %144
  %147 = bitcast %"struct.std::__1::__hash_node_base.991"** %146 to i8**
  br label %153

148:                                              ; preds = %114
  %149 = bitcast %"struct.std::__1::__hash_node_base.991"* %120 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast i8* %71 to i64*
  store i64 %150, i64* %151, align 8
  %152 = bitcast %"struct.std::__1::__hash_node_base.991"* %120 to i8**
  br label %153

153:                                              ; preds = %143, %148
  %154 = phi i8** [ %152, %148 ], [ %147, %143 ]
  store i8* %71, i8** %154, align 8
  br label %155

155:                                              ; preds = %153, %122
  %156 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.991"*
  %157 = load i64, i64* %81, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %81, align 8
  br label %159

159:                                              ; preds = %64, %155
  %160 = phi i8 [ 1, %155 ], [ 0, %64 ]
  %161 = phi %"struct.std::__1::__hash_node_base.991"* [ %156, %155 ], [ %47, %64 ]
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.991"*, i8 } undef, %"struct.std::__1::__hash_node_base.991"* %161, 0
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.991"*, i8 } %162, i8 %160, 1
  ret { %"struct.std::__1::__hash_node_base.991"*, i8 } %163
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE6rehashEm(%"class.std::__1::__hash_table.987"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table.987"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table.987"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE8__rehashEm(%"class.std::__1::__hash_table.987"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.987"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.991"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.991"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.993", %"class.std::__1::__bucket_list_deallocator.993"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.991"* null, %"struct.std::__1::__hash_node_base.991"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !41

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.991"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.991"* null, %"struct.std::__1::__hash_node_base.991"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.991"* null, %"struct.std::__1::__hash_node_base.991"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.991"* null, %"struct.std::__1::__hash_node_base.991"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.991"* null, %"struct.std::__1::__hash_node_base.991"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.991"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.991"* %36, %"struct.std::__1::__hash_node_base.991"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.991"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.991"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.991"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.991"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.991"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.991"* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.991"* %82, %"struct.std::__1::__hash_node_base.991"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.991"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.991"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.991"* %110 to %"class.spvtools::opt::BasicBlock"**
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.991"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.991"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.991"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.991"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.991"* %80, %"struct.std::__1::__hash_node_base.991"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.991"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.991"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.991"** null, %"struct.std::__1::__hash_node_base.991"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.991"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.991"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.993", %"class.std::__1::__bucket_list_deallocator.993"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt13SSAPropagator10InitializeEPNS7_8FunctionEE3$_4S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1218", align 8
  %4 = alloca %"class.std::__1::tuple.1109", align 1
  %5 = alloca %"class.std::__1::tuple.1204", align 8
  %6 = alloca %"class.std::__1::tuple.1109", align 1
  %7 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %8 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::SSAPropagator"**
  %10 = load %"class.spvtools::opt::SSAPropagator"*, %"class.spvtools::opt::SSAPropagator"** %9, align 8
  %11 = bitcast %"class.spvtools::opt::BasicBlock"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %7, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %10, i64 0, i32 0
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 11
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %42

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %19, align 8
  %21 = tail call i8* @_Znwm(i64 104) #10
  %22 = bitcast i8* %21 to %"class.spvtools::opt::analysis::DefUseManager"*
  %23 = getelementptr inbounds i8, i8* %21, i64 32
  %24 = bitcast i8* %23 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %21, i64 48
  %26 = getelementptr inbounds i8, i8* %21, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #11
  %27 = bitcast i8* %26 to i8**
  store i8* %25, i8** %27, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 64
  %29 = getelementptr inbounds i8, i8* %21, i64 96
  %30 = bitcast i8* %29 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %30, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %22, %"class.spvtools::opt::Module"* %20) #11
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 6
  %32 = ptrtoint i8* %21 to i64
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %31, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %33, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.62"* %31 to i64*
  store i64 %32, i64* %35, align 8
  %36 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %34, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %18
  %38 = bitcast %"class.std::__1::unique_ptr.62"* %31 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %38, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %34) #11
  br label %39

39:                                               ; preds = %37, %18
  %40 = load i32, i32* %14, align 8
  %41 = or i32 %40, 1
  store i32 %41, i32* %14, align 8
  br label %42

42:                                               ; preds = %39, %2
  %43 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 6, i32 0, i32 0, i32 0
  %44 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %43, align 8
  %45 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %44, i32 %1) #11
  %46 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %13, %"class.spvtools::opt::Instruction"* %45) #11
  store %"class.spvtools::opt::BasicBlock"* %46, %"class.spvtools::opt::BasicBlock"** %7, align 8
  %47 = bitcast %"class.spvtools::opt::BasicBlock"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %49 = bitcast [8 x i8]* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.spvtools::opt::BasicBlock"** %8 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %10, i64 0, i32 7, i32 0
  %53 = bitcast %"class.std::__1::tuple.1204"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #11
  %54 = getelementptr inbounds %"class.std::__1::tuple.1204", %"class.std::__1::tuple.1204"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %8, %"class.spvtools::opt::BasicBlock"*** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::tuple.1109", %"class.std::__1::tuple.1109"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %55) #11
  %56 = call { %"struct.std::__1::__hash_node_base.991"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.987"* %52, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1204"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1109"* nonnull dereferenceable(1) %6) #11
  %57 = extractvalue { %"struct.std::__1::__hash_node_base.991"*, i8 } %56, 0
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %57, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %55) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #11
  %59 = load i64, i64* %49, align 8
  %60 = bitcast %"class.spvtools::opt::BasicBlock"** %7 to i64*
  %61 = ptrtoint %"class.spvtools::opt::BasicBlock"* %46 to i64
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %57, i64 4
  %63 = bitcast %"struct.std::__1::__hash_node_base.991"* %62 to %"struct.spvtools::opt::Edge"**
  %64 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %57, i64 5
  %66 = bitcast %"struct.std::__1::__hash_node_base.991"* %65 to %"struct.spvtools::opt::Edge"**
  %67 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %66, align 8
  %68 = icmp ult %"struct.spvtools::opt::Edge"* %64, %67
  %69 = ptrtoint %"struct.spvtools::opt::Edge"* %67 to i64
  br i1 %68, label %70, label %77

70:                                               ; preds = %42
  %71 = bitcast %"struct.spvtools::opt::Edge"* %64 to i64*
  store i64 %59, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %64, i64 0, i32 1
  %73 = bitcast %"class.spvtools::opt::BasicBlock"** %72 to i64*
  store i64 %61, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %64, i64 1
  %75 = ptrtoint %"struct.spvtools::opt::Edge"* %74 to i64
  %76 = bitcast %"struct.std::__1::__hash_node_base.991"* %62 to i64*
  store i64 %75, i64* %76, align 8
  br label %136

77:                                               ; preds = %42
  %78 = ptrtoint %"struct.spvtools::opt::Edge"* %64 to i64
  %79 = bitcast %"struct.std::__1::__hash_node_base.991"* %62 to i64*
  %80 = bitcast %"struct.std::__1::__hash_node_base.991"* %58 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %78, %81
  %83 = ashr exact i64 %82, 4
  %84 = add nsw i64 %83, 1
  %85 = icmp ugt i64 %84, 1152921504606846975
  br i1 %85, label %86, label %88

86:                                               ; preds = %77
  %87 = bitcast %"struct.std::__1::__hash_node_base.991"* %58 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %87) #12
  unreachable

88:                                               ; preds = %77
  %89 = bitcast %"struct.std::__1::__hash_node_base.991"* %65 to i64*
  %90 = sub i64 %69, %81
  %91 = ashr exact i64 %90, 4
  %92 = icmp ult i64 %91, 576460752303423487
  br i1 %92, label %93, label %101

93:                                               ; preds = %88
  %94 = ashr exact i64 %90, 3
  %95 = icmp ult i64 %94, %84
  %96 = select i1 %95, i64 %84, i64 %94
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %106, label %98

98:                                               ; preds = %93
  %99 = icmp ugt i64 %96, 1152921504606846975
  br i1 %99, label %100, label %101

100:                                              ; preds = %98
  call void @abort() #12
  unreachable

101:                                              ; preds = %98, %88
  %102 = phi i64 [ %96, %98 ], [ 1152921504606846975, %88 ]
  %103 = shl i64 %102, 4
  %104 = call i8* @_Znwm(i64 %103) #10
  %105 = bitcast i8* %104 to %"struct.spvtools::opt::Edge"*
  br label %106

106:                                              ; preds = %101, %93
  %107 = phi i64 [ %102, %101 ], [ 0, %93 ]
  %108 = phi %"struct.spvtools::opt::Edge"* [ %105, %101 ], [ null, %93 ]
  %109 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %108, i64 %83
  %110 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %108, i64 %107
  %111 = ptrtoint %"struct.spvtools::opt::Edge"* %110 to i64
  %112 = bitcast %"struct.spvtools::opt::Edge"* %109 to i64*
  store i64 %59, i64* %112, align 8
  %113 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %108, i64 %83, i32 1
  %114 = bitcast %"class.spvtools::opt::BasicBlock"** %113 to i64*
  store i64 %61, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %109, i64 1
  %116 = ptrtoint %"struct.spvtools::opt::Edge"* %115 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.991"* %58 to %"struct.spvtools::opt::Edge"**
  %118 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %117, align 8
  %119 = load i64, i64* %79, align 8
  %120 = ptrtoint %"struct.spvtools::opt::Edge"* %118 to i64
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 4
  %123 = sub nsw i64 0, %122
  %124 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %109, i64 %123
  %125 = ptrtoint %"struct.spvtools::opt::Edge"* %124 to i64
  %126 = icmp sgt i64 %121, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %106
  %128 = bitcast %"struct.spvtools::opt::Edge"* %124 to i8*
  %129 = bitcast %"struct.spvtools::opt::Edge"* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 %121, i1 false) #11
  %130 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %117, align 8
  br label %131

131:                                              ; preds = %127, %106
  %132 = phi %"struct.spvtools::opt::Edge"* [ %118, %106 ], [ %130, %127 ]
  store i64 %125, i64* %80, align 8
  store i64 %116, i64* %79, align 8
  store i64 %111, i64* %89, align 8
  %133 = icmp eq %"struct.spvtools::opt::Edge"* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = bitcast %"struct.spvtools::opt::Edge"* %132 to i8*
  call void @_ZdlPv(i8* %135) #10
  br label %136

136:                                              ; preds = %134, %131, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  %137 = getelementptr inbounds %"class.spvtools::opt::SSAPropagator", %"class.spvtools::opt::SSAPropagator"* %10, i64 0, i32 6, i32 0
  %138 = bitcast %"class.std::__1::tuple.1218"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #11
  %139 = getelementptr inbounds %"class.std::__1::tuple.1218", %"class.std::__1::tuple.1218"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %7, %"class.spvtools::opt::BasicBlock"*** %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::tuple.1109", %"class.std::__1::tuple.1109"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %140) #11
  %141 = call { %"struct.std::__1::__hash_node_base.991"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.987"* %137, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1218"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1109"* nonnull dereferenceable(1) %4) #11
  %142 = extractvalue { %"struct.std::__1::__hash_node_base.991"*, i8 } %141, 0
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %142, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %140) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #11
  %144 = load i64, i64* %60, align 8
  %145 = load i64, i64* %49, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %142, i64 4
  %147 = bitcast %"struct.std::__1::__hash_node_base.991"* %146 to %"struct.spvtools::opt::Edge"**
  %148 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %147, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %142, i64 5
  %150 = bitcast %"struct.std::__1::__hash_node_base.991"* %149 to %"struct.spvtools::opt::Edge"**
  %151 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %150, align 8
  %152 = icmp ult %"struct.spvtools::opt::Edge"* %148, %151
  %153 = ptrtoint %"struct.spvtools::opt::Edge"* %151 to i64
  br i1 %152, label %154, label %161

154:                                              ; preds = %136
  %155 = bitcast %"struct.spvtools::opt::Edge"* %148 to i64*
  store i64 %144, i64* %155, align 8
  %156 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %148, i64 0, i32 1
  %157 = bitcast %"class.spvtools::opt::BasicBlock"** %156 to i64*
  store i64 %145, i64* %157, align 8
  %158 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %148, i64 1
  %159 = ptrtoint %"struct.spvtools::opt::Edge"* %158 to i64
  %160 = bitcast %"struct.std::__1::__hash_node_base.991"* %146 to i64*
  store i64 %159, i64* %160, align 8
  br label %220

161:                                              ; preds = %136
  %162 = ptrtoint %"struct.spvtools::opt::Edge"* %148 to i64
  %163 = bitcast %"struct.std::__1::__hash_node_base.991"* %146 to i64*
  %164 = bitcast %"struct.std::__1::__hash_node_base.991"* %143 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = sub i64 %162, %165
  %167 = ashr exact i64 %166, 4
  %168 = add nsw i64 %167, 1
  %169 = icmp ugt i64 %168, 1152921504606846975
  br i1 %169, label %170, label %172

170:                                              ; preds = %161
  %171 = bitcast %"struct.std::__1::__hash_node_base.991"* %143 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %171) #12
  unreachable

172:                                              ; preds = %161
  %173 = bitcast %"struct.std::__1::__hash_node_base.991"* %149 to i64*
  %174 = sub i64 %153, %165
  %175 = ashr exact i64 %174, 4
  %176 = icmp ult i64 %175, 576460752303423487
  br i1 %176, label %177, label %185

177:                                              ; preds = %172
  %178 = ashr exact i64 %174, 3
  %179 = icmp ult i64 %178, %168
  %180 = select i1 %179, i64 %168, i64 %178
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %190, label %182

182:                                              ; preds = %177
  %183 = icmp ugt i64 %180, 1152921504606846975
  br i1 %183, label %184, label %185

184:                                              ; preds = %182
  call void @abort() #12
  unreachable

185:                                              ; preds = %182, %172
  %186 = phi i64 [ %180, %182 ], [ 1152921504606846975, %172 ]
  %187 = shl i64 %186, 4
  %188 = call i8* @_Znwm(i64 %187) #10
  %189 = bitcast i8* %188 to %"struct.spvtools::opt::Edge"*
  br label %190

190:                                              ; preds = %185, %177
  %191 = phi i64 [ %186, %185 ], [ 0, %177 ]
  %192 = phi %"struct.spvtools::opt::Edge"* [ %189, %185 ], [ null, %177 ]
  %193 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %192, i64 %167
  %194 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %192, i64 %191
  %195 = ptrtoint %"struct.spvtools::opt::Edge"* %194 to i64
  %196 = bitcast %"struct.spvtools::opt::Edge"* %193 to i64*
  store i64 %144, i64* %196, align 8
  %197 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %192, i64 %167, i32 1
  %198 = bitcast %"class.spvtools::opt::BasicBlock"** %197 to i64*
  store i64 %145, i64* %198, align 8
  %199 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %193, i64 1
  %200 = ptrtoint %"struct.spvtools::opt::Edge"* %199 to i64
  %201 = bitcast %"struct.std::__1::__hash_node_base.991"* %143 to %"struct.spvtools::opt::Edge"**
  %202 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %201, align 8
  %203 = load i64, i64* %163, align 8
  %204 = ptrtoint %"struct.spvtools::opt::Edge"* %202 to i64
  %205 = sub i64 %203, %204
  %206 = ashr exact i64 %205, 4
  %207 = sub nsw i64 0, %206
  %208 = getelementptr inbounds %"struct.spvtools::opt::Edge", %"struct.spvtools::opt::Edge"* %193, i64 %207
  %209 = ptrtoint %"struct.spvtools::opt::Edge"* %208 to i64
  %210 = icmp sgt i64 %205, 0
  br i1 %210, label %211, label %215

211:                                              ; preds = %190
  %212 = bitcast %"struct.spvtools::opt::Edge"* %208 to i8*
  %213 = bitcast %"struct.spvtools::opt::Edge"* %202 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* align 8 %213, i64 %205, i1 false) #11
  %214 = load %"struct.spvtools::opt::Edge"*, %"struct.spvtools::opt::Edge"** %201, align 8
  br label %215

215:                                              ; preds = %211, %190
  %216 = phi %"struct.spvtools::opt::Edge"* [ %202, %190 ], [ %214, %211 ]
  store i64 %209, i64* %164, align 8
  store i64 %200, i64* %163, align 8
  store i64 %195, i64* %173, align 8
  %217 = icmp eq %"struct.spvtools::opt::Edge"* %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %215
  %219 = bitcast %"struct.spvtools::opt::Edge"* %216 to i8*
  call void @_ZdlPv(i8* %219) #10
  br label %220

220:                                              ; preds = %154, %215, %218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.991"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSQ_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.987"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1218"* dereferenceable(8), %"class.std::__1::tuple.1109"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.991"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.991"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.991"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.991"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.991"* %65 to %"class.spvtools::opt::BasicBlock"**
  %67 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::BasicBlock"* %67, %24
  br i1 %68, label %159, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 48) #10, !noalias !42
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1218"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !42
  %75 = load i64, i64* %74, align 8, !noalias !42
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !42
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 24, i1 false) #11, !noalias !42
  %78 = getelementptr inbounds i8, i8* %71, i64 8
  %79 = bitcast i8* %78 to i64*
  store i64 %20, i64* %79, align 8, !noalias !42
  %80 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.991"**
  store %"struct.std::__1::__hash_node_base.991"* null, %"struct.std::__1::__hash_node_base.991"** %80, align 8, !noalias !42
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 2, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  %84 = uitofp i64 %83 to float
  %85 = uitofp i64 %22 to float
  %86 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 3, i32 0, i32 0
  %87 = load float, float* %86, align 4
  %88 = fmul float %87, %85
  %89 = fcmp olt float %88, %84
  %90 = or i1 %23, %89
  br i1 %90, label %91, label %114

91:                                               ; preds = %69
  %92 = shl i64 %22, 1
  %93 = icmp ult i64 %22, 3
  %94 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !3
  %95 = icmp ugt i64 %94, 1
  %96 = or i1 %93, %95
  %97 = zext i1 %96 to i64
  %98 = or i64 %92, %97
  %99 = fdiv float %84, %87
  %100 = tail call float @llvm.ceil.f32(float %99) #11
  %101 = fptoui float %100 to i64
  %102 = icmp ult i64 %98, %101
  %103 = select i1 %102, i64 %101, i64 %98
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE6rehashEm(%"class.std::__1::__hash_table.987"* %0, i64 %103)
  %104 = load i64, i64* %21, align 8
  %105 = tail call i64 @llvm.ctpop.i64(i64 %104) #11, !range !3
  %106 = icmp ugt i64 %105, 1
  br i1 %106, label %110, label %107

107:                                              ; preds = %91
  %108 = add i64 %104, -1
  %109 = and i64 %108, %20
  br label %114

110:                                              ; preds = %91
  %111 = icmp ult i64 %20, %104
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = urem i64 %20, %104
  br label %114

114:                                              ; preds = %112, %110, %107, %69
  %115 = phi i64 [ %22, %69 ], [ %104, %107 ], [ %104, %110 ], [ %104, %112 ]
  %116 = phi i64 [ %70, %69 ], [ %109, %107 ], [ %20, %110 ], [ %113, %112 ]
  %117 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %118, i64 %116
  %120 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.991"* %120, null
  br i1 %121, label %122, label %148

122:                                              ; preds = %114
  %123 = getelementptr inbounds %"class.std::__1::__hash_table.987", %"class.std::__1::__hash_table.987"* %0, i64 0, i32 1, i32 0, i32 0
  %124 = bitcast %"struct.std::__1::__hash_node_base.991"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast i8* %71 to i64*
  store i64 %125, i64* %126, align 8
  %127 = bitcast %"struct.std::__1::__hash_node_base.991"* %123 to i8**
  store i8* %71, i8** %127, align 8
  store %"struct.std::__1::__hash_node_base.991"* %123, %"struct.std::__1::__hash_node_base.991"** %119, align 8
  %128 = load %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %80, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.991"* %128, null
  br i1 %129, label %155, label %130

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991", %"struct.std::__1::__hash_node_base.991"* %128, i64 1
  %132 = bitcast %"struct.std::__1::__hash_node_base.991"* %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = tail call i64 @llvm.ctpop.i64(i64 %115) #11, !range !3
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  %137 = add i64 %115, -1
  %138 = and i64 %133, %137
  br label %143

139:                                              ; preds = %130
  %140 = icmp ult i64 %133, %115
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = urem i64 %133, %115
  br label %143

143:                                              ; preds = %136, %139, %141
  %144 = phi i64 [ %138, %136 ], [ %142, %141 ], [ %133, %139 ]
  %145 = load %"struct.std::__1::__hash_node_base.991"**, %"struct.std::__1::__hash_node_base.991"*** %117, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.991"*, %"struct.std::__1::__hash_node_base.991"** %145, i64 %144
  %147 = bitcast %"struct.std::__1::__hash_node_base.991"** %146 to i8**
  br label %153

148:                                              ; preds = %114
  %149 = bitcast %"struct.std::__1::__hash_node_base.991"* %120 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast i8* %71 to i64*
  store i64 %150, i64* %151, align 8
  %152 = bitcast %"struct.std::__1::__hash_node_base.991"* %120 to i8**
  br label %153

153:                                              ; preds = %143, %148
  %154 = phi i8** [ %152, %148 ], [ %147, %143 ]
  store i8* %71, i8** %154, align 8
  br label %155

155:                                              ; preds = %153, %122
  %156 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.991"*
  %157 = load i64, i64* %81, align 8
  %158 = add i64 %157, 1
  store i64 %158, i64* %81, align 8
  br label %159

159:                                              ; preds = %64, %155
  %160 = phi i8 [ 1, %155 ], [ 0, %64 ]
  %161 = phi %"struct.std::__1::__hash_node_base.991"* [ %156, %155 ], [ %47, %64 ]
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.991"*, i8 } undef, %"struct.std::__1::__hash_node_base.991"* %161, 0
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.991"*, i8 } %162, i8 %160, 1
  ret { %"struct.std::__1::__hash_node_base.991"*, i8 } %163
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #9

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK8spvtools3opt10BasicBlock5ctailEv: argument 0"}
!6 = distinct !{!6, !"_ZNK8spvtools3opt10BasicBlock5ctailEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__16__treeIN8spvtools3opt4EdgeENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__16__treeIN8spvtools3opt4EdgeENS_4lessIS3_EENS_9allocatorIS3_EEE16__construct_nodeIJRKS3_EEENS_10unique_ptrINS_11__tree_nodeIS3_PvEENS_22__tree_node_destructorINS6_ISF_EEEEEEDpOT_"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!15 = distinct !{!15, !11}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__112__hash_tableIPN8spvtools3opt11InstructionENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!19 = distinct !{!19, !11}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!23 = distinct !{!23, !11}
!24 = distinct !{!24, !11}
!25 = distinct !{!25, !11}
!26 = distinct !{!26, !11}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !11}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !11}
!32 = distinct !{!32, !11}
!33 = distinct !{!33, !11}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionENS3_13SSAPropagator10PropStatusEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionENS3_13SSAPropagator10PropStatusEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!37 = distinct !{!37, !11}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS8_ISX_EEEEEEmOT_DpOT0_: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS8_ISX_EEEEEEmOT_DpOT0_"}
!41 = distinct !{!41, !11}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS8_ISY_EEEEEEmOT_DpOT0_: argument 0"}
!44 = distinct !{!44, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_6vectorINS3_4EdgeENS_9allocatorIS7_EEEEEENS_22__unordered_map_hasherIS5_SB_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SB_SG_SE_Lb1EEENS8_ISB_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSQ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINS8_ISY_EEEEEEmOT_DpOT0_"}
