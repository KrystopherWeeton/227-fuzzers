; ModuleID = '../../media/base/subsample_entry.cc'
source_filename = "../../media/base/subsample_entry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"*, %"class.std::__1::__compressed_pair" }
%"struct.media::SubsampleEntry" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.media::SubsampleEntry"* }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media25VerifySubsamplesMatchSizeERKNSt3__16vectorINS_14SubsampleEntryENS0_9allocatorIS2_EEEEm(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %6 = load %"struct.media::SubsampleEntry"*, %"struct.media::SubsampleEntry"** %5, align 8
  %7 = icmp eq %"struct.media::SubsampleEntry"* %4, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %35, %2
  %9 = phi i64 [ 0, %2 ], [ %36, %35 ]
  %10 = phi i8 [ 1, %2 ], [ %37, %35 ]
  %11 = icmp ne i8 %10, 0
  %12 = icmp eq i64 %9, %1
  %13 = and i1 %12, %11
  ret i1 %13

14:                                               ; preds = %2, %35
  %15 = phi %"struct.media::SubsampleEntry"* [ %38, %35 ], [ %4, %2 ]
  %16 = phi i8 [ %37, %35 ], [ 1, %2 ]
  %17 = phi i64 [ %36, %35 ], [ 0, %2 ]
  %18 = icmp eq i8 %16, 0
  br i1 %18, label %35, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %15, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %17, i64 %22) #2
  %24 = extractvalue { i64, i1 } %23, 1
  br i1 %24, label %35, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %15, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = extractvalue { i64, i1 } %23, 0
  %29 = zext i32 %27 to i64
  %30 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %28, i64 %29) #2
  %31 = extractvalue { i64, i1 } %30, 1
  %32 = extractvalue { i64, i1 } %30, 0
  %33 = xor i1 %31, true
  %34 = zext i1 %33 to i8
  br label %35

35:                                               ; preds = %14, %19, %25
  %36 = phi i64 [ %32, %25 ], [ 0, %19 ], [ 0, %14 ]
  %37 = phi i8 [ %34, %25 ], [ 0, %19 ], [ 0, %14 ]
  %38 = getelementptr inbounds %"struct.media::SubsampleEntry", %"struct.media::SubsampleEntry"* %15, i64 1
  %39 = icmp eq %"struct.media::SubsampleEntry"* %38, %6
  br i1 %39, label %8, label %14
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
