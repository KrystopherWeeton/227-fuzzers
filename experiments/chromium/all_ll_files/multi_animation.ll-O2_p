; ModuleID = '../../ui/gfx/animation/multi_animation.cc'
source_filename = "../../ui/gfx/animation/multi_animation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.gfx::MultiAnimation" = type <{ %"class.gfx::Animation", %"class.std::__1::vector", %"class.base::TimeDelta", double, i64, i8, [7 x i8] }>
%"class.gfx::Animation" = type { %"class.gfx::AnimationContainerElement", %"class.base::TimeDelta", i8, %"class.gfx::AnimationDelegate"*, %class.scoped_refptr, %"class.base::TimeTicks" }
%"class.gfx::AnimationContainerElement" = type { i32 (...)** }
%"class.gfx::AnimationDelegate" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.gfx::AnimationContainer"* }
%"class.gfx::AnimationContainer" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gfx::MultiAnimation::Part"*, %"struct.gfx::MultiAnimation::Part"*, %"class.std::__1::__compressed_pair" }
%"struct.gfx::MultiAnimation::Part" = type { %"class.base::TimeDelta", i32, double, double }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.gfx::MultiAnimation::Part"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK4base9TimeDeltadvES0_ = comdat any

$_ZN3gfx9Animation16AnimationStartedEv = comdat any

$_ZN3gfx9Animation16AnimationStoppedEv = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

@_ZN3gfx14MultiAnimation21kDefaultTimerIntervalE = hidden local_unnamed_addr constant %"class.base::TimeDelta" { i64 20000 }, align 8
@_ZTVN3gfx14MultiAnimationE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::MultiAnimation"*, i64)* @_ZN3gfx14MultiAnimation12SetStartTimeEN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.gfx::MultiAnimation"*, i64)* @_ZN3gfx14MultiAnimation4StepEN4base9TimeTicksE to i8*), i8* bitcast (i64 (%"class.gfx::Animation"*)* @_ZNK3gfx9Animation16GetTimerIntervalEv to i8*), i8* bitcast (void (%"class.gfx::MultiAnimation"*)* @_ZN3gfx14MultiAnimationD2Ev to i8*), i8* bitcast (void (%"class.gfx::MultiAnimation"*)* @_ZN3gfx14MultiAnimationD0Ev to i8*), i8* bitcast (double (%"class.gfx::MultiAnimation"*)* @_ZNK3gfx14MultiAnimation15GetCurrentValueEv to i8*), i8* bitcast (void (%"class.gfx::Animation"*)* @_ZN3gfx9Animation16AnimationStartedEv to i8*), i8* bitcast (void (%"class.gfx::Animation"*)* @_ZN3gfx9Animation16AnimationStoppedEv to i8*), i8* bitcast (i1 (%"class.gfx::Animation"*)* @_ZN3gfx9Animation26ShouldSendCanceledFromStopEv to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1

@_ZN3gfx14MultiAnimationC1ERKNSt3__16vectorINS0_4PartENS1_9allocatorIS3_EEEEN4base9TimeDeltaE = hidden unnamed_addr alias void (%"class.gfx::MultiAnimation"*, %"class.std::__1::vector"*, i64), void (%"class.gfx::MultiAnimation"*, %"class.std::__1::vector"*, i64)* @_ZN3gfx14MultiAnimationC2ERKNSt3__16vectorINS0_4PartENS1_9allocatorIS3_EEEEN4base9TimeDeltaE
@_ZN3gfx14MultiAnimationD1Ev = hidden unnamed_addr alias void (%"class.gfx::MultiAnimation"*), void (%"class.gfx::MultiAnimation"*)* @_ZN3gfx14MultiAnimationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx14MultiAnimationC2ERKNSt3__16vectorINS0_4PartENS1_9allocatorIS3_EEEEN4base9TimeDeltaE(%"class.gfx::MultiAnimation"*, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 0
  tail call void @_ZN3gfx9AnimationC2EN4base9TimeDeltaE(%"class.gfx::Animation"* %5, i64 %2) #8
  %6 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3gfx14MultiAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %10 = bitcast %"struct.gfx::MultiAnimation::Part"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 5
  %16 = icmp eq i64 %14, 0
  %17 = inttoptr i64 %13 to %"struct.gfx::MultiAnimation::Part"*
  %18 = inttoptr i64 %11 to %"struct.gfx::MultiAnimation::Part"*
  br i1 %16, label %48, label %19

19:                                               ; preds = %3
  %20 = icmp ugt i64 %15, 576460752303423487
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #9
  unreachable

23:                                               ; preds = %19
  %24 = tail call i8* @_Znwm(i64 %14) #10
  %25 = bitcast i8* %24 to %"struct.gfx::MultiAnimation::Part"*
  %26 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1, i32 0, i32 1
  %27 = bitcast %"struct.gfx::MultiAnimation::Part"** %26 to i8**
  store i8* %24, i8** %27, align 8
  %28 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %24, i8** %28, align 8
  %29 = getelementptr inbounds %"struct.gfx::MultiAnimation::Part", %"struct.gfx::MultiAnimation::Part"* %25, i64 %15
  %30 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.gfx::MultiAnimation::Part"* %29, %"struct.gfx::MultiAnimation::Part"** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %32 = load %"struct.gfx::MultiAnimation::Part"*, %"struct.gfx::MultiAnimation::Part"** %31, align 8
  %33 = load i64, i64* %10, align 8
  %34 = bitcast %"struct.gfx::MultiAnimation::Part"** %26 to i64*
  %35 = ptrtoint i8* %24 to i64
  %36 = ptrtoint %"struct.gfx::MultiAnimation::Part"* %32 to i64
  %37 = sub i64 %33, %36
  %38 = icmp sgt i64 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %23
  %40 = lshr exact i64 %37, 5
  %41 = bitcast %"struct.gfx::MultiAnimation::Part"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %41, i64 %37, i1 false) #8
  %42 = getelementptr inbounds %"struct.gfx::MultiAnimation::Part", %"struct.gfx::MultiAnimation::Part"* %25, i64 %40
  %43 = ptrtoint %"struct.gfx::MultiAnimation::Part"* %42 to i64
  br label %44

44:                                               ; preds = %39, %23
  %45 = phi i64 [ %43, %39 ], [ %35, %23 ]
  store i64 %45, i64* %34, align 8
  %46 = load %"struct.gfx::MultiAnimation::Part"*, %"struct.gfx::MultiAnimation::Part"** %31, align 8
  %47 = load %"struct.gfx::MultiAnimation::Part"*, %"struct.gfx::MultiAnimation::Part"** %9, align 8
  br label %48

48:                                               ; preds = %3, %44
  %49 = phi %"struct.gfx::MultiAnimation::Part"* [ %18, %3 ], [ %47, %44 ]
  %50 = phi %"struct.gfx::MultiAnimation::Part"* [ %17, %3 ], [ %46, %44 ]
  %51 = icmp eq %"struct.gfx::MultiAnimation::Part"* %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %54

54:                                               ; preds = %75, %52
  %55 = phi i64 [ 0, %52 ], [ %76, %75 ]
  %56 = phi %"struct.gfx::MultiAnimation::Part"* [ %50, %52 ], [ %77, %75 ]
  %57 = getelementptr inbounds %"struct.gfx::MultiAnimation::Part", %"struct.gfx::MultiAnimation::Part"* %56, i64 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, -9223372036854775807
  %60 = icmp ult i64 %59, 2
  br i1 %60, label %68, label %61

61:                                               ; preds = %54
  %62 = icmp slt i64 %58, 0
  %63 = select i1 %62, i64 -9223372036854775808, i64 9223372036854775807
  %64 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %55, i64 %58) #8
  %65 = extractvalue { i64, i1 } %64, 1
  %66 = extractvalue { i64, i1 } %64, 0
  %67 = select i1 %65, i64 %63, i64 %66, !prof !2
  br label %75

68:                                               ; preds = %54
  %69 = add i64 %55, -9223372036854775807
  %70 = icmp ugt i64 %69, 1
  %71 = icmp eq i64 %58, %55
  %72 = or i1 %70, %71
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #8
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #8
  br label %75

75:                                               ; preds = %73, %68, %61
  %76 = phi i64 [ %67, %61 ], [ %58, %68 ], [ %58, %73 ]
  %77 = getelementptr inbounds %"struct.gfx::MultiAnimation::Part", %"struct.gfx::MultiAnimation::Part"* %56, i64 1
  %78 = icmp eq %"struct.gfx::MultiAnimation::Part"* %77, %49
  br i1 %78, label %79, label %54

79:                                               ; preds = %75, %48
  %80 = phi i64 [ 0, %48 ], [ %76, %75 ]
  %81 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 2, i32 0
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 3
  %83 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 5
  %84 = bitcast double* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 16, i1 false)
  store i8 1, i8* %83, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3gfx9AnimationC2EN4base9TimeDeltaE(%"class.gfx::Animation"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx14MultiAnimationD2Ev(%"class.gfx::MultiAnimation"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3gfx14MultiAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.gfx::MultiAnimation::Part"*, %"struct.gfx::MultiAnimation::Part"** %3, align 8
  %5 = icmp eq %"struct.gfx::MultiAnimation::Part"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.gfx::MultiAnimation::Part"* %4 to i64
  %8 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.gfx::MultiAnimation::Part"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.gfx::MultiAnimation::Part"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 0
  tail call void @_ZN3gfx9AnimationD2Ev(%"class.gfx::Animation"* %12) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx9AnimationD2Ev(%"class.gfx::Animation"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx14MultiAnimationD0Ev(%"class.gfx::MultiAnimation"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3gfx14MultiAnimationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"struct.gfx::MultiAnimation::Part"*, %"struct.gfx::MultiAnimation::Part"** %3, align 8
  %5 = icmp eq %"struct.gfx::MultiAnimation::Part"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.gfx::MultiAnimation::Part"* %4 to i64
  %8 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"struct.gfx::MultiAnimation::Part"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.gfx::MultiAnimation::Part"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 0
  tail call void @_ZN3gfx9AnimationD2Ev(%"class.gfx::Animation"* %12) #8
  %13 = bitcast %"class.gfx::MultiAnimation"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK3gfx14MultiAnimation15GetCurrentValueEv(%"class.gfx::MultiAnimation"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"struct.gfx::MultiAnimation::Part"*, %"struct.gfx::MultiAnimation::Part"** %4, align 8
  %6 = getelementptr inbounds %"struct.gfx::MultiAnimation::Part", %"struct.gfx::MultiAnimation::Part"* %5, i64 %3, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 3
  %9 = load double, double* %8, align 8
  %10 = tail call double @_ZN3gfx5Tween14CalculateValueENS0_4TypeEd(i32 %7, double %9) #8
  %11 = getelementptr inbounds %"struct.gfx::MultiAnimation::Part", %"struct.gfx::MultiAnimation::Part"* %5, i64 %3, i32 2
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds %"struct.gfx::MultiAnimation::Part", %"struct.gfx::MultiAnimation::Part"* %5, i64 %3, i32 3
  %14 = load double, double* %13, align 8
  %15 = tail call double @_ZN3gfx5Tween18DoubleValueBetweenEddd(double %10, double %12, double %14) #8
  ret double %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare double @_ZN3gfx5Tween18DoubleValueBetweenEddd(double, double, double) local_unnamed_addr #2

declare double @_ZN3gfx5Tween14CalculateValueENS0_4TypeEd(i32, double) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx14MultiAnimation4StepEN4base9TimeTicksE(%"class.gfx::MultiAnimation"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = bitcast %"class.gfx::MultiAnimation"* %0 to double (%"class.gfx::MultiAnimation"*)***
  %5 = load double (%"class.gfx::MultiAnimation"*)**, double (%"class.gfx::MultiAnimation"*)*** %4, align 8
  %6 = getelementptr inbounds double (%"class.gfx::MultiAnimation"*)*, double (%"class.gfx::MultiAnimation"*)** %5, i64 5
  %7 = load double (%"class.gfx::MultiAnimation"*)*, double (%"class.gfx::MultiAnimation"*)** %6, align 8
  %8 = tail call double %7(%"class.gfx::MultiAnimation"* %0) #8
  %9 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = sub nsw i64 %1, %15
  store i64 %16, i64* %12, align 8
  %17 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 2, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp slt i64 %16, %18
  br i1 %19, label %34, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 5
  %22 = load i8, i8* %21, align 8, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1
  %26 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1, i32 0, i32 1
  %27 = bitcast %"struct.gfx::MultiAnimation::Part"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::vector"* %25 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = sub i64 %28, %30
  %32 = ashr exact i64 %31, 5
  %33 = add nsw i64 %32, -1
  store i64 %33, i64* %9, align 8
  br label %75

34:                                               ; preds = %2, %20
  %35 = add i64 %16, -9223372036854775807
  %36 = icmp ult i64 %35, 2
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  switch i64 %18, label %38 [
    i64 -9223372036854775808, label %40
    i64 9223372036854775807, label %40
    i64 0, label %40
  ]

38:                                               ; preds = %37
  %39 = srem i64 %16, %18
  br label %40

40:                                               ; preds = %34, %37, %37, %37, %38
  %41 = phi i64 [ %39, %38 ], [ %16, %37 ], [ %16, %34 ], [ %16, %37 ], [ %16, %37 ]
  store i64 %41, i64* %12, align 8
  %42 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1
  %43 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1, i32 0, i32 1
  %44 = bitcast %"struct.gfx::MultiAnimation::Part"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector"* %42 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %45, %47
  %49 = inttoptr i64 %47 to %"struct.gfx::MultiAnimation::Part"*
  br i1 %48, label %70, label %50

50:                                               ; preds = %40, %57
  %51 = phi %"struct.gfx::MultiAnimation::Part"* [ %65, %57 ], [ %49, %40 ]
  %52 = phi i64 [ %58, %57 ], [ %41, %40 ]
  %53 = phi i64 [ %59, %57 ], [ 0, %40 ]
  %54 = getelementptr inbounds %"struct.gfx::MultiAnimation::Part", %"struct.gfx::MultiAnimation::Part"* %51, i64 %53, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = icmp slt i64 %52, %55
  br i1 %56, label %66, label %57

57:                                               ; preds = %50
  %58 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %55) #8
  store i64 %58, i64* %12, align 8
  %59 = add nuw i64 %53, 1
  %60 = load i64, i64* %44, align 8
  %61 = load i64, i64* %46, align 8
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 5
  %64 = icmp ult i64 %59, %63
  %65 = inttoptr i64 %61 to %"struct.gfx::MultiAnimation::Part"*
  br i1 %64, label %50, label %68

66:                                               ; preds = %50
  store i64 %53, i64* %9, align 8
  %67 = getelementptr inbounds %"struct.gfx::MultiAnimation::Part", %"struct.gfx::MultiAnimation::Part"* %51, i64 %53
  br label %70

68:                                               ; preds = %57
  %69 = inttoptr i64 %61 to %"struct.gfx::MultiAnimation::Part"*
  br label %70

70:                                               ; preds = %68, %40, %66
  %71 = phi %"struct.gfx::MultiAnimation::Part"* [ %67, %66 ], [ %49, %40 ], [ %69, %68 ]
  %72 = getelementptr inbounds %"struct.gfx::MultiAnimation::Part", %"struct.gfx::MultiAnimation::Part"* %71, i64 0, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %3, i64 %73)
  br label %75

75:                                               ; preds = %70, %24
  %76 = phi double [ %74, %70 ], [ 1.000000e+00, %24 ]
  %77 = phi i1 [ false, %70 ], [ true, %24 ]
  %78 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 3
  store double %76, double* %78, align 8
  %79 = load double (%"class.gfx::MultiAnimation"*)**, double (%"class.gfx::MultiAnimation"*)*** %4, align 8
  %80 = getelementptr inbounds double (%"class.gfx::MultiAnimation"*)*, double (%"class.gfx::MultiAnimation"*)** %79, i64 5
  %81 = load double (%"class.gfx::MultiAnimation"*)*, double (%"class.gfx::MultiAnimation"*)** %80, align 8
  %82 = call double %81(%"class.gfx::MultiAnimation"* %0) #8
  %83 = fcmp une double %82, %8
  br i1 %83, label %87, label %84

84:                                               ; preds = %75
  %85 = load i64, i64* %9, align 8
  %86 = icmp eq i64 %85, %10
  br i1 %86, label %96, label %87

87:                                               ; preds = %84, %75
  %88 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 0, i32 3
  %89 = load %"class.gfx::AnimationDelegate"*, %"class.gfx::AnimationDelegate"** %88, align 8
  %90 = icmp eq %"class.gfx::AnimationDelegate"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.gfx::AnimationDelegate"* %89 to void (%"class.gfx::AnimationDelegate"*, %"class.gfx::Animation"*)***
  %93 = load void (%"class.gfx::AnimationDelegate"*, %"class.gfx::Animation"*)**, void (%"class.gfx::AnimationDelegate"*, %"class.gfx::Animation"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.gfx::AnimationDelegate"*, %"class.gfx::Animation"*)*, void (%"class.gfx::AnimationDelegate"*, %"class.gfx::Animation"*)** %93, i64 3
  %95 = load void (%"class.gfx::AnimationDelegate"*, %"class.gfx::Animation"*)*, void (%"class.gfx::AnimationDelegate"*, %"class.gfx::Animation"*)** %94, align 8
  call void %95(%"class.gfx::AnimationDelegate"* nonnull %89, %"class.gfx::Animation"* %13) #8
  br label %96

96:                                               ; preds = %87, %84, %91
  br i1 %77, label %97, label %98

97:                                               ; preds = %96
  call void @_ZN3gfx9Animation4StopEv(%"class.gfx::Animation"* %13) #8
  br label %98

98:                                               ; preds = %97, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"struct.gfx::MultiAnimation::Part"* @_ZN3gfx14MultiAnimation7GetPartEPN4base9TimeDeltaEPm(%"class.gfx::MultiAnimation"* nocapture readonly, %"class.base::TimeDelta"*, i64* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 1, i32 0, i32 1
  %6 = bitcast %"struct.gfx::MultiAnimation::Part"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %12 = inttoptr i64 %9 to %"struct.gfx::MultiAnimation::Part"*
  br i1 %10, label %37, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %1, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  br label %16

16:                                               ; preds = %13, %23
  %17 = phi i64 [ %15, %13 ], [ %24, %23 ]
  %18 = phi %"struct.gfx::MultiAnimation::Part"* [ %12, %13 ], [ %31, %23 ]
  %19 = phi i64 [ 0, %13 ], [ %25, %23 ]
  %20 = getelementptr inbounds %"struct.gfx::MultiAnimation::Part", %"struct.gfx::MultiAnimation::Part"* %18, i64 %19, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp slt i64 %17, %21
  br i1 %22, label %32, label %23

23:                                               ; preds = %16
  %24 = tail call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* %1, i64 %21) #8
  store i64 %24, i64* %14, align 8
  %25 = add nuw i64 %19, 1
  %26 = load i64, i64* %6, align 8
  %27 = load i64, i64* %8, align 8
  %28 = sub i64 %26, %27
  %29 = ashr exact i64 %28, 5
  %30 = icmp ult i64 %25, %29
  %31 = inttoptr i64 %27 to %"struct.gfx::MultiAnimation::Part"*
  br i1 %30, label %16, label %35

32:                                               ; preds = %16
  store i64 %19, i64* %2, align 8
  %33 = load %"struct.gfx::MultiAnimation::Part"*, %"struct.gfx::MultiAnimation::Part"** %11, align 8
  %34 = getelementptr inbounds %"struct.gfx::MultiAnimation::Part", %"struct.gfx::MultiAnimation::Part"* %33, i64 %19
  br label %37

35:                                               ; preds = %23
  %36 = inttoptr i64 %27 to %"struct.gfx::MultiAnimation::Part"*
  br label %37

37:                                               ; preds = %35, %3, %32
  %38 = phi %"struct.gfx::MultiAnimation::Part"* [ %34, %32 ], [ %12, %3 ], [ %36, %35 ]
  ret %"struct.gfx::MultiAnimation::Part"* %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0)) #8
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0)) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

declare void @_ZN3gfx9Animation4StopEv(%"class.gfx::Animation"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx14MultiAnimation12SetStartTimeEN4base9TimeTicksE(%"class.gfx::MultiAnimation"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 0
  tail call void @_ZN3gfx9Animation12SetStartTimeEN4base9TimeTicksE(%"class.gfx::Animation"* %3, i64 %1) #8
  %4 = getelementptr inbounds %"class.gfx::MultiAnimation", %"class.gfx::MultiAnimation"* %0, i64 0, i32 3
  %5 = bitcast double* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN3gfx9Animation12SetStartTimeEN4base9TimeTicksE(%"class.gfx::Animation"*, i64) unnamed_addr #2

declare i64 @_ZNK3gfx9Animation16GetTimerIntervalEv(%"class.gfx::Animation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx9Animation16AnimationStartedEv(%"class.gfx::Animation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gfx9Animation16AnimationStoppedEv(%"class.gfx::Animation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN3gfx9Animation26ShouldSendCanceledFromStopEv(%"class.gfx::Animation"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #8
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !2
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #8
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %26, i8* %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #8
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #5

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
