; ModuleID = '../../third_party/skia/src/gpu/gl/GrGLProgram.cpp'
source_filename = "../../third_party/skia/src/gpu/gl/GrGLProgram.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.GrGLProgram = type <{ %class.SkRefCnt.base, %"struct.GrGLProgram::RenderTargetState", %struct.GrGLSLBuiltinUniformHandles, i32, [4 x i8], %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.290", %"class.std::__1::vector", %"class.std::__1::unique_ptr.306", i32, i32, i32, i32, %class.GrGLGpu*, %class.GrGLProgramDataManager, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.GrGLProgram::RenderTargetState" = type { %struct.SkISize, i32 }
%struct.SkISize = type { i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.277 }
%class.SkTArray.277 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.SkString = type { %class.sk_sp.26 }
%class.sk_sp.26 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.278, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.278 = type { %class.SkAlignedSTStorage.279, %class.SkTArray.280 }
%class.SkAlignedSTStorage.279 = type { [8 x i8] }
%class.SkTArray.280 = type { %"class.std::__1::unique_ptr.281"*, i64 }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.296"*, %"class.std::__1::unique_ptr.296"*, %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray.25, %class.SkTArray.299 }
%class.SkTArray.25 = type { %class.SkString*, i64 }
%class.SkTArray.299 = type { %"class.std::__1::unique_ptr.296"*, i64 }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.std::__1::unique_ptr.296"* }
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.GrGLProgram::Attribute"* }
%"struct.GrGLProgram::Attribute" = type { i32, i32, i64, i32 }
%class.GrGLProgramDataManager = type { %class.GrGLSLProgramDataManager, %class.SkTArray.312, %class.GrGLGpu* }
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkTArray.312 = type { %"struct.GrGLProgramDataManager::Uniform"*, i64 }
%"struct.GrGLProgramDataManager::Uniform" = type { i32 }
%class.GrGLGpu = type <{ %class.GrGpu, %"class.std::__1::unique_ptr.136", %class.sk_sp.264, i32, i32, %class.sk_sp.273, i32, i32, i32, %struct.anon, %class.anon, %struct.GrNativeRect, %"class.GrGLGpu::HWVertexArrayState", i8, [3 x i8], [6 x %struct.anon.317], %struct.anon.318, i32, i32, i32, %class.GrStencilSettings, i32, i32, i32, %"class.GrGpuResource::UniqueID", i8, [3 x i8], i32, [4 x i8], %class.SkAutoTArray.319, [4 x float], i32, [3 x %struct.anon.326], [4 x i8], %class.sk_sp.327, [4 x %struct.anon.328], %class.sk_sp.327, i8, [7 x i8], i64, %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.335", %class.GrFinishCallbacks, i8, [7 x i8] }>
%class.GrGpu = type { %class.SkRefCnt.base, %"class.GrGpu::Stats", %class.sk_sp, %"class.std::__1::unique_ptr", i32, %class.GrDirectContext*, %class.SkSTArray, i8, i32 }
%"class.GrGpu::Stats" = type { i8 }
%class.sk_sp = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.1, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.1 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Compiler"* }
%"class.SkSL::Compiler" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %class.sk_sp.67, %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.110", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.129" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.4", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.3 }
%class.sk_sp.3 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray, %class.SkTHashMap, %class.SkTHashMap.14, %class.SkTArray.23, %class.SkTArray.25, i32, i8, [3 x i8] }>
%class.SkTArray = type { %"class.std::__1::unique_ptr.7"*, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.25, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%class.SkTHashMap.14 = type { %class.SkTHashTable.15 }
%class.SkTHashTable.15 = type { i32, i32, %class.SkAutoTArray.16 }
%class.SkAutoTArray.16 = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.388" }
%"struct.std::__1::pair.388" = type { i32, %class.SkTArray.389* }
%class.SkTArray.389 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.23 = type { %"class.std::__1::unique_ptr.24"*, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.389, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.39 }
%class.SkFibBlockSizes.39 = type { i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.67 = type { %class.GrGpu* }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.80, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap.98, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon, [4 x i8] }>
%union.anon = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.71, i8* }
%class.sk_sp.71 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable.72 }
%class.SkTHashTable.72 = type { i32, i32, %class.SkAutoTArray.73 }
%class.SkAutoTArray.73 = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.80 = type { %class.SkTHashTable.81 }
%class.SkTHashTable.81 = type { i32, i32, %class.SkAutoTArray.82 }
%class.SkAutoTArray.82 = type { %"class.std::__1::unique_ptr.83" }
%"class.std::__1::unique_ptr.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.89, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.89 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.90" }
%"struct.std::__1::atomic.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__cxx_atomic_impl.93" }
%"struct.std::__1::__cxx_atomic_impl.93" = type { %"struct.std::__1::__cxx_atomic_base_impl.94" }
%"struct.std::__1::__cxx_atomic_base_impl.94" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.95, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.95 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.96 }
%class.sk_sp.96 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.97, void (i8*)*, i8* }
%class.SkNVRefCnt.97 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap.98 = type { %class.SkTHashTable.99 }
%class.SkTHashTable.99 = type { i32, i32, %class.SkAutoTArray.100 }
%class.SkAutoTArray.100 = type { %"class.std::__1::unique_ptr.101" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp, %class.sk_sp.113, %class.sk_sp.113 }
%class.sk_sp.113 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.135 }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray.135 = type { %"struct.GrGpu::SubmittedProc"*, i64 }
%"struct.GrGpu::SubmittedProc" = type { void (i8*, i1)*, i8* }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %class.GrGLContext* }
%class.GrGLContext = type { %class.GrGLContextInfo }
%class.GrGLContextInfo = type { i32 (...)**, %class.sk_sp.139, %struct.GrGLDriverInfo, i32, %class.sk_sp.246 }
%class.sk_sp.139 = type { %struct.GrGLInterface* }
%struct.GrGLInterface = type { %class.SkRefCnt.base, %union.anon.140, %class.GrGLExtensions, %"struct.GrGLInterface::Functions" }
%union.anon.140 = type { i32 }
%class.GrGLExtensions = type { i8, %class.SkTArray.25 }
%"struct.GrGLInterface::Functions" = type { %class.GrGLFunction, %class.GrGLFunction.141, %class.GrGLFunction.141, %class.GrGLFunction.142, %class.GrGLFunction.141, %class.GrGLFunction.142, %class.GrGLFunction.143, %class.GrGLFunction.141, %class.GrGLFunction.141, %class.GrGLFunction.141, %class.GrGLFunction.141, %class.GrGLFunction, %class.GrGLFunction.144, %class.GrGLFunction.145, %class.GrGLFunction, %class.GrGLFunction.141, %class.GrGLFunction.146, %class.GrGLFunction.147, %class.GrGLFunction.148, %class.GrGLFunction.149, %class.GrGLFunction, %class.GrGLFunction.145, %class.GrGLFunction.150, %class.GrGLFunction.151, %class.GrGLFunction.152, %class.GrGLFunction.153, %class.GrGLFunction, %class.GrGLFunction.154, %class.GrGLFunction.155, %class.GrGLFunction.156, %class.GrGLFunction.157, %class.GrGLFunction.149, %class.GrGLFunction, %class.GrGLFunction.158, %class.GrGLFunction.158, %class.GrGLFunction.158, %class.GrGLFunction, %class.GrGLFunction.158, %class.GrGLFunction.158, %class.GrGLFunction.158, %class.GrGLFunction, %class.GrGLFunction.158, %class.GrGLFunction.158, %class.GrGLFunction.159, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.160, %class.GrGLFunction.161, %class.GrGLFunction.162, %class.GrGLFunction, %class.GrGLFunction.158, %class.GrGLFunction.163, %class.GrGLFunction.164, %class.GrGLFunction.165, %class.GrGLFunction.166, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.144, %class.GrGLFunction, %class.GrGLFunction.144, %class.GrGLFunction.167, %class.GrGLFunction.168, %class.GrGLFunction.169, %class.GrGLFunction.170, %class.GrGLFunction, %class.GrGLFunction.171, %class.GrGLFunction.171, %class.GrGLFunction.171, %class.GrGLFunction, %class.GrGLFunction.171, %class.GrGLFunction.171, %class.GrGLFunction.171, %class.GrGLFunction.171, %class.GrGLFunction.171, %class.GrGLFunction.172, %class.GrGLFunction.157, %class.GrGLFunction.173, %class.GrGLFunction.174, %class.GrGLFunction.175, %class.GrGLFunction.176, %class.GrGLFunction.177, %class.GrGLFunction.172, %class.GrGLFunction.178, %class.GrGLFunction.172, %class.GrGLFunction.179, %class.GrGLFunction.180, %class.GrGLFunction.172, %class.GrGLFunction.172, %class.GrGLFunction.177, %class.GrGLFunction.172, %class.GrGLFunction.181, %class.GrGLFunction.182, %class.GrGLFunction.183, %class.GrGLFunction.184, %class.GrGLFunction.185, %class.GrGLFunction.186, %class.GrGLFunction, %class.GrGLFunction.167, %class.GrGLFunction.187, %class.GrGLFunction.188, %class.GrGLFunction.189, %class.GrGLFunction.156, %class.GrGLFunction.190, %class.GrGLFunction.191, %class.GrGLFunction, %class.GrGLFunction.192, %class.GrGLFunction.193, %class.GrGLFunction.194, %class.GrGLFunction.195, %class.GrGLFunction.195, %class.GrGLFunction.196, %class.GrGLFunction.197, %class.GrGLFunction.198, %class.GrGLFunction.199, %class.GrGLFunction.200, %class.GrGLFunction.201, %class.GrGLFunction.202, %class.GrGLFunction.203, %class.GrGLFunction.189, %class.GrGLFunction.189, %class.GrGLFunction.141, %class.GrGLFunction.144, %class.GrGLFunction.186, %class.GrGLFunction.141, %class.GrGLFunction, %class.GrGLFunction.204, %class.GrGLFunction.205, %class.GrGLFunction.206, %class.GrGLFunction.206, %class.GrGLFunction.206, %class.GrGLFunction.207, %class.GrGLFunction.144, %class.GrGLFunction.193, %class.GrGLFunction.208, %class.GrGLFunction.209, %class.GrGLFunction.141, %class.GrGLFunction.210, %class.GrGLFunction.211, %class.GrGLFunction.212, %class.GrGLFunction, %class.GrGLFunction.141, %class.GrGLFunction.213, %class.GrGLFunction.168, %class.GrGLFunction.190, %class.GrGLFunction.213, %class.GrGLFunction.214, %class.GrGLFunction.215, %class.GrGLFunction.216, %class.GrGLFunction.217, %class.GrGLFunction.193, %class.GrGLFunction.208, %class.GrGLFunction.215, %class.GrGLFunction.206, %class.GrGLFunction.144, %class.GrGLFunction.187, %class.GrGLFunction.218, %class.GrGLFunction.219, %class.GrGLFunction.220, %class.GrGLFunction.221, %class.GrGLFunction.222, %class.GrGLFunction.223, %class.GrGLFunction.220, %class.GrGLFunction.221, %class.GrGLFunction.224, %class.GrGLFunction.209, %class.GrGLFunction.220, %class.GrGLFunction.221, %class.GrGLFunction.225, %class.GrGLFunction.226, %class.GrGLFunction.220, %class.GrGLFunction.221, %class.GrGLFunction.227, %class.GrGLFunction.227, %class.GrGLFunction.227, %class.GrGLFunction.190, %class.GrGLFunction.228, %class.GrGLFunction.228, %class.GrGLFunction, %class.GrGLFunction.229, %class.GrGLFunction.230, %class.GrGLFunction.230, %class.GrGLFunction.230, %class.GrGLFunction.141, %class.GrGLFunction.231, %class.GrGLFunction.232, %class.GrGLFunction.209, %class.GrGLFunction, %class.GrGLFunction.233, %class.GrGLFunction.234, %class.GrGLFunction.235, %class.GrGLFunction.236, %class.GrGLFunction.237, %class.GrGLFunction.238, %class.GrGLFunction.239, %class.GrGLFunction.240, %class.GrGLFunction.241, %class.GrGLFunction.242, %class.GrGLFunction.243, %class.GrGLFunction.144, %class.GrGLFunction.243, %class.GrGLFunction.244, %class.GrGLFunction.245, %class.GrGLFunction }
%class.GrGLFunction.142 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.143 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.146 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.147 = type { void (i8*, i32, i64, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.148 = type { void (i8*, i32, i64, i64, i8*)*, [4 x i64] }
%class.GrGLFunction.145 = type { void (i8*, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.150 = type { void (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.151 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.152 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.153 = type { void (i8*, i8, i8, i8, i8)*, [4 x i64] }
%class.GrGLFunction.154 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.155 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.149 = type { i32 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.159 = type { void (i8*, i8)*, [4 x i64] }
%class.GrGLFunction.160 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.161 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.162 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.158 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.163 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.164 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.165 = type { void (i8*, i32, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.166 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.169 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.170 = type { void (i8*, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.171 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.157 = type { i32 (i8*)*, [4 x i64] }
%class.GrGLFunction.173 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.174 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.175 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.176 = type { void (i8*, i32, i32, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.178 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.179 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.180 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.177 = type { void (i8*, i32, i32, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.172 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.181 = type { void (i8*, i32, i32, i32*, i32*)*, [4 x i64] }
%class.GrGLFunction.182 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.183 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.184 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.185 = type { i32 (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.167 = type { void (i8*, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.188 = type { void (i8*, i32, i32, i32*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.156 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.191 = type { void (i8*, float)*, [4 x i64] }
%class.GrGLFunction.192 = type { void (i8*, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.194 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.195 = type { i8* (i8*, i32, i64, i64, i32)*, [4 x i64] }
%class.GrGLFunction.196 = type { i8* (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.197 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.198 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.199 = type { void (i8*, i32, i32, i32, i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.200 = type { void (i8*, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.201 = type { void (i8*, i32, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.202 = type { void (i8*, i32, i32*, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.203 = type { void (i8*, i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.189 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.186 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.204 = type { void (i8*, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.205 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.207 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.210 = type { void (i8*, i32, i32, i8**, i32*)*, [4 x i64] }
%class.GrGLFunction.211 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.212 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.168 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.213 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.214 = type { void (i8*, i32, i32, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.216 = type { void (i8*, i32, i32, float)*, [4 x i64] }
%class.GrGLFunction.217 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.193 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.208 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.215 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.206 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.187 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.218 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.219 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.222 = type { void (i8*, i32, float, float)*, [4 x i64] }
%class.GrGLFunction.223 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.224 = type { void (i8*, i32, float, float, float)*, [4 x i64] }
%class.GrGLFunction.225 = type { void (i8*, i32, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.226 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.220 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.221 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.227 = type { void (i8*, i32, i32, i8, float*)*, [4 x i64] }
%class.GrGLFunction.190 = type { i8 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.228 = type { void (i8*, i8*)*, [4 x i64] }
%class.GrGLFunction.229 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.230 = type { void (i8*, i32, float*)*, [4 x i64] }
%class.GrGLFunction.141 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.231 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.232 = type { void (i8*, i32, i32, i32, i8, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.209 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.233 = type { %struct.__GLsync* (i8*, i32, i32)*, [4 x i64] }
%struct.__GLsync = type opaque
%class.GrGLFunction.234 = type { i8 (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.235 = type { i32 (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.236 = type { void (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.237 = type { void (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.238 = type { void (i8*, i32, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.239 = type { void (i8*, i32, i32, i32, i32, i32*, i8)*, [4 x i64] }
%class.GrGLFunction.240 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.241 = type { void (i8*, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, [4 x i64] }
%class.GrGLFunction.242 = type { i32 (i8*, i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.144 = type { void (i8*)*, [4 x i64] }
%class.GrGLFunction.243 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.244 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.245 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction = type { void (i8*, i32)*, [4 x i64] }
%struct.GrGLDriverInfo = type <{ i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i8, [7 x i8] }>
%class.sk_sp.246 = type { %class.GrGLCaps* }
%class.GrGLCaps = type <{ %class.GrCaps.base, i8, i32, [4 x i8], %class.SkTArray.247, i32, i32, i32, i32, i32, i32, i32, i40, i32, i32, [4 x i8], [24 x %"struct.GrGLCaps::FormatInfo"], [31 x i32], [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.1, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%class.SkTArray.247 = type { i32*, i64 }
%"struct.GrGLCaps::FormatInfo" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, %class.SkTDArray.248, %"class.std::__1::unique_ptr.249", i32, [4 x i8] }>
%class.SkTDArray.248 = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.GrGLCaps::ColorTypeInfo"* }
%"struct.GrGLCaps::ColorTypeInfo" = type <{ i32, i32, %class.GrSwizzle, %class.GrSwizzle, [4 x i8], %"class.std::__1::unique_ptr.252", i32, [4 x i8] }>
%class.GrSwizzle = type { i16 }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats"* }
%"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats" = type <{ i32, i32, i32, i32, i8, [3 x i8] }>
%class.sk_sp.264 = type { %"class.GrGLGpu::ProgramCache"* }
%"class.GrGLGpu::ProgramCache" = type { %class.GrThreadSafePipelineBuilder.base, %class.SkLRUCache }
%class.GrThreadSafePipelineBuilder.base = type { %class.SkRefCnt.base, %"class.GrThreadSafePipelineBuilder::Stats" }
%"class.GrThreadSafePipelineBuilder::Stats" = type { i8 }
%class.SkLRUCache = type { i32, %class.SkTHashTable.265, %class.SkTInternalLList }
%class.SkTHashTable.265 = type { i32, i32, %class.SkAutoTArray.266 }
%class.SkAutoTArray.266 = type { %"class.std::__1::unique_ptr.267" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.SkTHashTable<SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry *, GrProgramDesc, SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Traits>::Slot"* }
%"struct.SkTHashTable<SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry *, GrProgramDesc, SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Traits>::Slot" = type opaque
%class.SkTInternalLList = type { %"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry"*, %"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry"* }
%"struct.SkLRUCache<GrProgramDesc, std::__1::unique_ptr<GrGLGpu::ProgramCache::Entry, std::__1::default_delete<GrGLGpu::ProgramCache::Entry> >, GrGLGpu::ProgramCache::DescHash>::Entry" = type opaque
%class.sk_sp.273 = type { %class.GrGLProgram* }
%struct.anon = type { i32, %struct.GrNativeRect }
%class.anon = type { i32, i32, i32, %class.GrWindowRectsState }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.313 }
%union.anon.313 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.GrNativeRect = type { i32, i32, i32, i32 }
%"class.GrGLGpu::HWVertexArrayState" = type { i32, i8, [3 x i8], %class.GrGLAttribArrayState, %class.GrGLVertexArray* }
%class.GrGLAttribArrayState = type <{ %class.SkSTArray.314, i32, i8, i8, [2 x i8] }>
%class.SkSTArray.314 = type { %class.SkAlignedSTStorage.315, %class.SkTArray.316 }
%class.SkAlignedSTStorage.315 = type { [640 x i8] }
%class.SkTArray.316 = type { %"struct.GrGLAttribArrayState::AttribArrayState"*, i64 }
%"struct.GrGLAttribArrayState::AttribArrayState" = type <{ %"class.GrGpuResource::UniqueID", i8, [3 x i8], i32, i32, i32, [4 x i8], i8*, i32, [4 x i8] }>
%class.GrGLVertexArray = type { i32, [4 x i8], %class.GrGLAttribArrayState, %"class.GrGpuResource::UniqueID", [4 x i8] }
%struct.anon.317 = type <{ i32, %"class.GrGpuResource::UniqueID", i8, [3 x i8] }>
%struct.anon.318 = type { i32, i32, i32, %struct.SkRGBA4f, i8, i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrStencilSettings = type { i32, %"struct.GrStencilSettings::Face", %"struct.GrStencilSettings::Face" }
%"struct.GrStencilSettings::Face" = type { %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkAutoTArray.319 = type { %"class.std::__1::unique_ptr.320" }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.GrGLGpu::TextureUnitBindings"* }
%"class.GrGLGpu::TextureUnitBindings" = type { [3 x %"struct.GrGLGpu::TextureUnitBindings::TargetBinding"] }
%"struct.GrGLGpu::TextureUnitBindings::TargetBinding" = type <{ %"class.GrGpuResource::UniqueID", i8, [3 x i8] }>
%struct.anon.326 = type { i32, i32, i32, i32 }
%struct.anon.328 = type { i32, i32, i32 }
%class.sk_sp.327 = type { %class.GrGLBuffer* }
%class.GrGLBuffer = type <{ %class.GrGpuBuffer, i32, i32, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.GrGLGpu::SamplerObjectCache"* }
%"class.GrGLGpu::SamplerObjectCache" = type opaque
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %class.GrGLOpsRenderPass* }
%class.GrGLOpsRenderPass = type opaque
%class.GrFinishCallbacks = type { %class.GrGpu*, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.341" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { i64 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [120 x i8], [8 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.GrRenderTarget = type <{ i32 (...)**, %class.sk_sp.346, %class.sk_sp.346, i32, [4 x i8], %class.GrSurface }>
%class.sk_sp.346 = type { %class.GrAttachment* }
%class.GrAttachment = type <{ %class.GrSurface, i8, [3 x i8], i32, i8, i8, [6 x i8] }>
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.347, i32, [4 x i8] }
%union.anon.347 = type { %struct.anon.348 }
%struct.anon.348 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.358, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.350, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.350 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt.351, %class.sk_sp.352, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.353" }
%class.SkNVRefCnt.351 = type { %"struct.std::__1::atomic" }
%class.sk_sp.352 = type { %class.GrSurface* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.352, i32, i8, [3 x i8] }>
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.353" = type { %"struct.std::__1::__atomic_base.354" }
%"struct.std::__1::__atomic_base.354" = type { %"struct.std::__1::__atomic_base.355" }
%"struct.std::__1::__atomic_base.355" = type { %"struct.std::__1::__cxx_atomic_impl.356" }
%"struct.std::__1::__cxx_atomic_impl.356" = type { %"struct.std::__1::__cxx_atomic_base_impl.357" }
%"struct.std::__1::__cxx_atomic_base_impl.357" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.sk_sp.358 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.359, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef.359 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.360"*, [24 x i8] }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %class.GrFragmentProcessor* }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings.366, [2 x i16], %struct.GrTStencilFaceSettings.366 }
%struct.GrTStencilFaceSettings.366 = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.367, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.367 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%"class.GrGLSLFragmentProcessor::ParallelRange" = type { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* }
%"class.GrGLSLFragmentProcessor::ParallelIter" = type { %"class.GrFragmentProcessor::CIter", %"class.GrGLSLFragmentProcessor::Iter" }
%"class.GrFragmentProcessor::CIter" = type { %class.SkSTArray.368 }
%class.SkSTArray.368 = type { %class.SkAlignedSTStorage.369, %class.SkTArray.370 }
%class.SkAlignedSTStorage.369 = type { [32 x i8] }
%class.SkTArray.370 = type { %class.GrFragmentProcessor**, i64 }
%"class.GrGLSLFragmentProcessor::Iter" = type { %class.SkSTArray.371 }
%class.SkSTArray.371 = type { %class.SkAlignedSTStorage.372, %class.SkTArray.373 }
%class.SkAlignedSTStorage.372 = type { [32 x i8] }
%class.SkTArray.373 = type { %class.GrGLSLFragmentProcessor**, i64 }
%"class.GrGLSLFragmentProcessor::ParallelIterEnd" = type { i8 }
%class.GrTextureProxy = type { i32 (...)**, i8, i32, i8, i8, %class.GrUniqueKey, %class.GrProxyProvider*, %"class.std::__1::unique_ptr.395", %class.GrSurfaceProxy }
%"class.std::__1::unique_ptr.395" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %class.GrDeferredProxyUploader* }
%class.GrDeferredProxyUploader = type opaque
%"class.std::__1::function.377" = type { %"class.std::__1::__function::__policy_func.380" }
%"class.std::__1::__function::__policy_func.380" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.381", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.381" = type { void (%"union.std::__1::__function::__policy_storage"*, %class.GrTextureEffect*)* }
%class.GrTextureEffect = type { %class.GrFragmentProcessor.base, [4 x i8], %class.GrSurfaceProxyView, %class.GrSamplerState, [4 x float], %struct.SkRect, %struct.SkRect, [2 x i16] }
%class.GrFragmentProcessor.base = type <{ %class.GrProcessor, %class.SkSTArray.278, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage" }>
%class.GrSamplerState = type { [2 x i8], i32, i32 }
%class.GrGLTexture = type <{ %class.GrTexture.base, [4 x i8], %class.sk_sp.375, i32, i32, i8, i8, [6 x i8], %class.GrSurface }>
%class.GrTexture.base = type <{ i32 (...)**, i32, i32, i32 }>
%class.sk_sp.375 = type { %class.GrGLTextureParameters* }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.376, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.376 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%"class.GrGeometryProcessor::TextureSampler" = type <{ %class.GrSamplerState, [4 x i8], %class.GrBackendFormat, %class.GrSwizzle, i8, [5 x i8] }>

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZTV11GrGLProgram = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLProgram*)* @_ZN11GrGLProgramD2Ev to i8*), i8* bitcast (void (%class.GrGLProgram*)* @_ZN11GrGLProgramD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, align 8
@_ZTV22GrGLProgramDataManager = external unnamed_addr constant { [26 x i8*] }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11GrGLProgram12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipelineE3$_0FvRK15GrTextureEffectEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

@_ZN11GrGLProgramC1EP7GrGLGpuRK27GrGLSLBuiltinUniformHandlesjRK12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EESA_NSt3__110unique_ptrI23GrGLSLGeometryProcessorNSB_14default_deleteISD_EEEENSC_I19GrGLSLXferProcessorNSE_ISH_EEEENSB_6vectorINSC_I23GrGLSLFragmentProcessorNSE_ISL_EEEENSB_9allocatorISN_EEEENSC_IA_NS_9AttributeENSE_ISS_EEEEiiii = hidden unnamed_addr alias void (%class.GrGLProgram*, %class.GrGLGpu*, %struct.GrGLSLBuiltinUniformHandles*, i32, %class.GrTBlockList*, %class.GrTBlockList*, i64, i64, %"class.std::__1::vector"*, i64, i32, i32, i32, i32), void (%class.GrGLProgram*, %class.GrGLGpu*, %struct.GrGLSLBuiltinUniformHandles*, i32, %class.GrTBlockList*, %class.GrTBlockList*, i64, i64, %"class.std::__1::vector"*, i64, i32, i32, i32, i32)* @_ZN11GrGLProgramC2EP7GrGLGpuRK27GrGLSLBuiltinUniformHandlesjRK12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EESA_NSt3__110unique_ptrI23GrGLSLGeometryProcessorNSB_14default_deleteISD_EEEENSC_I19GrGLSLXferProcessorNSE_ISH_EEEENSB_6vectorINSC_I23GrGLSLFragmentProcessorNSE_ISL_EEEENSB_9allocatorISN_EEEENSC_IA_NS_9AttributeENSE_ISS_EEEEiiii
@_ZN11GrGLProgramD1Ev = hidden unnamed_addr alias void (%class.GrGLProgram*), void (%class.GrGLProgram*)* @_ZN11GrGLProgramD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrGLProgram4MakeEP7GrGLGpuRK27GrGLSLBuiltinUniformHandlesjRK12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EESA_NSt3__110unique_ptrI23GrGLSLGeometryProcessorNSB_14default_deleteISD_EEEENSC_I19GrGLSLXferProcessorNSE_ISH_EEEENSB_6vectorINSC_I23GrGLSLFragmentProcessorNSE_ISL_EEEENSB_9allocatorISN_EEEENSC_IA_NS_9AttributeENSE_ISS_EEEEiiii(%class.sk_sp.273* noalias nocapture sret, %class.GrGLGpu*, %struct.GrGLSLBuiltinUniformHandles* nocapture readonly dereferenceable(8), i32, %class.GrTBlockList*, %class.GrTBlockList*, i64, i64, %"class.std::__1::vector"* nocapture, i64, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %15 = alloca %class.sk_sp.273, align 8
  %16 = getelementptr inbounds %class.sk_sp.273, %class.sk_sp.273* %0, i64 0, i32 0
  %17 = tail call i8* @_Znwm(i64 152) #7
  %18 = bitcast %"class.std::__1::vector"* %8 to <2 x i64>*
  %19 = load <2 x i64>, <2 x i64>* %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.296"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #8
  %24 = getelementptr inbounds i8, i8* %17, i64 8
  %25 = bitcast i8* %24 to i32*
  %26 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11GrGLProgram, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = bitcast i8* %24 to <4 x i32>*
  store <4 x i32> <i32 1, i32 -1, i32 -1, i32 -1>, <4 x i32>* %27, align 4
  %28 = getelementptr inbounds i8, i8* %17, i64 24
  %29 = bitcast %struct.GrGLSLBuiltinUniformHandles* %2 to i64*
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %29, align 4
  store i64 %31, i64* %30, align 8
  %32 = getelementptr inbounds i8, i8* %17, i64 32
  %33 = bitcast i8* %32 to i32*
  store i32 %3, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %17, i64 40
  %35 = bitcast i8* %34 to i64*
  store i64 %6, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %17, i64 48
  %37 = bitcast i8* %36 to i64*
  store i64 %7, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %17, i64 56
  %39 = bitcast i8* %38 to <2 x i64>*
  store <2 x i64> %19, <2 x i64>* %39, align 8
  %40 = getelementptr inbounds i8, i8* %17, i64 72
  %41 = bitcast i8* %40 to i64*
  store i64 %22, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %17, i64 80
  %43 = bitcast i8* %42 to i64*
  store i64 %9, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %17, i64 88
  %45 = bitcast i8* %44 to i32*
  store i32 %10, i32* %45, align 8
  %46 = getelementptr inbounds i8, i8* %17, i64 92
  %47 = bitcast i8* %46 to i32*
  store i32 %11, i32* %47, align 4
  %48 = getelementptr inbounds i8, i8* %17, i64 96
  %49 = bitcast i8* %48 to i32*
  store i32 %12, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %17, i64 100
  %51 = bitcast i8* %50 to i32*
  store i32 %13, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %17, i64 104
  %53 = bitcast i8* %52 to %class.GrGLGpu**
  store %class.GrGLGpu* %1, %class.GrGLGpu** %53, align 8
  %54 = getelementptr inbounds i8, i8* %17, i64 112
  %55 = bitcast i8* %54 to %class.GrGLProgramDataManager*
  tail call void @_ZN22GrGLProgramDataManagerC1EP7GrGLGpuRK12GrTBlockListINS_13GLUniformInfoELi1EE(%class.GrGLProgramDataManager* %55, %class.GrGLGpu* %1, %class.GrTBlockList* dereferenceable(128) %4) #8
  %56 = getelementptr inbounds i8, i8* %17, i64 144
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds %class.GrTBlockList, %class.GrTBlockList* %5, i64 0, i32 0, i32 0, i64 44
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %57, align 8
  %61 = bitcast %class.sk_sp.273* %0 to i8**
  store i8* %17, i8** %61, align 8
  %62 = getelementptr inbounds %class.sk_sp.273, %class.sk_sp.273* %15, i64 0, i32 0
  %63 = atomicrmw add i32* %25, i32 1 monotonic
  %64 = bitcast %class.sk_sp.273* %15 to i8**
  store i8* %17, i8** %64, align 8
  call void @_ZN7GrGLGpu12flushProgramE5sk_spI11GrGLProgramE(%class.GrGLGpu* %1, %class.sk_sp.273* nonnull %15) #8
  %65 = load %class.GrGLProgram*, %class.GrGLProgram** %62, align 8
  %66 = icmp eq %class.GrGLProgram* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %14
  %68 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %65, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = bitcast %class.GrGLProgram* %65 to %class.SkRefCntBase*
  %73 = bitcast %class.GrGLProgram* %65 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8
  call void %76(%class.SkRefCntBase* nonnull %72) #8
  br label %77

77:                                               ; preds = %71, %67, %14
  %78 = load %class.GrGLProgram*, %class.GrGLProgram** %16, align 8
  %79 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %78, i64 0, i32 14
  call void @_ZNK22GrGLProgramDataManager18setSamplerUniformsERK12GrTBlockListINS_13GLUniformInfoELi1EEi(%class.GrGLProgramDataManager* %79, %class.GrTBlockList* %5, i32 0) #8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN7GrGLGpu12flushProgramE5sk_spI11GrGLProgramE(%class.GrGLGpu*, %class.sk_sp.273*) local_unnamed_addr #2

declare void @_ZNK22GrGLProgramDataManager18setSamplerUniformsERK12GrTBlockListINS_13GLUniformInfoELi1EEi(%class.GrGLProgramDataManager*, %class.GrTBlockList*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrGLProgramC2EP7GrGLGpuRK27GrGLSLBuiltinUniformHandlesjRK12GrTBlockListIN22GrGLProgramDataManager13GLUniformInfoELi1EESA_NSt3__110unique_ptrI23GrGLSLGeometryProcessorNSB_14default_deleteISD_EEEENSC_I19GrGLSLXferProcessorNSE_ISH_EEEENSB_6vectorINSC_I23GrGLSLFragmentProcessorNSE_ISL_EEEENSB_9allocatorISN_EEEENSC_IA_NS_9AttributeENSE_ISS_EEEEiiii(%class.GrGLProgram*, %class.GrGLGpu*, %struct.GrGLSLBuiltinUniformHandles* nocapture readonly dereferenceable(8), i32, %class.GrTBlockList* dereferenceable(128), %class.GrTBlockList* nocapture readonly dereferenceable(128), i64, i64, %"class.std::__1::vector"* nocapture, i64, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %15 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11GrGLProgram, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = bitcast i32* %15 to <4 x i32>*
  store <4 x i32> <i32 1, i32 -1, i32 -1, i32 -1>, <4 x i32>* %17, align 4
  %18 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 2
  %19 = bitcast %struct.GrGLSLBuiltinUniformHandles* %2 to i64*
  %20 = bitcast %struct.GrGLSLBuiltinUniformHandles* %18 to i64*
  %21 = load i64, i64* %19, align 4
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 3
  store i32 %3, i32* %22, align 8
  %23 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 5
  %24 = bitcast %"class.std::__1::unique_ptr.274"* %23 to i64*
  store i64 %6, i64* %24, align 8
  %25 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 6
  %26 = bitcast %"class.std::__1::unique_ptr.290"* %25 to i64*
  store i64 %7, i64* %26, align 8
  %27 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 7
  %28 = bitcast %"class.std::__1::vector"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #8
  %29 = bitcast %"class.std::__1::vector"* %8 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::unique_ptr.296"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 7, i32 0, i32 1
  %36 = bitcast %"class.std::__1::unique_ptr.296"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.296"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.296"** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false) #8
  %43 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 8
  %44 = bitcast %"class.std::__1::unique_ptr.306"* %43 to i64*
  store i64 %9, i64* %44, align 8
  %45 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 9
  store i32 %10, i32* %45, align 8
  %46 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 10
  store i32 %11, i32* %46, align 4
  %47 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 11
  store i32 %12, i32* %47, align 8
  %48 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 12
  store i32 %13, i32* %48, align 4
  %49 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 13
  store %class.GrGLGpu* %1, %class.GrGLGpu** %49, align 8
  %50 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 14
  tail call void @_ZN22GrGLProgramDataManagerC1EP7GrGLGpuRK12GrTBlockListINS_13GLUniformInfoELi1EE(%class.GrGLProgramDataManager* %50, %class.GrGLGpu* %1, %class.GrTBlockList* dereferenceable(128) %4) #8
  %51 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 15
  %52 = getelementptr inbounds %class.GrTBlockList, %class.GrTBlockList* %5, i64 0, i32 0, i32 0, i64 44
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %51, align 8
  ret void
}

declare void @_ZN22GrGLProgramDataManagerC1EP7GrGLGpuRK12GrTBlockListINS_13GLUniformInfoELi1EE(%class.GrGLProgramDataManager*, %class.GrGLGpu*, %class.GrTBlockList* dereferenceable(128)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrGLProgramD2Ev(%class.GrGLProgram* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV11GrGLProgram, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 13
  %8 = load %class.GrGLGpu*, %class.GrGLGpu** %7, align 8
  %9 = getelementptr inbounds %class.GrGLGpu, %class.GrGLGpu* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %class.GrGLContext*, %class.GrGLContext** %9, align 8
  %11 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %10, i64 0, i32 0, i32 1, i32 0
  %12 = load %struct.GrGLInterface*, %struct.GrGLInterface** %11, align 8
  %13 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %12, i64 0, i32 3, i32 36, i32 0
  %14 = load void (i8*, i32)*, void (i8*, i32)** %13, align 8
  %15 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %12, i64 0, i32 3, i32 36, i32 1, i64 0
  %16 = bitcast i64* %15 to i8*
  tail call void %14(i8* %16, i32 %4) #8
  br label %17

17:                                               ; preds = %1, %6
  %18 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 14, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTV22GrGLProgramDataManager, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 14, i32 1, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 14, i32 1
  %25 = bitcast %class.SkTArray.312* %24 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_Z7sk_freePv(i8* %26) #8
  br label %27

27:                                               ; preds = %17, %23
  %28 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %29 = load %"struct.GrGLProgram::Attribute"*, %"struct.GrGLProgram::Attribute"** %28, align 8
  store %"struct.GrGLProgram::Attribute"* null, %"struct.GrGLProgram::Attribute"** %28, align 8
  %30 = icmp eq %"struct.GrGLProgram::Attribute"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.GrGLProgram::Attribute"* %29 to i8*
  tail call void @_ZdaPv(i8* %32) #7
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 7
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr.296"*, %"class.std::__1::unique_ptr.296"** %35, align 8
  %37 = icmp eq %"class.std::__1::unique_ptr.296"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.std::__1::unique_ptr.296"* %36 to i8*
  %40 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 7, i32 0, i32 1
  %41 = load %"class.std::__1::unique_ptr.296"*, %"class.std::__1::unique_ptr.296"** %40, align 8
  %42 = icmp eq %"class.std::__1::unique_ptr.296"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.std::__1::unique_ptr.296"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.296", %"class.std::__1::unique_ptr.296"* %44, i64 -1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.296", %"class.std::__1::unique_ptr.296"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %46, align 8
  store %class.GrGLSLFragmentProcessor* null, %class.GrGLSLFragmentProcessor** %46, align 8
  %48 = icmp eq %class.GrGLSLFragmentProcessor* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %class.GrGLSLFragmentProcessor* %47 to void (%class.GrGLSLFragmentProcessor*)***
  %51 = load void (%class.GrGLSLFragmentProcessor*)**, void (%class.GrGLSLFragmentProcessor*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %51, i64 1
  %53 = load void (%class.GrGLSLFragmentProcessor*)*, void (%class.GrGLSLFragmentProcessor*)** %52, align 8
  tail call void %53(%class.GrGLSLFragmentProcessor* nonnull %47) #8
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.std::__1::unique_ptr.296"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.std::__1::unique_ptr.296"* %36, %"class.std::__1::unique_ptr.296"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #7
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %63 = load %class.GrGLSLXferProcessor*, %class.GrGLSLXferProcessor** %62, align 8
  store %class.GrGLSLXferProcessor* null, %class.GrGLSLXferProcessor** %62, align 8
  %64 = icmp eq %class.GrGLSLXferProcessor* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %61
  %66 = bitcast %class.GrGLSLXferProcessor* %63 to void (%class.GrGLSLXferProcessor*)***
  %67 = load void (%class.GrGLSLXferProcessor*)**, void (%class.GrGLSLXferProcessor*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.GrGLSLXferProcessor*)*, void (%class.GrGLSLXferProcessor*)** %67, i64 1
  %69 = load void (%class.GrGLSLXferProcessor*)*, void (%class.GrGLSLXferProcessor*)** %68, align 8
  tail call void %69(%class.GrGLSLXferProcessor* nonnull %63) #8
  br label %70

70:                                               ; preds = %61, %65
  %71 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %72 = load %class.GrGLSLGeometryProcessor*, %class.GrGLSLGeometryProcessor** %71, align 8
  store %class.GrGLSLGeometryProcessor* null, %class.GrGLSLGeometryProcessor** %71, align 8
  %73 = icmp eq %class.GrGLSLGeometryProcessor* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = bitcast %class.GrGLSLGeometryProcessor* %72 to void (%class.GrGLSLGeometryProcessor*)***
  %76 = load void (%class.GrGLSLGeometryProcessor*)**, void (%class.GrGLSLGeometryProcessor*)*** %75, align 8
  %77 = getelementptr inbounds void (%class.GrGLSLGeometryProcessor*)*, void (%class.GrGLSLGeometryProcessor*)** %76, i64 1
  %78 = load void (%class.GrGLSLGeometryProcessor*)*, void (%class.GrGLSLGeometryProcessor*)** %77, align 8
  tail call void %78(%class.GrGLSLGeometryProcessor* nonnull %72) #8
  br label %79

79:                                               ; preds = %70, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrGLProgramD0Ev(%class.GrGLProgram*) unnamed_addr #0 align 2 {
  tail call void @_ZN11GrGLProgramD2Ev(%class.GrGLProgram* %0) #8
  %2 = bitcast %class.GrGLProgram* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11GrGLProgram7abandonEv(%class.GrGLProgram* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 3
  store i32 0, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrGLProgram14updateUniformsEPK14GrRenderTargetRK13GrProgramInfo(%class.GrGLProgram*, %class.GrRenderTarget* nocapture readonly, %class.GrProgramInfo* nocapture readonly dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.GrGLSLFragmentProcessor::ParallelRange", align 8
  %5 = alloca %"class.GrGLSLFragmentProcessor::ParallelIter", align 8
  %6 = alloca %"class.GrGLSLFragmentProcessor::ParallelIterEnd", align 1
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %struct.SkIPoint*
  %9 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %2, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %2, i64 0, i32 7
  tail call void @_ZN11GrGLProgram20setRenderTargetStateEPK14GrRenderTarget15GrSurfaceOriginRK19GrGeometryProcessor(%class.GrGLProgram* %0, %class.GrRenderTarget* %1, i32 %10, %class.GrGeometryProcessor* dereferenceable(80) undef)
  %12 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %13 = load %class.GrGLSLGeometryProcessor*, %class.GrGLSLGeometryProcessor** %12, align 8
  %14 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 14, i32 0
  %15 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 13
  %16 = bitcast %class.GrGLGpu** %15 to %class.GrGpu**
  %17 = load %class.GrGpu*, %class.GrGpu** %16, align 8
  %18 = getelementptr inbounds %class.GrGpu, %class.GrGpu* %17, i64 0, i32 2, i32 0
  %19 = load %class.GrCaps*, %class.GrCaps** %18, align 8
  %20 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %19, i64 0, i32 2, i32 0
  %21 = load %class.GrShaderCaps*, %class.GrShaderCaps** %20, align 8
  %22 = load %class.GrGeometryProcessor*, %class.GrGeometryProcessor** %11, align 8
  %23 = bitcast %class.GrGLSLGeometryProcessor* %13 to void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)***
  %24 = load void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)**, void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)*, void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)** %24, i64 2
  %26 = load void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)*, void (%class.GrGLSLGeometryProcessor*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)** %25, align 8
  tail call void %26(%class.GrGLSLGeometryProcessor* %13, %class.GrGLSLProgramDataManager* dereferenceable(8) %14, %class.GrShaderCaps* dereferenceable(144) %21, %class.GrGeometryProcessor* dereferenceable(80) %22) #8
  %27 = getelementptr inbounds %class.GrProgramInfo, %class.GrProgramInfo* %2, i64 0, i32 5
  %28 = load %class.GrPipeline*, %class.GrPipeline** %27, align 8
  %29 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %28, i64 0, i32 8, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %47

32:                                               ; preds = %3
  %33 = bitcast %"class.GrGLSLFragmentProcessor::ParallelRange"* %4 to i8*
  %34 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 7, i32 0, i32 0
  %35 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %36 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelRange", %"class.GrGLSLFragmentProcessor::ParallelRange"* %4, i64 0, i32 0
  %37 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelRange", %"class.GrGLSLFragmentProcessor::ParallelRange"* %4, i64 0, i32 1
  %38 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIterEnd", %"class.GrGLSLFragmentProcessor::ParallelIterEnd"* %6, i64 0, i32 0
  %39 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i64 40
  %40 = bitcast i8* %39 to i64*
  %41 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i64 32
  %42 = bitcast i8* %41 to i8**
  %43 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 40
  %44 = bitcast i8* %43 to i64*
  %45 = getelementptr inbounds %"class.GrGLSLFragmentProcessor::ParallelIter", %"class.GrGLSLFragmentProcessor::ParallelIter"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 32
  %46 = bitcast i8* %45 to i8**
  br label %100

47:                                               ; preds = %125, %3
  %48 = phi %class.GrPipeline* [ %28, %3 ], [ %127, %125 ]
  %49 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %48, i64 0, i32 7, i32 0
  %50 = load %class.GrXferProcessor*, %class.GrXferProcessor** %49, align 8
  %51 = icmp eq %class.GrXferProcessor* %50, null
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = call dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() #8
  %54 = load %class.GrPipeline*, %class.GrPipeline** %27, align 8
  br label %55

55:                                               ; preds = %47, %52
  %56 = phi %class.GrPipeline* [ %54, %52 ], [ %48, %47 ]
  %57 = phi %class.GrXferProcessor* [ %53, %52 ], [ %50, %47 ]
  %58 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #8
  %59 = bitcast i64* %7 to i32*
  store i32 -1431655766, i32* %59, align 8
  %60 = getelementptr inbounds %struct.SkIPoint, %struct.SkIPoint* %8, i64 0, i32 1
  store i32 -1431655766, i32* %60, align 4
  %61 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %56, i64 0, i32 2
  %62 = load i32, i32* %61, align 8
  switch i32 %62, label %63 [
    i32 2, label %64
    i32 1, label %64
    i32 0, label %96
    i32 3, label %96
  ]

63:                                               ; preds = %55
  call void @llvm.trap() #8
  unreachable

64:                                               ; preds = %55, %55
  %65 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %56, i64 0, i32 1
  %66 = bitcast %struct.SkIPoint* %65 to i64*
  %67 = load i64, i64* %66, align 4
  store i64 %67, i64* %7, align 8
  %68 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %56, i64 0, i32 0, i32 0, i32 0
  %69 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %68, align 8
  %70 = icmp eq %class.GrSurfaceProxy* %69, null
  br i1 %70, label %96, label %71

71:                                               ; preds = %64
  %72 = bitcast %class.GrSurfaceProxy* %69 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %73 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %72, align 8
  %74 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %73, i64 3
  %75 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %74, align 8
  %76 = call %class.GrTextureProxy* %75(%class.GrSurfaceProxy* nonnull %69) #8
  %77 = icmp eq %class.GrTextureProxy* %76, null
  br i1 %77, label %96, label %78

78:                                               ; preds = %71
  %79 = bitcast %class.GrTextureProxy* %76 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = getelementptr i8, i8* %80, i64 -24
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %class.GrTextureProxy* %76 to i8*
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  %86 = getelementptr inbounds i8, i8* %85, i64 16
  %87 = bitcast i8* %86 to %class.GrSurface**
  %88 = load %class.GrSurface*, %class.GrSurface** %87, align 8
  %89 = icmp eq %class.GrSurface* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %78
  %91 = bitcast %class.GrSurface* %88 to %class.GrTexture* (%class.GrSurface*)***
  %92 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %91, align 8
  %93 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %92, i64 10
  %94 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %93, align 8
  %95 = call %class.GrTexture* %94(%class.GrSurface* nonnull %88) #8
  br label %96

96:                                               ; preds = %55, %55, %64, %71, %78, %90
  %97 = phi %class.GrTexture* [ %95, %90 ], [ null, %78 ], [ null, %71 ], [ null, %64 ], [ null, %55 ], [ null, %55 ]
  %98 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %99 = load %class.GrGLSLXferProcessor*, %class.GrGLSLXferProcessor** %98, align 8
  call void @_ZN19GrGLSLXferProcessor7setDataERK24GrGLSLProgramDataManagerRK15GrXferProcessorPK9GrTextureRK8SkIPoint(%class.GrGLSLXferProcessor* %99, %class.GrGLSLProgramDataManager* dereferenceable(8) %14, %class.GrXferProcessor* dereferenceable(24) %57, %class.GrTexture* %97, %struct.SkIPoint* nonnull dereferenceable(8) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #8
  ret void

100:                                              ; preds = %32, %125
  %101 = phi i64 [ 0, %32 ], [ %126, %125 ]
  %102 = phi %class.GrPipeline* [ %28, %32 ], [ %127, %125 ]
  %103 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %102, i64 0, i32 8, i32 1
  %104 = load %"class.std::__1::unique_ptr.360"*, %"class.std::__1::unique_ptr.360"** %103, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.360"* %104, i64 %101, i32 0, i32 0, i32 0
  %106 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %105, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #8
  %107 = load %"class.std::__1::unique_ptr.296"*, %"class.std::__1::unique_ptr.296"** %34, align 8
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.296", %"class.std::__1::unique_ptr.296"* %107, i64 %101, i32 0, i32 0, i32 0
  %109 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %108, align 8
  call void @_ZN23GrGLSLFragmentProcessor13ParallelRangeC1ERK19GrFragmentProcessorRS_(%"class.GrGLSLFragmentProcessor::ParallelRange"* nonnull %4, %class.GrFragmentProcessor* dereferenceable(64) %106, %class.GrGLSLFragmentProcessor* dereferenceable(40) %109) #8
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %35) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 96, i1 false)
  %110 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %36, align 8, !noalias !2
  %111 = load %class.GrGLSLFragmentProcessor*, %class.GrGLSLFragmentProcessor** %37, align 8, !noalias !2
  call void @_ZN23GrGLSLFragmentProcessor12ParallelIterC1ERK19GrFragmentProcessorRS_(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %5, %class.GrFragmentProcessor* dereferenceable(64) %110, %class.GrGLSLFragmentProcessor* dereferenceable(40) %111) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %38) #8
  store i8 -86, i8* %38, align 1
  %112 = call zeroext i1 @_ZNK23GrGLSLFragmentProcessor12ParallelItereqERKNS_15ParallelIterEndE(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %5, %"class.GrGLSLFragmentProcessor::ParallelIterEnd"* nonnull dereferenceable(1) %6) #8
  br i1 %112, label %113, label %132

113:                                              ; preds = %132, %100
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %38) #8
  %114 = load i64, i64* %40, align 8
  %115 = and i64 %114, 1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = load i8*, i8** %42, align 8
  call void @_Z7sk_freePv(i8* %118) #8
  br label %119

119:                                              ; preds = %117, %113
  %120 = load i64, i64* %44, align 8
  %121 = and i64 %120, 1
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %125, label %123

123:                                              ; preds = %119
  %124 = load i8*, i8** %46, align 8
  call void @_Z7sk_freePv(i8* %124) #8
  br label %125

125:                                              ; preds = %119, %123
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %35) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #8
  %126 = add nuw nsw i64 %101, 1
  %127 = load %class.GrPipeline*, %class.GrPipeline** %27, align 8
  %128 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %127, i64 0, i32 8, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = sext i32 %129 to i64
  %131 = icmp slt i64 %126, %130
  br i1 %131, label %100, label %47

132:                                              ; preds = %100, %132
  %133 = call { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* } @_ZNK23GrGLSLFragmentProcessor12ParallelIterdeEv(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %5) #8
  %134 = extractvalue { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* } %133, 0
  %135 = extractvalue { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* } %133, 1
  call void @_ZN23GrGLSLFragmentProcessor7setDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor* %135, %class.GrGLSLProgramDataManager* dereferenceable(8) %14, %class.GrFragmentProcessor* dereferenceable(64) %134) #8
  %136 = call dereferenceable(96) %"class.GrGLSLFragmentProcessor::ParallelIter"* @_ZN23GrGLSLFragmentProcessor12ParallelIterppEv(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %5) #8
  %137 = call zeroext i1 @_ZNK23GrGLSLFragmentProcessor12ParallelItereqERKNS_15ParallelIterEndE(%"class.GrGLSLFragmentProcessor::ParallelIter"* nonnull %5, %"class.GrGLSLFragmentProcessor::ParallelIterEnd"* nonnull dereferenceable(1) %6) #8
  br i1 %137, label %113, label %132
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrGLProgram20setRenderTargetStateEPK14GrRenderTarget15GrSurfaceOriginRK19GrGeometryProcessor(%class.GrGLProgram*, %class.GrRenderTarget* nocapture readonly, i32, %class.GrGeometryProcessor* nocapture readnone dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %5 = alloca [4 x float], align 16
  %6 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 2, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = bitcast %class.GrRenderTarget* %1 to i8**
  %11 = bitcast %class.GrRenderTarget* %1 to i8*
  br label %29

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 1, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = bitcast %class.GrRenderTarget* %1 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %class.GrRenderTarget* %1 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 %19
  %22 = getelementptr inbounds i8, i8* %21, i64 156
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %14, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %12
  %27 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 14
  %28 = sitofp i32 %24 to float
  tail call void @_ZNK22GrGLProgramDataManager5set1fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEf(%class.GrGLProgramDataManager* %27, i32 %7, float %28) #8
  br label %29

29:                                               ; preds = %9, %12, %26
  %30 = phi i8* [ %11, %9 ], [ %20, %12 ], [ %20, %26 ]
  %31 = phi i8** [ %10, %9 ], [ %15, %12 ], [ %15, %26 ]
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr i8, i8* %32, i64 -24
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds i8, i8* %30, i64 %35
  %37 = getelementptr inbounds i8, i8* %36, i64 152
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = lshr i64 %39, 32
  %41 = trunc i64 %40 to i32
  %42 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 1
  %43 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 1, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %2
  %46 = trunc i64 %39 to i32
  br i1 %45, label %47, label %55

47:                                               ; preds = %29
  %48 = getelementptr inbounds %"struct.GrGLProgram::RenderTargetState", %"struct.GrGLProgram::RenderTargetState"* %42, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %46
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 1, i32 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %41
  br i1 %54, label %72, label %55

55:                                               ; preds = %29, %51, %47
  %56 = bitcast %"struct.GrGLProgram::RenderTargetState"* %42 to i64*
  store i64 %39, i64* %56, align 4
  store i32 %2, i32* %43, align 4
  %57 = bitcast [4 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #8
  %58 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 0
  %59 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 1
  %60 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 2
  %61 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 3
  %62 = sitofp i32 %46 to float
  %63 = fdiv float 2.000000e+00, %62
  store float %63, float* %58, align 16
  store float -1.000000e+00, float* %59, align 4
  %64 = icmp eq i32 %2, 1
  %65 = sitofp i32 %41 to float
  %66 = select i1 %64, float -2.000000e+00, float 2.000000e+00
  %67 = select i1 %64, float 1.000000e+00, float -1.000000e+00
  %68 = fdiv float %66, %65
  store float %68, float* %60, align 8
  store float %67, float* %61, align 4
  %69 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 14
  %70 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load i32, i32* %70, align 8
  call void @_ZNK22GrGLProgramDataManager6set4fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrGLProgramDataManager* %69, i32 %71, i32 1, float* nonnull %58) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #8
  br label %72

72:                                               ; preds = %51, %55
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN23GrGLSLFragmentProcessor13ParallelRangeC1ERK19GrFragmentProcessorRS_(%"class.GrGLSLFragmentProcessor::ParallelRange"*, %class.GrFragmentProcessor* dereferenceable(64), %class.GrGLSLFragmentProcessor* dereferenceable(40)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare { %class.GrFragmentProcessor*, %class.GrGLSLFragmentProcessor* } @_ZNK23GrGLSLFragmentProcessor12ParallelIterdeEv(%"class.GrGLSLFragmentProcessor::ParallelIter"*) local_unnamed_addr #2

declare void @_ZN23GrGLSLFragmentProcessor7setDataERK24GrGLSLProgramDataManagerRK19GrFragmentProcessor(%class.GrGLSLFragmentProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare dereferenceable(96) %"class.GrGLSLFragmentProcessor::ParallelIter"* @_ZN23GrGLSLFragmentProcessor12ParallelIterppEv(%"class.GrGLSLFragmentProcessor::ParallelIter"*) local_unnamed_addr #2

declare void @_ZN19GrGLSLXferProcessor7setDataERK24GrGLSLProgramDataManagerRK15GrXferProcessorPK9GrTextureRK8SkIPoint(%class.GrGLSLXferProcessor*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrXferProcessor* dereferenceable(24), %class.GrTexture*, %struct.SkIPoint* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrGLProgram12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipeline(%class.GrGLProgram*, %class.GrGeometryProcessor* dereferenceable(80), %class.GrSurfaceProxy** nocapture readonly, %class.GrPipeline* dereferenceable(128)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::function.377", align 8
  %7 = alloca %class.GrSwizzle, align 2
  %8 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %1, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 13
  br label %63

13:                                               ; preds = %76, %4
  %14 = phi i32 [ %9, %4 ], [ %89, %76 ]
  %15 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #8
  store i32 %14, i32* %5, align 4
  %16 = bitcast %"class.std::__1::function.377"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.std::__1::function.377", %"class.std::__1::function.377"* %6, i64 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::function.377", %"class.std::__1::function.377"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %class.GrTextureEffect*)* @"_ZNSt3__110__function16__policy_invokerIFvRK15GrTextureEffectEE11__call_implINS0_20__default_alloc_funcIZN11GrGLProgram12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipelineE3$_0S5_EEEEvPKNS0_16__policy_storageES4_", void (%"union.std::__1::__function::__policy_storage"*, %class.GrTextureEffect*)** %17, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11GrGLProgram12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipelineE3$_0FvRK15GrTextureEffectEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %18, align 8
  %19 = bitcast %"class.std::__1::function.377"* %6 to %class.GrGLProgram**
  store %class.GrGLProgram* %0, %class.GrGLProgram** %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::function.377", %"class.std::__1::function.377"* %6, i64 0, i32 0, i32 0, i32 1
  %21 = bitcast [8 x i8]* %20 to i32**
  store i32* %5, i32** %21, align 8
  call void @_ZNK10GrPipeline19visitTextureEffectsERKNSt3__18functionIFvRK15GrTextureEffectEEE(%class.GrPipeline* %3, %"class.std::__1::function.377"* nonnull dereferenceable(32) %6) #8
  %22 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %22, i64 0, i32 1
  %24 = load void (i8*)*, void (i8*)** %23, align 8
  %25 = icmp eq void (i8*)* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.std::__1::function.377", %"class.std::__1::function.377"* %6, i64 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void %24(i8* %28) #8
  br label %29

29:                                               ; preds = %13, %26
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #8
  %30 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %3, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  switch i32 %31, label %32 [
    i32 2, label %33
    i32 1, label %33
    i32 0, label %102
    i32 3, label %102
  ]

32:                                               ; preds = %29
  call void @llvm.trap() #8
  unreachable

33:                                               ; preds = %29, %29
  %34 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %3, i64 0, i32 0, i32 0, i32 0
  %35 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %34, align 8
  %36 = icmp eq %class.GrSurfaceProxy* %35, null
  br i1 %36, label %102, label %37

37:                                               ; preds = %33
  %38 = bitcast %class.GrSurfaceProxy* %35 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %39 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %38, align 8
  %40 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %39, i64 3
  %41 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %40, align 8
  %42 = call %class.GrTextureProxy* %41(%class.GrSurfaceProxy* nonnull %35) #8
  %43 = icmp eq %class.GrTextureProxy* %42, null
  br i1 %43, label %102, label %44

44:                                               ; preds = %37
  %45 = bitcast %class.GrTextureProxy* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr i8, i8* %46, i64 -24
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %class.GrTextureProxy* %42 to i8*
  %51 = getelementptr inbounds i8, i8* %50, i64 %49
  %52 = getelementptr inbounds i8, i8* %51, i64 16
  %53 = bitcast i8* %52 to %class.GrSurface**
  %54 = load %class.GrSurface*, %class.GrSurface** %53, align 8
  %55 = icmp eq %class.GrSurface* %54, null
  br i1 %55, label %102, label %56

56:                                               ; preds = %44
  %57 = bitcast %class.GrSurface* %54 to %class.GrTexture* (%class.GrSurface*)***
  %58 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %57, align 8
  %59 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %58, i64 10
  %60 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %59, align 8
  %61 = call %class.GrTexture* %60(%class.GrSurface* nonnull %54) #8
  %62 = icmp eq %class.GrTexture* %61, null
  br i1 %62, label %102, label %92

63:                                               ; preds = %11, %76
  %64 = phi i64 [ 0, %11 ], [ %88, %76 ]
  %65 = getelementptr inbounds %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %2, i64 %64
  %66 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %65, align 8
  %67 = getelementptr inbounds %class.GrSurfaceProxy, %class.GrSurfaceProxy* %66, i64 0, i32 2, i32 0
  %68 = load %class.GrSurface*, %class.GrSurface** %67, align 8
  %69 = icmp eq %class.GrSurface* %68, null
  br i1 %69, label %76, label %70

70:                                               ; preds = %63
  %71 = bitcast %class.GrSurface* %68 to %class.GrTexture* (%class.GrSurface*)***
  %72 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %71, align 8
  %73 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %72, i64 10
  %74 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %73, align 8
  %75 = tail call %class.GrTexture* %74(%class.GrSurface* nonnull %68) #8
  br label %76

76:                                               ; preds = %63, %70
  %77 = phi %class.GrTexture* [ %75, %70 ], [ null, %63 ]
  %78 = bitcast %class.GrTexture* %77 to %class.GrGLTexture*
  %79 = load %class.GrGLGpu*, %class.GrGLGpu** %12, align 8
  %80 = trunc i64 %64 to i32
  %81 = tail call dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor14textureSamplerEi(%class.GrGeometryProcessor* %1, i32 %80) #8
  %82 = bitcast %"class.GrGeometryProcessor::TextureSampler"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %81, i64 0, i32 0, i32 2
  %85 = load i32, i32* %84, align 8
  %86 = tail call dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor14textureSamplerEi(%class.GrGeometryProcessor* %1, i32 %80) #8
  %87 = getelementptr inbounds %"class.GrGeometryProcessor::TextureSampler", %"class.GrGeometryProcessor::TextureSampler"* %86, i64 0, i32 3
  tail call void @_ZN7GrGLGpu11bindTextureEi14GrSamplerStateRK9GrSwizzleP11GrGLTexture(%class.GrGLGpu* %79, i32 %80, i64 %83, i32 %85, %class.GrSwizzle* dereferenceable(2) %87, %class.GrGLTexture* %78) #8
  %88 = add nuw nsw i64 %64, 1
  %89 = load i32, i32* %8, align 8
  %90 = sext i32 %89 to i64
  %91 = icmp slt i64 %88, %90
  br i1 %91, label %63, label %13

92:                                               ; preds = %56
  %93 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %0, i64 0, i32 13
  %94 = load %class.GrGLGpu*, %class.GrGLGpu** %93, align 8
  %95 = load i32, i32* %5, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %5, align 4
  %97 = bitcast %class.GrSwizzle* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %97) #8
  %98 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %7, i64 0, i32 0
  %99 = getelementptr inbounds %class.GrPipeline, %class.GrPipeline* %3, i64 0, i32 0, i32 2, i32 0
  %100 = load i16, i16* %99, align 2, !noalias !5
  store i16 %100, i16* %98, align 2, !alias.scope !5
  %101 = bitcast %class.GrTexture* %61 to %class.GrGLTexture*
  call void @_ZN7GrGLGpu11bindTextureEi14GrSamplerStateRK9GrSwizzleP11GrGLTexture(%class.GrGLGpu* %94, i32 %95, i64 0, i32 0, %class.GrSwizzle* nonnull dereferenceable(2) %7, %class.GrGLTexture* nonnull %101) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %97) #8
  br label %102

102:                                              ; preds = %29, %29, %33, %37, %44, %56, %92
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #8
  ret void
}

declare void @_ZN7GrGLGpu11bindTextureEi14GrSamplerStateRK9GrSwizzleP11GrGLTexture(%class.GrGLGpu*, i32, i64, i32, %class.GrSwizzle* dereferenceable(2), %class.GrGLTexture*) local_unnamed_addr #2

declare dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor14textureSamplerEi(%class.GrGeometryProcessor*, i32) local_unnamed_addr #2

declare void @_ZNK10GrPipeline19visitTextureEffectsERKNSt3__18functionIFvRK15GrTextureEffectEEE(%class.GrPipeline*, %"class.std::__1::function.377"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZNK22GrGLProgramDataManager5set1fE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEf(%class.GrGLProgramDataManager*, i32, float) unnamed_addr #2

declare void @_ZNK22GrGLProgramDataManager6set4fvE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEEiPKf(%class.GrGLProgramDataManager*, i32, i32, float*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #8
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare void @_ZN23GrGLSLFragmentProcessor12ParallelIterC1ERK19GrFragmentProcessorRS_(%"class.GrGLSLFragmentProcessor::ParallelIter"*, %class.GrFragmentProcessor* dereferenceable(64), %class.GrGLSLFragmentProcessor* dereferenceable(40)) unnamed_addr #2

declare zeroext i1 @_ZNK23GrGLSLFragmentProcessor12ParallelItereqERKNS_15ParallelIterEndE(%"class.GrGLSLFragmentProcessor::ParallelIter"*, %"class.GrGLSLFragmentProcessor::ParallelIterEnd"* dereferenceable(1)) local_unnamed_addr #2

declare dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvRK15GrTextureEffectEE11__call_implINS0_20__default_alloc_funcIZN11GrGLProgram12bindTexturesERK19GrGeometryProcessorPKPK14GrSurfaceProxyRK10GrPipelineE3$_0S5_EEEEvPKNS0_16__policy_storageES4_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %class.GrTextureEffect* nocapture readonly dereferenceable(144)) #0 align 2 {
  %3 = alloca %class.GrSwizzle, align 2
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.GrGLProgram**
  %5 = load %class.GrGLProgram*, %class.GrGLProgram** %4, align 8
  %6 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %1, i64 0, i32 3
  %7 = bitcast %class.GrSamplerState* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %1, i64 0, i32 3, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %class.GrSwizzle* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %11) #8
  %12 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %3, i64 0, i32 0
  %13 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %1, i64 0, i32 2, i32 2, i32 0
  %14 = load i16, i16* %13, align 2, !noalias !8
  store i16 %14, i16* %12, align 2, !alias.scope !8
  %15 = getelementptr inbounds %class.GrTextureEffect, %class.GrTextureEffect* %1, i64 0, i32 2, i32 0, i32 0
  %16 = load %class.GrSurfaceProxy*, %class.GrSurfaceProxy** %15, align 8
  %17 = icmp eq %class.GrSurfaceProxy* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %2
  %19 = bitcast %class.GrSurfaceProxy* %16 to %class.GrTextureProxy* (%class.GrSurfaceProxy*)***
  %20 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)**, %class.GrTextureProxy* (%class.GrSurfaceProxy*)*** %19, align 8
  %21 = getelementptr inbounds %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %20, i64 3
  %22 = load %class.GrTextureProxy* (%class.GrSurfaceProxy*)*, %class.GrTextureProxy* (%class.GrSurfaceProxy*)** %21, align 8
  %23 = tail call %class.GrTextureProxy* %22(%class.GrSurfaceProxy* nonnull %16) #8
  br label %24

24:                                               ; preds = %18, %2
  %25 = phi %class.GrTextureProxy* [ %23, %18 ], [ null, %2 ]
  %26 = bitcast %class.GrTextureProxy* %25 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr i8, i8* %27, i64 -24
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %class.GrTextureProxy* %25 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 %30
  %33 = getelementptr inbounds i8, i8* %32, i64 16
  %34 = bitcast i8* %33 to %class.GrSurface**
  %35 = load %class.GrSurface*, %class.GrSurface** %34, align 8
  %36 = icmp eq %class.GrSurface* %35, null
  br i1 %36, label %44, label %37

37:                                               ; preds = %24
  %38 = bitcast %class.GrSurface* %35 to %class.GrTexture* (%class.GrSurface*)***
  %39 = load %class.GrTexture* (%class.GrSurface*)**, %class.GrTexture* (%class.GrSurface*)*** %38, align 8
  %40 = getelementptr inbounds %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %39, i64 10
  %41 = load %class.GrTexture* (%class.GrSurface*)*, %class.GrTexture* (%class.GrSurface*)** %40, align 8
  %42 = tail call %class.GrTexture* %41(%class.GrSurface* nonnull %35) #8
  %43 = bitcast %class.GrTexture* %42 to %class.GrGLTexture*
  br label %44

44:                                               ; preds = %24, %37
  %45 = phi %class.GrGLTexture* [ %43, %37 ], [ null, %24 ]
  %46 = getelementptr inbounds %class.GrGLProgram, %class.GrGLProgram* %5, i64 0, i32 13
  %47 = load %class.GrGLGpu*, %class.GrGLGpu** %46, align 8
  %48 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %49 = bitcast [8 x i8]* %48 to i32**
  %50 = load i32*, i32** %49, align 8
  %51 = load i32, i32* %50, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %50, align 4
  call void @_ZN7GrGLGpu11bindTextureEi14GrSamplerStateRK9GrSwizzleP11GrGLTexture(%class.GrGLGpu* %47, i32 %51, i64 %8, i32 %10, %class.GrSwizzle* nonnull dereferenceable(2) %3, %class.GrGLTexture* %45) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %11) #8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN23GrGLSLFragmentProcessor13ParallelRange5beginEv: argument 0"}
!4 = distinct !{!4, !"_ZN23GrGLSLFragmentProcessor13ParallelRange5beginEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK18GrSurfaceProxyView7swizzleEv: argument 0"}
!7 = distinct !{!7, !"_ZNK18GrSurfaceProxyView7swizzleEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK18GrSurfaceProxyView7swizzleEv: argument 0"}
!10 = distinct !{!10, !"_ZNK18GrSurfaceProxyView7swizzleEv"}
