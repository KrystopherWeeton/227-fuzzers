; ModuleID = '../../content/public/browser/stored_payment_app.cc'
source_filename = "../../content/public/browser/stored_payment_app.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::StoredRelatedApplication" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.content::StoredCapabilities" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"struct.content::StoredPaymentApp" = type <{ i64, %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.9", %"class.std::__1::vector.23", i8, [7 x i8], %"class.std::__1::vector.30", i8, [7 x i8], %"class.std::__1::vector.37", %"class.std::__1::basic_string", %"struct.content::SupportedDelegations", [4 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.GURL* }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.SkBitmap* }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.19 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.12, i32, i32 }
%class.sk_sp.12 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.19 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"struct.content::StoredCapabilities"*, %"struct.content::StoredCapabilities"*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.content::StoredCapabilities"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.content::StoredRelatedApplication"*, %"struct.content::StoredRelatedApplication"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.content::StoredRelatedApplication"* }
%"struct.content::SupportedDelegations" = type { i8, i8, i8, i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN7content24StoredRelatedApplicationC1Ev = hidden unnamed_addr alias void (%"struct.content::StoredRelatedApplication"*), void (%"struct.content::StoredRelatedApplication"*)* @_ZN7content24StoredRelatedApplicationC2Ev
@_ZN7content24StoredRelatedApplicationD1Ev = hidden unnamed_addr alias void (%"struct.content::StoredRelatedApplication"*), void (%"struct.content::StoredRelatedApplication"*)* @_ZN7content24StoredRelatedApplicationD2Ev
@_ZN7content18StoredCapabilitiesC1Ev = hidden unnamed_addr alias void (%"struct.content::StoredCapabilities"*), void (%"struct.content::StoredCapabilities"*)* @_ZN7content18StoredCapabilitiesC2Ev
@_ZN7content18StoredCapabilitiesC1ERKS0_ = hidden unnamed_addr alias void (%"struct.content::StoredCapabilities"*, %"struct.content::StoredCapabilities"*), void (%"struct.content::StoredCapabilities"*, %"struct.content::StoredCapabilities"*)* @_ZN7content18StoredCapabilitiesC2ERKS0_
@_ZN7content18StoredCapabilitiesD1Ev = hidden unnamed_addr alias void (%"struct.content::StoredCapabilities"*), void (%"struct.content::StoredCapabilities"*)* @_ZN7content18StoredCapabilitiesD2Ev
@_ZN7content16StoredPaymentAppC1Ev = hidden unnamed_addr alias void (%"struct.content::StoredPaymentApp"*), void (%"struct.content::StoredPaymentApp"*)* @_ZN7content16StoredPaymentAppC2Ev
@_ZN7content16StoredPaymentAppD1Ev = hidden unnamed_addr alias void (%"struct.content::StoredPaymentApp"*), void (%"struct.content::StoredPaymentApp"*)* @_ZN7content16StoredPaymentAppD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24StoredRelatedApplicationC2Ev(%"struct.content::StoredRelatedApplication"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.content::StoredRelatedApplication"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content24StoredRelatedApplicationD2Ev(%"struct.content::StoredRelatedApplication"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::StoredRelatedApplication", %"struct.content::StoredRelatedApplication"* %0, i64 0, i32 1
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %7
  %11 = bitcast %"struct.content::StoredRelatedApplication"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.content::StoredRelatedApplication", %"struct.content::StoredRelatedApplication"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #7
  br label %18

18:                                               ; preds = %10, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content18StoredCapabilitiesC2Ev(%"struct.content::StoredCapabilities"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.content::StoredCapabilities"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content18StoredCapabilitiesC2ERKS0_(%"struct.content::StoredCapabilities"*, %"struct.content::StoredCapabilities"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.content::StoredCapabilities"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #8
  %4 = getelementptr inbounds %"struct.content::StoredCapabilities", %"struct.content::StoredCapabilities"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast i32** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.content::StoredCapabilities"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %39, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 4611686018427387903
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"struct.content::StoredCapabilities"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #9
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #7
  %18 = bitcast i8* %17 to i32*
  %19 = getelementptr inbounds %"struct.content::StoredCapabilities", %"struct.content::StoredCapabilities"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast i32** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"struct.content::StoredCapabilities"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds i32, i32* %18, i64 %10
  %23 = getelementptr inbounds %"struct.content::StoredCapabilities", %"struct.content::StoredCapabilities"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i32* %22, i32** %23, align 8
  %24 = getelementptr inbounds %"struct.content::StoredCapabilities", %"struct.content::StoredCapabilities"* %1, i64 0, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = load i64, i64* %5, align 8
  %27 = bitcast i32** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = ptrtoint i32* %25 to i64
  %30 = sub i64 %26, %29
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %16
  %33 = lshr exact i64 %30, 2
  %34 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 %34, i64 %30, i1 false) #8
  %35 = getelementptr inbounds i32, i32* %18, i64 %33
  %36 = ptrtoint i32* %35 to i64
  br label %37

37:                                               ; preds = %32, %16
  %38 = phi i64 [ %36, %32 ], [ %28, %16 ]
  store i64 %38, i64* %27, align 8
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content18StoredCapabilitiesD2Ev(%"struct.content::StoredCapabilities"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::StoredCapabilities", %"struct.content::StoredCapabilities"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"struct.content::StoredCapabilities", %"struct.content::StoredCapabilities"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content16StoredPaymentAppC2Ev(%"struct.content::StoredPaymentApp"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %3) #8
  %4 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 7
  %6 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 10
  %7 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 12
  %8 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 57, i1 false)
  %9 = bitcast %"class.std::__1::vector.30"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 25, i1 false)
  %10 = bitcast %"class.std::__1::vector.37"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false)
  tail call void @_ZN7content20SupportedDelegationsC1Ev(%"struct.content::SupportedDelegations"* %7) #8
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

declare void @_ZN7content20SupportedDelegationsC1Ev(%"struct.content::SupportedDelegations"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content16StoredPaymentAppD2Ev(%"struct.content::StoredPaymentApp"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 12
  tail call void @_ZN7content20SupportedDelegationsD1Ev(%"struct.content::SupportedDelegations"* %2) #8
  %3 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 11
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #7
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 10
  %13 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %12, i64 0, i32 0, i32 0
  %14 = load %"struct.content::StoredRelatedApplication"*, %"struct.content::StoredRelatedApplication"** %13, align 8
  %15 = icmp eq %"struct.content::StoredRelatedApplication"* %14, null
  br i1 %15, label %47, label %16

16:                                               ; preds = %11
  %17 = bitcast %"struct.content::StoredRelatedApplication"* %14 to i8*
  %18 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 10, i32 0, i32 1
  %19 = load %"struct.content::StoredRelatedApplication"*, %"struct.content::StoredRelatedApplication"** %18, align 8
  %20 = icmp eq %"struct.content::StoredRelatedApplication"* %19, %14
  br i1 %20, label %45, label %21

21:                                               ; preds = %16, %40
  %22 = phi %"struct.content::StoredRelatedApplication"* [ %23, %40 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"struct.content::StoredRelatedApplication", %"struct.content::StoredRelatedApplication"* %22, i64 -1
  %24 = getelementptr inbounds %"struct.content::StoredRelatedApplication", %"struct.content::StoredRelatedApplication"* %22, i64 -1, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #7
  br label %32

32:                                               ; preds = %29, %21
  %33 = bitcast %"struct.content::StoredRelatedApplication"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.content::StoredRelatedApplication", %"struct.content::StoredRelatedApplication"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @_ZdlPv(i8* %39) #7
  br label %40

40:                                               ; preds = %37, %32
  %41 = icmp eq %"struct.content::StoredRelatedApplication"* %23, %14
  br i1 %41, label %42, label %21

42:                                               ; preds = %40
  %43 = bitcast %"class.std::__1::vector.37"* %12 to i8**
  %44 = load i8*, i8** %43, align 8
  br label %45

45:                                               ; preds = %42, %16
  %46 = phi i8* [ %44, %42 ], [ %17, %16 ]
  store %"struct.content::StoredRelatedApplication"* %14, %"struct.content::StoredRelatedApplication"** %18, align 8
  tail call void @_ZdlPv(i8* %46) #7
  br label %47

47:                                               ; preds = %11, %45
  %48 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 7
  %49 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %48, i64 0, i32 0, i32 0
  %50 = load %"struct.content::StoredCapabilities"*, %"struct.content::StoredCapabilities"** %49, align 8
  %51 = icmp eq %"struct.content::StoredCapabilities"* %50, null
  br i1 %51, label %75, label %52

52:                                               ; preds = %47
  %53 = bitcast %"struct.content::StoredCapabilities"* %50 to i8*
  %54 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 7, i32 0, i32 1
  %55 = load %"struct.content::StoredCapabilities"*, %"struct.content::StoredCapabilities"** %54, align 8
  %56 = icmp eq %"struct.content::StoredCapabilities"* %55, %50
  br i1 %56, label %73, label %57

57:                                               ; preds = %52, %68
  %58 = phi %"struct.content::StoredCapabilities"* [ %59, %68 ], [ %55, %52 ]
  %59 = getelementptr inbounds %"struct.content::StoredCapabilities", %"struct.content::StoredCapabilities"* %58, i64 -1
  %60 = getelementptr inbounds %"struct.content::StoredCapabilities", %"struct.content::StoredCapabilities"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = icmp eq i32* %61, null
  br i1 %62, label %68, label %63

63:                                               ; preds = %57
  %64 = ptrtoint i32* %61 to i64
  %65 = getelementptr inbounds %"struct.content::StoredCapabilities", %"struct.content::StoredCapabilities"* %58, i64 -1, i32 0, i32 0, i32 1
  %66 = bitcast i32** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = bitcast i32* %61 to i8*
  tail call void @_ZdlPv(i8* %67) #7
  br label %68

68:                                               ; preds = %63, %57
  %69 = icmp eq %"struct.content::StoredCapabilities"* %59, %50
  br i1 %69, label %70, label %57

70:                                               ; preds = %68
  %71 = bitcast %"class.std::__1::vector.30"* %48 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %52
  %74 = phi i8* [ %72, %70 ], [ %53, %52 ]
  store %"struct.content::StoredCapabilities"* %50, %"struct.content::StoredCapabilities"** %54, align 8
  tail call void @_ZdlPv(i8* %74) #7
  br label %75

75:                                               ; preds = %47, %73
  %76 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 4
  %77 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %77, align 8
  %79 = icmp eq %"class.std::__1::basic_string"* %78, null
  br i1 %79, label %102, label %80

80:                                               ; preds = %75
  %81 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  %82 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 4, i32 0, i32 1
  %83 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %82, align 8
  %84 = icmp eq %"class.std::__1::basic_string"* %83, %78
  br i1 %84, label %100, label %85

85:                                               ; preds = %80, %95
  %86 = phi %"class.std::__1::basic_string"* [ %87, %95 ], [ %83, %80 ]
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 -1
  %88 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  tail call void @_ZdlPv(i8* %94) #7
  br label %95

95:                                               ; preds = %92, %85
  %96 = icmp eq %"class.std::__1::basic_string"* %87, %78
  br i1 %96, label %97, label %85

97:                                               ; preds = %95
  %98 = bitcast %"class.std::__1::vector.23"* %76 to i8**
  %99 = load i8*, i8** %98, align 8
  br label %100

100:                                              ; preds = %97, %80
  %101 = phi i8* [ %99, %97 ], [ %81, %80 ]
  store %"class.std::__1::basic_string"* %78, %"class.std::__1::basic_string"** %82, align 8
  tail call void @_ZdlPv(i8* %101) #7
  br label %102

102:                                              ; preds = %75, %100
  %103 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %104 = load %class.SkBitmap*, %class.SkBitmap** %103, align 8
  store %class.SkBitmap* null, %class.SkBitmap** %103, align 8
  %105 = icmp eq %class.SkBitmap* %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %104) #8
  %107 = bitcast %class.SkBitmap* %104 to i8*
  tail call void @_ZdlPv(i8* %107) #7
  br label %108

108:                                              ; preds = %102, %106
  %109 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 2
  %110 = bitcast %"class.std::__1::basic_string"* %109 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  tail call void @_ZdlPv(i8* %116) #7
  br label %117

117:                                              ; preds = %108, %114
  %118 = getelementptr inbounds %"struct.content::StoredPaymentApp", %"struct.content::StoredPaymentApp"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %118) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content20SupportedDelegationsD1Ev(%"struct.content::SupportedDelegations"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
