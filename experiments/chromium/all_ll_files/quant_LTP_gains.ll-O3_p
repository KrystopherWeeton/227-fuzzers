; ModuleID = '../../third_party/opus/src/silk/quant_LTP_gains.c'
source_filename = "../../third_party/opus/src/silk/quant_LTP_gains.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@silk_LTP_gain_BITS_Q5_ptrs = external local_unnamed_addr constant [3 x i8*], align 16
@silk_LTP_vq_ptrs_Q7 = external local_unnamed_addr constant [3 x i8*], align 16
@silk_LTP_vq_gain_ptrs_Q7 = external local_unnamed_addr constant [3 x i8*], align 16
@silk_LTP_vq_sizes = external local_unnamed_addr constant [3 x i8], align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @silk_quant_LTP_gains(i16* nocapture, i8* nocapture, i8* nocapture, i32* nocapture, i32* nocapture, i32*, i32*, i32, i32, i32) local_unnamed_addr #0 {
  %11 = alloca i32, align 4
  %12 = bitcast i32* %11 to [4 x i8]*
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #3
  %17 = bitcast i32* %13 to i8*
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #3
  store i32 -1431655766, i32* %13, align 4
  %18 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #3
  store i32 -1431655766, i32* %14, align 4
  %19 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #3
  store i32 -1431655766, i32* %15, align 4
  %20 = icmp sgt i32 %8, 0
  %21 = sext i32 %8 to i64
  br i1 %20, label %22, label %224

22:                                               ; preds = %10
  %23 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @silk_LTP_gain_BITS_Q5_ptrs, i64 0, i64 0), align 16
  %24 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @silk_LTP_vq_ptrs_Q7, i64 0, i64 0), align 16
  %25 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @silk_LTP_vq_gain_ptrs_Q7, i64 0, i64 0), align 16
  %26 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @silk_LTP_vq_sizes, i64 0, i64 0), align 1
  %27 = sext i8 %26 to i32
  %28 = load i32, i32* %3, align 4
  %29 = zext i32 %8 to i64
  br label %37

30:                                               ; preds = %62
  store i8 0, i8* %2, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 4 %16, i64 %21, i1 false)
  %31 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @silk_LTP_gain_BITS_Q5_ptrs, i64 0, i64 1), align 8
  %32 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @silk_LTP_vq_ptrs_Q7, i64 0, i64 1), align 8
  %33 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @silk_LTP_vq_gain_ptrs_Q7, i64 0, i64 1), align 8
  %34 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @silk_LTP_vq_sizes, i64 0, i64 1), align 1
  %35 = sext i8 %34 to i32
  %36 = load i32, i32* %3, align 4
  br label %142

37:                                               ; preds = %62, %22
  %38 = phi i64 [ 0, %22 ], [ %66, %62 ]
  %39 = phi i32 [ %28, %22 ], [ %63, %62 ]
  %40 = phi i32 [ 0, %22 ], [ %50, %62 ]
  %41 = phi i32* [ %6, %22 ], [ %65, %62 ]
  %42 = phi i32* [ %5, %22 ], [ %64, %62 ]
  %43 = sub i32 6229, %39
  %44 = call i32 @silk_log2lin(i32 %43) #3
  %45 = add nsw i32 %44, -51
  %46 = getelementptr inbounds [4 x i8], [4 x i8]* %12, i64 0, i64 %38
  call void @silk_VQ_WMat_EC_c(i8* %46, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15, i32* %42, i32* %41, i8* %24, i8* %25, i8* %23, i32 %7, i32 %45, i32 %27) #3
  %47 = load i32, i32* %14, align 4
  %48 = add i32 %47, %40
  %49 = icmp ult i32 %48, 2147483647
  %50 = select i1 %49, i32 %48, i32 2147483647
  %51 = load i32, i32* %15, align 4
  %52 = add nsw i32 %51, 51
  %53 = call i32 @silk_lin2log(i32 %52) #3
  %54 = add nsw i32 %53, %39
  %55 = icmp slt i32 %54, 896
  br i1 %55, label %62, label %56

56:                                               ; preds = %37
  %57 = load i32, i32* %15, align 4
  %58 = add nsw i32 %57, 51
  %59 = call i32 @silk_lin2log(i32 %58) #3
  %60 = add i32 %39, -896
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %56, %37
  %63 = phi i32 [ %61, %56 ], [ 0, %37 ]
  %64 = getelementptr inbounds i32, i32* %42, i64 25
  %65 = getelementptr inbounds i32, i32* %41, i64 5
  %66 = add nuw nsw i64 %38, 1
  %67 = icmp eq i64 %66, %29
  br i1 %67, label %30, label %37

68:                                               ; preds = %221, %223
  %69 = phi i32 [ %216, %223 ], [ %178, %221 ]
  %70 = load i8, i8* %2, align 1
  %71 = sext i8 %70 to i64
  %72 = getelementptr inbounds [3 x i8*], [3 x i8*]* @silk_LTP_vq_ptrs_Q7, i64 0, i64 %71
  %73 = load i8*, i8** %72, align 8
  br i1 %20, label %74, label %131

74:                                               ; preds = %68
  %75 = zext i32 %8 to i64
  br label %76

76:                                               ; preds = %76, %74
  %77 = phi i64 [ 0, %74 ], [ %129, %76 ]
  %78 = getelementptr inbounds i8, i8* %1, i64 %77
  %79 = mul i64 %77, 5
  %80 = and i64 %79, 4294967295
  %81 = load i8, i8* %78, align 1
  %82 = sext i8 %81 to i64
  %83 = mul nsw i64 %82, 5
  %84 = getelementptr inbounds i8, i8* %73, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = sext i8 %85 to i16
  %87 = shl nsw i16 %86, 7
  %88 = getelementptr inbounds i16, i16* %0, i64 %80
  store i16 %87, i16* %88, align 2
  %89 = load i8, i8* %78, align 1
  %90 = sext i8 %89 to i64
  %91 = mul nsw i64 %90, 5
  %92 = add nsw i64 %91, 1
  %93 = getelementptr inbounds i8, i8* %73, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = sext i8 %94 to i16
  %96 = shl nsw i16 %95, 7
  %97 = add nuw nsw i64 %80, 1
  %98 = getelementptr inbounds i16, i16* %0, i64 %97
  store i16 %96, i16* %98, align 2
  %99 = load i8, i8* %78, align 1
  %100 = sext i8 %99 to i64
  %101 = mul nsw i64 %100, 5
  %102 = add nsw i64 %101, 2
  %103 = getelementptr inbounds i8, i8* %73, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = sext i8 %104 to i16
  %106 = shl nsw i16 %105, 7
  %107 = add nuw nsw i64 %80, 2
  %108 = getelementptr inbounds i16, i16* %0, i64 %107
  store i16 %106, i16* %108, align 2
  %109 = load i8, i8* %78, align 1
  %110 = sext i8 %109 to i64
  %111 = mul nsw i64 %110, 5
  %112 = add nsw i64 %111, 3
  %113 = getelementptr inbounds i8, i8* %73, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = sext i8 %114 to i16
  %116 = shl nsw i16 %115, 7
  %117 = add nuw nsw i64 %80, 3
  %118 = getelementptr inbounds i16, i16* %0, i64 %117
  store i16 %116, i16* %118, align 2
  %119 = load i8, i8* %78, align 1
  %120 = sext i8 %119 to i64
  %121 = mul nsw i64 %120, 5
  %122 = add nsw i64 %121, 4
  %123 = getelementptr inbounds i8, i8* %73, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = sext i8 %124 to i16
  %126 = shl nsw i16 %125, 7
  %127 = add nuw nsw i64 %80, 4
  %128 = getelementptr inbounds i16, i16* %0, i64 %127
  store i16 %126, i16* %128, align 2
  %129 = add nuw nsw i64 %77, 1
  %130 = icmp eq i64 %129, %75
  br i1 %130, label %131, label %76

131:                                              ; preds = %76, %224, %68
  %132 = phi i32 [ %225, %224 ], [ %69, %68 ], [ %69, %76 ]
  %133 = phi i32 [ 0, %224 ], [ %199, %68 ], [ %199, %76 ]
  %134 = icmp eq i32 %8, 2
  %135 = select i1 %134, i32 1, i32 2
  %136 = lshr i32 %133, %135
  store i32 %132, i32* %3, align 4
  %137 = call i32 @silk_lin2log(i32 %136) #3
  %138 = shl i32 %137, 16
  %139 = add i32 %138, -125829120
  %140 = ashr exact i32 %139, 16
  %141 = mul nsw i32 %140, -3
  store i32 %141, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #3
  ret void

142:                                              ; preds = %167, %30
  %143 = phi i64 [ 0, %30 ], [ %171, %167 ]
  %144 = phi i32 [ %36, %30 ], [ %168, %167 ]
  %145 = phi i32 [ 0, %30 ], [ %155, %167 ]
  %146 = phi i32* [ %6, %30 ], [ %170, %167 ]
  %147 = phi i32* [ %5, %30 ], [ %169, %167 ]
  %148 = sub i32 6229, %144
  %149 = call i32 @silk_log2lin(i32 %148) #3
  %150 = add nsw i32 %149, -51
  %151 = getelementptr inbounds [4 x i8], [4 x i8]* %12, i64 0, i64 %143
  call void @silk_VQ_WMat_EC_c(i8* %151, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15, i32* %147, i32* %146, i8* %32, i8* %33, i8* %31, i32 %7, i32 %150, i32 %35) #3
  %152 = load i32, i32* %14, align 4
  %153 = add i32 %152, %145
  %154 = icmp ult i32 %153, 2147483647
  %155 = select i1 %154, i32 %153, i32 2147483647
  %156 = load i32, i32* %15, align 4
  %157 = add nsw i32 %156, 51
  %158 = call i32 @silk_lin2log(i32 %157) #3
  %159 = add nsw i32 %158, %144
  %160 = icmp slt i32 %159, 896
  br i1 %160, label %167, label %161

161:                                              ; preds = %142
  %162 = load i32, i32* %15, align 4
  %163 = add nsw i32 %162, 51
  %164 = call i32 @silk_lin2log(i32 %163) #3
  %165 = add i32 %144, -896
  %166 = add i32 %165, %164
  br label %167

167:                                              ; preds = %161, %142
  %168 = phi i32 [ %166, %161 ], [ 0, %142 ]
  %169 = getelementptr inbounds i32, i32* %147, i64 25
  %170 = getelementptr inbounds i32, i32* %146, i64 5
  %171 = add nuw nsw i64 %143, 1
  %172 = icmp eq i64 %171, %29
  br i1 %172, label %173, label %142

173:                                              ; preds = %167
  %174 = icmp sgt i32 %155, %50
  br i1 %174, label %176, label %175

175:                                              ; preds = %173
  store i8 1, i8* %2, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 4 %16, i64 %21, i1 false)
  br label %176

176:                                              ; preds = %175, %173
  %177 = phi i32 [ %155, %175 ], [ %48, %173 ]
  %178 = phi i32 [ %168, %175 ], [ %63, %173 ]
  %179 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @silk_LTP_gain_BITS_Q5_ptrs, i64 0, i64 2), align 16
  %180 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @silk_LTP_vq_ptrs_Q7, i64 0, i64 2), align 16
  %181 = load i8*, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @silk_LTP_vq_gain_ptrs_Q7, i64 0, i64 2), align 16
  %182 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @silk_LTP_vq_sizes, i64 0, i64 2), align 1
  %183 = sext i8 %182 to i32
  %184 = load i32, i32* %3, align 4
  br label %185

185:                                              ; preds = %215, %176
  %186 = phi i64 [ 0, %176 ], [ %219, %215 ]
  %187 = phi i32 [ %184, %176 ], [ %216, %215 ]
  %188 = phi i32 [ 0, %176 ], [ %203, %215 ]
  %189 = phi i32 [ 0, %176 ], [ %199, %215 ]
  %190 = phi i32* [ %6, %176 ], [ %218, %215 ]
  %191 = phi i32* [ %5, %176 ], [ %217, %215 ]
  %192 = sub i32 6229, %187
  %193 = call i32 @silk_log2lin(i32 %192) #3
  %194 = add nsw i32 %193, -51
  %195 = getelementptr inbounds [4 x i8], [4 x i8]* %12, i64 0, i64 %186
  call void @silk_VQ_WMat_EC_c(i8* %195, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15, i32* %191, i32* %190, i8* %180, i8* %181, i8* %179, i32 %7, i32 %194, i32 %183) #3
  %196 = load i32, i32* %13, align 4
  %197 = add i32 %196, %189
  %198 = icmp ult i32 %197, 2147483647
  %199 = select i1 %198, i32 %197, i32 2147483647
  %200 = load i32, i32* %14, align 4
  %201 = add i32 %200, %188
  %202 = icmp ult i32 %201, 2147483647
  %203 = select i1 %202, i32 %201, i32 2147483647
  %204 = load i32, i32* %15, align 4
  %205 = add nsw i32 %204, 51
  %206 = call i32 @silk_lin2log(i32 %205) #3
  %207 = add nsw i32 %206, %187
  %208 = icmp slt i32 %207, 896
  br i1 %208, label %215, label %209

209:                                              ; preds = %185
  %210 = load i32, i32* %15, align 4
  %211 = add nsw i32 %210, 51
  %212 = call i32 @silk_lin2log(i32 %211) #3
  %213 = add i32 %187, -896
  %214 = add i32 %213, %212
  br label %215

215:                                              ; preds = %209, %185
  %216 = phi i32 [ %214, %209 ], [ 0, %185 ]
  %217 = getelementptr inbounds i32, i32* %191, i64 25
  %218 = getelementptr inbounds i32, i32* %190, i64 5
  %219 = add nuw nsw i64 %186, 1
  %220 = icmp eq i64 %219, %29
  br i1 %220, label %221, label %185

221:                                              ; preds = %215
  %222 = icmp sgt i32 %203, %177
  br i1 %222, label %68, label %223

223:                                              ; preds = %221
  store i8 2, i8* %2, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 4 %16, i64 %21, i1 false)
  br label %68

224:                                              ; preds = %10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 4 %16, i64 %21, i1 false)
  store i8 1, i8* %2, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 4 %16, i64 %21, i1 false)
  %225 = load i32, i32* %3, align 4
  store i8 2, i8* %2, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 4 %16, i64 %21, i1 false)
  br label %131
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @silk_log2lin(i32) local_unnamed_addr #2

declare void @silk_VQ_WMat_EC_c(i8*, i32*, i32*, i32*, i32*, i32*, i8*, i8*, i8*, i32, i32, i32) local_unnamed_addr #2

declare i32 @silk_lin2log(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
