; ModuleID = '../../third_party/pdfium/fpdfsdk/fpdf_thumbnail.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/fpdf_thumbnail.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.fpdf_page_t__ = type opaque
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.13", %"class.fxcrt::RetainPtr.17" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map" }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.0" }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.181" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.184", %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.197", %"class.std::__1::__compressed_pair.199", [4 x i8] }>
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186", %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { float }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%"class.fxcrt::RetainPtr.17" = type { %"class.std::__1::unique_ptr.18" }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.129" }
%"class.fxcrt::RetainPtr.129" = type { %"class.std::__1::unique_ptr.130" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%class.CPDF_Page = type { %class.IPDF_Page, %class.CPDF_PageObjectHolder, %class.CFX_STemplate, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.fxcrt::ObservedPtr" }
%class.IPDF_Page = type { %"class.fxcrt::Retainable" }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr", %"class.std::__1::map.23", %"class.std::__1::map.34", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr", %"class.std::__1::vector", %"class.std::__1::unique_ptr.50", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set" }
%"class.std::__1::map.23" = type { %"class.std::__1::__tree.24" }
%"class.std::__1::__tree.24" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::map.34" = type { %"class.std::__1::__tree.35" }
%"class.std::__1::__tree.35" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.36", %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_Transparency = type { i8, i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.60" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.54"**, %"class.std::__1::unique_ptr.54"**, %"class.std::__1::unique_ptr.54"**, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type opaque
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.std::__1::unique_ptr.54"** }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.64" }
%"class.std::__1::__tree.64" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.65", %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%class.CFX_STemplate = type { float, float }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.CPDF_Page::RenderCacheIface"* }
%"class.CPDF_Page::RenderCacheIface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.CPDF_Page::RenderContextIface"* }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPDF_Page::View"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CPDF_Page::View" = type { %"class.fxcrt::Observable" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set.85" }
%"class.std::__1::set.85" = type { %"class.std::__1::__tree.86" }
%"class.std::__1::__tree.86" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%struct.fpdf_bitmap_t__ = type opaque
%"class.fxcrt::RetainPtr.175" = type { %"class.std::__1::unique_ptr.176" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %class.CFX_DIBBase* }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr.101", %"class.std::__1::vector.107" }
%"class.fxcrt::RetainPtr.101" = type { %"class.std::__1::unique_ptr.102" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.13", %"class.fxcrt::UnownedPtr.128" }
%"class.fxcrt::UnownedPtr.128" = type { i8* }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { i32*, i32*, %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { i32* }
%class.CPDF_DIB = type { %class.CFX_DIBBase, %"class.fxcrt::UnownedPtr", %"class.fxcrt::RetainPtr.112", %"class.fxcrt::RetainPtr.118", %"class.fxcrt::RetainPtr.124", %"class.fxcrt::RetainPtr.137", i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.150", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13", %"class.fxcrt::RetainPtr.101", %"class.fxcrt::RetainPtr.95", %"class.fxcrt::RetainPtr.124", %"class.std::__1::unique_ptr.157", %"struct.CPDF_DIB::JpxSMaskInlineData", %"class.std::__1::unique_ptr.169" }
%"class.fxcrt::RetainPtr.112" = type { %"class.std::__1::unique_ptr.113" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %class.CPDF_Stream* }
%"class.fxcrt::RetainPtr.118" = type { %"class.std::__1::unique_ptr.119" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::RetainPtr.137" = type { %"class.std::__1::unique_ptr.138" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.141", %"class.fxcrt::RetainPtr.142", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.141" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.142" = type { %"class.std::__1::unique_ptr.143" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %class.CPDF_Array* }
%class.CPDF_Array = type opaque
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %struct.DIB_COMP_DATA*, %struct.DIB_COMP_DATA*, %"class.std::__1::__compressed_pair.152" }
%struct.DIB_COMP_DATA = type { float, float, i32, i32 }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %struct.DIB_COMP_DATA* }
%"class.fxcrt::RetainPtr.95" = type { %"class.std::__1::unique_ptr.96" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %class.CPDF_DIB* }
%"class.fxcrt::RetainPtr.124" = type { %"class.std::__1::unique_ptr.125" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.118", %"class.fxcrt::RetainPtr.112" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.fxcodec::ScanlineDecoder"* }
%"class.fxcodec::ScanlineDecoder" = type opaque
%"struct.CPDF_DIB::JpxSMaskInlineData" = type { i32, i32, %"class.std::__1::vector.163" }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { i8*, i8*, %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.fxcodec::Jbig2Context"* }
%"class.fxcodec::Jbig2Context" = type opaque

@.str = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"Thumb\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FPDFPage_GetDecodedThumbnailData(%struct.fpdf_page_t__*, i8*, i64) local_unnamed_addr #0 {
  %4 = tail call fastcc %class.CPDF_Stream* @_ZN12_GLOBAL__N_130CPDFStreamForThumbnailFromPageEP13fpdf_page_t__(%struct.fpdf_page_t__* %0)
  %5 = icmp eq %class.CPDF_Stream* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call i64 @_Z36DecodeStreamMaybeCopyAndReturnLengthPK11CPDF_StreamPvm(%class.CPDF_Stream* nonnull %4, i8* %1, i64 %2) #5
  br label %8

8:                                                ; preds = %3, %6
  %9 = phi i64 [ %7, %6 ], [ 0, %3 ]
  ret i64 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %class.CPDF_Stream* @_ZN12_GLOBAL__N_130CPDFStreamForThumbnailFromPageEP13fpdf_page_t__(%struct.fpdf_page_t__*) unnamed_addr #0 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = tail call %class.CPDF_Page* @_Z20CPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__* %0) #5
  %5 = icmp eq %class.CPDF_Page* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %4, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %7, align 8
  %9 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #5
  %10 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %8, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #5
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #5
  %13 = call %class.CPDF_Stream* @_ZNK15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %8, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3) #5
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #5
  br label %14

14:                                               ; preds = %11, %6, %1
  %15 = phi %class.CPDF_Stream* [ null, %1 ], [ %13, %11 ], [ null, %6 ]
  ret %class.CPDF_Stream* %15
}

declare i64 @_Z36DecodeStreamMaybeCopyAndReturnLengthPK11CPDF_StreamPvm(%class.CPDF_Stream*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @FPDFPage_GetRawThumbnailData(%struct.fpdf_page_t__*, i8*, i64) local_unnamed_addr #0 {
  %4 = tail call fastcc %class.CPDF_Stream* @_ZN12_GLOBAL__N_130CPDFStreamForThumbnailFromPageEP13fpdf_page_t__(%struct.fpdf_page_t__* %0)
  %5 = icmp eq %class.CPDF_Stream* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call i64 @_Z36GetRawStreamMaybeCopyAndReturnLengthPK11CPDF_StreamPvm(%class.CPDF_Stream* nonnull %4, i8* %1, i64 %2) #5
  br label %8

8:                                                ; preds = %3, %6
  %9 = phi i64 [ %7, %6 ], [ 0, %3 ]
  ret i64 %9
}

declare i64 @_Z36GetRawStreamMaybeCopyAndReturnLengthPK11CPDF_StreamPvm(%class.CPDF_Stream*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.fpdf_bitmap_t__* @FPDFPage_GetThumbnailAsBitmap(%struct.fpdf_page_t__*) local_unnamed_addr #0 {
  %2 = alloca %"class.fxcrt::RetainPtr.175", align 8
  %3 = tail call fastcc %class.CPDF_Stream* @_ZN12_GLOBAL__N_130CPDFStreamForThumbnailFromPageEP13fpdf_page_t__(%struct.fpdf_page_t__* %0)
  %4 = icmp eq %class.CPDF_Stream* %3, null
  br i1 %4, label %69, label %5

5:                                                ; preds = %1
  %6 = tail call %class.CPDF_Page* @_Z20CPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__* %0) #5
  %7 = tail call i8* @_Znwm(i64 248) #6, !noalias !2
  %8 = bitcast i8* %7 to %class.CPDF_DIB*
  tail call void @_ZN8CPDF_DIBC1Ev(%class.CPDF_DIB* nonnull %8) #5, !noalias !2
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8, !noalias !2
  %12 = add nsw i64 %11, 1
  store i64 %12, i64* %10, align 8, !noalias !2
  %13 = tail call %class.CPDF_Document* @_ZNK9CPDF_Page11GetDocumentEv(%class.CPDF_Page* %6) #5
  %14 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %6, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %14, align 8
  %16 = tail call zeroext i8 @_ZN8CPDF_DIB16StartLoadDIBBaseEP13CPDF_DocumentPK11CPDF_StreambPK15CPDF_DictionaryS7_bN15CPDF_ColorSpace6FamilyEb(%class.CPDF_DIB* nonnull %8, %class.CPDF_Document* %13, %class.CPDF_Stream* nonnull %3, i1 zeroext false, %class.CPDF_Dictionary* null, %class.CPDF_Dictionary* %15, i1 zeroext false, i32 0, i1 zeroext false) #5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %58, label %18

18:                                               ; preds = %5
  %19 = ptrtoint i8* %7 to i64
  %20 = tail call i8* @_Znwm(i64 80) #6, !noalias !5
  %21 = bitcast i8* %20 to %class.CFX_DIBitmap*
  tail call void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap* nonnull %21) #5, !noalias !5
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8, !noalias !5
  %25 = add nsw i64 %24, 1
  store i64 %25, i64* %23, align 8, !noalias !5
  %26 = bitcast %"class.fxcrt::RetainPtr.175"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #5
  %27 = bitcast %"class.fxcrt::RetainPtr.175"* %2 to i64*
  store i64 %19, i64* %27, align 8
  %28 = load i64, i64* %10, align 8
  %29 = add nsw i64 %28, 1
  store i64 %29, i64* %10, align 8
  %30 = call zeroext i1 @_ZN12CFX_DIBitmap4CopyERKN5fxcrt9RetainPtrI11CFX_DIBBaseEE(%class.CFX_DIBitmap* nonnull %21, %"class.fxcrt::RetainPtr.175"* nonnull dereferenceable(8) %2) #5
  %31 = getelementptr inbounds %"class.fxcrt::RetainPtr.175", %"class.fxcrt::RetainPtr.175"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %31, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %31, align 8
  %33 = icmp eq %class.CFX_DIBBase* %32, null
  br i1 %33, label %45, label %34

34:                                               ; preds = %18
  %35 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %32, i64 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = add nsw i64 %36, -1
  store i64 %37, i64* %35, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %45

39:                                               ; preds = %34
  %40 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %32, i64 0, i32 0
  %41 = bitcast %class.CFX_DIBBase* %32 to void (%"class.fxcrt::Retainable"*)***
  %42 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %42, i64 1
  %44 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %43, align 8
  call void %44(%"class.fxcrt::Retainable"* nonnull %40) #5
  br label %45

45:                                               ; preds = %18, %34, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #5
  br i1 %30, label %46, label %48

46:                                               ; preds = %45
  %47 = bitcast i8* %20 to %struct.fpdf_bitmap_t__*
  br label %58

48:                                               ; preds = %45
  %49 = load i64, i64* %23, align 8
  %50 = add nsw i64 %49, -1
  store i64 %50, i64* %23, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast i8* %20 to %"class.fxcrt::Retainable"*
  %54 = bitcast i8* %20 to void (%"class.fxcrt::Retainable"*)***
  %55 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %55, i64 1
  %57 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %56, align 8
  call void %57(%"class.fxcrt::Retainable"* nonnull %53) #5
  br label %58

58:                                               ; preds = %5, %46, %48, %52
  %59 = phi %struct.fpdf_bitmap_t__* [ null, %5 ], [ %47, %46 ], [ null, %48 ], [ null, %52 ]
  %60 = load i64, i64* %10, align 8
  %61 = add nsw i64 %60, -1
  store i64 %61, i64* %10, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %58
  %64 = bitcast i8* %7 to %"class.fxcrt::Retainable"*
  %65 = bitcast i8* %7 to void (%"class.fxcrt::Retainable"*)***
  %66 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %66, i64 1
  %68 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %67, align 8
  call void %68(%"class.fxcrt::Retainable"* nonnull %64) #5
  br label %69

69:                                               ; preds = %63, %58, %1
  %70 = phi %struct.fpdf_bitmap_t__* [ null, %1 ], [ %59, %58 ], [ %59, %63 ]
  ret %struct.fpdf_bitmap_t__* %70
}

declare %class.CPDF_Page* @_Z20CPDFPageFromFPDFPageP13fpdf_page_t__(%struct.fpdf_page_t__*) local_unnamed_addr #2

declare zeroext i8 @_ZN8CPDF_DIB16StartLoadDIBBaseEP13CPDF_DocumentPK11CPDF_StreambPK15CPDF_DictionaryS7_bN15CPDF_ColorSpace6FamilyEb(%class.CPDF_DIB*, %class.CPDF_Document*, %class.CPDF_Stream*, i1 zeroext, %class.CPDF_Dictionary*, %class.CPDF_Dictionary*, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #2

declare %class.CPDF_Document* @_ZNK9CPDF_Page11GetDocumentEv(%class.CPDF_Page*) unnamed_addr #2

declare zeroext i1 @_ZN12CFX_DIBitmap4CopyERKN5fxcrt9RetainPtrI11CFX_DIBBaseEE(%class.CFX_DIBitmap*, %"class.fxcrt::RetainPtr.175"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

declare %class.CPDF_Stream* @_ZNK15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN8CPDF_DIBC1Ev(%class.CPDF_DIB*) unnamed_addr #2

declare void @_ZN12CFX_DIBitmapC1Ev(%class.CFX_DIBitmap*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI8CPDF_DIBJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI8CPDF_DIBJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZN6pdfium10MakeRetainI12CFX_DIBitmapJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
