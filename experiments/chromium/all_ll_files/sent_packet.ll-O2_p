; ModuleID = '../../third_party/webrtc/rtc_base/network/sent_packet.cc'
source_filename = "../../third_party/webrtc/rtc_base/network/sent_packet.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.rtc::PacketInfo" = type { i8, i8, i32, i32, %"class.absl::optional", i64, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i16 }
%"struct.rtc::SentPacket" = type { i64, i64, %"struct.rtc::PacketInfo" }

@_ZN3rtc10PacketInfoC1Ev = hidden unnamed_addr alias void (%"struct.rtc::PacketInfo"*), void (%"struct.rtc::PacketInfo"*)* @_ZN3rtc10PacketInfoC2Ev
@_ZN3rtc10PacketInfoC1ERKS0_ = hidden unnamed_addr alias void (%"struct.rtc::PacketInfo"*, %"struct.rtc::PacketInfo"*), void (%"struct.rtc::PacketInfo"*, %"struct.rtc::PacketInfo"*)* @_ZN3rtc10PacketInfoC2ERKS0_
@_ZN3rtc10PacketInfoD1Ev = hidden unnamed_addr alias void (%"struct.rtc::PacketInfo"*), void (%"struct.rtc::PacketInfo"*)* @_ZN3rtc10PacketInfoD2Ev
@_ZN3rtc10SentPacketC1Ev = hidden unnamed_addr alias void (%"struct.rtc::SentPacket"*), void (%"struct.rtc::SentPacket"*)* @_ZN3rtc10SentPacketC2Ev
@_ZN3rtc10SentPacketC1Ell = hidden unnamed_addr alias void (%"struct.rtc::SentPacket"*, i64, i64), void (%"struct.rtc::SentPacket"*, i64, i64)* @_ZN3rtc10SentPacketC2Ell
@_ZN3rtc10SentPacketC1EllRKNS_10PacketInfoE = hidden unnamed_addr alias void (%"struct.rtc::SentPacket"*, i64, i64, %"struct.rtc::PacketInfo"*), void (%"struct.rtc::SentPacket"*, i64, i64, %"struct.rtc::PacketInfo"*)* @_ZN3rtc10SentPacketC2EllRKNS_10PacketInfoE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3rtc10PacketInfoC2Ev(%"struct.rtc::PacketInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.rtc::PacketInfo", %"struct.rtc::PacketInfo"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.rtc::PacketInfo", %"struct.rtc::PacketInfo"* %0, i64 0, i32 1
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"struct.rtc::PacketInfo", %"struct.rtc::PacketInfo"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.rtc::PacketInfo", %"struct.rtc::PacketInfo"* %0, i64 0, i32 5
  %6 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 9, i1 false)
  %7 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc10PacketInfoC2ERKS0_(%"struct.rtc::PacketInfo"* nocapture, %"struct.rtc::PacketInfo"* nocapture readonly dereferenceable(40)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.rtc::PacketInfo", %"struct.rtc::PacketInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.rtc::PacketInfo", %"struct.rtc::PacketInfo"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3rtc10PacketInfoD2Ev(%"struct.rtc::PacketInfo"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc10SentPacketC2Ev(%"struct.rtc::SentPacket"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %0, i64 0, i32 2, i32 0
  %3 = bitcast %"struct.rtc::SentPacket"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 -1, i64 16, i1 false)
  store i8 0, i8* %2, align 8
  %4 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %0, i64 0, i32 2, i32 2
  %6 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %0, i64 0, i32 2, i32 5
  %7 = bitcast i32* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 9, i1 false) #4
  %8 = bitcast i64* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc10SentPacketC2Ell(%"struct.rtc::SentPacket"* nocapture, i64, i64) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %0, i64 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %0, i64 0, i32 1
  store i64 %2, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %0, i64 0, i32 2, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %0, i64 0, i32 2, i32 1
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %0, i64 0, i32 2, i32 2
  %9 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %0, i64 0, i32 2, i32 5
  %10 = bitcast i32* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 9, i1 false) #4
  %11 = bitcast i64* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3rtc10SentPacketC2EllRKNS_10PacketInfoE(%"struct.rtc::SentPacket"* nocapture, i64, i64, %"struct.rtc::PacketInfo"* nocapture readonly dereferenceable(40)) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %0, i64 0, i32 0
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %0, i64 0, i32 1
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %0, i64 0, i32 2, i32 0
  %8 = getelementptr inbounds %"struct.rtc::PacketInfo", %"struct.rtc::PacketInfo"* %3, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 40, i1 false) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
