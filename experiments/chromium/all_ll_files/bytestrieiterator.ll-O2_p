; ModuleID = '../../third_party/icu/source/common/bytestrieiterator.cpp'
source_filename = "../../third_party/icu/source/common/bytestrieiterator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.icu_69::MaybeStackArray" = type <{ i8*, i32, i8, [40 x i8], [3 x i8] }>
%"class.icu_69::BytesTrie::Iterator" = type { i8*, i8*, i8*, i32, i32, %"class.icu_69::CharString"*, i32, i32, %"class.icu_69::UVector32"* }
%"class.icu_69::CharString" = type { %"class.icu_69::MaybeStackArray", i32, [4 x i8] }
%"class.icu_69::UVector32" = type { %"class.icu_69::UObject", i32, i32, i32, i32* }
%"class.icu_69::UObject" = type { i32 (...)** }
%"class.icu_69::BytesTrie" = type <{ i8*, i8*, i8*, i32, [4 x i8] }>

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_ = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_ = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv = comdat any

$_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EEixEl = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi = comdat any

$_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode = comdat any

@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1Ei10UErrorCode = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, i32, i32), void (%"class.icu_69::MaybeStackArray"*, i32, i32)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode
@_ZN6icu_6915MaybeStackArrayIcLi40EED1Ev = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev
@_ZN6icu_6915MaybeStackArrayIcLi40EEC1EOS1_ = weak_odr hidden unnamed_addr alias void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*), void (%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"*)* @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_
@_ZN6icu_699BytesTrie8IteratorC1EPKviR10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::BytesTrie::Iterator"*, i8*, i32, i32*), void (%"class.icu_69::BytesTrie::Iterator"*, i8*, i32, i32*)* @_ZN6icu_699BytesTrie8IteratorC2EPKviR10UErrorCode
@_ZN6icu_699BytesTrie8IteratorC1ERKS0_iR10UErrorCode = hidden unnamed_addr alias void (%"class.icu_69::BytesTrie::Iterator"*, %"class.icu_69::BytesTrie"*, i32, i32*), void (%"class.icu_69::BytesTrie::Iterator"*, %"class.icu_69::BytesTrie"*, i32, i32*)* @_ZN6icu_699BytesTrie8IteratorC2ERKS0_iR10UErrorCode
@_ZN6icu_699BytesTrie8IteratorD1Ev = hidden unnamed_addr alias void (%"class.icu_69::BytesTrie::Iterator"*), void (%"class.icu_69::BytesTrie::Iterator"*)* @_ZN6icu_699BytesTrie8IteratorD2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %3, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2Ei10UErrorCode(%"class.icu_69::MaybeStackArray"*, i32, i32) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5Ei10UErrorCode) align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = icmp slt i32 %2, 1
  %9 = icmp sgt i32 %1, 40
  %10 = and i1 %9, %8
  br i1 %10, label %11, label %21

11:                                               ; preds = %3
  %12 = sext i32 %1 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = load i8, i8* %7, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %19) #9
  br label %20

20:                                               ; preds = %18, %15
  store i8* %13, i8** %4, align 8
  store i32 %1, i32* %6, align 8
  store i8 1, i8* %7, align 4
  br label %21

21:                                               ; preds = %3, %11, %20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE6resizeEii(%"class.icu_69::MaybeStackArray"*, i32, i32) local_unnamed_addr #1 comdat align 2 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %31

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  %7 = tail call noalias i8* @uprv_malloc_69(i64 %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %5
  %10 = icmp sgt i32 %2, 0
  br i1 %10, label %11, label %21

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp slt i32 %13, %2
  %15 = select i1 %14, i32 %13, i32 %2
  %16 = icmp sgt i32 %15, %1
  %17 = select i1 %16, i32 %1, i32 %15
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %7, i8* align 1 %19, i64 %20, i1 false)
  br label %21

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @uprv_free_69(i8* %27) #9
  br label %28

28:                                               ; preds = %21, %25
  %29 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %7, i8** %29, align 8
  %30 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %1, i32* %30, align 8
  store i8 1, i8* %22, align 4
  br label %31

31:                                               ; preds = %3, %28, %5
  %32 = phi i8* [ null, %5 ], [ %7, %28 ], [ null, %3 ]
  ret i8* %32
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EED2Ev(%"class.icu_69::MaybeStackArray"*) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #9
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12releaseArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @uprv_free_69(i8* %7) #9
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EEC2EOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) unnamed_addr #0 comdat($_ZN6icu_6915MaybeStackArrayIcLi40EEC5EOS1_) align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %4 = bitcast %"class.icu_69::MaybeStackArray"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.icu_69::MaybeStackArray"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  store i32 %9, i32* %7, align 8
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  store i8 %12, i8* %10, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %18 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  store i8* %18, i8** %17, align 8
  %19 = load i32, i32* %8, align 8
  %20 = sext i32 %19 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %18, i8* align 1 %13, i64 %20, i1 false)
  br label %22

21:                                               ; preds = %2
  store i8* %14, i8** %3, align 8
  store i32 40, i32* %8, align 8
  store i8 0, i8* %11, align 4
  br label %22

22:                                               ; preds = %21, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE17resetToStackArrayEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %2, i8** %3, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %4, align 8
  %5 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden dereferenceable(56) %"class.icu_69::MaybeStackArray"* @_ZN6icu_6915MaybeStackArrayIcLi40EEaSEOS1_(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @uprv_free_69(i8* %8) #9
  br label %9

9:                                                ; preds = %2, %6
  %10 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  store i8 %14, i8* %3, align 4
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 3, i64 0
  %18 = icmp eq i8* %16, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load i32, i32* %10, align 8
  %23 = sext i32 %22 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %20, i8* align 1 %16, i64 %23, i1 false)
  br label %26

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %16, i8** %25, align 8
  store i8* %17, i8** %15, align 8
  store i32 40, i32* %10, align 8
  store i8 0, i8* %13, align 4
  br label %26

26:                                               ; preds = %24, %19
  ret %"class.icu_69::MaybeStackArray"* %0
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i32 @_ZNK6icu_6915MaybeStackArrayIcLi40EE11getCapacityEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE8getAliasEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EE13getArrayLimitEv(%"class.icu_69::MaybeStackArray"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds i8, i8* %3, i64 %6
  ret i8* %7
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZNK6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(1) i8* @_ZN6icu_6915MaybeStackArrayIcLi40EEixEl(%"class.icu_69::MaybeStackArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE12aliasInsteadEPci(%"class.icu_69::MaybeStackArray"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp ne i8* %1, null
  %5 = icmp sgt i32 %2, 0
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %17

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @uprv_free_69(i8* %13) #9
  br label %14

14:                                               ; preds = %7, %11
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %1, i8** %15, align 8
  %16 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %2, i32* %16, align 8
  store i8 0, i8* %8, align 4
  br label %17

17:                                               ; preds = %14, %3
  ret void
}

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define weak_odr hidden i8* @_ZN6icu_6915MaybeStackArrayIcLi40EE13orphanOrCloneEiRi(%"class.icu_69::MaybeStackArray"*, i32, i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  br label %23

10:                                               ; preds = %3
  %11 = icmp slt i32 %1, 1
  br i1 %11, label %29, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  %16 = select i1 %15, i32 %14, i32 %1
  %17 = sext i32 %16 to i64
  %18 = tail call noalias i8* @uprv_malloc_69(i64 %17) #8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 %22, i64 %17, i1 false)
  br label %23

23:                                               ; preds = %20, %7
  %24 = phi i32 [ %1, %7 ], [ %16, %20 ]
  %25 = phi i8* [ %9, %7 ], [ %18, %20 ]
  store i32 %24, i32* %2, align 4
  %26 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 3, i64 0
  %27 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 40, i32* %28, align 8
  store i8 0, i8* %4, align 4
  br label %29

29:                                               ; preds = %12, %10, %23
  %30 = phi i8* [ %25, %23 ], [ null, %10 ], [ null, %12 ]
  ret i8* %30
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN6icu_6915MaybeStackArrayIcLi40EE8copyFromERKS1_R10UErrorCode(%"class.icu_69::MaybeStackArray"*, %"class.icu_69::MaybeStackArray"* dereferenceable(56), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %6, label %27

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6
  %11 = sext i32 %8 to i64
  %12 = tail call noalias i8* @uprv_malloc_69(i64 %11) #8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @uprv_free_69(i8* %20) #9
  br label %22

21:                                               ; preds = %10, %6
  store i32 7, i32* %2, align 4
  br label %27

22:                                               ; preds = %18, %14
  %23 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 0
  store i8* %12, i8** %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %0, i64 0, i32 1
  store i32 %8, i32* %24, align 8
  store i8 1, i8* %15, align 4
  %25 = getelementptr inbounds %"class.icu_69::MaybeStackArray", %"class.icu_69::MaybeStackArray"* %1, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %26, i64 %11, i1 false)
  br label %27

27:                                               ; preds = %3, %21, %22
  ret void
}

declare void @uprv_free_69(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699BytesTrie8IteratorC2EPKviR10UErrorCode(%"class.icu_69::BytesTrie::Iterator"* nocapture, i8*, i32, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 1
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 2
  %8 = ptrtoint i8* %1 to i64
  %9 = bitcast i8** %7 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 3
  store i32 -1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 4
  store i32 -1, i32* %11, align 4
  %12 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 5
  store %"class.icu_69::CharString"* null, %"class.icu_69::CharString"** %12, align 8
  %13 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 6
  store i32 %2, i32* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 7
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 8
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %15, align 8
  %16 = load i32, i32* %3, align 4
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %18, label %46

18:                                               ; preds = %4
  %19 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 64) #9
  %20 = icmp eq i8* %19, null
  br i1 %20, label %30, label %21

21:                                               ; preds = %18
  %22 = bitcast i8* %19 to %"class.icu_69::CharString"*
  %23 = bitcast i8* %19 to i8**
  %24 = getelementptr inbounds i8, i8* %19, i64 13
  store i8* %24, i8** %23, align 8
  %25 = getelementptr inbounds i8, i8* %19, i64 8
  %26 = bitcast i8* %25 to i32*
  store i32 40, i32* %26, align 8
  %27 = getelementptr inbounds i8, i8* %19, i64 12
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds i8, i8* %19, i64 56
  %29 = bitcast i8* %28 to i32*
  store i32 0, i32* %29, align 8
  store i8 0, i8* %24, align 1
  br label %30

30:                                               ; preds = %21, %18
  %31 = phi %"class.icu_69::CharString"* [ %22, %21 ], [ null, %18 ]
  store %"class.icu_69::CharString"* %31, %"class.icu_69::CharString"** %12, align 8
  %32 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 32) #9
  %33 = icmp eq i8* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast i8* %32 to %"class.icu_69::UVector32"*
  tail call void @_ZN6icu_699UVector32C1ER10UErrorCode(%"class.icu_69::UVector32"* nonnull %35, i32* dereferenceable(4) %3) #9
  br label %36

36:                                               ; preds = %34, %30
  %37 = phi %"class.icu_69::UVector32"* [ %35, %34 ], [ null, %30 ]
  store %"class.icu_69::UVector32"* %37, %"class.icu_69::UVector32"** %15, align 8
  %38 = load i32, i32* %3, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %12, align 8
  %42 = icmp eq %"class.icu_69::CharString"* %41, null
  %43 = icmp eq %"class.icu_69::UVector32"* %37, null
  %44 = or i1 %43, %42
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  store i32 7, i32* %3, align 4
  br label %46

46:                                               ; preds = %40, %36, %4, %45
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZN6icu_697UMemorynwEm(i64) local_unnamed_addr #5

declare void @_ZN6icu_699UVector32C1ER10UErrorCode(%"class.icu_69::UVector32"*, i32* dereferenceable(4)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699BytesTrie8IteratorC2ERKS0_iR10UErrorCode(%"class.icu_69::BytesTrie::Iterator"* nocapture, %"class.icu_69::BytesTrie"* nocapture readonly dereferenceable(32), i32, i32* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.icu_69::BytesTrie::Iterator"* %0 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %1, i64 0, i32 2
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast i8** %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 2
  %15 = load i64, i64* %11, align 8
  %16 = bitcast i8** %14 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.icu_69::BytesTrie", %"class.icu_69::BytesTrie"* %1, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  store i32 %19, i32* %17, align 8
  %20 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 4
  %21 = load i32, i32* %18, align 8
  store i32 %21, i32* %20, align 4
  %22 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 5
  store %"class.icu_69::CharString"* null, %"class.icu_69::CharString"** %22, align 8
  %23 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 6
  store i32 %2, i32* %23, align 8
  %24 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 7
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 8
  store %"class.icu_69::UVector32"* null, %"class.icu_69::UVector32"** %25, align 8
  %26 = load i32, i32* %3, align 4
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %28, label %73

28:                                               ; preds = %4
  %29 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 64) #9
  %30 = icmp eq i8* %29, null
  br i1 %30, label %40, label %31

31:                                               ; preds = %28
  %32 = bitcast i8* %29 to %"class.icu_69::CharString"*
  %33 = bitcast i8* %29 to i8**
  %34 = getelementptr inbounds i8, i8* %29, i64 13
  store i8* %34, i8** %33, align 8
  %35 = getelementptr inbounds i8, i8* %29, i64 8
  %36 = bitcast i8* %35 to i32*
  store i32 40, i32* %36, align 8
  %37 = getelementptr inbounds i8, i8* %29, i64 12
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds i8, i8* %29, i64 56
  %39 = bitcast i8* %38 to i32*
  store i32 0, i32* %39, align 8
  store i8 0, i8* %34, align 1
  br label %40

40:                                               ; preds = %31, %28
  %41 = phi %"class.icu_69::CharString"* [ %32, %31 ], [ null, %28 ]
  store %"class.icu_69::CharString"* %41, %"class.icu_69::CharString"** %22, align 8
  %42 = tail call i8* @_ZN6icu_697UMemorynwEm(i64 32) #9
  %43 = icmp eq i8* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = bitcast i8* %42 to %"class.icu_69::UVector32"*
  tail call void @_ZN6icu_699UVector32C1ER10UErrorCode(%"class.icu_69::UVector32"* nonnull %45, i32* dereferenceable(4) %3) #9
  br label %46

46:                                               ; preds = %44, %40
  %47 = phi %"class.icu_69::UVector32"* [ %45, %44 ], [ null, %40 ]
  store %"class.icu_69::UVector32"* %47, %"class.icu_69::UVector32"** %25, align 8
  %48 = load i32, i32* %3, align 4
  %49 = icmp slt i32 %48, 1
  br i1 %49, label %50, label %73

50:                                               ; preds = %46
  %51 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %22, align 8
  %52 = icmp eq %"class.icu_69::CharString"* %51, null
  %53 = icmp eq %"class.icu_69::UVector32"* %47, null
  %54 = or i1 %53, %52
  br i1 %54, label %55, label %56

55:                                               ; preds = %50
  store i32 7, i32* %3, align 4
  br label %73

56:                                               ; preds = %50
  %57 = load i32, i32* %17, align 8
  %58 = icmp sgt i32 %57, -1
  br i1 %58, label %59, label %73

59:                                               ; preds = %56
  %60 = add nuw nsw i32 %57, 1
  %61 = load i32, i32* %23, align 8
  %62 = icmp slt i32 %61, 1
  %63 = icmp slt i32 %57, %61
  %64 = or i1 %62, %63
  %65 = select i1 %64, i32 %60, i32 %61
  %66 = load i8*, i8** %9, align 8
  %67 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* nonnull %51, i8* %66, i32 %65, i32* dereferenceable(4) %3) #9
  %68 = load i8*, i8** %9, align 8
  %69 = sext i32 %65 to i64
  %70 = getelementptr inbounds i8, i8* %68, i64 %69
  store i8* %70, i8** %9, align 8
  %71 = load i32, i32* %17, align 8
  %72 = sub nsw i32 %71, %65
  store i32 %72, i32* %17, align 8
  br label %73

73:                                               ; preds = %56, %59, %46, %4, %55
  ret void
}

declare dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"*, i8*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6icu_699BytesTrie8IteratorD2Ev(%"class.icu_69::BytesTrie::Iterator"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 5
  %3 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %2, align 8
  %4 = icmp eq %"class.icu_69::CharString"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %3, i64 0, i32 0, i32 2
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %3, i64 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  tail call void @uprv_free_69(i8* %11) #9
  br label %12

12:                                               ; preds = %5, %9
  %13 = bitcast %"class.icu_69::CharString"* %3 to i8*
  tail call void @_ZN6icu_697UMemorydlEPv(i8* nonnull %13) #9
  br label %14

14:                                               ; preds = %12, %1
  %15 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 8
  %16 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %15, align 8
  %17 = icmp eq %"class.icu_69::UVector32"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.icu_69::UVector32"* %16 to void (%"class.icu_69::UVector32"*)***
  %20 = load void (%"class.icu_69::UVector32"*)**, void (%"class.icu_69::UVector32"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %20, i64 1
  %22 = load void (%"class.icu_69::UVector32"*)*, void (%"class.icu_69::UVector32"*)** %21, align 8
  tail call void %22(%"class.icu_69::UVector32"* nonnull %16) #9
  br label %23

23:                                               ; preds = %18, %14
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6icu_697UMemorydlEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(56) %"class.icu_69::BytesTrie::Iterator"* @_ZN6icu_699BytesTrie8Iterator5resetEv(%"class.icu_69::BytesTrie::Iterator"* returned) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 2
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 1
  %6 = bitcast i8** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 3
  store i32 %8, i32* %9, align 8
  %10 = add nsw i32 %8, 1
  %11 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %12, 1
  %14 = icmp slt i32 %8, %12
  %15 = or i1 %13, %14
  %16 = select i1 %15, i32 %10, i32 %12
  %17 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 5
  %18 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %17, align 8
  %19 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString8truncateEi(%"class.icu_69::CharString"* %18, i32 %16) #9
  %20 = load i8*, i8** %5, align 8
  %21 = sext i32 %16 to i64
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  store i8* %22, i8** %5, align 8
  %23 = load i32, i32* %9, align 8
  %24 = sub nsw i32 %23, %16
  store i32 %24, i32* %9, align 8
  %25 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 8
  %26 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %25, align 8
  tail call void @_ZN6icu_699UVector327setSizeEi(%"class.icu_69::UVector32"* %26, i32 0) #9
  ret %"class.icu_69::BytesTrie::Iterator"* %0
}

declare dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString8truncateEi(%"class.icu_69::CharString"*, i32) local_unnamed_addr #4

declare void @_ZN6icu_699UVector327setSizeEi(%"class.icu_69::UVector32"*, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden signext i8 @_ZNK6icu_699BytesTrie8Iterator7hasNextEv(%"class.icu_69::BytesTrie::Iterator"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 8
  %7 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %6, align 8
  %8 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %9, 0
  %11 = zext i1 %10 to i8
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i8 [ 1, %1 ], [ %11, %5 ]
  ret i8 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN6icu_699BytesTrie8Iterator4nextER10UErrorCode(%"class.icu_69::BytesTrie::Iterator"* nocapture, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %164

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %60

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 8
  %11 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %10, align 8
  %12 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %164, label %15

15:                                               ; preds = %9
  %16 = icmp sgt i32 %13, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = add nsw i32 %13, -2
  br label %40

21:                                               ; preds = %15
  %22 = add nsw i32 %13, -1
  %23 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %11, i64 0, i32 4
  %24 = load i32*, i32** %23, align 8
  %25 = sext i32 %22 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = add nsw i32 %13, -2
  %31 = icmp sgt i32 %30, -1
  %32 = and i1 %16, %31
  br i1 %32, label %33, label %40

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %11, i64 0, i32 4
  %35 = load i32*, i32** %34, align 8
  %36 = sext i32 %30 to i64
  %37 = getelementptr inbounds i32, i32* %35, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = sext i32 %38 to i64
  br label %40

40:                                               ; preds = %17, %21, %33
  %41 = phi i32 [ %30, %33 ], [ %30, %21 ], [ %20, %17 ]
  %42 = phi i8* [ %29, %33 ], [ %29, %21 ], [ %19, %17 ]
  %43 = phi i32 [ %27, %33 ], [ %27, %21 ], [ 0, %17 ]
  %44 = phi i64 [ %39, %33 ], [ 0, %21 ], [ 0, %17 ]
  %45 = getelementptr inbounds i8, i8* %42, i64 %44
  tail call void @_ZN6icu_699UVector327setSizeEi(%"class.icu_69::UVector32"* %11, i32 %41) #9
  %46 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 5
  %47 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %46, align 8
  %48 = and i32 %43, 65535
  %49 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString8truncateEi(%"class.icu_69::CharString"* %47, i32 %48) #9
  %50 = icmp ugt i32 %43, 131071
  br i1 %50, label %51, label %55

51:                                               ; preds = %40
  %52 = lshr i32 %43, 16
  %53 = tail call i8* @_ZN6icu_699BytesTrie8Iterator10branchNextEPKhiR10UErrorCode(%"class.icu_69::BytesTrie::Iterator"* %0, i8* %45, i32 %52, i32* dereferenceable(4) %1)
  %54 = icmp eq i8* %53, null
  br i1 %54, label %164, label %60

55:                                               ; preds = %40
  %56 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %46, align 8
  %57 = getelementptr inbounds i8, i8* %45, i64 1
  %58 = load i8, i8* %45, align 1
  %59 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"* %56, i8 signext %58, i32* dereferenceable(4) %1) #9
  br label %60

60:                                               ; preds = %51, %55, %5
  %61 = phi i8* [ %7, %5 ], [ %53, %51 ], [ %57, %55 ]
  %62 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = icmp sgt i32 %63, -1
  br i1 %64, label %73, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds i8, i8* %61, i64 1
  %67 = load i8, i8* %61, align 1
  %68 = zext i8 %67 to i32
  %69 = icmp ugt i8 %67, 31
  br i1 %69, label %77, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 6
  %72 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 5
  br label %114

73:                                               ; preds = %60
  store i8* null, i8** %6, align 8
  %74 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 7
  store i32 -1, i32* %74, align 4
  br label %164

75:                                               ; preds = %158
  %76 = zext i8 %161 to i32
  br label %77

77:                                               ; preds = %75, %65
  %78 = phi i8* [ %61, %65 ], [ %159, %75 ]
  %79 = phi i8* [ %66, %65 ], [ %160, %75 ]
  %80 = phi i8 [ %67, %65 ], [ %161, %75 ]
  %81 = phi i32 [ %68, %65 ], [ %76, %75 ]
  %82 = and i8 %80, 1
  %83 = lshr i32 %81, 1
  %84 = tail call i32 @_ZN6icu_699BytesTrie9readValueEPKhi(i8* %79, i32 %83) #9
  %85 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 7
  store i32 %84, i32* %85, align 4
  %86 = icmp eq i8 %82, 0
  br i1 %86, label %87, label %112

87:                                               ; preds = %77
  %88 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 6
  %89 = load i32, i32* %88, align 8
  %90 = icmp sgt i32 %89, 0
  br i1 %90, label %91, label %97

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 5
  %93 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %92, align 8
  %94 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %93, i64 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, %89
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %87
  %98 = icmp ugt i8 %80, -95
  br i1 %98, label %99, label %112

99:                                               ; preds = %97
  %100 = icmp ult i8 %80, -40
  br i1 %100, label %101, label %103

101:                                              ; preds = %99
  %102 = getelementptr inbounds i8, i8* %78, i64 2
  br label %112

103:                                              ; preds = %99
  %104 = icmp ult i8 %80, -4
  br i1 %104, label %105, label %107

105:                                              ; preds = %103
  %106 = getelementptr inbounds i8, i8* %78, i64 3
  br label %112

107:                                              ; preds = %103
  %108 = and i32 %83, 1
  %109 = add nuw nsw i32 %108, 3
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i8, i8* %79, i64 %110
  br label %112

112:                                              ; preds = %107, %105, %101, %97, %91, %77
  %113 = phi i8* [ null, %77 ], [ null, %91 ], [ %102, %101 ], [ %106, %105 ], [ %111, %107 ], [ %79, %97 ]
  store i8* %113, i8** %6, align 8
  br label %164

114:                                              ; preds = %70, %158
  %115 = phi i32 [ %68, %70 ], [ %162, %158 ]
  %116 = phi i8 [ %67, %70 ], [ %161, %158 ]
  %117 = phi i8* [ %66, %70 ], [ %160, %158 ]
  %118 = phi i8* [ %61, %70 ], [ %159, %158 ]
  %119 = load i32, i32* %71, align 8
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %121, label %128

121:                                              ; preds = %114
  %122 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %72, align 8
  %123 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %122, i64 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %124, %119
  br i1 %125, label %126, label %128

126:                                              ; preds = %121
  store i8* null, i8** %6, align 8
  %127 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 7
  store i32 -1, i32* %127, align 4
  br label %164

128:                                              ; preds = %121, %114
  %129 = icmp ult i8 %116, 16
  br i1 %129, label %130, label %142

130:                                              ; preds = %128
  %131 = icmp eq i8 %116, 0
  br i1 %131, label %132, label %136

132:                                              ; preds = %130
  %133 = getelementptr inbounds i8, i8* %118, i64 2
  %134 = load i8, i8* %117, align 1
  %135 = zext i8 %134 to i32
  br label %136

136:                                              ; preds = %132, %130
  %137 = phi i8* [ %133, %132 ], [ %117, %130 ]
  %138 = phi i32 [ %135, %132 ], [ %115, %130 ]
  %139 = add nuw nsw i32 %138, 1
  %140 = tail call i8* @_ZN6icu_699BytesTrie8Iterator10branchNextEPKhiR10UErrorCode(%"class.icu_69::BytesTrie::Iterator"* %0, i8* %137, i32 %139, i32* dereferenceable(4) %1)
  %141 = icmp eq i8* %140, null
  br i1 %141, label %164, label %158

142:                                              ; preds = %128
  %143 = add nsw i32 %115, -15
  %144 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %72, align 8
  br i1 %120, label %145, label %150

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %144, i64 0, i32 1
  %147 = load i32, i32* %146, align 8
  %148 = add nsw i32 %147, %143
  %149 = icmp sgt i32 %148, %119
  br i1 %149, label %154, label %150

150:                                              ; preds = %142, %145
  %151 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* %144, i8* %117, i32 %143, i32* dereferenceable(4) %1) #9
  %152 = sext i32 %143 to i64
  %153 = getelementptr inbounds i8, i8* %117, i64 %152
  br label %158

154:                                              ; preds = %145
  %155 = sub nsw i32 %119, %147
  %156 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEPKciR10UErrorCode(%"class.icu_69::CharString"* %144, i8* %117, i32 %155, i32* dereferenceable(4) %1) #9
  store i8* null, i8** %6, align 8
  %157 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 7
  store i32 -1, i32* %157, align 4
  br label %164

158:                                              ; preds = %136, %150
  %159 = phi i8* [ %140, %136 ], [ %153, %150 ]
  %160 = getelementptr inbounds i8, i8* %159, i64 1
  %161 = load i8, i8* %159, align 1
  %162 = zext i8 %161 to i32
  %163 = icmp ugt i8 %161, 31
  br i1 %163, label %75, label %114

164:                                              ; preds = %136, %9, %154, %126, %112, %51, %73, %2
  %165 = phi i8 [ 0, %2 ], [ 1, %73 ], [ 0, %9 ], [ 1, %51 ], [ 1, %112 ], [ 1, %126 ], [ 1, %154 ], [ 1, %136 ]
  ret i8 %165
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN6icu_699BytesTrie8Iterator10branchNextEPKhiR10UErrorCode(%"class.icu_69::BytesTrie::Iterator"* nocapture, i8*, i32, i32* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = icmp sgt i32 %2, 5
  %6 = getelementptr inbounds i8, i8* %1, i64 1
  br i1 %5, label %7, label %93

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 8
  %9 = bitcast %"class.icu_69::BytesTrie::Iterator"* %0 to i64*
  %10 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 5
  br label %11

11:                                               ; preds = %7, %89
  %12 = phi i8* [ %6, %7 ], [ %92, %89 ]
  %13 = phi i8* [ %1, %7 ], [ %90, %89 ]
  %14 = phi i32 [ %2, %7 ], [ %61, %89 ]
  %15 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %8, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 2
  %17 = load i8, i8* %12, align 1
  %18 = icmp ugt i8 %17, -65
  br i1 %18, label %19, label %32

19:                                               ; preds = %11
  %20 = icmp ult i8 %17, -16
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = getelementptr inbounds i8, i8* %13, i64 3
  br label %32

23:                                               ; preds = %19
  %24 = icmp ult i8 %17, -2
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = getelementptr inbounds i8, i8* %13, i64 4
  br label %32

27:                                               ; preds = %23
  %28 = and i8 %17, 1
  %29 = add nuw nsw i8 %28, 3
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds i8, i8* %16, i64 %30
  br label %32

32:                                               ; preds = %11, %21, %25, %27
  %33 = phi i8* [ %22, %21 ], [ %26, %25 ], [ %31, %27 ], [ %16, %11 ]
  %34 = load i64, i64* %9, align 8
  %35 = ptrtoint i8* %33 to i64
  %36 = sub i64 %35, %34
  %37 = trunc i64 %36 to i32
  %38 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %15, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = add nsw i32 %39, 1
  %41 = icmp sgt i32 %39, -2
  br i1 %41, label %42, label %46

42:                                               ; preds = %32
  %43 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %15, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, %39
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %32
  %47 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %15, i32 %40, i32* dereferenceable(4) %3) #9
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %59, label %49

49:                                               ; preds = %46
  %50 = load i32, i32* %38, align 8
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %39, %42 ]
  %53 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %15, i64 0, i32 4
  %54 = load i32*, i32** %53, align 8
  %55 = sext i32 %52 to i64
  %56 = getelementptr inbounds i32, i32* %54, i64 %55
  store i32 %37, i32* %56, align 4
  %57 = load i32, i32* %38, align 8
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %38, align 8
  br label %59

59:                                               ; preds = %46, %51
  %60 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %8, align 8
  %61 = lshr i32 %14, 1
  %62 = sub nsw i32 %14, %61
  %63 = shl i32 %62, 16
  %64 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %10, align 8
  %65 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %64, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = or i32 %66, %63
  %68 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %60, i64 0, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = add nsw i32 %69, 1
  %71 = icmp sgt i32 %69, -2
  br i1 %71, label %72, label %76

72:                                               ; preds = %59
  %73 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %60, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp sgt i32 %74, %69
  br i1 %75, label %81, label %76

76:                                               ; preds = %72, %59
  %77 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %60, i32 %70, i32* dereferenceable(4) %3) #9
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %76
  %80 = load i32, i32* %68, align 8
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %69, %72 ]
  %83 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %60, i64 0, i32 4
  %84 = load i32*, i32** %83, align 8
  %85 = sext i32 %82 to i64
  %86 = getelementptr inbounds i32, i32* %84, i64 %85
  store i32 %67, i32* %86, align 4
  %87 = load i32, i32* %68, align 8
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %68, align 8
  br label %89

89:                                               ; preds = %76, %81
  %90 = tail call i8* @_ZN6icu_699BytesTrie11jumpByDeltaEPKh(i8* %12) #9
  %91 = icmp ugt i32 %14, 11
  %92 = getelementptr inbounds i8, i8* %90, i64 1
  br i1 %91, label %11, label %93

93:                                               ; preds = %89, %4
  %94 = phi i32 [ %2, %4 ], [ %61, %89 ]
  %95 = phi i8* [ %1, %4 ], [ %90, %89 ]
  %96 = phi i8* [ %6, %4 ], [ %92, %89 ]
  %97 = load i8, i8* %95, align 1
  %98 = getelementptr inbounds i8, i8* %95, i64 2
  %99 = load i8, i8* %96, align 1
  %100 = and i8 %99, 1
  %101 = lshr i8 %99, 1
  %102 = zext i8 %101 to i32
  %103 = tail call i32 @_ZN6icu_699BytesTrie9readValueEPKhi(i8* %98, i32 %102) #9
  %104 = icmp ugt i8 %99, -95
  br i1 %104, label %105, label %118

105:                                              ; preds = %93
  %106 = icmp ult i8 %99, -40
  br i1 %106, label %107, label %109

107:                                              ; preds = %105
  %108 = getelementptr inbounds i8, i8* %95, i64 3
  br label %118

109:                                              ; preds = %105
  %110 = icmp ult i8 %99, -4
  br i1 %110, label %111, label %113

111:                                              ; preds = %109
  %112 = getelementptr inbounds i8, i8* %95, i64 4
  br label %118

113:                                              ; preds = %109
  %114 = and i32 %102, 1
  %115 = add nuw nsw i32 %114, 3
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds i8, i8* %98, i64 %116
  br label %118

118:                                              ; preds = %93, %107, %111, %113
  %119 = phi i8* [ %108, %107 ], [ %112, %111 ], [ %117, %113 ], [ %98, %93 ]
  %120 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 8
  %121 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %120, align 8
  %122 = bitcast %"class.icu_69::BytesTrie::Iterator"* %0 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = ptrtoint i8* %119 to i64
  %125 = sub i64 %124, %123
  %126 = trunc i64 %125 to i32
  %127 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %121, i64 0, i32 1
  %128 = load i32, i32* %127, align 8
  %129 = add nsw i32 %128, 1
  %130 = icmp sgt i32 %128, -2
  br i1 %130, label %131, label %135

131:                                              ; preds = %118
  %132 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %121, i64 0, i32 2
  %133 = load i32, i32* %132, align 4
  %134 = icmp sgt i32 %133, %128
  br i1 %134, label %140, label %135

135:                                              ; preds = %131, %118
  %136 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %121, i32 %129, i32* dereferenceable(4) %3) #9
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %148, label %138

138:                                              ; preds = %135
  %139 = load i32, i32* %127, align 8
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %128, %131 ]
  %142 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %121, i64 0, i32 4
  %143 = load i32*, i32** %142, align 8
  %144 = sext i32 %141 to i64
  %145 = getelementptr inbounds i32, i32* %143, i64 %144
  store i32 %126, i32* %145, align 4
  %146 = load i32, i32* %127, align 8
  %147 = add nsw i32 %146, 1
  store i32 %147, i32* %127, align 8
  br label %148

148:                                              ; preds = %135, %140
  %149 = load %"class.icu_69::UVector32"*, %"class.icu_69::UVector32"** %120, align 8
  %150 = shl i32 %94, 16
  %151 = add i32 %150, -65536
  %152 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 5
  %153 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %152, align 8
  %154 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %153, i64 0, i32 1
  %155 = load i32, i32* %154, align 8
  %156 = or i32 %155, %151
  %157 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %149, i64 0, i32 1
  %158 = load i32, i32* %157, align 8
  %159 = add nsw i32 %158, 1
  %160 = icmp sgt i32 %158, -2
  br i1 %160, label %161, label %165

161:                                              ; preds = %148
  %162 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %149, i64 0, i32 2
  %163 = load i32, i32* %162, align 4
  %164 = icmp sgt i32 %163, %158
  br i1 %164, label %170, label %165

165:                                              ; preds = %161, %148
  %166 = tail call signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"* %149, i32 %159, i32* dereferenceable(4) %3) #9
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %165
  %169 = load i32, i32* %157, align 8
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %158, %161 ]
  %172 = getelementptr inbounds %"class.icu_69::UVector32", %"class.icu_69::UVector32"* %149, i64 0, i32 4
  %173 = load i32*, i32** %172, align 8
  %174 = sext i32 %171 to i64
  %175 = getelementptr inbounds i32, i32* %173, i64 %174
  store i32 %156, i32* %175, align 4
  %176 = load i32, i32* %157, align 8
  %177 = add nsw i32 %176, 1
  store i32 %177, i32* %157, align 8
  br label %178

178:                                              ; preds = %165, %170
  %179 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %152, align 8
  %180 = tail call dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"* %179, i8 signext %97, i32* dereferenceable(4) %3) #9
  %181 = icmp eq i8 %100, 0
  br i1 %181, label %185, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 1
  store i8* null, i8** %183, align 8
  %184 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 7
  store i32 %103, i32* %184, align 4
  br label %188

185:                                              ; preds = %178
  %186 = sext i32 %103 to i64
  %187 = getelementptr inbounds i8, i8* %119, i64 %186
  br label %188

188:                                              ; preds = %185, %182
  %189 = phi i8* [ null, %182 ], [ %187, %185 ]
  ret i8* %189
}

declare dereferenceable(64) %"class.icu_69::CharString"* @_ZN6icu_6910CharString6appendEcR10UErrorCode(%"class.icu_69::CharString"*, i8 signext, i32* dereferenceable(4)) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden signext i8 @_ZN6icu_699BytesTrie8Iterator15truncateAndStopEv(%"class.icu_69::BytesTrie::Iterator"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 1
  store i8* null, i8** %2, align 8
  %3 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 7
  store i32 -1, i32* %3, align 4
  ret i8 1
}

declare i32 @_ZN6icu_699BytesTrie9readValueEPKhi(i8*, i32) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8*, i32 } @_ZNK6icu_699BytesTrie8Iterator9getStringEv(%"class.icu_69::BytesTrie::Iterator"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.icu_69::BytesTrie::Iterator", %"class.icu_69::BytesTrie::Iterator"* %0, i64 0, i32 5
  %3 = load %"class.icu_69::CharString"*, %"class.icu_69::CharString"** %2, align 8
  %4 = icmp eq %"class.icu_69::CharString"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %3, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.icu_69::CharString", %"class.icu_69::CharString"* %3, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i32 [ %9, %5 ], [ 0, %1 ]
  %12 = phi i8* [ %7, %5 ], [ null, %1 ]
  %13 = insertvalue { i8*, i32 } undef, i8* %12, 0
  %14 = insertvalue { i8*, i32 } %13, i32 %11, 1
  ret { i8*, i32 } %14
}

declare i8* @_ZN6icu_699BytesTrie11jumpByDeltaEPKh(i8*) local_unnamed_addr #4

declare signext i8 @_ZN6icu_699UVector3214expandCapacityEiR10UErrorCode(%"class.icu_69::UVector32"*, i32, i32* dereferenceable(4)) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind allocsize(0) }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
