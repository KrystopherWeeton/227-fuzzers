; ModuleID = '../../third_party/blink/renderer/core/page/named_pages_mapper.cc'
source_filename = "../../third_party/blink/renderer/core/page/named_pages_mapper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::NamedPagesMapper" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::NamedPagesMapper::Entry"*, i32, i32 }
%"struct.blink::NamedPagesMapper::Entry" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF6VectorIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16NamedPagesMapper5EntryEEEmm = comdat any

$_ZN3WTF12VectorBufferIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16NamedPagesMapper5EntryEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::NamedPagesMapper::Entry]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16NamedPagesMapper12AddNamedPageERKN3WTF12AtomicStringEi(%"class.blink::NamedPagesMapper"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = icmp sgt i32 %2, 0
  %5 = getelementptr inbounds %"class.blink::NamedPagesMapper", %"class.blink::NamedPagesMapper"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::NamedPagesMapper", %"class.blink::NamedPagesMapper"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::NamedPagesMapper::Entry"*, %"struct.blink::NamedPagesMapper::Entry"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::NamedPagesMapper", %"class.blink::NamedPagesMapper"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %7, i64 %10
  br i1 %4, label %12, label %57

12:                                               ; preds = %3, %16
  %13 = phi %"struct.blink::NamedPagesMapper::Entry"* [ %14, %16 ], [ %11, %3 ]
  %14 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %13, i64 -1
  %15 = icmp eq %"struct.blink::NamedPagesMapper::Entry"* %14, %7
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %13, i64 -2, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp slt i32 %18, %2
  br i1 %19, label %20, label %12

20:                                               ; preds = %12, %16
  %21 = ptrtoint %"struct.blink::NamedPagesMapper::Entry"* %13 to i64
  %22 = ptrtoint %"struct.blink::NamedPagesMapper::Entry"* %7 to i64
  %23 = sub i64 %21, %22
  %24 = lshr exact i64 %23, 4
  %25 = trunc i64 %24 to i32
  %26 = icmp eq i32 %9, %25
  br i1 %26, label %51, label %27

27:                                               ; preds = %20
  %28 = and i64 %24, 4294967295
  %29 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %7, i64 %28
  br label %30

30:                                               ; preds = %48, %27
  %31 = phi %"struct.blink::NamedPagesMapper::Entry"* [ %49, %48 ], [ %29, %27 ]
  %32 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #7
  br label %48

48:                                               ; preds = %47, %44, %30
  %49 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %31, i64 1
  %50 = icmp eq %"struct.blink::NamedPagesMapper::Entry"* %49, %11
  br i1 %50, label %51, label %30

51:                                               ; preds = %48, %20
  store i32 %25, i32* %8, align 4
  %52 = add nsw i32 %2, -1
  %53 = add i32 %25, -1
  %54 = tail call dereferenceable(16) %"struct.blink::NamedPagesMapper::Entry"* @_ZN3WTF6VectorIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %5, i32 %53) #7
  %55 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %54, i64 0, i32 1
  store i32 %52, i32* %55, align 8
  %56 = load i32, i32* %8, align 4
  br label %81

57:                                               ; preds = %3
  %58 = icmp eq i32 %9, 0
  br i1 %58, label %80, label %59

59:                                               ; preds = %57, %77
  %60 = phi %"struct.blink::NamedPagesMapper::Entry"* [ %78, %77 ], [ %7, %57 ]
  %61 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #7
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %60, i64 1
  %79 = icmp eq %"struct.blink::NamedPagesMapper::Entry"* %78, %11
  br i1 %79, label %80, label %59

80:                                               ; preds = %77, %57
  store i32 0, i32* %8, align 4
  br label %81

81:                                               ; preds = %80, %51
  %82 = phi i32 [ 0, %80 ], [ %56, %51 ]
  %83 = getelementptr inbounds %"class.blink::NamedPagesMapper", %"class.blink::NamedPagesMapper"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = icmp eq i32 %82, %84
  br i1 %85, label %86, label %89, !prof !2

86:                                               ; preds = %81
  %87 = add i32 %82, 1
  tail call void @_ZN3WTF6VectorIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %5, i32 %87) #7
  %88 = load i32, i32* %8, align 4
  br label %89

89:                                               ; preds = %86, %81
  %90 = phi i32 [ %88, %86 ], [ %82, %81 ]
  %91 = load %"struct.blink::NamedPagesMapper::Entry"*, %"struct.blink::NamedPagesMapper::Entry"** %6, align 8
  %92 = zext i32 %90 to i64
  %93 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %91, i64 %92, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %95, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %96, label %114, label %97

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %114

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = zext i32 %104 to i33
  %106 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %105, i33 1) #7
  %107 = extractvalue { i33, i1 } %106, 1
  %108 = extractvalue { i33, i1 } %106, 0
  %109 = icmp slt i33 %108, 0
  %110 = or i1 %107, %109
  br i1 %110, label %111, label %112, !prof !2

111:                                              ; preds = %102
  tail call void @llvm.trap() #7
  unreachable

112:                                              ; preds = %102
  %113 = trunc i33 %108 to i32
  store i32 %113, i32* %103, align 4
  br label %114

114:                                              ; preds = %89, %97, %112
  %115 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %91, i64 %92, i32 1
  store i32 -1, i32* %115, align 8
  %116 = load i32, i32* %8, align 4
  %117 = add i32 %116, 1
  store i32 %117, i32* %8, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16NamedPagesMapper13NameFirstPageERKN3WTF12AtomicStringE(%"class.blink::NamedPagesMapper"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NamedPagesMapper", %"class.blink::NamedPagesMapper"* %0, i64 0, i32 0
  %4 = tail call dereferenceable(16) %"struct.blink::NamedPagesMapper::Entry"* @_ZN3WTF6VectorIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 0) #7
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #7
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #7
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %2
  %26 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  %27 = bitcast %"struct.blink::NamedPagesMapper::Entry"* %4 to i64*
  %28 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  store i64 %26, i64* %27, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #7
  br label %44

44:                                               ; preds = %25, %40, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16NamedPagesMapper16NamedPageAtIndexEi(%"class.blink::NamedPagesMapper"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::NamedPagesMapper", %"class.blink::NamedPagesMapper"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::NamedPagesMapper", %"class.blink::NamedPagesMapper"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::NamedPagesMapper::Entry"*, %"struct.blink::NamedPagesMapper::Entry"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::NamedPagesMapper", %"class.blink::NamedPagesMapper"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %2, %16
  %12 = phi %"struct.blink::NamedPagesMapper::Entry"* [ %17, %16 ], [ %5, %2 ]
  %13 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %12, i64 1
  %18 = icmp eq %"struct.blink::NamedPagesMapper::Entry"* %17, %9
  br i1 %18, label %19, label %11

19:                                               ; preds = %16, %2
  %20 = add i32 %7, -1
  %21 = tail call dereferenceable(16) %"struct.blink::NamedPagesMapper::Entry"* @_ZNK3WTF6VectorIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %20) #7
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi %"struct.blink::NamedPagesMapper::Entry"* [ %21, %19 ], [ %12, %11 ]
  %24 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %23, i64 0, i32 0
  ret %"class.WTF::AtomicString"* %24
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::NamedPagesMapper::Entry"* @_ZNK3WTF6VectorIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NamedPagesMapper::Entry"*, %"struct.blink::NamedPagesMapper::Entry"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %24, i64 %25
  ret %"struct.blink::NamedPagesMapper::Entry"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.blink::NamedPagesMapper::Entry"* @_ZN3WTF6VectorIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #7
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #7
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #7
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::NamedPagesMapper::Entry"*, %"struct.blink::NamedPagesMapper::Entry"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %24, i64 %25
  ret %"struct.blink::NamedPagesMapper::Entry"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #7
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #7
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #7
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #7
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.blink::NamedPagesMapper::Entry"*, %"struct.blink::NamedPagesMapper::Entry"** %31, align 8
  %33 = icmp eq %"struct.blink::NamedPagesMapper::Entry"* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16NamedPagesMapper5EntryEEEmm(i64 %37) #7
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16NamedPagesMapper5EntryEEEPKcv, i64 0, i64 0)) #7
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 4
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #7
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %56

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::NamedPagesMapper::Entry"*, %"struct.blink::NamedPagesMapper::Entry"** %5, align 8
  %7 = icmp eq %"struct.blink::NamedPagesMapper::Entry"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"struct.blink::NamedPagesMapper::Entry"*
  %10 = icmp eq %"struct.blink::NamedPagesMapper::Entry"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %113

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %6, i64 %19
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %22 = ptrtoint i8* %8 to i64
  %23 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %24, align 8
  %25 = icmp eq i32 %18, 0
  br i1 %25, label %55, label %26

26:                                               ; preds = %16, %51
  %27 = phi %"struct.blink::NamedPagesMapper::Entry"* [ %53, %51 ], [ %6, %16 ]
  %28 = phi %"struct.blink::NamedPagesMapper::Entry"* [ %52, %51 ], [ %9, %16 ]
  %29 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = bitcast %"struct.blink::NamedPagesMapper::Entry"* %27 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"struct.blink::NamedPagesMapper::Entry"* %28 to i64*
  store i64 %31, i64* %32, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %33 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %28, i64 0, i32 1
  %34 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %27, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #7
  br label %51

51:                                               ; preds = %50, %47, %26
  %52 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %28, i64 1
  %53 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %27, i64 1
  %54 = icmp eq %"struct.blink::NamedPagesMapper::Entry"* %53, %20
  br i1 %54, label %55, label %26

55:                                               ; preds = %51, %16
  tail call void @_ZN3WTF12VectorBufferIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer"* %21, %"struct.blink::NamedPagesMapper::Entry"* %6) #7
  br label %113

56:                                               ; preds = %2
  %57 = zext i32 %1 to i64
  %58 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16NamedPagesMapper5EntryEEEmm(i64 %57) #7
  %59 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %58, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16NamedPagesMapper5EntryEEEPKcv, i64 0, i64 0)) #7
  %60 = lshr i64 %58, 4
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = load %"struct.blink::NamedPagesMapper::Entry"*, %"struct.blink::NamedPagesMapper::Entry"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %63, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %102, label %69

69:                                               ; preds = %56
  %70 = bitcast i8* %59 to %"struct.blink::NamedPagesMapper::Entry"*
  br label %71

71:                                               ; preds = %69, %96
  %72 = phi %"struct.blink::NamedPagesMapper::Entry"* [ %98, %96 ], [ %63, %69 ]
  %73 = phi %"struct.blink::NamedPagesMapper::Entry"* [ %97, %96 ], [ %70, %69 ]
  %74 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = bitcast %"struct.blink::NamedPagesMapper::Entry"* %72 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"struct.blink::NamedPagesMapper::Entry"* %73 to i64*
  store i64 %76, i64* %77, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %74, align 8
  %78 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %73, i64 0, i32 1
  %79 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %72, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  store i32 %80, i32* %78, align 8
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %71
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #7
  br label %96

96:                                               ; preds = %95, %92, %71
  %97 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %73, i64 1
  %98 = getelementptr inbounds %"struct.blink::NamedPagesMapper::Entry", %"struct.blink::NamedPagesMapper::Entry"* %72, i64 1
  %99 = icmp eq %"struct.blink::NamedPagesMapper::Entry"* %98, %67
  br i1 %99, label %100, label %71

100:                                              ; preds = %96
  %101 = load %"struct.blink::NamedPagesMapper::Entry"*, %"struct.blink::NamedPagesMapper::Entry"** %62, align 8
  br label %102

102:                                              ; preds = %100, %56
  %103 = phi %"struct.blink::NamedPagesMapper::Entry"* [ %101, %100 ], [ %63, %56 ]
  %104 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %105 = bitcast i8* %104 to %"struct.blink::NamedPagesMapper::Entry"*
  %106 = icmp eq %"struct.blink::NamedPagesMapper::Entry"* %103, %105
  br i1 %106, label %109, label %107, !prof !3

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer"* %108, %"struct.blink::NamedPagesMapper::Entry"* %103) #7
  br label %109

109:                                              ; preds = %102, %107
  %110 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %61, i64* %110 monotonic, align 8
  %111 = trunc i64 %60 to i32
  %112 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %111, i32* %112, align 8
  br label %113

113:                                              ; preds = %55, %109, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink16NamedPagesMapper5EntryEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink16NamedPagesMapper5EntryELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer"*, %"struct.blink::NamedPagesMapper::Entry"*) local_unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"struct.blink::NamedPagesMapper::Entry"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #7
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
