; ModuleID = '../../ui/gfx/x/x11_atom_cache.cc'
source_filename = "../../ui/gfx/x/x11_atom_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.x11::X11AtomCache" = type { %"class.x11::Connection"*, %"class.std::__1::map" }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.178", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.193", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.234", %"class.base::circular_deque", %"class.base::ObserverList.240", %"class.x11::Event"*, %"class.base::circular_deque.244", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.256" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type opaque
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.x11::XvMC"* }
%"class.x11::XvMC" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.186" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.181" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.186" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.187", i64, i32, [4 x i8] }>
%"class.base::LinkedList.187" = type { %"class.base::LinkNode.188" }
%"class.base::LinkNode.188" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.199", %"class.std::__1::vector.206" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.201" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.208" }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.210" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.227" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.229" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.240" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.241", i64, i32, [4 x i8] }>
%"class.base::LinkedList.241" = type { %"class.base::LinkNode.242" }
%"class.base::LinkNode.242" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type opaque
%"class.base::circular_deque.244" = type { %"class.base::internal::VectorBuffer.245", i64, i64 }
%"class.base::internal::VectorBuffer.245" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.247, %"class.std::__1::unique_ptr.249" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.247 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.248", [4 x i8] }>
%"class.base::RefCountedThreadSafe.248" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.255 }
%union.anon.255 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.256" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { i64 }
%"class.x11::Future" = type { %"class.std::__1::unique_ptr.267" }
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.x11::Connection::FutureImpl"* }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"struct.x11::InternAtomRequest" = type { i8, %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.x11::InternAtomReply" = type { i16, i32 }
%"class.std::__1::vector.265" = type { %"class.std::__1::__vector_base.266" }
%"class.std::__1::__vector_base.266" = type { %"class.x11::Future"*, %"class.x11::Future"*, %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.x11::Future"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.284" }
%"struct.std::__1::pair.284" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.247, i64, i32* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN3x116FutureINS_15InternAtomReplyEE4SyncEv = comdat any

$_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIN3x116FutureINS1_15InternAtomReplyEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKS7_RS9_EEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = comdat any

@.str = private unnamed_addr constant [7 x i8] c"STRING\00", align 1
@_ZN3x1112_GLOBAL__N_113kAtomsToCacheE = internal constant [148 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.149, i32 0, i32 0)], align 16
@_ZZNK3x1112X11AtomCache7GetAtomERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE11error_count = internal unnamed_addr global i32 0, align 4
@.str.1 = private unnamed_addr constant [23 x i8] c"X11.XInternAtomFailure\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"ATOM_PAIR\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"Abs Dbl End Timestamp\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"Abs Dbl Fling X Velocity\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"Abs Dbl Fling Y Velocity\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"Abs Dbl Metrics Data 1\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"Abs Dbl Metrics Data 2\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"Abs Dbl Ordinal X\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"Abs Dbl Ordinal Y\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"Abs Dbl Start Timestamp\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"Abs Finger Count\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"Abs Fling State\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"Abs MT Orientation\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"Abs MT Position X\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"Abs MT Position Y\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"Abs MT Pressure\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"Abs MT Touch Major\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"Abs MT Touch Minor\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"Abs MT Tracking ID\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"Abs Metrics Type\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"CHECK\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"CHOME_SELECTION\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"CHROME_SELECTION\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"CHROMIUM_COMPOSITE_WINDOW\00", align 1
@.str.25 = private unnamed_addr constant [19 x i8] c"CHROMIUM_TIMESTAMP\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"CLIPBOARD\00", align 1
@.str.27 = private unnamed_addr constant [18 x i8] c"CLIPBOARD_MANAGER\00", align 1
@.str.28 = private unnamed_addr constant [19 x i8] c"Content Protection\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"Desired\00", align 1
@.str.30 = private unnamed_addr constant [12 x i8] c"Device Node\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"Device Product ID\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"EDID\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1
@.str.34 = private unnamed_addr constant [15 x i8] c"FAKE_SELECTION\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"Full aspect\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"INCR\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"KEYBOARD\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"LOCK\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"MOUSE\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"MULTIPLE\00", align 1
@.str.41 = private unnamed_addr constant [16 x i8] c"Rel Horiz Wheel\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"Rel Vert Wheel\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"SAVE_TARGETS\00", align 1
@.str.44 = private unnamed_addr constant [17 x i8] c"SELECTION_STRING\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"TARGET1\00", align 1
@.str.46 = private unnamed_addr constant [8 x i8] c"TARGET2\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"TARGETS\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"TEXT\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"TIMESTAMP\00", align 1
@.str.50 = private unnamed_addr constant [9 x i8] c"TOUCHPAD\00", align 1
@.str.51 = private unnamed_addr constant [12 x i8] c"TOUCHSCREEN\00", align 1
@.str.52 = private unnamed_addr constant [11 x i8] c"Tap Paused\00", align 1
@.str.53 = private unnamed_addr constant [16 x i8] c"Touch Timestamp\00", align 1
@.str.54 = private unnamed_addr constant [12 x i8] c"UTF8_STRING\00", align 1
@.str.55 = private unnamed_addr constant [10 x i8] c"Undesired\00", align 1
@.str.56 = private unnamed_addr constant [17 x i8] c"WM_DELETE_WINDOW\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"WM_PROTOCOLS\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"WM_WINDOW_ROLE\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"XdndActionAsk\00", align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"XdndActionCopy\00", align 1
@.str.61 = private unnamed_addr constant [21 x i8] c"XdndActionDirectSave\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"XdndActionLink\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"XdndActionList\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"XdndActionMove\00", align 1
@.str.65 = private unnamed_addr constant [18 x i8] c"XdndActionPrivate\00", align 1
@.str.66 = private unnamed_addr constant [10 x i8] c"XdndAware\00", align 1
@.str.67 = private unnamed_addr constant [16 x i8] c"XdndDirectSave0\00", align 1
@.str.68 = private unnamed_addr constant [9 x i8] c"XdndDrop\00", align 1
@.str.69 = private unnamed_addr constant [10 x i8] c"XdndEnter\00", align 1
@.str.70 = private unnamed_addr constant [13 x i8] c"XdndFinished\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"XdndLeave\00", align 1
@.str.72 = private unnamed_addr constant [13 x i8] c"XdndPosition\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"XdndProxy\00", align 1
@.str.74 = private unnamed_addr constant [14 x i8] c"XdndSelection\00", align 1
@.str.75 = private unnamed_addr constant [11 x i8] c"XdndStatus\00", align 1
@.str.76 = private unnamed_addr constant [13 x i8] c"XdndTypeList\00", align 1
@.str.77 = private unnamed_addr constant [25 x i8] c"_CHROME_DISPLAY_INTERNAL\00", align 1
@.str.78 = private unnamed_addr constant [25 x i8] c"_CHROME_DISPLAY_ROTATION\00", align 1
@.str.79 = private unnamed_addr constant [29 x i8] c"_CHROME_DISPLAY_SCALE_FACTOR\00", align 1
@.str.80 = private unnamed_addr constant [24 x i8] c"_CHROMIUM_DRAG_RECEIVER\00", align 1
@.str.81 = private unnamed_addr constant [34 x i8] c"_GTK_HIDE_TITLEBAR_WHEN_MAXIMIZED\00", align 1
@.str.82 = private unnamed_addr constant [19 x i8] c"_GTK_THEME_VARIANT\00", align 1
@.str.83 = private unnamed_addr constant [13 x i8] c"_ICC_PROFILE\00", align 1
@.str.84 = private unnamed_addr constant [16 x i8] c"_MOTIF_WM_HINTS\00", align 1
@.str.85 = private unnamed_addr constant [14 x i8] c"_NETSCAPE_URL\00", align 1
@.str.86 = private unnamed_addr constant [19 x i8] c"_NET_ACTIVE_WINDOW\00", align 1
@.str.87 = private unnamed_addr constant [26 x i8] c"_NET_CLIENT_LIST_STACKING\00", align 1
@.str.88 = private unnamed_addr constant [21 x i8] c"_NET_CURRENT_DESKTOP\00", align 1
@.str.89 = private unnamed_addr constant [19 x i8] c"_NET_FRAME_EXTENTS\00", align 1
@.str.90 = private unnamed_addr constant [15 x i8] c"_NET_SUPPORTED\00", align 1
@.str.91 = private unnamed_addr constant [25 x i8] c"_NET_SUPPORTING_WM_CHECK\00", align 1
@.str.92 = private unnamed_addr constant [24 x i8] c"_NET_SYSTEM_TRAY_OPCODE\00", align 1
@.str.93 = private unnamed_addr constant [20 x i8] c"_NET_SYSTEM_TRAY_S0\00", align 1
@.str.94 = private unnamed_addr constant [24 x i8] c"_NET_SYSTEM_TRAY_VISUAL\00", align 1
@.str.95 = private unnamed_addr constant [26 x i8] c"_NET_WM_BYPASS_COMPOSITOR\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"_NET_WM_CM_S0\00", align 1
@.str.97 = private unnamed_addr constant [16 x i8] c"_NET_WM_DESKTOP\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"_NET_WM_ICON\00", align 1
@.str.99 = private unnamed_addr constant [19 x i8] c"_NET_WM_MOVERESIZE\00", align 1
@.str.100 = private unnamed_addr constant [13 x i8] c"_NET_WM_NAME\00", align 1
@.str.101 = private unnamed_addr constant [12 x i8] c"_NET_WM_PID\00", align 1
@.str.102 = private unnamed_addr constant [13 x i8] c"_NET_WM_PING\00", align 1
@.str.103 = private unnamed_addr constant [14 x i8] c"_NET_WM_STATE\00", align 1
@.str.104 = private unnamed_addr constant [20 x i8] c"_NET_WM_STATE_ABOVE\00", align 1
@.str.105 = private unnamed_addr constant [22 x i8] c"_NET_WM_STATE_FOCUSED\00", align 1
@.str.106 = private unnamed_addr constant [25 x i8] c"_NET_WM_STATE_FULLSCREEN\00", align 1
@.str.107 = private unnamed_addr constant [21 x i8] c"_NET_WM_STATE_HIDDEN\00", align 1
@.str.108 = private unnamed_addr constant [29 x i8] c"_NET_WM_STATE_MAXIMIZED_HORZ\00", align 1
@.str.109 = private unnamed_addr constant [29 x i8] c"_NET_WM_STATE_MAXIMIZED_VERT\00", align 1
@.str.110 = private unnamed_addr constant [27 x i8] c"_NET_WM_STATE_SKIP_TASKBAR\00", align 1
@.str.111 = private unnamed_addr constant [21 x i8] c"_NET_WM_STATE_STICKY\00", align 1
@.str.112 = private unnamed_addr constant [21 x i8] c"_NET_WM_SYNC_REQUEST\00", align 1
@.str.113 = private unnamed_addr constant [29 x i8] c"_NET_WM_SYNC_REQUEST_COUNTER\00", align 1
@.str.114 = private unnamed_addr constant [18 x i8] c"_NET_WM_USER_TIME\00", align 1
@.str.115 = private unnamed_addr constant [23 x i8] c"_NET_WM_WINDOW_OPACITY\00", align 1
@.str.116 = private unnamed_addr constant [20 x i8] c"_NET_WM_WINDOW_TYPE\00", align 1
@.str.117 = private unnamed_addr constant [27 x i8] c"_NET_WM_WINDOW_TYPE_DIALOG\00", align 1
@.str.118 = private unnamed_addr constant [24 x i8] c"_NET_WM_WINDOW_TYPE_DND\00", align 1
@.str.119 = private unnamed_addr constant [25 x i8] c"_NET_WM_WINDOW_TYPE_MENU\00", align 1
@.str.120 = private unnamed_addr constant [27 x i8] c"_NET_WM_WINDOW_TYPE_NORMAL\00", align 1
@.str.121 = private unnamed_addr constant [33 x i8] c"_NET_WM_WINDOW_TYPE_NOTIFICATION\00", align 1
@.str.122 = private unnamed_addr constant [28 x i8] c"_NET_WM_WINDOW_TYPE_TOOLTIP\00", align 1
@.str.123 = private unnamed_addr constant [14 x i8] c"_NET_WORKAREA\00", align 1
@.str.124 = private unnamed_addr constant [20 x i8] c"_SCREENSAVER_STATUS\00", align 1
@.str.125 = private unnamed_addr constant [21 x i8] c"_SCREENSAVER_VERSION\00", align 1
@.str.126 = private unnamed_addr constant [13 x i8] c"_XEMBED_INFO\00", align 1
@.str.127 = private unnamed_addr constant [25 x i8] c"application/octet-stream\00", align 1
@.str.128 = private unnamed_addr constant [30 x i8] c"application/vnd.chromium.test\00", align 1
@.str.129 = private unnamed_addr constant [18 x i8] c"chromium/filename\00", align 1
@.str.130 = private unnamed_addr constant [28 x i8] c"chromium/x-bookmark-entries\00", align 1
@.str.131 = private unnamed_addr constant [27 x i8] c"chromium/x-browser-actions\00", align 1
@.str.132 = private unnamed_addr constant [29 x i8] c"chromium/x-file-system-files\00", align 1
@.str.133 = private unnamed_addr constant [30 x i8] c"chromium/x-pepper-custom-data\00", align 1
@.str.134 = private unnamed_addr constant [26 x i8] c"chromium/x-renderer-taint\00", align 1
@.str.135 = private unnamed_addr constant [27 x i8] c"chromium/x-web-custom-data\00", align 1
@.str.136 = private unnamed_addr constant [24 x i8] c"chromium/x-webkit-paste\00", align 1
@.str.137 = private unnamed_addr constant [10 x i8] c"image/png\00", align 1
@.str.138 = private unnamed_addr constant [14 x i8] c"image/svg+xml\00", align 1
@.str.139 = private unnamed_addr constant [13 x i8] c"marker_event\00", align 1
@.str.140 = private unnamed_addr constant [13 x i8] c"scaling mode\00", align 1
@.str.141 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1
@.str.142 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@.str.143 = private unnamed_addr constant [25 x i8] c"text/plain;charset=utf-8\00", align 1
@.str.144 = private unnamed_addr constant [9 x i8] c"text/rtf\00", align 1
@.str.145 = private unnamed_addr constant [14 x i8] c"text/uri-list\00", align 1
@.str.146 = private unnamed_addr constant [15 x i8] c"text/x-moz-url\00", align 1
@.str.147 = private unnamed_addr constant [17 x i8] c"xwayland-pointer\00", align 1
@.str.148 = private unnamed_addr constant [18 x i8] c"xwayland-keyboard\00", align 1
@.str.149 = private unnamed_addr constant [15 x i8] c"xwayland-touch\00", align 1
@_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = linkonce_odr hidden global i64 0, comdat, align 8

@_ZN3x1112X11AtomCacheC1Ev = hidden unnamed_addr alias void (%"class.x11::X11AtomCache"*), void (%"class.x11::X11AtomCache"*)* @_ZN3x1112X11AtomCacheC2Ev
@_ZN3x1112X11AtomCacheD1Ev = hidden unnamed_addr alias void (%"class.x11::X11AtomCache"*), void (%"class.x11::X11AtomCache"*)* @_ZN3x1112X11AtomCacheD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3x117GetAtomERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  %3 = icmp ugt i64 %2, 1
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E) #11
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = tail call i8* @_Znwm(i64 32) #12
  %8 = bitcast i8* %7 to %"class.x11::X11AtomCache"*
  tail call void @_ZN3x1112X11AtomCacheC2Ev(%"class.x11::X11AtomCache"* nonnull %8) #11
  %9 = ptrtoint i8* %7 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, i64 %9, void (i8*)* nonnull @_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv, i8* null) #11
  br label %12

10:                                               ; preds = %4
  %11 = load atomic i64, i64* @_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = phi i64 [ %2, %1 ], [ %9, %6 ], [ %11, %10 ]
  %14 = inttoptr i64 %13 to %"class.x11::X11AtomCache"*
  %15 = tail call i32 @_ZNK3x1112X11AtomCache7GetAtomERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.x11::X11AtomCache"* %14, %"class.std::__1::basic_string"* dereferenceable(24) %0)
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::X11AtomCache"* @_ZN3x1112X11AtomCache11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* @_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %11, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E) #11
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = tail call i8* @_Znwm(i64 32) #12
  %7 = bitcast i8* %6 to %"class.x11::X11AtomCache"*
  tail call void @_ZN3x1112X11AtomCacheC2Ev(%"class.x11::X11AtomCache"* nonnull %7) #11
  %8 = ptrtoint i8* %6 to i64
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, i64 %8, void (i8*)* nonnull @_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv, i8* null) #11
  br label %11

9:                                                ; preds = %3
  %10 = load atomic i64, i64* @_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  br label %11

11:                                               ; preds = %0, %5, %9
  %12 = phi i64 [ %1, %0 ], [ %8, %5 ], [ %10, %9 ]
  %13 = inttoptr i64 %12 to %"class.x11::X11AtomCache"*
  ret %"class.x11::X11AtomCache"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3x1112X11AtomCache7GetAtomERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.x11::X11AtomCache"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.x11::Future", align 8
  %5 = alloca %"struct.x11::InternAtomRequest", align 8
  %6 = getelementptr inbounds %"class.x11::X11AtomCache", %"class.x11::X11AtomCache"* %0, i64 0, i32 1, i32 0
  %7 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1) #11
  %8 = getelementptr inbounds %"class.x11::X11AtomCache", %"class.x11::X11AtomCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %9 = icmp eq %"class.std::__1::__tree_end_node"* %7, %8
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 7
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to i32*
  %13 = load i32, i32* %12, align 8
  br label %72

14:                                               ; preds = %2
  %15 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #11
  store i32 0, i32* %3, align 4
  %16 = bitcast %"class.x11::Future"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = bitcast %"class.x11::X11AtomCache"* %0 to %"class.x11::XProto"**
  %18 = load %"class.x11::XProto"*, %"class.x11::XProto"** %17, align 8
  %19 = getelementptr inbounds %"struct.x11::InternAtomRequest", %"struct.x11::InternAtomRequest"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #11
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"struct.x11::InternAtomRequest", %"struct.x11::InternAtomRequest"* %5, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %14
  %26 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #11
  br label %33

28:                                               ; preds = %14
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %30, i64 %32) #11
  br label %33

33:                                               ; preds = %25, %28
  %34 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto10InternAtomERKNS_17InternAtomRequestE(%"class.x11::XProto"* %18, %"struct.x11::InternAtomRequest"* nonnull dereferenceable(32) %5) #11
  %35 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.x11::Connection::FutureImpl"* %34, %"class.x11::Connection::FutureImpl"** %35, align 8
  %36 = call { %"struct.x11::InternAtomReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_15InternAtomReplyEE4SyncEv(%"class.x11::Future"* nonnull %4)
  %37 = extractvalue { %"struct.x11::InternAtomReply"*, %"class.x11::Error"* } %36, 0
  %38 = extractvalue { %"struct.x11::InternAtomReply"*, %"class.x11::Error"* } %36, 1
  %39 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %35, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %35, align 8
  %40 = icmp eq %"class.x11::Connection::FutureImpl"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  %42 = bitcast %"class.x11::Connection::FutureImpl"* %39 to i8*
  call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %33, %41
  %44 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %50) #12
  br label %51

51:                                               ; preds = %43, %48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  %52 = icmp eq %"struct.x11::InternAtomReply"* %37, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"struct.x11::InternAtomReply", %"struct.x11::InternAtomReply"* %37, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  store i32 %55, i32* %3, align 4
  %56 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKS7_RS9_EEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"* %6, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %1, i32* nonnull dereferenceable(4) %3) #11
  br label %60

57:                                               ; preds = %51
  %58 = load i32, i32* @_ZZNK3x1112X11AtomCache7GetAtomERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE11error_count, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* @_ZZNK3x1112X11AtomCache7GetAtomERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE11error_count, align 4
  call void @_ZN4base21UmaHistogramCounts100EPKci(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 %59) #11
  br label %60

60:                                               ; preds = %57, %53
  %61 = icmp eq %"class.x11::Error"* %38, null
  br i1 %61, label %67, label %62

62:                                               ; preds = %60
  %63 = bitcast %"class.x11::Error"* %38 to void (%"class.x11::Error"*)***
  %64 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %64, i64 1
  %66 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %65, align 8
  call void %66(%"class.x11::Error"* nonnull %38) #11
  br label %67

67:                                               ; preds = %62, %60
  br i1 %52, label %70, label %68

68:                                               ; preds = %67
  %69 = bitcast %"struct.x11::InternAtomReply"* %37 to i8*
  call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %67, %68
  %71 = load i32, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  br label %72

72:                                               ; preds = %70, %10
  %73 = phi i32 [ %13, %10 ], [ %71, %70 ]
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1112X11AtomCacheC2Ev(%"class.x11::X11AtomCache"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::vector.265", align 8
  %6 = alloca %"class.x11::Future", align 8
  %7 = alloca %"struct.x11::InternAtomRequest", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.x11::X11AtomCache", %"class.x11::X11AtomCache"* %0, i64 0, i32 0
  %10 = tail call %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() #11
  store %"class.x11::Connection"* %10, %"class.x11::Connection"** %9, align 8
  %11 = getelementptr inbounds %"class.x11::X11AtomCache", %"class.x11::X11AtomCache"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.x11::X11AtomCache", %"class.x11::X11AtomCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.x11::X11AtomCache", %"class.x11::X11AtomCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::__tree_node_base"** %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %13, %"class.std::__1::__tree_end_node"** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  store i8 6, i8* %18, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %16, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i64 6, i1 false) #11
  %19 = getelementptr inbounds i8, i8* %16, i64 6
  store i8 0, i8* %19, align 2
  %20 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %11, i64 0, i32 0
  %21 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  %22 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree"* %20, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #11
  %23 = bitcast %"class.std::__1::__tree_node_base"** %22 to %"class.std::__1::__tree_node"**
  %24 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node"* %24, null
  br i1 %25, label %26, label %52

26:                                               ; preds = %1
  %27 = call i8* @_Znwm(i64 64) #12, !noalias !2
  %28 = getelementptr inbounds i8, i8* %27, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %16, i64 24, i1 false) #11, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #11, !noalias !2
  %29 = getelementptr inbounds i8, i8* %27, i64 56
  %30 = bitcast i8* %29 to i32*
  store i32 0, i32* %30, align 8, !noalias !2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8* %27 to %"class.std::__1::__tree_node"*
  %34 = bitcast i8* %27 to %"class.std::__1::__tree_node_base"*
  %35 = getelementptr inbounds i8, i8* %27, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false) #11
  %36 = bitcast i8* %35 to i64*
  store i64 %32, i64* %36, align 8
  %37 = bitcast %"class.std::__1::__tree_node_base"** %22 to i8**
  store i8* %27, i8** %37, align 8
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %26
  %43 = ptrtoint %"class.std::__1::__tree_node_base"* %40 to i64
  %44 = bitcast %"class.std::__1::map"* %11 to i64*
  store i64 %43, i64* %44, align 8
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  br label %46

46:                                               ; preds = %42, %26
  %47 = phi %"class.std::__1::__tree_node_base"* [ %34, %26 ], [ %45, %42 ]
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %48, %"class.std::__1::__tree_node_base"* %47) #11
  %49 = getelementptr inbounds %"class.x11::X11AtomCache", %"class.x11::X11AtomCache"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %49, align 8
  br label %52

52:                                               ; preds = %1, %46
  %53 = phi %"class.std::__1::__tree_node"* [ %33, %46 ], [ %24, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %53, i64 0, i32 2, i32 0, i32 1
  store i32 31, i32* %54, align 4
  %55 = load i8, i8* %18, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %52, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  %61 = bitcast %"class.std::__1::vector.265"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #11
  %62 = getelementptr inbounds %"class.std::__1::vector.265", %"class.std::__1::vector.265"* %5, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::vector.265", %"class.std::__1::vector.265"* %5, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::vector.265", %"class.std::__1::vector.265"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.x11::Future"** %64 to i64*
  %66 = bitcast %"class.std::__1::vector.265"* %5 to i64*
  %67 = bitcast %"class.x11::Future"** %63 to i64*
  %68 = call i8* @_Znwm(i64 1184) #12
  %69 = ptrtoint i8* %68 to i64
  %70 = getelementptr inbounds i8, i8* %68, i64 1184
  %71 = ptrtoint i8* %70 to i64
  store i64 %69, i64* %66, align 8
  store i64 %69, i64* %67, align 8
  store i64 %71, i64* %65, align 8
  %72 = bitcast %"class.x11::Future"* %6 to i8*
  %73 = bitcast %"class.x11::X11AtomCache"* %0 to %"class.x11::XProto"**
  %74 = getelementptr inbounds %"struct.x11::InternAtomRequest", %"struct.x11::InternAtomRequest"* %7, i64 0, i32 0
  %75 = getelementptr inbounds %"struct.x11::InternAtomRequest", %"struct.x11::InternAtomRequest"* %7, i64 0, i32 1
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.x11::InternAtomRequest", %"struct.x11::InternAtomRequest"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %78 = getelementptr inbounds %"struct.x11::InternAtomRequest", %"struct.x11::InternAtomRequest"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = bitcast %"class.std::__1::basic_string"* %75 to i8*
  %82 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %96

83:                                               ; preds = %139
  %84 = load %"class.x11::Connection"*, %"class.x11::Connection"** %9, align 8
  call void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"* %84) #11
  %85 = load %"class.x11::Future"*, %"class.x11::Future"** %62, align 8
  %86 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = bitcast %"class.std::__1::__tree_end_node"** %2 to i8*
  %93 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  %94 = bitcast %"class.std::__1::map"* %11 to i64*
  %95 = getelementptr inbounds %"class.x11::X11AtomCache", %"class.x11::X11AtomCache"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  br label %164

96:                                               ; preds = %60, %139
  %97 = phi i8** [ getelementptr inbounds ([148 x i8*], [148 x i8*]* @_ZN3x1112_GLOBAL__N_113kAtomsToCacheE, i64 0, i64 0), %60 ], [ %140, %139 ]
  %98 = load i8*, i8** %97, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  %99 = load %"class.x11::XProto"*, %"class.x11::XProto"** %73, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #11
  store i8 0, i8* %74, align 8
  %100 = call i64 @strlen(i8* %98) #11
  %101 = icmp ugt i64 %100, -17
  br i1 %101, label %102, label %104

102:                                              ; preds = %96
  %103 = bitcast %"class.std::__1::basic_string"* %75 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %103) #13
  unreachable

104:                                              ; preds = %96
  %105 = icmp ult i64 %100, 23
  br i1 %105, label %111, label %106

106:                                              ; preds = %104
  %107 = add nuw i64 %100, 16
  %108 = and i64 %107, -16
  %109 = call i8* @_Znwm(i64 %108) #12
  store i8* %109, i8** %76, align 8
  %110 = or i64 %108, -9223372036854775808
  store i64 %110, i64* %77, align 8
  store i64 %100, i64* %78, align 8
  br label %114

111:                                              ; preds = %104
  %112 = trunc i64 %100 to i8
  store i8 %112, i8* %80, align 1
  %113 = icmp eq i64 %100, 0
  br i1 %113, label %116, label %114

114:                                              ; preds = %111, %106
  %115 = phi i8* [ %109, %106 ], [ %81, %111 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %115, i8* align 1 %98, i64 %100, i1 false) #11
  br label %116

116:                                              ; preds = %111, %114
  %117 = phi i8* [ %81, %111 ], [ %115, %114 ]
  %118 = getelementptr inbounds i8, i8* %117, i64 %100
  store i8 0, i8* %118, align 1
  %119 = call %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto10InternAtomERKNS_17InternAtomRequestE(%"class.x11::XProto"* %99, %"struct.x11::InternAtomRequest"* nonnull dereferenceable(32) %7) #11
  store %"class.x11::Connection::FutureImpl"* %119, %"class.x11::Connection::FutureImpl"** %82, align 8
  %120 = load %"class.x11::Future"*, %"class.x11::Future"** %63, align 8
  %121 = load %"class.x11::Future"*, %"class.x11::Future"** %64, align 8
  %122 = icmp ult %"class.x11::Future"* %120, %121
  br i1 %122, label %123, label %128

123:                                              ; preds = %116
  %124 = ptrtoint %"class.x11::Connection::FutureImpl"* %119 to i64
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %82, align 8
  %125 = bitcast %"class.x11::Future"* %120 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %120, i64 1
  %127 = ptrtoint %"class.x11::Future"* %126 to i64
  store i64 %127, i64* %67, align 8
  br label %129

128:                                              ; preds = %116
  call void @_ZNSt3__16vectorIN3x116FutureINS1_15InternAtomReplyEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.265"* nonnull %5, %"class.x11::Future"* nonnull dereferenceable(8) %6) #11
  br label %129

129:                                              ; preds = %123, %128
  %130 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %82, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %82, align 8
  %131 = icmp eq %"class.x11::Connection::FutureImpl"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %129
  %133 = bitcast %"class.x11::Connection::FutureImpl"* %130 to i8*
  call void @_ZdlPv(i8* %133) #12
  br label %134

134:                                              ; preds = %129, %132
  %135 = load i8, i8* %80, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %139

137:                                              ; preds = %134
  %138 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %138) #12
  br label %139

139:                                              ; preds = %134, %137
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  %140 = getelementptr inbounds i8*, i8** %97, i64 1
  %141 = icmp eq i8** %140, getelementptr inbounds ([148 x i8*], [148 x i8*]* @_ZN3x1112_GLOBAL__N_113kAtomsToCacheE, i64 1, i64 0)
  br i1 %141, label %83, label %96

142:                                              ; preds = %241
  %143 = icmp eq %"class.x11::Future"* %243, null
  br i1 %143, label %163, label %144

144:                                              ; preds = %142
  %145 = bitcast %"class.x11::Future"* %243 to i8*
  %146 = load %"class.x11::Future"*, %"class.x11::Future"** %63, align 8
  %147 = icmp eq %"class.x11::Future"* %146, %243
  br i1 %147, label %161, label %148

148:                                              ; preds = %144, %156
  %149 = phi %"class.x11::Future"* [ %150, %156 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %149, i64 -1
  %151 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %150, i64 0, i32 0, i32 0, i32 0, i32 0
  %152 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %151, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %151, align 8
  %153 = icmp eq %"class.x11::Connection::FutureImpl"* %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %148
  %155 = bitcast %"class.x11::Connection::FutureImpl"* %152 to i8*
  call void @_ZdlPv(i8* %155) #12
  br label %156

156:                                              ; preds = %154, %148
  %157 = icmp eq %"class.x11::Future"* %150, %243
  br i1 %157, label %158, label %148

158:                                              ; preds = %156
  %159 = bitcast %"class.std::__1::vector.265"* %5 to i8**
  %160 = load i8*, i8** %159, align 8
  br label %161

161:                                              ; preds = %158, %144
  %162 = phi i8* [ %160, %158 ], [ %145, %144 ]
  store %"class.x11::Future"* %243, %"class.x11::Future"** %63, align 8
  call void @_ZdlPv(i8* %162) #12
  br label %163

163:                                              ; preds = %142, %161
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #11
  ret void

164:                                              ; preds = %241, %83
  %165 = phi %"class.x11::Future"* [ %85, %83 ], [ %243, %241 ]
  %166 = phi i64 [ 0, %83 ], [ %242, %241 ]
  %167 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %165, i64 %166
  %168 = call { %"struct.x11::InternAtomReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_15InternAtomReplyEE4SyncEv(%"class.x11::Future"* %167)
  %169 = extractvalue { %"struct.x11::InternAtomReply"*, %"class.x11::Error"* } %168, 0
  %170 = extractvalue { %"struct.x11::InternAtomReply"*, %"class.x11::Error"* } %168, 1
  %171 = icmp eq %"struct.x11::InternAtomReply"* %169, null
  br i1 %171, label %231, label %172

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"struct.x11::InternAtomReply", %"struct.x11::InternAtomReply"* %169, i64 0, i32 1
  %174 = load i32, i32* %173, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  %175 = getelementptr inbounds [148 x i8*], [148 x i8*]* @_ZN3x1112_GLOBAL__N_113kAtomsToCacheE, i64 0, i64 %166
  %176 = load i8*, i8** %175, align 8
  %177 = call i64 @strlen(i8* %176) #11
  %178 = icmp ugt i64 %177, -17
  br i1 %178, label %179, label %181

179:                                              ; preds = %172
  %180 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %180) #13
  unreachable

181:                                              ; preds = %172
  %182 = icmp ult i64 %177, 23
  br i1 %182, label %188, label %183

183:                                              ; preds = %181
  %184 = add nuw i64 %177, 16
  %185 = and i64 %184, -16
  %186 = call i8* @_Znwm(i64 %185) #12
  store i8* %186, i8** %87, align 8
  %187 = or i64 %185, -9223372036854775808
  store i64 %187, i64* %88, align 8
  store i64 %177, i64* %89, align 8
  br label %191

188:                                              ; preds = %181
  %189 = trunc i64 %177 to i8
  store i8 %189, i8* %91, align 1
  %190 = icmp eq i64 %177, 0
  br i1 %190, label %193, label %191

191:                                              ; preds = %188, %183
  %192 = phi i8* [ %186, %183 ], [ %86, %188 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %192, i8* align 1 %176, i64 %177, i1 false) #11
  br label %193

193:                                              ; preds = %188, %191
  %194 = phi i8* [ %86, %188 ], [ %192, %191 ]
  %195 = getelementptr inbounds i8, i8* %194, i64 %177
  store i8 0, i8* %195, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %2, align 8
  %196 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree"* %20, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #11
  %197 = bitcast %"class.std::__1::__tree_node_base"** %196 to %"class.std::__1::__tree_node"**
  %198 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %197, align 8
  %199 = icmp eq %"class.std::__1::__tree_node"* %198, null
  br i1 %199, label %200, label %223

200:                                              ; preds = %193
  %201 = call i8* @_Znwm(i64 64) #12, !noalias !5
  %202 = getelementptr inbounds i8, i8* %201, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %202, i8* nonnull align 8 %86, i64 24, i1 false) #11, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 0, i64 24, i1 false) #11, !noalias !5
  %203 = getelementptr inbounds i8, i8* %201, i64 56
  %204 = bitcast i8* %203 to i32*
  store i32 0, i32* %204, align 8, !noalias !5
  %205 = load i64, i64* %93, align 8
  %206 = bitcast i8* %201 to %"class.std::__1::__tree_node"*
  %207 = bitcast i8* %201 to %"class.std::__1::__tree_node_base"*
  %208 = getelementptr inbounds i8, i8* %201, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %201, i8 0, i64 16, i1 false) #11
  %209 = bitcast i8* %208 to i64*
  store i64 %205, i64* %209, align 8
  %210 = bitcast %"class.std::__1::__tree_node_base"** %196 to i8**
  store i8* %201, i8** %210, align 8
  %211 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %14, align 8
  %212 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %211, i64 0, i32 0
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = icmp eq %"class.std::__1::__tree_node_base"* %213, null
  br i1 %214, label %218, label %215

215:                                              ; preds = %200
  %216 = ptrtoint %"class.std::__1::__tree_node_base"* %213 to i64
  store i64 %216, i64* %94, align 8
  %217 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %196, align 8
  br label %218

218:                                              ; preds = %215, %200
  %219 = phi %"class.std::__1::__tree_node_base"* [ %207, %200 ], [ %217, %215 ]
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"* %219) #11
  %221 = load i64, i64* %95, align 8
  %222 = add i64 %221, 1
  store i64 %222, i64* %95, align 8
  br label %223

223:                                              ; preds = %193, %218
  %224 = phi %"class.std::__1::__tree_node"* [ %206, %218 ], [ %198, %193 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  %225 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %224, i64 0, i32 2, i32 0, i32 1
  store i32 %174, i32* %225, align 4
  %226 = load i8, i8* %91, align 1
  %227 = icmp slt i8 %226, 0
  br i1 %227, label %228, label %230

228:                                              ; preds = %223
  %229 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %229) #12
  br label %230

230:                                              ; preds = %223, %228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  br label %231

231:                                              ; preds = %164, %230
  %232 = icmp eq %"class.x11::Error"* %170, null
  br i1 %232, label %238, label %233

233:                                              ; preds = %231
  %234 = bitcast %"class.x11::Error"* %170 to void (%"class.x11::Error"*)***
  %235 = load void (%"class.x11::Error"*)**, void (%"class.x11::Error"*)*** %234, align 8
  %236 = getelementptr inbounds void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %235, i64 1
  %237 = load void (%"class.x11::Error"*)*, void (%"class.x11::Error"*)** %236, align 8
  call void %237(%"class.x11::Error"* nonnull %170) #11
  br label %238

238:                                              ; preds = %233, %231
  br i1 %171, label %241, label %239

239:                                              ; preds = %238
  %240 = bitcast %"struct.x11::InternAtomReply"* %169 to i8*
  call void @_ZdlPv(i8* %240) #12
  br label %241

241:                                              ; preds = %238, %239
  %242 = add nuw nsw i64 %166, 1
  %243 = load %"class.x11::Future"*, %"class.x11::Future"** %62, align 8
  %244 = icmp eq i64 %242, 148
  br i1 %244, label %142, label %164
}

declare %"class.x11::Connection"* @_ZN3x1110Connection3GetEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.x11::Connection::FutureImpl"* @_ZN3x116XProto10InternAtomERKNS_17InternAtomRequestE(%"class.x11::XProto"*, %"struct.x11::InternAtomRequest"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN3x1110Connection5FlushEv(%"class.x11::Connection"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.x11::InternAtomReply"*, %"class.x11::Error"* } @_ZN3x116FutureINS_15InternAtomReplyEE4SyncEv(%"class.x11::Future"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %class.scoped_refptr.247, align 8
  %3 = alloca %"class.std::__1::unique_ptr.249", align 8
  %4 = alloca %"struct.x11::ReadBuffer", align 8
  %5 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %5, align 8
  %7 = icmp eq %"class.x11::Connection::FutureImpl"* %6, null
  br i1 %7, label %43, label %8

8:                                                ; preds = %1
  %9 = bitcast %class.scoped_refptr.247* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %class.scoped_refptr.247, %class.scoped_refptr.247* %2, i64 0, i32 0
  store %"class.base::RefCountedMemory"* null, %"class.base::RefCountedMemory"** %10, align 8
  %11 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.249"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.249"* %3 to i64*
  store i64 0, i64* %13, align 8
  call void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"* nonnull %6, %class.scoped_refptr.247* nonnull %2, %"class.std::__1::unique_ptr.249"* nonnull %3) #11
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %15 = icmp eq %"class.base::RefCountedMemory"* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %40

18:                                               ; preds = %8
  %19 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"struct.x11::ReadBuffer"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 24, i1 false)
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  call void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"* nonnull %4, %"class.base::RefCountedMemory"* nonnull %14, i1 zeroext false) #11
  %23 = call %"struct.x11::InternAtomReply"* @_ZN3x116detail9ReadReplyINS_15InternAtomReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nonnull %4) #11
  %24 = ptrtoint %"struct.x11::InternAtomReply"* %23 to i64
  call void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %10, align 8
  %26 = load %"class.x11::Error"*, %"class.x11::Error"** %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %27 = icmp eq %"class.base::RefCountedMemory"* %25, null
  br i1 %27, label %40, label %28

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.base::RefCountedMemory", %"class.base::RefCountedMemory"* %25, i64 0, i32 1
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i32* %30, i32 1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %40

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.248", %"class.base::RefCountedThreadSafe.248"* %29, i64 -2
  %35 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to %"class.base::RefCountedMemory"*
  %36 = bitcast %"class.base::RefCountedThreadSafe.248"* %34 to void (%"class.base::RefCountedMemory"*)***
  %37 = load void (%"class.base::RefCountedMemory"*)**, void (%"class.base::RefCountedMemory"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %37, i64 3
  %39 = load void (%"class.base::RefCountedMemory"*)*, void (%"class.base::RefCountedMemory"*)** %38, align 8
  call void %39(%"class.base::RefCountedMemory"* nonnull %35) #11
  br label %40

40:                                               ; preds = %16, %18, %28, %33
  %41 = phi %"class.x11::Error"* [ %17, %16 ], [ %26, %18 ], [ %26, %28 ], [ %26, %33 ]
  %42 = phi i64 [ 0, %16 ], [ %24, %18 ], [ %24, %28 ], [ %24, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %43

43:                                               ; preds = %1, %40
  %44 = phi i64 [ %42, %40 ], [ 0, %1 ]
  %45 = phi %"class.x11::Error"* [ %41, %40 ], [ null, %1 ]
  %46 = inttoptr i64 %44 to %"struct.x11::InternAtomReply"*
  %47 = insertvalue { %"struct.x11::InternAtomReply"*, %"class.x11::Error"* } undef, %"struct.x11::InternAtomReply"* %46, 0
  %48 = insertvalue { %"struct.x11::InternAtomReply"*, %"class.x11::Error"* } %47, %"class.x11::Error"* %45, 1
  ret { %"struct.x11::InternAtomReply"*, %"class.x11::Error"* } %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x1112X11AtomCacheD2Ev(%"class.x11::X11AtomCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.x11::X11AtomCache", %"class.x11::X11AtomCache"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.x11::X11AtomCache", %"class.x11::X11AtomCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node"* %5) #11
  ret void
}

declare void @_ZN4base21UmaHistogramCounts100EPKci(i8*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E monotonic, align 8
  %3 = inttoptr i64 %2 to %"class.x11::X11AtomCache"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.x11::X11AtomCache", %"class.x11::X11AtomCache"* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.x11::X11AtomCache", %"class.x11::X11AtomCache"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %6, %"class.std::__1::__tree_node"* %9) #11
  %10 = inttoptr i64 %2 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  br label %11

11:                                               ; preds = %1, %5
  store i64 0, i64* @_ZN4base9SingletonIN3x1112X11AtomCacheENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 2, i32 0
  %11 = bitcast %"struct.std::__1::pair.284"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.std::__1::pair.284", %"struct.std::__1::pair.284"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #12
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 2
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #11
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #11
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x116FutureINS1_15InternAtomReplyEEENS_9allocatorIS4_EEE21__push_back_slow_pathIS4_EEvOT_(%"class.std::__1::vector.265"*, %"class.x11::Future"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.265", %"class.std::__1::vector.265"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.x11::Future"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.265"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.265"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.265", %"class.std::__1::vector.265"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.x11::Future"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.x11::Future"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.x11::Future"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %36, i64 %9
  %38 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %36, i64 %35
  %39 = ptrtoint %"class.x11::Future"* %38 to i64
  %40 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.x11::Future"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %40, align 8
  %43 = bitcast %"class.x11::Future"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %37, i64 1
  %45 = ptrtoint %"class.x11::Future"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.265", %"class.std::__1::vector.265"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.x11::Future"*, %"class.x11::Future"** %46, align 8
  %48 = ptrtoint %"class.x11::Future"* %47 to i64
  %49 = load %"class.x11::Future"*, %"class.x11::Future"** %3, align 8
  %50 = icmp eq %"class.x11::Future"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.x11::Future", %"class.x11::Future"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.x11::Connection::FutureImpl"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.x11::Future"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.x11::Future"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %60, i64 -1
  %64 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %61, i64 -1
  %65 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.x11::Future"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %65, align 8
  %68 = bitcast %"class.x11::Future"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !9

71:                                               ; preds = %59, %51
  %72 = phi %"class.x11::Future"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.x11::Future"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.x11::Future"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.x11::Future"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.x11::Future"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %77, i64 -1
  %80 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %78, i64 -1
  %81 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.x11::Future"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %81, align 8
  %84 = bitcast %"class.x11::Future"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %77, i64 -2
  %86 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %78, i64 -2
  %87 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.x11::Future"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %87, align 8
  %90 = bitcast %"class.x11::Future"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %77, i64 -3
  %92 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %78, i64 -3
  %93 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.x11::Future"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %93, align 8
  %96 = bitcast %"class.x11::Future"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %77, i64 -4
  %98 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %78, i64 -4
  %99 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.x11::Future"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %99, align 8
  %102 = bitcast %"class.x11::Future"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %77, i64 -5
  %104 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %78, i64 -5
  %105 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.x11::Future"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %105, align 8
  %108 = bitcast %"class.x11::Future"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %77, i64 -6
  %110 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %78, i64 -6
  %111 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %110, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.x11::Future"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %111, align 8
  %114 = bitcast %"class.x11::Future"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %77, i64 -7
  %116 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %78, i64 -7
  %117 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.x11::Future"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %117, align 8
  %120 = bitcast %"class.x11::Future"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %77, i64 -8
  %122 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %78, i64 -8
  %123 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %122, i64 0, i32 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.x11::Future"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %123, align 8
  %126 = bitcast %"class.x11::Future"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.x11::Future"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.x11::Future"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.x11::Future"*, %"class.x11::Future"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.x11::Future"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.x11::Future"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.x11::Future"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.x11::Future"*
  %138 = icmp eq %"class.x11::Future"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.x11::Future"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %140, i64 -1
  %142 = getelementptr inbounds %"class.x11::Future", %"class.x11::Future"* %141, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"class.x11::Connection::FutureImpl"*, %"class.x11::Connection::FutureImpl"** %142, align 8
  store %"class.x11::Connection::FutureImpl"* null, %"class.x11::Connection::FutureImpl"** %142, align 8
  %144 = icmp eq %"class.x11::Connection::FutureImpl"* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.x11::Connection::FutureImpl"* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #12
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.x11::Future"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #12
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

declare void @_ZN3x1110Connection10FutureImpl4SyncEP13scoped_refptrIN4base16RefCountedMemoryEEPNSt3__110unique_ptrINS_5ErrorENS7_14default_deleteIS9_EEEE(%"class.x11::Connection::FutureImpl"*, %class.scoped_refptr.247*, %"class.std::__1::unique_ptr.249"*) local_unnamed_addr #1

declare void @_ZN3x1110ReadBufferC1E13scoped_refptrIN4base16RefCountedMemoryEEb(%"struct.x11::ReadBuffer"*, %"class.base::RefCountedMemory"*, i1 zeroext) unnamed_addr #1

declare %"struct.x11::InternAtomReply"* @_ZN3x116detail9ReadReplyINS_15InternAtomReplyEEENSt3__110unique_ptrIT_NS3_14default_deleteIS5_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3x1110ReadBufferD1Ev(%"struct.x11::ReadBuffer"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 2
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #11
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #11
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE25__emplace_unique_key_argsIS7_JRKS7_RS9_EEENS_4pairINS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %6 = bitcast %"class.std::__1::__tree_end_node"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %5, align 8
  %7 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %5, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %10 = icmp eq %"class.std::__1::__tree_node"* %9, null
  br i1 %10, label %11, label %53

11:                                               ; preds = %4
  %12 = call i8* @_Znwm(i64 64) #12, !noalias !11
  %13 = getelementptr inbounds i8, i8* %12, i64 32
  %14 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1, !noalias !11
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %11
  %19 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %19, i64 24, i1 false) #11, !noalias !11
  br label %26

20:                                               ; preds = %11
  %21 = bitcast i8* %13 to %"class.std::__1::basic_string"*
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8, !noalias !11
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8, !noalias !11
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %23, i64 %25) #11, !noalias !11
  br label %26

26:                                               ; preds = %18, %20
  %27 = getelementptr inbounds i8, i8* %12, i64 56
  %28 = bitcast i8* %27 to i32*
  %29 = load i32, i32* %3, align 4, !noalias !11
  store i32 %29, i32* %28, align 8, !noalias !11
  %30 = bitcast %"class.std::__1::__tree_end_node"** %5 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast i8* %12 to %"class.std::__1::__tree_node"*
  %33 = bitcast i8* %12 to %"class.std::__1::__tree_node_base"*
  %34 = getelementptr inbounds i8, i8* %12, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 16, i1 false) #11
  %35 = bitcast i8* %34 to i64*
  store i64 %31, i64* %35, align 8
  %36 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8**
  store i8* %12, i8** %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %26
  %43 = ptrtoint %"class.std::__1::__tree_node_base"* %40 to i64
  %44 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %43, i64* %44, align 8
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  br label %46

46:                                               ; preds = %42, %26
  %47 = phi %"class.std::__1::__tree_node_base"* [ %33, %26 ], [ %45, %42 ]
  %48 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %49, %"class.std::__1::__tree_node_base"* %47) #11
  %50 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %50, align 8
  br label %53

53:                                               ; preds = %46, %4
  %54 = phi i8 [ 1, %46 ], [ 0, %4 ]
  %55 = phi %"class.std::__1::__tree_node"* [ %32, %46 ], [ %9, %4 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %55, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %57 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %56, 0
  %58 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %57, i8 %54, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %58
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_ISS_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_ISS_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_ISS_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_ISS_EEEEEEDpOT_"}
!8 = !{i8 0, i8 2}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKS7_RS9_EEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_ISO_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN3x114AtomEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJRKS7_RS9_EEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_ISO_EEEEEEDpOT_"}
