; ModuleID = '../../third_party/blink/renderer/platform/audio/hrtf_panner.cc'
source_filename = "../../third_party/blink/renderer/platform/audio/hrtf_panner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HRTFPanner" = type <{ %"class.blink::Panner", %class.scoped_refptr, float, i32, i32, [4 x i8], double, i32, [4 x i8], double, float, float, %"class.blink::FFTConvolver", %"class.blink::FFTConvolver", %"class.blink::FFTConvolver", %"class.blink::FFTConvolver", %"class.blink::AudioDelayDSPKernel", %"class.blink::AudioDelayDSPKernel", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", i32, [4 x i8] }>
%"class.blink::Panner" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.blink::HRTFDatabaseLoader"* }
%"class.blink::FFTConvolver" = type { %"class.blink::FFTFrame", i64, %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.blink::FFTFrame" = type { i32, i32, %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.blink::AudioDelayDSPKernel" = type { %"class.blink::AudioDSPKernel", %"class.blink::AudioArray", float, i32, double, %"class.blink::AudioArray", %"class.blink::AudioArray" }
%"class.blink::AudioDSPKernel" = type { i32 (...)**, %"class.blink::AudioDSPKernelProcessor"*, float, i32 }
%"class.blink::AudioDSPKernelProcessor" = type <{ %"class.blink::AudioProcessor", %"class.WTF::Vector.8", %"class.WTF::Mutex", i8, [7 x i8] }>
%"class.blink::AudioProcessor" = type { i32 (...)**, i8, i32, float, i32 }
%"class.WTF::Vector.8" = type { %"class.WTF::VectorBuffer.9" }
%"class.WTF::VectorBuffer.9" = type { %"class.WTF::VectorBufferBase.10" }
%"class.WTF::VectorBufferBase.10" = type { %"class.std::__1::unique_ptr.11"*, i32, i32 }
%"class.std::__1::unique_ptr.11" = type opaque
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.blink::HRTFDatabaseLoader" = type <{ %"class.WTF::RefCounted", [4 x i8], %"class.WTF::Mutex", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2", float, [4 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::HRTFDatabase"* }
%"class.blink::HRTFDatabase" = type <{ %"class.WTF::Vector", float, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr.0"*, i32, i32 }
%"class.std::__1::unique_ptr.0" = type opaque
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::Thread"* }
%"class.blink::Thread" = type { i32 (...)** }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted", i32, %"class.WTF::Vector.15", i32, float }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector.15" = type { %"class.WTF::VectorBuffer.16" }
%"class.WTF::VectorBuffer.16" = type { %"class.WTF::VectorBufferBase.17", [64 x i8] }
%"class.WTF::VectorBufferBase.17" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.18", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::AudioArray"* }
%"class.blink::HRTFKernel" = type { %"class.std::__1::unique_ptr.26", float, float }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::FFTFrame"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink10AudioArrayIfE8AllocateEm = comdat any

@_ZTVN5blink10HRTFPannerE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::HRTFPanner"*)* @_ZN5blink10HRTFPannerD2Ev to i8*), i8* bitcast (void (%"class.blink::HRTFPanner"*)* @_ZN5blink10HRTFPannerD0Ev to i8*), i8* bitcast (void (%"class.blink::HRTFPanner"*, double, double, %"class.blink::AudioBus"*, %"class.blink::AudioBus"*, i32, i32)* @_ZN5blink10HRTFPanner3PanEddPKNS_8AudioBusEPS1_jNS1_21ChannelInterpretationE to i8*), i8* bitcast (void (%"class.blink::HRTFPanner"*, double*, double*, %"class.blink::AudioBus"*, %"class.blink::AudioBus"*, i32, i32)* @_ZN5blink10HRTFPanner27PanWithSampleAccurateValuesEPdS1_PKNS_8AudioBusEPS2_jNS2_21ChannelInterpretationE to i8*), i8* bitcast (void (%"class.blink::HRTFPanner"*)* @_ZN5blink10HRTFPanner5ResetEv to i8*), i8* bitcast (double (%"class.blink::HRTFPanner"*)* @_ZNK5blink10HRTFPanner8TailTimeEv to i8*), i8* bitcast (double (%"class.blink::HRTFPanner"*)* @_ZNK5blink10HRTFPanner11LatencyTimeEv to i8*), i8* bitcast (i1 (%"class.blink::HRTFPanner"*)* @_ZNK5blink10HRTFPanner22RequiresTailProcessingEv to i8*)] }, align 8
@_ZTVN5blink19AudioDelayDSPKernelE = external unnamed_addr constant { [14 x i8*] }, align 8
@_ZN5blink13HRTFElevation22kNumberOfTotalAzimuthsE = external local_unnamed_addr constant i32, align 4
@.str = private unnamed_addr constant [54 x i8] c"n <= std::numeric_limits<unsigned>::max() / sizeof(T)\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/platform/audio/audio_array.h\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"allocation_\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioArray<float>]\00", align 1

@_ZN5blink10HRTFPannerC1EfjPNS_18HRTFDatabaseLoaderE = hidden unnamed_addr alias void (%"class.blink::HRTFPanner"*, float, i32, %"class.blink::HRTFDatabaseLoader"*), void (%"class.blink::HRTFPanner"*, float, i32, %"class.blink::HRTFDatabaseLoader"*)* @_ZN5blink10HRTFPannerC2EfjPNS_18HRTFDatabaseLoaderE
@_ZN5blink10HRTFPannerD1Ev = hidden unnamed_addr alias void (%"class.blink::HRTFPanner"*), void (%"class.blink::HRTFPanner"*)* @_ZN5blink10HRTFPannerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10HRTFPannerC2EfjPNS_18HRTFDatabaseLoaderE(%"class.blink::HRTFPanner"*, float, i32, %"class.blink::HRTFDatabaseLoader"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink10HRTFPannerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 1, i32 0
  store %"class.blink::HRTFDatabaseLoader"* %3, %"class.blink::HRTFDatabaseLoader"** %6, align 8
  %7 = icmp eq %"class.blink::HRTFDatabaseLoader"* %3, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %9) #9
  br label %10

10:                                               ; preds = %4, %8
  %11 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 2
  store float %1, float* %11, align 8
  %12 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 3
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 4
  store i32 -1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 6
  store double 0.000000e+00, double* %14, align 8
  %15 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 7
  store i32 -1, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 9
  %17 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 12
  %18 = fdiv float %1, 4.410000e+04
  %19 = fpext float %18 to double
  %20 = fmul double %19, 2.560000e+02
  %21 = bitcast double* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false)
  %22 = tail call double @log2(double %20) #9
  %23 = fptoui double %22 to i32
  %24 = shl i32 1, %23
  %25 = tail call i32 @_ZN5blink8FFTFrame10MinFFTSizeEv() #9
  %26 = icmp slt i32 %24, %25
  %27 = select i1 %26, i32 %25, i32 %24
  %28 = shl nsw i32 %27, 1
  %29 = sext i32 %28 to i64
  tail call void @_ZN5blink12FFTConvolverC1Em(%"class.blink::FFTConvolver"* %17, i64 %29) #9
  %30 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 13
  %31 = tail call double @log2(double %20) #9
  %32 = fptoui double %31 to i32
  %33 = shl i32 1, %32
  %34 = tail call i32 @_ZN5blink8FFTFrame10MinFFTSizeEv() #9
  %35 = icmp slt i32 %33, %34
  %36 = select i1 %35, i32 %34, i32 %33
  %37 = shl nsw i32 %36, 1
  %38 = sext i32 %37 to i64
  tail call void @_ZN5blink12FFTConvolverC1Em(%"class.blink::FFTConvolver"* %30, i64 %38) #9
  %39 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 14
  %40 = tail call double @log2(double %20) #9
  %41 = fptoui double %40 to i32
  %42 = shl i32 1, %41
  %43 = tail call i32 @_ZN5blink8FFTFrame10MinFFTSizeEv() #9
  %44 = icmp slt i32 %42, %43
  %45 = select i1 %44, i32 %43, i32 %42
  %46 = shl nsw i32 %45, 1
  %47 = sext i32 %46 to i64
  tail call void @_ZN5blink12FFTConvolverC1Em(%"class.blink::FFTConvolver"* %39, i64 %47) #9
  %48 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 15
  %49 = tail call double @log2(double %20) #9
  %50 = fptoui double %49 to i32
  %51 = shl i32 1, %50
  %52 = tail call i32 @_ZN5blink8FFTFrame10MinFFTSizeEv() #9
  %53 = icmp slt i32 %51, %52
  %54 = select i1 %53, i32 %52, i32 %51
  %55 = shl nsw i32 %54, 1
  %56 = sext i32 %55 to i64
  tail call void @_ZN5blink12FFTConvolverC1Em(%"class.blink::FFTConvolver"* %48, i64 %56) #9
  %57 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 16
  tail call void @_ZN5blink19AudioDelayDSPKernelC1Edfj(%"class.blink::AudioDelayDSPKernel"* %57, double 2.000000e-03, float %1, i32 %2) #9
  %58 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 17
  tail call void @_ZN5blink19AudioDelayDSPKernelC1Edfj(%"class.blink::AudioDelayDSPKernel"* %58, double 2.000000e-03, float %1, i32 %2) #9
  %59 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 18
  %60 = zext i32 %2 to i64
  %61 = bitcast %"class.blink::AudioArray"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 20, i1 false) #9
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %59, i64 %60) #9
  %62 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 19
  %63 = bitcast %"class.blink::AudioArray"* %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 20, i1 false) #9
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %62, i64 %60) #9
  %64 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 20
  %65 = bitcast %"class.blink::AudioArray"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 20, i1 false) #9
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %64, i64 %60) #9
  %66 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 21
  %67 = bitcast %"class.blink::AudioArray"* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 20, i1 false) #9
  tail call void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"* %66, i64 %60) #9
  %68 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 22
  store i32 %2, i32* %68, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink10HRTFPanner20FftSizeForSampleRateEf(float) local_unnamed_addr #0 align 2 {
  %2 = fdiv float %0, 4.410000e+04
  %3 = fpext float %2 to double
  %4 = fmul double %3, 2.560000e+02
  %5 = tail call double @log2(double %4) #9
  %6 = fptoui double %5 to i32
  %7 = shl i32 1, %6
  %8 = tail call i32 @_ZN5blink8FFTFrame10MinFFTSizeEv() #9
  %9 = icmp slt i32 %7, %8
  %10 = select i1 %9, i32 %8, i32 %7
  %11 = shl nsw i32 %10, 1
  %12 = sext i32 %11 to i64
  ret i64 %12
}

declare void @_ZN5blink12FFTConvolverC1Em(%"class.blink::FFTConvolver"*, i64) unnamed_addr #1

declare void @_ZN5blink19AudioDelayDSPKernelC1Edfj(%"class.blink::AudioDelayDSPKernel"*, double, float, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10HRTFPannerD2Ev(%"class.blink::HRTFPanner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink10HRTFPannerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 21
  %4 = bitcast %"class.blink::AudioArray"* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %5) #9
  %6 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 20
  %7 = bitcast %"class.blink::AudioArray"* %6 to i8**
  %8 = load i8*, i8** %7, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %8) #9
  %9 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 19
  %10 = bitcast %"class.blink::AudioArray"* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %11) #9
  %12 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 18
  %13 = bitcast %"class.blink::AudioArray"* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %14) #9
  %15 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 17
  %16 = getelementptr inbounds %"class.blink::AudioDelayDSPKernel", %"class.blink::AudioDelayDSPKernel"* %15, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19AudioDelayDSPKernelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 17, i32 6
  %18 = bitcast %"class.blink::AudioArray"* %17 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %19) #9
  %20 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 17, i32 5
  %21 = bitcast %"class.blink::AudioArray"* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %22) #9
  %23 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 17, i32 1
  %24 = bitcast %"class.blink::AudioArray"* %23 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %25) #9
  %26 = getelementptr inbounds %"class.blink::AudioDelayDSPKernel", %"class.blink::AudioDelayDSPKernel"* %15, i64 0, i32 0
  tail call void @_ZN5blink14AudioDSPKernelD2Ev(%"class.blink::AudioDSPKernel"* %26) #9
  %27 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 16
  %28 = getelementptr inbounds %"class.blink::AudioDelayDSPKernel", %"class.blink::AudioDelayDSPKernel"* %27, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink19AudioDelayDSPKernelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 16, i32 6
  %30 = bitcast %"class.blink::AudioArray"* %29 to i8**
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %31) #9
  %32 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 16, i32 5
  %33 = bitcast %"class.blink::AudioArray"* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %34) #9
  %35 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 16, i32 1
  %36 = bitcast %"class.blink::AudioArray"* %35 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %37) #9
  %38 = getelementptr inbounds %"class.blink::AudioDelayDSPKernel", %"class.blink::AudioDelayDSPKernel"* %27, i64 0, i32 0
  tail call void @_ZN5blink14AudioDSPKernelD2Ev(%"class.blink::AudioDSPKernel"* %38) #9
  %39 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 15, i32 4
  %40 = bitcast %"class.blink::AudioArray"* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %41) #9
  %42 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 15, i32 3
  %43 = bitcast %"class.blink::AudioArray"* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %44) #9
  %45 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 15, i32 2
  %46 = bitcast %"class.blink::AudioArray"* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %47) #9
  %48 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 15, i32 0
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %48) #9
  %49 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 14, i32 4
  %50 = bitcast %"class.blink::AudioArray"* %49 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %51) #9
  %52 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 14, i32 3
  %53 = bitcast %"class.blink::AudioArray"* %52 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %54) #9
  %55 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 14, i32 2
  %56 = bitcast %"class.blink::AudioArray"* %55 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %57) #9
  %58 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 14, i32 0
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %58) #9
  %59 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 13, i32 4
  %60 = bitcast %"class.blink::AudioArray"* %59 to i8**
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %61) #9
  %62 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 13, i32 3
  %63 = bitcast %"class.blink::AudioArray"* %62 to i8**
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %64) #9
  %65 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 13, i32 2
  %66 = bitcast %"class.blink::AudioArray"* %65 to i8**
  %67 = load i8*, i8** %66, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %67) #9
  %68 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 13, i32 0
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %68) #9
  %69 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 12, i32 4
  %70 = bitcast %"class.blink::AudioArray"* %69 to i8**
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %71) #9
  %72 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 12, i32 3
  %73 = bitcast %"class.blink::AudioArray"* %72 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %74) #9
  %75 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 12, i32 2
  %76 = bitcast %"class.blink::AudioArray"* %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %77) #9
  %78 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 12, i32 0
  tail call void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"* %78) #9
  %79 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 1, i32 0
  %80 = load %"class.blink::HRTFDatabaseLoader"*, %"class.blink::HRTFDatabaseLoader"** %79, align 8
  %81 = icmp eq %"class.blink::HRTFDatabaseLoader"* %80, null
  br i1 %81, label %89, label %82

82:                                               ; preds = %1
  %83 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %80, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %83) #9
  %84 = getelementptr inbounds %"class.blink::HRTFDatabaseLoader", %"class.blink::HRTFDatabaseLoader"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  tail call void @_ZN5blink18HRTFDatabaseLoaderD1Ev(%"class.blink::HRTFDatabaseLoader"* nonnull %80) #9
  %88 = bitcast %"class.blink::HRTFDatabaseLoader"* %80 to i8*
  tail call void @free(i8* %88) #9
  br label %89

89:                                               ; preds = %1, %82, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10HRTFPannerD0Ev(%"class.blink::HRTFPanner"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink10HRTFPannerD2Ev(%"class.blink::HRTFPanner"* %0) #9
  %2 = bitcast %"class.blink::HRTFPanner"* %0 to i8*
  tail call void @free(i8* %2) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare double @log2(double) local_unnamed_addr #3

declare i32 @_ZN5blink8FFTFrame10MinFFTSizeEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10HRTFPanner5ResetEv(%"class.blink::HRTFPanner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 12
  tail call void @_ZN5blink12FFTConvolver5ResetEv(%"class.blink::FFTConvolver"* %2) #9
  %3 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 13
  tail call void @_ZN5blink12FFTConvolver5ResetEv(%"class.blink::FFTConvolver"* %3) #9
  %4 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 14
  tail call void @_ZN5blink12FFTConvolver5ResetEv(%"class.blink::FFTConvolver"* %4) #9
  %5 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 15
  tail call void @_ZN5blink12FFTConvolver5ResetEv(%"class.blink::FFTConvolver"* %5) #9
  %6 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 16
  tail call void @_ZN5blink19AudioDelayDSPKernel5ResetEv(%"class.blink::AudioDelayDSPKernel"* %6) #9
  %7 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 17
  tail call void @_ZN5blink19AudioDelayDSPKernel5ResetEv(%"class.blink::AudioDelayDSPKernel"* %7) #9
  ret void
}

declare void @_ZN5blink12FFTConvolver5ResetEv(%"class.blink::FFTConvolver"*) local_unnamed_addr #1

declare void @_ZN5blink19AudioDelayDSPKernel5ResetEv(%"class.blink::AudioDelayDSPKernel"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN5blink10HRTFPanner36CalculateDesiredAzimuthIndexAndBlendEdRd(%"class.blink::HRTFPanner"* nocapture readnone, double, double* nocapture dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %4 = fcmp olt double %1, 0.000000e+00
  %5 = fadd double %1, 3.600000e+02
  %6 = select i1 %4, double %5, double %1
  %7 = load i32, i32* @_ZN5blink13HRTFElevation22kNumberOfTotalAzimuthsE, align 4
  %8 = sitofp i32 %7 to double
  %9 = fdiv double 3.600000e+02, %8
  %10 = fdiv double %6, %9
  %11 = fptosi double %10 to i32
  %12 = sitofp i32 %11 to double
  %13 = fsub double %10, %12
  store double %13, double* %2, align 8
  %14 = add nsw i32 %7, -1
  %15 = icmp sgt i32 %14, %11
  %16 = icmp sgt i32 %11, 0
  %17 = select i1 %16, i32 %11, i32 0
  %18 = select i1 %15, i32 %17, i32 %14
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10HRTFPanner3PanEddPKNS_8AudioBusEPS1_jNS1_21ChannelInterpretationE(%"class.blink::HRTFPanner"*, double, double, %"class.blink::AudioBus"*, %"class.blink::AudioBus"*, i32, i32) unnamed_addr #0 align 2 {
  %8 = alloca %"class.blink::HRTFKernel"*, align 8
  %9 = alloca %"class.blink::HRTFKernel"*, align 8
  %10 = alloca %"class.blink::HRTFKernel"*, align 8
  %11 = alloca %"class.blink::HRTFKernel"*, align 8
  %12 = alloca double, align 8
  %13 = alloca double, align 8
  %14 = alloca double, align 8
  %15 = alloca double, align 8
  %16 = icmp eq %"class.blink::AudioBus"* %3, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %3, i64 0, i32 2, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %7, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %7 ]
  %22 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 1, i32 0
  %23 = load %"class.blink::HRTFDatabaseLoader"*, %"class.blink::HRTFDatabaseLoader"** %22, align 8
  %24 = tail call %"class.blink::HRTFDatabase"* @_ZN5blink18HRTFDatabaseLoader8DatabaseEv(%"class.blink::HRTFDatabaseLoader"* %23) #9
  %25 = icmp eq %"class.blink::HRTFDatabase"* %24, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %20
  tail call void @_ZN5blink8AudioBus8CopyFromERKS0_NS0_21ChannelInterpretationE(%"class.blink::AudioBus"* %4, %"class.blink::AudioBus"* dereferenceable(96) %3, i32 %6) #9
  br label %296

27:                                               ; preds = %20
  %28 = tail call %"class.blink::AudioChannel"* @_ZNK5blink8AudioBus13ChannelByTypeEj(%"class.blink::AudioBus"* %3, i32 0) #9
  %29 = icmp ugt i32 %21, 1
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = tail call %"class.blink::AudioChannel"* @_ZNK5blink8AudioBus13ChannelByTypeEj(%"class.blink::AudioBus"* %3, i32 1) #9
  br label %32

32:                                               ; preds = %27, %30
  %33 = phi %"class.blink::AudioChannel"* [ %31, %30 ], [ null, %27 ]
  %34 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %28, i64 0, i32 1
  %35 = load float*, float** %34, align 8
  %36 = icmp eq float* %35, null
  br i1 %36, label %37, label %42

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %28, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %39, i64 0, i32 1
  %41 = load float*, float** %40, align 8
  br label %42

42:                                               ; preds = %32, %37
  %43 = phi float* [ %41, %37 ], [ %35, %32 ]
  br i1 %29, label %44, label %53

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %33, i64 0, i32 1
  %46 = load float*, float** %45, align 8
  %47 = icmp eq float* %46, null
  br i1 %47, label %48, label %53

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %33, i64 0, i32 2, i32 0, i32 0, i32 0
  %50 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %50, i64 0, i32 1
  %52 = load float*, float** %51, align 8
  br label %53

53:                                               ; preds = %48, %44, %42
  %54 = phi float* [ %43, %42 ], [ %52, %48 ], [ %46, %44 ]
  %55 = tail call %"class.blink::AudioChannel"* @_ZN5blink8AudioBus13ChannelByTypeEj(%"class.blink::AudioBus"* %4, i32 0) #9
  %56 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %55, i64 0, i32 3
  store i8 0, i8* %56, align 8
  %57 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %55, i64 0, i32 1
  %58 = load float*, float** %57, align 8
  %59 = icmp eq float* %58, null
  br i1 %59, label %60, label %65

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %55, i64 0, i32 2, i32 0, i32 0, i32 0
  %62 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %62, i64 0, i32 1
  %64 = load float*, float** %63, align 8
  br label %65

65:                                               ; preds = %53, %60
  %66 = phi float* [ %64, %60 ], [ %58, %53 ]
  %67 = tail call %"class.blink::AudioChannel"* @_ZN5blink8AudioBus13ChannelByTypeEj(%"class.blink::AudioBus"* %4, i32 1) #9
  %68 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %67, i64 0, i32 3
  store i8 0, i8* %68, align 8
  %69 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %67, i64 0, i32 1
  %70 = load float*, float** %69, align 8
  %71 = icmp eq float* %70, null
  br i1 %71, label %72, label %77

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %67, i64 0, i32 2, i32 0, i32 0, i32 0
  %74 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %74, i64 0, i32 1
  %76 = load float*, float** %75, align 8
  br label %77

77:                                               ; preds = %65, %72
  %78 = phi float* [ %76, %72 ], [ %70, %65 ]
  %79 = fcmp ogt double %1, 0.000000e+00
  %80 = select i1 %79, double 3.600000e+02, double -0.000000e+00
  %81 = fsub double %80, %1
  %82 = load i32, i32* @_ZN5blink13HRTFElevation22kNumberOfTotalAzimuthsE, align 4
  %83 = sitofp i32 %82 to double
  %84 = fdiv double 3.600000e+02, %83
  %85 = fdiv double %81, %84
  %86 = fptosi double %85 to i32
  %87 = sitofp i32 %86 to double
  %88 = fsub double %85, %87
  %89 = add nsw i32 %82, -1
  %90 = icmp sgt i32 %89, %86
  %91 = icmp sgt i32 %86, 0
  %92 = select i1 %91, i32 %86, i32 0
  %93 = select i1 %90, i32 %92, i32 %89
  %94 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 4
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, -1
  br i1 %96, label %97, label %99

97:                                               ; preds = %77
  store i32 %93, i32* %94, align 8
  %98 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 6
  store double %2, double* %98, align 8
  br label %99

99:                                               ; preds = %97, %77
  %100 = phi i32 [ %93, %97 ], [ %95, %77 ]
  %101 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 7
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %102, -1
  br i1 %103, label %104, label %106

104:                                              ; preds = %99
  store i32 %93, i32* %101, align 8
  %105 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 9
  store double %2, double* %105, align 8
  br label %106

106:                                              ; preds = %104, %99
  %107 = phi i32 [ %93, %104 ], [ %102, %99 ]
  %108 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 2
  %109 = load float, float* %108, align 8
  %110 = fcmp ole float %109, 4.800000e+04
  %111 = select i1 %110, double 2.048000e+03, double 4.096000e+03
  %112 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 10
  %113 = load float, float* %112, align 8
  %114 = fcmp une float %113, 0.000000e+00
  br i1 %114, label %130, label %115

115:                                              ; preds = %106
  %116 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 3
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %130

119:                                              ; preds = %115
  %120 = icmp eq i32 %93, %100
  br i1 %120, label %121, label %125

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 6
  %123 = load double, double* %122, align 8
  %124 = fcmp une double %123, %2
  br i1 %124, label %125, label %130

125:                                              ; preds = %119, %121
  %126 = fdiv double 1.000000e+00, %111
  %127 = fptrunc double %126 to float
  %128 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 11
  store float %127, float* %128, align 4
  store i32 %93, i32* %101, align 8
  %129 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 9
  store double %2, double* %129, align 8
  br label %130

130:                                              ; preds = %121, %125, %115, %106
  %131 = phi i32 [ %107, %121 ], [ %93, %125 ], [ %107, %115 ], [ %107, %106 ]
  %132 = fcmp oeq float %113, 1.000000e+00
  br i1 %132, label %133, label %148

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 3
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %148

137:                                              ; preds = %133
  %138 = icmp eq i32 %93, %131
  br i1 %138, label %139, label %143

139:                                              ; preds = %137
  %140 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 9
  %141 = load double, double* %140, align 8
  %142 = fcmp une double %141, %2
  br i1 %142, label %143, label %148

143:                                              ; preds = %137, %139
  %144 = fdiv double -1.000000e+00, %111
  %145 = fptrunc double %144 to float
  %146 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 11
  store float %145, float* %146, align 4
  store i32 %93, i32* %94, align 8
  %147 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 6
  store double %2, double* %147, align 8
  br label %148

148:                                              ; preds = %139, %143, %133, %130
  %149 = phi i32 [ %100, %139 ], [ %93, %143 ], [ %100, %133 ], [ %100, %130 ]
  %150 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 22
  %151 = load i32, i32* %150, align 8
  %152 = icmp ugt i32 %151, %5
  br i1 %152, label %296, label %153

153:                                              ; preds = %148
  %154 = udiv i32 %5, %151
  %155 = bitcast %"class.blink::HRTFKernel"** %8 to i8*
  %156 = bitcast %"class.blink::HRTFKernel"** %9 to i8*
  %157 = bitcast %"class.blink::HRTFKernel"** %10 to i8*
  %158 = bitcast %"class.blink::HRTFKernel"** %11 to i8*
  %159 = bitcast double* %12 to i8*
  %160 = bitcast double* %13 to i8*
  %161 = bitcast double* %14 to i8*
  %162 = bitcast double* %15 to i8*
  %163 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 6
  %164 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 9
  %165 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 16
  %166 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 16, i32 4
  %167 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 17
  %168 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 17, i32 4
  %169 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 11
  %170 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 3
  %171 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 18, i32 1
  %172 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 19, i32 1
  %173 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 20, i32 1
  %174 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 21, i32 1
  %175 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 12
  %176 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 13
  %177 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 14
  %178 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 15
  %179 = icmp eq i32 %151, 0
  %180 = zext i32 %154 to i64
  %181 = zext i32 %151 to i64
  br label %182

182:                                              ; preds = %294, %153
  %183 = phi i32 [ %149, %153 ], [ %295, %294 ]
  %184 = phi i64 [ 0, %153 ], [ %292, %294 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #9
  store %"class.blink::HRTFKernel"* inttoptr (i64 -6148914691236517206 to %"class.blink::HRTFKernel"*), %"class.blink::HRTFKernel"** %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156) #9
  store %"class.blink::HRTFKernel"* inttoptr (i64 -6148914691236517206 to %"class.blink::HRTFKernel"*), %"class.blink::HRTFKernel"** %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #9
  store %"class.blink::HRTFKernel"* inttoptr (i64 -6148914691236517206 to %"class.blink::HRTFKernel"*), %"class.blink::HRTFKernel"** %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #9
  store %"class.blink::HRTFKernel"* inttoptr (i64 -6148914691236517206 to %"class.blink::HRTFKernel"*), %"class.blink::HRTFKernel"** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %159) #9
  store double 0xFFFFFFFFFFFFFFFF, double* %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #9
  store double 0xFFFFFFFFFFFFFFFF, double* %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #9
  store double 0xFFFFFFFFFFFFFFFF, double* %14, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #9
  store double 0xFFFFFFFFFFFFFFFF, double* %15, align 8
  %185 = load double, double* %163, align 8
  call void @_ZN5blink12HRTFDatabase30GetKernelsFromAzimuthElevationEdjdRPNS_10HRTFKernelES3_RdS4_(%"class.blink::HRTFDatabase"* nonnull %24, double %88, i32 %183, double %185, %"class.blink::HRTFKernel"** nonnull dereferenceable(8) %8, %"class.blink::HRTFKernel"** nonnull dereferenceable(8) %9, double* nonnull dereferenceable(8) %12, double* nonnull dereferenceable(8) %13) #9
  %186 = load i32, i32* %101, align 8
  %187 = load double, double* %164, align 8
  call void @_ZN5blink12HRTFDatabase30GetKernelsFromAzimuthElevationEdjdRPNS_10HRTFKernelES3_RdS4_(%"class.blink::HRTFDatabase"* nonnull %24, double %88, i32 %186, double %187, %"class.blink::HRTFKernel"** nonnull dereferenceable(8) %10, %"class.blink::HRTFKernel"** nonnull dereferenceable(8) %11, double* nonnull dereferenceable(8) %14, double* nonnull dereferenceable(8) %15) #9
  %188 = load float, float* %112, align 8
  %189 = fsub float 1.000000e+00, %188
  %190 = fpext float %189 to double
  %191 = load double, double* %12, align 8
  %192 = fmul double %191, %190
  %193 = fpext float %188 to double
  %194 = load double, double* %14, align 8
  %195 = fmul double %194, %193
  %196 = fadd double %192, %195
  %197 = load double, double* %13, align 8
  %198 = fmul double %197, %190
  %199 = load double, double* %15, align 8
  %200 = fmul double %199, %193
  %201 = fadd double %198, %200
  %202 = trunc i64 %184 to i32
  %203 = mul i32 %151, %202
  %204 = zext i32 %203 to i64
  %205 = getelementptr inbounds float, float* %43, i64 %204
  %206 = getelementptr inbounds float, float* %54, i64 %204
  %207 = getelementptr inbounds float, float* %66, i64 %204
  %208 = getelementptr inbounds float, float* %78, i64 %204
  store double %196, double* %166, align 8
  store double %201, double* %168, align 8
  call void @_ZN5blink19AudioDelayDSPKernel7ProcessEPKfPfj(%"class.blink::AudioDelayDSPKernel"* %165, float* %205, float* %207, i32 %151) #9
  call void @_ZN5blink19AudioDelayDSPKernel7ProcessEPKfPfj(%"class.blink::AudioDelayDSPKernel"* %167, float* %206, float* %208, i32 %151) #9
  %209 = load float, float* %169, align 4
  %210 = fcmp une float %209, 0.000000e+00
  br i1 %210, label %211, label %216

211:                                              ; preds = %182
  %212 = load float*, float** %171, align 8
  %213 = load float*, float** %172, align 8
  %214 = load float*, float** %173, align 8
  %215 = load float*, float** %174, align 8
  br label %219

216:                                              ; preds = %182
  %217 = load i32, i32* %170, align 4
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %231

219:                                              ; preds = %211, %216
  %220 = phi float* [ %215, %211 ], [ %208, %216 ]
  %221 = phi float* [ %213, %211 ], [ %208, %216 ]
  %222 = phi float* [ %212, %211 ], [ %207, %216 ]
  %223 = phi float* [ %214, %211 ], [ %207, %216 ]
  %224 = load %"class.blink::HRTFKernel"*, %"class.blink::HRTFKernel"** %8, align 8
  %225 = getelementptr inbounds %"class.blink::HRTFKernel", %"class.blink::HRTFKernel"* %224, i64 0, i32 0, i32 0, i32 0, i32 0
  %226 = load %"class.blink::FFTFrame"*, %"class.blink::FFTFrame"** %225, align 8
  call void @_ZN5blink12FFTConvolver7ProcessEPKNS_8FFTFrameEPKfPfj(%"class.blink::FFTConvolver"* %175, %"class.blink::FFTFrame"* %226, float* %207, float* %222, i32 %151) #9
  %227 = load %"class.blink::HRTFKernel"*, %"class.blink::HRTFKernel"** %9, align 8
  %228 = getelementptr inbounds %"class.blink::HRTFKernel", %"class.blink::HRTFKernel"* %227, i64 0, i32 0, i32 0, i32 0, i32 0
  %229 = load %"class.blink::FFTFrame"*, %"class.blink::FFTFrame"** %228, align 8
  call void @_ZN5blink12FFTConvolver7ProcessEPKNS_8FFTFrameEPKfPfj(%"class.blink::FFTConvolver"* %176, %"class.blink::FFTFrame"* %229, float* %208, float* %221, i32 %151) #9
  %230 = load i32, i32* %170, align 4
  br label %231

231:                                              ; preds = %216, %219
  %232 = phi i32 [ %217, %216 ], [ %230, %219 ]
  %233 = phi float* [ %208, %216 ], [ %220, %219 ]
  %234 = phi float* [ %207, %216 ], [ %223, %219 ]
  %235 = phi float* [ %208, %216 ], [ %221, %219 ]
  %236 = phi float* [ %207, %216 ], [ %222, %219 ]
  %237 = icmp eq i32 %232, 1
  %238 = or i1 %210, %237
  br i1 %238, label %239, label %246

239:                                              ; preds = %231
  %240 = load %"class.blink::HRTFKernel"*, %"class.blink::HRTFKernel"** %10, align 8
  %241 = getelementptr inbounds %"class.blink::HRTFKernel", %"class.blink::HRTFKernel"* %240, i64 0, i32 0, i32 0, i32 0, i32 0
  %242 = load %"class.blink::FFTFrame"*, %"class.blink::FFTFrame"** %241, align 8
  call void @_ZN5blink12FFTConvolver7ProcessEPKNS_8FFTFrameEPKfPfj(%"class.blink::FFTConvolver"* %177, %"class.blink::FFTFrame"* %242, float* %207, float* %234, i32 %151) #9
  %243 = load %"class.blink::HRTFKernel"*, %"class.blink::HRTFKernel"** %11, align 8
  %244 = getelementptr inbounds %"class.blink::HRTFKernel", %"class.blink::HRTFKernel"* %243, i64 0, i32 0, i32 0, i32 0, i32 0
  %245 = load %"class.blink::FFTFrame"*, %"class.blink::FFTFrame"** %244, align 8
  call void @_ZN5blink12FFTConvolver7ProcessEPKNS_8FFTFrameEPKfPfj(%"class.blink::FFTConvolver"* %178, %"class.blink::FFTFrame"* %245, float* %208, float* %233, i32 %151) #9
  br label %246

246:                                              ; preds = %231, %239
  br i1 %210, label %247, label %291

247:                                              ; preds = %246
  %248 = load float, float* %112, align 8
  %249 = load float, float* %169, align 4
  br i1 %179, label %252, label %256

250:                                              ; preds = %256
  %251 = load float, float* %169, align 4
  br label %252

252:                                              ; preds = %250, %247
  %253 = phi float [ %249, %247 ], [ %251, %250 ]
  %254 = phi float [ %248, %247 ], [ %276, %250 ]
  store float %254, float* %112, align 8
  %255 = fcmp ogt float %253, 0.000000e+00
  br i1 %255, label %279, label %284

256:                                              ; preds = %247, %256
  %257 = phi i64 [ %277, %256 ], [ 0, %247 ]
  %258 = phi float [ %276, %256 ], [ %248, %247 ]
  %259 = fsub float 1.000000e+00, %258
  %260 = getelementptr inbounds float, float* %236, i64 %257
  %261 = load float, float* %260, align 4
  %262 = fmul float %259, %261
  %263 = getelementptr inbounds float, float* %234, i64 %257
  %264 = load float, float* %263, align 4
  %265 = fmul float %258, %264
  %266 = fadd float %262, %265
  %267 = getelementptr inbounds float, float* %207, i64 %257
  store float %266, float* %267, align 4
  %268 = getelementptr inbounds float, float* %235, i64 %257
  %269 = load float, float* %268, align 4
  %270 = fmul float %259, %269
  %271 = getelementptr inbounds float, float* %233, i64 %257
  %272 = load float, float* %271, align 4
  %273 = fmul float %258, %272
  %274 = fadd float %270, %273
  %275 = getelementptr inbounds float, float* %208, i64 %257
  store float %274, float* %275, align 4
  %276 = fadd float %249, %258
  %277 = add nuw nsw i64 %257, 1
  %278 = icmp eq i64 %277, %181
  br i1 %278, label %250, label %256

279:                                              ; preds = %252
  %280 = fadd float %254, -1.000000e+00
  %281 = call float @llvm.fabs.f32(float %280) #9
  %282 = fcmp olt float %281, %253
  br i1 %282, label %283, label %284

283:                                              ; preds = %279
  store i32 1, i32* %170, align 4
  store float 1.000000e+00, float* %112, align 8
  store float 0.000000e+00, float* %169, align 4
  br label %291

284:                                              ; preds = %279, %252
  %285 = fcmp olt float %253, 0.000000e+00
  br i1 %285, label %286, label %291

286:                                              ; preds = %284
  %287 = call float @llvm.fabs.f32(float %254) #9
  %288 = fsub float -0.000000e+00, %253
  %289 = fcmp olt float %287, %288
  br i1 %289, label %290, label %291

290:                                              ; preds = %286
  store i32 0, i32* %170, align 4
  store float 0.000000e+00, float* %112, align 8
  store float 0.000000e+00, float* %169, align 4
  br label %291

291:                                              ; preds = %283, %290, %286, %284, %246
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %159) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #9
  %292 = add nuw nsw i64 %184, 1
  %293 = icmp ult i64 %292, %180
  br i1 %293, label %294, label %296

294:                                              ; preds = %291
  %295 = load i32, i32* %94, align 8
  br label %182

296:                                              ; preds = %291, %148, %26
  ret void
}

declare %"class.blink::HRTFDatabase"* @_ZN5blink18HRTFDatabaseLoader8DatabaseEv(%"class.blink::HRTFDatabaseLoader"*) local_unnamed_addr #1

declare void @_ZN5blink8AudioBus8CopyFromERKS0_NS0_21ChannelInterpretationE(%"class.blink::AudioBus"*, %"class.blink::AudioBus"* dereferenceable(96), i32) local_unnamed_addr #1

declare %"class.blink::AudioChannel"* @_ZNK5blink8AudioBus13ChannelByTypeEj(%"class.blink::AudioBus"*, i32) local_unnamed_addr #1

declare %"class.blink::AudioChannel"* @_ZN5blink8AudioBus13ChannelByTypeEj(%"class.blink::AudioBus"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12HRTFDatabase30GetKernelsFromAzimuthElevationEdjdRPNS_10HRTFKernelES3_RdS4_(%"class.blink::HRTFDatabase"*, double, i32, double, %"class.blink::HRTFKernel"** dereferenceable(8), %"class.blink::HRTFKernel"** dereferenceable(8), double* dereferenceable(8), double* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink19AudioDelayDSPKernel7ProcessEPKfPfj(%"class.blink::AudioDelayDSPKernel"*, float*, float*, i32) unnamed_addr #1

declare void @_ZN5blink12FFTConvolver7ProcessEPKNS_8FFTFrameEPKfPfj(%"class.blink::FFTConvolver"*, %"class.blink::FFTFrame"*, float*, float*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10HRTFPanner27PanWithSampleAccurateValuesEPdS1_PKNS_8AudioBusEPS2_jNS2_21ChannelInterpretationE(%"class.blink::HRTFPanner"*, double* nocapture readonly, double* nocapture readonly, %"class.blink::AudioBus"*, %"class.blink::AudioBus"*, i32, i32) unnamed_addr #0 align 2 {
  %8 = load double, double* %1, align 8
  %9 = load double, double* %2, align 8
  tail call void @_ZN5blink10HRTFPanner3PanEddPKNS_8AudioBusEPS1_jNS1_21ChannelInterpretationE(%"class.blink::HRTFPanner"* %0, double %8, double %9, %"class.blink::AudioBus"* %3, %"class.blink::AudioBus"* %4, i32 %5, i32 %6)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink10HRTFPanner22RequiresTailProcessingEv(%"class.blink::HRTFPanner"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink10HRTFPanner8TailTimeEv(%"class.blink::HRTFPanner"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 2
  %3 = load float, float* %2, align 8
  %4 = fdiv float %3, 4.410000e+04
  %5 = fpext float %4 to double
  %6 = fmul double %5, 2.560000e+02
  %7 = tail call double @log2(double %6) #9
  %8 = fptoui double %7 to i32
  %9 = shl i32 1, %8
  %10 = tail call i32 @_ZN5blink8FFTFrame10MinFFTSizeEv() #9
  %11 = icmp slt i32 %9, %10
  %12 = select i1 %11, i32 %10, i32 %9
  %13 = shl nsw i32 %12, 1
  %14 = sext i32 %13 to i64
  %15 = lshr exact i64 %14, 1
  %16 = uitofp i64 %15 to double
  %17 = load float, float* %2, align 8
  %18 = fpext float %17 to double
  %19 = fdiv double %16, %18
  %20 = fadd double %19, 2.000000e-03
  ret double %20
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink10HRTFPanner11LatencyTimeEv(%"class.blink::HRTFPanner"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HRTFPanner", %"class.blink::HRTFPanner"* %0, i64 0, i32 2
  %3 = load float, float* %2, align 8
  %4 = fdiv float %3, 4.410000e+04
  %5 = fpext float %4 to double
  %6 = fmul double %5, 2.560000e+02
  %7 = tail call double @log2(double %6) #9
  %8 = fptoui double %7 to i32
  %9 = shl i32 1, %8
  %10 = tail call i32 @_ZN5blink8FFTFrame10MinFFTSizeEv() #9
  %11 = icmp slt i32 %9, %10
  %12 = select i1 %11, i32 %10, i32 %9
  %13 = shl nsw i32 %12, 1
  %14 = sext i32 %13 to i64
  %15 = lshr exact i64 %14, 1
  %16 = uitofp i64 %15 to double
  %17 = load float, float* %2, align 8
  %18 = fpext float %17 to double
  %19 = fdiv double %16, %18
  ret double %19
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind
declare void @_ZN5blink14AudioDSPKernelD2Ev(%"class.blink::AudioDSPKernel"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink8FFTFrameD1Ev(%"class.blink::FFTFrame"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #8

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10AudioArrayIfE8AllocateEm(%"class.blink::AudioArray"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = icmp ugt i64 %1, 1073741823
  br i1 %10, label %12, label %11

11:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %8, align 8
  br label %21

12:                                               ; preds = %2
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #9
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1073741823) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i8* %13, i8* %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %16, i8** %8, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 63, %"class.logging::CheckOpResult"* nonnull %4) #9
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  %22 = trunc i64 %1 to i32
  %23 = shl i32 %22, 2
  %24 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 0
  %25 = load float*, float** %24, align 8
  %26 = icmp eq float* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %21
  %28 = bitcast float* %25 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %28) #9
  br label %29

29:                                               ; preds = %21, %27
  %30 = call { i32, i1 } @llvm.uadd.with.overflow.i32(i32 %23, i32 32) #9
  %31 = extractvalue { i32, i1 } %30, 1
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %29
  call void @llvm.trap() #9
  unreachable

33:                                               ; preds = %29
  %34 = extractvalue { i32, i1 } %30, 0
  %35 = zext i32 %34 to i64
  %36 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 %35, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10AudioArrayIfEEEEPKcv, i64 0, i64 0)) #9
  %37 = bitcast %"class.blink::AudioArray"* %0 to i8**
  store i8* %36, i8** %37, align 8
  %38 = icmp eq i8* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = ptrtoint i8* %36 to i64
  br label %46

41:                                               ; preds = %33
  %42 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0)) #9
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #9
  %44 = bitcast %"class.blink::AudioArray"* %0 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %39, %41
  %47 = phi i64 [ %40, %39 ], [ %45, %41 ]
  %48 = add i64 %47, 31
  %49 = and i64 %48, -32
  %50 = inttoptr i64 %49 to float*
  %51 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 1
  store float* %50, float** %51, align 8
  %52 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %0, i64 0, i32 2
  store i32 %22, i32* %52, align 8
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.uadd.with.overflow.i32(i32, i32) #8

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink18HRTFDatabaseLoaderD1Ev(%"class.blink::HRTFDatabaseLoader"*) unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
