; ModuleID = '../../third_party/skia/src/core/SkAutoPixmapStorage.cpp'
source_filename = "../../third_party/skia/src/core/SkAutoPixmapStorage.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkAutoPixmapStorage = type { %class.SkPixmap, i8* }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.6 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.7, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.7 = type { %"struct.std::__1::atomic" }

@.str = private unnamed_addr constant [56 x i8] c"../../third_party/skia/src/core/SkAutoPixmapStorage.cpp\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"this->tryAlloc(info)\00", align 1

@_ZN19SkAutoPixmapStorageC1Ev = hidden unnamed_addr alias void (%class.SkAutoPixmapStorage*), void (%class.SkAutoPixmapStorage*)* @_ZN19SkAutoPixmapStorageC2Ev
@_ZN19SkAutoPixmapStorageD1Ev = hidden unnamed_addr alias void (%class.SkAutoPixmapStorage*), void (%class.SkAutoPixmapStorage*)* @_ZN19SkAutoPixmapStorageD2Ev
@_ZN19SkAutoPixmapStorageC1EOS_ = hidden unnamed_addr alias void (%class.SkAutoPixmapStorage*, %class.SkAutoPixmapStorage*), void (%class.SkAutoPixmapStorage*, %class.SkAutoPixmapStorage*)* @_ZN19SkAutoPixmapStorageC2EOS_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkAutoPixmapStorageC2Ev(%class.SkAutoPixmapStorage* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkAutoPixmapStorage* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkAutoPixmapStorageD2Ev(%class.SkAutoPixmapStorage* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  tail call void @_Z7sk_freePv(i8* %3) #6
  store i8* null, i8** %2, align 8
  %4 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %class.SkColorSpace*, %class.SkColorSpace** %4, align 8
  %6 = icmp eq %class.SkColorSpace* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = bitcast %class.SkColorSpace* %5 to i8*
  tail call void @_ZdlPv(i8* %12) #7
  br label %13

13:                                               ; preds = %1, %7, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkAutoPixmapStorageC2EOS_(%class.SkAutoPixmapStorage*, %class.SkAutoPixmapStorage* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to i64*
  %7 = bitcast %class.SkAutoPixmapStorage* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 48, i1 false)
  %8 = load i64, i64* %6, align 8
  %9 = bitcast i8** %4 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %1, i64 0, i32 0
  %11 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %1, i64 0, i32 0, i32 2
  %12 = inttoptr i64 %8 to i8*
  %13 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %1, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  tail call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %3, %struct.SkImageInfo* dereferenceable(24) %11, i8* %12, i64 %14) #6
  store i8* null, i8** %5, align 8
  tail call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %10) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %class.SkAutoPixmapStorage* @_ZN19SkAutoPixmapStorageaSEOS_(%class.SkAutoPixmapStorage* returned, %class.SkAutoPixmapStorage* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %1, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %0, i64 0, i32 1
  %7 = bitcast i8** %6 to i64*
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %0, i64 0, i32 0
  %9 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %1, i64 0, i32 0
  %10 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %1, i64 0, i32 0, i32 2
  %11 = inttoptr i64 %5 to i8*
  %12 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %1, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  tail call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %8, %struct.SkImageInfo* dereferenceable(24) %10, i8* %11, i64 %13) #6
  store i8* null, i8** %3, align 8
  tail call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %9) #6
  ret %class.SkAutoPixmapStorage* %0
}

declare void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64) local_unnamed_addr #1

declare void @_ZN8SkPixmap5resetEv(%class.SkPixmap*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN19SkAutoPixmapStorage9AllocSizeERK11SkImageInfoPm(%struct.SkImageInfo* dereferenceable(24), i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0
  %7 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %6) #6
  %8 = sext i32 %7 to i64
  %9 = mul nsw i64 %8, %5
  %10 = icmp ult i64 %9, 2147483648
  %11 = select i1 %10, i64 %9, i64 0
  %12 = icmp eq i64* %1, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  store i64 %11, i64* %1, align 8
  br label %14

14:                                               ; preds = %2, %13
  %15 = tail call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %0, i64 %11) #6
  ret i64 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19SkAutoPixmapStorage8tryAllocERK11SkImageInfo(%class.SkAutoPixmapStorage*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  tail call void @_Z7sk_freePv(i8* %4) #6
  store i8* null, i8** %3, align 8
  %5 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %9 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %8) #6
  %10 = sext i32 %9 to i64
  %11 = mul nsw i64 %10, %7
  %12 = icmp ult i64 %11, 2147483648
  %13 = select i1 %12, i64 %11, i64 0
  %14 = tail call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %1, i64 %13) #6
  %15 = icmp eq i64 %14, -1
  br i1 %15, label %22, label %16

16:                                               ; preds = %2
  %17 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %14, i32 0) #6
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = load i8*, i8** %3, align 8
  tail call void @_Z7sk_freePv(i8* %20) #6
  store i8* null, i8** %3, align 8
  %21 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %0, i64 0, i32 0
  tail call void @_ZN8SkPixmap5resetERK11SkImageInfoPKvm(%class.SkPixmap* %21, %struct.SkImageInfo* dereferenceable(24) %1, i8* nonnull %17, i64 %13) #6
  store i8* %17, i8** %3, align 8
  br label %22

22:                                               ; preds = %19, %16, %2
  %23 = phi i1 [ false, %2 ], [ true, %19 ], [ false, %16 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkAutoPixmapStorage5allocERK11SkImageInfo(%class.SkAutoPixmapStorage*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN19SkAutoPixmapStorage8tryAllocERK11SkImageInfo(%class.SkAutoPixmapStorage* %0, %struct.SkImageInfo* dereferenceable(24) %1)
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call fastcc void @"_ZZN19SkAutoPixmapStorage5allocERK11SkImageInfoENK3$_0clEv"()
  unreachable

5:                                                ; preds = %2
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @"_ZZN19SkAutoPixmapStorage5allocERK11SkImageInfoENK3$_0clEv"() unnamed_addr #3 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 57, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0)) #8
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN19SkAutoPixmapStorage12detachPixelsEv(%class.SkAutoPixmapStorage*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  store i8* null, i8** %2, align 8
  %6 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %0, i64 0, i32 0
  tail call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %6) #6
  br label %7

7:                                                ; preds = %1, %5
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkAutoPixmapStorage18detachPixelsAsDataEv(%class.sk_sp.6* noalias nocapture sret, %class.SkAutoPixmapStorage*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.6, align 8
  %4 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %1, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %8, align 8
  br label %20

9:                                                ; preds = %2
  %10 = bitcast %class.sk_sp.6* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6
  %11 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %3, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %11, align 8
  %12 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %1, i64 0, i32 0
  %13 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %1, i64 0, i32 0, i32 2
  %14 = getelementptr inbounds %class.SkAutoPixmapStorage, %class.SkAutoPixmapStorage* %1, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %13, i64 %15) #6
  call void @_ZN6SkData14MakeFromMallocEPKvm(%class.sk_sp.6* nonnull sret %3, i8* nonnull %5, i64 %16) #6
  store i8* null, i8** %4, align 8
  call void @_ZN8SkPixmap5resetEv(%class.SkPixmap* %12) #6
  %17 = bitcast %class.sk_sp.6* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %class.sk_sp.6* %0 to i64*
  store i64 %18, i64* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6
  br label %20

20:                                               ; preds = %9, %7
  ret void
}

declare void @_ZN6SkData14MakeFromMallocEPKvm(%class.sk_sp.6* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #1

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
