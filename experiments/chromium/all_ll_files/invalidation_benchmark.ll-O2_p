; ModuleID = '../../cc/benchmarks/invalidation_benchmark.cc'
source_filename = "../../cc/benchmarks/invalidation_benchmark.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.cc::InvalidationBenchmark" = type { %"class.cc::MicroBenchmark", i32, i32, i32, i32 }
%"class.cc::MicroBenchmark" = type { i32 (...)**, %"class.base::OnceCallback", i8, i8, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"union.absl::variant_internal::DestructibleUnionImpl.5" }
%"union.absl::variant_internal::DestructibleUnionImpl.5" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr", %class.scoped_refptr.48, %"class.std::__1::unique_ptr.49", i32, %"class.std::__1::unique_ptr.55", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", i32, %"class.std::__1::unique_ptr.73", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.95", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr.110, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.188", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr.332, %"class.base::flat_map.333", %"class.base::internal::flat_tree.343", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.374", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.400", %"class.std::__1::unordered_map.408", %"class.std::__1::vector.432", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.441", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.462", %"class.std::__1::vector.468", %"class.base::flat_map.476", %"class.base::WeakPtrFactory.486" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector.31", %class.scoped_refptr.39 }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.33"*, %"class.std::__1::unique_ptr.33"*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::unique_ptr.33" = type opaque
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::unique_ptr.33"* }
%class.scoped_refptr.39 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.40" }>
%"class.base::RefCountedThreadSafe.40" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.41 }
%class.scoped_refptr.41 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.42", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.42" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.43" }
%"struct.std::__1::atomic.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl.46" }
%"struct.std::__1::__cxx_atomic_impl.46" = type { %"struct.std::__1::__cxx_atomic_base_impl.47" }
%"struct.std::__1::__cxx_atomic_base_impl.47" = type { i8 }
%class.scoped_refptr.48 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type opaque
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.cc::TaskRunnerProvider"* }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.39, %class.scoped_refptr.39 }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::RenderingStatsInstrumentation" = type opaque
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.79", %"class.std::__1::set" }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"class.std::__1::unique_ptr.81"*, %"class.std::__1::unique_ptr.81"*, %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.std::__1::unique_ptr.81"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64 }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.98, %class.scoped_refptr.99, %class.scoped_refptr.39, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.100", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr.98 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.99 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.106 }
%class.scoped_refptr.106 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.base::TimeDelta" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::TaskGraphRunner" = type opaque
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%class.scoped_refptr.110 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.128", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.163" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.111", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.111" = type { %"class.std::__1::__vector_base.112" }
%"class.std::__1::__vector_base.112" = type { %class.scoped_refptr.110*, %class.scoped_refptr.110*, %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %class.scoped_refptr.110* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.118" }
%"class.base::flat_map.118" = type { %"class.base::internal::flat_tree.119" }
%"class.base::internal::flat_tree.119" = type { %"class.std::__1::vector.120" }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"struct.std::__1::pair.122"*, %"struct.std::__1::pair.122"*, %"class.std::__1::__compressed_pair.123" }
%"struct.std::__1::pair.122" = type opaque
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::pair.122"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.147", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.152" }
%"class.cc::PictureLayer" = type <{ %"class.cc::Layer", %"struct.cc::PictureLayer::PictureLayerInputs", %"class.std::__1::unique_ptr.493", %"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker", %"class.cc::Region", i32, [4 x i8] }>
%"struct.cc::PictureLayer::PictureLayerInputs" = type <{ %"class.cc::ContentLayerClient"*, i8, i8, [6 x i8], %class.scoped_refptr.487, %"class.absl::optional.488", [4 x i8] }>
%"class.cc::ContentLayerClient" = type opaque
%class.scoped_refptr.487 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.488" = type { %"class.absl::optional_internal::optional_data.489" }
%"class.absl::optional_internal::optional_data.489" = type { %"class.absl::optional_internal::optional_data_base.490" }
%"class.absl::optional_internal::optional_data_base.490" = type { %"class.absl::optional_internal::optional_data_dtor_base.491" }
%"class.absl::optional_internal::optional_data_dtor_base.491" = type { i8, %union.anon.492 }
%union.anon.492 = type { %"class.gfx::Size" }
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.cc::RecordingSource"* }
%"class.cc::RecordingSource" = type opaque
%"struct.cc::devtools_instrumentation::ScopedLayerObjectTracker" = type { %"class.base::trace_event::TraceScopedTrackableObject.base", [4 x i8] }
%"class.base::trace_event::TraceScopedTrackableObject.base" = type <{ i8*, i32 }>
%"class.gfx::PointF" = type { float, float }
%"class.gfx::Point3F" = type { float, float, float }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.131" }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.142" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.135", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.133, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.133 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.134 }
%union.anon.134 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.135" = type { %"class.std::__1::__vector_base.136" }
%"class.std::__1::__vector_base.136" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.147" = type { %"class.absl::optional_internal::optional_data.148" }
%"class.absl::optional_internal::optional_data.148" = type { %"class.absl::optional_internal::optional_data_base.149" }
%"class.absl::optional_internal::optional_data_base.149" = type { %"class.absl::optional_internal::optional_data_dtor_base.150" }
%"class.absl::optional_internal::optional_data_dtor_base.150" = type { i8, %union.anon.151 }
%union.anon.151 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.152" = type { %"class.std::__1::__vector_base.153" }
%"class.std::__1::__vector_base.153" = type { %"class.std::__1::unique_ptr.154"*, %"class.std::__1::unique_ptr.154"*, %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::unique_ptr.154" = type opaque
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.std::__1::unique_ptr.154"* }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.166", %"class.std::__1::vector.166", %"class.std::__1::vector.173" }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { i8**, i8**, %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { i8** }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.175" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.183" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.183" = type { %"class.absl::optional_internal::optional_data.184" }
%"class.absl::optional_internal::optional_data.184" = type { %"class.absl::optional_internal::optional_data_base.185" }
%"class.absl::optional_internal::optional_data_base.185" = type { %"class.absl::optional_internal::optional_data_dtor_base.186" }
%"class.absl::optional_internal::optional_data_dtor_base.186" = type { i8, %union.anon.187 }
%union.anon.187 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.194", %"class.base::flat_map.194", %"class.base::flat_map.194", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.194" = type { %"class.base::internal::flat_tree.195" }
%"class.base::internal::flat_tree.195" = type { %"class.std::__1::vector.196" }
%"class.std::__1::vector.196" = type { %"class.std::__1::__vector_base.197" }
%"class.std::__1::__vector_base.197" = type { %"struct.std::__1::pair.198"*, %"struct.std::__1::pair.198"*, %"class.std::__1::__compressed_pair.199" }
%"struct.std::__1::pair.198" = type opaque
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"struct.std::__1::pair.198"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.211", %"class.std::__1::vector.218", %"class.std::__1::vector.225" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.204", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.204" = type { %"class.std::__1::__vector_base.205" }
%"class.std::__1::__vector_base.205" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.206" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { i32*, i32*, %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { i32* }
%"class.std::__1::vector.218" = type { %"class.std::__1::__vector_base.219" }
%"class.std::__1::__vector_base.219" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.220" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.225" = type { %"class.std::__1::__vector_base.226" }
%"class.std::__1::__vector_base.226" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.227" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.232", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.267" }
%"class.cc::PropertyTree.232" = type { i32 (...)**, %"class.std::__1::vector.233", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.243" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.147", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.235" }
%"class.base::internal::flat_tree.235" = type { %"class.std::__1::vector.236" }
%"class.std::__1::vector.236" = type { %"class.std::__1::__vector_base.237" }
%"class.std::__1::__vector_base.237" = type { i32*, i32*, %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { i32* }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.248", %"class.std::__1::__compressed_pair.256", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.263", [4 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250", %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { float }
%"class.std::__1::vector.267" = type { %"class.std::__1::__vector_base.268" }
%"class.std::__1::__vector_base.268" = type { %"class.std::__1::unique_ptr.269"*, %"class.std::__1::unique_ptr.269"*, %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type opaque
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.std::__1::unique_ptr.269"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.280" }
%"class.cc::PropertyTree.280" = type { i32 (...)**, %"class.std::__1::vector.281", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.283" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.288", i32, %"class.base::flat_map.296", %"class.base::flat_map.306", %"class.base::WeakPtr.316" }
%"class.cc::PropertyTree.288" = type { i32 (...)**, %"class.std::__1::vector.289", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.291" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.296" = type { %"class.base::internal::flat_tree.297" }
%"class.base::internal::flat_tree.297" = type { %"class.std::__1::vector.298" }
%"class.std::__1::vector.298" = type { %"class.std::__1::__vector_base.299" }
%"class.std::__1::__vector_base.299" = type { %"struct.std::__1::pair.300"*, %"struct.std::__1::pair.300"*, %"class.std::__1::__compressed_pair.301" }
%"struct.std::__1::pair.300" = type opaque
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"struct.std::__1::pair.300"* }
%"class.base::flat_map.306" = type { %"class.base::internal::flat_tree.307" }
%"class.base::internal::flat_tree.307" = type { %"class.std::__1::vector.308" }
%"class.std::__1::vector.308" = type { %"class.std::__1::__vector_base.309" }
%"class.std::__1::__vector_base.309" = type { %"struct.std::__1::pair.310"*, %"struct.std::__1::pair.310"*, %"class.std::__1::__compressed_pair.311" }
%"struct.std::__1::pair.310" = type opaque
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"struct.std::__1::pair.310"* }
%"class.base::WeakPtr.316" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.317", %"class.std::__1::vector.324" }
%"class.std::__1::vector.317" = type { %"class.std::__1::__vector_base.318" }
%"class.std::__1::__vector_base.318" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.319" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { %"class.std::__1::vector.326"*, %"class.std::__1::vector.326"*, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::vector.326" = type opaque
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.std::__1::vector.326"* }
%"class.gfx::Vector2dF" = type { float, float }
%class.scoped_refptr.332 = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.cc::HeadsUpDisplayLayer" = type opaque
%"class.base::flat_map.333" = type { %"class.base::internal::flat_tree.334" }
%"class.base::internal::flat_tree.334" = type { %"class.std::__1::vector.335" }
%"class.std::__1::vector.335" = type { %"class.std::__1::__vector_base.336" }
%"class.std::__1::__vector_base.336" = type { %"struct.std::__1::pair.337"*, %"struct.std::__1::pair.337"*, %"class.std::__1::__compressed_pair.338" }
%"struct.std::__1::pair.337" = type opaque
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"struct.std::__1::pair.337"* }
%"class.base::internal::flat_tree.343" = type { %"class.std::__1::vector.344" }
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.351" }
%"class.std::__1::__hash_table.351" = type <{ %"class.std::__1::unique_ptr.352", %"class.std::__1::__compressed_pair.362", %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.370", [4 x i8] }>
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354", %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.std::__1::__hash_node_base.355"** }
%"struct.std::__1::__hash_node_base.355" = type { %"struct.std::__1::__hash_node_base.355"* }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.std::__1::__bucket_list_deallocator.357" }
%"class.std::__1::__bucket_list_deallocator.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.std::__1::__hash_node_base.355" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"class.std::__1::unordered_map.374" = type { %"class.std::__1::__hash_table.375" }
%"class.std::__1::__hash_table.375" = type <{ %"class.std::__1::unique_ptr.376", %"class.std::__1::__compressed_pair.386", %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.394", [4 x i8] }>
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378", %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.std::__1::__hash_node_base.379"** }
%"struct.std::__1::__hash_node_base.379" = type { %"struct.std::__1::__hash_node_base.379"* }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.std::__1::__bucket_list_deallocator.381" }
%"class.std::__1::__bucket_list_deallocator.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.std::__1::__hash_node_base.379" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::vector.400" = type { %"class.std::__1::__vector_base.401" }
%"class.std::__1::__vector_base.401" = type { %"struct.std::__1::pair.402"*, %"struct.std::__1::pair.402"*, %"class.std::__1::__compressed_pair.403" }
%"struct.std::__1::pair.402" = type opaque
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"struct.std::__1::pair.402"* }
%"class.std::__1::unordered_map.408" = type { %"class.std::__1::__hash_table.409" }
%"class.std::__1::__hash_table.409" = type <{ %"class.std::__1::unique_ptr.410", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.425", %"class.std::__1::__compressed_pair.428", [4 x i8] }>
%"class.std::__1::unique_ptr.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412", %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"struct.std::__1::__hash_node_base.413"** }
%"struct.std::__1::__hash_node_base.413" = type { %"struct.std::__1::__hash_node_base.413"* }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.std::__1::__bucket_list_deallocator.415" }
%"class.std::__1::__bucket_list_deallocator.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"struct.std::__1::__hash_node_base.413" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"class.std::__1::vector.432" = type { %"class.std::__1::__vector_base.433" }
%"class.std::__1::__vector_base.433" = type { %"class.base::OnceCallback.434"*, %"class.base::OnceCallback.434"*, %"class.std::__1::__compressed_pair.435" }
%"class.base::OnceCallback.434" = type opaque
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.base::OnceCallback.434"* }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.440" }
%"class.base::OnceCallback.440" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.447", %"class.std::__1::vector.454" }
%"class.std::__1::vector.447" = type { %"class.std::__1::__vector_base.448" }
%"class.std::__1::__vector_base.448" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.449" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.454" = type { %"class.std::__1::__vector_base.455" }
%"class.std::__1::__vector_base.455" = type { %"class.std::__1::unique_ptr.456"*, %"class.std::__1::unique_ptr.456"*, %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.508", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.508" = type { %"class.absl::optional_internal::optional_data.509" }
%"class.absl::optional_internal::optional_data.509" = type { %"class.absl::optional_internal::optional_data_base.510" }
%"class.absl::optional_internal::optional_data_base.510" = type { %"class.absl::optional_internal::optional_data_dtor_base.511" }
%"class.absl::optional_internal::optional_data_dtor_base.511" = type { i8, %union.anon.512 }
%union.anon.512 = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.std::__1::unique_ptr.456"* }
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.468" = type { %"class.std::__1::__vector_base.469" }
%"class.std::__1::__vector_base.469" = type { %"class.std::__1::unique_ptr.470"*, %"class.std::__1::unique_ptr.470"*, %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::unique_ptr.470" = type opaque
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.std::__1::unique_ptr.470"* }
%"class.base::flat_map.476" = type { %"class.base::internal::flat_tree.477" }
%"class.base::internal::flat_tree.477" = type { %"class.std::__1::vector.478" }
%"class.std::__1::vector.478" = type { %"class.std::__1::__vector_base.479" }
%"class.std::__1::__vector_base.479" = type { %"struct.std::__1::pair.480"*, %"struct.std::__1::pair.480"*, %"class.std::__1::__compressed_pair.481" }
%"struct.std::__1::pair.480" = type opaque
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"struct.std::__1::pair.480"* }
%"class.base::WeakPtrFactory.486" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::LayerListIterator" = type { i32 (...)**, %"class.cc::Layer"*, %"class.std::__1::vector.499" }
%"class.std::__1::vector.499" = type { %"class.std::__1::__vector_base.500" }
%"class.std::__1::__vector_base.500" = type { i64*, i64*, %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { i64* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZTVN2cc21InvalidationBenchmarkE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::InvalidationBenchmark"*)* @_ZN2cc21InvalidationBenchmarkD2Ev to i8*), i8* bitcast (void (%"class.cc::InvalidationBenchmark"*)* @_ZN2cc21InvalidationBenchmarkD0Ev to i8*), i8* bitcast (void (%"class.cc::InvalidationBenchmark"*, %"class.cc::LayerTreeHost"*)* @_ZN2cc21InvalidationBenchmark15DidUpdateLayersEPNS_13LayerTreeHostE to i8*), i8* bitcast (void (%"class.cc::InvalidationBenchmark"*, %"class.cc::PictureLayer"*)* @_ZN2cc21InvalidationBenchmark10RunOnLayerEPNS_12PictureLayerE to i8*), i8* bitcast (i1 (%"class.cc::InvalidationBenchmark"*, %"class.base::Value"*)* @_ZN2cc21InvalidationBenchmark14ProcessMessageENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEE to i8*), i8* bitcast (void ()* @_ZN2cc14MicroBenchmark19CreateBenchmarkImplE13scoped_refptrIN4base22SingleThreadTaskRunnerEE to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"fixed_size\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"../../cc/benchmarks/invalidation_benchmark.cc\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"settings->HasKey(\22width\22)\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"Must provide a width for fixed_size mode.\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"settings->HasKey(\22height\22)\00", align 1
@.str.8 = private unnamed_addr constant [43 x i8] c"Must provide a height for fixed_size mode.\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"layer\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"viewport\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"Invalid mode: \00", align 1
@.str.14 = private unnamed_addr constant [57 x i8] c". One of {fixed_size, layer, viewport, random} expected.\00", align 1
@__const._ZN2cc21InvalidationBenchmark10RunOnLayerEPNS_12PictureLayerE.from_screen = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@.str.15 = private unnamed_addr constant [12 x i8] c"notify_done\00", align 1
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN2cc21InvalidationBenchmarkC1ENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEENS3_12OnceCallbackIFvS7_EEE = hidden unnamed_addr alias void (%"class.cc::InvalidationBenchmark"*, %"class.base::Value"*, %"class.base::OnceCallback"*), void (%"class.cc::InvalidationBenchmark"*, %"class.base::Value"*, %"class.base::OnceCallback"*)* @_ZN2cc21InvalidationBenchmarkC2ENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEENS3_12OnceCallbackIFvS7_EEE
@_ZN2cc21InvalidationBenchmarkD1Ev = hidden unnamed_addr alias void (%"class.cc::InvalidationBenchmark"*), void (%"class.cc::InvalidationBenchmark"*)* @_ZN2cc21InvalidationBenchmarkD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21InvalidationBenchmarkC2ENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEENS3_12OnceCallbackIFvS7_EEE(%"class.cc::InvalidationBenchmark"*, %"class.base::Value"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::DictionaryValue"*, align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void @_ZN2cc14MicroBenchmarkC2EN4base12OnceCallbackIFvNSt3__110unique_ptrINS1_5ValueENS3_14default_deleteIS5_EEEEEEE(%"class.cc::MicroBenchmark"* %10, %"class.base::OnceCallback"* nonnull %4) #7
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #7
  %16 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2cc21InvalidationBenchmarkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 4
  store i32 0, i32* %17, align 4
  %18 = bitcast %"class.base::DictionaryValue"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %5, align 8
  %19 = call zeroext i1 @_ZN4base5Value15GetAsDictionaryEPPNS_15DictionaryValueE(%"class.base::Value"* %1, %"class.base::DictionaryValue"** nonnull %5) #7
  %20 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %5, align 8
  %21 = icmp eq %"class.base::DictionaryValue"* %20, null
  br i1 %21, label %133, label %22

22:                                               ; preds = %3
  %23 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  store i8 8, i8* %27, align 1
  %29 = bitcast %"class.std::__1::basic_string"* %6 to i64*
  store i64 8390891584574810486, i64* %29, align 8
  %30 = bitcast i64* %25 to i8*
  store i8 0, i8* %30, align 8
  %31 = call zeroext i1 @_ZNK4base15DictionaryValue6HasKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DictionaryValue"* nonnull %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #7
  br i1 %31, label %32, label %109

32:                                               ; preds = %22
  %33 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %5, align 8
  %34 = call zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"* %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4, %"class.std::__1::basic_string"* nonnull %6) #7
  %35 = load i8, i8* %27, align 1
  %36 = icmp slt i8 %35, 0
  %37 = load i64, i64* %25, align 8
  %38 = zext i8 %35 to i64
  %39 = select i1 %36, i64 %37, i64 %38
  %40 = icmp eq i64 %39, 10
  br i1 %40, label %41, label %70

41:                                               ; preds = %32
  %42 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10) #7
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = load i8, i8* %27, align 1
  %46 = load i64, i64* %25, align 8
  %47 = zext i8 %45 to i64
  br label %70

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 1
  store i32 0, i32* %49, align 8
  %50 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %5, align 8
  %51 = call zeroext i1 @_ZNK4base15DictionaryValue6HasKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DictionaryValue"* %50, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #7
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i32 44, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0)) #7
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #7
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %54, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i64 41) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #7
  br label %56

56:                                               ; preds = %48, %52
  %57 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %5, align 8
  %58 = call zeroext i1 @_ZNK4base15DictionaryValue6HasKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DictionaryValue"* %57, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i64 6) #7
  br i1 %58, label %63, label %59

59:                                               ; preds = %56
  %60 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i32 46, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0)) #7
  %61 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %61, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0), i64 42) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #7
  br label %63

63:                                               ; preds = %56, %59
  %64 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %5, align 8
  %65 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 2
  %66 = call zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"* %64, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5, i32* %65) #7
  %67 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %5, align 8
  %68 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 3
  %69 = call zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"* %67, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i64 6, i32* %68) #7
  br label %127

70:                                               ; preds = %44, %32
  %71 = phi i64 [ %47, %44 ], [ %38, %32 ]
  %72 = phi i64 [ %46, %44 ], [ %37, %32 ]
  %73 = phi i8 [ %45, %44 ], [ %35, %32 ]
  %74 = icmp slt i8 %73, 0
  %75 = select i1 %74, i64 %72, i64 %71
  %76 = icmp eq i64 %75, 5
  br i1 %76, label %77, label %86

77:                                               ; preds = %70
  %78 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 5) #7
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %77
  %81 = load i8, i8* %27, align 1
  %82 = load i64, i64* %25, align 8
  %83 = zext i8 %81 to i64
  br label %86

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 1
  store i32 1, i32* %85, align 8
  br label %127

86:                                               ; preds = %80, %70
  %87 = phi i64 [ %83, %80 ], [ %71, %70 ]
  %88 = phi i64 [ %82, %80 ], [ %72, %70 ]
  %89 = phi i8 [ %81, %80 ], [ %73, %70 ]
  %90 = icmp slt i8 %89, 0
  %91 = select i1 %90, i64 %88, i64 %87
  %92 = icmp eq i64 %91, 6
  br i1 %92, label %93, label %102

93:                                               ; preds = %86
  %94 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i64 6) #7
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %93
  %97 = load i8, i8* %27, align 1
  %98 = load i64, i64* %25, align 8
  %99 = zext i8 %97 to i64
  br label %102

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 1
  store i32 3, i32* %101, align 8
  br label %127

102:                                              ; preds = %96, %86
  %103 = phi i64 [ %99, %96 ], [ %87, %86 ]
  %104 = phi i64 [ %98, %96 ], [ %88, %86 ]
  %105 = phi i8 [ %97, %96 ], [ %89, %86 ]
  %106 = icmp slt i8 %105, 0
  %107 = select i1 %106, i64 %104, i64 %103
  %108 = icmp eq i64 %107, 8
  br i1 %108, label %109, label %114

109:                                              ; preds = %22, %102
  %110 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %6, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i64 8) #7
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 1
  store i32 2, i32* %113, align 8
  br label %127

114:                                              ; preds = %102, %109
  %115 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i32 57, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0)) #7
  %116 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #7
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %116, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i64 14) #7
  %118 = load i8, i8* %27, align 1
  %119 = icmp slt i8 %118, 0
  %120 = load i8*, i8** %24, align 8
  %121 = load i64, i64* %25, align 8
  %122 = zext i8 %118 to i64
  %123 = select i1 %119, i8* %120, i8* %23
  %124 = select i1 %119, i64 %121, i64 %122
  %125 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %117, i8* %123, i64 %124) #7
  %126 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %125, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.14, i64 0, i64 0), i64 56) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #7
  br label %127

127:                                              ; preds = %84, %112, %114, %100, %63
  %128 = load i8, i8* %27, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %127
  %131 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %131) #8
  br label %132

132:                                              ; preds = %127, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #7
  br label %133

133:                                              ; preds = %3, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  %134 = icmp eq %"class.base::Value"* %1, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %133
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %1) #7
  %136 = bitcast %"class.base::Value"* %1 to i8*
  call void @_ZdlPv(i8* %136) #8
  br label %137

137:                                              ; preds = %133, %135
  ret void
}

declare void @_ZN2cc14MicroBenchmarkC2EN4base12OnceCallbackIFvNSt3__110unique_ptrINS1_5ValueENS3_14default_deleteIS5_EEEEEEE(%"class.cc::MicroBenchmark"*, %"class.base::OnceCallback"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN4base5Value15GetAsDictionaryEPPNS_15DictionaryValueE(%"class.base::Value"*, %"class.base::DictionaryValue"**) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base15DictionaryValue6HasKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DictionaryValue"*, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK4base15DictionaryValue9GetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZNK4base15DictionaryValue10GetIntegerENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(%"class.base::DictionaryValue"*, i8*, i64, i32*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc14MicroBenchmarkD2Ev(%"class.cc::MicroBenchmark"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21InvalidationBenchmarkD2Ev(%"class.cc::InvalidationBenchmark"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 0
  tail call void @_ZN2cc14MicroBenchmarkD2Ev(%"class.cc::MicroBenchmark"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21InvalidationBenchmarkD0Ev(%"class.cc::InvalidationBenchmark"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 0
  tail call void @_ZN2cc14MicroBenchmarkD2Ev(%"class.cc::MicroBenchmark"* %2) #7
  %3 = bitcast %"class.cc::InvalidationBenchmark"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21InvalidationBenchmark15DidUpdateLayersEPNS_13LayerTreeHostE(%"class.cc::InvalidationBenchmark"*, %"class.cc::LayerTreeHost"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.cc::LayerListIterator", align 8
  %4 = alloca %"class.cc::LayerListIterator", align 8
  %5 = bitcast %"class.cc::LayerListIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %3, i64 0, i32 1
  %7 = bitcast %"class.cc::LayerListIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  call void @_ZNK2cc13LayerTreeHost5beginEv(%"class.cc::LayerListIterator"* nonnull sret %3, %"class.cc::LayerTreeHost"* %1) #7
  %8 = bitcast %"class.cc::LayerListIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #7
  %9 = getelementptr inbounds %"class.cc::LayerListIterator", %"class.cc::LayerListIterator"* %4, i64 0, i32 1
  %10 = bitcast %"class.cc::LayerListIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  call void @_ZNK2cc13LayerTreeHost3endEv(%"class.cc::LayerListIterator"* nonnull sret %4, %"class.cc::LayerTreeHost"* %1) #7
  %11 = load %"class.cc::Layer"*, %"class.cc::Layer"** %6, align 8
  %12 = load %"class.cc::Layer"*, %"class.cc::Layer"** %9, align 8
  %13 = icmp eq %"class.cc::Layer"* %11, %12
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 0
  br label %17

16:                                               ; preds = %17, %2
  call void @_ZN2cc17LayerListIteratorD1Ev(%"class.cc::LayerListIterator"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #7
  call void @_ZN2cc17LayerListIteratorD1Ev(%"class.cc::LayerListIterator"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #7
  ret void

17:                                               ; preds = %14, %17
  %18 = phi %"class.cc::Layer"* [ %11, %14 ], [ %24, %17 ]
  %19 = bitcast %"class.cc::Layer"* %18 to void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)***
  %20 = load void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)**, void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)*, void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)** %20, i64 7
  %22 = load void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)*, void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)** %21, align 8
  call void %22(%"class.cc::Layer"* %18, %"class.cc::MicroBenchmark"* %15) #7
  %23 = call dereferenceable(40) %"class.cc::LayerListIterator"* @_ZN2cc17LayerListIteratorppEv(%"class.cc::LayerListIterator"* nonnull %3) #7
  %24 = load %"class.cc::Layer"*, %"class.cc::Layer"** %6, align 8
  %25 = load %"class.cc::Layer"*, %"class.cc::Layer"** %9, align 8
  %26 = icmp eq %"class.cc::Layer"* %24, %25
  br i1 %26, label %16, label %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNK2cc13LayerTreeHost5beginEv(%"class.cc::LayerListIterator"* sret, %"class.cc::LayerTreeHost"*) local_unnamed_addr #1

declare void @_ZNK2cc13LayerTreeHost3endEv(%"class.cc::LayerListIterator"* sret, %"class.cc::LayerTreeHost"*) local_unnamed_addr #1

declare dereferenceable(40) %"class.cc::LayerListIterator"* @_ZN2cc17LayerListIteratorppEv(%"class.cc::LayerListIterator"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc17LayerListIteratorD1Ev(%"class.cc::LayerListIterator"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc21InvalidationBenchmark10RunOnLayerEPNS_12PictureLayerE(%"class.cc::InvalidationBenchmark"* nocapture, %"class.cc::PictureLayer"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = alloca %"class.gfx::Transform", align 4
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"class.gfx::Rect"*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %"class.gfx::Rect"*
  %11 = alloca %"class.gfx::Rect", align 4
  %12 = alloca %"class.gfx::Rect", align 4
  %13 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  %18 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %1, i64 0, i32 0
  %19 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %1, i64 0, i32 0, i32 5, i32 2
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  %20 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1
  %21 = bitcast %"class.gfx::Size"* %19 to i64*
  %22 = bitcast %"class.gfx::Size"* %20 to i64*
  %23 = load i64, i64* %21, align 4
  store i64 %23, i64* %22, align 4
  %24 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %24) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc21InvalidationBenchmark10RunOnLayerEPNS_12PictureLayerE.from_screen to i8*), i64 68, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #7
  %25 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %5, i64 0, i32 0, i32 1
  store i8 0, i8* %25, align 4
  %26 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %26) #7
  call void @_ZNK2cc5Layer20ScreenSpaceTransformEv(%"class.gfx::Transform"* nonnull sret %6, %"class.cc::Layer"* %18) #7
  %27 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %6, %"class.gfx::Transform"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %26) #7
  br i1 %27, label %29, label %28

28:                                               ; preds = %2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* nonnull align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false)
  store i8 0, i8* %25, align 4
  br label %29

29:                                               ; preds = %28, %2
  %30 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #7
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %32 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #7
  %33 = getelementptr inbounds %"class.cc::PictureLayer", %"class.cc::PictureLayer"* %1, i64 0, i32 0, i32 4
  %34 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %33, align 8
  %35 = getelementptr inbounds %"class.cc::LayerTreeHost", %"class.cc::LayerTreeHost"* %34, i64 0, i32 52
  %36 = bitcast %"class.gfx::Rect"* %35 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  store <2 x i64> %37, <2 x i64>* %9, align 16
  %38 = call { i64, i64 } @_ZN2cc8MathUtil27ProjectEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* nonnull dereferenceable(68) %5, %"class.gfx::Rect"* nonnull dereferenceable(16) %10) #7
  %39 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  %40 = extractvalue { i64, i64 } %38, 0
  store i64 %40, i64* %39, align 8
  %41 = extractvalue { i64, i64 } %38, 1
  store i64 %41, i64* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #7
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %8) #7
  %42 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  switch i32 %43, label %178 [
    i32 0, label %44
    i32 1, label %96
    i32 3, label %107
    i32 2, label %173
  ]

44:                                               ; preds = %29
  %45 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 4
  %46 = load i32, i32* %45, align 4
  %47 = mul i32 %46, 1664525
  %48 = add i32 %47, 1013904223
  %49 = uitofp i32 %48 to float
  %50 = fmul float %49, 0x3DF0000000000000
  %51 = load i32, i32* %16, align 4
  %52 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = sub nsw i32 %51, %53
  %55 = sitofp i32 %54 to float
  %56 = fmul float %50, %55
  %57 = fptosi float %56 to i32
  %58 = mul i32 %48, 1664525
  %59 = add i32 %58, 1013904223
  store i32 %59, i32* %45, align 4
  %60 = uitofp i32 %59 to float
  %61 = fmul float %60, 0x3DF0000000000000
  %62 = load i32, i32* %17, align 4
  %63 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = sub nsw i32 %62, %64
  %66 = sitofp i32 %65 to float
  %67 = fmul float %61, %66
  %68 = fptosi float %67 to i32
  %69 = bitcast %"class.gfx::Rect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #7
  %70 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1, i32 0
  %73 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1, i32 1
  store i32 %57, i32* %70, align 4
  store i32 %68, i32* %71, align 4
  %74 = icmp sgt i32 %57, 0
  %75 = icmp sgt i32 %53, 0
  %76 = and i1 %75, %74
  %77 = sub nuw nsw i32 2147483647, %57
  %78 = icmp ult i32 %77, %53
  %79 = and i1 %78, %76
  %80 = select i1 %79, i32 %77, i32 %53
  %81 = icmp sgt i32 %68, 0
  %82 = icmp sgt i32 %64, 0
  %83 = and i1 %82, %81
  %84 = sub nuw nsw i32 2147483647, %68
  %85 = icmp ult i32 %84, %64
  %86 = and i1 %85, %83
  %87 = select i1 %86, i32 %84, i32 %64
  %88 = icmp sgt i32 %80, 0
  %89 = select i1 %88, i32 %80, i32 0
  store i32 %89, i32* %72, align 4
  %90 = icmp sgt i32 %87, 0
  %91 = select i1 %90, i32 %87, i32 0
  store i32 %91, i32* %73, align 4
  %92 = bitcast %"class.cc::PictureLayer"* %1 to void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)***
  %93 = load void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)**, void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)*, void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)** %93, i64 1
  %95 = load void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)*, void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)** %94, align 8
  call void %95(%"class.cc::PictureLayer"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %11) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #7
  br label %178

96:                                               ; preds = %29
  %97 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #7
  %98 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %98, align 4
  %99 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  store i32 0, i32* %99, align 4
  %100 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1
  %101 = bitcast %"class.gfx::Size"* %100 to i64*
  %102 = load i64, i64* %21, align 4
  store i64 %102, i64* %101, align 4
  %103 = bitcast %"class.cc::PictureLayer"* %1 to void (%"class.cc::Layer"*, %"class.gfx::Rect"*)***
  %104 = load void (%"class.cc::Layer"*, %"class.gfx::Rect"*)**, void (%"class.cc::Layer"*, %"class.gfx::Rect"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.cc::Layer"*, %"class.gfx::Rect"*)*, void (%"class.cc::Layer"*, %"class.gfx::Rect"*)** %104, i64 1
  %106 = load void (%"class.cc::Layer"*, %"class.gfx::Rect"*)*, void (%"class.cc::Layer"*, %"class.gfx::Rect"*)** %105, align 8
  call void %106(%"class.cc::Layer"* %18, %"class.gfx::Rect"* nonnull dereferenceable(16) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #7
  br label %178

107:                                              ; preds = %29
  %108 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 4
  %109 = load i32, i32* %108, align 4
  %110 = mul i32 %109, 1664525
  %111 = add i32 %110, 1013904223
  %112 = uitofp i32 %111 to float
  %113 = fmul float %112, 0x3DF0000000000000
  %114 = load i32, i32* %16, align 4
  %115 = sitofp i32 %114 to float
  %116 = fmul float %113, %115
  %117 = fptosi float %116 to i32
  %118 = mul i32 %111, 1664525
  %119 = add i32 %118, 1013904223
  %120 = uitofp i32 %119 to float
  %121 = fmul float %120, 0x3DF0000000000000
  %122 = fmul float %121, %115
  %123 = fptosi float %122 to i32
  %124 = mul i32 %119, 1664525
  %125 = add i32 %124, 1013904223
  %126 = uitofp i32 %125 to float
  %127 = fmul float %126, 0x3DF0000000000000
  %128 = load i32, i32* %17, align 4
  %129 = sitofp i32 %128 to float
  %130 = fmul float %127, %129
  %131 = fptosi float %130 to i32
  %132 = mul i32 %125, 1664525
  %133 = add i32 %132, 1013904223
  store i32 %133, i32* %108, align 4
  %134 = uitofp i32 %133 to float
  %135 = fmul float %134, 0x3DF0000000000000
  %136 = fmul float %135, %129
  %137 = fptosi float %136 to i32
  %138 = icmp sgt i32 %117, %123
  %139 = select i1 %138, i32 %123, i32 %117
  %140 = select i1 %138, i32 %117, i32 %123
  %141 = icmp sgt i32 %131, %137
  %142 = select i1 %141, i32 %137, i32 %131
  %143 = select i1 %141, i32 %131, i32 %137
  %144 = bitcast %"class.gfx::Rect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #7
  %145 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 0, i32 0
  %146 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 0, i32 1
  %147 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 1, i32 0
  %148 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 1, i32 1
  %149 = sub nsw i32 %140, %139
  %150 = sub nsw i32 %143, %142
  store i32 %139, i32* %145, align 4
  store i32 %142, i32* %146, align 4
  %151 = icmp sgt i32 %139, 0
  %152 = icmp sgt i32 %149, 0
  %153 = and i1 %151, %152
  %154 = sub nuw nsw i32 2147483647, %139
  %155 = icmp ult i32 %154, %149
  %156 = and i1 %155, %153
  %157 = select i1 %156, i32 %154, i32 %149
  %158 = icmp sgt i32 %142, 0
  %159 = icmp sgt i32 %150, 0
  %160 = and i1 %158, %159
  %161 = sub nuw nsw i32 2147483647, %142
  %162 = icmp ult i32 %161, %150
  %163 = and i1 %162, %160
  %164 = select i1 %163, i32 %161, i32 %150
  %165 = icmp sgt i32 %157, 0
  %166 = select i1 %165, i32 %157, i32 0
  store i32 %166, i32* %147, align 4
  %167 = icmp sgt i32 %164, 0
  %168 = select i1 %167, i32 %164, i32 0
  store i32 %168, i32* %148, align 4
  %169 = bitcast %"class.cc::PictureLayer"* %1 to void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)***
  %170 = load void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)**, void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)*** %169, align 8
  %171 = getelementptr inbounds void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)*, void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)** %170, i64 1
  %172 = load void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)*, void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)** %171, align 8
  call void %172(%"class.cc::PictureLayer"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %12) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #7
  br label %178

173:                                              ; preds = %29
  %174 = bitcast %"class.cc::PictureLayer"* %1 to void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)***
  %175 = load void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)**, void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)*, void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)** %175, i64 1
  %177 = load void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)*, void (%"class.cc::PictureLayer"*, %"class.gfx::Rect"*)** %176, align 8
  call void %177(%"class.cc::PictureLayer"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #7
  br label %178

178:                                              ; preds = %29, %173, %107, %96, %44
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #7
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %24) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNK2cc5Layer20ScreenSpaceTransformEv(%"class.gfx::Transform"* sret, %"class.cc::Layer"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"*) local_unnamed_addr #1

declare { i64, i64 } @_ZN2cc8MathUtil27ProjectEnclosingClippedRectERKN3gfx9TransformERKNS1_4RectE(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden float @_ZN2cc21InvalidationBenchmark9LCGRandomEv(%"class.cc::InvalidationBenchmark"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = mul i32 %3, 1664525
  %5 = add i32 %4, 1013904223
  store i32 %5, i32* %2, align 4
  %6 = uitofp i32 %5 to float
  %7 = fmul float %6, 0x3DF0000000000000
  ret float %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc21InvalidationBenchmark14ProcessMessageENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEE(%"class.cc::InvalidationBenchmark"*, %"class.base::Value"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::DictionaryValue"*, align 8
  %4 = alloca i8, align 1
  %5 = bitcast %"class.base::DictionaryValue"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %3, align 8
  %6 = call zeroext i1 @_ZN4base5Value15GetAsDictionaryEPPNS_15DictionaryValueE(%"class.base::Value"* %1, %"class.base::DictionaryValue"** nonnull %3) #7
  %7 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %3, align 8
  %8 = icmp eq %"class.base::DictionaryValue"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #7
  store i8 -86, i8* %4, align 1
  %10 = call zeroext i1 @_ZNK4base15DictionaryValue6HasKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::DictionaryValue"* nonnull %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i64 11) #7
  br i1 %10, label %11, label %20

11:                                               ; preds = %9
  %12 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %3, align 8
  %13 = call zeroext i1 @_ZNK4base15DictionaryValue10GetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPb(%"class.base::DictionaryValue"* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i64 11, i8* nonnull %4) #7
  %14 = load i8, i8* %4, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.cc::InvalidationBenchmark", %"class.cc::InvalidationBenchmark"* %0, i64 0, i32 0
  %18 = call i8* @_Znwm(i64 32) #8
  %19 = bitcast i8* %18 to %"class.base::Value"*
  call void @_ZN4base5ValueC1Ev(%"class.base::Value"* nonnull %19) #7
  call void @_ZN2cc14MicroBenchmark10NotifyDoneENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEE(%"class.cc::MicroBenchmark"* %17, %"class.base::Value"* nonnull %19) #7
  br label %20

20:                                               ; preds = %9, %16, %11
  %21 = phi i1 [ true, %11 ], [ true, %16 ], [ false, %9 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #7
  br label %22

22:                                               ; preds = %2, %20
  %23 = phi i1 [ %21, %20 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %24 = icmp eq %"class.base::Value"* %1, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %22
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %1) #7
  %26 = bitcast %"class.base::Value"* %1 to i8*
  call void @_ZdlPv(i8* %26) #8
  br label %27

27:                                               ; preds = %22, %25
  ret i1 %23
}

declare zeroext i1 @_ZNK4base15DictionaryValue10GetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPb(%"class.base::DictionaryValue"*, i8*, i64, i8*) local_unnamed_addr #1

declare void @_ZN2cc14MicroBenchmark10NotifyDoneENSt3__110unique_ptrIN4base5ValueENS1_14default_deleteIS4_EEEE(%"class.cc::MicroBenchmark"*, %"class.base::Value"*) local_unnamed_addr #1

declare void @_ZN2cc14MicroBenchmark19CreateBenchmarkImplE13scoped_refptrIN4base22SingleThreadTaskRunnerEE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #7
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #7
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #7
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #7
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #7
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #7
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #8
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #7
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #7
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #8
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #7
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #7
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1Ev(%"class.base::Value"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
