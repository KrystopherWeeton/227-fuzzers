; ModuleID = '../../ui/base/ime/utf_offset.cc'
source_filename = "../../ui/base/ime/utf_offset.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::basic_string.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.7 }
%struct.anon.7 = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN2ui25Utf16OffsetFromUtf8OffsetEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEm(i8*, i64, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = icmp ult i64 %1, %2
  br i1 %5, label %28, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #4
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #4
  %9 = call zeroext i1 @_ZN4base11UTF8ToUTF16EPKcmPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i8* %0, i64 %2, %"class.std::__1::basic_string"* nonnull %4) #4
  %10 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %14, label %19

14:                                               ; preds = %6
  br i1 %13, label %15, label %17

15:                                               ; preds = %14
  %16 = load i64, i64* %8, align 8
  br label %20

17:                                               ; preds = %14
  %18 = zext i8 %12 to i64
  br label %25

19:                                               ; preds = %6
  br i1 %13, label %20, label %25

20:                                               ; preds = %15, %19
  %21 = phi i64 [ %16, %15 ], [ undef, %19 ]
  %22 = phi i8 [ 1, %15 ], [ 0, %19 ]
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #5
  br label %25

25:                                               ; preds = %17, %19, %20
  %26 = phi i64 [ undef, %19 ], [ %21, %20 ], [ %18, %17 ]
  %27 = phi i8 [ 0, %19 ], [ %22, %20 ], [ 1, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #4
  br label %28

28:                                               ; preds = %3, %25
  %29 = phi i8 [ %27, %25 ], [ 0, %3 ]
  %30 = phi i64 [ %26, %25 ], [ undef, %3 ]
  %31 = insertvalue { i8, i64 } undef, i8 %29, 0
  %32 = insertvalue { i8, i64 } %31, i64 %30, 1
  ret { i8, i64 } %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base11UTF8ToUTF16EPKcmPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN2ui25Utf8OffsetFromUtf16OffsetEN4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEEm(i16*, i64, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string.3", align 8
  %5 = icmp ult i64 %1, %2
  br i1 %5, label %28, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::basic_string.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #4
  %8 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #4
  %10 = call zeroext i1 @_ZN4base11UTF16ToUTF8EPKDsmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i16* %0, i64 %2, %"class.std::__1::basic_string.3"* nonnull %4) #4
  %11 = bitcast %"class.std::__1::basic_string.3"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %10, label %15, label %20

15:                                               ; preds = %6
  br i1 %14, label %16, label %18

16:                                               ; preds = %15
  %17 = load i64, i64* %9, align 8
  br label %21

18:                                               ; preds = %15
  %19 = zext i8 %13 to i64
  br label %25

20:                                               ; preds = %6
  br i1 %14, label %21, label %25

21:                                               ; preds = %16, %20
  %22 = phi i64 [ %17, %16 ], [ undef, %20 ]
  %23 = phi i8 [ 1, %16 ], [ 0, %20 ]
  %24 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %24) #5
  br label %25

25:                                               ; preds = %18, %20, %21
  %26 = phi i64 [ undef, %20 ], [ %22, %21 ], [ %19, %18 ]
  %27 = phi i8 [ 0, %20 ], [ %23, %21 ], [ 1, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #4
  br label %28

28:                                               ; preds = %3, %25
  %29 = phi i8 [ %27, %25 ], [ 0, %3 ]
  %30 = phi i64 [ %26, %25 ], [ undef, %3 ]
  %31 = insertvalue { i8, i64 } undef, i8 %29, 0
  %32 = insertvalue { i8, i64 } %31, i64 %30, 1
  ret { i8, i64 } %32
}

declare zeroext i1 @_ZN4base11UTF16ToUTF8EPKDsmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i16*, i64, %"class.std::__1::basic_string.3"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
