; ModuleID = '../../pdf/pdfium/pdfium_font_linux.cc'
source_filename = "../../pdf/pdfium/pdfium_font_linux.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._FPDF_SYSFONTINFO = type { i32, {}*, void (%struct._FPDF_SYSFONTINFO*, i8*)*, i8* (%struct._FPDF_SYSFONTINFO*, i32, i32, i32, i32, i8*, i32*)*, i8* (%struct._FPDF_SYSFONTINFO*, i8*)*, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i32, i8*, i64)*, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i8*, i64)*, i32 (%struct._FPDF_SYSFONTINFO*, i8*)*, void (%struct._FPDF_SYSFONTINFO*, i8*)* }
%struct.anon = type { i8*, i8*, i8, i8 }
%struct.FPDF_CharsetFontMap_ = type { i32, i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"struct.blink::WebFontDescription" = type <{ %"class.blink::WebString", i32, float, i8, i8, [2 x i8], i32, i16, i16, [4 x i8] }>
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.0 }
%struct.anon.0 = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@_ZN10chrome_pdf12_GLOBAL__N_111g_font_infoE = internal global { i32, void (%struct._FPDF_SYSFONTINFO*)*, void (%struct._FPDF_SYSFONTINFO*, i8*)*, i8* (%struct._FPDF_SYSFONTINFO*, i32, i32, i32, i32, i8*, i32*)*, i8* (%struct._FPDF_SYSFONTINFO*, i8*)*, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i32, i8*, i64)*, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i8*, i64)*, i32 (%struct._FPDF_SYSFONTINFO*, i8*)*, void (%struct._FPDF_SYSFONTINFO*, i8*)* } { i32 1, void (%struct._FPDF_SYSFONTINFO*)* null, void (%struct._FPDF_SYSFONTINFO*, i8*)* @_ZN10chrome_pdf12_GLOBAL__N_19EnumFontsEP17_FPDF_SYSFONTINFOPv, i8* (%struct._FPDF_SYSFONTINFO*, i32, i32, i32, i32, i8*, i32*)* @_ZN10chrome_pdf12_GLOBAL__N_17MapFontEP17_FPDF_SYSFONTINFOiiiiPKcPi, i8* (%struct._FPDF_SYSFONTINFO*, i8*)* null, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i32, i8*, i64)* @_ZN10chrome_pdf12_GLOBAL__N_111GetFontDataEP17_FPDF_SYSFONTINFOPvjPhm, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i8*, i64)* null, i32 (%struct._FPDF_SYSFONTINFO*, i8*)* null, void (%struct._FPDF_SYSFONTINFO*, i8*)* @_ZN10chrome_pdf12_GLOBAL__N_110DeleteFontEP17_FPDF_SYSFONTINFOPv }, align 8
@.str = private unnamed_addr constant [6 x i8] c"Arial\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"Symbol\00", align 1
@_ZZN10chrome_pdf12_GLOBAL__N_17MapFontEP17_FPDF_SYSFONTINFOiiiiPKcPiE21kPdfFontSubstitutions = internal unnamed_addr constant [20 x %struct.anon] [%struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i8 0, i8 0 }, %struct.anon { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i8 1, i8 0 }, %struct.anon { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i8 1, i8 1 }, %struct.anon { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i8 0, i8 1 }, %struct.anon { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8 0, i8 0 }, %struct.anon { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8 1, i8 0 }, %struct.anon { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8 1, i8 1 }, %struct.anon { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i8 0, i8 1 }, %struct.anon { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i32 0, i32 0), i8 0, i8 0 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i32 0, i32 0), i8 1, i8 0 }, %struct.anon { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i32 0, i32 0), i8 1, i8 1 }, %struct.anon { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i32 0, i32 0), i8 0, i8 1 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i32 0, i32 0), i8 0, i8 0 }, %struct.anon { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8 0, i8 0 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i8 0, i8 0 }, %struct.anon { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i8 0, i8 0 }, %struct.anon { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i32 0, i32 0), i8 0, i8 0 }, %struct.anon { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8 0, i8 0 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i8 0, i8 0 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i8 0, i8 0 }], align 16
@.str.3 = private unnamed_addr constant [8 x i8] c"Courier\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"Courier New\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"Courier-Bold\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"Courier-BoldOblique\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"Courier-Oblique\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"Helvetica\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"Helvetica-Bold\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"Helvetica-BoldOblique\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"Helvetica-Oblique\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"Times-Roman\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"Times New Roman\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"Times-Bold\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"Times-BoldItalic\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"Times-Italic\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"MS-PGothic\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"MS PGothic\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"MS-Gothic\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"MS Gothic\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"MS-PMincho\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"MS PMincho\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"MS-Mincho\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"MS Mincho\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"\82l\82r\82o\83S\83V\83b\83N\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"\82l\82r\83S\83V\83b\83N\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"\82l\82r\82o\96\BE\92\A9\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"\82l\82r\96\BE\92\A9\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"s\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10chrome_pdf25InitializeLinuxFontMapperEv() local_unnamed_addr #0 {
  tail call void @FPDF_SetSystemFontInfo(%struct._FPDF_SYSFONTINFO* bitcast ({ i32, void (%struct._FPDF_SYSFONTINFO*)*, void (%struct._FPDF_SYSFONTINFO*, i8*)*, i8* (%struct._FPDF_SYSFONTINFO*, i32, i32, i32, i32, i8*, i32*)*, i8* (%struct._FPDF_SYSFONTINFO*, i8*)*, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i32, i8*, i64)*, i64 (%struct._FPDF_SYSFONTINFO*, i8*, i8*, i64)*, i32 (%struct._FPDF_SYSFONTINFO*, i8*)*, void (%struct._FPDF_SYSFONTINFO*, i8*)* }* @_ZN10chrome_pdf12_GLOBAL__N_111g_font_infoE to %struct._FPDF_SYSFONTINFO*)) #10
  ret void
}

declare void @FPDF_SetSystemFontInfo(%struct._FPDF_SYSFONTINFO*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10chrome_pdf12_GLOBAL__N_19EnumFontsEP17_FPDF_SYSFONTINFOPv(%struct._FPDF_SYSFONTINFO* nocapture readnone, i8*) #0 {
  tail call void @FPDF_AddInstalledFont(i8* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 1) #10
  %3 = tail call %struct.FPDF_CharsetFontMap_* @FPDF_GetDefaultTTFMap() #10
  %4 = getelementptr inbounds %struct.FPDF_CharsetFontMap_, %struct.FPDF_CharsetFontMap_* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %16, label %7

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %14, %7 ], [ %5, %2 ]
  %9 = phi %struct.FPDF_CharsetFontMap_* [ %12, %7 ], [ %3, %2 ]
  %10 = getelementptr inbounds %struct.FPDF_CharsetFontMap_, %struct.FPDF_CharsetFontMap_* %9, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  tail call void @FPDF_AddInstalledFont(i8* %1, i8* %11, i32 %8) #10
  %12 = getelementptr inbounds %struct.FPDF_CharsetFontMap_, %struct.FPDF_CharsetFontMap_* %9, i64 1
  %13 = getelementptr inbounds %struct.FPDF_CharsetFontMap_, %struct.FPDF_CharsetFontMap_* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %16, label %7

16:                                               ; preds = %7, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @_ZN10chrome_pdf12_GLOBAL__N_17MapFontEP17_FPDF_SYSFONTINFOiiiiPKcPi(%struct._FPDF_SYSFONTINFO* nocapture readnone, i32, i32, i32, i32, i8*, i32* nocapture readnone) #0 {
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"struct.blink::WebFontDescription", align 8
  %11 = alloca %"class.blink::WebString", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.blink::WebString", align 8
  %17 = tail call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #11
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %239, label %19

19:                                               ; preds = %7
  %20 = bitcast %"struct.blink::WebFontDescription"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #10
  %21 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %10, i64 0, i32 0
  %22 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %10, i64 0, i32 1
  store i32 -1431655766, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %10, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %24, align 4
  %25 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %10, i64 0, i32 3
  %26 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %10, i64 0, i32 6
  %27 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %10, i64 0, i32 7
  %28 = getelementptr inbounds %"struct.blink::WebFontDescription", %"struct.blink::WebFontDescription"* %10, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -86, i64 16, i1 false)
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* nonnull %21) #10
  %29 = bitcast i32* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 10, i1 false) #10
  store i32 3, i32* %26, align 4
  store i16 0, i16* %27, align 8
  store i16 0, i16* %28, align 2
  %30 = and i32 %4, 1
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %19
  %33 = and i32 %4, 16
  %34 = icmp eq i32 %33, 0
  %35 = select i1 %34, i32 1, i32 2
  br label %36

36:                                               ; preds = %32, %19
  %37 = phi i32 [ 4, %19 ], [ %35, %32 ]
  store i32 %37, i32* %23, align 8
  %38 = icmp eq i32 %3, 0
  %39 = and i1 %38, %31
  %40 = select i1 %39, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i8* %5
  br label %41

41:                                               ; preds = %104, %36
  %42 = phi i64 [ 0, %36 ], [ %105, %104 ]
  %43 = getelementptr inbounds [20 x %struct.anon], [20 x %struct.anon]* @_ZZN10chrome_pdf12_GLOBAL__N_17MapFontEP17_FPDF_SYSFONTINFOiiiiPKcPiE21kPdfFontSubstitutions, i64 0, i64 %42, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = call i32 @strcmp(i8* %40, i8* %44) #11
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %104

47:                                               ; preds = %41
  %48 = bitcast %"class.blink::WebString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  %49 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #10
  %50 = getelementptr inbounds [20 x %struct.anon], [20 x %struct.anon]* @_ZZN10chrome_pdf12_GLOBAL__N_17MapFontEP17_FPDF_SYSFONTINFOiiiiPKcPiE21kPdfFontSubstitutions, i64 0, i64 %42, i32 1
  %51 = load i8*, i8** %50, align 8
  %52 = call i64 @strlen(i8* %51) #10
  %53 = icmp ugt i64 %52, -17
  br i1 %53, label %54, label %56

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %55) #12
  unreachable

56:                                               ; preds = %47
  %57 = icmp ult i64 %52, 23
  br i1 %57, label %67, label %58

58:                                               ; preds = %56
  %59 = add nuw i64 %52, 16
  %60 = and i64 %59, -16
  %61 = call i8* @_Znwm(i64 %60) #13
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %61, i8** %62, align 8
  %63 = or i64 %60, -9223372036854775808
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %52, i64* %65, align 8
  %66 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %72

67:                                               ; preds = %56
  %68 = trunc i64 %52 to i8
  %69 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  store i8 %68, i8* %70, align 1
  %71 = icmp eq i64 %52, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %67, %58
  %73 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %69, %67 ], [ %66, %58 ]
  %74 = phi i8* [ %49, %67 ], [ %61, %58 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %74, i8* align 1 %51, i64 %52, i1 false) #10
  br label %75

75:                                               ; preds = %67, %72
  %76 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %69, %67 ], [ %73, %72 ]
  %77 = phi i8* [ %49, %67 ], [ %74, %72 ]
  %78 = getelementptr inbounds i8, i8* %77, i64 %52
  store i8 0, i8* %78, align 1
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1, !noalias !2
  %81 = icmp slt i8 %80, 0
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8, !noalias !2
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8, !noalias !2
  %86 = zext i8 %80 to i64
  %87 = select i1 %81, i8* %83, i8* %49
  %88 = select i1 %81, i64 %85, i64 %86
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %11, i8* %87, i64 %88) #10
  %89 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"* nonnull %21, %"class.blink::WebString"* nonnull dereferenceable(8) %11) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %11) #10
  %90 = load i8, i8* %79, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %75
  %93 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %93) #13
  br label %94

94:                                               ; preds = %75, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  %95 = lshr i64 1638, %42
  %96 = and i64 %95, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %99, label %98

98:                                               ; preds = %94
  store i32 6, i32* %26, align 4
  br label %99

99:                                               ; preds = %94, %98
  %100 = lshr i64 3276, %42
  %101 = and i64 %100, 1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %232, label %103

103:                                              ; preds = %99
  store i8 1, i8* %25, align 8
  br label %232

104:                                              ; preds = %41
  %105 = add nuw nsw i64 %42, 1
  %106 = icmp eq i64 %105, 20
  br i1 %106, label %107, label %41

107:                                              ; preds = %104
  %108 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #10
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 24, i1 false) #10
  %111 = icmp eq i8* %40, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %107
  %113 = call i64 @strlen(i8* nonnull %40) #10
  br label %117

114:                                              ; preds = %107
  %115 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #10
  %116 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #10
  br label %117

117:                                              ; preds = %112, %114
  %118 = phi i64 [ 0, %114 ], [ %113, %112 ]
  %119 = call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %40, i64 %118) #10
  br i1 %119, label %120, label %145

120:                                              ; preds = %117
  %121 = load i8, i8* %40, align 1
  %122 = call i1 @llvm.is.constant.i8(i8 %121) #10
  br i1 %122, label %123, label %143

123:                                              ; preds = %120
  %124 = call i64 @strlen(i8* %40) #10
  %125 = icmp ult i64 %124, 23
  br i1 %125, label %126, label %141

126:                                              ; preds = %123
  %127 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %126
  store i64 %124, i64* %110, align 8
  %132 = load i8*, i8** %109, align 8
  br label %135

133:                                              ; preds = %126
  %134 = trunc i64 %124 to i8
  store i8 %134, i8* %128, align 1
  br label %135

135:                                              ; preds = %133, %131
  %136 = phi i8* [ %132, %131 ], [ %108, %133 ]
  %137 = icmp eq i64 %124, 0
  br i1 %137, label %139, label %138

138:                                              ; preds = %135
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %136, i8* align 1 %40, i64 %124, i1 false) #10
  br label %139

139:                                              ; preds = %138, %135
  %140 = getelementptr inbounds i8, i8* %136, i64 %124
  store i8 0, i8* %140, align 1
  br label %201

141:                                              ; preds = %123
  %142 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %13, i8* %40, i64 %124) #10
  br label %201

143:                                              ; preds = %120
  %144 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* nonnull %13, i8* %40) #10
  br label %201

145:                                              ; preds = %117
  %146 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #10
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %146, i8 0, i64 24, i1 false) #10
  %148 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #10
  %149 = call i64 @strlen(i8* %40) #10
  %150 = icmp ugt i64 %149, -17
  br i1 %150, label %151, label %153

151:                                              ; preds = %145
  %152 = bitcast %"class.std::__1::basic_string"* %15 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %152) #12
  unreachable

153:                                              ; preds = %145
  %154 = icmp ult i64 %149, 23
  br i1 %154, label %164, label %155

155:                                              ; preds = %153
  %156 = add nuw i64 %149, 16
  %157 = and i64 %156, -16
  %158 = call i8* @_Znwm(i64 %157) #13
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %158, i8** %159, align 8
  %160 = or i64 %157, -9223372036854775808
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %149, i64* %162, align 8
  %163 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %169

164:                                              ; preds = %153
  %165 = trunc i64 %149 to i8
  %166 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  store i8 %165, i8* %167, align 1
  %168 = icmp eq i64 %149, 0
  br i1 %168, label %172, label %169

169:                                              ; preds = %164, %155
  %170 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %166, %164 ], [ %163, %155 ]
  %171 = phi i8* [ %148, %164 ], [ %158, %155 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %171, i8* align 1 %40, i64 %149, i1 false) #10
  br label %172

172:                                              ; preds = %164, %169
  %173 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %166, %164 ], [ %170, %169 ]
  %174 = phi i8* [ %148, %164 ], [ %171, %169 ]
  %175 = getelementptr inbounds i8, i8* %174, i64 %149
  store i8 0, i8* %175, align 1
  %176 = call zeroext i1 @_ZN4base14DetectEncodingERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %15, %"class.std::__1::basic_string"* nonnull %14) #10
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %172
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load i8*, i8** %181, align 8
  call void @_ZdlPv(i8* %182) #13
  br label %183

183:                                              ; preds = %172, %180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148) #10
  br i1 %176, label %184, label %193

184:                                              ; preds = %183
  br i1 %111, label %187, label %185

185:                                              ; preds = %184
  %186 = call i64 @strlen(i8* nonnull %40) #10
  br label %190

187:                                              ; preds = %184
  %188 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0)) #10
  %189 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #10
  br label %190

190:                                              ; preds = %185, %187
  %191 = phi i64 [ 0, %187 ], [ %186, %185 ]
  %192 = call zeroext i1 @_ZN4base25ConvertToUtf8AndNormalizeENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEPS8_(i8* %40, i64 %191, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14, %"class.std::__1::basic_string"* nonnull %13) #10
  br label %193

193:                                              ; preds = %190, %183
  %194 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %195 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %194, i64 0, i32 1, i32 0
  %196 = load i8, i8* %195, align 1
  %197 = icmp slt i8 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %193
  %199 = load i8*, i8** %147, align 8
  call void @_ZdlPv(i8* %199) #13
  br label %200

200:                                              ; preds = %193, %198
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #10
  br label %201

201:                                              ; preds = %143, %141, %139, %200
  %202 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %203 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %202, i64 0, i32 1, i32 0
  %204 = load i8, i8* %203, align 1
  %205 = icmp slt i8 %204, 0
  %206 = load i64, i64* %110, align 8
  %207 = zext i8 %204 to i64
  %208 = select i1 %205, i64 %206, i64 %207
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %228, label %210

210:                                              ; preds = %201
  %211 = bitcast %"class.blink::WebString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211) #10
  %212 = load i8*, i8** %109, align 8, !noalias !5
  %213 = select i1 %205, i8* %212, i8* %108
  call void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* nonnull sret %16, i8* %213, i64 %208) #10
  %214 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"* nonnull %21, %"class.blink::WebString"* nonnull dereferenceable(8) %16) #10
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %16) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #10
  %215 = icmp sgt i32 %1, 100
  %216 = select i1 %215, i32 %1, i32 100
  %217 = icmp slt i32 %216, 900
  %218 = select i1 %217, i32 %216, i32 900
  %219 = udiv i32 %218, 100
  %220 = add nsw i32 %219, -1
  store i32 %220, i32* %26, align 4
  %221 = icmp sgt i32 %2, 0
  %222 = zext i1 %221 to i8
  store i8 %222, i8* %25, align 8
  %223 = load i8, i8* %203, align 1
  %224 = icmp slt i8 %223, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %210
  %226 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %226) #13
  br label %227

227:                                              ; preds = %210, %225
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #10
  br label %232

228:                                              ; preds = %201
  br i1 %205, label %229, label %231

229:                                              ; preds = %228
  %230 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %230) #13
  br label %231

231:                                              ; preds = %228, %229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #10
  br label %237

232:                                              ; preds = %103, %99, %227
  %233 = call i32 @_ZN10chrome_pdf12PDFiumEngine18GetFontMappingModeEv() #10
  %234 = icmp eq i32 %233, 1
  br i1 %234, label %237, label %235

235:                                              ; preds = %232
  %236 = call i8* @_ZN10chrome_pdf13MapPepperFontERKN5blink18WebFontDescriptionEi(%"struct.blink::WebFontDescription"* nonnull dereferenceable(32) %10, i32 %3) #10
  br label %237

237:                                              ; preds = %232, %231, %235
  %238 = phi i8* [ %236, %235 ], [ null, %231 ], [ null, %232 ]
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #10
  br label %239

239:                                              ; preds = %7, %237
  %240 = phi i8* [ %238, %237 ], [ null, %7 ]
  ret i8* %240
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZN10chrome_pdf12_GLOBAL__N_111GetFontDataEP17_FPDF_SYSFONTINFOPvjPhm(%struct._FPDF_SYSFONTINFO* nocapture readnone, i8*, i32, i8*, i64) #0 {
  %6 = tail call i32 @_ZN10chrome_pdf12PDFiumEngine18GetFontMappingModeEv() #10
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  %9 = tail call i64 @_ZN10chrome_pdf17GetPepperFontDataEPvjPhm(i8* %1, i32 %2, i8* %3, i64 %4) #10
  br label %10

10:                                               ; preds = %5, %8
  %11 = phi i64 [ %9, %8 ], [ 0, %5 ]
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10chrome_pdf12_GLOBAL__N_110DeleteFontEP17_FPDF_SYSFONTINFOPv(%struct._FPDF_SYSFONTINFO* nocapture readnone, i8*) #0 {
  %3 = tail call i32 @_ZN10chrome_pdf12PDFiumEngine18GetFontMappingModeEv() #10
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN10chrome_pdf16DeletePepperFontEPv(i8* %1) #10
  br label %6

6:                                                ; preds = %2, %5
  ret void
}

declare void @FPDF_AddInstalledFont(i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %struct.FPDF_CharsetFontMap_* @FPDF_GetDefaultTTFMap() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #3

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base14DetectEncodingERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base25ConvertToUtf8AndNormalizeENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEPS8_(i8*, i64, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare i8* @_ZN10chrome_pdf13MapPepperFontERKN5blink18WebFontDescriptionEi(%"struct.blink::WebFontDescription"* dereferenceable(32), i32) local_unnamed_addr #1

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #1

declare void @_ZN5blink9WebString8FromUTF8EPKcm(%"class.blink::WebString"* sret, i8*, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @_ZN10chrome_pdf12PDFiumEngine18GetFontMappingModeEv() local_unnamed_addr #1

declare i64 @_ZN10chrome_pdf17GetPepperFontDataEPvjPhm(i8*, i32, i8*, i64) local_unnamed_addr #1

declare void @_ZN10chrome_pdf16DeletePepperFontEPv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!4 = distinct !{!4, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink9WebString8FromUTF8ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
