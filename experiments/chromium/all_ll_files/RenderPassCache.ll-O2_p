; ModuleID = '../../third_party/dawn/src/dawn_native/vulkan/RenderPassCache.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/vulkan/RenderPassCache.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dawn_native::vulkan::RenderPassCache" = type { %"class.dawn_native::vulkan::Device"*, %"class.std::__1::unordered_map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.166", %"class.std::__1::__compressed_pair.174", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.181", [4 x i8] }>
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168", %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { i64 }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { float }
%"class.dawn_native::vulkan::Device" = type { %"class.dawn_native::DeviceBase", %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanDeviceInfo", %struct.VkDevice_T*, i32, %struct.VkQueue_T*, i32, %class.SerialQueue, %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.108", %"class.std::__1::queue", %"class.std::__1::vector.125", %class.SerialQueue.132, %"class.std::__1::vector.142", %"struct.dawn_native::vulkan::CommandRecordingContext" }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.4", %class.Ref.10, %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %class.Ref.24, %"class.std::__1::unique_ptr.26", i32, %"struct.std::__1::array.32", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44" }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.dawn_native::AdapterBase" = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.10 = type { %class.RefBase.11 }
%class.RefBase.11 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.24 = type { %class.RefBase.25 }
%class.RefBase.25 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array.32" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.33" }
%"struct.std::__1::array.33" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset.34" }
%"class.std::__1::bitset.34" = type { %"class.std::__1::__bitset.35" }
%"class.std::__1::__bitset.35" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset.36" }
%"class.std::__1::bitset.36" = type { %"class.std::__1::__bitset.37" }
%"class.std::__1::__bitset.37" = type { i64 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%"struct.dawn_native::vulkan::VulkanFunctions" = type { void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void ()* (%struct.VkDevice_T*, i8*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, %struct.VkXlibSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct._XDisplay*, i64)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)*, void (%struct.VkCommandBuffer_T*, float*)*, void (%struct.VkCommandBuffer_T*, float, float, float)*, void (%struct.VkCommandBuffer_T*, float, float)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, float)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*)*, i32 (%struct.VkCommandBuffer_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)*, void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkFence_T*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)*, i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*)*, i32 (%struct.VkCommandBuffer_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)*, i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkInstance_T = type opaque
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkCommandBuffer_T = type opaque
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkDebugUtilsMessengerCreateInfoEXT = type { i32, i8*, i32, i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%struct.VkDebugUtilsMessengerCallbackDataEXT = type { i32, i8*, i32, i8*, i32, i8*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsObjectNameInfoEXT* }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkSurfaceKHR_T = type opaque
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkXlibSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct._XDisplay*, i64 }
%struct._XDisplay = type opaque
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkImage_T = type opaque
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkQueryPool_T = type opaque
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkEvent_T = type opaque
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineCache_T = type opaque
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"struct.dawn_native::vulkan::VulkanDeviceInfo" = type { %"struct.dawn_native::vulkan::VulkanDeviceKnobs", %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT, %"class.std::__1::vector", %"class.std::__1::vector.56", %"class.std::__1::vector.63", %"class.std::__1::vector.70" }
%"struct.dawn_native::vulkan::VulkanDeviceKnobs" = type { %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDevice16BitStorageFeatures, %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT, %"class.ityp::bitset.50" }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDevice16BitStorageFeatures = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT = type { i32, i8*, i32, i32 }
%"class.ityp::bitset.50" = type { %"class.std::__1::bitset.51" }
%"class.std::__1::bitset.51" = type { %"class.std::__1::__bitset.52" }
%"class.std::__1::__bitset.52" = type { i64 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT = type { i32, i8*, i32, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %struct.VkMemoryType*, %struct.VkMemoryType*, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %struct.VkMemoryType* }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %struct.VkMemoryHeap*, %struct.VkMemoryHeap*, %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %struct.VkMemoryHeap* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %struct.VkLayerProperties* }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.SerialQueue = type { %class.SerialStorage }
%class.SerialStorage = type { %"class.std::__1::vector.77" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.79" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.dawn_native::vulkan::FencedDeleter"* }
%"class.dawn_native::vulkan::FencedDeleter" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.dawn_native::vulkan::ResourceMemoryAllocator"* }
%"class.dawn_native::vulkan::ResourceMemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.dawn_native::vulkan::RenderPassCache"* }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.dawn_native::vulkan::external_memory::Service"* }
%"class.dawn_native::vulkan::external_memory::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.dawn_native::vulkan::external_semaphore::Service"* }
%"class.dawn_native::vulkan::external_semaphore::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.120" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.114"**, %"struct.std::__1::pair.114"**, %"struct.std::__1::pair.114"**, %"class.std::__1::__compressed_pair.115" }
%"struct.std::__1::pair.114" = type opaque
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::pair.114"** }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.dawn_native::vulkan::detail::VkHandle"*, %"class.dawn_native::vulkan::detail::VkHandle"*, %"class.std::__1::__compressed_pair.127" }
%"class.dawn_native::vulkan::detail::VkHandle" = type { %struct.VkFence_T* }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.dawn_native::vulkan::detail::VkHandle"* }
%class.SerialQueue.132 = type { %class.SerialStorage.133 }
%class.SerialStorage.133 = type { %"class.std::__1::vector.134" }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"struct.std::__1::pair.136"*, %"struct.std::__1::pair.136"*, %"class.std::__1::__compressed_pair.137" }
%"struct.std::__1::pair.136" = type opaque
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::pair.136"* }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"class.std::__1::__compressed_pair.145" }
%"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer" = type { %"class.dawn_native::vulkan::detail::VkHandle.144", %struct.VkCommandBuffer_T* }
%"class.dawn_native::vulkan::detail::VkHandle.144" = type { %struct.VkCommandPool_T* }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"* }
%"struct.dawn_native::vulkan::CommandRecordingContext" = type <{ %struct.VkCommandBuffer_T*, %"class.std::__1::vector.150", %"class.std::__1::vector.150", %"class.std::__1::vector.158", %"class.dawn_native::vulkan::detail::VkHandle.144", i8, [7 x i8] }>
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %"class.dawn_native::vulkan::detail::VkHandle.152"*, %"class.dawn_native::vulkan::detail::VkHandle.152"*, %"class.std::__1::__compressed_pair.153" }
%"class.dawn_native::vulkan::detail::VkHandle.152" = type { %struct.VkSemaphore_T* }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.dawn_native::vulkan::detail::VkHandle.152"* }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %class.Ref.160*, %class.Ref.160*, %"class.std::__1::__compressed_pair.161" }
%class.Ref.160 = type opaque
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %class.Ref.160* }
%"struct.dawn_native::vulkan::RenderPassCacheQuery" = type <{ %"class.ityp::bitset", %"class.ityp::bitset", %"class.ityp::array", %"class.ityp::array.0", i8, [3 x i8], i32, i32, i32, i32, [4 x i8] }>
%"class.ityp::bitset" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.ityp::array" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [4 x i32] }
%"class.ityp::array.0" = type { %"struct.std::__1::array.1" }
%"struct.std::__1::array.1" = type { [4 x i32] }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.184" }
%"struct.std::__1::pair.184" = type { %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"class.dawn_native::vulkan::detail::VkHandle.185" }
%"class.dawn_native::vulkan::detail::VkHandle.185" = type { %struct.VkRenderPass_T* }
%class.Result = type { i32, %"class.std::__1::unique_ptr.186", %"class.dawn_native::vulkan::detail::VkHandle.185" }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.194" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.196" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"struct.dawn_native::vulkan::RenderPassCache::CacheFuncs" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__bit_iterator" = type <{ i64*, i32, [4 x i8] }>
%"struct.std::__1::array.205" = type { [4 x %struct.VkAttachmentReference] }
%"struct.std::__1::array.206" = type { [9 x %struct.VkAttachmentDescription] }
%"class.BitSetIterator<4, unsigned char>::Iterator" = type { %"class.std::__1::bitset", i64, i64 }
%class.Result.207 = type { %"class.std::__1::unique_ptr.186" }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11dawn_native6vulkan20RenderPassCacheQueryENS3_6detail8VkHandleINS3_17VkTagVkRenderPassEP14VkRenderPass_TEEEENS_22__unordered_map_hasherIS4_SB_NS3_15RenderPassCache10CacheFuncsESE_Lb1EEENS_21__unordered_map_equalIS4_SB_SE_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS4_JRKS4_RSA_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11dawn_native6vulkan20RenderPassCacheQueryENS3_6detail8VkHandleINS3_17VkTagVkRenderPassEP14VkRenderPass_TEEEENS_22__unordered_map_hasherIS4_SB_NS3_15RenderPassCache10CacheFuncsESE_Lb1EEENS_21__unordered_map_equalIS4_SB_SE_SE_Lb1EEENS_9allocatorISB_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11dawn_native6vulkan20RenderPassCacheQueryENS3_6detail8VkHandleINS3_17VkTagVkRenderPassEP14VkRenderPass_TEEEENS_22__unordered_map_hasherIS4_SB_NS3_15RenderPassCache10CacheFuncsESE_Lb1EEENS_21__unordered_map_equalIS4_SB_SE_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm = comdat any

$_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_ = comdat any

$_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask = comdat any

@.str = private unnamed_addr constant [66 x i8] c"../../third_party/dawn/src/dawn_native/vulkan/RenderPassCache.cpp\00", align 1
@__func__._ZN11dawn_native6vulkan15RenderPassCache13GetRenderPassERKNS0_20RenderPassCacheQueryE = private unnamed_addr constant [14 x i8] c"GetRenderPass\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"CreateRenderPass\00", align 1
@__func__._ZNK11dawn_native6vulkan15RenderPassCache24CreateRenderPassForQueryERKNS0_20RenderPassCacheQueryE = private unnamed_addr constant [25 x i8] c"CreateRenderPassForQuery\00", align 1
@_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask = linkonce_odr hidden local_unnamed_addr global { i64 } { i64 15 }, comdat, align 8

@_ZN11dawn_native6vulkan15RenderPassCacheC1EPNS0_6DeviceE = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::RenderPassCache"*, %"class.dawn_native::vulkan::Device"*), void (%"class.dawn_native::vulkan::RenderPassCache"*, %"class.dawn_native::vulkan::Device"*)* @_ZN11dawn_native6vulkan15RenderPassCacheC2EPNS0_6DeviceE
@_ZN11dawn_native6vulkan15RenderPassCacheD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::RenderPassCache"*), void (%"class.dawn_native::vulkan::RenderPassCache"*)* @_ZN11dawn_native6vulkan15RenderPassCacheD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan20RenderPassCacheQuery8SetColorEhN4wgpu13TextureFormatENS2_6LoadOpEb(%"struct.dawn_native::vulkan::RenderPassCacheQuery"*, i8 zeroext, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = icmp ugt i8 %1, 3
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #8
  unreachable

8:                                                ; preds = %5
  %9 = zext i8 %1 to i64
  %10 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = shl i64 1, %9
  %12 = load i64, i64* %10, align 8
  %13 = or i64 %12, %11
  store i64 %13, i64* %10, align 8
  %14 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %0, i64 0, i32 2, i32 0, i32 0, i64 %9
  store i32 %2, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %0, i64 0, i32 3, i32 0, i32 0, i64 %9
  store i32 %3, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br i1 %4, label %17, label %20

17:                                               ; preds = %8
  %18 = load i64, i64* %16, align 8
  %19 = or i64 %18, %11
  br label %24

20:                                               ; preds = %8
  %21 = xor i64 %11, -1
  %22 = load i64, i64* %16, align 8
  %23 = and i64 %22, %21
  br label %24

24:                                               ; preds = %17, %20
  %25 = phi i64 [ %23, %20 ], [ %19, %17 ]
  store i64 %25, i64* %16, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11dawn_native6vulkan20RenderPassCacheQuery15SetDepthStencilEN4wgpu13TextureFormatENS2_6LoadOpES4_(%"struct.dawn_native::vulkan::RenderPassCacheQuery"* nocapture, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %0, i64 0, i32 4
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %0, i64 0, i32 6
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %0, i64 0, i32 7
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %0, i64 0, i32 8
  store i32 %3, i32* %8, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11dawn_native6vulkan20RenderPassCacheQuery14SetSampleCountEj(%"struct.dawn_native::vulkan::RenderPassCacheQuery"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %0, i64 0, i32 9
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15RenderPassCacheC2EPNS0_6DeviceE(%"class.dawn_native::vulkan::RenderPassCache"* nocapture, %"class.dawn_native::vulkan::Device"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPassCache", %"class.dawn_native::vulkan::RenderPassCache"* %0, i64 0, i32 0
  store %"class.dawn_native::vulkan::Device"* %1, %"class.dawn_native::vulkan::Device"** %3, align 8
  %4 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPassCache", %"class.dawn_native::vulkan::RenderPassCache"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPassCache", %"class.dawn_native::vulkan::RenderPassCache"* %0, i64 0, i32 1, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.181"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_map"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #9
  store i32 1065353216, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15RenderPassCacheD2Ev(%"class.dawn_native::vulkan::RenderPassCache"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPassCache", %"class.dawn_native::vulkan::RenderPassCache"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPassCache", %"class.dawn_native::vulkan::RenderPassCache"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast %"struct.std::__1::__hash_node_base"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPassCache", %"class.dawn_native::vulkan::RenderPassCache"* %0, i64 0, i32 0
  br label %78

9:                                                ; preds = %78, %1
  %10 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPassCache", %"class.dawn_native::vulkan::RenderPassCache"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %62, label %13

13:                                               ; preds = %9
  %14 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %3, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %13, %16
  %17 = phi %"struct.std::__1::__hash_node_base"* [ %19, %16 ], [ %14, %13 ]
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %17, i64 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %18, align 8
  %20 = bitcast %"struct.std::__1::__hash_node_base"* %17 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  %21 = icmp eq %"struct.std::__1::__hash_node_base"* %19, null
  br i1 %21, label %22, label %16

22:                                               ; preds = %16, %13
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %3, align 8
  %23 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPassCache", %"class.dawn_native::vulkan::RenderPassCache"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %44, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = add i64 %24, -1
  %29 = and i64 %24, 3
  %30 = icmp ult i64 %28, 3
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = sub i64 %24, %29
  br label %45

33:                                               ; preds = %45, %26
  %34 = phi i64 [ 0, %26 ], [ %59, %45 ]
  %35 = icmp eq i64 %29, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %33, %36
  %37 = phi i64 [ %41, %36 ], [ %34, %33 ]
  %38 = phi i64 [ %42, %36 ], [ %29, %33 ]
  %39 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %27, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, i64 %37
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %40, align 8
  %41 = add nuw i64 %37, 1
  %42 = add i64 %38, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %36, !llvm.loop !2

44:                                               ; preds = %33, %36, %22
  store i64 0, i64* %10, align 8
  br label %62

45:                                               ; preds = %45, %31
  %46 = phi i64 [ 0, %31 ], [ %59, %45 ]
  %47 = phi i64 [ %32, %31 ], [ %60, %45 ]
  %48 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %27, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, i64 %46
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %49, align 8
  %50 = or i64 %46, 1
  %51 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %27, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %51, i64 %50
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %52, align 8
  %53 = or i64 %46, 2
  %54 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %27, align 8
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, i64 %53
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %55, align 8
  %56 = or i64 %46, 3
  %57 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %27, align 8
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %57, i64 %56
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %58, align 8
  %59 = add nuw i64 %46, 4
  %60 = add i64 %47, -4
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %33, label %45

62:                                               ; preds = %9, %44
  %63 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %3, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base"* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %62, %65
  %66 = phi %"struct.std::__1::__hash_node_base"* [ %68, %65 ], [ %63, %62 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = bitcast %"struct.std::__1::__hash_node_base"* %66 to i8*
  tail call void @_ZdlPv(i8* %69) #10
  %70 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  br i1 %70, label %71, label %65

71:                                               ; preds = %65, %62
  %72 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %72, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base"** %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = bitcast %"struct.std::__1::__hash_node_base"** %73 to i8*
  tail call void @_ZdlPv(i8* %76) #10
  br label %77

77:                                               ; preds = %71, %75
  ret void

78:                                               ; preds = %7, %78
  %79 = phi i64 [ %5, %7 ], [ %88, %78 ]
  %80 = inttoptr i64 %79 to %"struct.std::__1::__hash_node"*
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %80, i64 0, i32 2, i32 0, i32 1, i32 0
  %82 = load %struct.VkRenderPass_T*, %struct.VkRenderPass_T** %81, align 8
  %83 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %8, align 8
  %84 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %83, i64 0, i32 1, i32 131
  %85 = load void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)** %84, align 8
  %86 = tail call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %83) #9
  tail call void %85(%struct.VkDevice_T* %86, %struct.VkRenderPass_T* %82, %struct.VkAllocationCallbacks* null) #9
  %87 = inttoptr i64 %79 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %9, label %78
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan15RenderPassCache13GetRenderPassERKNS0_20RenderPassCacheQueryE(%class.Result* noalias nocapture sret, %"class.dawn_native::vulkan::RenderPassCache"*, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.dawn_native::vulkan::detail::VkHandle.185", align 8
  %5 = alloca %class.Result, align 8
  %6 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPassCache", %"class.dawn_native::vulkan::RenderPassCache"* %1, i64 0, i32 1
  %7 = tail call i64 @_ZNK11dawn_native6vulkan15RenderPassCache10CacheFuncsclERKNS0_20RenderPassCacheQueryE(%"struct.dawn_native::vulkan::RenderPassCache::CacheFuncs"* undef, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72) %2) #9
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPassCache", %"class.dawn_native::vulkan::RenderPassCache"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %67, label %11

11:                                               ; preds = %3
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #9, !range !4
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ult i64 %7, %9
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %19, %17, %14
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %67, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %26, i64 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %67, label %32

32:                                               ; preds = %28
  %33 = add i64 %9, -1
  br label %34

34:                                               ; preds = %54, %32
  %35 = phi %"struct.std::__1::__hash_node_base"* [ %30, %32 ], [ %56, %54 ]
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %33
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %45, %43, %41
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %54, label %67

50:                                               ; preds = %34
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to %"struct.dawn_native::vulkan::RenderPassCacheQuery"*
  %53 = tail call zeroext i1 @_ZNK11dawn_native6vulkan15RenderPassCache10CacheFuncsclERKNS0_20RenderPassCacheQueryES5_(%"struct.dawn_native::vulkan::RenderPassCache::CacheFuncs"* undef, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72) %52, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72) %2) #9
  br i1 %53, label %58, label %54

54:                                               ; preds = %50, %47
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base"* %56, null
  br i1 %57, label %67, label %34

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %35, i64 11
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %64 = bitcast %"class.std::__1::unique_ptr.186"* %63 to i64*
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2
  %66 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.185"* %65 to i64*
  store i64 %61, i64* %66, align 8
  br label %120

67:                                               ; preds = %47, %54, %21, %3, %28
  %68 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.185"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #9
  %69 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.185", %"class.dawn_native::vulkan::detail::VkHandle.185"* %4, i64 0, i32 0
  store %struct.VkRenderPass_T* null, %struct.VkRenderPass_T** %69, align 8
  %70 = bitcast %class.Result* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 24, i1 false)
  call void @_ZNK11dawn_native6vulkan15RenderPassCache24CreateRenderPassForQueryERKNS0_20RenderPassCacheQueryE(%class.Result* nonnull sret %5, %"class.dawn_native::vulkan::RenderPassCache"* %1, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72) %2)
  %71 = getelementptr inbounds %class.Result, %class.Result* %5, i64 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 1
  store i32 2, i32* %71, align 8
  br i1 %73, label %74, label %82, !prof !5

74:                                               ; preds = %67
  %75 = getelementptr inbounds %class.Result, %class.Result* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %76 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %75, align 8
  %77 = ptrtoint %"class.dawn_native::ErrorData"* %76 to i64
  tail call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* %76, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__._ZN11dawn_native6vulkan15RenderPassCache13GetRenderPassERKNS0_20RenderPassCacheQueryE, i64 0, i64 0), i32 80) #9
  %78 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 1, i32* %78, align 8
  %79 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %80 = bitcast %"class.std::__1::unique_ptr.186"* %79 to i64*
  store i64 %77, i64* %80, align 8
  %81 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2, i32 0
  store %struct.VkRenderPass_T* null, %struct.VkRenderPass_T** %81, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #9
  br label %119

82:                                               ; preds = %67
  %83 = getelementptr inbounds %class.Result, %class.Result* %5, i64 0, i32 2
  %84 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.185"* %83 to i64*
  %85 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.185"* %4 to i64*
  %86 = load i64, i64* %84, align 8
  store i64 %86, i64* %85, align 8
  %87 = getelementptr inbounds %class.Result, %class.Result* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %87, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %87, align 8
  %89 = icmp eq %"class.dawn_native::ErrorData"* %88, null
  br i1 %89, label %110, label %90

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %88, i64 0, i32 2, i32 0, i32 0
  %92 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %91, align 8
  %93 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %92, null
  br i1 %93, label %99, label %94

94:                                               ; preds = %90
  %95 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %92 to i64
  %96 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %88, i64 0, i32 2, i32 0, i32 1
  %97 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %96 to i64*
  store i64 %95, i64* %97, align 8
  %98 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %92 to i8*
  tail call void @_ZdlPv(i8* %98) #10
  br label %99

99:                                               ; preds = %94, %90
  %100 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %88, i64 0, i32 1
  %101 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  tail call void @_ZdlPv(i8* %107) #10
  br label %108

108:                                              ; preds = %105, %99
  %109 = bitcast %"class.dawn_native::ErrorData"* %88 to i8*
  tail call void @_ZdlPv(i8* %109) #10
  br label %110

110:                                              ; preds = %82, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #9
  %111 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %6, i64 0, i32 0
  %112 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11dawn_native6vulkan20RenderPassCacheQueryENS3_6detail8VkHandleINS3_17VkTagVkRenderPassEP14VkRenderPass_TEEEENS_22__unordered_map_hasherIS4_SB_NS3_15RenderPassCache10CacheFuncsESE_Lb1EEENS_21__unordered_map_equalIS4_SB_SE_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS4_JRKS4_RSA_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %111, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72) %2, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72) %2, %"class.dawn_native::vulkan::detail::VkHandle.185"* nonnull dereferenceable(8) %4) #9
  %113 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 0, i32* %113, align 8
  %114 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %115 = bitcast %"class.std::__1::unique_ptr.186"* %114 to i64*
  store i64 0, i64* %115, align 8
  %116 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2
  %117 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.185"* %116 to i64*
  %118 = load i64, i64* %85, align 8
  store i64 %118, i64* %117, align 8
  br label %119

119:                                              ; preds = %74, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #9
  br label %120

120:                                              ; preds = %119, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11dawn_native6vulkan15RenderPassCache24CreateRenderPassForQueryERKNS0_20RenderPassCacheQueryE(%class.Result* noalias nocapture sret, %"class.dawn_native::vulkan::RenderPassCache"* nocapture readonly, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = alloca %"class.std::__1::__bit_iterator", align 8
  %9 = alloca %"class.std::__1::__bit_iterator", align 8
  %10 = alloca %"class.std::__1::__bit_iterator", align 8
  %11 = alloca %"class.std::__1::__bit_iterator", align 8
  %12 = alloca %"class.std::__1::__bit_iterator", align 8
  %13 = alloca %"class.std::__1::__bit_iterator", align 8
  %14 = alloca %"class.std::__1::__bit_iterator", align 8
  %15 = alloca %"class.std::__1::__bit_iterator", align 8
  %16 = alloca %"class.std::__1::__bit_iterator", align 8
  %17 = alloca %"class.std::__1::__bit_iterator", align 8
  %18 = alloca %"class.std::__1::__bit_iterator", align 8
  %19 = alloca %"class.std::__1::__bit_iterator", align 8
  %20 = alloca %"struct.std::__1::array.205", align 4
  %21 = alloca %"struct.std::__1::array.205", align 4
  %22 = alloca %struct.VkAttachmentReference, align 4
  %23 = alloca %"struct.std::__1::array.206", align 4
  %24 = alloca %"class.BitSetIterator<4, unsigned char>::Iterator", align 8
  %25 = alloca %"class.BitSetIterator<4, unsigned char>::Iterator", align 8
  %26 = alloca %struct.VkSubpassDescription, align 8
  %27 = alloca %struct.VkRenderPassCreateInfo, align 8
  %28 = alloca %"class.dawn_native::vulkan::detail::VkHandle.185", align 8
  %29 = alloca %class.Result.207, align 8
  %30 = bitcast %"struct.std::__1::array.205"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #9
  %31 = bitcast %"struct.std::__1::array.205"* %21 to i8*
  %32 = bitcast %"struct.std::__1::array.205"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %32, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #9
  %33 = bitcast %struct.VkAttachmentReference* %22 to i8*
  %34 = bitcast %"struct.std::__1::array.205"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %34, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  %35 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %22, i64 0, i32 0
  store i32 -1431655766, i32* %35, align 4
  %36 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %22, i64 0, i32 1
  store i32 -1431655766, i32* %36, align 4
  %37 = bitcast %"struct.std::__1::array.206"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 324, i8* nonnull %37) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %37, i8 0, i64 324, i1 false)
  %38 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 9
  %39 = load i32, i32* %38, align 8
  %40 = tail call i32 @_ZN11dawn_native6vulkan17VulkanSampleCountEj(i32 %39) #9
  %41 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i64, i64* %41, align 8, !noalias !6
  %43 = bitcast %"class.BitSetIterator<4, unsigned char>::Iterator"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #9
  %44 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %24, i64 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %24, i64 0, i32 1
  %46 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %24, i64 0, i32 2
  store i64 %42, i64* %44, align 8, !alias.scope !9
  %47 = bitcast i64* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #9, !alias.scope !9
  %48 = and i64 %42, 15
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %83, label %50

50:                                               ; preds = %3
  %51 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %24 to i64
  %52 = bitcast %"class.std::__1::__bit_iterator"* %19 to i8*
  %53 = bitcast %"class.std::__1::__bit_iterator"* %16 to i8*
  %54 = bitcast %"class.std::__1::__bit_iterator"* %17 to i8*
  %55 = bitcast %"class.std::__1::__bit_iterator"* %18 to i8*
  %56 = bitcast %"class.std::__1::__bit_iterator"* %16 to i64*
  %57 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %16, i64 0, i32 1
  %58 = bitcast %"class.std::__1::__bit_iterator"* %17 to i64*
  %59 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %17, i64 0, i32 1
  %60 = bitcast %"class.std::__1::__bit_iterator"* %18 to i64*
  %61 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %18, i64 0, i32 1
  br label %62

62:                                               ; preds = %74, %50
  %63 = phi i64 [ %42, %50 ], [ %76, %74 ]
  %64 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %65 = and i64 %64, %63
  %66 = and i64 %65, 4294967295
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %62
  %69 = trunc i64 %65 to i32
  %70 = call i32 @_Z11ScanForwardj(i32 %69) #9
  %71 = zext i32 %70 to i64
  %72 = load i64, i64* %46, align 8, !alias.scope !9
  %73 = add i64 %72, %71
  br label %80

74:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #9, !noalias !9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #9, !noalias !9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #9, !noalias !9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #9, !noalias !9
  store i64 %51, i64* %56, align 8, !noalias !12
  store i32 4, i32* %57, align 8, !noalias !12
  store i64 %51, i64* %58, align 8, !noalias !12
  store i32 4, i32* %59, align 8, !noalias !12
  store i64 %51, i64* %60, align 8, !noalias !12
  store i32 0, i32* %61, align 8, !noalias !12
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %19, %"class.std::__1::__bit_iterator"* nonnull %16, %"class.std::__1::__bit_iterator"* nonnull %17, %"class.std::__1::__bit_iterator"* nonnull %18) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #9, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #9, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #9, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #9, !noalias !9
  %75 = load i64, i64* %44, align 8, !alias.scope !9
  %76 = and i64 %75, -16
  store i64 %76, i64* %44, align 8, !alias.scope !9
  %77 = load i64, i64* %46, align 8, !alias.scope !9
  %78 = add i64 %77, 32
  store i64 %78, i64* %46, align 8, !alias.scope !9
  %79 = icmp ult i64 %78, 4
  br i1 %79, label %62, label %80

80:                                               ; preds = %74, %68
  %81 = phi i64 [ %72, %68 ], [ %78, %74 ]
  %82 = phi i64 [ %73, %68 ], [ 0, %74 ]
  store i64 %82, i64* %45, align 8, !alias.scope !9
  br label %85

83:                                               ; preds = %3
  store i64 32, i64* %46, align 8, !alias.scope !9
  %84 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %24 to i64
  br label %85

85:                                               ; preds = %80, %83
  %86 = phi i64 [ %51, %80 ], [ %84, %83 ]
  %87 = phi i64 [ %82, %80 ], [ 0, %83 ]
  %88 = phi i64 [ %81, %80 ], [ 32, %83 ]
  %89 = getelementptr inbounds %"class.dawn_native::vulkan::RenderPassCache", %"class.dawn_native::vulkan::RenderPassCache"* %1, i64 0, i32 0
  %90 = bitcast %"class.std::__1::__bit_iterator"* %15 to i8*
  %91 = bitcast %"class.std::__1::__bit_iterator"* %12 to i8*
  %92 = bitcast %"class.std::__1::__bit_iterator"* %13 to i8*
  %93 = bitcast %"class.std::__1::__bit_iterator"* %14 to i8*
  %94 = bitcast %"class.std::__1::__bit_iterator"* %12 to i64*
  %95 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %12, i64 0, i32 1
  %96 = bitcast %"class.std::__1::__bit_iterator"* %13 to i64*
  %97 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %13, i64 0, i32 1
  %98 = bitcast %"class.std::__1::__bit_iterator"* %14 to i64*
  %99 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %14, i64 0, i32 1
  br label %100

100:                                              ; preds = %163, %85
  %101 = phi i64 [ %87, %85 ], [ %165, %163 ]
  %102 = phi i64 [ %88, %85 ], [ %164, %163 ]
  %103 = phi i32 [ 0, %85 ], [ %133, %163 ]
  %104 = icmp eq i64 %102, 32
  br i1 %104, label %105, label %113

105:                                              ; preds = %100
  %106 = load i64, i64* %44, align 8
  %107 = and i64 %106, 15
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %113

109:                                              ; preds = %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #9
  %110 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 4
  %111 = load i8, i8* %110, align 8, !range !15
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %190, label %166

113:                                              ; preds = %105, %100
  %114 = zext i32 %103 to i64
  %115 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %20, i64 0, i32 0, i64 %114, i32 0
  store i32 %103, i32* %115, align 4
  %116 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %20, i64 0, i32 0, i64 %114, i32 1
  store i32 2, i32* %116, align 4
  %117 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %114, i32 0
  store i32 0, i32* %117, align 4
  %118 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %89, align 8
  %119 = and i64 %101, 255
  %120 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 2, i32 0, i32 0, i64 %119
  %121 = load i32, i32* %120, align 4
  %122 = call i32 @_ZN11dawn_native6vulkan17VulkanImageFormatEPKNS0_6DeviceEN4wgpu13TextureFormatE(%"class.dawn_native::vulkan::Device"* %118, i32 %121) #9
  %123 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %114, i32 1
  store i32 %122, i32* %123, align 4
  %124 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %114, i32 2
  store i32 %40, i32* %124, align 4
  %125 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 3, i32 0, i32 0, i64 %119
  %126 = load i32, i32* %125, align 4
  %127 = icmp ne i32 %126, 1
  %128 = zext i1 %127 to i32
  %129 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %114, i32 3
  store i32 %128, i32* %129, align 4
  %130 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %114, i32 4
  store i32 0, i32* %130, align 4
  %131 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %114, i32 7
  store i32 2, i32* %131, align 4
  %132 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %114, i32 8
  store i32 2, i32* %132, align 4
  %133 = add i32 %103, 1
  %134 = load i64, i64* %45, align 8
  %135 = load i64, i64* %46, align 8
  %136 = sub i64 %134, %135
  %137 = icmp ugt i64 %136, 3
  br i1 %137, label %138, label %139

138:                                              ; preds = %113
  call void @abort() #8
  unreachable

139:                                              ; preds = %113
  %140 = shl i64 1, %136
  %141 = xor i64 %140, -1
  %142 = load i64, i64* %44, align 8
  %143 = and i64 %142, %141
  store i64 %143, i64* %44, align 8
  %144 = icmp ult i64 %135, 4
  br i1 %144, label %145, label %163

145:                                              ; preds = %139, %157
  %146 = phi i64 [ %159, %157 ], [ %143, %139 ]
  %147 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %148 = and i64 %147, %146
  %149 = and i64 %148, 4294967295
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %157, label %151

151:                                              ; preds = %145
  %152 = trunc i64 %148 to i32
  %153 = call i32 @_Z11ScanForwardj(i32 %152) #9
  %154 = zext i32 %153 to i64
  %155 = load i64, i64* %46, align 8
  %156 = add i64 %155, %154
  br label %163

157:                                              ; preds = %145
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %93) #9
  store i64 %86, i64* %94, align 8, !noalias !16
  store i32 4, i32* %95, align 8, !noalias !16
  store i64 %86, i64* %96, align 8, !noalias !16
  store i32 4, i32* %97, align 8, !noalias !16
  store i64 %86, i64* %98, align 8, !noalias !16
  store i32 0, i32* %99, align 8, !noalias !16
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %15, %"class.std::__1::__bit_iterator"* nonnull %12, %"class.std::__1::__bit_iterator"* nonnull %13, %"class.std::__1::__bit_iterator"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %93) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #9
  %158 = load i64, i64* %44, align 8
  %159 = and i64 %158, -16
  store i64 %159, i64* %44, align 8
  %160 = load i64, i64* %46, align 8
  %161 = add i64 %160, 32
  store i64 %161, i64* %46, align 8
  %162 = icmp ult i64 %161, 4
  br i1 %162, label %145, label %163

163:                                              ; preds = %157, %139, %151
  %164 = phi i64 [ %155, %151 ], [ %135, %139 ], [ %161, %157 ]
  %165 = phi i64 [ %156, %151 ], [ 0, %139 ], [ 0, %157 ]
  store i64 %165, i64* %45, align 8
  br label %100

166:                                              ; preds = %109
  %167 = zext i32 %103 to i64
  store i32 %103, i32* %35, align 4
  store i32 3, i32* %36, align 4
  %168 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %167, i32 0
  store i32 0, i32* %168, align 4
  %169 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %89, align 8
  %170 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 6
  %171 = load i32, i32* %170, align 4
  %172 = call i32 @_ZN11dawn_native6vulkan17VulkanImageFormatEPKNS0_6DeviceEN4wgpu13TextureFormatE(%"class.dawn_native::vulkan::Device"* %169, i32 %171) #9
  %173 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %167, i32 1
  store i32 %172, i32* %173, align 4
  %174 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %167, i32 2
  store i32 %40, i32* %174, align 4
  %175 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 7
  %176 = load i32, i32* %175, align 8
  %177 = icmp ne i32 %176, 1
  %178 = zext i1 %177 to i32
  %179 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %167, i32 3
  store i32 %178, i32* %179, align 4
  %180 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %167, i32 4
  store i32 0, i32* %180, align 4
  %181 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 8
  %182 = load i32, i32* %181, align 4
  %183 = icmp ne i32 %182, 1
  %184 = zext i1 %183 to i32
  %185 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %167, i32 5
  store i32 %184, i32* %185, align 4
  %186 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %167, i32 6
  store i32 0, i32* %186, align 4
  %187 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %167, i32 7
  store i32 3, i32* %187, align 4
  %188 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %167, i32 8
  store i32 3, i32* %188, align 4
  %189 = add i32 %103, 1
  br label %190

190:                                              ; preds = %109, %166
  %191 = phi %struct.VkAttachmentReference* [ %22, %166 ], [ null, %109 ]
  %192 = phi i32 [ %189, %166 ], [ %103, %109 ]
  %193 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %194 = load i64, i64* %193, align 8, !noalias !19
  %195 = bitcast %"class.BitSetIterator<4, unsigned char>::Iterator"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #9
  %196 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %25, i64 0, i32 0, i32 0, i32 0
  %197 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %25, i64 0, i32 1
  %198 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %25, i64 0, i32 2
  store i64 %194, i64* %196, align 8, !alias.scope !22
  %199 = bitcast i64* %197 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %199, i8 0, i64 16, i1 false) #9, !alias.scope !22
  %200 = and i64 %194, 15
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %235, label %202

202:                                              ; preds = %190
  %203 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %25 to i64
  %204 = bitcast %"class.std::__1::__bit_iterator"* %11 to i8*
  %205 = bitcast %"class.std::__1::__bit_iterator"* %8 to i8*
  %206 = bitcast %"class.std::__1::__bit_iterator"* %9 to i8*
  %207 = bitcast %"class.std::__1::__bit_iterator"* %10 to i8*
  %208 = bitcast %"class.std::__1::__bit_iterator"* %8 to i64*
  %209 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %8, i64 0, i32 1
  %210 = bitcast %"class.std::__1::__bit_iterator"* %9 to i64*
  %211 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %9, i64 0, i32 1
  %212 = bitcast %"class.std::__1::__bit_iterator"* %10 to i64*
  %213 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %10, i64 0, i32 1
  br label %214

214:                                              ; preds = %226, %202
  %215 = phi i64 [ %194, %202 ], [ %228, %226 ]
  %216 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %217 = and i64 %216, %215
  %218 = and i64 %217, 4294967295
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %226, label %220

220:                                              ; preds = %214
  %221 = trunc i64 %217 to i32
  %222 = call i32 @_Z11ScanForwardj(i32 %221) #9
  %223 = zext i32 %222 to i64
  %224 = load i64, i64* %198, align 8, !alias.scope !22
  %225 = add i64 %224, %223
  br label %232

226:                                              ; preds = %214
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %204) #9, !noalias !22
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %205) #9, !noalias !22
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %206) #9, !noalias !22
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %207) #9, !noalias !22
  store i64 %203, i64* %208, align 8, !noalias !25
  store i32 4, i32* %209, align 8, !noalias !25
  store i64 %203, i64* %210, align 8, !noalias !25
  store i32 4, i32* %211, align 8, !noalias !25
  store i64 %203, i64* %212, align 8, !noalias !25
  store i32 0, i32* %213, align 8, !noalias !25
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %11, %"class.std::__1::__bit_iterator"* nonnull %8, %"class.std::__1::__bit_iterator"* nonnull %9, %"class.std::__1::__bit_iterator"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %205) #9, !noalias !22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #9, !noalias !22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %207) #9, !noalias !22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204) #9, !noalias !22
  %227 = load i64, i64* %196, align 8, !alias.scope !22
  %228 = and i64 %227, -16
  store i64 %228, i64* %196, align 8, !alias.scope !22
  %229 = load i64, i64* %198, align 8, !alias.scope !22
  %230 = add i64 %229, 32
  store i64 %230, i64* %198, align 8, !alias.scope !22
  %231 = icmp ult i64 %230, 4
  br i1 %231, label %214, label %232

232:                                              ; preds = %226, %220
  %233 = phi i64 [ %224, %220 ], [ %230, %226 ]
  %234 = phi i64 [ %225, %220 ], [ 0, %226 ]
  store i64 %234, i64* %197, align 8, !alias.scope !22
  br label %237

235:                                              ; preds = %190
  store i64 32, i64* %198, align 8, !alias.scope !22
  %236 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %25 to i64
  br label %237

237:                                              ; preds = %232, %235
  %238 = phi i64 [ %203, %232 ], [ %236, %235 ]
  %239 = phi i64 [ %234, %232 ], [ 0, %235 ]
  %240 = phi i64 [ %233, %232 ], [ 32, %235 ]
  %241 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  %242 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  %243 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  %244 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  %245 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  %246 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  %247 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  %248 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  %249 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  %250 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  br label %251

251:                                              ; preds = %330, %237
  %252 = phi i64 [ %239, %237 ], [ %332, %330 ]
  %253 = phi i64 [ %240, %237 ], [ %331, %330 ]
  %254 = phi i32 [ 0, %237 ], [ %300, %330 ]
  %255 = phi i32 [ %192, %237 ], [ %299, %330 ]
  %256 = icmp eq i64 %253, 32
  br i1 %256, label %257, label %282

257:                                              ; preds = %251
  %258 = load i64, i64* %196, align 8
  %259 = and i64 %258, 15
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %282

261:                                              ; preds = %257
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195) #9
  %262 = icmp ult i32 %254, %103
  br i1 %262, label %263, label %348

263:                                              ; preds = %261
  %264 = zext i32 %254 to i64
  %265 = zext i32 %103 to i64
  %266 = sub nsw i64 %265, %264
  %267 = xor i64 %264, -1
  %268 = add nsw i64 %267, %265
  %269 = and i64 %266, 3
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %279, label %271

271:                                              ; preds = %263, %271
  %272 = phi i64 [ %276, %271 ], [ %264, %263 ]
  %273 = phi i64 [ %277, %271 ], [ %269, %263 ]
  %274 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %21, i64 0, i32 0, i64 %272, i32 0
  store i32 -1, i32* %274, align 4
  %275 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %21, i64 0, i32 0, i64 %272, i32 1
  store i32 2, i32* %275, align 4
  %276 = add nuw nsw i64 %272, 1
  %277 = add i64 %273, -1
  %278 = icmp eq i64 %277, 0
  br i1 %278, label %279, label %271, !llvm.loop !28

279:                                              ; preds = %271, %263
  %280 = phi i64 [ %264, %263 ], [ %276, %271 ]
  %281 = icmp ult i64 %268, 3
  br i1 %281, label %348, label %333

282:                                              ; preds = %257, %251
  %283 = zext i32 %254 to i64
  %284 = zext i32 %255 to i64
  %285 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %21, i64 0, i32 0, i64 %283, i32 0
  store i32 %255, i32* %285, align 4
  %286 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %21, i64 0, i32 0, i64 %283, i32 1
  store i32 2, i32* %286, align 4
  %287 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %284, i32 0
  store i32 0, i32* %287, align 4
  %288 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %89, align 8
  %289 = and i64 %252, 255
  %290 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 2, i32 0, i32 0, i64 %289
  %291 = load i32, i32* %290, align 4
  %292 = call i32 @_ZN11dawn_native6vulkan17VulkanImageFormatEPKNS0_6DeviceEN4wgpu13TextureFormatE(%"class.dawn_native::vulkan::Device"* %288, i32 %291) #9
  %293 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %284, i32 1
  store i32 %292, i32* %293, align 4
  %294 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %284, i32 2
  store i32 1, i32* %294, align 4
  %295 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %284, i32 3
  store i32 2, i32* %295, align 4
  %296 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %284, i32 4
  store i32 0, i32* %296, align 4
  %297 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %284, i32 7
  store i32 2, i32* %297, align 4
  %298 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 %284, i32 8
  store i32 2, i32* %298, align 4
  %299 = add i32 %255, 1
  %300 = add i32 %254, 1
  %301 = load i64, i64* %197, align 8
  %302 = load i64, i64* %198, align 8
  %303 = sub i64 %301, %302
  %304 = icmp ugt i64 %303, 3
  br i1 %304, label %305, label %306

305:                                              ; preds = %282
  call void @abort() #8
  unreachable

306:                                              ; preds = %282
  %307 = shl i64 1, %303
  %308 = xor i64 %307, -1
  %309 = load i64, i64* %196, align 8
  %310 = and i64 %309, %308
  store i64 %310, i64* %196, align 8
  %311 = icmp ult i64 %302, 4
  br i1 %311, label %312, label %330

312:                                              ; preds = %306, %324
  %313 = phi i64 [ %326, %324 ], [ %310, %306 ]
  %314 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %315 = and i64 %314, %313
  %316 = and i64 %315, 4294967295
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %324, label %318

318:                                              ; preds = %312
  %319 = trunc i64 %315 to i32
  %320 = call i32 @_Z11ScanForwardj(i32 %319) #9
  %321 = zext i32 %320 to i64
  %322 = load i64, i64* %198, align 8
  %323 = add i64 %322, %321
  br label %330

324:                                              ; preds = %312
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %241) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %242) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %243) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %244) #9
  store i64 %238, i64* %245, align 8, !noalias !29
  store i32 4, i32* %246, align 8, !noalias !29
  store i64 %238, i64* %247, align 8, !noalias !29
  store i32 4, i32* %248, align 8, !noalias !29
  store i64 %238, i64* %249, align 8, !noalias !29
  store i32 0, i32* %250, align 8, !noalias !29
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %242) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %243) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %244) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %241) #9
  %325 = load i64, i64* %196, align 8
  %326 = and i64 %325, -16
  store i64 %326, i64* %196, align 8
  %327 = load i64, i64* %198, align 8
  %328 = add i64 %327, 32
  store i64 %328, i64* %198, align 8
  %329 = icmp ult i64 %328, 4
  br i1 %329, label %312, label %330

330:                                              ; preds = %324, %306, %318
  %331 = phi i64 [ %322, %318 ], [ %302, %306 ], [ %328, %324 ]
  %332 = phi i64 [ %323, %318 ], [ 0, %306 ], [ 0, %324 ]
  store i64 %332, i64* %197, align 8
  br label %251

333:                                              ; preds = %279, %333
  %334 = phi i64 [ %346, %333 ], [ %280, %279 ]
  %335 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %21, i64 0, i32 0, i64 %334, i32 0
  store i32 -1, i32* %335, align 4
  %336 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %21, i64 0, i32 0, i64 %334, i32 1
  store i32 2, i32* %336, align 4
  %337 = add nuw nsw i64 %334, 1
  %338 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %21, i64 0, i32 0, i64 %337, i32 0
  store i32 -1, i32* %338, align 4
  %339 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %21, i64 0, i32 0, i64 %337, i32 1
  store i32 2, i32* %339, align 4
  %340 = add nuw nsw i64 %334, 2
  %341 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %21, i64 0, i32 0, i64 %340, i32 0
  store i32 -1, i32* %341, align 4
  %342 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %21, i64 0, i32 0, i64 %340, i32 1
  store i32 2, i32* %342, align 4
  %343 = add nuw nsw i64 %334, 3
  %344 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %21, i64 0, i32 0, i64 %343, i32 0
  store i32 -1, i32* %344, align 4
  %345 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %21, i64 0, i32 0, i64 %343, i32 1
  store i32 2, i32* %345, align 4
  %346 = add nuw nsw i64 %334, 4
  %347 = icmp eq i64 %346, %265
  br i1 %347, label %348, label %333

348:                                              ; preds = %279, %333, %261
  %349 = load i64, i64* %193, align 8
  %350 = and i64 %349, 15
  %351 = icmp eq i64 %350, 0
  %352 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %21, i64 0, i32 0, i64 0
  %353 = select i1 %351, %struct.VkAttachmentReference* null, %struct.VkAttachmentReference* %352
  %354 = bitcast %struct.VkSubpassDescription* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %354) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %354, i8 -86, i64 64, i1 false)
  %355 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %26, i64 0, i32 0
  store i32 0, i32* %355, align 8
  %356 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %26, i64 0, i32 1
  store i32 0, i32* %356, align 4
  %357 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %26, i64 0, i32 2
  store i32 0, i32* %357, align 8
  %358 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %26, i64 0, i32 3
  store %struct.VkAttachmentReference* null, %struct.VkAttachmentReference** %358, align 8
  %359 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %26, i64 0, i32 4
  store i32 %103, i32* %359, align 8
  %360 = getelementptr inbounds %"struct.std::__1::array.205", %"struct.std::__1::array.205"* %20, i64 0, i32 0, i64 0
  %361 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %26, i64 0, i32 5
  store %struct.VkAttachmentReference* %360, %struct.VkAttachmentReference** %361, align 8
  %362 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %26, i64 0, i32 6
  store %struct.VkAttachmentReference* %353, %struct.VkAttachmentReference** %362, align 8
  %363 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %26, i64 0, i32 7
  store %struct.VkAttachmentReference* %191, %struct.VkAttachmentReference** %363, align 8
  %364 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %26, i64 0, i32 8
  store i32 0, i32* %364, align 8
  %365 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %26, i64 0, i32 9
  store i32* null, i32** %365, align 8
  %366 = bitcast %struct.VkRenderPassCreateInfo* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %366) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %366, i8 -86, i64 56, i1 false)
  %367 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %27, i64 0, i32 0
  store i32 38, i32* %367, align 8
  %368 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %27, i64 0, i32 1
  store i8* null, i8** %368, align 8
  %369 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %27, i64 0, i32 2
  store i32 0, i32* %369, align 8
  %370 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %27, i64 0, i32 3
  store i32 %255, i32* %370, align 4
  %371 = getelementptr inbounds %"struct.std::__1::array.206", %"struct.std::__1::array.206"* %23, i64 0, i32 0, i64 0
  %372 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %27, i64 0, i32 4
  store %struct.VkAttachmentDescription* %371, %struct.VkAttachmentDescription** %372, align 8
  %373 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %27, i64 0, i32 5
  store i32 1, i32* %373, align 8
  %374 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %27, i64 0, i32 6
  store %struct.VkSubpassDescription* %26, %struct.VkSubpassDescription** %374, align 8
  %375 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %27, i64 0, i32 7
  store i32 0, i32* %375, align 8
  %376 = getelementptr inbounds %struct.VkRenderPassCreateInfo, %struct.VkRenderPassCreateInfo* %27, i64 0, i32 8
  store %struct.VkSubpassDependency* null, %struct.VkSubpassDependency** %376, align 8
  %377 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.185"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %377) #9
  %378 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.185", %"class.dawn_native::vulkan::detail::VkHandle.185"* %28, i64 0, i32 0
  store %struct.VkRenderPass_T* null, %struct.VkRenderPass_T** %378, align 8
  %379 = bitcast %class.Result.207* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %379) #9
  %380 = getelementptr inbounds %class.Result.207, %class.Result.207* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.dawn_native::ErrorData"* inttoptr (i64 -6148914691236517206 to %"class.dawn_native::ErrorData"*), %"class.dawn_native::ErrorData"** %380, align 8
  %381 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %89, align 8
  %382 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %381, i64 0, i32 1, i32 113
  %383 = load i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)** %382, align 8
  %384 = call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %381) #9
  %385 = call i32 %383(%struct.VkDevice_T* %384, %struct.VkRenderPassCreateInfo* nonnull %27, %struct.VkAllocationCallbacks* null, %struct.VkRenderPass_T** nonnull %378) #9
  call void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.207* nonnull sret %29, i32 %385, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #9
  %386 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %380, align 8
  %387 = icmp eq %"class.dawn_native::ErrorData"* %386, null
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %380, align 8
  br i1 %387, label %417, label %388, !prof !32

388:                                              ; preds = %348
  %389 = ptrtoint %"class.dawn_native::ErrorData"* %386 to i64
  call void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"* nonnull %386, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__._ZNK11dawn_native6vulkan15RenderPassCache24CreateRenderPassForQueryERKNS0_20RenderPassCacheQueryE, i64 0, i64 0), i32 201) #9
  %390 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 1, i32* %390, align 8
  %391 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %392 = bitcast %"class.std::__1::unique_ptr.186"* %391 to i64*
  store i64 %389, i64* %392, align 8
  %393 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2, i32 0
  store %struct.VkRenderPass_T* null, %struct.VkRenderPass_T** %393, align 8
  %394 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %380, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %380, align 8
  %395 = icmp eq %"class.dawn_native::ErrorData"* %394, null
  br i1 %395, label %416, label %396

396:                                              ; preds = %388
  %397 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %394, i64 0, i32 2, i32 0, i32 0
  %398 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %397, align 8
  %399 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %398, null
  br i1 %399, label %405, label %400

400:                                              ; preds = %396
  %401 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %398 to i64
  %402 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %394, i64 0, i32 2, i32 0, i32 1
  %403 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %402 to i64*
  store i64 %401, i64* %403, align 8
  %404 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %398 to i8*
  call void @_ZdlPv(i8* %404) #10
  br label %405

405:                                              ; preds = %400, %396
  %406 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %394, i64 0, i32 1
  %407 = bitcast %"class.std::__1::basic_string"* %406 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %408 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %407, i64 0, i32 1, i32 0
  %409 = load i8, i8* %408, align 1
  %410 = icmp slt i8 %409, 0
  br i1 %410, label %411, label %414

411:                                              ; preds = %405
  %412 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %406, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = load i8*, i8** %412, align 8
  call void @_ZdlPv(i8* %413) #10
  br label %414

414:                                              ; preds = %411, %405
  %415 = bitcast %"class.dawn_native::ErrorData"* %394 to i8*
  call void @_ZdlPv(i8* %415) #10
  br label %416

416:                                              ; preds = %388, %414
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %379) #9
  br label %425

417:                                              ; preds = %348
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %379) #9
  %418 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 0
  store i32 0, i32* %418, align 8
  %419 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1
  %420 = bitcast %"class.std::__1::unique_ptr.186"* %419 to i64*
  store i64 0, i64* %420, align 8
  %421 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2
  %422 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.185"* %28 to i64*
  %423 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.185"* %421 to i64*
  %424 = load i64, i64* %422, align 8
  store i64 %424, i64* %423, align 8
  br label %425

425:                                              ; preds = %416, %417
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %377) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %366) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %354) #9
  call void @llvm.lifetime.end.p0i8(i64 324, i8* nonnull %37) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #9
  ret void
}

declare void @_ZN11dawn_native9ErrorData15AppendBacktraceEPKcS2_i(%"class.dawn_native::ErrorData"*, i8*, i8*, i32) local_unnamed_addr #3

declare i32 @_ZN11dawn_native6vulkan17VulkanSampleCountEj(i32) local_unnamed_addr #3

declare i32 @_ZN11dawn_native6vulkan17VulkanImageFormatEPKNS0_6DeviceEN4wgpu13TextureFormatE(%"class.dawn_native::vulkan::Device"*, i32) local_unnamed_addr #3

declare void @_ZN11dawn_native6vulkan18CheckVkSuccessImplENS0_8VkResultEPKc(%class.Result.207* sret, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK11dawn_native6vulkan15RenderPassCache10CacheFuncsclERKNS0_20RenderPassCacheQueryE(%"struct.dawn_native::vulkan::RenderPassCache::CacheFuncs"* nocapture readnone, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::__bit_iterator", align 8
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = alloca %"class.std::__1::__bit_iterator", align 8
  %9 = alloca %"class.std::__1::__bit_iterator", align 8
  %10 = alloca %"class.std::__1::__bit_iterator", align 8
  %11 = alloca %"class.BitSetIterator<4, unsigned char>::Iterator", align 8
  %12 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, -7046029254386353130
  %17 = shl i64 %13, 6
  %18 = add i64 %16, %17
  %19 = lshr i64 %13, 2
  %20 = add i64 %18, %19
  %21 = xor i64 %20, %13
  %22 = bitcast %"class.BitSetIterator<4, unsigned char>::Iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %11, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %11, i64 0, i32 1
  %25 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %11, i64 0, i32 2
  store i64 %13, i64* %23, align 8, !alias.scope !33
  %26 = bitcast i64* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #9, !alias.scope !33
  %27 = and i64 %13, 15
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %62, label %29

29:                                               ; preds = %2
  %30 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %11 to i64
  %31 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  %32 = bitcast %"class.std::__1::__bit_iterator"* %3 to i8*
  %33 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  %34 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  %35 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  %38 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  %39 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  %40 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  br label %41

41:                                               ; preds = %53, %29
  %42 = phi i64 [ %13, %29 ], [ %55, %53 ]
  %43 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %44 = and i64 %43, %42
  %45 = and i64 %44, 4294967295
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %41
  %48 = trunc i64 %44 to i32
  %49 = call i32 @_Z11ScanForwardj(i32 %48) #9
  %50 = zext i32 %49 to i64
  %51 = load i64, i64* %25, align 8, !alias.scope !33
  %52 = add i64 %51, %50
  br label %59

53:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #9, !noalias !33
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #9, !noalias !33
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #9, !noalias !33
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #9, !noalias !33
  store i64 %30, i64* %35, align 8, !noalias !36
  store i32 4, i32* %36, align 8, !noalias !36
  store i64 %30, i64* %37, align 8, !noalias !36
  store i32 4, i32* %38, align 8, !noalias !36
  store i64 %30, i64* %39, align 8, !noalias !36
  store i32 0, i32* %40, align 8, !noalias !36
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %6, %"class.std::__1::__bit_iterator"* nonnull %3, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #9, !noalias !33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #9, !noalias !33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #9, !noalias !33
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #9, !noalias !33
  %54 = load i64, i64* %23, align 8, !alias.scope !33
  %55 = and i64 %54, -16
  store i64 %55, i64* %23, align 8, !alias.scope !33
  %56 = load i64, i64* %25, align 8, !alias.scope !33
  %57 = add i64 %56, 32
  store i64 %57, i64* %25, align 8, !alias.scope !33
  %58 = icmp ult i64 %57, 4
  br i1 %58, label %41, label %59

59:                                               ; preds = %53, %47
  %60 = phi i64 [ %51, %47 ], [ %57, %53 ]
  %61 = phi i64 [ %52, %47 ], [ 0, %53 ]
  store i64 %61, i64* %24, align 8, !alias.scope !33
  br label %64

62:                                               ; preds = %2
  store i64 32, i64* %25, align 8, !alias.scope !33
  %63 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %11 to i64
  br label %64

64:                                               ; preds = %59, %62
  %65 = phi i64 [ %30, %59 ], [ %63, %62 ]
  %66 = phi i64 [ %61, %59 ], [ 0, %62 ]
  %67 = phi i64 [ %60, %59 ], [ 32, %62 ]
  %68 = bitcast %"class.std::__1::__bit_iterator"* %10 to i8*
  %69 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  %70 = bitcast %"class.std::__1::__bit_iterator"* %8 to i8*
  %71 = bitcast %"class.std::__1::__bit_iterator"* %9 to i8*
  %72 = bitcast %"class.std::__1::__bit_iterator"* %7 to i64*
  %73 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %7, i64 0, i32 1
  %74 = bitcast %"class.std::__1::__bit_iterator"* %8 to i64*
  %75 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %8, i64 0, i32 1
  %76 = bitcast %"class.std::__1::__bit_iterator"* %9 to i64*
  %77 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %9, i64 0, i32 1
  br label %78

78:                                               ; preds = %145, %64
  %79 = phi i64 [ %66, %64 ], [ %147, %145 ]
  %80 = phi i64 [ %67, %64 ], [ %146, %145 ]
  %81 = phi i64 [ %21, %64 ], [ %117, %145 ]
  %82 = icmp eq i64 %80, 32
  br i1 %82, label %83, label %98

83:                                               ; preds = %78
  %84 = load i64, i64* %23, align 8
  %85 = and i64 %84, 15
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %98

87:                                               ; preds = %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9
  %88 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 4
  %89 = load i8, i8* %88, align 1, !range !15
  %90 = zext i8 %89 to i64
  %91 = or i64 %90, -7046029254386353130
  %92 = shl i64 %81, 6
  %93 = lshr i64 %81, 2
  %94 = add i64 %93, %92
  %95 = add i64 %94, %91
  %96 = xor i64 %95, %81
  %97 = icmp eq i8 %89, 0
  br i1 %97, label %176, label %148

98:                                               ; preds = %83, %78
  %99 = and i64 %79, 255
  %100 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 2, i32 0, i32 0, i64 %99
  %101 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 3, i32 0, i32 0, i64 %99
  %102 = load i32, i32* %100, align 4
  %103 = zext i32 %102 to i64
  %104 = shl i64 %81, 6
  %105 = lshr i64 %81, 2
  %106 = add i64 %104, -7046029254386353130
  %107 = add i64 %106, %105
  %108 = add i64 %107, %103
  %109 = xor i64 %108, %81
  %110 = load i32, i32* %101, align 4
  %111 = zext i32 %110 to i64
  %112 = add nuw nsw i64 %111, -7046029254386353130
  %113 = shl i64 %109, 6
  %114 = add i64 %112, %113
  %115 = lshr i64 %109, 2
  %116 = add i64 %114, %115
  %117 = xor i64 %116, %109
  %118 = sub i64 %79, %80
  %119 = icmp ugt i64 %118, 3
  br i1 %119, label %120, label %121

120:                                              ; preds = %98
  call void @abort() #8
  unreachable

121:                                              ; preds = %98
  %122 = shl i64 1, %118
  %123 = xor i64 %122, -1
  %124 = load i64, i64* %23, align 8
  %125 = and i64 %124, %123
  store i64 %125, i64* %23, align 8
  %126 = icmp ult i64 %80, 4
  br i1 %126, label %127, label %145

127:                                              ; preds = %121, %139
  %128 = phi i64 [ %141, %139 ], [ %125, %121 ]
  %129 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %130 = and i64 %129, %128
  %131 = and i64 %130, 4294967295
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %139, label %133

133:                                              ; preds = %127
  %134 = trunc i64 %130 to i32
  %135 = call i32 @_Z11ScanForwardj(i32 %134) #9
  %136 = zext i32 %135 to i64
  %137 = load i64, i64* %25, align 8
  %138 = add i64 %137, %136
  br label %145

139:                                              ; preds = %127
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #9
  store i64 %65, i64* %72, align 8, !noalias !39
  store i32 4, i32* %73, align 8, !noalias !39
  store i64 %65, i64* %74, align 8, !noalias !39
  store i32 4, i32* %75, align 8, !noalias !39
  store i64 %65, i64* %76, align 8, !noalias !39
  store i32 0, i32* %77, align 8, !noalias !39
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %10, %"class.std::__1::__bit_iterator"* nonnull %7, %"class.std::__1::__bit_iterator"* nonnull %8, %"class.std::__1::__bit_iterator"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #9
  %140 = load i64, i64* %23, align 8
  %141 = and i64 %140, -16
  store i64 %141, i64* %23, align 8
  %142 = load i64, i64* %25, align 8
  %143 = add i64 %142, 32
  store i64 %143, i64* %25, align 8
  %144 = icmp ult i64 %143, 4
  br i1 %144, label %127, label %145

145:                                              ; preds = %139, %121, %133
  %146 = phi i64 [ %137, %133 ], [ %80, %121 ], [ %143, %139 ]
  %147 = phi i64 [ %138, %133 ], [ 0, %121 ], [ 0, %139 ]
  store i64 %147, i64* %24, align 8
  br label %78

148:                                              ; preds = %87
  %149 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 6
  %150 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 7
  %151 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 8
  %152 = load i32, i32* %149, align 4
  %153 = zext i32 %152 to i64
  %154 = shl i64 %96, 6
  %155 = lshr i64 %96, 2
  %156 = add i64 %154, -7046029254386353130
  %157 = add i64 %156, %155
  %158 = add i64 %157, %153
  %159 = xor i64 %158, %96
  %160 = load i32, i32* %150, align 4
  %161 = zext i32 %160 to i64
  %162 = add nuw nsw i64 %161, -7046029254386353130
  %163 = shl i64 %159, 6
  %164 = add i64 %162, %163
  %165 = lshr i64 %159, 2
  %166 = add i64 %164, %165
  %167 = xor i64 %166, %159
  %168 = load i32, i32* %151, align 4
  %169 = zext i32 %168 to i64
  %170 = add nuw nsw i64 %169, -7046029254386353130
  %171 = shl i64 %167, 6
  %172 = add i64 %170, %171
  %173 = lshr i64 %167, 2
  %174 = add i64 %172, %173
  %175 = xor i64 %174, %167
  br label %176

176:                                              ; preds = %87, %148
  %177 = phi i64 [ %96, %87 ], [ %175, %148 ]
  %178 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 9
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i64
  %181 = shl i64 %177, 6
  %182 = lshr i64 %177, 2
  %183 = add i64 %181, -7046029254386353130
  %184 = add i64 %183, %182
  %185 = add i64 %184, %180
  %186 = xor i64 %185, %177
  ret i64 %186
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11dawn_native6vulkan15RenderPassCache10CacheFuncsclERKNS0_20RenderPassCacheQueryES5_(%"struct.dawn_native::vulkan::RenderPassCache::CacheFuncs"* nocapture readnone, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* nocapture readonly dereferenceable(72), %"struct.dawn_native::vulkan::RenderPassCacheQuery"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::__bit_iterator", align 8
  %5 = alloca %"class.std::__1::__bit_iterator", align 8
  %6 = alloca %"class.std::__1::__bit_iterator", align 8
  %7 = alloca %"class.std::__1::__bit_iterator", align 8
  %8 = alloca %"class.std::__1::__bit_iterator", align 8
  %9 = alloca %"class.std::__1::__bit_iterator", align 8
  %10 = alloca %"class.std::__1::__bit_iterator", align 8
  %11 = alloca %"class.std::__1::__bit_iterator", align 8
  %12 = alloca %"class.BitSetIterator<4, unsigned char>::Iterator", align 8
  %13 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %13, align 8
  %16 = load i64, i64* %14, align 8
  %17 = xor i64 %16, %15
  %18 = and i64 %17, 15
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %171

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load i64, i64* %21, align 8
  %24 = load i64, i64* %22, align 8
  %25 = xor i64 %24, %23
  %26 = and i64 %25, 15
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %171

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 9
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 9
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %30, %32
  br i1 %33, label %34, label %171

34:                                               ; preds = %28
  %35 = bitcast %"class.BitSetIterator<4, unsigned char>::Iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #9
  %36 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %12, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %12, i64 0, i32 1
  %38 = getelementptr inbounds %"class.BitSetIterator<4, unsigned char>::Iterator", %"class.BitSetIterator<4, unsigned char>::Iterator"* %12, i64 0, i32 2
  store i64 %16, i64* %36, align 8, !alias.scope !42
  %39 = bitcast i64* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #9, !alias.scope !42
  %40 = and i64 %16, 15
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %75, label %42

42:                                               ; preds = %34
  %43 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %12 to i64
  %44 = bitcast %"class.std::__1::__bit_iterator"* %7 to i8*
  %45 = bitcast %"class.std::__1::__bit_iterator"* %4 to i8*
  %46 = bitcast %"class.std::__1::__bit_iterator"* %5 to i8*
  %47 = bitcast %"class.std::__1::__bit_iterator"* %6 to i8*
  %48 = bitcast %"class.std::__1::__bit_iterator"* %4 to i64*
  %49 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %4, i64 0, i32 1
  %50 = bitcast %"class.std::__1::__bit_iterator"* %5 to i64*
  %51 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %5, i64 0, i32 1
  %52 = bitcast %"class.std::__1::__bit_iterator"* %6 to i64*
  %53 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %6, i64 0, i32 1
  br label %54

54:                                               ; preds = %66, %42
  %55 = phi i64 [ %16, %42 ], [ %68, %66 ]
  %56 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %57 = and i64 %56, %55
  %58 = and i64 %57, 4294967295
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %54
  %61 = trunc i64 %57 to i32
  %62 = call i32 @_Z11ScanForwardj(i32 %61) #9
  %63 = zext i32 %62 to i64
  %64 = load i64, i64* %38, align 8, !alias.scope !42
  %65 = add i64 %64, %63
  br label %72

66:                                               ; preds = %54
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #9, !noalias !42
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #9, !noalias !42
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #9, !noalias !42
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #9, !noalias !42
  store i64 %43, i64* %48, align 8, !noalias !45
  store i32 4, i32* %49, align 8, !noalias !45
  store i64 %43, i64* %50, align 8, !noalias !45
  store i32 4, i32* %51, align 8, !noalias !45
  store i64 %43, i64* %52, align 8, !noalias !45
  store i32 0, i32* %53, align 8, !noalias !45
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %7, %"class.std::__1::__bit_iterator"* nonnull %4, %"class.std::__1::__bit_iterator"* nonnull %5, %"class.std::__1::__bit_iterator"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #9, !noalias !42
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #9, !noalias !42
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #9, !noalias !42
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #9, !noalias !42
  %67 = load i64, i64* %36, align 8, !alias.scope !42
  %68 = and i64 %67, -16
  store i64 %68, i64* %36, align 8, !alias.scope !42
  %69 = load i64, i64* %38, align 8, !alias.scope !42
  %70 = add i64 %69, 32
  store i64 %70, i64* %38, align 8, !alias.scope !42
  %71 = icmp ult i64 %70, 4
  br i1 %71, label %54, label %72

72:                                               ; preds = %66, %60
  %73 = phi i64 [ %64, %60 ], [ %70, %66 ]
  %74 = phi i64 [ %65, %60 ], [ 0, %66 ]
  store i64 %74, i64* %37, align 8, !alias.scope !42
  br label %77

75:                                               ; preds = %34
  store i64 32, i64* %38, align 8, !alias.scope !42
  %76 = ptrtoint %"class.BitSetIterator<4, unsigned char>::Iterator"* %12 to i64
  br label %77

77:                                               ; preds = %72, %75
  %78 = phi i64 [ %43, %72 ], [ %76, %75 ]
  %79 = phi i64 [ %74, %72 ], [ 0, %75 ]
  %80 = phi i64 [ %73, %72 ], [ 32, %75 ]
  %81 = bitcast %"class.std::__1::__bit_iterator"* %11 to i8*
  %82 = bitcast %"class.std::__1::__bit_iterator"* %8 to i8*
  %83 = bitcast %"class.std::__1::__bit_iterator"* %9 to i8*
  %84 = bitcast %"class.std::__1::__bit_iterator"* %10 to i8*
  %85 = bitcast %"class.std::__1::__bit_iterator"* %8 to i64*
  %86 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %8, i64 0, i32 1
  %87 = bitcast %"class.std::__1::__bit_iterator"* %9 to i64*
  %88 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %9, i64 0, i32 1
  %89 = bitcast %"class.std::__1::__bit_iterator"* %10 to i64*
  %90 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %10, i64 0, i32 1
  br label %91

91:                                               ; preds = %140, %77
  %92 = phi i64 [ %142, %140 ], [ %79, %77 ]
  %93 = phi i64 [ %141, %140 ], [ %80, %77 ]
  %94 = icmp eq i64 %93, 32
  br i1 %94, label %95, label %99

95:                                               ; preds = %91
  %96 = load i64, i64* %36, align 8
  %97 = and i64 %96, 15
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %144, label %99

99:                                               ; preds = %95, %91
  %100 = and i64 %92, 255
  %101 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 2, i32 0, i32 0, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 2, i32 0, i32 0, i64 %100
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %102, %104
  br i1 %105, label %106, label %143

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 3, i32 0, i32 0, i64 %100
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 3, i32 0, i32 0, i64 %100
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %108, %110
  br i1 %111, label %112, label %143

112:                                              ; preds = %106
  %113 = sub i64 %92, %93
  %114 = icmp ugt i64 %113, 3
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @abort() #8
  unreachable

116:                                              ; preds = %112
  %117 = shl i64 1, %113
  %118 = xor i64 %117, -1
  %119 = load i64, i64* %36, align 8
  %120 = and i64 %119, %118
  store i64 %120, i64* %36, align 8
  %121 = icmp ult i64 %93, 4
  br i1 %121, label %122, label %140

122:                                              ; preds = %116, %134
  %123 = phi i64 [ %136, %134 ], [ %120, %116 ]
  %124 = load i64, i64* getelementptr inbounds ({ i64 }, { i64 }* @_ZZN14BitSetIteratorILm4EhE8Iterator10getNextBitEvE8wordMask, i64 0, i32 0), align 8
  %125 = and i64 %124, %123
  %126 = and i64 %125, 4294967295
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %134, label %128

128:                                              ; preds = %122
  %129 = trunc i64 %125 to i32
  %130 = call i32 @_Z11ScanForwardj(i32 %129) #9
  %131 = zext i32 %130 to i64
  %132 = load i64, i64* %38, align 8
  %133 = add i64 %132, %131
  br label %140

134:                                              ; preds = %122
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #9
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #9
  store i64 %78, i64* %85, align 8, !noalias !48
  store i32 4, i32* %86, align 8, !noalias !48
  store i64 %78, i64* %87, align 8, !noalias !48
  store i32 4, i32* %88, align 8, !noalias !48
  store i64 %78, i64* %89, align 8, !noalias !48
  store i32 0, i32* %90, align 8, !noalias !48
  call void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* nonnull sret %11, %"class.std::__1::__bit_iterator"* nonnull %8, %"class.std::__1::__bit_iterator"* nonnull %9, %"class.std::__1::__bit_iterator"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #9
  %135 = load i64, i64* %36, align 8
  %136 = and i64 %135, -16
  store i64 %136, i64* %36, align 8
  %137 = load i64, i64* %38, align 8
  %138 = add i64 %137, 32
  store i64 %138, i64* %38, align 8
  %139 = icmp ult i64 %138, 4
  br i1 %139, label %122, label %140

140:                                              ; preds = %134, %116, %128
  %141 = phi i64 [ %132, %128 ], [ %93, %116 ], [ %138, %134 ]
  %142 = phi i64 [ %133, %128 ], [ 0, %116 ], [ 0, %134 ]
  store i64 %142, i64* %37, align 8
  br label %91

143:                                              ; preds = %99, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #9
  br label %171

144:                                              ; preds = %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #9
  %145 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 4
  %146 = load i8, i8* %145, align 8, !range !15
  %147 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 4
  %148 = load i8, i8* %147, align 8, !range !15
  %149 = icmp eq i8 %146, %148
  br i1 %149, label %150, label %171

150:                                              ; preds = %144
  %151 = icmp eq i8 %146, 0
  br i1 %151, label %170, label %152

152:                                              ; preds = %150
  %153 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 6
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 6
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %154, %156
  br i1 %157, label %158, label %171

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 7
  %160 = load i32, i32* %159, align 8
  %161 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 7
  %162 = load i32, i32* %161, align 8
  %163 = icmp eq i32 %160, %162
  br i1 %163, label %164, label %171

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %1, i64 0, i32 8
  %166 = load i32, i32* %165, align 4
  %167 = getelementptr inbounds %"struct.dawn_native::vulkan::RenderPassCacheQuery", %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2, i64 0, i32 8
  %168 = load i32, i32* %167, align 4
  %169 = icmp eq i32 %166, %168
  br i1 %169, label %170, label %171

170:                                              ; preds = %164, %150
  br label %171

171:                                              ; preds = %20, %3, %143, %152, %158, %164, %144, %28, %170
  %172 = phi i1 [ true, %170 ], [ false, %143 ], [ false, %3 ], [ false, %20 ], [ false, %28 ], [ false, %144 ], [ false, %164 ], [ false, %158 ], [ false, %152 ]
  ret i1 %172
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11dawn_native6vulkan20RenderPassCacheQueryENS3_6detail8VkHandleINS3_17VkTagVkRenderPassEP14VkRenderPass_TEEEENS_22__unordered_map_hasherIS4_SB_NS3_15RenderPassCache10CacheFuncsESE_Lb1EEENS_21__unordered_map_equalIS4_SB_SE_SE_Lb1EEENS_9allocatorISB_EEE25__emplace_unique_key_argsIS4_JRKS4_RSA_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISB_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72), %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72), %"class.dawn_native::vulkan::detail::VkHandle.185"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call i64 @_ZNK11dawn_native6vulkan15RenderPassCache10CacheFuncsclERKNS0_20RenderPassCacheQueryE(%"struct.dawn_native::vulkan::RenderPassCache::CacheFuncs"* undef, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72) %1) #9
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %52, label %9

9:                                                ; preds = %4
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #9, !range !4
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ult i64 %5, %7
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %52, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %52, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %52

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to %"struct.dawn_native::vulkan::RenderPassCacheQuery"*
  %51 = tail call zeroext i1 @_ZNK11dawn_native6vulkan15RenderPassCache10CacheFuncsclERKNS0_20RenderPassCacheQueryES5_(%"struct.dawn_native::vulkan::RenderPassCache::CacheFuncs"* undef, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72) %50, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72) %1) #9
  br i1 %51, label %142, label %28

52:                                               ; preds = %28, %45, %19, %4
  %53 = phi i64 [ %20, %19 ], [ -6148914691236517206, %4 ], [ %20, %45 ], [ %20, %28 ]
  %54 = tail call i8* @_Znwm(i64 96) #10, !noalias !51
  %55 = getelementptr inbounds i8, i8* %54, i64 16
  %56 = bitcast %"struct.dawn_native::vulkan::RenderPassCacheQuery"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 72, i1 false) #9, !noalias !51
  %57 = getelementptr inbounds i8, i8* %54, i64 88
  %58 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.185"* %3 to i64*
  %59 = bitcast i8* %57 to i64*
  %60 = load i64, i64* %58, align 8, !noalias !51
  store i64 %60, i64* %59, align 8, !noalias !51
  %61 = getelementptr inbounds i8, i8* %54, i64 8
  %62 = bitcast i8* %61 to i64*
  store i64 %5, i64* %62, align 8, !noalias !51
  %63 = bitcast i8* %54 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %63, align 8, !noalias !51
  %64 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 1
  %67 = uitofp i64 %66 to float
  %68 = uitofp i64 %7 to float
  %69 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %70 = load float, float* %69, align 4
  %71 = fmul float %70, %68
  %72 = fcmp olt float %71, %67
  %73 = or i1 %8, %72
  br i1 %73, label %74, label %97

74:                                               ; preds = %52
  %75 = shl i64 %7, 1
  %76 = icmp ult i64 %7, 3
  %77 = tail call i64 @llvm.ctpop.i64(i64 %7) #9, !range !4
  %78 = icmp ugt i64 %77, 1
  %79 = or i1 %76, %78
  %80 = zext i1 %79 to i64
  %81 = or i64 %75, %80
  %82 = fdiv float %67, %70
  %83 = tail call float @llvm.ceil.f32(float %82) #9
  %84 = fptoui float %83 to i64
  %85 = icmp ult i64 %81, %84
  %86 = select i1 %85, i64 %84, i64 %81
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11dawn_native6vulkan20RenderPassCacheQueryENS3_6detail8VkHandleINS3_17VkTagVkRenderPassEP14VkRenderPass_TEEEENS_22__unordered_map_hasherIS4_SB_NS3_15RenderPassCache10CacheFuncsESE_Lb1EEENS_21__unordered_map_equalIS4_SB_SE_SE_Lb1EEENS_9allocatorISB_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %86)
  %87 = load i64, i64* %6, align 8
  %88 = tail call i64 @llvm.ctpop.i64(i64 %87) #9, !range !4
  %89 = icmp ugt i64 %88, 1
  br i1 %89, label %93, label %90

90:                                               ; preds = %74
  %91 = add i64 %87, -1
  %92 = and i64 %91, %5
  br label %97

93:                                               ; preds = %74
  %94 = icmp ult i64 %5, %87
  br i1 %94, label %97, label %95

95:                                               ; preds = %93
  %96 = urem i64 %5, %87
  br label %97

97:                                               ; preds = %95, %93, %90, %52
  %98 = phi i64 [ %7, %52 ], [ %87, %90 ], [ %87, %93 ], [ %87, %95 ]
  %99 = phi i64 [ %53, %52 ], [ %92, %90 ], [ %5, %93 ], [ %96, %95 ]
  %100 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, i64 %99
  %103 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %102, align 8
  %104 = icmp eq %"struct.std::__1::__hash_node_base"* %103, null
  br i1 %104, label %105, label %131

105:                                              ; preds = %97
  %106 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %107 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i8* %54 to i64*
  store i64 %108, i64* %109, align 8
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %106 to i8**
  store i8* %54, i8** %110, align 8
  store %"struct.std::__1::__hash_node_base"* %106, %"struct.std::__1::__hash_node_base"** %102, align 8
  %111 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %63, align 8
  %112 = icmp eq %"struct.std::__1::__hash_node_base"* %111, null
  br i1 %112, label %138, label %113

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %111, i64 1
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = tail call i64 @llvm.ctpop.i64(i64 %98) #9, !range !4
  %118 = icmp ugt i64 %117, 1
  br i1 %118, label %122, label %119

119:                                              ; preds = %113
  %120 = add i64 %98, -1
  %121 = and i64 %116, %120
  br label %126

122:                                              ; preds = %113
  %123 = icmp ult i64 %116, %98
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %116, %98
  br label %126

126:                                              ; preds = %119, %122, %124
  %127 = phi i64 [ %121, %119 ], [ %125, %124 ], [ %116, %122 ]
  %128 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %100, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %128, i64 %127
  %130 = bitcast %"struct.std::__1::__hash_node_base"** %129 to i8**
  br label %136

131:                                              ; preds = %97
  %132 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i8* %54 to i64*
  store i64 %133, i64* %134, align 8
  %135 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i8**
  br label %136

136:                                              ; preds = %126, %131
  %137 = phi i8** [ %135, %131 ], [ %130, %126 ]
  store i8* %54, i8** %137, align 8
  br label %138

138:                                              ; preds = %136, %105
  %139 = bitcast i8* %54 to %"struct.std::__1::__hash_node_base"*
  %140 = load i64, i64* %64, align 8
  %141 = add i64 %140, 1
  store i64 %141, i64* %64, align 8
  br label %142

142:                                              ; preds = %48, %138
  %143 = phi i8 [ 1, %138 ], [ 0, %48 ]
  %144 = phi %"struct.std::__1::__hash_node_base"* [ %139, %138 ], [ %31, %48 ]
  %145 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %144, 0
  %146 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %145, i8 %143, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11dawn_native6vulkan20RenderPassCacheQueryENS3_6detail8VkHandleINS3_17VkTagVkRenderPassEP14VkRenderPass_TEEEENS_22__unordered_map_hasherIS4_SB_NS3_15RenderPassCache10CacheFuncsESE_Lb1EEENS_21__unordered_map_equalIS4_SB_SE_SE_Lb1EEENS_9allocatorISB_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !4
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #9
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11dawn_native6vulkan20RenderPassCacheQueryENS3_6detail8VkHandleINS3_17VkTagVkRenderPassEP14VkRenderPass_TEEEENS_22__unordered_map_hasherIS4_SB_NS3_15RenderPassCache10CacheFuncsESE_Lb1EEENS_21__unordered_map_equalIS4_SB_SE_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #9, !range !4
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #9
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #9, !range !4
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #9
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11dawn_native6vulkan20RenderPassCacheQueryENS3_6detail8VkHandleINS3_17VkTagVkRenderPassEP14VkRenderPass_TEEEENS_22__unordered_map_hasherIS4_SB_NS3_15RenderPassCache10CacheFuncsESE_Lb1EEENS_21__unordered_map_equalIS4_SB_SE_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11dawn_native6vulkan20RenderPassCacheQueryENS3_6detail8VkHandleINS3_17VkTagVkRenderPassEP14VkRenderPass_TEEEENS_22__unordered_map_hasherIS4_SB_NS3_15RenderPassCache10CacheFuncsESE_Lb1EEENS_21__unordered_map_equalIS4_SB_SE_SE_Lb1EEENS_9allocatorISB_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %141, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #8
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !54

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %149, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !4
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %149, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %135
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %139, %135 ]
  %81 = phi i64 [ %71, %77 ], [ %137, %135 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %136, %135 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %135, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base"* %105 to %"struct.dawn_native::vulkan::RenderPassCacheQuery"*
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %102, i64 2
  %108 = bitcast %"struct.std::__1::__hash_node_base"* %107 to %"struct.dawn_native::vulkan::RenderPassCacheQuery"*
  %109 = tail call zeroext i1 @_ZNK11dawn_native6vulkan15RenderPassCache10CacheFuncsclERKNS0_20RenderPassCacheQueryES5_(%"struct.dawn_native::vulkan::RenderPassCache::CacheFuncs"* undef, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72) %106, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72) %108) #9
  br i1 %109, label %115, label %121

110:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %135

111:                                              ; preds = %115
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 2
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %112 to %"struct.dawn_native::vulkan::RenderPassCacheQuery"*
  %114 = tail call zeroext i1 @_ZNK11dawn_native6vulkan15RenderPassCache10CacheFuncsclERKNS0_20RenderPassCacheQueryES5_(%"struct.dawn_native::vulkan::RenderPassCache::CacheFuncs"* undef, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72) %106, %"struct.dawn_native::vulkan::RenderPassCacheQuery"* dereferenceable(72) %113) #9
  br i1 %114, label %115, label %121

115:                                              ; preds = %104, %111
  %116 = phi %"struct.std::__1::__hash_node_base"** [ %118, %111 ], [ %101, %104 ]
  %117 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %117, i64 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base"* %119, null
  br i1 %120, label %121, label %111

121:                                              ; preds = %115, %111, %104, %100
  %122 = phi %"struct.std::__1::__hash_node_base"* [ %80, %100 ], [ %80, %104 ], [ %117, %111 ], [ %117, %115 ]
  %123 = bitcast %"struct.std::__1::__hash_node_base"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %126, i64 %93
  %128 = bitcast %"struct.std::__1::__hash_node_base"** %127 to i64**
  %129 = load i64*, i64** %128, align 8
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %123, align 8
  %131 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, i64 %93
  %133 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %133, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %134, align 8
  br label %135

135:                                              ; preds = %92, %121, %110
  %136 = phi %"struct.std::__1::__hash_node_base"* [ %80, %110 ], [ %82, %121 ], [ %80, %92 ]
  %137 = phi i64 [ %93, %110 ], [ %81, %121 ], [ %81, %92 ]
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %136, i64 0, i32 0
  %139 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %138, align 8
  %140 = icmp eq %"struct.std::__1::__hash_node_base"* %139, null
  br i1 %140, label %149, label %79

141:                                              ; preds = %2
  %142 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %142, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"** %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = bitcast %"struct.std::__1::__hash_node_base"** %143 to i8*
  tail call void @_ZdlPv(i8* %146) #10
  br label %147

147:                                              ; preds = %141, %145
  %148 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %148, align 8
  br label %149

149:                                              ; preds = %135, %70, %35, %147
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

declare i32 @_Z11ScanForwardj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__copy_unalignedINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_(%"class.std::__1::__bit_iterator"* noalias sret, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*, %"class.std::__1::__bit_iterator"*) local_unnamed_addr #0 comdat {
  %5 = bitcast %"class.std::__1::__bit_iterator"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::__bit_iterator"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = shl i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %2, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = add nsw i64 %10, %13
  %15 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %18, 0
  %20 = inttoptr i64 %8 to i64*
  br i1 %19, label %21, label %185

21:                                               ; preds = %4
  %22 = icmp eq i32 %16, 0
  br i1 %22, label %93, label %23

23:                                               ; preds = %21
  %24 = sub i32 64, %16
  %25 = zext i32 %24 to i64
  %26 = icmp slt i64 %18, %25
  %27 = select i1 %26, i64 %18, i64 %25
  %28 = sub nsw i64 %18, %27
  %29 = shl i64 -1, %17
  %30 = sub nsw i64 %25, %27
  %31 = lshr i64 -1, %30
  %32 = and i64 %31, %29
  %33 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %34 = load i64, i64* %20, align 8
  %35 = and i64 %32, %34
  %36 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = sub i32 64, %37
  %39 = zext i32 %38 to i64
  %40 = icmp ugt i64 %27, %39
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = zext i32 %37 to i64
  %43 = shl i64 -1, %42
  %44 = sub nsw i64 %39, %41
  %45 = lshr i64 -1, %44
  %46 = and i64 %45, %43
  %47 = xor i64 %46, -1
  %48 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, %47
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %36, align 8
  %53 = load i32, i32* %15, align 8
  %54 = icmp ugt i32 %52, %53
  %55 = sub i32 %53, %52
  %56 = zext i32 %55 to i64
  %57 = lshr i64 %35, %56
  %58 = sub i32 %52, %53
  %59 = zext i32 %58 to i64
  %60 = shl i64 %35, %59
  %61 = select i1 %54, i64 %60, i64 %57
  %62 = load i64*, i64** %48, align 8
  %63 = load i64, i64* %62, align 8
  %64 = or i64 %63, %61
  store i64 %64, i64* %62, align 8
  %65 = load i32, i32* %36, align 8
  %66 = zext i32 %65 to i64
  %67 = add nuw nsw i64 %41, %66
  %68 = lshr i64 %67, 6
  %69 = load i64*, i64** %48, align 8
  %70 = getelementptr inbounds i64, i64* %69, i64 %68
  store i64* %70, i64** %48, align 8
  %71 = trunc i64 %41 to i32
  %72 = add i32 %65, %71
  %73 = and i32 %72, 63
  store i32 %73, i32* %36, align 8
  %74 = sub i64 %27, %41
  %75 = icmp sgt i64 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %23
  %77 = sub nsw i64 64, %74
  %78 = lshr i64 -1, %77
  %79 = xor i64 %78, -1
  %80 = load i64, i64* %70, align 8
  %81 = and i64 %80, %79
  store i64 %81, i64* %70, align 8
  %82 = load i32, i32* %15, align 8
  %83 = zext i32 %82 to i64
  %84 = add nuw nsw i64 %41, %83
  %85 = lshr i64 %35, %84
  %86 = load i64*, i64** %48, align 8
  %87 = load i64, i64* %86, align 8
  %88 = or i64 %85, %87
  store i64 %88, i64* %86, align 8
  %89 = trunc i64 %74 to i32
  store i32 %89, i32* %36, align 8
  br label %90

90:                                               ; preds = %76, %23
  %91 = load i64*, i64** %33, align 8
  %92 = getelementptr inbounds i64, i64* %91, i64 1
  store i64* %92, i64** %33, align 8
  br label %93

93:                                               ; preds = %21, %90
  %94 = phi i64* [ %20, %21 ], [ %92, %90 ]
  %95 = phi i64 [ %18, %21 ], [ %28, %90 ]
  %96 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = sub i32 64, %97
  %99 = zext i32 %97 to i64
  %100 = shl i64 -1, %99
  %101 = icmp sgt i64 %95, 63
  br i1 %101, label %102, label %134

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %1, i64 0, i32 0
  %104 = xor i64 %100, -1
  %105 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %106 = zext i32 %98 to i64
  br label %107

107:                                              ; preds = %102, %107
  %108 = phi i64* [ %94, %102 ], [ %130, %107 ]
  %109 = phi i64 [ %95, %102 ], [ %128, %107 ]
  %110 = load i64, i64* %108, align 8
  %111 = load i64*, i64** %105, align 8
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, %104
  store i64 %113, i64* %111, align 8
  %114 = load i32, i32* %96, align 8
  %115 = zext i32 %114 to i64
  %116 = shl i64 %110, %115
  %117 = load i64*, i64** %105, align 8
  %118 = load i64, i64* %117, align 8
  %119 = or i64 %118, %116
  store i64 %119, i64* %117, align 8
  %120 = load i64*, i64** %105, align 8
  %121 = getelementptr inbounds i64, i64* %120, i64 1
  store i64* %121, i64** %105, align 8
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, %100
  store i64 %123, i64* %121, align 8
  %124 = lshr i64 %110, %106
  %125 = load i64*, i64** %105, align 8
  %126 = load i64, i64* %125, align 8
  %127 = or i64 %126, %124
  store i64 %127, i64* %125, align 8
  %128 = add nsw i64 %109, -64
  %129 = load i64*, i64** %103, align 8
  %130 = getelementptr inbounds i64, i64* %129, i64 1
  store i64* %130, i64** %103, align 8
  %131 = icmp sgt i64 %128, 63
  br i1 %131, label %107, label %132

132:                                              ; preds = %107
  %133 = and i64 %95, 63
  br label %134

134:                                              ; preds = %132, %93
  %135 = phi i64* [ %94, %93 ], [ %130, %132 ]
  %136 = phi i64 [ %95, %93 ], [ %133, %132 ]
  %137 = icmp sgt i64 %136, 0
  br i1 %137, label %138, label %185

138:                                              ; preds = %134
  %139 = sub nuw nsw i64 64, %136
  %140 = lshr i64 -1, %139
  %141 = load i64, i64* %135, align 8
  %142 = and i64 %141, %140
  %143 = zext i32 %98 to i64
  %144 = icmp sgt i64 %136, %143
  %145 = select i1 %144, i64 %143, i64 %136
  %146 = load i32, i32* %96, align 8
  %147 = zext i32 %146 to i64
  %148 = shl i64 -1, %147
  %149 = sub nsw i64 %143, %145
  %150 = lshr i64 -1, %149
  %151 = and i64 %148, %150
  %152 = xor i64 %151, -1
  %153 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 0
  %154 = load i64*, i64** %153, align 8
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, %152
  store i64 %156, i64* %154, align 8
  %157 = load i32, i32* %96, align 8
  %158 = zext i32 %157 to i64
  %159 = shl i64 %142, %158
  %160 = load i64*, i64** %153, align 8
  %161 = load i64, i64* %160, align 8
  %162 = or i64 %161, %159
  store i64 %162, i64* %160, align 8
  %163 = load i32, i32* %96, align 8
  %164 = zext i32 %163 to i64
  %165 = add nuw nsw i64 %145, %164
  %166 = lshr i64 %165, 6
  %167 = load i64*, i64** %153, align 8
  %168 = getelementptr inbounds i64, i64* %167, i64 %166
  store i64* %168, i64** %153, align 8
  %169 = trunc i64 %145 to i32
  %170 = add i32 %163, %169
  %171 = and i32 %170, 63
  store i32 %171, i32* %96, align 8
  %172 = sub nsw i64 %136, %145
  %173 = icmp sgt i64 %172, 0
  br i1 %173, label %174, label %185

174:                                              ; preds = %138
  %175 = sub nuw nsw i64 64, %172
  %176 = lshr i64 -1, %175
  %177 = xor i64 %176, -1
  %178 = load i64, i64* %168, align 8
  %179 = and i64 %178, %177
  store i64 %179, i64* %168, align 8
  %180 = lshr i64 %142, %145
  %181 = load i64*, i64** %153, align 8
  %182 = load i64, i64* %181, align 8
  %183 = or i64 %182, %180
  store i64 %183, i64* %181, align 8
  %184 = trunc i64 %172 to i32
  store i32 %184, i32* %96, align 8
  br label %185

185:                                              ; preds = %134, %174, %138, %4
  %186 = bitcast %"class.std::__1::__bit_iterator"* %3 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %"class.std::__1::__bit_iterator"* %0 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %0, i64 0, i32 1
  %190 = getelementptr inbounds %"class.std::__1::__bit_iterator", %"class.std::__1::__bit_iterator"* %3, i64 0, i32 1
  %191 = load i32, i32* %190, align 8
  store i32 %191, i32* %189, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i64 0, i64 65}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIhLm4EEE: argument 0"}
!8 = distinct !{!8, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIhLm4EEE"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK14BitSetIteratorILm4EhE5beginEv: argument 0"}
!11 = distinct !{!11, !"_ZNK14BitSetIteratorILm4EhE5beginEv"}
!12 = !{!13, !10}
!13 = distinct !{!13, !14, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!15 = !{i8 0, i8 2}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIhLm4EEE: argument 0"}
!21 = distinct !{!21, !"_ZN4ityp13IterateBitSetERKNS_6bitsetIhLm4EEE"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK14BitSetIteratorILm4EhE5beginEv: argument 0"}
!24 = distinct !{!24, !"_ZNK14BitSetIteratorILm4EhE5beginEv"}
!25 = !{!26, !23}
!26 = distinct !{!26, !27, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!27 = distinct !{!27, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!28 = distinct !{!28, !3}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!31 = distinct !{!31, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!32 = !{!"branch_weights", i32 2000, i32 1}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK14BitSetIteratorILm4EhE5beginEv: argument 0"}
!35 = distinct !{!35, !"_ZNK14BitSetIteratorILm4EhE5beginEv"}
!36 = !{!37, !34}
!37 = distinct !{!37, !38, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZNK14BitSetIteratorILm4EhE5beginEv: argument 0"}
!44 = distinct !{!44, !"_ZNK14BitSetIteratorILm4EhE5beginEv"}
!45 = !{!46, !43}
!46 = distinct !{!46, !47, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!47 = distinct !{!47, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__14copyINS_8__bitsetILm1ELm4EEELb0EEENS_14__bit_iteratorIT_Lb0EXLi0EEEENS3_IS4_XT0_EXLi0EEEES6_S5_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11dawn_native6vulkan20RenderPassCacheQueryENS3_6detail8VkHandleINS3_17VkTagVkRenderPassEP14VkRenderPass_TEEEENS_22__unordered_map_hasherIS4_SB_NS3_15RenderPassCache10CacheFuncsESE_Lb1EEENS_21__unordered_map_equalIS4_SB_SE_SE_Lb1EEENS_9allocatorISB_EEE21__construct_node_hashIRKS4_JRSA_EEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINSI_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN11dawn_native6vulkan20RenderPassCacheQueryENS3_6detail8VkHandleINS3_17VkTagVkRenderPassEP14VkRenderPass_TEEEENS_22__unordered_map_hasherIS4_SB_NS3_15RenderPassCache10CacheFuncsESE_Lb1EEENS_21__unordered_map_equalIS4_SB_SE_SE_Lb1EEENS_9allocatorISB_EEE21__construct_node_hashIRKS4_JRSA_EEENS_10unique_ptrINS_11__hash_nodeISB_PvEENS_22__hash_node_destructorINSI_ISS_EEEEEEmOT_DpOT0_"}
!54 = distinct !{!54, !3}
