; ModuleID = '../../components/paint_preview/common/subset_font.cc'
source_filename = "../../components/paint_preview/common/subset_font.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.paint_preview::GlyphUsage" = type <{ i32 (...)**, i16, i16, [4 x i8] }>
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.21 = type { %class.SkTypeface* }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%struct.hb_face_t = type opaque
%struct.hb_blob_t = type opaque
%struct.hb_subset_input_t = type opaque
%struct.hb_set_t = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZN4base8internal7InvokerINS0_9BindStateIPFvP8hb_set_ttEJNS0_17UnretainedWrapperIS3_EEEEEFvtEE3RunEPNS0_13BindStateBaseEt = comdat any

$_ZN4base8internal9BindStateIPFvP8hb_set_ttEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13paint_preview10SubsetFontEP10SkTypefaceRKNS_10GlyphUsageE(%class.sk_sp* noalias sret, %class.SkTypeface*, %"class.paint_preview::GlyphUsage"* dereferenceable(16)) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = alloca i32, align 4
  %8 = alloca %class.sk_sp, align 8
  %9 = alloca %class.sk_sp.21, align 8
  %10 = alloca %class.sk_sp, align 8
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #7
  store i32 0, i32* %4, align 4
  %12 = bitcast %class.sk_sp* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %13, align 8
  %14 = call %class.SkStreamAsset* @_ZNK10SkTypeface10openStreamEPi(%class.SkTypeface* %1, i32* nonnull %4) #7
  %15 = getelementptr inbounds %class.SkStreamAsset, %class.SkStreamAsset* %14, i64 0, i32 0, i32 0
  %16 = bitcast %class.SkStreamAsset* %14 to i1 (%class.SkStreamRewindable*)***
  %17 = load i1 (%class.SkStreamRewindable*)**, i1 (%class.SkStreamRewindable*)*** %16, align 8, !noalias !2
  %18 = getelementptr inbounds i1 (%class.SkStreamRewindable*)*, i1 (%class.SkStreamRewindable*)** %17, i64 5
  %19 = load i1 (%class.SkStreamRewindable*)*, i1 (%class.SkStreamRewindable*)** %18, align 8, !noalias !2
  %20 = call zeroext i1 %19(%class.SkStreamRewindable* %15) #7, !noalias !2
  %21 = bitcast %class.SkStreamAsset* %14 to i64 (%class.SkStreamAsset*)***
  %22 = load i64 (%class.SkStreamAsset*)**, i64 (%class.SkStreamAsset*)*** %21, align 8, !noalias !2
  %23 = getelementptr inbounds i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %22, i64 11
  %24 = load i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %23, align 8, !noalias !2
  %25 = call i64 %24(%class.SkStreamAsset* %14) #7, !noalias !2
  %26 = getelementptr inbounds %class.SkStreamAsset, %class.SkStreamAsset* %14, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %class.SkStreamAsset* %14 to i8* (%class.SkStream*)***
  %28 = load i8* (%class.SkStream*)**, i8* (%class.SkStream*)*** %27, align 8, !noalias !2
  %29 = getelementptr inbounds i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %28, i64 12
  %30 = load i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %29, align 8, !noalias !2
  %31 = call i8* %30(%class.SkStream* %26) #7, !noalias !2
  %32 = icmp eq i8* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %3
  %34 = bitcast %class.SkStreamAsset* %14 to i8*
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* nonnull sret %5, i8* nonnull %31, i64 %25, void (i8*, i8*)* nonnull @"_ZZN13paint_preview12_GLOBAL__N_112StreamToDataENSt3__110unique_ptrI13SkStreamAssetNS1_14default_deleteIS3_EEEEEN3$_18__invokeEPKvPv", i8* %34) #7
  br label %42

35:                                               ; preds = %3
  call void @_ZN6SkData14MakeFromStreamEP8SkStreamm(%class.sk_sp* nonnull sret %5, %class.SkStream* %26, i64 %25) #7
  %36 = icmp eq %class.SkStreamAsset* %14, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %35
  %38 = bitcast %class.SkStreamAsset* %14 to void (%class.SkStreamAsset*)***
  %39 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %38, align 8, !noalias !2
  %40 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %39, i64 1
  %41 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %40, align 8
  call void %41(%class.SkStreamAsset* nonnull %14) #7
  br label %42

42:                                               ; preds = %33, %35, %37
  %43 = load %class.SkData*, %class.SkData** %13, align 8
  %44 = icmp eq %class.SkData* %43, null
  br i1 %44, label %45, label %48

45:                                               ; preds = %42
  %46 = load i32, i32* %4, align 4
  %47 = call %struct.hb_face_t* @hb_face_create(%struct.hb_blob_t* null, i32 %46) #7
  br label %73

48:                                               ; preds = %42
  %49 = getelementptr inbounds %class.SkData, %class.SkData* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic
  %51 = getelementptr inbounds %class.SkData, %class.SkData* %43, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, 4294967296
  br i1 %53, label %54, label %63

54:                                               ; preds = %48
  %55 = getelementptr inbounds %class.SkData, %class.SkData* %43, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = trunc i64 %52 to i32
  %58 = call %struct.hb_blob_t* @hb_blob_create(i8* %56, i32 %57, i32 1, i8* null, void (i8*)* null) #7
  %59 = load i32, i32* %4, align 4
  %60 = call %struct.hb_face_t* @hb_face_create(%struct.hb_blob_t* %58, i32 %59) #7
  %61 = icmp eq %struct.hb_blob_t* %58, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %54
  call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %58) #7
  br label %66

63:                                               ; preds = %48
  %64 = load i32, i32* %4, align 4
  %65 = call %struct.hb_face_t* @hb_face_create(%struct.hb_blob_t* null, i32 %64) #7
  br label %66

66:                                               ; preds = %62, %54, %63
  %67 = phi %struct.hb_face_t* [ %65, %63 ], [ %60, %54 ], [ %60, %62 ]
  %68 = getelementptr inbounds %class.SkData, %class.SkData* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %43) #7
  %72 = bitcast %class.SkData* %43 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %72) #7
  br label %73

73:                                               ; preds = %45, %66, %71
  %74 = phi %struct.hb_face_t* [ %67, %66 ], [ %67, %71 ], [ %47, %45 ]
  %75 = call %struct.hb_subset_input_t* @hb_subset_input_create_or_fail() #7
  %76 = icmp eq %struct.hb_face_t* %74, null
  br i1 %76, label %173, label %77

77:                                               ; preds = %73
  %78 = icmp eq %struct.hb_subset_input_t* %75, null
  br i1 %78, label %79, label %81

79:                                               ; preds = %77
  %80 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %80, align 8
  br label %178

81:                                               ; preds = %77
  %82 = call %struct.hb_set_t* @hb_subset_input_glyph_set(%struct.hb_subset_input_t* nonnull %75) #7
  %83 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #7
  %84 = ptrtoint %struct.hb_set_t* %82 to i64
  %85 = call i8* @_Znwm(i64 48) #8, !noalias !5
  %86 = bitcast i8* %85 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %86, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i16)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvP8hb_set_ttEJNS0_17UnretainedWrapperIS3_EEEEEFvtEE3RunEPNS0_13BindStateBaseEt to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvP8hb_set_ttEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #7, !noalias !5
  %87 = getelementptr inbounds i8, i8* %85, i64 32
  %88 = bitcast i8* %87 to i64*
  store i64 ptrtoint (void (%struct.hb_set_t*, i16)* @_ZN13paint_preview12_GLOBAL__N_19AddGlyphsEP8hb_set_tt to i64), i64* %88, align 8, !noalias !5
  %89 = getelementptr inbounds i8, i8* %85, i64 40
  %90 = bitcast i8* %89 to i64*
  store i64 %84, i64* %90, align 8, !noalias !5
  %91 = bitcast %"class.base::RepeatingCallback"* %6 to i8**
  store i8* %85, i8** %91, align 8, !alias.scope !5
  %92 = bitcast %"class.paint_preview::GlyphUsage"* %2 to void (%"class.paint_preview::GlyphUsage"*, %"class.base::RepeatingCallback"*)***
  %93 = load void (%"class.paint_preview::GlyphUsage"*, %"class.base::RepeatingCallback"*)**, void (%"class.paint_preview::GlyphUsage"*, %"class.base::RepeatingCallback"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.paint_preview::GlyphUsage"*, %"class.base::RepeatingCallback"*)*, void (%"class.paint_preview::GlyphUsage"*, %"class.base::RepeatingCallback"*)** %93, i64 4
  %95 = load void (%"class.paint_preview::GlyphUsage"*, %"class.base::RepeatingCallback"*)*, void (%"class.paint_preview::GlyphUsage"*, %"class.base::RepeatingCallback"*)** %94, align 8
  call void %95(%"class.paint_preview::GlyphUsage"* %2, %"class.base::RepeatingCallback"* nonnull dereferenceable(8) %6) #7
  %96 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %96) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #7
  call void @hb_subset_input_set_retain_gids(%struct.hb_subset_input_t* nonnull %75, i32 1) #7
  %97 = call %struct.hb_face_t* @hb_subset(%struct.hb_face_t* nonnull %74, %struct.hb_subset_input_t* nonnull %75) #7
  %98 = call %struct.hb_blob_t* @hb_face_reference_blob(%struct.hb_face_t* %97) #7
  %99 = ptrtoint %struct.hb_blob_t* %98 to i64
  %100 = icmp eq %struct.hb_blob_t* %98, null
  br i1 %100, label %101, label %103

101:                                              ; preds = %81
  %102 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %102, align 8
  br label %165

103:                                              ; preds = %81
  %104 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %104) #7
  store i32 0, i32* %7, align 4
  %105 = call i8* @hb_blob_get_data(%struct.hb_blob_t* nonnull %98, i32* nonnull %7) #7
  %106 = icmp ne i8* %105, null
  %107 = load i32, i32* %7, align 4
  %108 = icmp ne i32 %107, 0
  %109 = and i1 %106, %108
  br i1 %109, label %112, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %111, align 8
  br label %163

112:                                              ; preds = %103
  %113 = bitcast %class.sk_sp* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #7
  %114 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %8, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %114, align 8
  %115 = zext i32 %107 to i64
  %116 = bitcast %struct.hb_blob_t* %98 to i8*
  call void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* nonnull sret %8, i8* nonnull %105, i64 %115, void (i8*, i8*)* nonnull @"_ZZN13paint_preview10SubsetFontEP10SkTypefaceRKNS_10GlyphUsageEEN3$_08__invokeEPKvPv", i8* nonnull %116) #7
  %117 = load %class.SkData*, %class.SkData** %114, align 8
  %118 = icmp eq %class.SkData* %117, null
  br i1 %118, label %119, label %121

119:                                              ; preds = %112
  %120 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %120, align 8
  br label %162

121:                                              ; preds = %112
  %122 = bitcast %class.sk_sp.21* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #7
  %123 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %9, i64 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %123, align 8
  %124 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %10, i64 0, i32 0
  %125 = getelementptr inbounds %class.SkData, %class.SkData* %117, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = atomicrmw add i32* %125, i32 1 monotonic
  store %class.SkData* %117, %class.SkData** %124, align 8
  call void @_ZN10SkTypeface12MakeFromDataE5sk_spI6SkDataEi(%class.sk_sp.21* nonnull sret %9, %class.sk_sp* nonnull %10, i32 0) #7
  %127 = load %class.SkData*, %class.SkData** %124, align 8
  %128 = icmp eq %class.SkData* %127, null
  br i1 %128, label %135, label %129

129:                                              ; preds = %121
  %130 = getelementptr inbounds %class.SkData, %class.SkData* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = atomicrmw add i32* %130, i32 -1 acq_rel
  %132 = icmp eq i32 %131, 1
  br i1 %132, label %133, label %135

133:                                              ; preds = %129
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %127) #7
  %134 = bitcast %class.SkData* %127 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %134) #7
  br label %135

135:                                              ; preds = %121, %129, %133
  %136 = load %class.SkTypeface*, %class.SkTypeface** %123, align 8
  %137 = icmp eq %class.SkTypeface* %136, null
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %139, align 8
  br label %153

140:                                              ; preds = %135
  call void @_ZNK10SkTypeface9serializeENS_17SerializeBehaviorE(%class.sk_sp* sret %0, %class.SkTypeface* nonnull %136, i32 0) #7
  %141 = load %class.SkTypeface*, %class.SkTypeface** %123, align 8
  %142 = icmp eq %class.SkTypeface* %141, null
  br i1 %142, label %153, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %141, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = atomicrmw add i32* %144, i32 -1 acq_rel
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %153

147:                                              ; preds = %143
  %148 = bitcast %class.SkTypeface* %141 to %class.SkRefCntBase*
  %149 = bitcast %class.SkTypeface* %141 to void (%class.SkRefCntBase*)***
  %150 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %149, align 8
  %151 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, i64 2
  %152 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %151, align 8
  call void %152(%class.SkRefCntBase* nonnull %148) #7
  br label %153

153:                                              ; preds = %147, %143, %140, %138
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #7
  %154 = load %class.SkData*, %class.SkData** %114, align 8
  %155 = icmp eq %class.SkData* %154, null
  br i1 %155, label %162, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %class.SkData, %class.SkData* %154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = atomicrmw add i32* %157, i32 -1 acq_rel
  %159 = icmp eq i32 %158, 1
  br i1 %159, label %160, label %162

160:                                              ; preds = %156
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %154) #7
  %161 = bitcast %class.SkData* %154 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %161) #7
  br label %162

162:                                              ; preds = %119, %153, %156, %160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #7
  br label %163

163:                                              ; preds = %162, %110
  %164 = phi i64 [ 0, %162 ], [ %99, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %104) #7
  br label %165

165:                                              ; preds = %163, %101
  %166 = phi i64 [ %164, %163 ], [ %99, %101 ]
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %165
  %169 = inttoptr i64 %166 to %struct.hb_blob_t*
  call void @hb_blob_destroy(%struct.hb_blob_t* nonnull %169) #7
  br label %170

170:                                              ; preds = %165, %168
  %171 = icmp eq %struct.hb_face_t* %97, null
  br i1 %171, label %177, label %172

172:                                              ; preds = %170
  call void @hb_face_destroy(%struct.hb_face_t* nonnull %97) #7
  br label %177

173:                                              ; preds = %73
  %174 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %174, align 8
  %175 = icmp eq %struct.hb_subset_input_t* %75, null
  br i1 %175, label %179, label %176

176:                                              ; preds = %173
  call void @hb_subset_input_destroy(%struct.hb_subset_input_t* nonnull %75) #7
  br label %179

177:                                              ; preds = %172, %170
  call void @hb_subset_input_destroy(%struct.hb_subset_input_t* nonnull %75) #7
  br label %178

178:                                              ; preds = %177, %79
  call void @hb_face_destroy(%struct.hb_face_t* nonnull %74) #7
  br label %179

179:                                              ; preds = %173, %176, %178
  %180 = load %class.SkData*, %class.SkData** %13, align 8
  %181 = icmp eq %class.SkData* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %class.SkData, %class.SkData* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = atomicrmw add i32* %183, i32 -1 acq_rel
  %185 = icmp eq i32 %184, 1
  br i1 %185, label %186, label %188

186:                                              ; preds = %182
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %180) #7
  %187 = bitcast %class.SkData* %180 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %187) #7
  br label %188

188:                                              ; preds = %179, %182, %186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %class.SkStreamAsset* @_ZNK10SkTypeface10openStreamEPi(%class.SkTypeface*, i32*) local_unnamed_addr #2

declare %struct.hb_face_t* @hb_face_create(%struct.hb_blob_t*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.hb_subset_input_t* @hb_subset_input_create_or_fail() local_unnamed_addr #2

declare %struct.hb_set_t* @hb_subset_input_glyph_set(%struct.hb_subset_input_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN13paint_preview12_GLOBAL__N_19AddGlyphsEP8hb_set_tt(%struct.hb_set_t*, i16 zeroext) #0 {
  %3 = zext i16 %1 to i32
  tail call void @hb_set_add(%struct.hb_set_t* %0, i32 %3) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @hb_subset_input_set_retain_gids(%struct.hb_subset_input_t*, i32) local_unnamed_addr #2

declare %struct.hb_face_t* @hb_subset(%struct.hb_face_t*, %struct.hb_subset_input_t*) local_unnamed_addr #2

declare %struct.hb_blob_t* @hb_face_reference_blob(%struct.hb_face_t*) local_unnamed_addr #2

declare i8* @hb_blob_get_data(%struct.hb_blob_t*, i32*) local_unnamed_addr #2

declare void @_ZN6SkData12MakeWithProcEPKvmPFvS1_PvES2_(%class.sk_sp* sret, i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #2

declare void @_ZN10SkTypeface12MakeFromDataE5sk_spI6SkDataEi(%class.sk_sp.21* sret, %class.sk_sp*, i32) local_unnamed_addr #2

declare void @_ZNK10SkTypeface9serializeENS_17SerializeBehaviorE(%class.sk_sp* sret, %class.SkTypeface*, i32) local_unnamed_addr #2

declare void @_ZN6SkData14MakeFromStreamEP8SkStreamm(%class.sk_sp* sret, %class.SkStream*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN13paint_preview12_GLOBAL__N_112StreamToDataENSt3__110unique_ptrI13SkStreamAssetNS1_14default_deleteIS3_EEEEEN3$_18__invokeEPKvPv"(i8* nocapture readnone, i8*) #4 align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = bitcast i8* %1 to %class.SkStreamAsset*
  %6 = bitcast i8* %1 to void (%class.SkStreamAsset*)***
  %7 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %7, i64 1
  %9 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %8, align 8
  tail call void %9(%class.SkStreamAsset* nonnull %5) #7
  br label %10

10:                                               ; preds = %2, %4
  ret void
}

declare %struct.hb_blob_t* @hb_blob_create(i8*, i32, i32, i8*, void (i8*)*) local_unnamed_addr #2

declare void @hb_set_add(%struct.hb_set_t*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZN13paint_preview10SubsetFontEP10SkTypefaceRKNS_10GlyphUsageEEN3$_08__invokeEPKvPv"(i8* nocapture readnone, i8*) #4 align 2 {
  %3 = bitcast i8* %1 to %struct.hb_blob_t*
  tail call void @hb_blob_destroy(%struct.hb_blob_t* %3) #7
  ret void
}

declare void @hb_blob_destroy(%struct.hb_blob_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #3

declare void @hb_face_destroy(%struct.hb_face_t*) local_unnamed_addr #2

declare void @hb_subset_input_destroy(%struct.hb_subset_input_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvP8hb_set_ttEJNS0_17UnretainedWrapperIS3_EEEEEFvtEE3RunEPNS0_13BindStateBaseEt(%"class.base::internal::BindStateBase"*, i16 zeroext) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%struct.hb_set_t*, i16)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %struct.hb_set_t**
  %7 = load %struct.hb_set_t*, %struct.hb_set_t** %6, align 8
  %8 = load void (%struct.hb_set_t*, i16)*, void (%struct.hb_set_t*, i16)** %4, align 8
  tail call void %8(%struct.hb_set_t* %7, i16 zeroext %1) #7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvP8hb_set_ttEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #8
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN13paint_preview12_GLOBAL__N_112StreamToDataENSt3__110unique_ptrI13SkStreamAssetNS1_14default_deleteIS3_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN13paint_preview12_GLOBAL__N_112StreamToDataENSt3__110unique_ptrI13SkStreamAssetNS1_14default_deleteIS3_EEEE"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvP8hb_set_ttEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvP8hb_set_ttEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base13BindRepeatingIPFvP8hb_set_ttEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!9 = distinct !{!9, !"_ZN4base13BindRepeatingIPFvP8hb_set_ttEJNS_8internal17UnretainedWrapperIS1_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
