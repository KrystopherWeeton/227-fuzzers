; ModuleID = '../../third_party/boringssl/src/crypto/bytestring/ber.c'
source_filename = "../../third_party/boringssl/src/crypto/bytestring/ber.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cbs_st = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }

@.str = private unnamed_addr constant [3 x i8] zeroinitializer, align 1
@switch.table.cbs_convert_ber.1 = private unnamed_addr constant [28 x i32] [i32 3, i32 4, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 12, i32 3, i32 3, i32 3, i32 3, i32 3, i32 18, i32 19, i32 20, i32 21, i32 22, i32 3, i32 3, i32 25, i32 26, i32 27, i32 28, i32 3, i32 30], align 4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_asn1_ber_to_der(%struct.cbs_st*, %struct.cbs_st*, i8**) local_unnamed_addr #0 {
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #4
  store i32 -1431655766, i32* %5, align 4
  %9 = call fastcc i32 @cbs_find_ber(%struct.cbs_st* %0, i32* nonnull %5, i32 0)
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %35, label %11

11:                                               ; preds = %3
  %12 = load i32, i32* %5, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %11
  %15 = call i32 @CBS_get_any_asn1_element(%struct.cbs_st* %0, %struct.cbs_st* %1, i32* null, i64* null) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %35, label %17

17:                                               ; preds = %14
  store i8* null, i8** %2, align 8
  br label %35

18:                                               ; preds = %11
  %19 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #4
  store i64 -6148914691236517206, i64* %6, align 8
  %20 = call i64 @CBS_len(%struct.cbs_st* %0) #4
  %21 = call i32 @CBB_init(%struct.cbb_st* nonnull %4, i64 %20) #4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = call fastcc i32 @cbs_convert_ber(%struct.cbs_st* %0, %struct.cbb_st* nonnull %4, i32 0, i8 signext 0, i32 0)
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = call i32 @CBB_finish(%struct.cbb_st* nonnull %4, i8** %2, i64* nonnull %6) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26, %23, %18
  call void @CBB_cleanup(%struct.cbb_st* nonnull %4) #4
  br label %33

30:                                               ; preds = %26
  %31 = load i8*, i8** %2, align 8
  %32 = load i64, i64* %6, align 8
  call void @CBS_init(%struct.cbs_st* %1, i8* %31, i64 %32) #4
  br label %33

33:                                               ; preds = %30, %29
  %34 = phi i32 [ 1, %30 ], [ 0, %29 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #4
  br label %35

35:                                               ; preds = %14, %3, %33, %17
  %36 = phi i32 [ %34, %33 ], [ 1, %17 ], [ 0, %3 ], [ 0, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #4
  ret i32 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @cbs_find_ber(%struct.cbs_st*, i32*, i32) unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #4
  %9 = icmp ugt i32 %2, 2048
  %10 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  br i1 %9, label %47, label %11

11:                                               ; preds = %3
  %12 = tail call i8* @CBS_data(%struct.cbs_st* %0) #4
  %13 = tail call i64 @CBS_len(%struct.cbs_st* %0) #4
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %12, i64 %13) #4
  store i32 0, i32* %1, align 4
  %14 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #4
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %47, label %16

16:                                               ; preds = %11
  %17 = bitcast %struct.cbs_st* %5 to i8*
  %18 = bitcast i32* %6 to i8*
  %19 = bitcast i64* %7 to i8*
  %20 = add nuw nsw i32 %2, 1
  %21 = bitcast %struct.cbs_st* %5 to i8*
  br label %22

22:                                               ; preds = %16, %44
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #4
  store i32 -1431655766, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #4
  store i64 -6148914691236517206, i64* %7, align 8
  %23 = call i32 @CBS_get_any_ber_asn1_element(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %5, i32* nonnull %6, i64* nonnull %7, i32* %1) #4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %42, label %25

25:                                               ; preds = %22
  %26 = load i32, i32* %1, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %42

28:                                               ; preds = %25
  %29 = load i32, i32* %6, align 4
  %30 = and i32 %29, 536870912
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %28
  %33 = and i32 %29, -536870913
  switch i32 %33, label %35 [
    i32 3, label %34
    i32 4, label %34
    i32 12, label %34
    i32 18, label %34
    i32 19, label %34
    i32 20, label %34
    i32 21, label %34
    i32 22, label %34
    i32 25, label %34
    i32 26, label %34
    i32 27, label %34
    i32 28, label %34
    i32 30, label %34
  ]

34:                                               ; preds = %32, %32, %32, %32, %32, %32, %32, %32, %32, %32, %32, %32, %32
  store i32 1, i32* %1, align 4
  br label %42

35:                                               ; preds = %32
  %36 = load i64, i64* %7, align 8
  %37 = call i32 @CBS_skip(%struct.cbs_st* nonnull %5, i64 %36) #4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = call fastcc i32 @cbs_find_ber(%struct.cbs_st* nonnull %5, i32* %1, i32 %20)
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %22, %25, %39, %35, %34
  %43 = phi i32 [ 1, %34 ], [ 0, %35 ], [ 0, %39 ], [ 1, %25 ], [ 0, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #4
  br label %47

44:                                               ; preds = %28, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #4
  %45 = call i64 @CBS_len(%struct.cbs_st* nonnull %4) #4
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %22

47:                                               ; preds = %44, %11, %42, %3
  %48 = phi i32 [ 0, %3 ], [ %43, %42 ], [ 1, %11 ], [ 1, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #4
  ret i32 %48
}

declare i32 @CBS_get_any_asn1_element(%struct.cbs_st*, %struct.cbs_st*, i32*, i64*) local_unnamed_addr #2

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @cbs_convert_ber(%struct.cbs_st*, %struct.cbb_st*, i32, i8 signext, i32) unnamed_addr #0 {
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.cbb_st, align 8
  %11 = icmp ugt i32 %4, 2048
  br i1 %11, label %118, label %12

12:                                               ; preds = %5
  %13 = bitcast %struct.cbs_st* %6 to i8*
  %14 = bitcast i32* %7 to i8*
  %15 = bitcast i64* %8 to i8*
  %16 = bitcast i32* %9 to i8*
  %17 = bitcast %struct.cbb_st* %10 to i8*
  %18 = icmp eq i32 %2, 0
  %19 = add nuw nsw i32 %4, 1
  %20 = sext i8 %3 to i32
  %21 = bitcast %struct.cbs_st* %6 to i8*
  br label %22

22:                                               ; preds = %12, %111
  %23 = phi i32 [ %112, %111 ], [ undef, %12 ]
  %24 = call i64 @CBS_len(%struct.cbs_st* %0) #4
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %115, label %26

26:                                               ; preds = %22
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #4
  store i32 -1431655766, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #4
  store i64 -6148914691236517206, i64* %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #4
  store i32 -1431655766, i32* %9, align 4
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %27 = call i32 @CBS_get_any_ber_asn1_element(%struct.cbs_st* %0, %struct.cbs_st* nonnull %6, i32* nonnull %7, i64* nonnull %8, i32* nonnull %9) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %111, label %29

29:                                               ; preds = %26
  %30 = load i64, i64* %8, align 8
  %31 = icmp eq i64 %30, 2
  br i1 %31, label %32, label %39

32:                                               ; preds = %29
  %33 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #4
  %34 = icmp eq i64 %33, 2
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  %36 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #4
  %37 = call i32 @bcmp(i8* %36, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %111, label %39

39:                                               ; preds = %35, %29, %32
  %40 = load i32, i32* %7, align 4
  br i1 %18, label %44, label %41

41:                                               ; preds = %39
  %42 = and i32 %40, -536870913
  %43 = icmp eq i32 %42, %2
  br i1 %43, label %67, label %111

44:                                               ; preds = %39
  %45 = and i32 %40, 536870912
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %62, label %47

47:                                               ; preds = %44
  %48 = and i32 %40, -536870913
  %49 = add i32 %48, -3
  %50 = icmp ult i32 %49, 28
  br i1 %50, label %51, label %62

51:                                               ; preds = %47
  %52 = lshr i32 198148611, %49
  %53 = and i32 %52, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %51
  %56 = sext i32 %49 to i64
  %57 = getelementptr inbounds [28 x i32], [28 x i32]* @switch.table.cbs_convert_ber.1, i64 0, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %49 to i64
  %60 = getelementptr inbounds [28 x i32], [28 x i32]* @switch.table.cbs_convert_ber.1, i64 0, i64 %59
  %61 = load i32, i32* %60, align 4
  br label %62

62:                                               ; preds = %51, %47, %55, %44
  %63 = phi i32 [ 0, %44 ], [ %58, %55 ], [ 0, %51 ], [ 0, %47 ]
  %64 = phi i32 [ %40, %44 ], [ %61, %55 ], [ %40, %51 ], [ %40, %47 ]
  %65 = call i32 @CBB_add_asn1(%struct.cbb_st* %1, %struct.cbb_st* nonnull %10, i32 %64) #4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %111, label %67

67:                                               ; preds = %62, %41
  %68 = phi i32 [ %63, %62 ], [ %2, %41 ]
  %69 = phi %struct.cbb_st* [ %10, %62 ], [ %1, %41 ]
  %70 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #4
  %71 = load i64, i64* %8, align 8
  %72 = icmp eq i64 %70, %71
  %73 = icmp ne i64 %71, 0
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %90

75:                                               ; preds = %67
  %76 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #4
  %77 = load i64, i64* %8, align 8
  %78 = add i64 %77, -1
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, -128
  br i1 %81, label %82, label %90

82:                                               ; preds = %75
  %83 = call fastcc i32 @cbs_convert_ber(%struct.cbs_st* %0, %struct.cbb_st* %69, i32 %68, i8 signext 1, i32 %19)
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %111, label %85

85:                                               ; preds = %82
  %86 = call i32 @CBB_flush(%struct.cbb_st* %1) #4
  %87 = icmp eq i32 %86, 0
  %88 = select i1 %87, i32 0, i32 %23
  %89 = select i1 %87, i32 1, i32 2
  br label %111

90:                                               ; preds = %75, %67
  %91 = phi i64 [ %77, %75 ], [ %71, %67 ]
  %92 = call i32 @CBS_skip(%struct.cbs_st* nonnull %6, i64 %91) #4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %111, label %94

94:                                               ; preds = %90
  %95 = load i32, i32* %7, align 4
  %96 = and i32 %95, 536870912
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %94
  %99 = call fastcc i32 @cbs_convert_ber(%struct.cbs_st* nonnull %6, %struct.cbb_st* %69, i32 %68, i8 signext 0, i32 %19)
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %111, label %106

101:                                              ; preds = %94
  %102 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #4
  %103 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #4
  %104 = call i32 @CBB_add_bytes(%struct.cbb_st* %69, i8* %102, i64 %103) #4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %111, label %106

106:                                              ; preds = %98, %101
  %107 = call i32 @CBB_flush(%struct.cbb_st* %1) #4
  %108 = icmp eq i32 %107, 0
  %109 = select i1 %108, i32 0, i32 %23
  %110 = zext i1 %108 to i32
  br label %111

111:                                              ; preds = %85, %35, %62, %106, %101, %98, %90, %82, %41, %26
  %112 = phi i32 [ 0, %62 ], [ 0, %26 ], [ 0, %41 ], [ 0, %82 ], [ 0, %90 ], [ 0, %98 ], [ 0, %101 ], [ %109, %106 ], [ %20, %35 ], [ %88, %85 ]
  %113 = phi i32 [ 1, %62 ], [ 1, %26 ], [ 1, %41 ], [ 1, %82 ], [ 1, %90 ], [ 1, %98 ], [ 1, %101 ], [ %110, %106 ], [ 1, %35 ], [ %89, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #4
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %118, label %22

115:                                              ; preds = %22
  %116 = icmp eq i8 %3, 0
  %117 = zext i1 %116 to i32
  br label %118

118:                                              ; preds = %111, %5, %115
  %119 = phi i32 [ %117, %115 ], [ 0, %5 ], [ %112, %111 ]
  ret i32 %119
}

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @CBS_get_asn1_implicit_string(%struct.cbs_st*, %struct.cbs_st*, i8** nocapture, i32, i32) local_unnamed_addr #0 {
  %6 = alloca %struct.cbb_st, align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = alloca %struct.cbs_st, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = tail call i32 @CBS_peek_asn1_tag(%struct.cbs_st* %0, i32 %3) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %5
  store i8* null, i8** %2, align 8
  %14 = tail call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* %1, i32 %3) #4
  br label %56

15:                                               ; preds = %5
  %16 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  %17 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #4
  %18 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  %19 = tail call i64 @CBS_len(%struct.cbs_st* %0) #4
  %20 = call i32 @CBB_init(%struct.cbb_st* nonnull %6, i64 %19) #4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %53, label %22

22:                                               ; preds = %15
  %23 = or i32 %3, 536870912
  %24 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %7, i32 %23) #4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %53, label %26

26:                                               ; preds = %22
  %27 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #4
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %44, label %29

29:                                               ; preds = %26
  %30 = bitcast %struct.cbs_st* %8 to i8*
  %31 = bitcast %struct.cbs_st* %8 to i8*
  br label %32

32:                                               ; preds = %29, %41
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  %33 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %7, %struct.cbs_st* nonnull %8, i32 %4) #4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = call i8* @CBS_data(%struct.cbs_st* nonnull %8) #4
  %37 = call i64 @CBS_len(%struct.cbs_st* nonnull %8) #4
  %38 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %6, i8* %36, i64 %37) #4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %32, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #4
  br label %53

41:                                               ; preds = %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #4
  %42 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #4
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %32

44:                                               ; preds = %41, %26
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  store i64 -6148914691236517206, i64* %10, align 8
  %45 = call i32 @CBB_finish(%struct.cbb_st* nonnull %6, i8** nonnull %9, i64* nonnull %10) #4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %44
  %48 = load i8*, i8** %9, align 8
  %49 = load i64, i64* %10, align 8
  call void @CBS_init(%struct.cbs_st* %1, i8* %48, i64 %49) #4
  %50 = bitcast i8** %9 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast i8** %2 to i64*
  store i64 %51, i64* %52, align 8
  br label %54

53:                                               ; preds = %40, %44, %22, %15
  call void @CBB_cleanup(%struct.cbb_st* nonnull %6) #4
  br label %54

54:                                               ; preds = %53, %47
  %55 = phi i32 [ 0, %53 ], [ 1, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #4
  br label %56

56:                                               ; preds = %54, %13
  %57 = phi i32 [ %14, %13 ], [ %55, %54 ]
  ret i32 %57
}

declare i32 @CBS_peek_asn1_tag(%struct.cbs_st*, i32) local_unnamed_addr #2

declare i32 @CBS_get_asn1(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @CBS_get_any_ber_asn1_element(%struct.cbs_st*, %struct.cbs_st*, i32*, i64*, i32*) local_unnamed_addr #2

declare i32 @CBS_skip(%struct.cbs_st*, i64) local_unnamed_addr #2

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
