; ModuleID = '../../third_party/blink/renderer/modules/indexeddb/idb_metadata.cc'
source_filename = "../../third_party/blink/renderer/modules/indexeddb/idb_metadata.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::IDBIndexMetadata" = type <{ %"class.WTF::RefCounted", [4 x i8], %"class.WTF::String", i64, %"class.blink::IDBKeyPath", i8, i8, [6 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::IDBKeyPath" = type { i32, %"class.WTF::String", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::IDBObjectStoreMetadata" = type { %"class.WTF::RefCounted.2", %"class.WTF::String", i64, %"class.blink::IDBKeyPath", i8, i64, %"class.WTF::HashMap" }
%"class.WTF::RefCounted.2" = type { %"class.base::RefCounted.3" }
%"class.base::RefCounted.3" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i64, %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.blink::IDBIndexMetadata"* }
%"struct.blink::IDBDatabaseMetadata" = type <{ %"class.WTF::String", i64, i64, i64, %"class.WTF::HashMap.7", i8, [7 x i8] }>
%"class.WTF::HashMap.7" = type { %"class.WTF::HashTable.8" }
%"class.WTF::HashTable.8" = type <{ %"struct.WTF::KeyValuePair.11"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.11" = type { i64, %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.blink::IDBObjectStoreMetadata"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN5blink16IDBIndexMetadataD2Ev = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKlS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKl = comdat any

@_ZN5blink16IDBIndexMetadata10kInvalidIdE = hidden local_unnamed_addr constant i64 -1, align 8
@_ZN5blink22IDBObjectStoreMetadata10kInvalidIdE = hidden local_unnamed_addr constant i64 -1, align 8
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<long, scoped_refptr<blink::IDBIndexMetadata> >]\00", align 1

@_ZN5blink16IDBIndexMetadataC1Ev = hidden unnamed_addr alias void (%"class.blink::IDBIndexMetadata"*), void (%"class.blink::IDBIndexMetadata"*)* @_ZN5blink16IDBIndexMetadataC2Ev
@_ZN5blink16IDBIndexMetadataC1ERKN3WTF6StringElRKNS_10IDBKeyPathEbb = hidden unnamed_addr alias void (%"class.blink::IDBIndexMetadata"*, %"class.WTF::String"*, i64, %"class.blink::IDBKeyPath"*, i1, i1), void (%"class.blink::IDBIndexMetadata"*, %"class.WTF::String"*, i64, %"class.blink::IDBKeyPath"*, i1, i1)* @_ZN5blink16IDBIndexMetadataC2ERKN3WTF6StringElRKNS_10IDBKeyPathEbb
@_ZN5blink22IDBObjectStoreMetadataC1Ev = hidden unnamed_addr alias void (%"class.blink::IDBObjectStoreMetadata"*), void (%"class.blink::IDBObjectStoreMetadata"*)* @_ZN5blink22IDBObjectStoreMetadataC2Ev
@_ZN5blink22IDBObjectStoreMetadataC1ERKN3WTF6StringElRKNS_10IDBKeyPathEbl = hidden unnamed_addr alias void (%"class.blink::IDBObjectStoreMetadata"*, %"class.WTF::String"*, i64, %"class.blink::IDBKeyPath"*, i1, i64), void (%"class.blink::IDBObjectStoreMetadata"*, %"class.WTF::String"*, i64, %"class.blink::IDBKeyPath"*, i1, i64)* @_ZN5blink22IDBObjectStoreMetadataC2ERKN3WTF6StringElRKNS_10IDBKeyPathEbl
@_ZN5blink19IDBDatabaseMetadataC1Ev = hidden unnamed_addr alias void (%"struct.blink::IDBDatabaseMetadata"*), void (%"struct.blink::IDBDatabaseMetadata"*)* @_ZN5blink19IDBDatabaseMetadataC2Ev
@_ZN5blink19IDBDatabaseMetadataC1ERKN3WTF6StringElllb = hidden unnamed_addr alias void (%"struct.blink::IDBDatabaseMetadata"*, %"class.WTF::String"*, i64, i64, i64, i1), void (%"struct.blink::IDBDatabaseMetadata"*, %"class.WTF::String"*, i64, i64, i64, i1)* @_ZN5blink19IDBDatabaseMetadataC2ERKN3WTF6StringElllb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16IDBIndexMetadataC2Ev(%"class.blink::IDBIndexMetadata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %6 = bitcast %"class.WTF::StringImpl"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16IDBIndexMetadataC2ERKN3WTF6StringElRKNS_10IDBKeyPathEbb(%"class.blink::IDBIndexMetadata"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), i64, %"class.blink::IDBKeyPath"* nocapture readonly dereferenceable(32), i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = zext i1 %4 to i8
  %8 = zext i1 %5 to i8
  %9 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #8
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #8
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %6, %14, %29
  %32 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 3
  store i64 %2, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 0
  %34 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %3, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %3, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #8
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %45
  tail call void @llvm.trap() #8
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %55, %40, %31
  %58 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 2
  %59 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %58, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %61, align 8
  %62 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 1
  store i32 0, i32* %62, align 8
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %73, label %64

64:                                               ; preds = %57
  %65 = zext i32 %60 to i64
  %66 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %65) #8
  %67 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %66, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  %68 = ptrtoint i8* %67 to i64
  %69 = bitcast %"class.WTF::Vector"* %58 to i64*
  store atomic i64 %68, i64* %69 monotonic, align 8
  %70 = lshr i64 %66, 3
  %71 = trunc i64 %70 to i32
  store i32 %71, i32* %62, align 8
  %72 = bitcast i8* %67 to %"class.WTF::String"*
  br label %73

73:                                               ; preds = %64, %57
  %74 = phi %"class.WTF::String"* [ null, %57 ], [ %72, %64 ]
  %75 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %3, i64 0, i32 2, i32 0, i32 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 2
  store i32 %76, i32* %77, align 4
  %78 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::String"*, %"class.WTF::String"** %78, align 8
  %80 = load i32, i32* %75, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 %81
  %83 = icmp eq i32 %80, 0
  br i1 %83, label %112, label %84

84:                                               ; preds = %73, %108
  %85 = phi %"class.WTF::String"* [ %109, %108 ], [ %74, %73 ]
  %86 = phi %"class.WTF::String"* [ %110, %108 ], [ %79, %73 ]
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %88, %"class.WTF::StringImpl"** %89, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %90, label %108, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %108

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i33
  %100 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #8
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !2

105:                                              ; preds = %96
  tail call void @llvm.trap() #8
  unreachable

106:                                              ; preds = %96
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %97, align 4
  br label %108

108:                                              ; preds = %106, %91, %84
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 1
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 1
  %111 = icmp eq %"class.WTF::String"* %110, %82
  br i1 %111, label %112, label %84

112:                                              ; preds = %108, %73
  %113 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 5
  store i8 %7, i8* %113, align 8
  %114 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 6
  store i8 %8, i8* %114, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::IDBIndexMetadata"* @_ZN5blink16IDBIndexMetadata6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call noalias i8* @malloc(i64 64) #8
  %2 = bitcast i8* %1 to %"class.blink::IDBIndexMetadata"*
  %3 = bitcast i8* %1 to i32*
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds i8, i8* %1, i64 8
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 24
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #8
  ret %"class.blink::IDBIndexMetadata"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22IDBObjectStoreMetadataC2Ev(%"class.blink::IDBObjectStoreMetadata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  %6 = bitcast %"class.WTF::StringImpl"** %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #8
  %7 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 6
  %8 = bitcast %"class.WTF::HashMap"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22IDBObjectStoreMetadataC2ERKN3WTF6StringElRKNS_10IDBKeyPathEbl(%"class.blink::IDBObjectStoreMetadata"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), i64, %"class.blink::IDBKeyPath"* nocapture readonly dereferenceable(32), i1 zeroext, i64) unnamed_addr #0 align 2 {
  %7 = zext i1 %4 to i8
  %8 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #8
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #8
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %6, %13, %28
  %31 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 2
  store i64 %2, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3, i32 0
  %33 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %3, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %32, align 8
  %35 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %3, i64 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #8
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %44
  tail call void @llvm.trap() #8
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %30
  %57 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3, i32 2
  %58 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %3, i64 0, i32 2, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %57, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %60, align 8
  %61 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 1
  store i32 0, i32* %61, align 8
  %62 = icmp eq i32 %59, 0
  br i1 %62, label %72, label %63

63:                                               ; preds = %56
  %64 = zext i32 %59 to i64
  %65 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %64) #8
  %66 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %65, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #8
  %67 = ptrtoint i8* %66 to i64
  %68 = bitcast %"class.WTF::Vector"* %57 to i64*
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = lshr i64 %65, 3
  %70 = trunc i64 %69 to i32
  store i32 %70, i32* %61, align 8
  %71 = bitcast i8* %66 to %"class.WTF::String"*
  br label %72

72:                                               ; preds = %63, %56
  %73 = phi %"class.WTF::String"* [ null, %56 ], [ %71, %63 ]
  %74 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %3, i64 0, i32 2, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 2
  store i32 %75, i32* %76, align 4
  %77 = getelementptr inbounds %"class.blink::IDBKeyPath", %"class.blink::IDBKeyPath"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %77, align 8
  %79 = load i32, i32* %74, align 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 %80
  %82 = icmp eq i32 %79, 0
  br i1 %82, label %111, label %83

83:                                               ; preds = %72, %107
  %84 = phi %"class.WTF::String"* [ %108, %107 ], [ %73, %72 ]
  %85 = phi %"class.WTF::String"* [ %109, %107 ], [ %78, %72 ]
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %88, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %89, label %107, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %107

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = zext i32 %97 to i33
  %99 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %98, i33 1) #8
  %100 = extractvalue { i33, i1 } %99, 1
  %101 = extractvalue { i33, i1 } %99, 0
  %102 = icmp slt i33 %101, 0
  %103 = or i1 %100, %102
  br i1 %103, label %104, label %105, !prof !2

104:                                              ; preds = %95
  tail call void @llvm.trap() #8
  unreachable

105:                                              ; preds = %95
  %106 = trunc i33 %101 to i32
  store i32 %106, i32* %96, align 4
  br label %107

107:                                              ; preds = %105, %90, %83
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 1
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 1
  %110 = icmp eq %"class.WTF::String"* %109, %81
  br i1 %110, label %111, label %83

111:                                              ; preds = %107, %72
  %112 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 4
  store i8 %7, i8* %112, align 8
  %113 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 5
  store i64 %5, i64* %113, align 8
  %114 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 6
  %115 = bitcast %"class.WTF::HashMap"* %114 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 20, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %"class.blink::IDBObjectStoreMetadata"* @_ZN5blink22IDBObjectStoreMetadata6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call noalias i8* @malloc(i64 96) #8
  %2 = bitcast i8* %1 to %"class.blink::IDBObjectStoreMetadata"*
  %3 = bitcast i8* %1 to i32*
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds i8, i8* %1, i64 8
  %5 = bitcast i8* %4 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds i8, i8* %1, i64 24
  %7 = bitcast i8* %6 to i32*
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %1, i64 32
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #8
  %9 = getelementptr inbounds i8, i8* %1, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #8
  ret %"class.blink::IDBObjectStoreMetadata"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::IDBObjectStoreMetadata"* @_ZNK5blink22IDBObjectStoreMetadata10CreateCopyEv(%"class.blink::IDBObjectStoreMetadata"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.scoped_refptr.1, align 8
  %3 = tail call noalias i8* @malloc(i64 96) #8
  %4 = bitcast i8* %3 to %"class.blink::IDBObjectStoreMetadata"*
  %5 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = icmp ne i8 %10, 0
  %12 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 5
  %13 = load i64, i64* %12, align 8
  tail call void @_ZN5blink22IDBObjectStoreMetadataC2ERKN3WTF6StringElRKNS_10IDBKeyPathEbl(%"class.blink::IDBObjectStoreMetadata"* %4, %"class.WTF::String"* dereferenceable(8) %5, i64 %7, %"class.blink::IDBKeyPath"* dereferenceable(32) %8, i1 zeroext %11, i64 %13)
  %14 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 6, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 6, i32 0, i32 0
  %18 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::IDBObjectStoreMetadata", %"class.blink::IDBObjectStoreMetadata"* %0, i64 0, i32 6, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 %21
  br i1 %16, label %43, label %23

23:                                               ; preds = %1
  %24 = icmp eq i32 %20, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %23, %31
  %26 = phi %"struct.WTF::KeyValuePair"* [ %32, %31 ], [ %18, %23 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 1
  %30 = icmp ult i64 %29, 2
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 1
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, %22
  br i1 %33, label %43, label %25

34:                                               ; preds = %25, %23
  %35 = phi %"struct.WTF::KeyValuePair"* [ %18, %23 ], [ %26, %25 ]
  %36 = icmp eq %"struct.WTF::KeyValuePair"* %35, %22
  br i1 %36, label %43, label %37

37:                                               ; preds = %34
  %38 = bitcast %class.scoped_refptr.1* %2 to i8*
  %39 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %2, i64 0, i32 0
  %40 = bitcast %class.scoped_refptr.1* %2 to i8**
  %41 = getelementptr inbounds i8, i8* %3, i64 72
  %42 = bitcast i8* %41 to %"class.WTF::HashTable"*
  br label %44

43:                                               ; preds = %31, %71, %83, %80, %1, %34
  ret %"class.blink::IDBObjectStoreMetadata"* %4

44:                                               ; preds = %37, %83
  %45 = phi %"struct.WTF::KeyValuePair"* [ %35, %37 ], [ %75, %83 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 1, i32 0
  %47 = load %"class.blink::IDBIndexMetadata"*, %"class.blink::IDBIndexMetadata"** %46, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #8
  store %"class.blink::IDBIndexMetadata"* inttoptr (i64 -6148914691236517206 to %"class.blink::IDBIndexMetadata"*), %"class.blink::IDBIndexMetadata"** %39, align 8
  %48 = call noalias i8* @malloc(i64 64) #8
  %49 = bitcast i8* %48 to %"class.blink::IDBIndexMetadata"*
  %50 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %47, i64 0, i32 2
  %51 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %47, i64 0, i32 3
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %47, i64 0, i32 4
  %54 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %47, i64 0, i32 5
  %55 = load i8, i8* %54, align 8, !range !3
  %56 = icmp ne i8 %55, 0
  %57 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %47, i64 0, i32 6
  %58 = load i8, i8* %57, align 1, !range !3
  %59 = icmp ne i8 %58, 0
  call void @_ZN5blink16IDBIndexMetadataC2ERKN3WTF6StringElRKNS_10IDBKeyPathEbb(%"class.blink::IDBIndexMetadata"* %49, %"class.WTF::String"* dereferenceable(8) %50, i64 %52, %"class.blink::IDBKeyPath"* dereferenceable(32) %53, i1 zeroext %56, i1 zeroext %59)
  store i8* %48, i8** %40, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 0, i32 0
  %61 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKlS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"* %42, i64* dereferenceable(8) %60, %class.scoped_refptr.1* nonnull dereferenceable(8) %2) #8
  %62 = load %"class.blink::IDBIndexMetadata"*, %"class.blink::IDBIndexMetadata"** %39, align 8
  %63 = icmp eq %"class.blink::IDBIndexMetadata"* %62, null
  br i1 %63, label %71, label %64

64:                                               ; preds = %44
  %65 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %62, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %65) #8
  %66 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %64
  call void @_ZN5blink16IDBIndexMetadataD2Ev(%"class.blink::IDBIndexMetadata"* nonnull %62) #8
  %70 = bitcast %"class.blink::IDBIndexMetadata"* %62 to i8*
  call void @free(i8* %70) #8
  br label %71

71:                                               ; preds = %44, %64, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 1
  %73 = icmp eq %"struct.WTF::KeyValuePair"* %72, %22
  br i1 %73, label %43, label %74

74:                                               ; preds = %71, %80
  %75 = phi %"struct.WTF::KeyValuePair"* [ %81, %80 ], [ %72, %71 ]
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = icmp ult i64 %78, 2
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 1
  %82 = icmp eq %"struct.WTF::KeyValuePair"* %81, %22
  br i1 %82, label %43, label %74

83:                                               ; preds = %74
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %75, %22
  br i1 %84, label %43, label %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19IDBDatabaseMetadataC2Ev(%"struct.blink::IDBDatabaseMetadata"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2, align 8
  %3 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 2
  store i64 -1, i64* %3, align 8
  %4 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 4
  %5 = bitcast %"class.WTF::HashMap.7"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19IDBDatabaseMetadataC2ERKN3WTF6StringElllb(%"struct.blink::IDBDatabaseMetadata"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), i64, i64, i64, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = zext i1 %5 to i8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %6, %12, %27
  %30 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 1
  store i64 %2, i64* %30, align 8
  %31 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 2
  store i64 %3, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 3
  store i64 %4, i64* %32, align 8
  %33 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 4
  %34 = bitcast %"class.WTF::HashMap.7"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 20, i1 false) #8
  %35 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 5
  store i8 %7, i8* %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19IDBDatabaseMetadata8CopyFromERKS0_(%"struct.blink::IDBDatabaseMetadata"* nocapture, %"struct.blink::IDBDatabaseMetadata"* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #8
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #8
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"struct.blink::IDBDatabaseMetadata"* %0 to i64*
  %26 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #8
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %1, i64 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 1
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %1, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 2
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %1, i64 0, i32 3
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 3
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %1, i64 0, i32 5
  %53 = load i8, i8* %52, align 8, !range !3
  %54 = getelementptr inbounds %"struct.blink::IDBDatabaseMetadata", %"struct.blink::IDBDatabaseMetadata"* %0, i64 0, i32 5
  store i8 %53, i8* %54, align 8
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16IDBIndexMetadataD2Ev(%"class.blink::IDBIndexMetadata"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = icmp eq %"class.WTF::String"* %4, null
  br i1 %5, label %40, label %6, !prof !4

6:                                                ; preds = %1
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %38, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %12
  br label %14

14:                                               ; preds = %32, %11
  %15 = phi %"class.WTF::String"* [ %33, %32 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #8
  br label %32

32:                                               ; preds = %31, %28, %14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 1
  %34 = icmp eq %"class.WTF::String"* %33, %13
  br i1 %34, label %35, label %14

35:                                               ; preds = %32
  store i32 0, i32* %8, align 4
  %36 = bitcast %"class.WTF::Vector"* %2 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i8* [ %37, %35 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %3, align 8
  br label %40

40:                                               ; preds = %38, %1
  %41 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #8
  br label %57

57:                                               ; preds = %40, %53, %56
  %58 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %0, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #8
  br label %74

74:                                               ; preds = %57, %70, %73
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKlS5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, i64* dereferenceable(8), %class.scoped_refptr.1* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = shl i64 %16, 32
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 22
  %21 = xor i64 %20, %19
  %22 = shl i64 %21, 13
  %23 = xor i64 %22, -1
  %24 = add i64 %21, %23
  %25 = lshr i64 %24, 8
  %26 = xor i64 %25, %24
  %27 = mul i64 %26, 9
  %28 = lshr i64 %27, 15
  %29 = xor i64 %28, %27
  %30 = shl i64 %29, 27
  %31 = xor i64 %30, -1
  %32 = add i64 %29, %31
  %33 = lshr i64 %32, 31
  %34 = xor i64 %33, %32
  %35 = trunc i64 %34 to i32
  %36 = and i32 %14, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %85, label %42

42:                                               ; preds = %10
  %43 = xor i32 %35, -1
  %44 = lshr i32 %35, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %42, %63
  %57 = phi i64 [ %40, %42 ], [ %72, %63 ]
  %58 = phi %"struct.WTF::KeyValuePair"* [ %38, %42 ], [ %70, %63 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ null, %42 ], [ %65, %63 ]
  %60 = phi i64 [ %37, %42 ], [ %69, %63 ]
  %61 = phi i64 [ 0, %42 ], [ %67, %63 ]
  %62 = icmp eq i64 %57, %16
  br i1 %62, label %116, label %63

63:                                               ; preds = %56
  %64 = icmp eq i64 %57, -1
  %65 = select i1 %64, %"struct.WTF::KeyValuePair"* %58, %"struct.WTF::KeyValuePair"* %59
  %66 = icmp eq i64 %61, 0
  %67 = select i1 %66, i64 %55, i64 %61
  %68 = add i64 %67, %60
  %69 = and i64 %68, %15
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %56

74:                                               ; preds = %63
  %75 = icmp eq %"struct.WTF::KeyValuePair"* %65, null
  br i1 %75, label %85, label %76

76:                                               ; preds = %74
  %77 = bitcast %"struct.WTF::KeyValuePair"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 16, i1 false) #8
  %78 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, 2147483647
  %81 = and i32 %80, 2147483647
  %82 = and i32 %79, -2147483648
  %83 = or i32 %81, %82
  store i32 %83, i32* %78, align 8
  %84 = load i64, i64* %1, align 8
  br label %85

85:                                               ; preds = %10, %74, %76
  %86 = phi i64 [ %84, %76 ], [ %16, %74 ], [ %16, %10 ]
  %87 = phi %"struct.WTF::KeyValuePair"* [ %65, %76 ], [ %70, %74 ], [ %38, %10 ]
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 0
  store i64 %86, i64* %88, align 8
  %89 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %2, i64 0, i32 0
  %90 = bitcast %class.scoped_refptr.1* %2 to i64*
  %91 = load i64, i64* %90, align 8
  store %"class.blink::IDBIndexMetadata"* null, %"class.blink::IDBIndexMetadata"** %89, align 8
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 1
  %93 = bitcast %class.scoped_refptr.1* %92 to i64*
  %94 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %92, i64 0, i32 0
  %95 = load %"class.blink::IDBIndexMetadata"*, %"class.blink::IDBIndexMetadata"** %94, align 8
  store i64 %91, i64* %93, align 8
  %96 = icmp eq %"class.blink::IDBIndexMetadata"* %95, null
  br i1 %96, label %104, label %97

97:                                               ; preds = %85
  %98 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %95, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %98) #8
  %99 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %97
  tail call void @_ZN5blink16IDBIndexMetadataD2Ev(%"class.blink::IDBIndexMetadata"* nonnull %95) #8
  %103 = bitcast %"class.blink::IDBIndexMetadata"* %95 to i8*
  tail call void @free(i8* %103) #8
  br label %104

104:                                              ; preds = %85, %97, %102
  %105 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %109, %107
  %111 = shl i32 %110, 1
  %112 = load i32, i32* %12, align 8
  %113 = icmp ult i32 %111, %112
  br i1 %113, label %116, label %114

114:                                              ; preds = %104
  %115 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %87)
  br label %116

116:                                              ; preds = %56, %104, %114
  %117 = phi i8 [ 1, %104 ], [ 1, %114 ], [ 0, %56 ]
  %118 = phi %"struct.WTF::KeyValuePair"* [ %87, %104 ], [ %115, %114 ], [ %58, %56 ]
  %119 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %118, 0
  %120 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %119, i8 %117, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %120
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #8
  ret %"struct.WTF::KeyValuePair"* %37
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %66

24:                                               ; preds = %105
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %106, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %109, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %107, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %62, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %57, %39
  %42 = phi i64 [ 0, %39 ], [ %58, %57 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, -1
  br i1 %45, label %57, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0
  %48 = load %"class.blink::IDBIndexMetadata"*, %"class.blink::IDBIndexMetadata"** %47, align 8
  %49 = icmp eq %"class.blink::IDBIndexMetadata"* %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %48, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #8
  %52 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  call void @_ZN5blink16IDBIndexMetadataD2Ev(%"class.blink::IDBIndexMetadata"* nonnull %48) #8
  %56 = bitcast %"class.blink::IDBIndexMetadata"* %48 to i8*
  call void @free(i8* %56) #8
  br label %57

57:                                               ; preds = %55, %50, %46, %41
  %58 = add nuw nsw i64 %42, 1
  %59 = icmp eq i64 %58, %40
  br i1 %59, label %60, label %41

60:                                               ; preds = %57, %37
  %61 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %61) #8
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %62

62:                                               ; preds = %28, %60
  %63 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, -2147483648
  store i32 %65, i32* %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair"* %33

66:                                               ; preds = %21, %105
  %67 = phi i64 [ %106, %105 ], [ %23, %21 ]
  %68 = phi i32 [ %107, %105 ], [ %13, %21 ]
  %69 = phi %"struct.WTF::KeyValuePair"* [ %108, %105 ], [ %22, %21 ]
  %70 = phi %"struct.WTF::KeyValuePair"* [ %109, %105 ], [ null, %21 ]
  %71 = phi i32 [ %110, %105 ], [ 0, %21 ]
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 %72, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, 1
  %76 = icmp ult i64 %75, 2
  br i1 %76, label %105, label %77

77:                                               ; preds = %66
  %78 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKl(%"class.WTF::HashTable"* nonnull %5, i64* dereferenceable(8) %73) #8
  %79 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %78, 0
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1, i32 0
  %81 = load %"class.blink::IDBIndexMetadata"*, %"class.blink::IDBIndexMetadata"** %80, align 8
  %82 = icmp eq %"class.blink::IDBIndexMetadata"* %81, null
  br i1 %82, label %90, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %81, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %84) #8
  %85 = getelementptr inbounds %"class.blink::IDBIndexMetadata", %"class.blink::IDBIndexMetadata"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  call void @_ZN5blink16IDBIndexMetadataD2Ev(%"class.blink::IDBIndexMetadata"* nonnull %81) #8
  %89 = bitcast %"class.blink::IDBIndexMetadata"* %81 to i8*
  call void @free(i8* %89) #8
  br label %90

90:                                               ; preds = %77, %83, %88
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0
  %92 = load i64, i64* %73, align 8
  store i64 %92, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 %72, i32 1
  %95 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %94, i64 0, i32 0
  %96 = bitcast %class.scoped_refptr.1* %94 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %class.scoped_refptr.1* %93 to i64*
  store i64 %97, i64* %98, align 8
  store %"class.blink::IDBIndexMetadata"* null, %"class.blink::IDBIndexMetadata"** %95, align 8
  %99 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %99, i64 %72
  %101 = icmp eq %"struct.WTF::KeyValuePair"* %100, %3
  %102 = select i1 %101, %"struct.WTF::KeyValuePair"* %79, %"struct.WTF::KeyValuePair"* %70
  %103 = load i32, i32* %12, align 8
  %104 = ptrtoint %"struct.WTF::KeyValuePair"* %99 to i64
  br label %105

105:                                              ; preds = %66, %90
  %106 = phi i64 [ %67, %66 ], [ %104, %90 ]
  %107 = phi i32 [ %68, %66 ], [ %103, %90 ]
  %108 = phi %"struct.WTF::KeyValuePair"* [ %69, %66 ], [ %99, %90 ]
  %109 = phi %"struct.WTF::KeyValuePair"* [ %70, %66 ], [ %102, %90 ]
  %110 = add i32 %71, 1
  %111 = icmp eq i32 %110, %107
  br i1 %111, label %24, label %66
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIlNS_12KeyValuePairIl13scoped_refptrIN5blink16IDBIndexMetadataEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIlEENS_18HashMapValueTraitsINS_10HashTraitsIlEENSB_IS5_EEEESC_NS_18PartitionAllocatorEE16LookupForWritingERKl(%"class.WTF::HashTable"*, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = load i64, i64* %1, align 8
  %10 = shl i64 %9, 32
  %11 = xor i64 %10, -1
  %12 = add i64 %9, %11
  %13 = lshr i64 %12, 22
  %14 = xor i64 %13, %12
  %15 = shl i64 %14, 13
  %16 = xor i64 %15, -1
  %17 = add i64 %14, %16
  %18 = lshr i64 %17, 8
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, 9
  %21 = lshr i64 %20, 15
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 27
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 31
  %27 = xor i64 %26, %25
  %28 = trunc i64 %27 to i32
  %29 = and i32 %7, %28
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %30
  %32 = ptrtoint %"struct.WTF::KeyValuePair"* %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %53, label %36

36:                                               ; preds = %2
  %37 = xor i32 %28, -1
  %38 = lshr i32 %28, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %59

50:                                               ; preds = %66
  %51 = ptrtoint %"struct.WTF::KeyValuePair"* %73 to i64
  %52 = inttoptr i64 %68 to %"struct.WTF::KeyValuePair"*
  br label %53

53:                                               ; preds = %50, %2
  %54 = phi i64 [ %51, %50 ], [ %32, %2 ]
  %55 = phi %"struct.WTF::KeyValuePair"* [ %52, %50 ], [ null, %2 ]
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %55, null
  %57 = ptrtoint %"struct.WTF::KeyValuePair"* %55 to i64
  %58 = select i1 %56, i64 %54, i64 %57
  br label %78

59:                                               ; preds = %66, %36
  %60 = phi i64 [ 0, %36 ], [ %68, %66 ]
  %61 = phi i64 [ %34, %36 ], [ %76, %66 ]
  %62 = phi i64 [ %32, %36 ], [ %74, %66 ]
  %63 = phi i64 [ %30, %36 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %36 ], [ %70, %66 ]
  %65 = icmp eq i64 %61, %9
  br i1 %65, label %78, label %66

66:                                               ; preds = %59
  %67 = icmp eq i64 %61, -1
  %68 = select i1 %67, i64 %62, i64 %60
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %49, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %72
  %74 = ptrtoint %"struct.WTF::KeyValuePair"* %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %50, label %59

78:                                               ; preds = %59, %53
  %79 = phi i64 [ %58, %53 ], [ %62, %59 ]
  %80 = phi i8 [ 0, %53 ], [ 1, %59 ]
  %81 = inttoptr i64 %79 to %"struct.WTF::KeyValuePair"*
  %82 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %81, 0
  %83 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %82, i8 %80, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %83
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
