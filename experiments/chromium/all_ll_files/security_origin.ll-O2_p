; ModuleID = '../../third_party/blink/renderer/platform/weborigin/security_origin.cc'
source_filename = "../../third_party/blink/renderer/platform/weborigin/security_origin.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const blink::KURL>::InstanceStorage" }
%"class.WTF::StaticSingleton<const blink::KURL>::InstanceStorage" = type { %"class.blink::KURL"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.2 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.2 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::BlobURLNullOriginMap"*, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::BlobURLNullOriginMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.blink::SecurityOrigin"* }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, %union.anon.12 }
%union.anon.12 = type { %"class.base::UnguessableToken" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::OriginAccessEntry" = type { %"class.network::cors::OriginAccessEntry" }
%"class.network::cors::OriginAccessEntry" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [2 x i8], i32, i32, i32, i8, [7 x i8], %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.blink::BlobURLOpaqueOriginNonceMap" = type { %"class.WTF::HashMap.13", %"class.WTF::Mutex" }
%"class.WTF::HashMap.13" = type { %"class.WTF::HashTable.14" }
%"class.WTF::HashTable.14" = type <{ %"struct.WTF::KeyValuePair.17"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.17" = type opaque
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.23, i32, i8, i8, [2 x i8] }>
%union.anon.23 = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::IntegerToStringConverter" = type <{ [6 x i8], [2 x i8], i8*, i32, [4 x i8] }>
%"struct.blink::SecurityOrigin::PrivilegeData" = type { i8, i8, i8 }
%"class.url::RawCanonOutputT" = type { %"class.url::CanonOutputT", [1024 x i8] }
%"class.url::CanonOutputT" = type { i32 (...)**, i8*, i32, i32 }
%"class.WTF::StringUTF8Adaptor" = type <{ %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.WTF::Vector.26" = type { %"class.WTF::VectorBuffer.27" }
%"class.WTF::VectorBuffer.27" = type { %"class.WTF::VectorBufferBase.28", [16 x i8] }
%"class.WTF::VectorBufferBase.28" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3url15RawCanonOutputTIcLi1024EED2Ev = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN3url15RawCanonOutputTIcLi1024EED0Ev = comdat any

$_ZN3url15RawCanonOutputTIcLi1024EE6ResizeEi = comdat any

$_ZTVN3url15RawCanonOutputTIcLi1024EEE = comdat any

@.str = private unnamed_addr constant [5 x i8] c"blob\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"filesystem\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.3 = private unnamed_addr constant [71 x i8] c"../../third_party/blink/renderer/platform/weborigin/security_origin.cc\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"tuple_origin\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"result.opaque()\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"!result.opaque()\00", align 1
@.str.7 = private unnamed_addr constant [62 x i8] c"Only secure origins are allowed (see: https://goo.gl/Y0ZkNV).\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"[::1]\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"file://\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"://\00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c"!agent_cluster_id_.is_empty()\00", align 1
@_ZZN5blink14SecurityOrigin25UrlWithUniqueOpaqueOriginEvE5s_url = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink14SecurityOrigin25UrlWithUniqueOpaqueOriginEvE5s_url = internal global i64 0, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.13 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.15 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.17 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.18 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20BlobURLNullOriginMapEEEPKcv = private unnamed_addr constant [75 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BlobURLNullOriginMap]\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"data:,\00", align 1
@_ZTVN3url15RawCanonOutputTIcLi1024EEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIcLi1024EED2Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*)* @_ZN3url15RawCanonOutputTIcLi1024EED0Ev to i8*), i8* bitcast (void (%"class.url::RawCanonOutputT"*, i32)* @_ZN3url15RawCanonOutputTIcLi1024EE6ResizeEi to i8*)] }, comdat, align 8

@_ZN5blink14SecurityOriginC1ERKNS_4KURLE = hidden unnamed_addr alias void (%"class.blink::SecurityOrigin"*, %"class.blink::KURL"*), void (%"class.blink::SecurityOrigin"*, %"class.blink::KURL"*)* @_ZN5blink14SecurityOriginC2ERKNS_4KURLE
@_ZN5blink14SecurityOriginC1ERKN3WTF6StringES4_t = hidden unnamed_addr alias void (%"class.blink::SecurityOrigin"*, %"class.WTF::String"*, %"class.WTF::String"*, i16), void (%"class.blink::SecurityOrigin"*, %"class.WTF::String"*, %"class.WTF::String"*, i16)* @_ZN5blink14SecurityOriginC2ERKN3WTF6StringES4_t
@_ZN5blink14SecurityOriginC1ERKN3url6Origin5NonceEPKS0_ = hidden unnamed_addr alias void (%"class.blink::SecurityOrigin"*, %"class.url::Origin::Nonce"*, %"class.blink::SecurityOrigin"*), void (%"class.blink::SecurityOrigin"*, %"class.url::Origin::Nonce"*, %"class.blink::SecurityOrigin"*)* @_ZN5blink14SecurityOriginC2ERKN3url6Origin5NonceEPKS0_
@_ZN5blink14SecurityOriginC1EPKS0_NS0_21ConstructIsolatedCopyE = hidden unnamed_addr alias void (%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32), void (%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32)* @_ZN5blink14SecurityOriginC2EPKS0_NS0_21ConstructIsolatedCopyE
@_ZN5blink14SecurityOriginC1EPKS0_NS0_23ConstructSameThreadCopyE = hidden unnamed_addr alias void (%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32), void (%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32)* @_ZN5blink14SecurityOriginC2EPKS0_NS0_23ConstructSameThreadCopyE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SecurityOrigin17ShouldUseInnerURLERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %5 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 4, i32* %7, align 8
  %8 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %0, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %2) #16
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %11 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 10, i32* %13, align 8
  %14 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %0, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %3) #16
  br label %15

15:                                               ; preds = %9, %1
  %16 = phi i1 [ true, %1 ], [ %14, %9 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SecurityOrigin15ExtractInnerURLERKNS_4KURLE(%"class.blink::KURL"* noalias sret, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.blink::KURL"*, %"class.blink::KURL"** %4, align 8
  %6 = icmp eq %"class.blink::KURL"* %5, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #16
  br label %28

8:                                                ; preds = %2
  %9 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"* %1) #16
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #16
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #16
  br label %27

27:                                               ; preds = %8, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  br label %28

28:                                               ; preds = %27, %7
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SecurityOriginC2ERKNS_4KURLE(%"class.blink::SecurityOrigin"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"* %1) #16
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  %10 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %11 = select i1 %9, %"class.WTF::String"* %10, %"class.WTF::String"* %3
  %12 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  %13 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"* %1) #16
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %13, null
  %16 = select i1 %15, %"class.WTF::String"* %10, %"class.WTF::String"* %4
  %17 = tail call zeroext i1 @_ZNK5blink4KURL7HasPortEv(%"class.blink::KURL"* %1) #16
  br i1 %17, label %22, label %18

18:                                               ; preds = %2
  %19 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %1) #16
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = tail call zeroext i1 @_ZNK5blink4KURL14IsHierarchicalEv(%"class.blink::KURL"* %1) #16
  br i1 %21, label %24, label %22

22:                                               ; preds = %20, %18, %2
  %23 = tail call zeroext i16 @_ZNK5blink4KURL4PortEv(%"class.blink::KURL"* %1) #16
  call void @_ZN5blink14SecurityOriginC2ERKN3WTF6StringES4_t(%"class.blink::SecurityOrigin"* %0, %"class.WTF::String"* dereferenceable(8) %11, %"class.WTF::String"* dereferenceable(8) %16, i16 zeroext %23)
  br label %45

24:                                               ; preds = %20
  %25 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  %26 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"* %1) #16
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %27, align 8
  %28 = call zeroext i16 @_ZN5blink22DefaultPortForProtocolERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %5) #16
  call void @_ZN5blink14SecurityOriginC2ERKN3WTF6StringES4_t(%"class.blink::SecurityOrigin"* %0, %"class.WTF::String"* dereferenceable(8) %11, %"class.WTF::String"* dereferenceable(8) %16, i16 zeroext %28)
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #16
  br label %44

44:                                               ; preds = %24, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  br label %45

45:                                               ; preds = %22, %44
  br i1 %15, label %59, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #16
  br label %59

59:                                               ; preds = %45, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  br i1 %9, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #16
  br label %73

73:                                               ; preds = %59, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL4HostEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL7HasPortEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL14IsHierarchicalEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare zeroext i16 @_ZNK5blink4KURL4PortEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare zeroext i16 @_ZN5blink22DefaultPortForProtocolERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SecurityOriginC2ERKN3WTF6StringES4_t(%"class.blink::SecurityOrigin"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), i16 zeroext) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #16
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #16
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %4, %10, %25
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  br label %74

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %40, align 8
  br label %56

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #16
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #16
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %54 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %55, label %74, label %56

56:                                               ; preds = %39, %51
  %57 = phi %"class.WTF::StringImpl"* [ %29, %39 ], [ %53, %51 ]
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %74

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i33
  %66 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #16
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %62
  tail call void @llvm.trap() #16
  unreachable

72:                                               ; preds = %62
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %63, align 4
  br label %74

74:                                               ; preds = %32, %51, %56, %72
  %75 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 4
  store i16 %3, i16* %75, align 8
  %76 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %76, align 8
  %77 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 6
  %78 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 8
  %79 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 12
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 6, i1 false)
  %80 = bitcast %"class.base::UnguessableToken"* %79 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false)
  %81 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin7IsLocalEv(%"class.blink::SecurityOrigin"* %0)
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %78, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SecurityOrigin7IsLocalEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN3url15GetLocalSchemesEv() #16
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %2, %"class.WTF::String"* %5) #16
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %7, %9
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  br i1 %10, label %65, label %14

14:                                               ; preds = %1
  %15 = icmp slt i8 %13, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %13 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = select i1 %15, i8* %21, i8* %4
  %23 = icmp eq i64 %19, 0
  br label %24

24:                                               ; preds = %62, %14
  %25 = phi %"class.std::__1::basic_string"* [ %7, %14 ], [ %63, %62 ]
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp eq i64 %33, %19
  br i1 %34, label %35, label %62

35:                                               ; preds = %24
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %39 = select i1 %29, i8* %37, i8* %38
  br i1 %29, label %46, label %40

40:                                               ; preds = %35
  br i1 %23, label %65, label %41

41:                                               ; preds = %40
  %42 = ptrtoint i8* %37 to i64
  %43 = trunc i64 %42 to i8
  %44 = load i8, i8* %22, align 1
  %45 = icmp eq i8 %44, %43
  br i1 %45, label %47, label %62

46:                                               ; preds = %35
  br i1 %23, label %65, label %59

47:                                               ; preds = %41, %54
  %48 = phi i64 [ %51, %54 ], [ %32, %41 ]
  %49 = phi i8* [ %52, %54 ], [ %38, %41 ]
  %50 = phi i8* [ %55, %54 ], [ %22, %41 ]
  %51 = add i64 %48, -1
  %52 = getelementptr inbounds i8, i8* %49, i64 1
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds i8, i8* %50, i64 1
  %56 = load i8, i8* %52, align 1
  %57 = load i8, i8* %55, align 1
  %58 = icmp eq i8 %56, %57
  br i1 %58, label %47, label %62

59:                                               ; preds = %46
  %60 = call i32 @bcmp(i8* %39, i8* %22, i64 %19) #16
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %54, %59, %41, %24
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 1
  %64 = icmp eq %"class.std::__1::basic_string"* %63, %9
  br i1 %64, label %65, label %24

65:                                               ; preds = %40, %46, %59, %62, %47, %1
  %66 = phi %"class.std::__1::basic_string"* [ %7, %1 ], [ %25, %47 ], [ %25, %59 ], [ %25, %46 ], [ %25, %40 ], [ %9, %62 ]
  %67 = icmp ne %"class.std::__1::basic_string"* %66, %9
  %68 = icmp slt i8 %13, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #17
  br label %72

72:                                               ; preds = %65, %69
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret i1 %67
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SecurityOriginC2ERKN3url6Origin5NonceEPKS0_(%"class.blink::SecurityOrigin"*, %"class.url::Origin::Nonce"* dereferenceable(16), %"class.blink::SecurityOrigin"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #16
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #16
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %3, %10, %25
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %29 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #16
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %36
  tail call void @llvm.trap() #16
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %27, %31, %46
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %50 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %50, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %51, label %69, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #16
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %57
  tail call void @llvm.trap() #16
  unreachable

67:                                               ; preds = %57
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %58, align 4
  br label %69

69:                                               ; preds = %48, %52, %67
  %70 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 4
  store i16 0, i16* %70, align 8
  %71 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %71, align 8
  %72 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3url6Origin5NonceC1ERKS1_(%"class.url::Origin::Nonce"* %72, %"class.url::Origin::Nonce"* dereferenceable(16) %1) #16
  %73 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 6
  %74 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 12
  %75 = bitcast %"class.base::UnguessableToken"* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #16
  %76 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 6, i1 false)
  store %"class.blink::SecurityOrigin"* %2, %"class.blink::SecurityOrigin"** %76, align 8
  %77 = icmp eq %"class.blink::SecurityOrigin"* %2, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %2, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %79) #16
  br label %80

80:                                               ; preds = %69, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SecurityOriginC2EPKS0_NS0_21ConstructIsolatedCopyE(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 1
  %6 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %5) #16
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 2
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %8) #16
  %10 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 3
  %12 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %11) #16
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 4
  %16 = load i16, i16* %15, align 8
  store i16 %16, i16* %14, align 8
  %17 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #16
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3url6Origin5NonceC1ERKS1_(%"class.url::Origin::Nonce"* %23, %"class.url::Origin::Nonce"* dereferenceable(16) %22) #16
  store i8 1, i8* %17, align 8
  br label %24

24:                                               ; preds = %3, %21
  %25 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 6
  %27 = load i8, i8* %26, align 8, !range !3
  store i8 %27, i8* %25, align 8
  %28 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 7
  %29 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 7
  %30 = load i8, i8* %29, align 1, !range !3
  store i8 %30, i8* %28, align 1
  %31 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 8
  %32 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 8
  %33 = load i8, i8* %32, align 2, !range !3
  store i8 %33, i8* %31, align 2
  %34 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 9
  %35 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 9
  %36 = load i8, i8* %35, align 1, !range !3
  store i8 %36, i8* %34, align 1
  %37 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 10
  %38 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 10
  %39 = load i8, i8* %38, align 4, !range !3
  store i8 %39, i8* %37, align 4
  %40 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 11
  %41 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 11
  %42 = load i8, i8* %41, align 1, !range !3
  store i8 %42, i8* %40, align 1
  %43 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 12
  %44 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 12
  %45 = bitcast %"class.base::UnguessableToken"* %43 to i8*
  %46 = bitcast %"class.base::UnguessableToken"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 16, i1 false)
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13
  %48 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 13, i32 0
  %49 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %48, align 8
  %50 = icmp eq %"class.blink::SecurityOrigin"* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %24
  %52 = tail call noalias i8* @malloc(i64 96) #16
  %53 = bitcast i8* %52 to %"class.blink::SecurityOrigin"*
  tail call void @_ZN5blink14SecurityOriginC2EPKS0_NS0_21ConstructIsolatedCopyE(%"class.blink::SecurityOrigin"* %53, %"class.blink::SecurityOrigin"* nonnull %49, i32 undef) #16
  %54 = ptrtoint i8* %52 to i64
  br label %55

55:                                               ; preds = %24, %51
  %56 = phi i64 [ %54, %51 ], [ 0, %24 ]
  %57 = bitcast %class.scoped_refptr.2* %47 to i64*
  store i64 %56, i64* %57, align 8
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin12IsolatedCopyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %2 = tail call noalias i8* @malloc(i64 96) #16
  %3 = bitcast i8* %2 to %"class.blink::SecurityOrigin"*
  tail call void @_ZN5blink14SecurityOriginC2EPKS0_NS0_21ConstructIsolatedCopyE(%"class.blink::SecurityOrigin"* %3, %"class.blink::SecurityOrigin"* %0, i32 undef)
  ret %"class.blink::SecurityOrigin"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SecurityOriginC2EPKS0_NS0_23ConstructSameThreadCopyE(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #16
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #16
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %3, %9, %24
  %27 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %29, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %30, label %48, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %48

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #16
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %36
  tail call void @llvm.trap() #16
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %48

48:                                               ; preds = %26, %31, %46
  %49 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 3, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %51, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #16
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !2

67:                                               ; preds = %58
  tail call void @llvm.trap() #16
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %48, %53, %68
  %71 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 4
  %72 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 4
  %73 = load i16, i16* %72, align 8
  store i16 %73, i16* %71, align 8
  %74 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #16
  %76 = load i8, i8* %75, align 8, !range !3
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %80 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3url6Origin5NonceC1ERKS1_(%"class.url::Origin::Nonce"* %80, %"class.url::Origin::Nonce"* dereferenceable(16) %79) #16
  store i8 1, i8* %74, align 8
  br label %81

81:                                               ; preds = %70, %78
  %82 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 6
  %83 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 6
  %84 = load i8, i8* %83, align 8, !range !3
  store i8 %84, i8* %82, align 8
  %85 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 7
  %86 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 7
  %87 = load i8, i8* %86, align 1, !range !3
  store i8 %87, i8* %85, align 1
  %88 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 8
  %89 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 8
  %90 = load i8, i8* %89, align 2, !range !3
  store i8 %90, i8* %88, align 2
  %91 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 9
  %92 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 9
  %93 = load i8, i8* %92, align 1, !range !3
  store i8 %93, i8* %91, align 1
  %94 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 10
  %95 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 10
  %96 = load i8, i8* %95, align 4, !range !3
  store i8 %96, i8* %94, align 4
  %97 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 11
  %98 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 11
  %99 = load i8, i8* %98, align 1, !range !3
  store i8 %99, i8* %97, align 1
  %100 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 12
  %101 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 12
  %102 = bitcast %"class.base::UnguessableToken"* %100 to i8*
  %103 = bitcast %"class.base::UnguessableToken"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 16, i1 false)
  %104 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 13, i32 0
  %105 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  store %"class.blink::SecurityOrigin"* %105, %"class.blink::SecurityOrigin"** %106, align 8
  %107 = icmp eq %"class.blink::SecurityOrigin"* %105, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %81
  %109 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %105, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %109) #16
  br label %110

110:                                              ; preds = %81, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin25CreateWithReferenceOriginERKNS_4KURLEPKS0_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.url::Origin::Nonce", align 8
  %7 = alloca %"class.url::Origin::Nonce", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.blink::KURL", align 8
  %14 = alloca %"class.blink::KURL", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.url::Origin::Nonce", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.blink::KURL", align 8
  %24 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %25 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 4, i32* %27, align 8
  %28 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %0, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %22) #16
  br i1 %28, label %29, label %82

29:                                               ; preds = %2
  %30 = tail call %"class.WTF::StringImpl"* @_ZN5blink7BlobURL9GetOriginERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112) %0) #16
  %31 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %35, i64* %36, align 8
  br label %45

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %45

45:                                               ; preds = %37, %33
  %46 = phi i64 [ %44, %37 ], [ %35, %33 ]
  %47 = phi i32 [ %40, %37 ], [ 0, %33 ]
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 %47, i32* %48, align 8
  %49 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #16
  %50 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %46, i64* %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 4, i32* %52, align 8
  %53 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %20, %"class.WTF::StringView"* nonnull dereferenceable(24) %21) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  br i1 %32, label %67, label %54

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #16
  br i1 %53, label %68, label %82

67:                                               ; preds = %63, %45
  br i1 %53, label %68, label %82

68:                                               ; preds = %66, %67
  %69 = call dereferenceable(16) %"class.WTF::ThreadSpecific"* @_ZN5blink20BlobURLNullOriginMap11GetInstanceEv() #16
  %70 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %69, i64 0, i32 1
  %71 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %70) #16
  %72 = icmp eq i8* %71, null
  br i1 %72, label %73, label %75, !prof !2

73:                                               ; preds = %68
  %74 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20BlobURLNullOriginMapEEEPKcv, i64 0, i64 0)) #16
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %70, i8* %74) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 20, i1 false) #16
  br label %75

75:                                               ; preds = %68, %73
  %76 = phi i8* [ %74, %73 ], [ %71, %68 ]
  %77 = bitcast i8* %76 to %"class.blink::BlobURLNullOriginMap"*
  %78 = call %"class.blink::SecurityOrigin"* @_ZN5blink20BlobURLNullOriginMap3GetERKNS_4KURLE(%"class.blink::BlobURLNullOriginMap"* %77, %"class.blink::KURL"* dereferenceable(112) %0) #16
  %79 = icmp eq %"class.blink::SecurityOrigin"* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %78, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %81) #16
  br label %397

82:                                               ; preds = %75, %2, %66, %67
  %83 = call zeroext i1 @_ZNK5blink4KURL15IsAboutBlankURLEv(%"class.blink::KURL"* %0) #16
  br i1 %83, label %84, label %91

84:                                               ; preds = %82
  %85 = icmp eq %"class.blink::SecurityOrigin"* %1, null
  %86 = call noalias i8* @malloc(i64 96) #16
  %87 = bitcast i8* %86 to %"class.blink::SecurityOrigin"*
  br i1 %85, label %88, label %90

88:                                               ; preds = %84
  %89 = bitcast %"class.url::Origin::Nonce"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #16
  call void @_ZN3url6Origin5NonceC1Ev(%"class.url::Origin::Nonce"* nonnull %19) #16
  call void @_ZN5blink14SecurityOriginC2ERKN3url6Origin5NonceEPKS0_(%"class.blink::SecurityOrigin"* %87, %"class.url::Origin::Nonce"* nonnull dereferenceable(16) %19, %"class.blink::SecurityOrigin"* null) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #16
  br label %397

90:                                               ; preds = %84
  call void @_ZN5blink14SecurityOriginC2EPKS0_NS0_21ConstructIsolatedCopyE(%"class.blink::SecurityOrigin"* %87, %"class.blink::SecurityOrigin"* nonnull %1, i32 undef) #16
  br label %397

91:                                               ; preds = %82
  %92 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %0) #16
  br i1 %92, label %93, label %339

93:                                               ; preds = %91
  %94 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %94) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 112, i1 false) #16
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %13) #16
  %95 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #16
  %96 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #16
  %97 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %98 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %99, align 8
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 4, i32* %100, align 8
  %101 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %0, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %11) #16
  br i1 %101, label %102, label %103

102:                                              ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #16
  br label %109

103:                                              ; preds = %93
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %105 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %106, align 8
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 10, i32* %107, align 8
  %108 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %0, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %12) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #16
  br i1 %108, label %109, label %153

109:                                              ; preds = %103, %102
  %110 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %110) #16
  %111 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %112 = load %"class.blink::KURL"*, %"class.blink::KURL"** %111, align 8, !noalias !4
  %113 = icmp eq %"class.blink::KURL"* %112, null
  br i1 %113, label %115, label %114

114:                                              ; preds = %109
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %14, %"class.blink::KURL"* nonnull dereferenceable(112) %112) #16
  br label %135

115:                                              ; preds = %109
  %116 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #16, !noalias !4
  %117 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"* %0) #16
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %118, align 8, !noalias !4
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %14, %"class.WTF::String"* nonnull dereferenceable(8) %10) #16
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8, !noalias !4
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #16
  br label %134

134:                                              ; preds = %133, %130, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #16, !noalias !4
  br label %135

135:                                              ; preds = %134, %114
  %136 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %13, %"class.blink::KURL"* nonnull dereferenceable(112) %14) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %110) #16
  %137 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %13) #16
  br i1 %137, label %138, label %335

138:                                              ; preds = %135
  %139 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #16
  %140 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #16
  %141 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %142 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %143, align 8
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 4, i32* %144, align 8
  %145 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* nonnull %13, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %8) #16
  br i1 %145, label %146, label %147

146:                                              ; preds = %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #16
  br label %335

147:                                              ; preds = %138
  %148 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %149 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %150, align 8
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 10, i32* %151, align 8
  %152 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* nonnull %13, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %9) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #16
  br i1 %152, label %335, label %155

153:                                              ; preds = %103
  %154 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %13, %"class.blink::KURL"* dereferenceable(112) %0) #16
  br label %155

155:                                              ; preds = %153, %147
  %156 = call dereferenceable(24) %"class.std::__1::vector"* @_ZN3url18GetNoAccessSchemesEv() #16
  %157 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #16
  %158 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #16
  %159 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"* nonnull %13) #16
  %160 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %160, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %15, %"class.WTF::String"* nonnull %16) #16
  %161 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %156, i64 0, i32 0, i32 0
  %162 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %156, i64 0, i32 0, i32 1
  %164 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %163, align 8
  %165 = icmp eq %"class.std::__1::basic_string"* %162, %164
  %166 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %167 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %166, i64 0, i32 1, i32 0
  %168 = load i8, i8* %167, align 1
  br i1 %165, label %220, label %169

169:                                              ; preds = %155
  %170 = icmp slt i8 %168, 0
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = zext i8 %168 to i64
  %174 = select i1 %170, i64 %172, i64 %173
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  %177 = select i1 %170, i8* %176, i8* %157
  %178 = icmp eq i64 %174, 0
  br label %179

179:                                              ; preds = %217, %169
  %180 = phi %"class.std::__1::basic_string"* [ %162, %169 ], [ %218, %217 ]
  %181 = bitcast %"class.std::__1::basic_string"* %180 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %186 = load i64, i64* %185, align 8
  %187 = zext i8 %183 to i64
  %188 = select i1 %184, i64 %186, i64 %187
  %189 = icmp eq i64 %188, %174
  br i1 %189, label %190, label %217

190:                                              ; preds = %179
  %191 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load i8*, i8** %191, align 8
  %193 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  %194 = select i1 %184, i8* %192, i8* %193
  br i1 %184, label %201, label %195

195:                                              ; preds = %190
  br i1 %178, label %220, label %196

196:                                              ; preds = %195
  %197 = ptrtoint i8* %192 to i64
  %198 = trunc i64 %197 to i8
  %199 = load i8, i8* %177, align 1
  %200 = icmp eq i8 %199, %198
  br i1 %200, label %202, label %217

201:                                              ; preds = %190
  br i1 %178, label %220, label %214

202:                                              ; preds = %196, %209
  %203 = phi i64 [ %206, %209 ], [ %187, %196 ]
  %204 = phi i8* [ %207, %209 ], [ %193, %196 ]
  %205 = phi i8* [ %210, %209 ], [ %177, %196 ]
  %206 = add i64 %203, -1
  %207 = getelementptr inbounds i8, i8* %204, i64 1
  %208 = icmp eq i64 %206, 0
  br i1 %208, label %220, label %209

209:                                              ; preds = %202
  %210 = getelementptr inbounds i8, i8* %205, i64 1
  %211 = load i8, i8* %207, align 1
  %212 = load i8, i8* %210, align 1
  %213 = icmp eq i8 %211, %212
  br i1 %213, label %202, label %217

214:                                              ; preds = %201
  %215 = call i32 @bcmp(i8* %194, i8* %177, i64 %174) #16
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %220, label %217

217:                                              ; preds = %209, %214, %196, %179
  %218 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %180, i64 1
  %219 = icmp eq %"class.std::__1::basic_string"* %218, %164
  br i1 %219, label %220, label %179

220:                                              ; preds = %217, %214, %201, %195, %202, %155
  %221 = phi %"class.std::__1::basic_string"* [ %162, %155 ], [ %180, %202 ], [ %164, %217 ], [ %180, %195 ], [ %180, %201 ], [ %180, %214 ]
  %222 = icmp eq %"class.std::__1::basic_string"* %221, %164
  %223 = icmp slt i8 %168, 0
  br i1 %223, label %224, label %227

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load i8*, i8** %225, align 8
  call void @_ZdlPv(i8* %226) #17
  br label %227

227:                                              ; preds = %224, %220
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %243, label %230

230:                                              ; preds = %227
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  br i1 %234, label %237, label %239

237:                                              ; preds = %230
  %238 = add i32 %236, -1
  store i32 %238, i32* %235, align 4
  br label %239

239:                                              ; preds = %237, %230
  %240 = phi i32 [ %238, %237 ], [ %236, %230 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %228) #16
  br label %243

243:                                              ; preds = %242, %239, %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #16
  br i1 %222, label %244, label %335

244:                                              ; preds = %243
  %245 = call zeroext i1 @_ZNK5blink4KURL14IsHierarchicalEv(%"class.blink::KURL"* nonnull %13) #16
  br i1 %245, label %336, label %246

246:                                              ; preds = %244
  %247 = call dereferenceable(24) %"class.std::__1::vector"* @_ZN3url15GetLocalSchemesEv() #16
  %248 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %248) #16
  %249 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %249) #16
  %250 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"* nonnull %13) #16
  %251 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %250, %"class.WTF::StringImpl"** %251, align 8
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %17, %"class.WTF::String"* nonnull %18) #16
  %252 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %247, i64 0, i32 0, i32 0
  %253 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %252, align 8
  %254 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %247, i64 0, i32 0, i32 1
  %255 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %254, align 8
  %256 = icmp eq %"class.std::__1::basic_string"* %253, %255
  %257 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %258 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %257, i64 0, i32 1, i32 0
  %259 = load i8, i8* %258, align 1
  br i1 %256, label %311, label %260

260:                                              ; preds = %246
  %261 = icmp slt i8 %259, 0
  %262 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %263 = load i64, i64* %262, align 8
  %264 = zext i8 %259 to i64
  %265 = select i1 %261, i64 %263, i64 %264
  %266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load i8*, i8** %266, align 8
  %268 = select i1 %261, i8* %267, i8* %248
  %269 = icmp eq i64 %265, 0
  br label %270

270:                                              ; preds = %308, %260
  %271 = phi %"class.std::__1::basic_string"* [ %253, %260 ], [ %309, %308 ]
  %272 = bitcast %"class.std::__1::basic_string"* %271 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %273 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %272, i64 0, i32 1, i32 0
  %274 = load i8, i8* %273, align 1
  %275 = icmp slt i8 %274, 0
  %276 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %277 = load i64, i64* %276, align 8
  %278 = zext i8 %274 to i64
  %279 = select i1 %275, i64 %277, i64 %278
  %280 = icmp eq i64 %279, %265
  br i1 %280, label %281, label %308

281:                                              ; preds = %270
  %282 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load i8*, i8** %282, align 8
  %284 = bitcast %"class.std::__1::basic_string"* %271 to i8*
  %285 = select i1 %275, i8* %283, i8* %284
  br i1 %275, label %292, label %286

286:                                              ; preds = %281
  br i1 %269, label %311, label %287

287:                                              ; preds = %286
  %288 = ptrtoint i8* %283 to i64
  %289 = trunc i64 %288 to i8
  %290 = load i8, i8* %268, align 1
  %291 = icmp eq i8 %290, %289
  br i1 %291, label %293, label %308

292:                                              ; preds = %281
  br i1 %269, label %311, label %305

293:                                              ; preds = %287, %300
  %294 = phi i64 [ %297, %300 ], [ %278, %287 ]
  %295 = phi i8* [ %298, %300 ], [ %284, %287 ]
  %296 = phi i8* [ %301, %300 ], [ %268, %287 ]
  %297 = add i64 %294, -1
  %298 = getelementptr inbounds i8, i8* %295, i64 1
  %299 = icmp eq i64 %297, 0
  br i1 %299, label %311, label %300

300:                                              ; preds = %293
  %301 = getelementptr inbounds i8, i8* %296, i64 1
  %302 = load i8, i8* %298, align 1
  %303 = load i8, i8* %301, align 1
  %304 = icmp eq i8 %302, %303
  br i1 %304, label %293, label %308

305:                                              ; preds = %292
  %306 = call i32 @bcmp(i8* %285, i8* %268, i64 %265) #16
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %311, label %308

308:                                              ; preds = %300, %305, %287, %270
  %309 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 1
  %310 = icmp eq %"class.std::__1::basic_string"* %309, %255
  br i1 %310, label %311, label %270

311:                                              ; preds = %308, %305, %292, %286, %293, %246
  %312 = phi %"class.std::__1::basic_string"* [ %253, %246 ], [ %271, %293 ], [ %255, %308 ], [ %271, %286 ], [ %271, %292 ], [ %271, %305 ]
  %313 = icmp eq %"class.std::__1::basic_string"* %312, %255
  %314 = icmp slt i8 %259, 0
  br i1 %314, label %315, label %318

315:                                              ; preds = %311
  %316 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load i8*, i8** %316, align 8
  call void @_ZdlPv(i8* %317) #17
  br label %318

318:                                              ; preds = %315, %311
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %251, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %318
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #16
  br label %334

334:                                              ; preds = %333, %330, %318
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %249) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %248) #16
  br i1 %313, label %337, label %336

335:                                              ; preds = %135, %147, %243, %146
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %94) #16
  br label %339

336:                                              ; preds = %334, %244
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %94) #16
  br label %351

337:                                              ; preds = %334
  %338 = call zeroext i1 @_ZN3url40AllowNonStandardSchemesForAndroidWebViewEv() #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %94) #16
  br i1 %338, label %351, label %339

339:                                              ; preds = %337, %91, %335
  %340 = icmp eq %"class.blink::SecurityOrigin"* %1, null
  %341 = call noalias i8* @malloc(i64 96) #16
  %342 = bitcast i8* %341 to %"class.blink::SecurityOrigin"*
  br i1 %340, label %343, label %345

343:                                              ; preds = %339
  %344 = bitcast %"class.url::Origin::Nonce"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %344) #16
  call void @_ZN3url6Origin5NonceC1Ev(%"class.url::Origin::Nonce"* nonnull %7) #16
  call void @_ZN5blink14SecurityOriginC2ERKN3url6Origin5NonceEPKS0_(%"class.blink::SecurityOrigin"* %342, %"class.url::Origin::Nonce"* nonnull dereferenceable(16) %7, %"class.blink::SecurityOrigin"* null) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %344) #16
  br label %397

345:                                              ; preds = %339
  %346 = bitcast %"class.url::Origin::Nonce"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %346) #16
  call void @_ZN3url6Origin5NonceC1Ev(%"class.url::Origin::Nonce"* nonnull %6) #16
  %347 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 13, i32 0
  %348 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %347, align 8
  %349 = icmp eq %"class.blink::SecurityOrigin"* %348, null
  %350 = select i1 %349, %"class.blink::SecurityOrigin"* %1, %"class.blink::SecurityOrigin"* %348
  call void @_ZN5blink14SecurityOriginC2ERKN3url6Origin5NonceEPKS0_(%"class.blink::SecurityOrigin"* %342, %"class.url::Origin::Nonce"* nonnull dereferenceable(16) %6, %"class.blink::SecurityOrigin"* %350) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %346) #16
  br label %397

351:                                              ; preds = %337, %336
  %352 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %352)
  %353 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %353)
  %354 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %355 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %354, i64* %355, align 8
  %356 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %356, align 8
  %357 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 4, i32* %357, align 8
  %358 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %0, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %4) #16
  br i1 %358, label %365, label %359

359:                                              ; preds = %351
  %360 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %361 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %360, i64* %361, align 8
  %362 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %362, align 8
  %363 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 10, i32* %363, align 8
  %364 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %0, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %5) #16
  br label %365

365:                                              ; preds = %351, %359
  %366 = phi i1 [ true, %351 ], [ %364, %359 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %352)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %353)
  %367 = call noalias i8* @malloc(i64 96) #16
  %368 = bitcast i8* %367 to %"class.blink::SecurityOrigin"*
  br i1 %366, label %369, label %396

369:                                              ; preds = %365
  %370 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %23, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %370) #16
  %371 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %372 = load %"class.blink::KURL"*, %"class.blink::KURL"** %371, align 8, !noalias !7
  %373 = icmp eq %"class.blink::KURL"* %372, null
  br i1 %373, label %375, label %374

374:                                              ; preds = %369
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %23, %"class.blink::KURL"* nonnull dereferenceable(112) %372) #16
  br label %395

375:                                              ; preds = %369
  %376 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %376) #16, !noalias !7
  %377 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"* %0) #16
  %378 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %377, %"class.WTF::StringImpl"** %378, align 8, !noalias !7
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %23, %"class.WTF::String"* nonnull dereferenceable(8) %3) #16
  %379 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %378, align 8, !noalias !7
  %380 = icmp eq %"class.WTF::StringImpl"* %379, null
  br i1 %380, label %394, label %381

381:                                              ; preds = %375
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = load atomic i32, i32* %382 monotonic, align 4
  %384 = and i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %379, i64 0, i32 0
  %387 = load i32, i32* %386, align 4
  br i1 %385, label %388, label %390

388:                                              ; preds = %381
  %389 = add i32 %387, -1
  store i32 %389, i32* %386, align 4
  br label %390

390:                                              ; preds = %388, %381
  %391 = phi i32 [ %389, %388 ], [ %387, %381 ]
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %394

393:                                              ; preds = %390
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %379) #16
  br label %394

394:                                              ; preds = %393, %390, %375
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %376) #16, !noalias !7
  br label %395

395:                                              ; preds = %374, %394
  call void @_ZN5blink14SecurityOriginC2ERKNS_4KURLE(%"class.blink::SecurityOrigin"* %368, %"class.blink::KURL"* nonnull dereferenceable(112) %23)
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %370) #16
  br label %397

396:                                              ; preds = %365
  call void @_ZN5blink14SecurityOriginC2ERKNS_4KURLE(%"class.blink::SecurityOrigin"* %368, %"class.blink::KURL"* dereferenceable(112) %0)
  br label %397

397:                                              ; preds = %80, %396, %395, %345, %343, %90, %88
  %398 = phi %"class.blink::SecurityOrigin"* [ %87, %88 ], [ %87, %90 ], [ %342, %343 ], [ %342, %345 ], [ %368, %395 ], [ %368, %396 ], [ %78, %80 ]
  ret %"class.blink::SecurityOrigin"* %398
}

declare %"class.WTF::StringImpl"* @_ZN5blink7BlobURL9GetOriginERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare dereferenceable(16) %"class.WTF::ThreadSpecific"* @_ZN5blink20BlobURLNullOriginMap11GetInstanceEv() local_unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZN5blink20BlobURLNullOriginMap3GetERKNS_4KURLE(%"class.blink::BlobURLNullOriginMap"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL15IsAboutBlankURLEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin18CreateUniqueOpaqueEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.url::Origin::Nonce", align 8
  %2 = tail call noalias i8* @malloc(i64 96) #16
  %3 = bitcast i8* %2 to %"class.blink::SecurityOrigin"*
  %4 = bitcast %"class.url::Origin::Nonce"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #16
  call void @_ZN3url6Origin5NonceC1Ev(%"class.url::Origin::Nonce"* nonnull %1) #16
  call void @_ZN5blink14SecurityOriginC2ERKN3url6Origin5NonceEPKS0_(%"class.blink::SecurityOrigin"* %3, %"class.url::Origin::Nonce"* nonnull dereferenceable(16) %1, %"class.blink::SecurityOrigin"* null)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #16
  ret %"class.blink::SecurityOrigin"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin21DeriveNewOpaqueOriginEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.url::Origin::Nonce", align 8
  %3 = tail call noalias i8* @malloc(i64 96) #16
  %4 = bitcast i8* %3 to %"class.blink::SecurityOrigin"*
  %5 = bitcast %"class.url::Origin::Nonce"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #16
  call void @_ZN3url6Origin5NonceC1Ev(%"class.url::Origin::Nonce"* nonnull %2) #16
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %7 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %6, align 8
  %8 = icmp eq %"class.blink::SecurityOrigin"* %7, null
  %9 = select i1 %8, %"class.blink::SecurityOrigin"* %0, %"class.blink::SecurityOrigin"* %7
  call void @_ZN5blink14SecurityOriginC2ERKN3url6Origin5NonceEPKS0_(%"class.blink::SecurityOrigin"* %4, %"class.url::Origin::Nonce"* nonnull dereferenceable(16) %2, %"class.blink::SecurityOrigin"* %9)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #16
  ret %"class.blink::SecurityOrigin"* %4
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin25CreateWithReferenceOriginERKNS_4KURLEPKS0_(%"class.blink::KURL"* dereferenceable(112) %0, %"class.blink::SecurityOrigin"* null)
  ret %"class.blink::SecurityOrigin"* %2
}

declare void @_ZN3url6Origin5NonceC1Ev(%"class.url::Origin::Nonce"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin12CreateOpaqueERKN3url6Origin5NonceEPKS0_(%"class.url::Origin::Nonce"* dereferenceable(16), %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = tail call noalias i8* @malloc(i64 96) #16
  %4 = bitcast i8* %3 to %"class.blink::SecurityOrigin"*
  tail call void @_ZN5blink14SecurityOriginC2ERKN3url6Origin5NonceEPKS0_(%"class.blink::SecurityOrigin"* %4, %"class.url::Origin::Nonce"* dereferenceable(16) %0, %"class.blink::SecurityOrigin"* %1)
  ret %"class.blink::SecurityOrigin"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin19CreateFromUrlOriginERKN3url6OriginE(%"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.absl::optional.8", align 8
  %5 = alloca %"class.url::Origin::Nonce", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* %7) #16
  br i1 %8, label %9, label %76

9:                                                ; preds = %1
  %10 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  %11 = bitcast %"class.url::Origin"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %"class.url::Origin"* %0 to i8*
  %18 = select i1 %14, i8* %16, i8* %17
  %19 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  %23 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %18, i64 %22) #16
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  %34 = select i1 %30, i8* %32, i8* %33
  %35 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %29 to i64
  %38 = select i1 %30, i64 %36, i64 %37
  %39 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %34, i64 %38) #16
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %40, align 8
  %41 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 2
  %42 = load i16, i16* %41, align 8
  %43 = tail call noalias i8* @malloc(i64 96) #16
  %44 = bitcast i8* %43 to %"class.blink::SecurityOrigin"*
  call void @_ZN5blink14SecurityOriginC2ERKN3WTF6StringES4_t(%"class.blink::SecurityOrigin"* %44, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %3, i16 zeroext %42) #16
  %45 = ptrtoint i8* %43 to i64
  %46 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %9
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #16
  br label %60

60:                                               ; preds = %9, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  %61 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #16
  br label %75

75:                                               ; preds = %60, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  br label %76

76:                                               ; preds = %75, %1
  %77 = phi i64 [ %45, %75 ], [ 0, %1 ]
  %78 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 -86, i64 24, i1 false)
  call void @_ZNK3url6Origin24GetNonceForSerializationEv(%"class.absl::optional.8"* nonnull sret %4, %"class.url::Origin"* %0) #16
  %79 = load i8, i8* %78, align 8, !range !3
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %87

81:                                               ; preds = %76
  %82 = icmp eq i64 %77, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %81
  %84 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i64 0, i64 0), i32 273, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #16
  %85 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #16
  br label %86

86:                                               ; preds = %81, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #16
  br label %102

87:                                               ; preds = %76
  %88 = call noalias i8* @malloc(i64 96) #16
  %89 = bitcast i8* %88 to %"class.blink::SecurityOrigin"*
  %90 = bitcast %"class.url::Origin::Nonce"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #16
  %91 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6Origin5NonceC1ERKN4base16UnguessableTokenE(%"class.url::Origin::Nonce"* nonnull %5, %"class.base::UnguessableToken"* dereferenceable(16) %91) #16
  %92 = inttoptr i64 %77 to %"class.blink::SecurityOrigin"*
  call void @_ZN5blink14SecurityOriginC2ERKN3url6Origin5NonceEPKS0_(%"class.blink::SecurityOrigin"* %89, %"class.url::Origin::Nonce"* nonnull dereferenceable(16) %5, %"class.blink::SecurityOrigin"* %92)
  %93 = ptrtoint i8* %88 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #16
  %94 = icmp eq i64 %77, 0
  br i1 %94, label %102, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %92, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #16
  %97 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %92) #16
  %101 = inttoptr i64 %77 to i8*
  call void @free(i8* %101) #16
  br label %102

102:                                              ; preds = %86, %87, %95, %100
  %103 = phi i64 [ %77, %86 ], [ %93, %87 ], [ %93, %95 ], [ %93, %100 ]
  %104 = inttoptr i64 %103 to %"class.blink::SecurityOrigin"*
  ret %"class.blink::SecurityOrigin"* %104
}

declare zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin20CreateFromValidTupleERKN3WTF6StringES4_t(%"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), i16 zeroext) local_unnamed_addr #0 align 2 {
  %4 = tail call noalias i8* @malloc(i64 96) #16
  %5 = bitcast i8* %4 to %"class.blink::SecurityOrigin"*
  tail call void @_ZN5blink14SecurityOriginC2ERKN3WTF6StringES4_t(%"class.blink::SecurityOrigin"* %5, %"class.WTF::String"* dereferenceable(8) %0, %"class.WTF::String"* dereferenceable(8) %1, i16 zeroext %2)
  ret %"class.blink::SecurityOrigin"* %5
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare void @_ZNK3url6Origin24GetNonceForSerializationEv(%"class.absl::optional.8"* sret, %"class.url::Origin"*) local_unnamed_addr #1

declare void @_ZN3url6Origin5NonceC1ERKN4base16UnguessableTokenE(%"class.url::Origin::Nonce"*, %"class.base::UnguessableToken"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* noalias sret, %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.url::Origin", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 13, i32 0
  %13 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %12, align 8
  %14 = icmp eq %"class.blink::SecurityOrigin"* %13, null
  %15 = select i1 %14, %"class.blink::SecurityOrigin"* %1, %"class.blink::SecurityOrigin"* %13
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %15, i64 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %18, i32 0) #16
  %20 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #16
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %15, i64 0, i32 2
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false)
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* %22, i32 0) #16
  %24 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %15, i64 0, i32 4
  %25 = load i16, i16* %24, align 8
  %26 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %2
  %30 = bitcast %"class.url::Origin"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 -86, i64 80, i1 false)
  %31 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %16, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #16
  %32 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %20, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #16
  %33 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6Origin40CreateOpaqueFromNormalizedPrecursorTupleENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_tRKNS0_5NonceE(%"class.url::Origin"* sret %0, %"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* nonnull %6, i16 zeroext %25, %"class.url::Origin::Nonce"* dereferenceable(16) %33) #16
  %34 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %40) #17
  br label %41

41:                                               ; preds = %29, %38
  %42 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #17
  br label %49

49:                                               ; preds = %41, %46
  %50 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %51 = load i8, i8* %50, align 8, !range !3
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %83

53:                                               ; preds = %49
  %54 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i64 0, i64 0), i32 285, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)) #16
  %55 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #16
  br label %83

56:                                               ; preds = %2
  %57 = bitcast %"class.url::Origin"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %57) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 80, i1 false)
  %58 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* nonnull align 8 %16, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #16
  %59 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* nonnull align 8 %20, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #16
  call void @_ZN3url6Origin25CreateFromNormalizedTupleENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_t(%"class.url::Origin"* nonnull sret %8, %"class.std::__1::basic_string"* nonnull %9, %"class.std::__1::basic_string"* nonnull %10, i16 zeroext %25) #16
  %60 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #17
  br label %67

67:                                               ; preds = %56, %64
  %68 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #17
  br label %75

75:                                               ; preds = %67, %72
  %76 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 8, !range !3
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i64 0, i64 0), i32 290, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0)) #16
  %81 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #16
  br label %82

82:                                               ; preds = %75, %79
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %0, %"class.url::Origin"* nonnull dereferenceable(80) %8) #16
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %57) #16
  br label %83

83:                                               ; preds = %49, %53, %82
  %84 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %83
  %89 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %89) #17
  br label %90

90:                                               ; preds = %83, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #16
  %91 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %90
  %96 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %96) #17
  br label %97

97:                                               ; preds = %90, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin34GetOriginOrPrecursorOriginIfOpaqueEv(%"class.blink::SecurityOrigin"* readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  %5 = select i1 %4, %"class.blink::SecurityOrigin"* %0, %"class.blink::SecurityOrigin"* %3
  ret %"class.blink::SecurityOrigin"* %5
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3url6Origin40CreateOpaqueFromNormalizedPrecursorTupleENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_tRKNS0_5NonceE(%"class.url::Origin"* sret, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i16 zeroext, %"class.url::Origin::Nonce"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

declare void @_ZN3url6Origin25CreateFromNormalizedTupleENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_t(%"class.url::Origin"* sret, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SecurityOrigin16SetDomainFromDOMERKN3WTF6StringE(%"class.blink::SecurityOrigin"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 7
  store i8 1, i8* %3, align 1
  %4 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #16
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #16
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %2
  %26 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  %27 = bitcast %"class.WTF::String"* %4 to i64*
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  store i64 %26, i64* %27, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #16
  br label %44

44:                                               ; preds = %25, %40, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin17RegistrableDomainEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::OriginAccessEntry", align 8
  %3 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %74

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::OriginAccessEntry"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %7) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 104, i1 false)
  call void @_ZN5blink17OriginAccessEntryC1ERKNS_14SecurityOriginEN7network5mojom19CorsDomainMatchModeENS5_29CorsOriginAccessMatchPriorityE(%"class.blink::OriginAccessEntry"* nonnull %2, %"class.blink::SecurityOrigin"* dereferenceable(96) %0, i32 1, i32 1) #16
  %8 = call %"class.WTF::StringImpl"* @_ZNK5blink17OriginAccessEntry18registrable_domainEv(%"class.blink::OriginAccessEntry"* nonnull %2) #16
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %46, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %32, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"class.WTF::StringImpl"* %8 to i64
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #16
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  call void @llvm.trap() #16
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %14, %10
  %33 = phi i64 [ %15, %30 ], [ %15, %14 ], [ 0, %10 ]
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %32
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %32
  %43 = phi i32 [ %41, %40 ], [ %39, %32 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #16
  br label %46

46:                                               ; preds = %6, %42, %45
  %47 = phi i64 [ %33, %42 ], [ %33, %45 ], [ 0, %6 ]
  %48 = getelementptr inbounds %"class.blink::OriginAccessEntry", %"class.blink::OriginAccessEntry"* %2, i64 0, i32 0, i32 9
  %49 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #17
  br label %56

56:                                               ; preds = %53, %46
  %57 = getelementptr inbounds %"class.blink::OriginAccessEntry", %"class.blink::OriginAccessEntry"* %2, i64 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::basic_string"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #17
  br label %65

65:                                               ; preds = %62, %56
  %66 = bitcast %"class.blink::OriginAccessEntry"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::OriginAccessEntry", %"class.blink::OriginAccessEntry"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #17
  br label %73

73:                                               ; preds = %65, %70
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %7) #16
  br label %74

74:                                               ; preds = %1, %73
  %75 = phi i64 [ %47, %73 ], [ 0, %1 ]
  %76 = inttoptr i64 %75 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %76
}

declare void @_ZN5blink17OriginAccessEntryC1ERKNS_14SecurityOriginEN7network5mojom19CorsDomainMatchModeENS5_29CorsOriginAccessMatchPriorityE(%"class.blink::OriginAccessEntry"*, %"class.blink::SecurityOrigin"* dereferenceable(96), i32, i32) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink17OriginAccessEntry18registrable_domainEv(%"class.blink::OriginAccessEntry"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SecurityOrigin24GetNonceForSerializationEv(%"class.absl::optional.8"* noalias nocapture sret, %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = tail call dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK3url6Origin5Nonce5tokenEv(%"class.url::Origin::Nonce"* %7) #16
  %9 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = bitcast %"class.base::UnguessableToken"* %9 to i8*
  %11 = bitcast %"class.base::UnguessableToken"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 16, i1 false) #16
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i8 [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds %"class.absl::optional.8", %"class.absl::optional.8"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %13, i8* %14, align 8
  ret void
}

declare dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK3url6Origin5Nonce5tokenEv(%"class.url::Origin::Nonce"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SecurityOrigin9CanAccessEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 6
  %5 = load i8, i8* %4, align 8, !range !3
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  store i32 0, i32* %2, align 4
  br label %39

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin22IsSameOriginDomainWithEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"* %0, %"class.blink::SecurityOrigin"* %1, i32* dereferenceable(4) %2)
  br i1 %9, label %10, label %39

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 11
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %39

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 12, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 12, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %14, %18
  %23 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 12, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 12, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %22, %26
  %31 = icmp eq i64 %16, %24
  br i1 %31, label %32, label %38

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 12, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 12, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %34, %36
  br i1 %37, label %39, label %38

38:                                               ; preds = %32, %30
  store i32 6, i32* %2, align 4
  br label %39

39:                                               ; preds = %32, %8, %18, %26, %38, %10, %7
  %40 = phi i1 [ true, %7 ], [ true, %10 ], [ true, %18 ], [ true, %26 ], [ false, %38 ], [ true, %32 ], [ false, %8 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SecurityOrigin22IsSameOriginDomainWithEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::SecurityOrigin"* %0, %1
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store i32 0, i32* %2, align 4
  br label %116

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %31, label %14

14:                                               ; preds = %10, %6
  store i32 0, i32* %2, align 4
  %15 = load i8, i8* %7, align 8, !range !3
  %16 = icmp ne i8 %15, 0
  %17 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !3
  %19 = icmp ne i8 %18, 0
  %20 = xor i1 %16, %19
  %21 = xor i1 %16, true
  %22 = or i1 %20, %21
  %23 = xor i1 %20, true
  br i1 %22, label %116, label %24

24:                                               ; preds = %14
  %25 = icmp eq i8 %18, 0
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %24
  tail call void @llvm.trap() #16
  unreachable

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %29 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = tail call zeroext i1 @_ZNK3url6Origin5NonceeqERKS1_(%"class.url::Origin::Nonce"* %28, %"class.url::Origin::Nonce"* dereferenceable(16) %29) #16
  br label %116

31:                                               ; preds = %10
  %32 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"* %35) #16
  br i1 %36, label %37, label %104

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 7
  %39 = load i8, i8* %38, align 1, !range !3
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 7
  %42 = load i8, i8* %41, align 1, !range !3
  %43 = icmp eq i8 %42, 0
  br i1 %40, label %44, label %57

44:                                               ; preds = %37
  br i1 %43, label %45, label %89

45:                                               ; preds = %44
  store i32 1, i32* %2, align 4
  %46 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"* %49) #16
  br i1 %50, label %51, label %116

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 4
  %53 = load i16, i16* %52, align 8
  %54 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 4
  %55 = load i16, i16* %54, align 8
  %56 = icmp eq i16 %53, %55
  br i1 %56, label %105, label %116

57:                                               ; preds = %37
  br i1 %43, label %89, label %58

58:                                               ; preds = %57
  %59 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 3, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"* %62) #16
  %64 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 2, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %65, %"class.WTF::StringImpl"* %67) #16
  br i1 %63, label %69, label %79

69:                                               ; preds = %58
  br i1 %68, label %70, label %77

70:                                               ; preds = %69
  %71 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 4
  %72 = load i16, i16* %71, align 8
  %73 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 4
  %74 = load i16, i16* %73, align 8
  %75 = icmp eq i16 %72, %74
  %76 = select i1 %75, i32 4, i32 3
  br label %77

77:                                               ; preds = %70, %69
  %78 = phi i32 [ 3, %69 ], [ %76, %70 ]
  store i32 %78, i32* %2, align 4
  br label %105

79:                                               ; preds = %58
  br i1 %68, label %80, label %87

80:                                               ; preds = %79
  %81 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 4
  %82 = load i16, i16* %81, align 8
  %83 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 4
  %84 = load i16, i16* %83, align 8
  %85 = icmp eq i16 %82, %84
  %86 = select i1 %85, i32 5, i32 0
  br label %87

87:                                               ; preds = %80, %79
  %88 = phi i32 [ 0, %79 ], [ %86, %80 ]
  store i32 %88, i32* %2, align 4
  br label %116

89:                                               ; preds = %44, %57
  %90 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 2, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"* %93) #16
  br i1 %94, label %95, label %102

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 4
  %97 = load i16, i16* %96, align 8
  %98 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 4
  %99 = load i16, i16* %98, align 8
  %100 = icmp eq i16 %97, %99
  %101 = select i1 %100, i32 2, i32 0
  br label %102

102:                                              ; preds = %95, %89
  %103 = phi i32 [ 0, %89 ], [ %101, %95 ]
  store i32 %103, i32* %2, align 4
  br label %116

104:                                              ; preds = %31
  store i32 0, i32* %2, align 4
  br label %116

105:                                              ; preds = %51, %77
  %106 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin7IsLocalEv(%"class.blink::SecurityOrigin"* %0)
  br i1 %106, label %107, label %116

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 9
  %109 = load i8, i8* %108, align 1, !range !3
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %115

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 9
  %113 = load i8, i8* %112, align 1, !range !3
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %107, %111
  store i32 0, i32* %2, align 4
  br label %116

116:                                              ; preds = %105, %111, %115, %87, %102, %45, %104, %51, %27, %14, %5
  %117 = phi i1 [ true, %5 ], [ %23, %14 ], [ %30, %27 ], [ true, %111 ], [ false, %115 ], [ true, %105 ], [ false, %87 ], [ false, %102 ], [ false, %45 ], [ false, %104 ], [ false, %51 ]
  ret i1 %117
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SecurityOrigin15PassesFileCheckEPKS0_(%"class.blink::SecurityOrigin"* nocapture readonly, %"class.blink::SecurityOrigin"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 1, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 9
  %8 = load i8, i8* %7, align 1, !range !3
  %9 = icmp eq i8 %8, 0
  br label %10

10:                                               ; preds = %2, %6
  %11 = phi i1 [ false, %2 ], [ %9, %6 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SecurityOrigin10CanRequestERKNS_4KURLE(%"class.blink::SecurityOrigin"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 6
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %113

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !3
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  %14 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin7IsLocalEv(%"class.blink::SecurityOrigin"* %0) #16
  br i1 %14, label %15, label %94

15:                                               ; preds = %13
  %16 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 9
  %17 = load i8, i8* %16, align 1, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %94, label %19

19:                                               ; preds = %15, %9
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %21 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 4, i32* %23, align 8
  %24 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %1, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %5) #16
  br i1 %24, label %25, label %113

25:                                               ; preds = %19
  %26 = tail call %"class.WTF::StringImpl"* @_ZN5blink7BlobURL9GetOriginERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112) %1) #16
  %27 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16
  %28 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %30, align 8
  %31 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %32 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %31, i64* %32, align 8
  br label %41

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 1
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %39 = bitcast i8** %38 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %39, align 8
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

41:                                               ; preds = %33, %29
  %42 = phi i64 [ %40, %33 ], [ %31, %29 ]
  %43 = phi i32 [ %36, %33 ], [ 0, %29 ]
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %43, i32* %44, align 8
  %45 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #16
  %46 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %42, i64* %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 4, i32* %48, align 8
  %49 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #16
  br i1 %28, label %63, label %50

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #16
  br i1 %49, label %64, label %113

63:                                               ; preds = %59, %41
  br i1 %49, label %64, label %113

64:                                               ; preds = %62, %63
  %65 = call dereferenceable(16) %"class.WTF::ThreadSpecific"* @_ZN5blink20BlobURLNullOriginMap11GetInstanceEv() #16
  %66 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %65, i64 0, i32 1
  %67 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %66) #16
  %68 = icmp eq i8* %67, null
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %64
  %70 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 24, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20BlobURLNullOriginMapEEEPKcv, i64 0, i64 0)) #16
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %66, i8* %70) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 20, i1 false) #16
  br label %71

71:                                               ; preds = %64, %69
  %72 = phi i8* [ %70, %69 ], [ %67, %64 ]
  %73 = bitcast i8* %72 to %"class.blink::BlobURLNullOriginMap"*
  %74 = call %"class.blink::SecurityOrigin"* @_ZN5blink20BlobURLNullOriginMap3GetERKNS_4KURLE(%"class.blink::BlobURLNullOriginMap"* %73, %"class.blink::KURL"* dereferenceable(112) %1) #16
  %75 = icmp eq %"class.blink::SecurityOrigin"* %74, %0
  br i1 %75, label %113, label %76

76:                                               ; preds = %71
  %77 = load i8, i8* %10, align 8, !range !3, !noalias !10
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %93, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %81 = call dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK3url6Origin5Nonce5tokenEv(%"class.url::Origin::Nonce"* %80) #16, !noalias !10
  %82 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %81, i64 0, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %81, i64 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = call dereferenceable(64) %"class.blink::BlobURLOpaqueOriginNonceMap"* @_ZN5blink27BlobURLOpaqueOriginNonceMap11GetInstanceEv() #16
  %87 = call { i64, i64 } @_ZN5blink27BlobURLOpaqueOriginNonceMap3GetERKNS_4KURLE(%"class.blink::BlobURLOpaqueOriginNonceMap"* %86, %"class.blink::KURL"* dereferenceable(112) %1) #16
  %88 = extractvalue { i64, i64 } %87, 0
  %89 = extractvalue { i64, i64 } %87, 1
  %90 = icmp eq i64 %88, %83
  %91 = icmp eq i64 %89, %85
  %92 = and i1 %90, %91
  br i1 %92, label %113, label %93

93:                                               ; preds = %79, %76
  br label %113

94:                                               ; preds = %13, %15
  %95 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin25CreateWithReferenceOriginERKNS_4KURLEPKS0_(%"class.blink::KURL"* dereferenceable(112) %1, %"class.blink::SecurityOrigin"* null) #16
  %96 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %95, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %97 = load i8, i8* %96, align 8, !range !3
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %94
  %100 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"* %0, %"class.blink::SecurityOrigin"* %95)
  br i1 %100, label %103, label %101

101:                                              ; preds = %99
  %102 = tail call zeroext i1 @_ZN5blink14SecurityPolicy21IsOriginAccessAllowedEPKNS_14SecurityOriginES3_(%"class.blink::SecurityOrigin"* %0, %"class.blink::SecurityOrigin"* %95) #16
  br label %103

103:                                              ; preds = %94, %101, %99
  %104 = phi i1 [ false, %94 ], [ true, %99 ], [ %102, %101 ]
  %105 = icmp eq %"class.blink::SecurityOrigin"* %95, null
  br i1 %105, label %113, label %106

106:                                              ; preds = %103
  %107 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %95, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %107) #16
  %108 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %95, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %106
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %95) #16
  %112 = bitcast %"class.blink::SecurityOrigin"* %95 to i8*
  tail call void @free(i8* %112) #16
  br label %113

113:                                              ; preds = %93, %79, %62, %63, %19, %111, %106, %103, %71, %2
  %114 = phi i1 [ true, %2 ], [ false, %63 ], [ true, %71 ], [ false, %62 ], [ %104, %103 ], [ %104, %106 ], [ %104, %111 ], [ false, %19 ], [ false, %93 ], [ true, %79 ]
  ret i1 %114
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SecurityOrigin16SerializesAsNullEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin7IsLocalEv(%"class.blink::SecurityOrigin"* %0)
  br i1 %6, label %7, label %11

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 9
  %9 = load i8, i8* %8, align 1, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %7, %5
  br label %12

12:                                               ; preds = %1, %7, %11
  %13 = phi i1 [ false, %11 ], [ true, %1 ], [ true, %7 ]
  ret i1 %13
}

declare dereferenceable(64) %"class.blink::BlobURLOpaqueOriginNonceMap"* @_ZN5blink27BlobURLOpaqueOriginNonceMap11GetInstanceEv() local_unnamed_addr #1

declare { i64, i64 } @_ZN5blink27BlobURLOpaqueOriginNonceMap3GetERKNS_4KURLE(%"class.blink::BlobURLOpaqueOriginNonceMap"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::SecurityOrigin"* %0, %1
  br i1 %3, label %47, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %7, label %11, label %12

11:                                               ; preds = %4
  br i1 %10, label %18, label %47

12:                                               ; preds = %4
  %13 = xor i1 %10, true
  br i1 %10, label %47, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = tail call zeroext i1 @_ZNK3url6Origin5NonceeqERKS1_(%"class.url::Origin::Nonce"* %15, %"class.url::Origin::Nonce"* dereferenceable(16) %16) #16
  br label %47

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %22) #16
  br i1 %23, label %24, label %47

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"* %28) #16
  br i1 %29, label %30, label %47

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 4
  %32 = load i16, i16* %31, align 8
  %33 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 4
  %34 = load i16, i16* %33, align 8
  %35 = icmp eq i16 %32, %34
  br i1 %35, label %36, label %47

36:                                               ; preds = %30
  %37 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin7IsLocalEv(%"class.blink::SecurityOrigin"* %0)
  br i1 %37, label %38, label %46

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 9
  %40 = load i8, i8* %39, align 1, !range !3
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 9
  %44 = load i8, i8* %43, align 1, !range !3
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %42, %36
  br label %47

47:                                               ; preds = %11, %24, %18, %38, %14, %12, %42, %30, %2, %46
  %48 = phi i1 [ true, %46 ], [ true, %2 ], [ false, %18 ], [ false, %24 ], [ false, %30 ], [ false, %42 ], [ %13, %12 ], [ %17, %14 ], [ false, %38 ], [ false, %11 ]
  ret i1 %48
}

declare zeroext i1 @_ZN5blink14SecurityPolicy21IsOriginAccessAllowedEPKNS_14SecurityOriginES3_(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SecurityOrigin14CanReadContentERKNS_4KURLE(%"class.blink::SecurityOrigin"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin10CanRequestERKNS_4KURLE(%"class.blink::SecurityOrigin"* %0, %"class.blink::KURL"* dereferenceable(112) %1)
  br i1 %4, label %12, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6)
  %7 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %8 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %10, align 8
  %11 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %1, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6)
  br label %12

12:                                               ; preds = %5, %2
  %13 = phi i1 [ true, %2 ], [ %11, %5 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SecurityOrigin10CanDisplayERKNS_4KURLE(%"class.blink::SecurityOrigin"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 6
  %6 = load i8, i8* %5, align 8, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %118

8:                                                ; preds = %2
  %9 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %11 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL8ProtocolEv(%"class.blink::KURL"* %1) #16
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %10, align 8
  %12 = call zeroext i1 @_ZN5blink14SchemeRegistry26CanDisplayOnlyIfCanRequestERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %3) #16
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = call zeroext i1 @_ZNK5blink14SecurityOrigin10CanRequestERKNS_4KURLE(%"class.blink::SecurityOrigin"* %0, %"class.blink::KURL"* dereferenceable(112) %1)
  br label %100

15:                                               ; preds = %8
  %16 = call zeroext i1 @_ZN5blink14SchemeRegistry37ShouldTreatURLSchemeAsDisplayIsolatedERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %3) #16
  br i1 %16, label %17, label %24

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %21 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %20) #16
  br i1 %21, label %100, label %22

22:                                               ; preds = %17
  %23 = call zeroext i1 @_ZN5blink14SecurityPolicy26IsOriginAccessToURLAllowedEPKNS_14SecurityOriginERKNS_4KURLE(%"class.blink::SecurityOrigin"* %0, %"class.blink::KURL"* dereferenceable(112) %1) #16
  br label %100

24:                                               ; preds = %15
  %25 = call dereferenceable(24) %"class.std::__1::vector"* @_ZN3url15GetLocalSchemesEv() #16
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #16
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %3) #16
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %28 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 1
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = icmp eq %"class.std::__1::basic_string"* %28, %30
  %32 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  br i1 %31, label %86, label %35

35:                                               ; preds = %24
  %36 = icmp slt i8 %34, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %34 to i64
  %40 = select i1 %36, i64 %38, i64 %39
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = select i1 %36, i8* %42, i8* %26
  %44 = icmp eq i64 %40, 0
  br label %45

45:                                               ; preds = %83, %35
  %46 = phi %"class.std::__1::basic_string"* [ %28, %35 ], [ %84, %83 ]
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %49 to i64
  %54 = select i1 %50, i64 %52, i64 %53
  %55 = icmp eq i64 %54, %40
  br i1 %55, label %56, label %83

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %60 = select i1 %50, i8* %58, i8* %59
  br i1 %50, label %67, label %61

61:                                               ; preds = %56
  br i1 %44, label %86, label %62

62:                                               ; preds = %61
  %63 = ptrtoint i8* %58 to i64
  %64 = trunc i64 %63 to i8
  %65 = load i8, i8* %43, align 1
  %66 = icmp eq i8 %65, %64
  br i1 %66, label %68, label %83

67:                                               ; preds = %56
  br i1 %44, label %86, label %80

68:                                               ; preds = %62, %75
  %69 = phi i64 [ %72, %75 ], [ %53, %62 ]
  %70 = phi i8* [ %73, %75 ], [ %59, %62 ]
  %71 = phi i8* [ %76, %75 ], [ %43, %62 ]
  %72 = add i64 %69, -1
  %73 = getelementptr inbounds i8, i8* %70, i64 1
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %86, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds i8, i8* %71, i64 1
  %77 = load i8, i8* %73, align 1
  %78 = load i8, i8* %76, align 1
  %79 = icmp eq i8 %77, %78
  br i1 %79, label %68, label %83

80:                                               ; preds = %67
  %81 = call i32 @bcmp(i8* %60, i8* %43, i64 %40) #16
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %75, %80, %62, %45
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 1
  %85 = icmp eq %"class.std::__1::basic_string"* %84, %30
  br i1 %85, label %86, label %45

86:                                               ; preds = %61, %67, %80, %83, %68, %24
  %87 = phi %"class.std::__1::basic_string"* [ %28, %24 ], [ %46, %68 ], [ %46, %80 ], [ %46, %67 ], [ %46, %61 ], [ %30, %83 ]
  %88 = icmp eq %"class.std::__1::basic_string"* %87, %30
  %89 = icmp slt i8 %34, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %92) #17
  br label %93

93:                                               ; preds = %86, %90
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #16
  br i1 %88, label %100, label %94

94:                                               ; preds = %93
  %95 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 8
  %96 = load i8, i8* %95, align 2, !range !3
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = call zeroext i1 @_ZN5blink14SecurityPolicy26IsOriginAccessToURLAllowedEPKNS_14SecurityOriginERKNS_4KURLE(%"class.blink::SecurityOrigin"* %0, %"class.blink::KURL"* dereferenceable(112) %1) #16
  br label %100

100:                                              ; preds = %94, %93, %98, %17, %22, %13
  %101 = phi i1 [ %14, %13 ], [ true, %17 ], [ %23, %22 ], [ true, %94 ], [ %99, %98 ], [ true, %93 ]
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #16
  br label %117

117:                                              ; preds = %100, %113, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  br label %118

118:                                              ; preds = %2, %117
  %119 = phi i1 [ %101, %117 ], [ true, %2 ]
  ret i1 %119
}

declare zeroext i1 @_ZN5blink14SchemeRegistry26CanDisplayOnlyIfCanRequestERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14SchemeRegistry37ShouldTreatURLSchemeAsDisplayIsolatedERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14SecurityPolicy26IsOriginAccessToURLAllowedEPKNS_14SecurityOriginERKNS_4KURLE(%"class.blink::SecurityOrigin"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector"* @_ZN3url15GetLocalSchemesEv() local_unnamed_addr #1

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.url::Origin", align 8
  %3 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 10
  %8 = load i8, i8* %7, align 4, !range !3
  %9 = icmp ne i8 %8, 0
  br label %13

10:                                               ; preds = %1
  %11 = bitcast %"class.url::Origin"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %11) #16
  call void @_ZNK5blink14SecurityOrigin11ToUrlOriginEv(%"class.url::Origin"* nonnull sret %2, %"class.blink::SecurityOrigin"* %0)
  %12 = call zeroext i1 @_ZN7network30IsOriginPotentiallyTrustworthyERKN3url6OriginE(%"class.url::Origin"* nonnull dereferenceable(80) %2) #16
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11) #16
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i1 [ %9, %6 ], [ %12, %10 ]
  ret i1 %14
}

declare zeroext i1 @_ZN7network30IsOriginPotentiallyTrustworthyERKN3url6OriginE(%"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14SecurityOrigin36IsPotentiallyTrustworthyErrorMessageEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %1, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.7, i64 0, i64 0), i64 61) #16
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink14SecurityOrigin23GrantLoadLocalResourcesEv(%"class.blink::SecurityOrigin"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 8
  store i8 1, i8* %2, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink14SecurityOrigin20GrantUniversalAccessEv(%"class.blink::SecurityOrigin"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 6
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink14SecurityOrigin28GrantCrossAgentClusterAccessEv(%"class.blink::SecurityOrigin"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 11
  store i8 1, i8* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink14SecurityOrigin31BlockLocalAccessFromLocalOriginEv(%"class.blink::SecurityOrigin"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 9
  store i8 1, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SecurityOrigin11IsLocalhostEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2
  %6 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %12, i64* %13, align 8
  br label %22

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

22:                                               ; preds = %14, %10
  %23 = phi i64 [ %21, %14 ], [ %12, %10 ]
  %24 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %24, i32* %25, align 8
  %26 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #16
  %27 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %23, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 5, i32* %29, align 8
  %30 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  br i1 %30, label %50, label %31

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #16
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* %5) #16
  %33 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = select i1 %36, i8* %38, i8* %32
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = zext i8 %35 to i64
  %43 = select i1 %36, i64 %41, i64 %42
  %44 = call zeroext i1 @_ZN3net21HostStringIsLocalhostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %39, i64 %43) #16
  %45 = load i8, i8* %34, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %31
  %48 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %48) #17
  br label %49

49:                                               ; preds = %31, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #16
  br label %50

50:                                               ; preds = %22, %49
  %51 = phi i1 [ %44, %49 ], [ true, %22 ]
  ret i1 %51
}

declare zeroext i1 @_ZN3net21HostStringIsLocalhostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin8ToStringEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin7IsLocalEv(%"class.blink::SecurityOrigin"* %0) #16
  br i1 %7, label %8, label %15

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 9
  %10 = load i8, i8* %9, align 1, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %1, %8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #16
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  br label %18

15:                                               ; preds = %8, %6
  %16 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin11ToRawStringEv(%"class.blink::SecurityOrigin"* %0)
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  br label %18

18:                                               ; preds = %15, %12
  %19 = phi %"class.WTF::StringImpl"* [ %16, %15 ], [ %14, %12 ]
  ret %"class.WTF::StringImpl"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin11ToRawStringEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringBuilder", align 8
  %6 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %12, i64* %13, align 8
  br label %22

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

22:                                               ; preds = %14, %10
  %23 = phi i64 [ %21, %14 ], [ %12, %10 ]
  %24 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %24, i32* %25, align 8
  %26 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #16
  %27 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %23, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8** %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %29, align 8
  %30 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #16
  br label %58

32:                                               ; preds = %22
  %33 = bitcast %"class.WTF::StringBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %33) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  %34 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1
  %36 = bitcast %union.anon.23* %35 to i8*
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 2
  store i32 0, i32* %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 3
  store i8 1, i8* %38, align 4
  %39 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 4
  store i8 0, i8* %39, align 1
  call void @_ZNK5blink14SecurityOrigin14BuildRawStringERN3WTF13StringBuilderE(%"class.blink::SecurityOrigin"* %0, %"class.WTF::StringBuilder"* nonnull dereferenceable(48) %5)
  %40 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %5) #16
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %41, align 8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %5) #16
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %32
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #16
  br label %57

57:                                               ; preds = %32, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %33) #16
  br label %58

58:                                               ; preds = %57, %31
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  ret %"class.WTF::StringImpl"* %60
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin14ToAtomicStringEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::StringBuilder", align 8
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin7IsLocalEv(%"class.blink::SecurityOrigin"* %0) #16
  br i1 %10, label %11, label %16

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 9
  %13 = load i8, i8* %12, align 1, !range !3
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %1, %11
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #16
  br label %69

16:                                               ; preds = %11, %9
  %17 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %22, align 8
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %24 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %23, i64* %24, align 8
  br label %33

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %31 = bitcast i8** %30 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %31, align 8
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %33

33:                                               ; preds = %25, %21
  %34 = phi i64 [ %32, %25 ], [ %23, %21 ]
  %35 = phi i32 [ %28, %25 ], [ 0, %21 ]
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %35, i32* %36, align 8
  %37 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #16
  %38 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %34, i64* %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %40, align 8
  %41 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #16
  br i1 %41, label %42, label %43

42:                                               ; preds = %33
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #16
  br label %69

43:                                               ; preds = %33
  %44 = bitcast %"class.WTF::StringBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %44) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 48, i1 false)
  %45 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 1
  %47 = bitcast %union.anon.23* %46 to i8*
  store i8 0, i8* %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 2
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 3
  store i8 1, i8* %49, align 4
  %50 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %5, i64 0, i32 4
  store i8 0, i8* %50, align 1
  call void @_ZNK5blink14SecurityOrigin14BuildRawStringERN3WTF13StringBuilderE(%"class.blink::SecurityOrigin"* %0, %"class.WTF::StringBuilder"* nonnull dereferenceable(48) %5)
  %51 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder14ToAtomicStringEv(%"class.WTF::StringBuilder"* nonnull %5) #16
  %52 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %52, align 8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %5) #16
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #16
  br label %68

68:                                               ; preds = %43, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %44) #16
  br label %69

69:                                               ; preds = %68, %42, %15
  %70 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  ret %"class.WTF::StringImpl"* %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14SecurityOrigin14BuildRawStringERN3WTF13StringBuilderE(%"class.blink::SecurityOrigin"*, %"class.WTF::StringBuilder"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %13, align 8
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %15 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %14, i64* %15, align 8
  br label %23

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %22 = bitcast i8** %21 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %22, align 8
  br label %23

23:                                               ; preds = %12, %16
  %24 = phi i32 [ %19, %16 ], [ 0, %12 ]
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %24, i32* %25, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #16
  %26 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #16
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 3, i32* %30, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #16
  %31 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %36, align 8
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %37, i64* %38, align 8
  br label %46

39:                                               ; preds = %23
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 1
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %45 = bitcast i8** %44 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %45, align 8
  br label %46

46:                                               ; preds = %35, %39
  %47 = phi i32 [ %42, %39 ], [ 0, %35 ]
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %47, i32* %48, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  %49 = call zeroext i16 @_ZN5blink22DefaultPortForProtocolERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %8) #16
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %103, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 4
  %53 = load i16, i16* %52, align 8
  %54 = call zeroext i16 @_ZN5blink22DefaultPortForProtocolERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %8) #16
  %55 = icmp eq i16 %53, %54
  br i1 %55, label %103, label %56

56:                                               ; preds = %51
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* %1, i8 zeroext 58) #16
  %57 = load i16, i16* %52, align 8
  %58 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #16
  %59 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 5
  %60 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %61 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %62 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 24, i1 false) #16
  store i8* %59, i8** %60, align 8
  %63 = urem i16 %57, 10
  %64 = udiv i16 %57, 10
  %65 = trunc i16 %63 to i8
  %66 = or i8 %65, 48
  store i8 %66, i8* %59, align 1
  %67 = icmp ugt i16 %57, 9
  br i1 %67, label %68, label %83

68:                                               ; preds = %56
  %69 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 4
  store i8* %69, i8** %60, align 8
  %70 = urem i16 %64, 10
  %71 = trunc i16 %70 to i8
  %72 = or i8 %71, 48
  store i8 %72, i8* %69, align 4
  %73 = icmp ugt i16 %57, 99
  br i1 %73, label %74, label %81

74:                                               ; preds = %68
  %75 = udiv i16 %57, 100
  %76 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 3
  store i8* %76, i8** %60, align 8
  %77 = urem i16 %75, 10
  %78 = trunc i16 %77 to i8
  %79 = or i8 %78, 48
  store i8 %79, i8* %76, align 1
  %80 = icmp ugt i16 %57, 999
  br i1 %80, label %85, label %94

81:                                               ; preds = %68
  %82 = ptrtoint i8* %69 to i64
  br label %97

83:                                               ; preds = %56
  %84 = ptrtoint i8* %59 to i64
  br label %97

85:                                               ; preds = %74, %85
  %86 = phi i16 [ %88, %85 ], [ %75, %74 ]
  %87 = load i8*, i8** %60, align 8
  %88 = udiv i16 %86, 10
  %89 = getelementptr inbounds i8, i8* %87, i64 -1
  store i8* %89, i8** %60, align 8
  %90 = urem i16 %88, 10
  %91 = trunc i16 %90 to i8
  %92 = or i8 %91, 48
  store i8 %92, i8* %89, align 1
  %93 = icmp ugt i16 %86, 99
  br i1 %93, label %85, label %94

94:                                               ; preds = %85, %74
  %95 = bitcast i8** %60 to i64*
  %96 = load i64, i64* %95, align 8
  br label %97

97:                                               ; preds = %94, %81, %83
  %98 = phi i64 [ %84, %83 ], [ %96, %94 ], [ %82, %81 ]
  %99 = ptrtoint i8* %62 to i64
  %100 = sub i64 %99, %98
  %101 = trunc i64 %100 to i32
  store i32 %101, i32* %61, align 8
  %102 = inttoptr i64 %98 to i8*
  call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %1, i8* %102, i32 %101) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #16
  br label %103

103:                                              ; preds = %51, %46, %97
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder14ToAtomicStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #16
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #16
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #16
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #16
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #16
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin19ToTokenForFastCheckEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 12
  %7 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %6, i64 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 12, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.3, i64 0, i64 0), i32 513, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i64 0, i64 0)) #16
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  br label %17

17:                                               ; preds = %1, %10, %14
  %18 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %83

21:                                               ; preds = %17
  %22 = call zeroext i1 @_ZNK5blink14SecurityOrigin7IsLocalEv(%"class.blink::SecurityOrigin"* %0) #16
  br i1 %22, label %23, label %27

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 9
  %25 = load i8, i8* %24, align 1, !range !3
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %83

27:                                               ; preds = %23, %21
  %28 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %28) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 48, i1 false)
  %29 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %31 = bitcast %union.anon.23* %30 to i8*
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %33, align 4
  %34 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %34, align 1
  call void @_ZNK5blink14SecurityOrigin14BuildRawStringERN3WTF13StringBuilderE(%"class.blink::SecurityOrigin"* %0, %"class.WTF::StringBuilder"* nonnull dereferenceable(48) %3)
  %35 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #16
  %36 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #16
  %37 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %6, i64 0, i32 0
  call void @_ZNK4base5Token8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.base::Token"* %37) #16
  %38 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %27
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %53, label %46

46:                                               ; preds = %27, %42
  %47 = phi i8* [ %44, %42 ], [ %36, %27 ]
  %48 = call i64 @strlen(i8* nonnull %47) #18
  %49 = icmp ult i64 %48, 4294967296
  br i1 %49, label %51, label %50, !prof !13

50:                                               ; preds = %46
  call void @llvm.trap() #16
  unreachable

51:                                               ; preds = %46
  %52 = trunc i64 %48 to i32
  br label %53

53:                                               ; preds = %42, %51
  %54 = phi i8* [ %47, %51 ], [ null, %42 ]
  %55 = phi i32 [ %52, %51 ], [ 0, %42 ]
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %57 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* %54, i8** %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %55, i32* %59, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  %60 = load i8, i8* %39, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #17
  br label %65

65:                                               ; preds = %53, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #16
  %66 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #16
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #16
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #16
  br label %82

82:                                               ; preds = %65, %78, %81
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %28) #16
  br label %83

83:                                               ; preds = %23, %17, %82
  %84 = phi %"class.WTF::StringImpl"* [ %66, %82 ], [ null, %17 ], [ null, %23 ]
  ret %"class.WTF::StringImpl"* %84
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %3) #16
  %4 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #16
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %2, %"class.blink::KURL"* dereferenceable(112) %4, %"class.WTF::String"* dereferenceable(8) %0) #16
  %5 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin25CreateWithReferenceOriginERKNS_4KURLEPKS0_(%"class.blink::KURL"* nonnull dereferenceable(112) %2, %"class.blink::SecurityOrigin"* null) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %3) #16
  ret %"class.blink::SecurityOrigin"* %5
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() local_unnamed_addr #1

declare void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14SecurityOrigin13AreSameOriginERKNS_4KURLES3_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin25CreateWithReferenceOriginERKNS_4KURLEPKS0_(%"class.blink::KURL"* dereferenceable(112) %0, %"class.blink::SecurityOrigin"* null) #16
  %4 = tail call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin25CreateWithReferenceOriginERKNS_4KURLEPKS0_(%"class.blink::KURL"* dereferenceable(112) %1, %"class.blink::SecurityOrigin"* null) #16
  %5 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"* %4, %"class.blink::SecurityOrigin"* %3)
  %6 = icmp eq %"class.blink::SecurityOrigin"* %4, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #16
  %9 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %4) #16
  %13 = bitcast %"class.blink::SecurityOrigin"* %4 to i8*
  tail call void @free(i8* %13) #16
  br label %14

14:                                               ; preds = %2, %7, %12
  %15 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #16
  %18 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #16
  %22 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %22) #16
  br label %23

23:                                               ; preds = %14, %16, %21
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14SecurityOrigin14IsSameSiteWithEPKS0_(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !3
  %5 = icmp ne i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp ne i8 %7, 0
  %9 = xor i1 %5, %8
  br i1 %9, label %212, label %10

10:                                               ; preds = %2
  br i1 %5, label %86, label %11

11:                                               ; preds = %10
  %12 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #16
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #16
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %11, %15, %30
  %33 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %56

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #16
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #16
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %56

53:                                               ; preds = %32
  %54 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* null) #16
  %55 = xor i1 %54, true
  br label %70

56:                                               ; preds = %51, %36
  %57 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* nonnull %34) #16
  %58 = xor i1 %57, true
  %59 = load atomic i32, i32* %37 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %56
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %56
  %67 = phi i32 [ %65, %64 ], [ %63, %56 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #16
  br label %70

70:                                               ; preds = %53, %66, %69
  %71 = phi i1 [ %55, %53 ], [ %58, %66 ], [ %58, %69 ]
  br i1 %14, label %85, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #16
  br i1 %71, label %212, label %86

85:                                               ; preds = %81, %70
  br i1 %71, label %212, label %86

86:                                               ; preds = %10, %84, %85
  %87 = load i8, i8* %3, align 8, !range !3
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %86
  %90 = tail call zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"* %0, %"class.blink::SecurityOrigin"* %1)
  br label %212

91:                                               ; preds = %86
  %92 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin17RegistrableDomainEv(%"class.blink::SecurityOrigin"* %0)
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %179

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #16
  br label %179

107:                                              ; preds = %91
  %108 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %128, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i33
  %120 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #16
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %116
  tail call void @llvm.trap() #16
  unreachable

126:                                              ; preds = %116
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %117, align 4
  br label %128

128:                                              ; preds = %107, %111, %126
  %129 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %1, i64 0, i32 2, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %149, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %151

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i33
  %141 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #16
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %147, !prof !2

146:                                              ; preds = %137
  tail call void @llvm.trap() #16
  unreachable

147:                                              ; preds = %137
  %148 = trunc i33 %143 to i32
  store i32 %148, i32* %138, align 4
  br label %151

149:                                              ; preds = %128
  %150 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %109, %"class.WTF::StringImpl"* null) #16
  br label %164

151:                                              ; preds = %132, %147
  %152 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %109, %"class.WTF::StringImpl"* nonnull %130) #16
  %153 = load atomic i32, i32* %133 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #16
  br label %164

164:                                              ; preds = %149, %160, %163
  %165 = phi i1 [ %150, %149 ], [ %152, %160 ], [ %152, %163 ]
  br i1 %110, label %212, label %166

166:                                              ; preds = %164
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %212

178:                                              ; preds = %175
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #16
  br label %212

179:                                              ; preds = %103, %106
  %180 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin17RegistrableDomainEv(%"class.blink::SecurityOrigin"* %0)
  %181 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14SecurityOrigin17RegistrableDomainEv(%"class.blink::SecurityOrigin"* %1)
  %182 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"* %181) #16
  %183 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #16
  br label %197

197:                                              ; preds = %179, %193, %196
  %198 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %198, label %212, label %199

199:                                              ; preds = %197
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %199
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %199
  %209 = phi i32 [ %207, %206 ], [ %205, %199 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #16
  br label %212

212:                                              ; preds = %211, %208, %197, %178, %175, %164, %84, %85, %2, %89
  %213 = phi i1 [ %90, %89 ], [ false, %2 ], [ false, %85 ], [ false, %84 ], [ %165, %164 ], [ %165, %175 ], [ %165, %178 ], [ %182, %197 ], [ %182, %208 ], [ %182, %211 ]
  ret i1 %213
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"class.blink::KURL"* @_ZN5blink14SecurityOrigin25UrlWithUniqueOpaqueOriginEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.WTF::String", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink14SecurityOrigin25UrlWithUniqueOpaqueOriginEvE5s_url to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %28, !prof !14

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink14SecurityOrigin25UrlWithUniqueOpaqueOriginEvE5s_url) #16
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 112) #16
  %9 = bitcast i8* %8 to %"class.blink::KURL"*
  %10 = bitcast %"class.WTF::String"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0), i64 6) #16
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* %9, %"class.WTF::String"* nonnull dereferenceable(8) %1) #16
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #16
  br label %27

27:                                               ; preds = %7, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  store i8* %8, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink14SecurityOrigin25UrlWithUniqueOpaqueOriginEvE5s_url to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink14SecurityOrigin25UrlWithUniqueOpaqueOriginEvE5s_url) #16
  br label %28

28:                                               ; preds = %4, %27, %0
  %29 = load %"class.blink::KURL"*, %"class.blink::KURL"** getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink14SecurityOrigin25UrlWithUniqueOpaqueOriginEvE5s_url, i64 0, i32 0, i32 0), align 8
  ret %"class.blink::KURL"* %29
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.blink::SecurityOrigin::PrivilegeData"* @_ZNK5blink14SecurityOrigin19CreatePrivilegeDataEv(%"class.blink::SecurityOrigin"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 3) #17
  %3 = bitcast i8* %2 to %"struct.blink::SecurityOrigin::PrivilegeData"*
  %4 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 6
  %5 = load i8, i8* %4, align 8, !range !3
  store i8 %5, i8* %2, align 1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 8
  %7 = load i8, i8* %6, align 2, !range !3
  %8 = getelementptr inbounds i8, i8* %2, i64 1
  store i8 %7, i8* %8, align 1
  %9 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 9
  %10 = load i8, i8* %9, align 1, !range !3
  %11 = getelementptr inbounds i8, i8* %2, i64 2
  store i8 %10, i8* %11, align 1
  ret %"struct.blink::SecurityOrigin::PrivilegeData"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14SecurityOrigin22TransferPrivilegesFromENSt3__110unique_ptrINS0_13PrivilegeDataENS1_14default_deleteIS3_EEEE(%"class.blink::SecurityOrigin"* nocapture, %"struct.blink::SecurityOrigin::PrivilegeData"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::SecurityOrigin::PrivilegeData", %"struct.blink::SecurityOrigin::PrivilegeData"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 1, !range !3
  %5 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 6
  store i8 %4, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.blink::SecurityOrigin::PrivilegeData", %"struct.blink::SecurityOrigin::PrivilegeData"* %1, i64 0, i32 1
  %7 = load i8, i8* %6, align 1, !range !3
  %8 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 8
  store i8 %7, i8* %8, align 2
  %9 = getelementptr inbounds %"struct.blink::SecurityOrigin::PrivilegeData", %"struct.blink::SecurityOrigin::PrivilegeData"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 1, !range !3
  %11 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 9
  store i8 %10, i8* %11, align 1
  %12 = icmp eq %"struct.blink::SecurityOrigin::PrivilegeData"* %1, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  tail call void @_ZdlPv(i8* %3) #17
  br label %14

14:                                               ; preds = %2, %13
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink14SecurityOrigin39SetOpaqueOriginIsPotentiallyTrustworthyEb(%"class.blink::SecurityOrigin"* nocapture, i1 zeroext) local_unnamed_addr #5 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 10
  store i8 %3, i8* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14SecurityOrigin16CanonicalizeHostERKN3WTF6StringEPb(%"class.WTF::String"* dereferenceable(8), i8* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.url::Component", align 4
  %4 = alloca %"class.url::RawCanonOutputT", align 8
  %5 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %6 = alloca %"struct.url::Component", align 4
  %7 = alloca %"struct.url::Component", align 4
  %8 = bitcast %"struct.url::Component"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 0
  %10 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 0, i32* %9, align 4
  store i32 -1, i32* %10, align 4
  %11 = bitcast %"class.url::RawCanonOutputT"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1048, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %4, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 1024, i1 false)
  %13 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %4, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %4, i64 0, i32 0, i32 1
  %15 = bitcast i8** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %16 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %4, i64 0, i32 1, i64 0
  store i8* %16, i8** %14, align 8
  %17 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %4, i64 0, i32 0, i32 2
  store i32 1024, i32* %17, align 8
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %36, label %24

24:                                               ; preds = %2
  %25 = bitcast %"class.WTF::StringUTF8Adaptor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 40, i1 false)
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %0, i32 0) #16
  %26 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 1
  %27 = load i8*, i8** %26, align 8
  %28 = bitcast %"struct.url::Component"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  %29 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %5, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %6, i64 0, i32 0
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %6, i64 0, i32 1
  store i32 %30, i32* %32, align 4
  %33 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %4, i64 0, i32 0
  %34 = call zeroext i1 @_ZN3url16CanonicalizeHostEPKcRKNS_9ComponentEPNS_12CanonOutputTIcEEPS2_(i8* %27, %"struct.url::Component"* nonnull dereferenceable(8) %6, %"class.url::CanonOutputT"* nonnull %33, %"struct.url::Component"* nonnull %3) #16
  %35 = zext i1 %34 to i8
  store i8 %35, i8* %1, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #16
  br label %52

36:                                               ; preds = %2
  %37 = icmp eq %"class.WTF::StringImpl"* %19, null
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %39 = bitcast %"class.WTF::StringImpl"* %38 to i16*
  %40 = select i1 %37, i16* null, i16* %39
  %41 = bitcast %"struct.url::Component"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #16
  br i1 %37, label %45, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  br label %45

45:                                               ; preds = %36, %42
  %46 = phi i32 [ %44, %42 ], [ 0, %36 ]
  %47 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %7, i64 0, i32 0
  store i32 0, i32* %47, align 4
  %48 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %7, i64 0, i32 1
  store i32 %46, i32* %48, align 4
  %49 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %4, i64 0, i32 0
  %50 = call zeroext i1 @_ZN3url16CanonicalizeHostEPKDsRKNS_9ComponentEPNS_12CanonOutputTIcEEPS2_(i16* %40, %"struct.url::Component"* nonnull dereferenceable(8) %7, %"class.url::CanonOutputT"* nonnull %49, %"struct.url::Component"* nonnull %3) #16
  %51 = zext i1 %50 to i8
  store i8 %51, i8* %1, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #16
  br label %52

52:                                               ; preds = %45, %24
  %53 = load i8*, i8** %14, align 8
  %54 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %4, i64 0, i32 0, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = sext i32 %55 to i64
  %57 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %53, i64 %56) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %58 = load i8*, i8** %14, align 8
  %59 = icmp eq i8* %58, %16
  %60 = icmp eq i8* %58, null
  %61 = or i1 %59, %60
  br i1 %61, label %63, label %62

62:                                               ; preds = %52
  call void @_ZdaPv(i8* nonnull %58) #17
  br label %63

63:                                               ; preds = %52, %62
  call void @llvm.lifetime.end.p0i8(i64 1048, i8* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  ret %"class.WTF::StringImpl"* %57
}

declare void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

declare zeroext i1 @_ZN3url16CanonicalizeHostEPKcRKNS_9ComponentEPNS_12CanonOutputTIcEEPS2_(i8*, %"struct.url::Component"* dereferenceable(8), %"class.url::CanonOutputT"*, %"struct.url::Component"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"*) unnamed_addr #3

declare zeroext i1 @_ZN3url16CanonicalizeHostEPKDsRKNS_9ComponentEPNS_12CanonOutputTIcEEPS2_(i16*, %"struct.url::Component"* dereferenceable(8), %"class.url::CanonOutputT"*, %"struct.url::Component"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi1024EED2Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i8* %4, %5
  %7 = icmp eq i8* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #17
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin24GetOriginForAgentClusterERKN4base16UnguessableTokenE(%"class.blink::SecurityOrigin"*, %"class.base::UnguessableToken"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 12, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %19

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 12, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %1, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %19

14:                                               ; preds = %8
  %15 = ptrtoint %"class.blink::SecurityOrigin"* %0 to i64
  %16 = icmp eq %"class.blink::SecurityOrigin"* %0, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %18) #16
  br label %25

19:                                               ; preds = %2, %8
  %20 = tail call noalias i8* @malloc(i64 96) #16
  %21 = bitcast i8* %20 to %"class.blink::SecurityOrigin"*
  tail call void @_ZN5blink14SecurityOriginC2EPKS0_NS0_23ConstructSameThreadCopyE(%"class.blink::SecurityOrigin"* %21, %"class.blink::SecurityOrigin"* %0, i32 undef)
  %22 = ptrtoint i8* %20 to i64
  %23 = getelementptr inbounds i8, i8* %20, i64 72
  %24 = bitcast %"class.base::UnguessableToken"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false)
  br label %25

25:                                               ; preds = %17, %14, %19
  %26 = phi i64 [ %22, %19 ], [ %15, %14 ], [ %15, %17 ]
  %27 = inttoptr i64 %26 to %"class.blink::SecurityOrigin"*
  ret %"class.blink::SecurityOrigin"* %27
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare void @_ZN3url6Origin5NonceC1ERKS1_(%"class.url::Origin::Nonce"*, %"class.url::Origin::Nonce"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector"* @_ZN3url18GetNoAccessSchemesEv() local_unnamed_addr #1

declare zeroext i1 @_ZN3url40AllowNonStandardSchemesForAndroidWebViewEv() local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #16
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !2

22:                                               ; preds = %15
  %23 = bitcast %union.anon.23* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.23* %16 to %"class.WTF::Vector.26"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.26"* %30, i16* nonnull dereferenceable(2) %3) #16
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #16
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"* %41, i8* nonnull dereferenceable(1) %4) #16
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.26"*, i16* dereferenceable(2)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.26"* %0, i32 %5) #16
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.26"* %0, i32 %5) #16
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.26"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !13

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #16
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #16
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.26"* %0, i32 %27) #16
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.26"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #16
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.27"* %19, i16* nonnull %6) #16
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #16
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #16
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !13

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #16
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !13

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.27"* %53, i16* %48) #16
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.26"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.26", %"class.WTF::Vector.26"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.27"*, i16*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"*, i8* dereferenceable(1)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #16
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #16
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !13

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #16
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #16
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #16
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %18, i8* nonnull %6) #16
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #16
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !13

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #16
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !13

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %46, i8* %42) #16
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.18, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #16
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"*, i8*) local_unnamed_addr #11 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #16
  ret void
}

declare void @_ZNK4base5Token8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.base::Token"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3url6Origin5NonceeqERKS1_(%"class.url::Origin::Nonce"*, %"class.url::Origin::Nonce"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #16
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #16
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #16
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #16
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #16
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #16
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi1024EED0Ev(%"class.url::RawCanonOutputT"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3url15RawCanonOutputTIcLi1024EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %6 = icmp eq i8* %4, %5
  %7 = icmp eq i8* %4, null
  %8 = or i1 %6, %7
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %4) #17
  br label %10

10:                                               ; preds = %1, %9
  %11 = bitcast %"class.url::RawCanonOutputT"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url15RawCanonOutputTIcLi1024EE6ResizeEi(%"class.url::RawCanonOutputT"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = tail call i8* @_Znam(i64 %3) #17
  %5 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %1
  %10 = select i1 %9, i32 %8, i32 %1
  %11 = sext i32 %10 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 %6, i64 %11, i1 false)
  %12 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 1, i64 0
  %13 = icmp eq i8* %6, %12
  %14 = icmp eq i8* %6, null
  %15 = or i1 %13, %14
  br i1 %15, label %17, label %16

16:                                               ; preds = %2
  tail call void @_ZdaPv(i8* nonnull %6) #17
  br label %17

17:                                               ; preds = %2, %16
  store i8* %4, i8** %5, align 8
  %18 = getelementptr inbounds %"class.url::RawCanonOutputT", %"class.url::RawCanonOutputT"* %0, i64 0, i32 0, i32 2
  store i32 %1, i32* %18, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #14

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #12

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink14SecurityOrigin15ExtractInnerURLERKNS_4KURLE: argument 0"}
!6 = distinct !{!6, !"_ZN5blink14SecurityOrigin15ExtractInnerURLERKNS_4KURLE"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink14SecurityOrigin15ExtractInnerURLERKNS_4KURLE: argument 0"}
!9 = distinct !{!9, !"_ZN5blink14SecurityOrigin15ExtractInnerURLERKNS_4KURLE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK5blink14SecurityOrigin24GetNonceForSerializationEv: argument 0"}
!12 = distinct !{!12, !"_ZNK5blink14SecurityOrigin24GetNonceForSerializationEv"}
!13 = !{!"branch_weights", i32 2000, i32 1}
!14 = !{!"branch_weights", i32 1, i32 1048575}
