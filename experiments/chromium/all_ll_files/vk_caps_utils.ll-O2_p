; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/vk_caps_utils.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/vk_caps_utils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rx::RendererVk" = type { %"class.egl::Display"*, i8, [7 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"struct.angle::FeaturesVk", %struct.VkInstance_T*, i8, i8, i8, i32, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceProvokingVertexFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, %struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT, %struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT, %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, %struct.VkDeviceDeviceMemoryReportCreateInfoEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT, %struct.VkExternalFenceProperties, %struct.VkExternalSemaphoreProperties, %struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures, %"class.std::__1::vector.36", %"class.angle::PackedEnumMap.43", i32, i32, i64, i64, i32, %struct.VkDevice_T*, %"class.rx::SerialFactoryBase", i8, %"class.std::__1::mutex", %"class.std::__1::vector.46", %"class.rx::vk::MemoryProperties", %"class.rx::vk::FormatTable", %"class.std::__1::mutex", %"class.rx::vk::PipelineCache", i32, i8, i8, %"class.angle::PackedEnumMap.61", %"class.std::__1::basic_string", i32, %"class.rx::DebugAnnotatorVk", i32, %"class.rx::vk::CommandPool", %"class.std::__1::deque", %"class.std::__1::mutex", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::vector.110", %"class.rx::vk::CommandProcessor", %"class.rx::vk::Allocator", %"class.rx::SamplerCache", %"class.rx::SamplerYcbcrConversionCache", %"class.rx::vk::ActiveHandleCounter", %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::MemoryReport", %"class.angle::PackedEnumMap.320", i32, %"class.std::__1::shared_ptr" }
%"class.egl::Display" = type opaque
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.10", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.12", %"struct.std::__1::array.12", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i32* }
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array", i32 }
%"struct.std::__1::array" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.9" }
%"struct.std::__1::array.9" = type { [6 x i32] }
%"class.angle::PackedEnumMap.10" = type { %"struct.std::__1::array.11" }
%"struct.std::__1::array.11" = type { [6 x i64] }
%"struct.std::__1::array.12" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.13" }
%"class.angle::PackedEnumMap.13" = type { %"struct.std::__1::array.14" }
%"struct.std::__1::array.14" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.35", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.24" }
%"class.std::__1::map.24" = type { %"class.std::__1::__tree.25" }
%"class.std::__1::__tree.25" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::array.35" = type { [4 x %"struct.angle::Feature"] }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%struct.VkInstance_T = type opaque
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProvokingVertexFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = type { i32, i8*, i32 }
%struct.VkDeviceDeviceMemoryReportCreateInfoEXT = type { i32, i8*, i32, void (%struct.VkDeviceMemoryReportCallbackDataEXT*, i8*)*, i8* }
%struct.VkDeviceMemoryReportCallbackDataEXT = type { i32, i8*, i32, i32, i64, i64, i32, i64, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.38" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %struct.VkQueueFamilyProperties* }
%"class.angle::PackedEnumMap.43" = type { %"struct.std::__1::array.44" }
%"struct.std::__1::array.44" = type { [3 x i8] }
%struct.VkDevice_T = type opaque
%"class.rx::SerialFactoryBase" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.46" = type { %"class.std::__1::__vector_base.47" }
%"class.std::__1::__vector_base.47" = type { %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*, %"class.std::__1::__compressed_pair.55" }
%"class.rx::vk::SharedGarbage" = type { %"class.rx::vk::SharedResourceUse", %"class.std::__1::vector.48" }
%"class.rx::vk::SharedResourceUse" = type { %"struct.rx::vk::ResourceUse"* }
%"struct.rx::vk::ResourceUse" = type { i32, %"class.rx::Serial" }
%"class.rx::Serial" = type { i64 }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*, %"class.std::__1::__compressed_pair.50" }
%"class.rx::vk::GarbageObject" = type { i32, %"struct.rx::vk::GarbageHandle_T"* }
%"struct.rx::vk::GarbageHandle_T" = type opaque
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.rx::vk::GarbageObject"* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.rx::vk::SharedGarbage"* }
%"class.rx::vk::MemoryProperties" = type { %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.rx::vk::FormatTable" = type { [8 x i8], %"struct.std::__1::array.60" }
%"struct.std::__1::array.60" = type { [227 x %"struct.rx::vk::Format"] }
%"struct.rx::vk::Format" = type <{ i32, i32, i32, i32, i32, [4 x i8], void (i64, i64, i64, i8*, i64, i64)*, { void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, i8 } (i32)*, void (i8*, i64, i64, i8*)*, void (i8*, i64, i64, i8*)*, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.rx::vk::PipelineCache" = type { %"class.rx::vk::WrappedObject" }
%"class.rx::vk::WrappedObject" = type { %struct.VkPipelineCache_T* }
%struct.VkPipelineCache_T = type opaque
%"class.angle::PackedEnumMap.61" = type { %"struct.std::__1::array.62" }
%"struct.std::__1::array.62" = type { [227 x %struct.VkFormatProperties] }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rx::DebugAnnotatorVk" = type { %"class.angle::LoggingAnnotator" }
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.rx::vk::CommandPool" = type { %"class.rx::vk::WrappedObject.68" }
%"class.rx::vk::WrappedObject.68" = type { %struct.VkCommandPool_T* }
%struct.VkCommandPool_T = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.75" }
%"struct.std::__1::__split_buffer" = type { %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"class.std::__1::__compressed_pair.70" }
%"struct.rx::RendererVk::PendingOneOffCommands" = type { %"class.rx::Serial", %"class.rx::vk::priv::CommandBuffer" }
%"class.rx::vk::priv::CommandBuffer" = type { %"class.rx::vk::WrappedObject.69" }
%"class.rx::vk::WrappedObject.69" = type { %struct.VkCommandBuffer_T* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.rx::RendererVk::PendingOneOffCommands"** }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::vk::CommandQueue" = type { %"class.rx::vk::CommandQueueInterface", %"class.std::__1::vector.79", %"class.std::__1::vector.86", %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::PersistentCommandPool", %"class.rx::SerialFactoryBase", %"class.rx::Serial", %"class.rx::Serial", %"class.rx::Serial", %"class.angle::PackedEnumMap.100", %"class.rx::vk::FenceRecycler" }
%"class.rx::vk::CommandQueueInterface" = type { i32 (...)** }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"class.rx::vk::ObjectAndSerial"*, %"class.rx::vk::ObjectAndSerial"*, %"class.std::__1::__compressed_pair.81" }
%"class.rx::vk::ObjectAndSerial" = type opaque
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.rx::vk::ObjectAndSerial"* }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"struct.rx::vk::CommandBatch"*, %"struct.rx::vk::CommandBatch"*, %"class.std::__1::__compressed_pair.88" }
%"struct.rx::vk::CommandBatch" = type { [8 x i8], %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::CommandPool", %"class.rx::vk::Shared", %"class.rx::Serial" }
%"class.rx::vk::Shared" = type { %"class.rx::vk::RefCounted"* }
%"class.rx::vk::RefCounted" = type { i32, %"class.rx::vk::Fence" }
%"class.rx::vk::Fence" = type { %"class.rx::vk::WrappedObject.104" }
%"class.rx::vk::WrappedObject.104" = type { %struct.VkFence_T* }
%struct.VkFence_T = type opaque
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.rx::vk::CommandBatch"* }
%"class.rx::vk::PersistentCommandPool" = type { %"class.std::__1::vector.93", %"class.rx::vk::CommandPool" }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.rx::vk::priv::CommandBuffer"*, %"class.rx::vk::priv::CommandBuffer"*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.rx::vk::priv::CommandBuffer"* }
%"class.angle::PackedEnumMap.100" = type { %"struct.std::__1::array.101" }
%"struct.std::__1::array.101" = type { [3 x %struct.VkQueue_T*] }
%struct.VkQueue_T = type opaque
%"class.rx::vk::FenceRecycler" = type { %"class.std::__1::mutex", %"class.rx::vk::Recycler" }
%"class.rx::vk::Recycler" = type { %"class.std::__1::vector.102" }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { %"class.rx::vk::Fence"*, %"class.rx::vk::Fence"*, %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.rx::vk::Fence"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"class.rx::vk::CommandBufferHelper"**, %"class.rx::vk::CommandBufferHelper"**, %"class.std::__1::__compressed_pair.183" }
%"class.rx::vk::CommandBufferHelper" = type { [8 x i8], %"class.angle::PoolAllocator", %"class.angle::PackedEnumMap.119", %"class.angle::BitSetT", %"class.rx::vk::priv::SecondaryCommandBuffer", i32, %"class.rx::vk::RenderPassDesc", %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::Framebuffer", %"struct.gl::Rectangle", %"class.rx::vk::PackedClearValuesArray", i8, %"struct.std::__1::array.140", i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"class.rx::vk::PackedAttachmentIndex", %"class.angle::FastIntegerMap", %"class.angle::FastIntegerSet", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, %"class.rx::vk::PackedAttachmentIndex", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::ImageHelper"* }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.112", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.114" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.angle::PackedEnumMap.119" = type { %"struct.std::__1::array.120" }
%"struct.std::__1::array.120" = type { [14 x %"class.rx::vk::PipelineBarrier"] }
%"class.rx::vk::PipelineBarrier" = type { i32, i32, i32, i32, %"class.std::__1::vector.121" }
%"class.std::__1::vector.121" = type { %"class.std::__1::__vector_base.122" }
%"class.std::__1::__vector_base.122" = type { %struct.VkImageMemoryBarrier*, %struct.VkImageMemoryBarrier*, %"class.std::__1::__compressed_pair.123" }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImage_T = type opaque
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %struct.VkImageMemoryBarrier* }
%"class.angle::BitSetT" = type { i16 }
%"class.rx::vk::priv::SecondaryCommandBuffer" = type { i8, %"class.std::__1::vector.128", %"class.angle::PoolAllocator"*, i8*, i64 }
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"**, %"class.std::__1::__compressed_pair.130" }
%"struct.rx::vk::priv::CommandHeader" = type { i16, i16 }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.rx::vk::priv::CommandHeader"** }
%"class.rx::vk::RenderPassDesc" = type { i8, %"class.angle::BitSetT.135", %"class.angle::BitSetT.135", %"struct.std::__1::array.136" }
%"class.angle::BitSetT.135" = type { i8 }
%"struct.std::__1::array.136" = type { [9 x i8] }
%"class.rx::vk::AttachmentOpsArray" = type { %"struct.std::__1::array.137" }
%"struct.std::__1::array.137" = type { [10 x %"struct.rx::vk::PackedAttachmentOpsDesc"] }
%"struct.rx::vk::PackedAttachmentOpsDesc" = type { i32 }
%"class.rx::vk::Framebuffer" = type { %"class.rx::vk::WrappedObject.138" }
%"class.rx::vk::WrappedObject.138" = type { %struct.VkFramebuffer_T* }
%struct.VkFramebuffer_T = type opaque
%"class.rx::vk::PackedClearValuesArray" = type { %"struct.std::__1::array.139" }
%"struct.std::__1::array.139" = type { [10 x %union.VkClearValue] }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"struct.std::__1::array.140" = type { [4 x %struct.VkBuffer_T*] }
%struct.VkBuffer_T = type opaque
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.angle::FastIntegerMap" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.149" }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { i32*, i32*, %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { i32* }
%"class.angle::FastIntegerSet" = type { %"class.std::__1::vector.141" }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.angle::BitSetT.143"*, %"class.angle::BitSetT.143"*, %"class.std::__1::__compressed_pair.144" }
%"class.angle::BitSetT.143" = type { i64 }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.angle::BitSetT.143"* }
%"class.gl::LevelIndexWrapper" = type { i32 }
%"class.rx::vk::PackedAttachmentIndex" = type { i32 }
%"class.rx::vk::PackedImageAttachmentArray" = type { %"struct.std::__1::array.182" }
%"struct.std::__1::array.182" = type { [10 x %"class.rx::vk::ImageHelper"*] }
%"class.rx::vk::ImageHelper" = type <{ %"class.rx::vk::Resource", %"class.angle::Subject", %"class.rx::vk::Image", %"class.rx::vk::DeviceMemory", i32, i32, i32, i32, %struct.VkExtent3D, i8, [3 x i8], %"struct.rx::vk::Format"*, i32, %"class.rx::vk::ImageSerial", i32, i32, i32, i32, %"class.angle::BitSetT.159", [6 x i8], %"class.rx::vk::BindingPointer", i64, %"class.gl::LevelIndexWrapper", i32, i32, [4 x i8], %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.173", %struct.Optional, %"struct.std::__1::array.181", %"struct.std::__1::array.181", [4 x i8] }>
%"class.rx::vk::Resource" = type { i32 (...)**, %"class.rx::vk::SharedResourceUse" }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array.156", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array.156" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.rx::vk::Image" = type { %"class.rx::vk::WrappedObject.157" }
%"class.rx::vk::WrappedObject.157" = type { %struct.VkImage_T* }
%"class.rx::vk::DeviceMemory" = type { %"class.rx::vk::WrappedObject.158" }
%"class.rx::vk::WrappedObject.158" = type { %struct.VkDeviceMemory_T* }
%struct.VkDeviceMemory_T = type opaque
%"class.rx::vk::ImageSerial" = type { i32 }
%"class.angle::BitSetT.159" = type { i16 }
%"class.rx::vk::BindingPointer" = type { %"class.rx::vk::RefCounted.160"* }
%"class.rx::vk::RefCounted.160" = type opaque
%"class.rx::vk::DynamicBuffer" = type { i32, i8, i32, i64, %"class.std::__1::unique_ptr", i32, i32, i64, i64, i32, %"class.std::__1::vector.166", %"class.std::__1::vector.166" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.rx::vk::BufferHelper"* }
%"class.rx::vk::BufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Buffer", %"class.rx::vk::BufferMemory", i32, i64, i32, i32, i32, i32, i32, %"class.rx::vk::BufferSerial" }
%"class.rx::vk::Buffer" = type { %"class.rx::vk::WrappedObject.163" }
%"class.rx::vk::WrappedObject.163" = type { %struct.VkBuffer_T* }
%"class.rx::vk::BufferMemory" = type { [8 x i8], %"class.rx::vk::Allocation", %"class.rx::vk::DeviceMemory", i8*, i8* }
%"class.rx::vk::Allocation" = type { %"class.rx::vk::WrappedObject.164" }
%"class.rx::vk::WrappedObject.164" = type { %struct.VmaAllocation_T* }
%struct.VmaAllocation_T = type opaque
%"class.rx::vk::BufferSerial" = type { i32 }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"class.std::__1::vector.175"*, %"class.std::__1::vector.175"*, %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::vector.175" = type opaque
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.std::__1::vector.175"* }
%struct.Optional = type { i8, %"struct.rx::vk::ImageHelper::ClearUpdate" }
%"struct.rx::vk::ImageHelper::ClearUpdate" = type { i32, %union.VkClearValue, i32, i32, i32 }
%"struct.std::__1::array.181" = type { [16 x %"class.angle::BitSetT.135"] }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.rx::vk::CommandBufferHelper"** }
%"class.rx::vk::CommandProcessor" = type { %"class.rx::vk::Context", %"class.rx::vk::CommandQueueInterface", %"class.std::__1::queue", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, %"class.rx::vk::CommandPool", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::mutex", %"class.std::__1::queue.220", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::map.233", %"class.std::__1::thread" }
%"class.rx::vk::Context" = type { i32 (...)**, %"class.rx::RendererVk"* }
%"class.std::__1::queue" = type { %"class.std::__1::deque.188" }
%"class.std::__1::deque.188" = type { %"class.std::__1::__deque_base.189" }
%"class.std::__1::__deque_base.189" = type { %"struct.std::__1::__split_buffer.190", i64, %"class.std::__1::__compressed_pair.212" }
%"struct.std::__1::__split_buffer.190" = type { %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.std::__1::__compressed_pair.207" }
%"class.rx::vk::CommandProcessorTask" = type <{ i32, [4 x i8], %"class.rx::vk::RenderPass"*, %"class.rx::vk::CommandBufferHelper"*, %"class.std::__1::vector.192", %"class.std::__1::vector", %"class.rx::vk::Semaphore"*, %"class.std::__1::vector.48", %"class.rx::Serial", %struct.VkPresentInfoKHR, %struct.VkSwapchainKHR_T*, %struct.VkSemaphore_T*, i32, [4 x i8], %struct.VkPresentRegionKHR, %struct.VkPresentRegionsKHR, %"class.std::__1::vector.200", %struct.VkCommandBuffer_T*, %"class.rx::vk::Fence"*, i8, [7 x i8] }>
%"class.rx::vk::RenderPass" = type { %"class.rx::vk::WrappedObject.191" }
%"class.rx::vk::WrappedObject.191" = type { %struct.VkRenderPass_T* }
%struct.VkRenderPass_T = type opaque
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %struct.VkSemaphore_T** }
%"class.rx::vk::Semaphore" = type { %"class.rx::vk::WrappedObject.199" }
%"class.rx::vk::WrappedObject.199" = type { %struct.VkSemaphore_T* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkPresentRegionKHR = type { i32, %struct.VkRectLayerKHR* }
%struct.VkRectLayerKHR = type { %struct.VkOffset2D, %struct.VkExtent2D, i32 }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPresentRegionsKHR = type { i32, i8*, i32, %struct.VkPresentRegionKHR* }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %struct.VkRectLayerKHR*, %struct.VkRectLayerKHR*, %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %struct.VkRectLayerKHR* }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.rx::vk::CommandProcessorTask"** }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::queue.220" = type { %"class.std::__1::deque.221" }
%"class.std::__1::deque.221" = type { %"class.std::__1::__deque_base.222" }
%"class.std::__1::__deque_base.222" = type { %"struct.std::__1::__split_buffer.223", i64, %"class.std::__1::__compressed_pair.229" }
%"struct.std::__1::__split_buffer.223" = type { %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"class.std::__1::__compressed_pair.224" }
%"struct.rx::vk::Error" = type { i32, i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"struct.rx::vk::Error"** }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.216, %union.anon.218, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.216 = type { i64 }
%union.anon.218 = type { i64 }
%"class.std::__1::map.233" = type { %"class.std::__1::__tree.234" }
%"class.std::__1::__tree.234" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.235", %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::thread" = type { i64 }
%"class.rx::vk::Allocator" = type { %"class.rx::vk::WrappedObject.244" }
%"class.rx::vk::WrappedObject.244" = type { %struct.VmaAllocator_T* }
%struct.VmaAllocator_T = type opaque
%"class.rx::SamplerCache" = type { %"class.rx::HasCacheStats", %"class.std::__1::unordered_map" }
%"class.rx::HasCacheStats" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.rx::CacheStats" = type { i64, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.245", %"class.std::__1::__compressed_pair.253", %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.260", [4 x i8] }>
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247", %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { float }
%"class.rx::SamplerYcbcrConversionCache" = type { %"class.rx::HasCacheStats.264", %"class.std::__1::unordered_map.265" }
%"class.rx::HasCacheStats.264" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.265" = type { %"class.std::__1::__hash_table.266" }
%"class.std::__1::__hash_table.266" = type <{ %"class.std::__1::unique_ptr.267", %"class.std::__1::__compressed_pair.277", %"class.std::__1::__compressed_pair.282", %"class.std::__1::__compressed_pair.286", [4 x i8] }>
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269", %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.270"** }
%"struct.std::__1::__hash_node_base.270" = type { %"struct.std::__1::__hash_node_base.270"* }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.std::__1::__bucket_list_deallocator.272" }
%"class.std::__1::__bucket_list_deallocator.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.std::__1::__hash_node_base.270" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.rx::vk::ActiveHandleCounter" = type { %"class.angle::PackedEnumMap.292", %"class.angle::PackedEnumMap.292" }
%"class.angle::PackedEnumMap.292" = type { %"struct.std::__1::array.293" }
%"struct.std::__1::array.293" = type { [24 x i32] }
%"class.rx::vk::ResourceSerialFactory" = type { %"struct.std::__1::atomic.294" }
%"struct.std::__1::atomic.294" = type { %"struct.std::__1::__atomic_base.295" }
%"struct.std::__1::__atomic_base.295" = type { %"struct.std::__1::__atomic_base.296" }
%"struct.std::__1::__atomic_base.296" = type { %"struct.std::__1::__cxx_atomic_impl.297" }
%"struct.std::__1::__cxx_atomic_impl.297" = type { %"struct.std::__1::__cxx_atomic_base_impl.298" }
%"struct.std::__1::__cxx_atomic_base_impl.298" = type { i32 }
%"class.rx::vk::MemoryReport" = type { %"class.std::__1::mutex", i64, i64, %"class.absl::flat_hash_map", i64, i64, %"class.absl::flat_hash_map.307" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.absl::flat_hash_map.307" = type { %"class.absl::container_internal::raw_hash_map.308" }
%"class.absl::container_internal::raw_hash_map.308" = type { %"class.absl::container_internal::raw_hash_set.309" }
%"class.absl::container_internal::raw_hash_set.309" = type { i8*, %"union.absl::container_internal::map_slot_type.310"*, i64, i64, %"class.absl::container_internal::CompressedTuple.311" }
%"union.absl::container_internal::map_slot_type.310" = type opaque
%"class.absl::container_internal::CompressedTuple.311" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.312" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.312" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.320" = type { %"struct.std::__1::array.321" }
%"struct.std::__1::array.321" = type { [12 x %"class.rx::CacheStats"] }
%"class.std::__1::shared_ptr" = type { %"class.rx::WaitableCompressEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::WaitableCompressEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.322" }
%"class.std::__1::shared_ptr.322" = type { %"class.angle::WaitableEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WaitableEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.323" }
%"class.std::__1::shared_ptr.323" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.egl::ConfigSet" = type { %"class.std::__1::map.355" }
%"class.std::__1::map.355" = type { %"class.std::__1::__tree.356" }
%"class.std::__1::__tree.356" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.357", %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::DisplayVk" = type { %"class.rx::DisplayImpl", %"class.rx::vk::Context", %"class.angle::ScratchBuffer", %"struct.rx::vk::Error" }
%"class.rx::DisplayImpl" = type { %"class.rx::EGLImplFactory", %"class.angle::Subject", %"struct.egl::DisplayState"*, i8, %"struct.egl::DisplayExtensions", i8, %"struct.egl::Caps", %"class.egl::BlobCache"* }
%"class.rx::EGLImplFactory" = type { i32 (...)** }
%"struct.egl::DisplayState" = type opaque
%"struct.egl::DisplayExtensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.egl::Caps" = type { i8, i8 }
%"class.egl::BlobCache" = type { %"class.std::__1::mutex", %"class.angle::SizedMRUCache", void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)* }
%"class.angle::SizedMRUCache" = type { i64, i64, %"class.angle::base::HashingMRUCache" }
%"class.angle::base::HashingMRUCache" = type { %"class.angle::base::MRUCacheBase" }
%"class.angle::base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::unordered_map.328", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.324" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.349", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"struct.std::__1::__less" = type { i8 }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Version" = type { i32, i32 }
%"class.std::__1::insert_iterator" = type { %"class.std::__1::set"*, %"class.std::__1::__tree_const_iterator" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__118__set_intersectionIRNS_6__lessIjjEENS_21__tree_const_iteratorIjPNS_11__tree_nodeIjPvEElEES9_NS_15insert_iteratorINS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEEEET2_T0_SJ_T1_SK_SI_T_ = comdat any

$_ZNSt3__115insert_iteratorINS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEaSERKj = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE12__find_equalIjEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIjPNS_11__tree_nodeIjS8_EElEERPNS_15__tree_end_nodeISA_EESB_RKT_ = comdat any

@.ref.tmp = private unnamed_addr constant [19 x i32] [i32 32849, i32 32856, i32 37492, i32 37496, i32 37494, i32 37808, i32 37809, i32 37810, i32 37811, i32 37812, i32 37813, i32 37814, i32 37815, i32 37816, i32 37817, i32 37818, i32 37819, i32 37820, i32 37821], align 4
@.ref.tmp.1 = private unnamed_addr constant [4 x i32] [i32 33776, i32 33777, i32 33778, i32 33779], align 4
@.ref.tmp.5 = private unnamed_addr constant [6 x i32] [i32 35905, i32 35907, i32 35916, i32 35917, i32 35918, i32 35919], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx10RendererVk21ensureCapsInitializedEv(%"class.rx::RendererVk"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector", align 8
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca [3 x i32], align 4
  %9 = alloca float, align 4
  %10 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %1058

13:                                               ; preds = %1
  store i8 1, i8* %10, align 8
  %14 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 38
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 36, i32 0, i32 0
  %18 = load %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties** %17, align 8
  %19 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 4
  tail call void @_ZN2gl10Extensions26setTextureExtensionSupportERKNS_14TextureCapsMapE(%"struct.gl::Extensions"* %19, %"class.gl::TextureCapsMap"* dereferenceable(7264) %20) #9
  %21 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 179
  store i8 1, i8* %21, align 2
  %22 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 20
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %29

25:                                               ; preds = %13
  %26 = tail call zeroext i1 @_ZN2gl36DetermineCompressedTextureETCSupportERKNS_14TextureCapsMapE(%"class.gl::TextureCapsMap"* dereferenceable(7264) %20) #9
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 42
  store i8 1, i8* %28, align 2
  br label %31

29:                                               ; preds = %25, %13
  %30 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 6, i32 11
  store i8 1, i8* %30, align 1
  br label %31

31:                                               ; preds = %29, %27
  %32 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 26
  store i8 0, i8* %32, align 2
  %33 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 25
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 24
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 27
  store i8 %35, i8* %36, align 1
  %37 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 30
  %38 = load i8, i8* %37, align 2, !range !2
  %39 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 31
  store i8 %38, i8* %39, align 1
  %40 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 11
  store i8 1, i8* %40, align 1
  %41 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 12
  store i8 1, i8* %41, align 4
  %42 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 54
  store i8 1, i8* %42, align 2
  %43 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 56
  store i8 1, i8* %43, align 8
  %44 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 80
  store i8 1, i8* %44, align 2
  %45 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 69
  store i8 1, i8* %45, align 1
  %46 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 71
  store i8 1, i8* %46, align 1
  %47 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 55, i32 4
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 72
  store i8 %48, i8* %49, align 2
  %50 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 73
  store i8 %48, i8* %50, align 1
  %51 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 102
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 1
  %54 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 152
  %55 = zext i1 %53 to i8
  store i8 %55, i8* %54, align 2
  %56 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 118
  store i8 1, i8* %56, align 8
  %57 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 120
  store i8 1, i8* %57, align 2
  %58 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 119
  store i8 1, i8* %58, align 1
  %59 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 88
  store i8 1, i8* %59, align 1
  %60 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %61, 6880
  %65 = icmp eq i32 %63, 49374
  %66 = and i1 %64, %65
  %67 = icmp ne i32 %61, 5045
  %68 = xor i1 %66, %67
  %69 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 66
  %70 = zext i1 %68 to i8
  store i8 %70, i8* %69, align 4
  %71 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 87
  store i8 1, i8* %71, align 4
  %72 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 29, i32 4
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 125
  store i8 %73, i8* %74, align 1
  %75 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 126
  store i8 %73, i8* %75, align 8
  %76 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 19
  store i8 1, i8* %76, align 1
  %77 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 165
  store i8 1, i8* %77, align 4
  %78 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 167
  store i8 1, i8* %78, align 2
  %79 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 168
  store i8 1, i8* %79, align 1
  %80 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 68
  store i8 1, i8* %80, align 2
  %81 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 1
  %84 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 58
  %85 = zext i1 %83 to i8
  store i8 %85, i8* %84, align 2
  %86 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 57
  store i8 %85, i8* %86, align 1
  %87 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 90
  %88 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 132
  store i8 1, i8* %88, align 2
  %89 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 95
  store i8 1, i8* %89, align 4
  %90 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 14, i32 4
  %91 = bitcast i8* %87 to i32*
  store i32 16843009, i32* %91, align 1
  %92 = load i8, i8* %90, align 8, !range !2
  %93 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 96
  store i8 %92, i8* %93, align 1
  %94 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 97
  store i8 1, i8* %94, align 2
  %95 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 15, i32 4
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 98
  store i8 %96, i8* %97, align 1
  %98 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 99
  store i8 1, i8* %98, align 8
  %99 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 19, i32 4
  %100 = load i8, i8* %99, align 8, !range !2
  %101 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 100
  store i8 %100, i8* %101, align 1
  %102 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 20, i32 4
  %103 = load i8, i8* %102, align 8, !range !2
  %104 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 101
  store i8 %103, i8* %104, align 2
  %105 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 106
  store i8 1, i8* %105, align 1
  %106 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 74
  store i8 1, i8* %106, align 4
  %107 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 75
  store i8 1, i8* %107, align 1
  %108 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 1
  %111 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 67
  %112 = zext i1 %110 to i8
  store i8 %112, i8* %111, align 1
  %113 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 94
  store i8 1, i8* %113, align 1
  %114 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 108
  store i8 1, i8* %114, align 1
  %115 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 61
  store i8 1, i8* %115, align 8
  %116 = getelementptr inbounds %struct.VkQueueFamilyProperties, %struct.VkQueueFamilyProperties* %18, i64 %16, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = icmp ne i32 %117, 0
  %119 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 63
  %120 = zext i1 %118 to i8
  store i8 %120, i8* %119, align 2
  %121 = load i32, i32* %116, align 4
  %122 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 64
  store i32 %121, i32* %122, align 4
  %123 = load i32, i32* %116, align 4
  %124 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 65
  store i32 %123, i32* %124, align 8
  %125 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 19
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %31
  %129 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 59
  store i8 0, i8* %129, align 1
  br label %137

130:                                              ; preds = %31
  %131 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 61
  %132 = load float, float* %131, align 8
  %133 = fcmp ogt float %132, 1.000000e+00
  %134 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 59
  %135 = zext i1 %133 to i8
  store i8 %135, i8* %134, align 1
  br i1 %133, label %136, label %137

136:                                              ; preds = %130
  br label %137

137:                                              ; preds = %128, %130, %136
  %138 = phi float [ %132, %136 ], [ 0.000000e+00, %130 ], [ 0.000000e+00, %128 ]
  %139 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 60
  store float %138, float* %139, align 4
  %140 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 55
  store i8 1, i8* %140, align 1
  %141 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 53
  store i8 1, i8* %141, align 1
  %142 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 77
  store i8 1, i8* %142, align 1
  %143 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 78
  store i8 1, i8* %143, align 8
  %144 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 105
  store i8 1, i8* %144, align 2
  %145 = getelementptr inbounds %"struct.gl::Extensions", %"struct.gl::Extensions"* %19, i64 0, i32 0
  store i8 1, i8* %145, align 8
  %146 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 86
  store i8 1, i8* %146, align 1
  %147 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 166
  store i8 1, i8* %147, align 1
  %148 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 169
  store i8 1, i8* %148, align 8
  %149 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 151
  store i8 1, i8* %149, align 1
  %150 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 49
  %151 = load i8, i8* %150, align 1, !range !2
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %156, label %153

153:                                              ; preds = %137
  %154 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 1
  %155 = load i8, i8* %154, align 1, !range !2
  br label %156

156:                                              ; preds = %137, %153
  %157 = phi i8 [ 0, %137 ], [ %155, %153 ]
  %158 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 50
  store i8 %157, i8* %158, align 2
  %159 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %159) #9
  %160 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %161 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %162 = tail call i8* @_Znwm(i64 76) #10
  %163 = bitcast %"class.std::__1::vector"* %3 to i8**
  store i8* %162, i8** %163, align 8
  %164 = getelementptr inbounds i8, i8* %162, i64 76
  %165 = bitcast i32** %161 to i8**
  store i8* %164, i8** %165, align 8
  %166 = bitcast i32** %160 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %162, i8* align 4 bitcast ([19 x i32]* @.ref.tmp to i8*), i64 76, i1 false) #9
  %167 = ptrtoint i8* %164 to i64
  store i64 %167, i64* %166, align 8
  %168 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %168) #9
  %169 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %170 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %171 = tail call i8* @_Znwm(i64 16) #10
  %172 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %171, i8** %172, align 8
  %173 = getelementptr inbounds i8, i8* %171, i64 16
  %174 = bitcast i32** %170 to i8**
  store i8* %173, i8** %174, align 8
  %175 = bitcast i32** %169 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %171, i8* align 4 bitcast ([4 x i32]* @.ref.tmp.1 to i8*), i64 16, i1 false) #9
  %176 = ptrtoint i8* %173 to i64
  store i64 %176, i64* %175, align 8
  %177 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #9
  %178 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %179 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %180 = tail call i8* @_Znwm(i64 4) #10
  %181 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %180, i8** %181, align 8
  %182 = getelementptr inbounds i8, i8* %180, i64 4
  %183 = bitcast i32** %179 to i8**
  store i8* %182, i8** %183, align 8
  %184 = bitcast i32** %178 to i64*
  %185 = bitcast i8* %180 to i32*
  store i32 33321, i32* %185, align 4
  %186 = ptrtoint i8* %182 to i64
  store i64 %186, i64* %184, align 8
  %187 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %187) #9
  %188 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %189 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %190 = tail call i8* @_Znwm(i64 4) #10
  %191 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %190, i8** %191, align 8
  %192 = getelementptr inbounds i8, i8* %190, i64 4
  %193 = bitcast i32** %189 to i8**
  store i8* %192, i8** %193, align 8
  %194 = bitcast i32** %188 to i64*
  %195 = bitcast i8* %190 to i32*
  store i32 33323, i32* %195, align 4
  %196 = ptrtoint i8* %192 to i64
  store i64 %196, i64* %194, align 8
  %197 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %197) #9
  %198 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %199 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %200 = tail call i8* @_Znwm(i64 4) #10
  %201 = bitcast %"class.std::__1::vector"* %7 to i8**
  store i8* %200, i8** %201, align 8
  %202 = getelementptr inbounds i8, i8* %200, i64 4
  %203 = bitcast i32** %199 to i8**
  store i8* %202, i8** %203, align 8
  %204 = bitcast i32** %198 to i64*
  %205 = bitcast i8* %200 to i32*
  store i32 36492, i32* %205, align 4
  %206 = ptrtoint i8* %202 to i64
  store i64 %206, i64* %204, align 8
  %207 = call fastcc zeroext i1 @_ZN2rx2vk12_GLOBAL__N_131FormatReinterpretationSupportedERKNSt3__16vectorIjNS2_9allocatorIjEEEEPKNS_10RendererVkEb(%"class.std::__1::vector"* nonnull dereferenceable(24) %3, %"class.rx::RendererVk"* %0, i1 zeroext false) #9
  br i1 %207, label %208, label %233

208:                                              ; preds = %156
  %209 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 23
  %210 = load i8, i8* %209, align 1, !range !2
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %214, label %212

212:                                              ; preds = %208
  %213 = call fastcc zeroext i1 @_ZN2rx2vk12_GLOBAL__N_131FormatReinterpretationSupportedERKNSt3__16vectorIjNS2_9allocatorIjEEEEPKNS_10RendererVkEb(%"class.std::__1::vector"* nonnull dereferenceable(24) %4, %"class.rx::RendererVk"* %0, i1 zeroext false) #9
  br i1 %213, label %214, label %233

214:                                              ; preds = %212, %208
  %215 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 46
  %216 = load i8, i8* %215, align 2, !range !2
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %220, label %218

218:                                              ; preds = %214
  %219 = call fastcc zeroext i1 @_ZN2rx2vk12_GLOBAL__N_131FormatReinterpretationSupportedERKNSt3__16vectorIjNS2_9allocatorIjEEEEPKNS_10RendererVkEb(%"class.std::__1::vector"* nonnull dereferenceable(24) %5, %"class.rx::RendererVk"* %0, i1 zeroext false) #9
  br i1 %219, label %220, label %233

220:                                              ; preds = %218, %214
  %221 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 47
  %222 = load i8, i8* %221, align 1, !range !2
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %226, label %224

224:                                              ; preds = %220
  %225 = call fastcc zeroext i1 @_ZN2rx2vk12_GLOBAL__N_131FormatReinterpretationSupportedERKNSt3__16vectorIjNS2_9allocatorIjEEEEPKNS_10RendererVkEb(%"class.std::__1::vector"* nonnull dereferenceable(24) %6, %"class.rx::RendererVk"* %0, i1 zeroext false) #9
  br i1 %225, label %226, label %233

226:                                              ; preds = %224, %220
  %227 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 28
  %228 = load i8, i8* %227, align 4, !range !2
  %229 = icmp eq i8 %228, 0
  br i1 %229, label %232, label %230

230:                                              ; preds = %226
  %231 = call fastcc zeroext i1 @_ZN2rx2vk12_GLOBAL__N_131FormatReinterpretationSupportedERKNSt3__16vectorIjNS2_9allocatorIjEEEEPKNS_10RendererVkEb(%"class.std::__1::vector"* nonnull dereferenceable(24) %7, %"class.rx::RendererVk"* %0, i1 zeroext false) #9
  br i1 %231, label %232, label %233

232:                                              ; preds = %230, %226
  br label %233

233:                                              ; preds = %232, %230, %224, %218, %212, %156
  %234 = phi i8 [ 1, %232 ], [ 0, %156 ], [ 0, %212 ], [ 0, %218 ], [ 0, %224 ], [ 0, %230 ]
  tail call void @_ZdlPv(i8* nonnull %200) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %197) #9
  tail call void @_ZdlPv(i8* nonnull %190) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %187) #9
  tail call void @_ZdlPv(i8* nonnull %180) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #9
  tail call void @_ZdlPv(i8* nonnull %171) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %168) #9
  tail call void @_ZdlPv(i8* nonnull %162) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %159) #9
  %235 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 128
  store i8 %234, i8* %235, align 2
  %236 = bitcast %"class.std::__1::vector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #9
  %237 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %238 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %239 = tail call i8* @_Znwm(i64 24) #10
  %240 = bitcast %"class.std::__1::vector"* %2 to i8**
  store i8* %239, i8** %240, align 8
  %241 = getelementptr inbounds i8, i8* %239, i64 24
  %242 = bitcast i32** %238 to i8**
  store i8* %241, i8** %242, align 8
  %243 = bitcast i32** %237 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %239, i8* align 4 bitcast ([6 x i32]* @.ref.tmp.5 to i8*), i64 24, i1 false) #9
  %244 = ptrtoint i8* %241 to i64
  store i64 %244, i64* %243, align 8
  %245 = call fastcc zeroext i1 @_ZN2rx2vk12_GLOBAL__N_131FormatReinterpretationSupportedERKNSt3__16vectorIjNS2_9allocatorIjEEEEPKNS_10RendererVkEb(%"class.std::__1::vector"* nonnull dereferenceable(24) %2, %"class.rx::RendererVk"* %0, i1 zeroext true) #9
  tail call void @_ZdlPv(i8* nonnull %239) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #9
  %246 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 127
  %247 = zext i1 %245 to i8
  store i8 %247, i8* %246, align 1
  %248 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 54, i32 4
  %249 = load i8, i8* %248, align 8, !range !2
  %250 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 129
  store i8 %249, i8* %250, align 1
  %251 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 170
  store i8 1, i8* %251, align 1
  %252 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 171
  store i8 1, i8* %252, align 2
  %253 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 28
  %254 = load i32, i32* %253, align 4
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %264, label %256

256:                                              ; preds = %233
  %257 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 34
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %264, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 33
  %262 = load i32, i32* %261, align 4
  %263 = icmp ne i32 %262, 0
  br label %264

264:                                              ; preds = %260, %256, %233
  %265 = phi i1 [ false, %256 ], [ false, %233 ], [ %263, %260 ]
  %266 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 172
  %267 = zext i1 %265 to i8
  store i8 %267, i8* %266, align 1
  %268 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 16, i32 4
  %269 = load i8, i8* %268, align 8, !range !2
  %270 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 162
  store i8 %269, i8* %270, align 1
  %271 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 23, i32 4
  %272 = load i8, i8* %271, align 8, !range !2
  %273 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 176
  store i8 %272, i8* %273, align 1
  %274 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 177
  store i8 %272, i8* %274, align 8
  %275 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 178
  store i8 1, i8* %275, align 1
  %276 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 180
  store i8 0, i8* %276, align 1
  %277 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 6
  %278 = load i32, i32* %277, align 8
  %279 = icmp eq i32 %278, 1
  %280 = zext i1 %279 to i8
  %281 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 182
  store i8 %280, i8* %281, align 1
  br i1 %279, label %282, label %285

282:                                              ; preds = %264
  %283 = tail call i32 @_ZN2rx5vk_gl17GetMaxSampleCountEj(i32 64) #9
  %284 = icmp eq i32 %283, 0
  br label %285

285:                                              ; preds = %282, %264
  %286 = phi i1 [ false, %264 ], [ %284, %282 ]
  %287 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 185
  %288 = zext i1 %286 to i8
  store i8 %288, i8* %287, align 8
  %289 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 103
  store i8 1, i8* %289, align 4
  %290 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 104
  store i8 1, i8* %290, align 1
  %291 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 74
  %292 = bitcast float* %291 to i32*
  %293 = load i32, i32* %292, align 8
  %294 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3
  %295 = bitcast %"struct.gl::Caps"* %294 to i32*
  store i32 %293, i32* %295, align 8
  %296 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 75
  %297 = bitcast float* %296 to i32*
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 1
  %300 = bitcast float* %299 to i32*
  store i32 %298, i32* %300, align 4
  %301 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 76
  %302 = load i32, i32* %301, align 8
  %303 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 2
  store i32 %302, i32* %303, align 8
  %304 = bitcast i32 %298 to float
  %305 = fcmp oge float %304, 5.000000e-01
  %306 = and i1 %286, %305
  %307 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 183
  %308 = zext i1 %306 to i8
  store i8 %308, i8* %307, align 2
  %309 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 4
  store i64 4294967294, i64* %309, align 8
  %310 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 2
  %311 = load i32, i32* %310, align 8
  %312 = icmp ult i32 %311, 1073741823
  %313 = select i1 %312, i32 %311, i32 1073741823
  %314 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 5
  store i32 %313, i32* %314, align 8
  %315 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 77
  %316 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = load i32, i32* %315, align 4
  %319 = icmp ult i32 %317, %318
  %320 = select i1 %319, i32 %317, i32 %318
  %321 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 6
  store i32 %320, i32* %321, align 4
  %322 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 4
  %323 = load i32, i32* %322, align 8
  %324 = icmp ult i32 %323, 1073741823
  %325 = select i1 %324, i32 %323, i32 1073741823
  %326 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 8
  store i32 %325, i32* %326, align 4
  %327 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 60
  %328 = bitcast float* %327 to i32*
  %329 = load i32, i32* %328, align 4
  %330 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 9
  %331 = bitcast float* %330 to i32*
  store i32 %329, i32* %331, align 8
  %332 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 3
  %333 = load i32, i32* %332, align 4
  %334 = icmp ult i32 %333, 1073741823
  %335 = select i1 %334, i32 %333, i32 1073741823
  %336 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 10
  store i32 %335, i32* %336, align 4
  %337 = bitcast [3 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %337) #9
  %338 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 0
  store i32 %317, i32* %338, align 4
  %339 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 1
  store i32 %318, i32* %339, align 4
  %340 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 2
  %341 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 78
  %342 = load i32, i32* %341, align 8
  store i32 %342, i32* %340, align 4
  %343 = icmp ult i32 %318, %317
  %344 = load i32, i32* %338, align 4
  %345 = select i1 %343, i32 %318, i32 %344
  %346 = icmp ult i32 %342, %345
  %347 = select i1 %346, i32 %342, i32 %345
  %348 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 11
  store i32 %347, i32* %348, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %337) #9
  %349 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %349)
  store float 1.000000e+00, float* %9, align 4
  %350 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 97, i64 0
  %351 = load float, float* %350, align 4
  %352 = fcmp ogt float %351, 1.000000e+00
  %353 = select i1 %352, float* %350, float* %9
  %354 = bitcast float* %353 to i32*
  %355 = load i32, i32* %354, align 4
  %356 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 12
  %357 = bitcast float* %356 to i32*
  store i32 %355, i32* %357, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %349)
  %358 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 97, i64 1
  %359 = bitcast float* %358 to i32*
  %360 = load i32, i32* %359, align 4
  %361 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 13
  %362 = bitcast float* %361 to i32*
  store i32 %360, i32* %362, align 8
  %363 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 14
  store float 1.000000e+00, float* %363, align 4
  %364 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 15
  store float 1.000000e+00, float* %364, align 8
  %365 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 84
  %366 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 48
  %367 = load i32, i32* %366, align 4
  %368 = load i32, i32* %365, align 4
  %369 = icmp ult i32 %367, %368
  %370 = select i1 %369, i32 %367, i32 %368
  %371 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 16
  store i32 %370, i32* %371, align 4
  %372 = icmp slt i32 %318, 65534
  %373 = select i1 %372, i32 %318, i32 65534
  %374 = and i32 %373, 65535
  %375 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 17
  store i32 %374, i32* %375, align 8
  %376 = icmp slt i32 %342, 65534
  %377 = select i1 %376, i32 %342, i32 65534
  %378 = and i32 %377, 65535
  %379 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 18
  store i32 %378, i32* %379, align 4
  %380 = icmp ult i32 %368, 1073741823
  %381 = select i1 %380, i32 %368, i32 1073741823
  %382 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 20
  store i32 %381, i32* %382, align 4
  %383 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 63, i64 0
  %384 = load i32, i32* %383, align 8
  %385 = icmp slt i32 %384, 65534
  %386 = select i1 %385, i32 %384, i32 65534
  %387 = and i32 %386, 65535
  %388 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 21
  store i32 %387, i32* %388, align 8
  %389 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 63, i64 1
  %390 = load i32, i32* %389, align 4
  %391 = icmp slt i32 %390, 65534
  %392 = select i1 %391, i32 %390, i32 65534
  %393 = and i32 %392, 65535
  %394 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 22
  store i32 %393, i32* %394, align 4
  %395 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 90
  %396 = load i32, i32* %395, align 8
  %397 = icmp ult i32 %396, 1073741823
  %398 = select i1 %397, i32 %396, i32 1073741823
  %399 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 23
  store i32 %398, i32* %399, align 8
  %400 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 85
  %401 = load i32, i32* %400, align 4
  %402 = and i32 %401, 30
  %403 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 24
  store i32 %402, i32* %403, align 4
  %404 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 87
  %405 = load i32, i32* %404, align 4
  %406 = and i32 %405, 30
  %407 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 25
  store i32 %406, i32* %407, align 8
  %408 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 86
  %409 = load i32, i32* %408, align 8
  %410 = and i32 %409, 30
  %411 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 26
  store i32 %410, i32* %411, align 4
  %412 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 29
  %413 = load i32, i32* %412, align 8
  %414 = icmp ult i32 %413, 1073741823
  %415 = select i1 %414, i32 %413, i32 1073741823
  %416 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 57
  store i32 %415, i32* %416, align 8
  %417 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 30
  %418 = load i32, i32* %417, align 4
  %419 = icmp ult i32 %418, 1073741823
  %420 = select i1 %419, i32 %418, i32 1073741823
  %421 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 29
  store i32 %420, i32* %421, align 4
  %422 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 31
  %423 = load i32, i32* %422, align 4
  %424 = icmp ult i32 %423, 32767
  %425 = select i1 %424, i32 %423, i32 32767
  %426 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 28
  store i32 %425, i32* %426, align 8
  %427 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 32
  %428 = load i32, i32* %427, align 4
  %429 = icmp ult i32 %428, 65535
  %430 = select i1 %429, i32 %428, i32 65535
  %431 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 30
  store i32 %430, i32* %431, align 8
  %432 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 31
  store i32 2147483647, i32* %432, align 4
  %433 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 32
  store i32 2147483647, i32* %433, align 8
  %434 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 37
  call void @_ZN2gl13TypePrecision12setIEEEFloatEv(%"struct.gl::TypePrecision"* %434) #9
  %435 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 38
  call void @_ZN2gl13TypePrecision12setIEEEFloatEv(%"struct.gl::TypePrecision"* %435) #9
  %436 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 39
  call void @_ZN2gl13TypePrecision12setIEEEFloatEv(%"struct.gl::TypePrecision"* %436) #9
  %437 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 43
  call void @_ZN2gl13TypePrecision12setIEEEFloatEv(%"struct.gl::TypePrecision"* %437) #9
  %438 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 44
  call void @_ZN2gl13TypePrecision12setIEEEFloatEv(%"struct.gl::TypePrecision"* %438) #9
  %439 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 45
  call void @_ZN2gl13TypePrecision12setIEEEFloatEv(%"struct.gl::TypePrecision"* %439) #9
  %440 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 40
  call void @_ZN2gl13TypePrecision20setTwosComplementIntEj(%"struct.gl::TypePrecision"* %440, i32 32) #9
  %441 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 41
  call void @_ZN2gl13TypePrecision20setTwosComplementIntEj(%"struct.gl::TypePrecision"* %441, i32 32) #9
  %442 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 42
  call void @_ZN2gl13TypePrecision20setTwosComplementIntEj(%"struct.gl::TypePrecision"* %442, i32 32) #9
  %443 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 46
  call void @_ZN2gl13TypePrecision20setTwosComplementIntEj(%"struct.gl::TypePrecision"* %443, i32 32) #9
  %444 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 47
  call void @_ZN2gl13TypePrecision20setTwosComplementIntEj(%"struct.gl::TypePrecision"* %444, i32 32) #9
  %445 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 48
  call void @_ZN2gl13TypePrecision20setTwosComplementIntEj(%"struct.gl::TypePrecision"* %445, i32 32) #9
  %446 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 52, i64 0
  %447 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 66, i32 0, i64 0
  %448 = bitcast i32* %446 to <2 x i32>*
  %449 = load <2 x i32>, <2 x i32>* %448, align 4
  %450 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 52, i64 2
  %451 = load i32, i32* %450, align 4
  %452 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 54, i64 0
  %453 = load i32, i32* %452, align 4
  %454 = extractelement <2 x i32> %449, i32 0
  %455 = insertelement <4 x i32> undef, i32 %454, i32 0
  %456 = extractelement <2 x i32> %449, i32 1
  %457 = insertelement <4 x i32> %455, i32 %456, i32 1
  %458 = insertelement <4 x i32> %457, i32 %451, i32 2
  %459 = insertelement <4 x i32> %458, i32 %453, i32 3
  %460 = icmp ult <4 x i32> %459, <i32 1073741823, i32 1073741823, i32 1073741823, i32 1073741823>
  %461 = select <4 x i1> %460, <4 x i32> %459, <4 x i32> <i32 1073741823, i32 1073741823, i32 1073741823, i32 1073741823>
  %462 = bitcast i32* %447 to <4 x i32>*
  store <4 x i32> %461, <4 x i32>* %462, align 4
  %463 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 54, i64 1
  %464 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 67, i32 0, i64 1
  %465 = bitcast i32* %463 to <2 x i32>*
  %466 = load <2 x i32>, <2 x i32>* %465, align 4
  %467 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 53
  %468 = load i32, i32* %467, align 8
  %469 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 51
  %470 = load i32, i32* %469, align 8
  %471 = extractelement <2 x i32> %466, i32 0
  %472 = insertelement <4 x i32> undef, i32 %471, i32 0
  %473 = extractelement <2 x i32> %466, i32 1
  %474 = insertelement <4 x i32> %472, i32 %473, i32 1
  %475 = insertelement <4 x i32> %474, i32 %468, i32 2
  %476 = insertelement <4 x i32> %475, i32 %470, i32 3
  %477 = icmp ult <4 x i32> %476, <i32 1073741823, i32 1073741823, i32 1073741823, i32 1073741823>
  %478 = select <4 x i1> %477, <4 x i32> %476, <4 x i32> <i32 1073741823, i32 1073741823, i32 1073741823, i32 1073741823>
  %479 = bitcast i32* %464 to <4 x i32>*
  store <4 x i32> %478, <4 x i32>* %479, align 4
  %480 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 6
  %481 = load i32, i32* %480, align 8
  %482 = icmp ult i32 %481, 65536
  %483 = select i1 %482, i32 %481, i32 65536
  %484 = lshr i32 %483, 4
  %485 = shl nuw nsw i32 %484, 2
  %486 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 58
  store i32 %484, i32* %486, align 4
  %487 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 60
  store i32 %484, i32* %487, align 4
  %488 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 52, i32 0, i32 0, i64 0
  %489 = insertelement <4 x i32> undef, i32 %485, i32 0
  %490 = shufflevector <4 x i32> %489, <4 x i32> undef, <4 x i32> zeroinitializer
  %491 = bitcast i32* %488 to <4 x i32>*
  store <4 x i32> %490, <4 x i32>* %491, align 4
  %492 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 52, i32 0, i32 0, i64 4
  store i32 %485, i32* %492, align 4
  %493 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 52, i32 0, i32 0, i64 5
  store i32 %485, i32* %493, align 4
  %494 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 78
  store i32 %484, i32* %494, align 8
  %495 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 15
  %496 = load i32, i32* %495, align 8
  %497 = add i32 %496, -2
  %498 = icmp ult i32 %497, 1073741823
  %499 = select i1 %498, i32 %497, i32 1073741823
  %500 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 22
  %501 = load i32, i32* %500, align 4
  %502 = add i32 %501, -4
  %503 = icmp ult i32 %502, 1073741823
  %504 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 49, i32 0, i32 0, i64 0
  %505 = insertelement <4 x i32> undef, i32 %499, i32 0
  %506 = shufflevector <4 x i32> %505, <4 x i32> undef, <4 x i32> zeroinitializer
  %507 = bitcast i32* %504 to <4 x i32>*
  store <4 x i32> %506, <4 x i32>* %507, align 4
  %508 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 49, i32 0, i32 0, i64 4
  store i32 %499, i32* %508, align 4
  %509 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 49, i32 0, i32 0, i64 5
  store i32 %499, i32* %509, align 4
  %510 = select i1 %503, i32 %502, i32 1073741823
  %511 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 73
  store i32 %510, i32* %511, align 4
  %512 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 70
  store i32 %510, i32* %512, align 4
  %513 = zext i32 %483 to i64
  %514 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 71
  store i64 %513, i64* %514, align 8
  %515 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 68
  %516 = load i64, i64* %515, align 8
  %517 = trunc i64 %516 to i32
  %518 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 72
  store i32 %517, i32* %518, align 8
  %519 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 14
  %520 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 17
  %521 = load i32, i32* %520, align 4
  %522 = load i32, i32* %519, align 4
  %523 = icmp ult i32 %521, %522
  %524 = select i1 %523, i32 %521, i32 %522
  %525 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 21
  %526 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 26
  %527 = load i32, i32* %526, align 4
  %528 = load i32, i32* %525, align 4
  %529 = icmp ult i32 %527, %528
  %530 = icmp ult i32 %524, 1073741823
  %531 = select i1 %530, i32 %524, i32 1073741823
  %532 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 50, i32 0, i32 0, i64 0
  store i32 %531, i32* %532, align 4
  %533 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 50, i32 0, i32 0, i64 1
  store i32 %531, i32* %533, align 4
  %534 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 50, i32 0, i32 0, i64 2
  store i32 %531, i32* %534, align 4
  %535 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 50, i32 0, i32 0, i64 3
  store i32 %531, i32* %535, align 4
  %536 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 50, i32 0, i32 0, i64 4
  store i32 %531, i32* %536, align 4
  %537 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 50, i32 0, i32 0, i64 5
  store i32 %531, i32* %537, align 4
  %538 = select i1 %529, i32 %527, i32 %528
  %539 = icmp ult i32 %538, 1073741823
  %540 = select i1 %539, i32 %538, i32 1073741823
  %541 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 76
  store i32 %540, i32* %541, align 8
  %542 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 16
  %543 = load i32, i32* %542, align 4
  %544 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 24
  %545 = load i32, i32* %544, align 4
  %546 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 25
  %547 = load i32, i32* %546, align 4
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %549, label %554

549:                                              ; preds = %285
  %550 = icmp ugt i32 %543, 11
  %551 = select i1 %550, i32 8, i32 0
  %552 = sub i32 %543, %551
  %553 = sub i32 %545, %551
  br label %568

554:                                              ; preds = %285
  %555 = add i32 %543, -4
  %556 = add i32 %545, -4
  %557 = icmp ult i32 %556, %543
  %558 = select i1 %557, i32 %556, i32 %543
  %559 = icmp ugt i32 %558, 11
  %560 = select i1 %559, i32 8, i32 0
  %561 = icmp ugt i32 %555, 11
  %562 = select i1 %561, i32 8, i32 0
  %563 = sub i32 %558, %560
  %564 = sub i32 %556, %560
  %565 = sub i32 %555, %562
  %566 = icmp ult i32 %565, 1073741823
  %567 = select i1 %566, i32 %565, i32 1073741823
  br label %568

568:                                              ; preds = %549, %554
  %569 = phi i32 [ %564, %554 ], [ %553, %549 ]
  %570 = phi i32 [ %563, %554 ], [ %552, %549 ]
  %571 = phi i32 [ %562, %554 ], [ %551, %549 ]
  %572 = phi i32 [ %560, %554 ], [ %551, %549 ]
  %573 = phi i32 [ %567, %554 ], [ 0, %549 ]
  %574 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 51, i32 0, i32 0, i64 0
  store i32 %573, i32* %574, align 4
  %575 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 26
  %576 = load i32, i32* %575, align 8
  %577 = icmp eq i32 %576, 0
  %578 = icmp ult i32 %570, 1073741823
  %579 = select i1 %578, i32 %570, i32 1073741823
  %580 = select i1 %577, i32 0, i32 %579
  %581 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 51, i32 0, i32 0, i64 4
  store i32 %580, i32* %581, align 4
  %582 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 51, i32 0, i32 0, i64 5
  store i32 %579, i32* %582, align 4
  %583 = icmp ult i32 %569, 1073741823
  %584 = select i1 %583, i32 %569, i32 1073741823
  %585 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 87
  store i32 %584, i32* %585, align 8
  %586 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 85
  store i32 %584, i32* %586, align 4
  %587 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 7
  %588 = load i32, i32* %587, align 4
  %589 = zext i32 %588 to i64
  %590 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 86
  store i64 %589, i64* %590, align 8
  %591 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 69
  %592 = load i64, i64* %591, align 8
  %593 = trunc i64 %592 to i32
  %594 = icmp ult i32 %593, 1073741823
  %595 = select i1 %594, i32 %593, i32 1073741823
  %596 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 88
  store i32 %595, i32* %596, align 4
  %597 = select i1 %548, i32 0, i32 %571
  %598 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 53, i32 0, i32 0, i64 0
  store i32 %597, i32* %598, align 4
  %599 = select i1 %577, i32 0, i32 %572
  %600 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 53, i32 0, i32 0, i64 4
  store i32 %599, i32* %600, align 4
  %601 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 53, i32 0, i32 0, i64 5
  store i32 %572, i32* %601, align 4
  %602 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 81
  store i32 %572, i32* %602, align 4
  %603 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 79
  store i32 %572, i32* %603, align 4
  %604 = icmp ult i32 %588, 1073741823
  %605 = select i1 %604, i32 %588, i32 1073741823
  %606 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 80
  store i32 %605, i32* %606, align 8
  %607 = lshr i32 %588, 2
  %608 = icmp ult i32 %607, 4096
  %609 = select i1 %608, i32 %607, i32 4096
  %610 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 54, i32 0, i32 0, i64 0
  store i32 %609, i32* %610, align 4
  %611 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 54, i32 0, i32 0, i64 1
  store i32 %609, i32* %611, align 4
  %612 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 54, i32 0, i32 0, i64 2
  store i32 %609, i32* %612, align 4
  %613 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 54, i32 0, i32 0, i64 3
  store i32 %609, i32* %613, align 4
  %614 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 54, i32 0, i32 0, i64 4
  store i32 %609, i32* %614, align 4
  %615 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 54, i32 0, i32 0, i64 5
  store i32 %609, i32* %615, align 4
  br i1 %548, label %616, label %617

616:                                              ; preds = %568
  store i32 0, i32* %610, align 4
  br label %617

617:                                              ; preds = %568, %616
  br i1 %577, label %618, label %619

618:                                              ; preds = %617
  store i32 0, i32* %614, align 4
  br label %619

619:                                              ; preds = %617, %618
  %620 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 82
  store i32 %609, i32* %620, align 8
  %621 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 18
  %622 = load i32, i32* %621, align 4
  %623 = icmp ult i32 %622, 1073741823
  %624 = select i1 %623, i32 %622, i32 1073741823
  %625 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 27
  %626 = load i32, i32* %625, align 8
  %627 = icmp ult i32 %626, 1073741823
  %628 = select i1 %627, i32 %626, i32 1073741823
  %629 = select i1 %548, i32 0, i32 %624
  %630 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 55, i32 0, i32 0, i64 0
  %631 = insertelement <4 x i32> undef, i32 %629, i32 0
  %632 = shufflevector <4 x i32> %631, <4 x i32> undef, <4 x i32> zeroinitializer
  %633 = bitcast i32* %630 to <4 x i32>*
  store <4 x i32> %632, <4 x i32>* %633, align 4
  %634 = select i1 %577, i32 0, i32 %624
  %635 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 55, i32 0, i32 0, i64 4
  store i32 %634, i32* %635, align 4
  %636 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 55, i32 0, i32 0, i64 5
  store i32 %624, i32* %636, align 4
  %637 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 84
  store i32 %628, i32* %637, align 8
  %638 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 83
  store i32 %628, i32* %638, align 4
  %639 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 70
  %640 = load i32, i32* %639, align 8
  %641 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 64
  %642 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 71
  %643 = load i32, i32* %642, align 4
  %644 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 65
  %645 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 72
  %646 = load i32, i32* %645, align 8
  %647 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 62
  store i32 %646, i32* %647, align 4
  %648 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 73
  %649 = load i32, i32* %648, align 4
  %650 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 63
  store i32 %649, i32* %650, align 8
  %651 = add nuw nsw i32 %499, 1
  %652 = zext i32 %651 to i64
  %653 = zext i32 %485 to i64
  %654 = mul nuw nsw i64 %652, %653
  %655 = icmp ult i64 %654, 2147483647
  %656 = select i1 %655, i64 %654, i64 2147483647
  %657 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 56, i32 0, i32 0, i64 0
  store i64 %656, i64* %657, align 8
  %658 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 56, i32 0, i32 0, i64 1
  store i64 %656, i64* %658, align 8
  %659 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 56, i32 0, i32 0, i64 2
  store i64 %656, i64* %659, align 8
  %660 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 56, i32 0, i32 0, i64 3
  store i64 %656, i64* %660, align 8
  %661 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 56, i32 0, i32 0, i64 4
  store i64 %656, i64* %661, align 8
  %662 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 56, i32 0, i32 0, i64 5
  store i64 %656, i64* %662, align 8
  %663 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 20
  %664 = load i32, i32* %663, align 4
  %665 = add i32 %664, -7
  %666 = icmp ult i32 %665, 1073741823
  %667 = select i1 %666, i32 %665, i32 1073741823
  %668 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 77
  store i32 %667, i32* %668, align 4
  %669 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 1, i32 4
  %670 = load i8, i8* %669, align 8, !range !2
  %671 = icmp eq i8 %670, 0
  %672 = select i1 %671, i32 0, i32 4
  %673 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 27, i32 4
  %674 = load i8, i8* %673, align 8, !range !2
  %675 = icmp eq i8 %674, 0
  %676 = add nuw nsw i32 %672, 4
  %677 = select i1 %675, i32 %672, i32 %676
  %678 = lshr exact i32 %677, 2
  %679 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 33
  %680 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 47
  %681 = load i32, i32* %680, align 4
  %682 = load i32, i32* %679, align 4
  %683 = icmp ult i32 %681, %682
  %684 = select i1 %683, i32 %681, i32 %682
  %685 = lshr i32 %684, 2
  %686 = xor i32 %678, -1
  %687 = add nsw i32 %685, %686
  %688 = icmp ult i32 %687, 1073741823
  %689 = select i1 %688, i32 %687, i32 1073741823
  %690 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 75
  store i32 %689, i32* %690, align 4
  %691 = icmp ult i32 %682, 1073741823
  %692 = select i1 %691, i32 %682, i32 1073741823
  %693 = sub nsw i32 %692, %677
  %694 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 59
  store i32 %693, i32* %694, align 8
  %695 = icmp ult i32 %681, 1073741823
  %696 = select i1 %695, i32 %681, i32 1073741823
  %697 = sub nsw i32 %696, %677
  %698 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 61
  store i32 %697, i32* %698, align 8
  %699 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 89
  store i32 128, i32* %699, align 8
  %700 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 90
  store i32 4, i32* %700, align 4
  %701 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 91
  store i32 4, i32* %701, align 8
  store i32 %640, i32* %641, align 4
  %702 = icmp ult i32 %643, 1073741823
  %703 = select i1 %702, i32 %643, i32 1073741823
  store i32 %703, i32* %644, align 8
  %704 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 80
  %705 = load i32, i32* %704, align 8
  %706 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 81
  %707 = load i32, i32* %706, align 4
  %708 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 82
  %709 = load i32, i32* %708, align 8
  %710 = and i32 %705, 30
  %711 = and i32 %710, %707
  %712 = and i32 %711, %709
  %713 = call i32 @_ZN2rx5vk_gl17GetMaxSampleCountEj(i32 %712) #9
  %714 = icmp ult i32 %713, 1073741823
  %715 = select i1 %714, i32 %713, i32 1073741823
  %716 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 92
  store i32 %715, i32* %716, align 4
  %717 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 19
  store i32 %715, i32* %717, align 8
  %718 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 55
  %719 = load i32, i32* %718, align 8
  %720 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 108
  store i32 %719, i32* %720, align 4
  %721 = load i32, i32* %60, align 8
  switch i32 %721, label %722 [
    i32 5045, label %727
    i32 20803, label %727
  ]

722:                                              ; preds = %619
  %723 = load i32, i32* %371, align 4
  %724 = icmp sgt i32 %723, 7
  %725 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 79
  %726 = zext i1 %724 to i8
  store i8 %726, i8* %725, align 1
  br label %727

727:                                              ; preds = %619, %619, %722
  %728 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 5
  store i8 1, i8* %728, align 1
  %729 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 35
  %730 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 35, i32 0, i32 1
  %731 = load i32*, i32** %730, align 8
  %732 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 35, i32 0, i32 2, i32 0, i32 0
  %733 = load i32*, i32** %732, align 8
  %734 = icmp ult i32* %731, %733
  %735 = ptrtoint i32* %733 to i64
  br i1 %734, label %736, label %740

736:                                              ; preds = %727
  store i32 37798, i32* %731, align 4
  %737 = getelementptr inbounds i32, i32* %731, i64 1
  %738 = ptrtoint i32* %737 to i64
  %739 = bitcast i32** %730 to i64*
  store i64 %738, i64* %739, align 8
  br label %796

740:                                              ; preds = %727
  %741 = ptrtoint i32* %731 to i64
  %742 = bitcast i32** %730 to i64*
  %743 = bitcast %"class.std::__1::vector"* %729 to i64*
  %744 = load i64, i64* %743, align 8
  %745 = sub i64 %741, %744
  %746 = ashr exact i64 %745, 2
  %747 = add nsw i64 %746, 1
  %748 = icmp ugt i64 %747, 4611686018427387903
  br i1 %748, label %749, label %751

749:                                              ; preds = %740
  %750 = bitcast %"class.std::__1::vector"* %729 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %750) #11
  unreachable

751:                                              ; preds = %740
  %752 = bitcast i32** %732 to i64*
  %753 = sub i64 %735, %744
  %754 = ashr exact i64 %753, 2
  %755 = icmp ult i64 %754, 2305843009213693951
  br i1 %755, label %756, label %764

756:                                              ; preds = %751
  %757 = ashr exact i64 %753, 1
  %758 = icmp ult i64 %757, %747
  %759 = select i1 %758, i64 %747, i64 %757
  %760 = icmp eq i64 %759, 0
  br i1 %760, label %769, label %761

761:                                              ; preds = %756
  %762 = icmp ugt i64 %759, 4611686018427387903
  br i1 %762, label %763, label %764

763:                                              ; preds = %761
  call void @abort() #11
  unreachable

764:                                              ; preds = %761, %751
  %765 = phi i64 [ %759, %761 ], [ 4611686018427387903, %751 ]
  %766 = shl i64 %765, 2
  %767 = call i8* @_Znwm(i64 %766) #10
  %768 = bitcast i8* %767 to i32*
  br label %769

769:                                              ; preds = %764, %756
  %770 = phi i64 [ %765, %764 ], [ 0, %756 ]
  %771 = phi i32* [ %768, %764 ], [ null, %756 ]
  %772 = getelementptr inbounds i32, i32* %771, i64 %746
  %773 = getelementptr inbounds i32, i32* %771, i64 %770
  %774 = ptrtoint i32* %773 to i64
  store i32 37798, i32* %772, align 4
  %775 = getelementptr inbounds i32, i32* %772, i64 1
  %776 = ptrtoint i32* %775 to i64
  %777 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %729, i64 0, i32 0, i32 0
  %778 = load i32*, i32** %777, align 8
  %779 = load i64, i64* %742, align 8
  %780 = ptrtoint i32* %778 to i64
  %781 = sub i64 %779, %780
  %782 = ashr exact i64 %781, 2
  %783 = sub nsw i64 0, %782
  %784 = getelementptr inbounds i32, i32* %772, i64 %783
  %785 = ptrtoint i32* %784 to i64
  %786 = icmp sgt i64 %781, 0
  br i1 %786, label %787, label %791

787:                                              ; preds = %769
  %788 = bitcast i32* %784 to i8*
  %789 = bitcast i32* %778 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %788, i8* align 4 %789, i64 %781, i1 false) #9
  %790 = load i32*, i32** %777, align 8
  br label %791

791:                                              ; preds = %787, %769
  %792 = phi i32* [ %778, %769 ], [ %790, %787 ]
  store i64 %785, i64* %743, align 8
  store i64 %776, i64* %742, align 8
  store i64 %774, i64* %752, align 8
  %793 = icmp eq i32* %792, null
  br i1 %793, label %796, label %794

794:                                              ; preds = %791
  %795 = bitcast i32* %792 to i8*
  call void @_ZdlPv(i8* %795) #10
  br label %796

796:                                              ; preds = %736, %791, %794
  %797 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 9
  store i8 1, i8* %797, align 1
  %798 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 62
  store i8 1, i8* %798, align 1
  %799 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 189
  store i8 1, i8* %799, align 4
  %800 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 175
  store i8 1, i8* %800, align 2
  %801 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 33321) #9
  %802 = sext i32 %801 to i64
  %803 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %802, i32 3
  %804 = load i32, i32* %803, align 4
  %805 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %804, i32 24) #9
  br i1 %805, label %806, label %908

806:                                              ; preds = %796
  %807 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 33329) #9
  %808 = sext i32 %807 to i64
  %809 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %808, i32 3
  %810 = load i32, i32* %809, align 4
  %811 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %810, i32 24) #9
  br i1 %811, label %824, label %908

812:                                              ; preds = %884
  %813 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 34837) #9
  %814 = sext i32 %813 to i64
  %815 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %814, i32 3
  %816 = load i32, i32* %815, align 4
  %817 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %816, i32 24) #9
  br i1 %817, label %818, label %908

818:                                              ; preds = %812
  %819 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 36227) #9
  %820 = sext i32 %819 to i64
  %821 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %820, i32 3
  %822 = load i32, i32* %821, align 4
  %823 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %822, i32 24) #9
  br i1 %823, label %888, label %908

824:                                              ; preds = %806
  %825 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 33330) #9
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %826, i32 3
  %828 = load i32, i32* %827, align 4
  %829 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %828, i32 24) #9
  br i1 %829, label %830, label %908

830:                                              ; preds = %824
  %831 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 33323) #9
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %832, i32 3
  %834 = load i32, i32* %833, align 4
  %835 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %834, i32 24) #9
  br i1 %835, label %836, label %908

836:                                              ; preds = %830
  %837 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 33335) #9
  %838 = sext i32 %837 to i64
  %839 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %838, i32 3
  %840 = load i32, i32* %839, align 4
  %841 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %840, i32 24) #9
  br i1 %841, label %842, label %908

842:                                              ; preds = %836
  %843 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 33336) #9
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %844, i32 3
  %846 = load i32, i32* %845, align 4
  %847 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %846, i32 24) #9
  br i1 %847, label %848, label %908

848:                                              ; preds = %842
  %849 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 33325) #9
  %850 = sext i32 %849 to i64
  %851 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %850, i32 3
  %852 = load i32, i32* %851, align 4
  %853 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %852, i32 24) #9
  br i1 %853, label %854, label %908

854:                                              ; preds = %848
  %855 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 33331) #9
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %856, i32 3
  %858 = load i32, i32* %857, align 4
  %859 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %858, i32 24) #9
  br i1 %859, label %860, label %908

860:                                              ; preds = %854
  %861 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 33332) #9
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %862, i32 3
  %864 = load i32, i32* %863, align 4
  %865 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %864, i32 24) #9
  br i1 %865, label %866, label %908

866:                                              ; preds = %860
  %867 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 33327) #9
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %868, i32 3
  %870 = load i32, i32* %869, align 4
  %871 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %870, i32 24) #9
  br i1 %871, label %872, label %908

872:                                              ; preds = %866
  %873 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 33337) #9
  %874 = sext i32 %873 to i64
  %875 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %874, i32 3
  %876 = load i32, i32* %875, align 4
  %877 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %876, i32 24) #9
  br i1 %877, label %878, label %908

878:                                              ; preds = %872
  %879 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 33338) #9
  %880 = sext i32 %879 to i64
  %881 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %880, i32 3
  %882 = load i32, i32* %881, align 4
  %883 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %882, i32 24) #9
  br i1 %883, label %884, label %908

884:                                              ; preds = %878
  %885 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 69, i32 4
  %886 = load i8, i8* %885, align 8, !range !2
  %887 = icmp eq i8 %886, 0
  br i1 %887, label %812, label %894

888:                                              ; preds = %818
  %889 = call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 36209) #9
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 49, i32 1, i32 0, i64 %890, i32 3
  %892 = load i32, i32* %891, align 4
  %893 = call zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"* %0, i32 %892, i32 24) #9
  br i1 %893, label %894, label %908

894:                                              ; preds = %884, %888
  %895 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 190
  store i8 1, i8* %895, align 1
  %896 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 191
  store i8 1, i8* %896, align 2
  %897 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 5
  %898 = load i32, i32* %897, align 4
  %899 = icmp ult i32 %898, 1073741823
  %900 = select i1 %899, i32 %898, i32 1073741823
  %901 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 122
  store i32 %900, i32* %901, align 4
  %902 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 67
  %903 = load i64, i64* %902, align 8
  %904 = icmp ult i64 %903, 1073741823
  %905 = select i1 %904, i64 %903, i64 1073741823
  %906 = trunc i64 %905 to i32
  %907 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 123
  store i32 %906, i32* %907, align 8
  br label %908

908:                                              ; preds = %796, %806, %824, %830, %836, %842, %848, %854, %860, %866, %872, %878, %818, %812, %894, %888
  %909 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 184
  store i8 1, i8* %909, align 1
  %910 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 4
  %911 = load i32, i32* %910, align 8
  %912 = icmp eq i32 %911, 0
  br i1 %912, label %965, label %913

913:                                              ; preds = %908
  %914 = load i8, i8* %669, align 8, !range !2
  %915 = icmp eq i8 %914, 0
  br i1 %915, label %916, label %965

916:                                              ; preds = %913
  %917 = load i8, i8* %673, align 8, !range !2
  %918 = icmp eq i8 %917, 0
  br i1 %918, label %922, label %919

919:                                              ; preds = %916
  %920 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 69, i32 4
  %921 = load i8, i8* %920, align 8, !range !2
  br label %922

922:                                              ; preds = %916, %919
  %923 = phi i8 [ 0, %916 ], [ %921, %919 ]
  %924 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 142
  store i8 %923, i8* %924, align 8
  %925 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 79
  %926 = load i32, i32* %925, align 4
  %927 = icmp ult i32 %926, 1073741823
  %928 = select i1 %927, i32 %926, i32 1073741823
  %929 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 93
  store i32 %928, i32* %929, align 8
  %930 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 3, i32 4
  %931 = load i8, i8* %930, align 8, !range !2
  %932 = icmp eq i8 %931, 0
  %933 = select i1 %932, i32 36429, i32 36430
  %934 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 94
  store i32 %933, i32* %934, align 4
  %935 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 43
  %936 = load i32, i32* %935, align 8
  %937 = icmp ult i32 %936, 1073741823
  %938 = select i1 %937, i32 %936, i32 1073741823
  %939 = sub nsw i32 %938, %677
  %940 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 95
  store i32 %939, i32* %940, align 8
  %941 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 44
  %942 = load i32, i32* %941, align 4
  %943 = icmp ult i32 %942, 1073741823
  %944 = select i1 %943, i32 %942, i32 1073741823
  %945 = sub nsw i32 %944, %677
  %946 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 96
  store i32 %945, i32* %946, align 4
  %947 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 45
  %948 = load i32, i32* %947, align 8
  %949 = icmp ult i32 %948, 1073741823
  %950 = select i1 %949, i32 %948, i32 1073741823
  %951 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 97
  store i32 %950, i32* %951, align 8
  %952 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 46
  %953 = load i32, i32* %952, align 4
  %954 = icmp ult i32 %953, 1073741823
  %955 = select i1 %954, i32 %953, i32 1073741823
  %956 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 98
  store i32 %955, i32* %956, align 4
  %957 = load i32, i32* %668, align 4
  %958 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 51, i32 0, i32 0, i64 3
  store i32 %957, i32* %958, align 4
  %959 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 53, i32 0, i32 0, i64 3
  store i32 %572, i32* %959, align 4
  %960 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 42
  %961 = load i32, i32* %960, align 4
  %962 = icmp ult i32 %961, 1073741823
  %963 = select i1 %962, i32 %961, i32 1073741823
  %964 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 99
  store i32 %963, i32* %964, align 8
  br label %965

965:                                              ; preds = %913, %908, %922
  %966 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 5
  %967 = load i32, i32* %966, align 4
  %968 = icmp eq i32 %967, 0
  br i1 %968, label %1018, label %969

969:                                              ; preds = %965
  %970 = load i8, i8* %669, align 8, !range !2
  %971 = icmp eq i8 %970, 0
  br i1 %971, label %972, label %1018

972:                                              ; preds = %969
  %973 = load i8, i8* %673, align 8, !range !2
  %974 = icmp eq i8 %973, 0
  br i1 %974, label %978, label %975

975:                                              ; preds = %972
  %976 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 7, i32 69, i32 4
  %977 = load i8, i8* %976, align 8, !range !2
  br label %978

978:                                              ; preds = %972, %975
  %979 = phi i8 [ 0, %972 ], [ %977, %975 ]
  %980 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 188
  store i8 %979, i8* %980, align 1
  %981 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 35
  %982 = load i32, i32* %981, align 8
  %983 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 104
  %984 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 34
  %985 = load i32, i32* %984, align 4
  %986 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 36
  %987 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 100
  %988 = bitcast i32* %986 to <4 x i32>*
  %989 = load <4 x i32>, <4 x i32>* %988, align 4
  %990 = shufflevector <4 x i32> %989, <4 x i32> undef, <4 x i32> <i32 0, i32 1, i32 3, i32 2>
  %991 = icmp ult <4 x i32> %990, <i32 1073741823, i32 1073741823, i32 1073741823, i32 1073741823>
  %992 = select <4 x i1> %991, <4 x i32> %990, <4 x i32> <i32 1073741823, i32 1073741823, i32 1073741823, i32 1073741823>
  %993 = bitcast i32* %987 to <4 x i32>*
  store <4 x i32> %992, <4 x i32>* %993, align 4
  %994 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 40
  %995 = load i32, i32* %994, align 4
  %996 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 41
  %997 = load i32, i32* %996, align 8
  %998 = insertelement <4 x i32> undef, i32 %982, i32 0
  %999 = insertelement <4 x i32> %998, i32 %985, i32 1
  %1000 = insertelement <4 x i32> %999, i32 %995, i32 2
  %1001 = insertelement <4 x i32> %1000, i32 %997, i32 3
  %1002 = icmp ult <4 x i32> %1001, <i32 1073741823, i32 1073741823, i32 1073741823, i32 1073741823>
  %1003 = select <4 x i1> %1002, <4 x i32> %1001, <4 x i32> <i32 1073741823, i32 1073741823, i32 1073741823, i32 1073741823>
  %1004 = bitcast i32* %983 to <4 x i32>*
  store <4 x i32> %1003, <4 x i32>* %1004, align 4
  %1005 = load i32, i32* %511, align 4
  %1006 = add i32 %1005, 2
  %1007 = icmp ult i32 %1006, 1073741823
  %1008 = select i1 %1007, i32 %1006, i32 1073741823
  store i32 %1008, i32* %511, align 4
  %1009 = load i32, i32* %512, align 4
  %1010 = add i32 %1009, 2
  %1011 = icmp ult i32 %1010, 1073741823
  %1012 = select i1 %1011, i32 %1010, i32 1073741823
  store i32 %1012, i32* %512, align 4
  %1013 = load i32, i32* %668, align 4
  %1014 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 51, i32 0, i32 0, i64 1
  store i32 %1013, i32* %1014, align 4
  %1015 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 53, i32 0, i32 0, i64 1
  store i32 %572, i32* %1015, align 4
  %1016 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 51, i32 0, i32 0, i64 2
  store i32 %1013, i32* %1016, align 4
  %1017 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 53, i32 0, i32 0, i64 2
  store i32 %572, i32* %1017, align 4
  br label %1018

1018:                                             ; preds = %969, %965, %978
  %1019 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 37
  %1020 = load i32, i32* %1019, align 4
  %1021 = icmp eq i32 %1020, 0
  br i1 %1021, label %1046, label %1022

1022:                                             ; preds = %1018
  %1023 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 93
  %1024 = load i32, i32* %1023, align 4
  %1025 = icmp ugt i32 %1024, 7
  br i1 %1025, label %1026, label %1046

1026:                                             ; preds = %1022
  %1027 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 174
  store i8 1, i8* %1027, align 1
  %1028 = icmp ult i32 %1024, 32
  %1029 = select i1 %1028, i32 %1024, i32 32
  %1030 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 109
  store i32 %1029, i32* %1030, align 8
  %1031 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 38
  %1032 = load i32, i32* %1031, align 8
  %1033 = icmp eq i32 %1032, 0
  br i1 %1033, label %1046, label %1034

1034:                                             ; preds = %1026
  %1035 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 94
  %1036 = load i32, i32* %1035, align 8
  %1037 = icmp ugt i32 %1036, 7
  br i1 %1037, label %1038, label %1046

1038:                                             ; preds = %1034
  %1039 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 95
  %1040 = load i32, i32* %1039, align 4
  %1041 = icmp ugt i32 %1040, 7
  br i1 %1041, label %1042, label %1046

1042:                                             ; preds = %1038
  %1043 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 193
  store i8 1, i8* %1043, align 8
  %1044 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 110
  store i32 %1036, i32* %1044, align 4
  %1045 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 3, i32 111
  store i32 %1040, i32* %1045, align 8
  br label %1046

1046:                                             ; preds = %1026, %1018, %1034, %1038, %1042, %1022
  %1047 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 17, i32 7
  %1048 = load i32, i32* %1047, align 4
  %1049 = icmp eq i32 %1048, 1
  %1050 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 155
  %1051 = zext i1 %1049 to i8
  store i8 %1051, i8* %1050, align 1
  %1052 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 16, i32 7, i32 49
  %1053 = load i32, i32* %1052, align 8
  %1054 = icmp ult i32 %1053, 1073741823
  %1055 = select i1 %1054, i32 %1053, i32 1073741823
  %1056 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 156
  store i32 %1055, i32* %1056, align 8
  %1057 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %0, i64 0, i32 5, i32 196
  store i8 1, i8* %1057, align 1
  br label %1058

1058:                                             ; preds = %1, %1046
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2gl10Extensions26setTextureExtensionSupportERKNS_14TextureCapsMapE(%"struct.gl::Extensions"*, %"class.gl::TextureCapsMap"* dereferenceable(7264)) local_unnamed_addr #2

declare zeroext i1 @_ZN2gl36DetermineCompressedTextureETCSupportERKNS_14TextureCapsMapE(%"class.gl::TextureCapsMap"* dereferenceable(7264)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2rx2vk23CanSupportGPUShader5EXTERK24VkPhysicalDeviceFeatures(%struct.VkPhysicalDeviceFeatures* nocapture readonly dereferenceable(220)) local_unnamed_addr #3 {
  %2 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 28
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 34
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceFeatures* %0, i64 0, i32 33
  %11 = load i32, i32* %10, align 4
  %12 = icmp ne i32 %11, 0
  br label %13

13:                                               ; preds = %5, %1, %9
  %14 = phi i1 [ false, %5 ], [ false, %1 ], [ %12, %9 ]
  ret i1 %14
}

declare i32 @_ZN2rx5vk_gl17GetMaxSampleCountEj(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2gl13TypePrecision12setIEEEFloatEv(%"struct.gl::TypePrecision"*) local_unnamed_addr #2

declare void @_ZN2gl13TypePrecision20setTwosComplementIntEj(%"struct.gl::TypePrecision"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx6egl_vk15GenerateConfigsEPKjmS2_mPNS_9DisplayVkE(%"class.egl::ConfigSet"* noalias sret, i32* nocapture readonly, i64, i32* nocapture readonly, i64, %"class.rx::DisplayVk"*) local_unnamed_addr #0 {
  %7 = alloca %"struct.std::__1::__less", align 1
  %8 = alloca %"class.std::__1::set", align 8
  %9 = alloca %"class.std::__1::set", align 8
  %10 = alloca %"class.std::__1::set", align 8
  %11 = alloca %"struct.egl::Config", align 4
  %12 = bitcast %"class.std::__1::set"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %8, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = bitcast %"class.std::__1::__tree_node_base"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"** %13, align 8
  %18 = bitcast %"class.std::__1::set"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #9
  %19 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node_base"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %19, align 8
  %24 = bitcast %"class.std::__1::set"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_node_base"** %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %27, %"class.std::__1::__tree_end_node"** %25, align 8
  %29 = getelementptr inbounds %"class.rx::DisplayVk", %"class.rx::DisplayVk"* %5, i64 0, i32 1, i32 1
  %30 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %29, align 8
  %31 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %30, i64 0, i32 16, i32 7, i32 81
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %30, i64 0, i32 16, i32 7, i32 82
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %32, 30
  %36 = and i32 %35, %34
  %37 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %30, i64 0, i32 16, i32 7, i32 80
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 30
  call void @_ZN2rx5vk_gl15AddSampleCountsEjPNSt3__13setIjNS1_4lessIjEENS1_9allocatorIjEEEE(i32 %39, %"class.std::__1::set"* nonnull %8) #9
  call void @_ZN2rx5vk_gl15AddSampleCountsEjPNSt3__13setIjNS1_4lessIjEENS1_9allocatorIjEEEE(i32 %36, %"class.std::__1::set"* nonnull %9) #9
  %40 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %68, label %43

43:                                               ; preds = %6
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %58, label %47

47:                                               ; preds = %43, %62
  %48 = phi %"class.std::__1::__tree_node"* [ %63, %62 ], [ %41, %43 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %62

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0
  br label %70

55:                                               ; preds = %62
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::__tree_node_base"* %50 to %"class.std::__1::__tree_node"*
  br label %58

58:                                               ; preds = %55, %43
  %59 = phi %"class.std::__1::__tree_node"* [ %41, %43 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::__tree_node_base"** [ %14, %43 ], [ %56, %55 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %59, i64 0, i32 0, i32 0
  br label %70

62:                                               ; preds = %47
  %63 = bitcast %"class.std::__1::__tree_node_base"* %50 to %"class.std::__1::__tree_node"*
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %50, i64 0, i32 4, i64 3
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %55, label %47

68:                                               ; preds = %6
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  br label %70

70:                                               ; preds = %68, %58, %52
  %71 = phi %"class.std::__1::__tree_end_node"* [ %16, %68 ], [ %54, %52 ], [ %61, %58 ]
  %72 = phi %"class.std::__1::__tree_node_base"** [ %69, %68 ], [ %53, %52 ], [ %60, %58 ]
  %73 = bitcast %"class.std::__1::__tree_node_base"** %72 to %"class.std::__1::__tree_node"**
  %74 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node"* %74, null
  br i1 %75, label %76, label %97

76:                                               ; preds = %70
  %77 = call i8* @_Znwm(i64 32) #10, !noalias !3
  %78 = getelementptr inbounds i8, i8* %77, i64 28
  %79 = bitcast i8* %78 to i32*
  store i32 0, i32* %79, align 4, !noalias !3
  %80 = bitcast i8* %77 to %"class.std::__1::__tree_node_base"*
  %81 = getelementptr inbounds i8, i8* %77, i64 16
  %82 = bitcast i8* %81 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %71, %"class.std::__1::__tree_end_node"** %82, align 8
  %83 = bitcast %"class.std::__1::__tree_node_base"** %72 to i8**
  store i8* %77, i8** %83, align 8
  %84 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %76
  %89 = ptrtoint %"class.std::__1::__tree_node_base"* %86 to i64
  %90 = bitcast %"class.std::__1::set"* %8 to i64*
  store i64 %89, i64* %90, align 8
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %72, align 8
  br label %92

92:                                               ; preds = %88, %76
  %93 = phi %"class.std::__1::__tree_node_base"* [ %80, %76 ], [ %91, %88 ]
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %14, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %94, %"class.std::__1::__tree_node_base"* %93) #9
  %95 = load i64, i64* %15, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %15, align 8
  br label %97

97:                                               ; preds = %70, %92
  %98 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node"**
  %99 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node"* %99, null
  br i1 %100, label %126, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %99, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %116, label %105

105:                                              ; preds = %101, %120
  %106 = phi %"class.std::__1::__tree_node"* [ %121, %120 ], [ %99, %101 ]
  %107 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %106, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, null
  br i1 %109, label %110, label %120

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %106, i64 0, i32 0, i32 0, i32 0
  %112 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %106, i64 0, i32 0, i32 0
  br label %128

113:                                              ; preds = %120
  %114 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %106, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::__tree_node_base"* %108 to %"class.std::__1::__tree_node"*
  br label %116

116:                                              ; preds = %113, %101
  %117 = phi %"class.std::__1::__tree_node"* [ %99, %101 ], [ %115, %113 ]
  %118 = phi %"class.std::__1::__tree_node_base"** [ %20, %101 ], [ %114, %113 ]
  %119 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %117, i64 0, i32 0, i32 0
  br label %128

120:                                              ; preds = %105
  %121 = bitcast %"class.std::__1::__tree_node_base"* %108 to %"class.std::__1::__tree_node"*
  %122 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %108, i64 0, i32 4, i64 3
  %123 = bitcast i8* %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %113, label %105

126:                                              ; preds = %97
  %127 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 0, i32 0
  br label %128

128:                                              ; preds = %126, %116, %110
  %129 = phi %"class.std::__1::__tree_end_node"* [ %22, %126 ], [ %112, %110 ], [ %119, %116 ]
  %130 = phi %"class.std::__1::__tree_node_base"** [ %127, %126 ], [ %111, %110 ], [ %118, %116 ]
  %131 = bitcast %"class.std::__1::__tree_node_base"** %130 to %"class.std::__1::__tree_node"**
  %132 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %131, align 8
  %133 = icmp eq %"class.std::__1::__tree_node"* %132, null
  br i1 %133, label %134, label %155

134:                                              ; preds = %128
  %135 = call i8* @_Znwm(i64 32) #10, !noalias !6
  %136 = getelementptr inbounds i8, i8* %135, i64 28
  %137 = bitcast i8* %136 to i32*
  store i32 0, i32* %137, align 4, !noalias !6
  %138 = bitcast i8* %135 to %"class.std::__1::__tree_node_base"*
  %139 = getelementptr inbounds i8, i8* %135, i64 16
  %140 = bitcast i8* %139 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %135, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %129, %"class.std::__1::__tree_end_node"** %140, align 8
  %141 = bitcast %"class.std::__1::__tree_node_base"** %130 to i8**
  store i8* %135, i8** %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, null
  br i1 %145, label %150, label %146

146:                                              ; preds = %134
  %147 = ptrtoint %"class.std::__1::__tree_node_base"* %144 to i64
  %148 = bitcast %"class.std::__1::set"* %9 to i64*
  store i64 %147, i64* %148, align 8
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  br label %150

150:                                              ; preds = %146, %134
  %151 = phi %"class.std::__1::__tree_node_base"* [ %138, %134 ], [ %149, %146 ]
  %152 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %152, %"class.std::__1::__tree_node_base"* %151) #9
  %153 = load i64, i64* %21, align 8
  %154 = add i64 %153, 1
  store i64 %154, i64* %21, align 8
  br label %155

155:                                              ; preds = %128, %150
  %156 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %13, align 8
  %157 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %19, align 8
  %158 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %159 = getelementptr inbounds %"struct.std::__1::__less", %"struct.std::__1::__less"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %159) #9
  %160 = call { %"class.std::__1::set"*, %"class.std::__1::__tree_end_node"* } @_ZNSt3__118__set_intersectionIRNS_6__lessIjjEENS_21__tree_const_iteratorIjPNS_11__tree_nodeIjPvEElEES9_NS_15insert_iteratorINS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEEEET2_T0_SJ_T1_SK_SI_T_(%"class.std::__1::__tree_end_node"* %156, %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"* %157, %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::set"* nonnull %10, %"class.std::__1::__tree_end_node"* %158, %"struct.std::__1::__less"* nonnull dereferenceable(1) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %159) #9
  %161 = bitcast %"class.egl::ConfigSet"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 -86, i64 24, i1 false)
  call void @_ZN3egl9ConfigSetC1Ev(%"class.egl::ConfigSet"* %0) #9
  %162 = icmp eq i64 %2, 0
  br i1 %162, label %320, label %163

163:                                              ; preds = %155
  %164 = icmp eq i64 %4, 0
  %165 = bitcast %"struct.egl::Config"* %11 to i8*
  %166 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 0
  %167 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 1
  %168 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 2
  %169 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 3
  %170 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 4
  %171 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 5
  %172 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 7
  %173 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 8
  %174 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 9
  %175 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 10
  %176 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 12
  %177 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 13
  %178 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 15
  %179 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 16
  %180 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 30
  %181 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 17
  %182 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 18
  %183 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 19
  %184 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 20
  %185 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 21
  %186 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 22
  %187 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 26
  %188 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 27
  %189 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 28
  %190 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 29
  %191 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 31
  %192 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 36
  %193 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 32
  %194 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 33
  %195 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 34
  %196 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 35
  %197 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %11, i64 0, i32 37
  %198 = bitcast %"class.rx::DisplayVk"* %5 to void (%"class.rx::DisplayVk"*, %"struct.egl::Config"*)***
  %199 = bitcast i32* %186 to <4 x i32>*
  br label %200

200:                                              ; preds = %214, %163
  %201 = phi i64 [ 0, %163 ], [ %215, %214 ]
  %202 = getelementptr inbounds i32, i32* %1, i64 %201
  %203 = load i32, i32* %202, align 4
  %204 = call dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl26GetSizedInternalFormatInfoEj(i32 %203) #9
  br i1 %164, label %214, label %205

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %204, i64 0, i32 0
  %207 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %204, i64 0, i32 11
  %208 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %204, i64 0, i32 3
  %209 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %204, i64 0, i32 4
  %210 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %204, i64 0, i32 5
  %211 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %204, i64 0, i32 7
  %212 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %204, i64 0, i32 17
  %213 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %204, i64 0, i32 19
  br label %217

214:                                              ; preds = %238, %200
  %215 = add nuw i64 %201, 1
  %216 = icmp eq i64 %215, %2
  br i1 %216, label %320, label %200

217:                                              ; preds = %238, %205
  %218 = phi i64 [ 0, %205 ], [ %239, %238 ]
  %219 = getelementptr inbounds i32, i32* %3, i64 %218
  %220 = load i32, i32* %219, align 4
  %221 = call dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl26GetSizedInternalFormatInfoEj(i32 %220) #9
  %222 = load i32, i32* %219, align 4
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %228, label %224

224:                                              ; preds = %217
  %225 = load i32, i32* %202, align 4
  %226 = icmp eq i32 %225, 0
  %227 = select i1 %226, %"class.std::__1::set"* %9, %"class.std::__1::set"* %10
  br label %228

228:                                              ; preds = %224, %217
  %229 = phi %"class.std::__1::set"* [ %8, %217 ], [ %227, %224 ]
  %230 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %229, i64 0, i32 0, i32 0
  %231 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %232 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %229, i64 0, i32 0, i32 1, i32 0, i32 0
  %233 = icmp eq %"class.std::__1::__tree_end_node"* %231, %232
  br i1 %233, label %238, label %234

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %221, i64 0, i32 0
  %236 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %221, i64 0, i32 9
  %237 = getelementptr inbounds %"struct.gl::InternalFormat", %"struct.gl::InternalFormat"* %221, i64 0, i32 10
  br label %241

238:                                              ; preds = %317, %228
  %239 = add nuw i64 %218, 1
  %240 = icmp eq i64 %239, %4
  br i1 %240, label %214, label %217

241:                                              ; preds = %234, %317
  %242 = phi %"class.std::__1::__tree_end_node"* [ %231, %234 ], [ %318, %317 ]
  %243 = bitcast %"class.std::__1::__tree_end_node"* %242 to %"class.std::__1::__tree_node"*
  %244 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %243, i64 0, i32 1
  %245 = load i32, i32* %244, align 4
  call void @llvm.lifetime.start.p0i8(i64 164, i8* nonnull %165) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %165, i8 -86, i64 164, i1 false)
  %246 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %29, align 8, !noalias !9
  %247 = call i64 @_ZNK2rx10RendererVk24getMaxSupportedESVersionEv(%"class.rx::RendererVk"* %246) #9
  %248 = trunc i64 %247 to i32
  %249 = icmp ugt i32 %248, 2
  %250 = zext i1 %249 to i32
  %251 = icmp ugt i32 %248, 1
  %252 = select i1 %251, i32 4, i32 0
  %253 = select i1 %249, i32 64, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %165, i8 -86, i64 164, i1 false) #9, !alias.scope !9
  call void @_ZN3egl6ConfigC1Ev(%"struct.egl::Config"* nonnull %11) #9
  %254 = load i32, i32* %206, align 8, !noalias !9
  store i32 %254, i32* %166, align 4, !alias.scope !9
  %255 = load i32, i32* %235, align 8, !noalias !9
  store i32 %255, i32* %167, align 4, !alias.scope !9
  %256 = load i32, i32* %207, align 4, !noalias !9
  %257 = shl i32 %256, 3
  store i32 %257, i32* %168, align 4, !alias.scope !9
  %258 = load i32, i32* %208, align 4, !noalias !9
  store i32 %258, i32* %169, align 4, !alias.scope !9
  %259 = load i32, i32* %209, align 8, !noalias !9
  store i32 %259, i32* %170, align 4, !alias.scope !9
  %260 = load i32, i32* %210, align 4, !noalias !9
  store i32 %260, i32* %171, align 4, !alias.scope !9
  %261 = load i32, i32* %211, align 4, !noalias !9
  store i32 %261, i32* %172, align 4, !alias.scope !9
  store i32 0, i32* %173, align 4, !alias.scope !9
  %262 = load i32, i32* %212, align 4, !noalias !9
  %263 = icmp eq i32 %262, 6407
  %264 = zext i1 %263 to i32
  store i32 %264, i32* %174, align 4, !alias.scope !9
  %265 = icmp eq i32 %262, 6408
  %266 = icmp eq i32 %262, 32993
  %267 = or i1 %265, %266
  %268 = zext i1 %267 to i32
  store i32 %268, i32* %175, align 4, !alias.scope !9
  store i32 12430, i32* %176, align 4, !alias.scope !9
  %269 = icmp eq i32 %254, 32857
  %270 = select i1 %269, i32 12368, i32 12344
  store i32 %270, i32* %177, align 4, !alias.scope !9
  %271 = or i32 %252, %250
  %272 = or i32 %271, %253
  store i32 %272, i32* %178, align 4, !alias.scope !9
  %273 = load i32, i32* %236, align 4, !noalias !9
  store i32 %273, i32* %179, align 4, !alias.scope !9
  %274 = load i32, i32* %237, align 8, !noalias !9
  store i32 %274, i32* %180, align 4, !alias.scope !9
  store i32 0, i32* %181, align 4, !alias.scope !9
  store i32 12344, i32* %182, align 4, !alias.scope !9
  %275 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %246, i64 0, i32 16, i32 7, i32 1
  %276 = load i32, i32* %275, align 4
  store i32 %276, i32* %183, align 4, !alias.scope !9
  store i32 %276, i32* %184, align 4, !alias.scope !9
  %277 = zext i32 %276 to i64
  %278 = mul nuw i64 %277, %277
  %279 = icmp ult i64 %278, 2147483647
  %280 = select i1 %279, i64 %278, i64 2147483647
  %281 = trunc i64 %280 to i32
  store i32 %281, i32* %185, align 4, !alias.scope !9
  store <4 x i32> <i32 1, i32 0, i32 1, i32 0>, <4 x i32>* %199, align 4, !alias.scope !9
  store i32 12344, i32* %187, align 4, !alias.scope !9
  store i32 %272, i32* %188, align 4, !alias.scope !9
  %282 = icmp sgt i32 %245, 0
  %283 = zext i1 %282 to i32
  store i32 %283, i32* %189, align 4, !alias.scope !9
  store i32 %245, i32* %190, align 4, !alias.scope !9
  store i32 5, i32* %191, align 4, !alias.scope !9
  store i32 2, i32* %192, align 4, !alias.scope !9
  store i32 12344, i32* %193, align 4, !alias.scope !9
  store i32 0, i32* %194, align 4, !alias.scope !9
  store i32 0, i32* %195, align 4, !alias.scope !9
  store i32 0, i32* %196, align 4, !alias.scope !9
  %284 = load i32, i32* %213, align 4, !noalias !9
  %285 = call i32 @_ZN6gl_egl38GLComponentTypeToEGLColorComponentTypeEj(i32 %284) #9
  store i32 %285, i32* %197, align 4, !alias.scope !9
  %286 = load void (%"class.rx::DisplayVk"*, %"struct.egl::Config"*)**, void (%"class.rx::DisplayVk"*, %"struct.egl::Config"*)*** %198, align 8, !noalias !9
  %287 = getelementptr inbounds void (%"class.rx::DisplayVk"*, %"struct.egl::Config"*)*, void (%"class.rx::DisplayVk"*, %"struct.egl::Config"*)** %286, i64 40
  %288 = load void (%"class.rx::DisplayVk"*, %"struct.egl::Config"*)*, void (%"class.rx::DisplayVk"*, %"struct.egl::Config"*)** %287, align 8
  call void %288(%"class.rx::DisplayVk"* %5, %"struct.egl::Config"* nonnull %11) #9
  %289 = call i32 @_ZN3egl9ConfigSet3addERKNS_6ConfigE(%"class.egl::ConfigSet"* %0, %"struct.egl::Config"* nonnull dereferenceable(164) %11) #9
  call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 164, i8* nonnull %165) #9
  %290 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %242, i64 1, i32 0
  %291 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %290, align 8
  %292 = icmp eq %"class.std::__1::__tree_node_base"* %291, null
  br i1 %292, label %293, label %301

293:                                              ; preds = %241
  %294 = bitcast %"class.std::__1::__tree_end_node"* %242 to %"class.std::__1::__tree_node_base"*
  %295 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %242, i64 2
  %296 = bitcast %"class.std::__1::__tree_end_node"* %295 to %"class.std::__1::__tree_end_node"**
  %297 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %297, i64 0, i32 0
  %299 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %298, align 8
  %300 = icmp eq %"class.std::__1::__tree_node_base"* %299, %294
  br i1 %300, label %317, label %308

301:                                              ; preds = %241, %301
  %302 = phi %"class.std::__1::__tree_node_base"* [ %304, %301 ], [ %291, %241 ]
  %303 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %302, i64 0, i32 0, i32 0
  %304 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %303, align 8
  %305 = icmp eq %"class.std::__1::__tree_node_base"* %304, null
  br i1 %305, label %306, label %301

306:                                              ; preds = %301
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %302, i64 0, i32 0
  br label %317

308:                                              ; preds = %293, %308
  %309 = phi %"class.std::__1::__tree_end_node"** [ %312, %308 ], [ %296, %293 ]
  %310 = bitcast %"class.std::__1::__tree_end_node"** %309 to %"class.std::__1::__tree_node_base"**
  %311 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %310, align 8
  %312 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %311, i64 0, i32 2
  %313 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %312, align 8
  %314 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %313, i64 0, i32 0
  %315 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %314, align 8
  %316 = icmp eq %"class.std::__1::__tree_node_base"* %315, %311
  br i1 %316, label %317, label %308

317:                                              ; preds = %308, %293, %306
  %318 = phi %"class.std::__1::__tree_end_node"* [ %307, %306 ], [ %297, %293 ], [ %313, %308 ]
  %319 = icmp eq %"class.std::__1::__tree_end_node"* %318, %232
  br i1 %319, label %238, label %241

320:                                              ; preds = %214, %155
  %321 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %10, i64 0, i32 0
  %322 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.std::__1::__tree_node"**
  %323 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %322, align 8
  call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.15"* nonnull %321, %"class.std::__1::__tree_node"* %323) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #9
  %324 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %9, i64 0, i32 0
  %325 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %98, align 8
  call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.15"* nonnull %324, %"class.std::__1::__tree_node"* %325) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #9
  %326 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %8, i64 0, i32 0
  %327 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.15"* nonnull %326, %"class.std::__1::__tree_node"* %327) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  ret void
}

declare void @_ZN2rx5vk_gl15AddSampleCountsEjPNSt3__13setIjNS1_4lessIjEENS1_9allocatorIjEEEE(i32, %"class.std::__1::set"*) local_unnamed_addr #2

declare void @_ZN3egl9ConfigSetC1Ev(%"class.egl::ConfigSet"*) unnamed_addr #2

declare dereferenceable(128) %"struct.gl::InternalFormat"* @_ZN2gl26GetSizedInternalFormatInfoEj(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZN3egl9ConfigSet3addERKNS_6ConfigE(%"class.egl::ConfigSet"*, %"struct.egl::Config"* dereferenceable(164)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN2rx2vk12_GLOBAL__N_131FormatReinterpretationSupportedERKNSt3__16vectorIjNS2_9allocatorIjEEEEPKNS_10RendererVkEb(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.rx::RendererVk"*, i1 zeroext) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  br i1 %8, label %42, label %9

9:                                                ; preds = %3, %39
  %10 = phi i32* [ %40, %39 ], [ %5, %3 ]
  %11 = load i32, i32* %10, align 4
  %12 = tail call dereferenceable(7264) %"class.gl::TextureCapsMap"* @_ZNK2rx10RendererVk20getNativeTextureCapsEv(%"class.rx::RendererVk"* %1) #9
  %13 = tail call dereferenceable(32) %"struct.gl::TextureCaps"* @_ZNK2gl14TextureCapsMap3getEj(%"class.gl::TextureCapsMap"* %12, i32 %11) #9
  %14 = getelementptr inbounds %"struct.gl::TextureCaps", %"struct.gl::TextureCaps"* %13, i64 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"struct.gl::TextureCaps", %"struct.gl::TextureCaps"* %13, i64 0, i32 1
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %39, label %21

21:                                               ; preds = %17
  %22 = tail call i32 @_ZN5angle6Format18InternalFormatToIDEj(i32 %11) #9
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 49, i32 1, i32 0, i64 %23, i32 2
  %25 = load i32, i32* %24, align 8
  br i1 %2, label %26, label %28

26:                                               ; preds = %21
  %27 = tail call i32 @_ZN2rx15ConvertToLinearEN5angle8FormatIDE(i32 %25) #9
  br label %30

28:                                               ; preds = %21
  %29 = tail call i32 @_ZN2rx13ConvertToSRGBEN5angle8FormatIDE(i32 %25) #9
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi i32 [ %27, %26 ], [ %29, %28 ]
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %1, i64 0, i32 49, i32 1, i32 0, i64 %32, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, %31
  br i1 %35, label %36, label %42

36:                                               ; preds = %30
  %37 = load i32, i32* %24, align 8
  %38 = tail call zeroext i1 @_ZNK2rx10RendererVk25haveSameFormatFeatureBitsEN5angle8FormatIDES2_(%"class.rx::RendererVk"* %1, i32 %37, i32 %31) #9
  br i1 %38, label %39, label %42

39:                                               ; preds = %36, %17, %9
  %40 = getelementptr inbounds i32, i32* %10, i64 1
  %41 = icmp eq i32* %40, %7
  br i1 %41, label %42, label %9

42:                                               ; preds = %30, %36, %39, %3
  %43 = phi i1 [ true, %3 ], [ true, %39 ], [ false, %36 ], [ false, %30 ]
  ret i1 %43
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(7264) %"class.gl::TextureCapsMap"* @_ZNK2rx10RendererVk20getNativeTextureCapsEv(%"class.rx::RendererVk"*) local_unnamed_addr #2

declare dereferenceable(32) %"struct.gl::TextureCaps"* @_ZNK2gl14TextureCapsMap3getEj(%"class.gl::TextureCapsMap"*, i32) local_unnamed_addr #2

declare i32 @_ZN2rx15ConvertToLinearEN5angle8FormatIDE(i32) local_unnamed_addr #2

declare i32 @_ZN2rx13ConvertToSRGBEN5angle8FormatIDE(i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2rx10RendererVk25haveSameFormatFeatureBitsEN5angle8FormatIDES2_(%"class.rx::RendererVk"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZN5angle6Format18InternalFormatToIDEj(i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare zeroext i1 @_ZNK2rx10RendererVk26hasBufferFormatFeatureBitsEN5angle8FormatIDEj(%"class.rx::RendererVk"*, i32, i32) local_unnamed_addr #2

declare i64 @_ZNK2rx10RendererVk24getMaxSupportedESVersionEv(%"class.rx::RendererVk"*) local_unnamed_addr #2

declare void @_ZN3egl6ConfigC1Ev(%"struct.egl::Config"*) unnamed_addr #2

declare i32 @_ZN6gl_egl38GLComponentTypeToEGLColorComponentTypeEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.15"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.15"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.15"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::set"*, %"class.std::__1::__tree_end_node"* } @_ZNSt3__118__set_intersectionIRNS_6__lessIjjEENS_21__tree_const_iteratorIjPNS_11__tree_nodeIjPvEElEES9_NS_15insert_iteratorINS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEEEET2_T0_SJ_T1_SK_SI_T_(%"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::set"*, %"class.std::__1::__tree_end_node"*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %8 = alloca %"class.std::__1::insert_iterator", align 8
  %9 = getelementptr inbounds %"class.std::__1::insert_iterator", %"class.std::__1::insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::set"* %4, %"class.std::__1::set"** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::insert_iterator", %"class.std::__1::insert_iterator"* %8, i64 0, i32 1, i32 0
  store %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"** %10, align 8
  %11 = icmp ne %"class.std::__1::__tree_end_node"* %0, %1
  %12 = icmp ne %"class.std::__1::__tree_end_node"* %2, %3
  %13 = and i1 %12, %11
  br i1 %13, label %14, label %121

14:                                               ; preds = %7, %112
  %15 = phi %"class.std::__1::__tree_end_node"* [ %114, %112 ], [ %0, %7 ]
  %16 = phi %"class.std::__1::__tree_end_node"* [ %113, %112 ], [ %2, %7 ]
  %17 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node"*
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %17, i64 0, i32 1
  %19 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node"*
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1
  %21 = load i32, i32* %18, align 4
  %22 = load i32, i32* %20, align 4
  %23 = icmp ult i32 %21, %22
  br i1 %23, label %24, label %52

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 1, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %28, label %36

28:                                               ; preds = %24
  %29 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_end_node"**
  %32 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, %29
  br i1 %35, label %112, label %43

36:                                               ; preds = %24, %36
  %37 = phi %"class.std::__1::__tree_node_base"* [ %39, %36 ], [ %26, %24 ]
  %38 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %38, align 8
  %40 = icmp eq %"class.std::__1::__tree_node_base"* %39, null
  br i1 %40, label %41, label %36

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %37, i64 0, i32 0
  br label %112

43:                                               ; preds = %28, %43
  %44 = phi %"class.std::__1::__tree_end_node"** [ %47, %43 ], [ %31, %28 ]
  %45 = bitcast %"class.std::__1::__tree_end_node"** %44 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 2
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %48, i64 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, %46
  br i1 %51, label %112, label %43

52:                                               ; preds = %14
  %53 = icmp ult i32 %22, %21
  br i1 %53, label %83, label %54

54:                                               ; preds = %52
  %55 = call dereferenceable(16) %"class.std::__1::insert_iterator"* @_ZNSt3__115insert_iteratorINS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEaSERKj(%"class.std::__1::insert_iterator"* nonnull %8, i32* dereferenceable(4) %18)
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 1, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %59, label %67

59:                                               ; preds = %54
  %60 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_node_base"*
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %15, i64 2
  %62 = bitcast %"class.std::__1::__tree_end_node"* %61 to %"class.std::__1::__tree_end_node"**
  %63 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %63, i64 0, i32 0
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, %60
  br i1 %66, label %83, label %74

67:                                               ; preds = %54, %67
  %68 = phi %"class.std::__1::__tree_node_base"* [ %70, %67 ], [ %57, %54 ]
  %69 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %68, i64 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %72, label %67

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %68, i64 0, i32 0
  br label %83

74:                                               ; preds = %59, %74
  %75 = phi %"class.std::__1::__tree_end_node"** [ %78, %74 ], [ %62, %59 ]
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to %"class.std::__1::__tree_node_base"**
  %77 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %77, i64 0, i32 2
  %79 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %79, i64 0, i32 0
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %81, %77
  br i1 %82, label %83, label %74

83:                                               ; preds = %74, %72, %59, %52
  %84 = phi %"class.std::__1::__tree_end_node"* [ %15, %52 ], [ %73, %72 ], [ %63, %59 ], [ %79, %74 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, null
  br i1 %87, label %88, label %96

88:                                               ; preds = %83
  %89 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %90 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 2
  %91 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_end_node"**
  %92 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %91, align 8
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %92, i64 0, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, %89
  br i1 %95, label %112, label %103

96:                                               ; preds = %83, %96
  %97 = phi %"class.std::__1::__tree_node_base"* [ %99, %96 ], [ %86, %83 ]
  %98 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %97, i64 0, i32 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  %100 = icmp eq %"class.std::__1::__tree_node_base"* %99, null
  br i1 %100, label %101, label %96

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %97, i64 0, i32 0
  br label %112

103:                                              ; preds = %88, %103
  %104 = phi %"class.std::__1::__tree_end_node"** [ %107, %103 ], [ %91, %88 ]
  %105 = bitcast %"class.std::__1::__tree_end_node"** %104 to %"class.std::__1::__tree_node_base"**
  %106 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %105, align 8
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %106, i64 0, i32 2
  %108 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %107, align 8
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %108, i64 0, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, %106
  br i1 %111, label %112, label %103

112:                                              ; preds = %103, %43, %101, %88, %41, %28
  %113 = phi %"class.std::__1::__tree_end_node"* [ %16, %28 ], [ %16, %41 ], [ %102, %101 ], [ %92, %88 ], [ %16, %43 ], [ %108, %103 ]
  %114 = phi %"class.std::__1::__tree_end_node"* [ %32, %28 ], [ %42, %41 ], [ %84, %101 ], [ %84, %88 ], [ %48, %43 ], [ %84, %103 ]
  %115 = icmp ne %"class.std::__1::__tree_end_node"* %114, %1
  %116 = icmp ne %"class.std::__1::__tree_end_node"* %113, %3
  %117 = and i1 %116, %115
  br i1 %117, label %14, label %118

118:                                              ; preds = %112
  %119 = load %"class.std::__1::set"*, %"class.std::__1::set"** %9, align 8
  %120 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %10, align 8
  br label %121

121:                                              ; preds = %118, %7
  %122 = phi %"class.std::__1::__tree_end_node"* [ %120, %118 ], [ %5, %7 ]
  %123 = phi %"class.std::__1::set"* [ %119, %118 ], [ %4, %7 ]
  %124 = insertvalue { %"class.std::__1::set"*, %"class.std::__1::__tree_end_node"* } undef, %"class.std::__1::set"* %123, 0
  %125 = insertvalue { %"class.std::__1::set"*, %"class.std::__1::__tree_end_node"* } %124, %"class.std::__1::__tree_end_node"* %122, 1
  ret { %"class.std::__1::set"*, %"class.std::__1::__tree_end_node"* } %125
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.std::__1::insert_iterator"* @_ZNSt3__115insert_iteratorINS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEaSERKj(%"class.std::__1::insert_iterator"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %5 = getelementptr inbounds %"class.std::__1::insert_iterator", %"class.std::__1::insert_iterator"* %0, i64 0, i32 0
  %6 = load %"class.std::__1::set"*, %"class.std::__1::set"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::insert_iterator", %"class.std::__1::insert_iterator"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  %11 = bitcast %"class.std::__1::__tree_node_base"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %4, align 8
  %12 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE12__find_equalIjEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIjPNS_11__tree_nodeIjS8_EElEERPNS_15__tree_end_nodeISA_EESB_RKT_(%"class.std::__1::__tree.15"* %9, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %4, i32* dereferenceable(4) %1) #9
  %13 = bitcast %"class.std::__1::__tree_node_base"** %12 to %"class.std::__1::__tree_node"**
  %14 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  %15 = icmp eq %"class.std::__1::__tree_node"* %14, null
  br i1 %15, label %16, label %44

16:                                               ; preds = %2
  %17 = call i8* @_Znwm(i64 32) #10, !noalias !12
  %18 = getelementptr inbounds i8, i8* %17, i64 28
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %1, align 4, !noalias !12
  store i32 %20, i32* %19, align 4, !noalias !12
  %21 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast i8* %17 to %"class.std::__1::__tree_node"*
  %24 = bitcast i8* %17 to %"class.std::__1::__tree_node_base"*
  %25 = getelementptr inbounds i8, i8* %17, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #9
  %26 = bitcast i8* %25 to i64*
  store i64 %22, i64* %26, align 8
  %27 = bitcast %"class.std::__1::__tree_node_base"** %12 to i8**
  store i8* %17, i8** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %16
  %34 = ptrtoint %"class.std::__1::__tree_node_base"* %31 to i64
  %35 = bitcast %"class.std::__1::set"* %6 to i64*
  store i64 %34, i64* %35, align 8
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  br label %37

37:                                               ; preds = %33, %16
  %38 = phi %"class.std::__1::__tree_node_base"* [ %24, %16 ], [ %36, %33 ]
  %39 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"* %38) #9
  %41 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %41, align 8
  br label %44

44:                                               ; preds = %2, %37
  %45 = phi %"class.std::__1::__tree_node"* [ %23, %37 ], [ %14, %2 ]
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  store %"class.std::__1::__tree_end_node"* %46, %"class.std::__1::__tree_end_node"** %7, align 8
  %47 = getelementptr inbounds %"class.std::__1::insert_iterator", %"class.std::__1::insert_iterator"* %0, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 1
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %58

51:                                               ; preds = %44
  %52 = bitcast %"class.std::__1::__tree_node"* %45 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %45, i64 0, i32 0, i32 2
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %52
  br i1 %57, label %74, label %65

58:                                               ; preds = %44, %58
  %59 = phi %"class.std::__1::__tree_node_base"* [ %61, %58 ], [ %49, %44 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %63, label %58

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %59, i64 0, i32 0
  br label %74

65:                                               ; preds = %51, %65
  %66 = phi %"class.std::__1::__tree_end_node"** [ %69, %65 ], [ %53, %51 ]
  %67 = bitcast %"class.std::__1::__tree_end_node"** %66 to %"class.std::__1::__tree_node_base"**
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %68, i64 0, i32 2
  %70 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %70, i64 0, i32 0
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, %68
  br i1 %73, label %74, label %65

74:                                               ; preds = %65, %51, %63
  %75 = phi %"class.std::__1::__tree_end_node"* [ %64, %63 ], [ %54, %51 ], [ %70, %65 ]
  store %"class.std::__1::__tree_end_node"* %75, %"class.std::__1::__tree_end_node"** %47, align 8
  ret %"class.std::__1::insert_iterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE12__find_equalIjEERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorIjPNS_11__tree_nodeIjS8_EElEERPNS_15__tree_end_nodeISA_EESB_RKT_(%"class.std::__1::__tree.15"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree.15", %"class.std::__1::__tree.15"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node"*
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1
  %12 = load i32, i32* %4, align 4
  %13 = load i32, i32* %11, align 4
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %15, label %90

15:                                               ; preds = %5, %9
  %16 = getelementptr inbounds %"class.std::__1::__tree.15", %"class.std::__1::__tree.15"* %0, i64 0, i32 0
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_end_node"* %17, %1
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  br i1 %18, label %47, label %21

21:                                               ; preds = %15
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21, %23
  %24 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ %20, %21 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 1
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, null
  br i1 %27, label %39, label %23

28:                                               ; preds = %21, %28
  %29 = phi %"class.std::__1::__tree_end_node"* [ %33, %28 ], [ %1, %21 ]
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node_base"*
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 2
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to %"class.std::__1::__tree_end_node"**
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %30
  br i1 %36, label %28, label %37

37:                                               ; preds = %28
  %38 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"class.std::__1::__tree_node_base"*
  br label %39

39:                                               ; preds = %23, %37
  %40 = phi %"class.std::__1::__tree_node_base"* [ %38, %37 ], [ %24, %23 ]
  %41 = ptrtoint %"class.std::__1::__tree_node_base"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 4, i64 3
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %4, align 4
  %46 = icmp ult i32 %44, %45
  br i1 %46, label %47, label %56

47:                                               ; preds = %15, %39
  %48 = phi i64 [ %41, %39 ], [ %6, %15 ]
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

52:                                               ; preds = %47
  %53 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %48, i64* %53, align 8
  %54 = inttoptr i64 %48 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %54, i64 0, i32 1
  br label %170

56:                                               ; preds = %39
  %57 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %58 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %57, align 8
  %59 = icmp eq %"class.std::__1::__tree_node"* %58, null
  br i1 %59, label %88, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.std::__1::__tree.15", %"class.std::__1::__tree.15"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %84, %60
  %63 = phi %"class.std::__1::__tree_node"* [ %87, %84 ], [ %58, %60 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %86, %84 ], [ %61, %60 ]
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp ult i32 %45, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, null
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %73, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

74:                                               ; preds = %62
  %75 = icmp ult i32 %66, %45
  br i1 %75, label %76, label %82

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 1
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %81, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %63, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %83, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

84:                                               ; preds = %76, %68
  %85 = phi %"class.std::__1::__tree_node_base"* [ %70, %68 ], [ %78, %76 ]
  %86 = phi %"class.std::__1::__tree_node_base"** [ %69, %68 ], [ %77, %76 ]
  %87 = bitcast %"class.std::__1::__tree_node_base"* %85 to %"class.std::__1::__tree_node"*
  br label %62

88:                                               ; preds = %56
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %170

90:                                               ; preds = %9
  %91 = icmp ult i32 %13, %12
  br i1 %91, label %92, label %167

92:                                               ; preds = %90
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %104

96:                                               ; preds = %92
  %97 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_end_node"**
  %100 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, %97
  br i1 %103, label %120, label %111

104:                                              ; preds = %92, %104
  %105 = phi %"class.std::__1::__tree_node_base"* [ %107, %104 ], [ %94, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, null
  br i1 %108, label %109, label %104

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0
  br label %120

111:                                              ; preds = %96, %111
  %112 = phi %"class.std::__1::__tree_end_node"** [ %115, %111 ], [ %99, %96 ]
  %113 = bitcast %"class.std::__1::__tree_end_node"** %112 to %"class.std::__1::__tree_node_base"**
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 2
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, %114
  br i1 %119, label %120, label %111

120:                                              ; preds = %111, %109, %96
  %121 = phi %"class.std::__1::__tree_end_node"* [ %110, %109 ], [ %100, %96 ], [ %116, %111 ]
  %122 = icmp eq %"class.std::__1::__tree_end_node"* %121, %7
  br i1 %122, label %128, label %123

123:                                              ; preds = %120
  %124 = bitcast %"class.std::__1::__tree_end_node"* %121 to %"class.std::__1::__tree_node"*
  %125 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %124, i64 0, i32 1
  %126 = load i32, i32* %125, align 4
  %127 = icmp ult i32 %12, %126
  br i1 %127, label %128, label %133

128:                                              ; preds = %120, %123
  br i1 %95, label %129, label %131

129:                                              ; preds = %128
  %130 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %130, align 8
  br label %170

131:                                              ; preds = %128
  store %"class.std::__1::__tree_end_node"* %121, %"class.std::__1::__tree_end_node"** %2, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %121, i64 0, i32 0
  br label %170

133:                                              ; preds = %123
  %134 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %135 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node"* %135, null
  br i1 %136, label %165, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.std::__1::__tree.15", %"class.std::__1::__tree.15"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %139

139:                                              ; preds = %161, %137
  %140 = phi %"class.std::__1::__tree_node"* [ %164, %161 ], [ %135, %137 ]
  %141 = phi %"class.std::__1::__tree_node_base"** [ %163, %161 ], [ %138, %137 ]
  %142 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = icmp ult i32 %12, %143
  br i1 %144, label %145, label %151

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %146, align 8
  %148 = icmp eq %"class.std::__1::__tree_node_base"* %147, null
  br i1 %148, label %149, label %161

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %150, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

151:                                              ; preds = %139
  %152 = icmp ult i32 %143, %12
  br i1 %152, label %153, label %159

153:                                              ; preds = %151
  %154 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 1
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %157, label %161

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %158, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %160, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %170

161:                                              ; preds = %153, %145
  %162 = phi %"class.std::__1::__tree_node_base"* [ %147, %145 ], [ %155, %153 ]
  %163 = phi %"class.std::__1::__tree_node_base"** [ %146, %145 ], [ %154, %153 ]
  %164 = bitcast %"class.std::__1::__tree_node_base"* %162 to %"class.std::__1::__tree_node"*
  br label %139

165:                                              ; preds = %133
  store %"class.std::__1::__tree_end_node"* %7, %"class.std::__1::__tree_end_node"** %2, align 8
  %166 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  br label %170

167:                                              ; preds = %90
  %168 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %168, align 8
  %169 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %169, align 8
  br label %170

170:                                              ; preds = %129, %131, %149, %157, %159, %165, %50, %52, %72, %80, %82, %88, %167
  %171 = phi %"class.std::__1::__tree_node_base"** [ %3, %167 ], [ %51, %50 ], [ %55, %52 ], [ %69, %72 ], [ %77, %80 ], [ %64, %82 ], [ %89, %88 ], [ %93, %129 ], [ %132, %131 ], [ %146, %149 ], [ %154, %157 ], [ %141, %159 ], [ %166, %165 ]
  ret %"class.std::__1::__tree_node_base"** %171
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN2rx6egl_vk12_GLOBAL__N_121GenerateDefaultConfigEPNS_9DisplayVkERKN2gl14InternalFormatES7_i: argument 0"}
!11 = distinct !{!11, !"_ZN2rx6egl_vk12_GLOBAL__N_121GenerateDefaultConfigEPNS_9DisplayVkERKN2gl14InternalFormatES7_i"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
