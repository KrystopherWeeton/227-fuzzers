; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/source_keyed_cached_metadata_handler.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/source_keyed_cached_metadata_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.40", i32, [4 x i8], %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.176", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.192", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.210", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.217", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.112", %"class.std::__1::unique_ptr.119", %"class.std::__1::unique_ptr.126", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.156", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.76" = type { %"struct.std::__1::__atomic_base.77" }
%"struct.std::__1::__atomic_base.77" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl.79" }
%"struct.std::__1::__cxx_atomic_impl.79" = type { %"struct.std::__1::__cxx_atomic_base_impl.80" }
%"struct.std::__1::__cxx_atomic_base_impl.80" = type { i64 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::Worklist.87"* }
%"class.blink::Worklist.87" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::Worklist.94"* }
%"class.blink::Worklist.94" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::Worklist.101"* }
%"class.blink::Worklist.101" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist.108"* }
%"class.blink::Worklist.108" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::Worklist.115"* }
%"class.blink::Worklist.115" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::Worklist.122"* }
%"class.blink::Worklist.122" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::Worklist.129"* }
%"class.blink::Worklist.129" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.76" }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.136", %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.150", [4 x i8] }>
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138", %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { i64 }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { float }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.159", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.168" }
%"class.WTF::Vector.168" = type { %"class.WTF::VectorBuffer.169" }
%"class.WTF::VectorBuffer.169" = type { %"class.WTF::VectorBufferBase.170" }
%"class.WTF::VectorBufferBase.170" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.184" }
%"class.WTF::VectorBuffer.184" = type { %"class.WTF::VectorBufferBase.185" }
%"class.WTF::VectorBufferBase.185" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.198" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.87"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.94"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.101"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.108"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.115"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.221" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.216 }
%class.scoped_refptr.216 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.217" = type { %"struct.std::__1::__atomic_base.218" }
%"struct.std::__1::__atomic_base.218" = type { %"struct.std::__1::__cxx_atomic_impl.219" }
%"struct.std::__1::__cxx_atomic_impl.219" = type { %"struct.std::__1::__cxx_atomic_base_impl.220" }
%"struct.std::__1::__cxx_atomic_base_impl.220" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::SingleCachedMetadataHandler" = type <{ %"class.blink::CachedMetadataHandler", i8, [7 x i8] }>
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap", %"class.std::__1::unique_ptr.11", %"class.WTF::TextEncoding" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::Vector", %class.scoped_refptr }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%class.scoped_refptr = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted", %"class.WTF::Vector.2", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr", i64, %"class.absl::optional" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.7" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i8* }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::String" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector.19" = type { %"class.WTF::VectorBuffer.20" }
%"class.WTF::VectorBuffer.20" = type { %"class.WTF::VectorBufferBase", [64 x i8] }
%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler" = type { %"class.blink::SingleCachedMetadataHandler.base", %"class.blink::Member", %"class.WTF::Vector" }
%"class.blink::SingleCachedMetadataHandler.base" = type <{ %"class.blink::CachedMetadataHandler", i8 }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::WebProcessMemoryDump" = type { %"class.std::__1::unique_ptr.23", %"class.base::trace_event::ProcessMemoryDump"*, i32, [4 x i8], %"class.WTF::HashMap.29", %"class.WTF::Vector.34" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.base::trace_event::ProcessMemoryDump"* }
%"class.base::trace_event::ProcessMemoryDump" = type opaque
%"class.WTF::HashMap.29" = type { %"class.WTF::HashTable.30" }
%"class.WTF::HashTable.30" = type <{ %"struct.WTF::KeyValuePair.33"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.33" = type opaque
%"class.WTF::Vector.34" = type { %"class.WTF::VectorBuffer.35" }
%"class.WTF::VectorBuffer.35" = type { %"class.WTF::VectorBufferBase.36" }
%"class.WTF::VectorBufferBase.36" = type { %"class.std::__1::unique_ptr.37"*, i32, i32 }
%"class.std::__1::unique_ptr.37" = type opaque
%"class.WTF::StringAppend" = type { %"class.WTF::String", i8* }
%"class.blink::WebMemoryAllocatorDump" = type { %"class.base::trace_event::MemoryAllocatorDump"*, i64 }
%"class.base::trace_event::MemoryAllocatorDump" = type opaque
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.268" }
%"class.WTF::StringTypeAdapter.268" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.269" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.232 }
%union.anon.232 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::ConditionalDestructor" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j = comdat any

$_ZN5blink32SourceKeyedCachedMetadataHandlerD2Ev = comdat any

$_ZN5blink32SourceKeyedCachedMetadataHandlerD0Ev = comdat any

$_ZNK5blink21CachedMetadataHandler5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink32SourceKeyedCachedMetadataHandler24IsServedFromCacheStorageEv = comdat any

$_ZNK5blink32SourceKeyedCachedMetadataHandler16GetCodeCacheSizeEv = comdat any

$_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF12VectorBufferIhLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS7_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSC_13KeyHashTraitsENS_10HashTraitsIS9_EEEESF_S3_EELb0EED2Ev = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6insertINS_17HashMapTranslatorISH_SC_S2_EERS3_S8_EENS_18HashTableAddResultISI_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E8RehashToEPS9_jSJ_ = comdat any

$_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E5clearEv = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairINS_6VectorIhLj32ENS_18PartitionAllocatorEEE13scoped_refptrIN5blink14CachedMetadataEEEES3_NS_18HashMapValueTraitsINS6_32SourceKeyedCachedMetadataHandler13KeyHashTraitsENS_10HashTraitsIS8_EEEELb1EE4MoveEOS9_RS9_ = comdat any

$_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E16LookupForWritingINS_22IdentityHashTranslatorISC_SH_S2_EES3_EENSt3__14pairIPS9_bEERKT0_ = comdat any

$_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIhS1_E11OffsetRangeES6_ = comdat any

$_ZN3WTF6VectorIhLj32ENS_18PartitionAllocatorEEaSERKS2_ = comdat any

$_ZN3WTF6VectorIhLj32ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_32SourceKeyedCachedMetadataHandler16SingleKeyHandlerEE4CallIJPS1_RN3WTF6VectorIhLj32ENS6_18PartitionAllocatorEEEEEEPS2_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21CachedMetadataHandlerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21CachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_21CachedMetadataHandlerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_21CachedMetadataHandlerEE7GetNameEPKv = comdat any

$_ZN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandlerD2Ev = comdat any

$_ZN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandlerD0Ev = comdat any

$_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler5TraceEPNS_7VisitorE = comdat any

$_ZN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler19ClearCachedMetadataENS_21CachedMetadataHandler14ClearCacheTypeE = comdat any

$_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler8EncodingEv = comdat any

$_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler24IsServedFromCacheStorageEv = comdat any

$_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler12OnMemoryDumpEPNS_20WebProcessMemoryDumpERKN3WTF6StringE = comdat any

$_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler16GetCodeCacheSizeEv = comdat any

$_ZN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler17SetCachedMetadataEjPKhm = comdat any

$_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler17GetCachedMetadataEj = comdat any

$_ZN5blink10TraceTraitINS_32SourceKeyedCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E12DeleteBucketERKS9_ = comdat any

$_ZNK3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6LookupINS_22IdentityHashTranslatorISC_SH_S2_EES3_EEPKS9_RKT0_ = comdat any

$_ZNK3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6LookupINS_22IdentityHashTranslatorISC_SH_S2_EERKS3_EEPKS9_RKT0_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZZN5blink11GCInfoTraitINS_21CachedMetadataHandlerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21CachedMetadataHandlerEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandlerE = comdat any

@_ZN5blink32SourceKeyedCachedMetadataHandler8kKeySizeE = hidden local_unnamed_addr constant i64 32, align 8
@.str = private unnamed_addr constant [8 x i8] c"/inline\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@_ZN3WTF10Partitions24kAllocatedObjectPoolNameE = external local_unnamed_addr constant i8*, align 8
@_ZTVN5blink32SourceKeyedCachedMetadataHandlerE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SourceKeyedCachedMetadataHandler"*)* @_ZN5blink32SourceKeyedCachedMetadataHandlerD2Ev to i8*), i8* bitcast (void (%"class.blink::SourceKeyedCachedMetadataHandler"*)* @_ZN5blink32SourceKeyedCachedMetadataHandlerD0Ev to i8*), i8* bitcast (void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)* @_ZNK5blink21CachedMetadataHandler5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::SourceKeyedCachedMetadataHandler"*, i32)* @_ZN5blink32SourceKeyedCachedMetadataHandler19ClearCachedMetadataENS_21CachedMetadataHandler14ClearCacheTypeE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SourceKeyedCachedMetadataHandler"*)* @_ZNK5blink32SourceKeyedCachedMetadataHandler8EncodingEv to i8*), i8* bitcast (i1 (%"class.blink::SourceKeyedCachedMetadataHandler"*)* @_ZNK5blink32SourceKeyedCachedMetadataHandler24IsServedFromCacheStorageEv to i8*), i8* bitcast (void (%"class.blink::SourceKeyedCachedMetadataHandler"*, %"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"*)* @_ZNK5blink32SourceKeyedCachedMetadataHandler12OnMemoryDumpEPNS_20WebProcessMemoryDumpERKN3WTF6StringE to i8*), i8* bitcast (i64 (%"class.blink::SourceKeyedCachedMetadataHandler"*)* @_ZNK5blink32SourceKeyedCachedMetadataHandler16GetCodeCacheSizeEv to i8*)] }, align 8
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6VectorIhLj32ENS_18PartitionAllocatorEEE13scoped_refptrIN5blink14CachedMetadataEEEEEEPKcv = private unnamed_addr constant [161 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::Vector<unsigned char, 32, WTF::PartitionAllocator>, scoped_refptr<blink::CachedMetadata> >]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_21CachedMetadataHandlerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21CachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_21CachedMetadataHandlerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21CachedMetadataHandlerEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21CachedMetadataHandlerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandlerE = linkonce_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*)* @_ZN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandlerD2Ev to i8*), i8* bitcast (void (%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*)* @_ZN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandlerD0Ev to i8*), i8* bitcast (void (%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*, %"class.blink::Visitor"*)* @_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*, i32)* @_ZN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler19ClearCachedMetadataENS_21CachedMetadataHandler14ClearCacheTypeE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*)* @_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler8EncodingEv to i8*), i8* bitcast (i1 (%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*)* @_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler24IsServedFromCacheStorageEv to i8*), i8* bitcast (void (%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*, %"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"*)* @_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler12OnMemoryDumpEPNS_20WebProcessMemoryDumpERKN3WTF6StringE to i8*), i8* bitcast (i64 (%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*)* @_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler16GetCodeCacheSizeEv to i8*), i8* bitcast (void (%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*, i32, i8*, i64)* @_ZN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler17SetCachedMetadataEjPKhm to i8*), i8* bitcast (%"class.blink::CachedMetadata"* (%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*, i32)* @_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler17GetCachedMetadataEj to i8*)] }, comdat, align 8
@.ref.tmp.13 = private unnamed_addr constant [1 x i8] c"\01", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.14 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.15 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SingleCachedMetadataHandler"* @_ZN5blink32SourceKeyedCachedMetadataHandler16HandlerForSourceERKN3WTF6StringE(%"class.blink::SourceKeyedCachedMetadataHandler"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.19", align 8
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = alloca %"class.blink::SourceKeyedCachedMetadataHandler"*, align 8
  %6 = bitcast %"class.WTF::Vector.19"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 64, i1 false)
  %8 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 1, i64 0
  %9 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 1
  store i32 64, i32* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %16 = bitcast %"class.WTF::StringImpl"* %15 to i8*
  %17 = select i1 %14, i8* null, i8* %16
  br i1 %14, label %28, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = select i1 %25, i64 2, i64 1
  %27 = mul nuw nsw i64 %26, %21
  br label %28

28:                                               ; preds = %2, %18
  %29 = phi i64 [ %27, %18 ], [ 0, %2 ]
  %30 = call zeroext i1 @_ZN5blink13ComputeDigestENS_13HashAlgorithmEPKcmRN3WTF6VectorIhLj64ENS3_18PartitionAllocatorEEE(i32 1, i8* %17, i64 %29, %"class.WTF::Vector.19"* nonnull dereferenceable(80) %3) #11
  br i1 %30, label %31, label %50

31:                                               ; preds = %28
  %32 = bitcast %"class.WTF::Vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 1, i64 0
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  store i8* %33, i8** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  store i32 32, i32* %36, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 32, i1 false) #11
  %37 = load i8*, i8** %9, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 1 %37, i64 32, i1 false)
  %38 = bitcast %"class.blink::SourceKeyedCachedMetadataHandler"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  store %"class.blink::SourceKeyedCachedMetadataHandler"* %0, %"class.blink::SourceKeyedCachedMetadataHandler"** %5, align 8
  %39 = call %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* @_ZN5blink25MakeGarbageCollectedTraitINS_32SourceKeyedCachedMetadataHandler16SingleKeyHandlerEE4CallIJPS1_RN3WTF6VectorIhLj32ENS6_18PartitionAllocatorEEEEEEPS2_DpOT_(%"class.blink::SourceKeyedCachedMetadataHandler"** nonnull dereferenceable(8) %5, %"class.WTF::Vector"* nonnull dereferenceable(48) %4) #11
  %40 = bitcast %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %39 to %"class.blink::SingleCachedMetadataHandler"*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %41 = load i32, i32* %36, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !2

43:                                               ; preds = %31
  store i32 0, i32* %36, align 4
  br label %44

44:                                               ; preds = %43, %31
  %45 = load i8*, i8** %34, align 8
  %46 = icmp eq i8* %33, %45
  br i1 %46, label %49, label %47, !prof !3

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* nonnull %48, i8* %45) #11
  br label %49

49:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #11
  br label %50

50:                                               ; preds = %28, %49
  %51 = phi %"class.blink::SingleCachedMetadataHandler"* [ %40, %49 ], [ null, %28 ]
  %52 = load i32, i32* %11, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %55, label %54, !prof !2

54:                                               ; preds = %50
  store i32 0, i32* %11, align 4
  br label %55

55:                                               ; preds = %54, %50
  %56 = load i8*, i8** %9, align 8
  %57 = icmp eq i8* %8, %56
  br i1 %57, label %60, label %58, !prof !3

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.WTF::Vector.19", %"class.WTF::Vector.19"* %3, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.20"* nonnull %59, i8* %56) #11
  br label %60

60:                                               ; preds = %55, %58
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #11
  ret %"class.blink::SingleCachedMetadataHandler"* %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN5blink13ComputeDigestENS_13HashAlgorithmEPKcmRN3WTF6VectorIhLj64ENS3_18PartitionAllocatorEEE(i32, i8*, i64, %"class.WTF::Vector.19"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32SourceKeyedCachedMetadataHandler19ClearCachedMetadataENS_21CachedMetadataHandler14ClearCacheTypeE(%"class.blink::SourceKeyedCachedMetadataHandler"*, i32) unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 1
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E5clearEv(%"class.WTF::HashTable"* %5) #11
  %6 = icmp eq i32 %1, 2
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @_ZN5blink32SourceKeyedCachedMetadataHandler14SendToPlatformEv(%"class.blink::SourceKeyedCachedMetadataHandler"* %0)
  br label %8

8:                                                ; preds = %2, %7, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32SourceKeyedCachedMetadataHandler14SendToPlatformEv(%"class.blink::SourceKeyedCachedMetadataHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector", align 8
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = alloca %"class.WTF::Vector.2", align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.blink::CachedMetadataSender"*, %"class.blink::CachedMetadataSender"** %8, align 8
  %10 = icmp eq %"class.blink::CachedMetadataSender"* %9, null
  br i1 %10, label %136, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 1, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::CachedMetadataSender"* %9 to void (%"class.blink::CachedMetadataSender"*, i8*, i64)***
  %17 = load void (%"class.blink::CachedMetadataSender"*, i8*, i64)**, void (%"class.blink::CachedMetadataSender"*, i8*, i64)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::CachedMetadataSender"*, i8*, i64)*, void (%"class.blink::CachedMetadataSender"*, i8*, i64)** %17, i64 2
  %19 = load void (%"class.blink::CachedMetadataSender"*, i8*, i64)*, void (%"class.blink::CachedMetadataSender"*, i8*, i64)** %18, align 8
  tail call void %19(%"class.blink::CachedMetadataSender"* nonnull %9, i8* null, i64 0) #11
  br label %136

20:                                               ; preds = %11
  %21 = bitcast %"class.WTF::Vector.2"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 16, i1 false) #11
  %24 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #11
  store i32 1, i32* %5, align 4
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.2"* nonnull %4, i8* nonnull %24, i32 4)
  %25 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #11
  %26 = load i32, i32* %12, align 4
  store i32 %26, i32* %6, align 4
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.2"* nonnull %4, i8* nonnull %25, i32 4)
  %27 = load i32, i32* %12, align 4
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %30 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 1, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %33
  br i1 %28, label %69, label %35

35:                                               ; preds = %20
  %36 = icmp eq i32 %32, 0
  br i1 %36, label %59, label %37

37:                                               ; preds = %35
  %38 = bitcast %"class.WTF::Vector"* %2 to i8*
  %39 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 1, i64 0
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  br label %43

43:                                               ; preds = %56, %37
  %44 = phi %"struct.WTF::KeyValuePair"* [ %30, %37 ], [ %57, %56 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %56, label %48

48:                                               ; preds = %43
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %38) #11
  store i8* %39, i8** %40, align 8
  store i32 32, i32* %41, align 8
  store i32 1, i32* %42, align 4
  store i8 1, i8* %39, align 8
  %49 = icmp eq i32 %46, 1
  br i1 %49, label %51, label %50

50:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38) #11
  br label %59

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38) #11
  br i1 %55, label %56, label %59

56:                                               ; preds = %51, %43
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 1
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %57, %34
  br i1 %58, label %69, label %43

59:                                               ; preds = %51, %35, %50
  %60 = phi %"struct.WTF::KeyValuePair"* [ %30, %35 ], [ %44, %50 ], [ %44, %51 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %60, %34
  br i1 %61, label %69, label %62

62:                                               ; preds = %59
  %63 = bitcast i64* %7 to i8*
  %64 = bitcast %"class.WTF::Vector"* %3 to i8*
  %65 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 1, i64 0
  %66 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  br label %86

69:                                               ; preds = %56, %113, %134, %131, %20, %59
  %70 = load %"class.blink::CachedMetadataSender"*, %"class.blink::CachedMetadataSender"** %8, align 8
  %71 = load i8*, i8** %22, align 8
  %72 = load i32, i32* %23, align 4
  %73 = zext i32 %72 to i64
  %74 = bitcast %"class.blink::CachedMetadataSender"* %70 to void (%"class.blink::CachedMetadataSender"*, i8*, i64)***
  %75 = load void (%"class.blink::CachedMetadataSender"*, i8*, i64)**, void (%"class.blink::CachedMetadataSender"*, i8*, i64)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.blink::CachedMetadataSender"*, i8*, i64)*, void (%"class.blink::CachedMetadataSender"*, i8*, i64)** %75, i64 2
  %77 = load void (%"class.blink::CachedMetadataSender"*, i8*, i64)*, void (%"class.blink::CachedMetadataSender"*, i8*, i64)** %76, align 8
  call void %77(%"class.blink::CachedMetadataSender"* %70, i8* %71, i64 %73) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #11
  %78 = load i8*, i8** %22, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %85, label %80, !prof !3

80:                                               ; preds = %69
  %81 = load i32, i32* %23, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83, !prof !2

83:                                               ; preds = %80
  store i32 0, i32* %23, align 4
  br label %84

84:                                               ; preds = %83, %80
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #11
  store i8* null, i8** %22, align 8
  br label %85

85:                                               ; preds = %69, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  br label %136

86:                                               ; preds = %62, %134
  %87 = phi %"struct.WTF::KeyValuePair"* [ %60, %62 ], [ %119, %134 ]
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.2"* nonnull %4, i8* %89, i32 32)
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 0, i32 1, i32 0
  %91 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %91, i64 0, i32 2
  %93 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %92) #11
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %86
  %96 = call i8* @_ZNK9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %92) #11
  br label %100

97:                                               ; preds = %86
  %98 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %91, i64 0, i32 1, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  br label %100

100:                                              ; preds = %97, %95
  %101 = phi i8* [ %96, %95 ], [ %99, %97 ]
  %102 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %92) #11
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %110, label %104

104:                                              ; preds = %100
  %105 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %92) #11
  %106 = icmp ult i64 %105, 4294967296
  br i1 %106, label %108, label %107, !prof !3

107:                                              ; preds = %104
  call void @llvm.trap() #11
  unreachable

108:                                              ; preds = %104
  %109 = trunc i64 %105 to i32
  br label %113

110:                                              ; preds = %100
  %111 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %91, i64 0, i32 1, i32 0, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  br label %113

113:                                              ; preds = %108, %110
  %114 = phi i32 [ %109, %108 ], [ %112, %110 ]
  %115 = zext i32 %114 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  store i64 %115, i64* %7, align 8
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.2"* nonnull %4, i8* nonnull %63, i32 8)
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.2"* nonnull %4, i8* %101, i32 %114)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 1
  %117 = icmp eq %"struct.WTF::KeyValuePair"* %116, %34
  br i1 %117, label %69, label %118

118:                                              ; preds = %113, %131
  %119 = phi %"struct.WTF::KeyValuePair"* [ %132, %131 ], [ %116, %113 ]
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %119, i64 0, i32 0, i32 0, i32 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %64) #11
  store i8* %65, i8** %66, align 8
  store i32 32, i32* %67, align 8
  store i32 1, i32* %68, align 4
  store i8 1, i8* %65, align 8
  %124 = icmp eq i32 %121, 1
  br i1 %124, label %126, label %125

125:                                              ; preds = %123
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %64) #11
  br label %134

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %119, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %129, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %64) #11
  br i1 %130, label %131, label %134

131:                                              ; preds = %126, %118
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %119, i64 1
  %133 = icmp eq %"struct.WTF::KeyValuePair"* %132, %34
  br i1 %133, label %69, label %118

134:                                              ; preds = %126, %125
  %135 = icmp eq %"struct.WTF::KeyValuePair"* %119, %34
  br i1 %135, label %69, label %86

136:                                              ; preds = %1, %85, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink32SourceKeyedCachedMetadataHandler8EncodingEv(%"class.blink::SourceKeyedCachedMetadataHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 3, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i64 @strlen(i8* nonnull %4) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i64 [ %7, %6 ], [ 0, %1 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %4, i64 %9) #11
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  ret %"class.WTF::StringImpl"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink32SourceKeyedCachedMetadataHandler12OnMemoryDumpEPNS_20WebProcessMemoryDumpERKN3WTF6StringE(%"class.blink::SourceKeyedCachedMetadataHandler"* nocapture readonly, %"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 1, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %214, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %14, align 8
  %15 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %63, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %36

26:                                               ; preds = %19
  %27 = zext i32 %25 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #11
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %26
  tail call void @llvm.trap() #11
  unreachable

34:                                               ; preds = %26
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %24, align 4
  br label %36

36:                                               ; preds = %19, %34
  %37 = phi i32 [ %35, %34 ], [ %25, %19 ]
  %38 = load atomic i32, i32* %20 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  br i1 %40, label %42, label %52

42:                                               ; preds = %36
  %43 = zext i32 %37 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #11
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %42
  tail call void @llvm.trap() #11
  unreachable

50:                                               ; preds = %42
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %36
  %53 = phi i32 [ %51, %50 ], [ %37, %36 ]
  %54 = load atomic i32, i32* %20 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  %58 = add i32 %53, -1
  store i32 %58, i32* %41, align 4
  br label %59

59:                                               ; preds = %57, %52
  %60 = phi i32 [ %58, %57 ], [ %53, %52 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #11
  br label %63

63:                                               ; preds = %12, %59, %62
  %64 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8** %65, align 8
  %66 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %7)
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %14, align 8
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #11
  br label %82

82:                                               ; preds = %63, %78, %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  %83 = load i32, i32* %9, align 4
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %86 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 1, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %86, i64 %89
  br i1 %84, label %124, label %91

91:                                               ; preds = %82
  %92 = icmp eq i32 %88, 0
  br i1 %92, label %115, label %93

93:                                               ; preds = %91
  %94 = bitcast %"class.WTF::Vector"* %4 to i8*
  %95 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 1, i64 0
  %96 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %98 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  br label %99

99:                                               ; preds = %112, %93
  %100 = phi %"struct.WTF::KeyValuePair"* [ %86, %93 ], [ %113, %112 ]
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 0, i32 0, i32 0, i32 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %112, label %104

104:                                              ; preds = %99
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %94) #11
  store i8* %95, i8** %96, align 8
  store i32 32, i32* %97, align 8
  store i32 1, i32* %98, align 4
  store i8 1, i8* %95, align 8
  %105 = icmp eq i32 %102, 1
  br i1 %105, label %107, label %106

106:                                              ; preds = %104
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %94) #11
  br label %115

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  %110 = load i8, i8* %109, align 1
  %111 = icmp eq i8 %110, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %94) #11
  br i1 %111, label %112, label %115

112:                                              ; preds = %107, %99
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 1
  %114 = icmp eq %"struct.WTF::KeyValuePair"* %113, %90
  br i1 %114, label %124, label %99

115:                                              ; preds = %107, %91, %106
  %116 = phi %"struct.WTF::KeyValuePair"* [ %86, %91 ], [ %100, %106 ], [ %100, %107 ]
  %117 = icmp eq %"struct.WTF::KeyValuePair"* %116, %90
  br i1 %117, label %124, label %118

118:                                              ; preds = %115
  %119 = bitcast %"class.WTF::Vector"* %5 to i8*
  %120 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 1, i64 0
  %121 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %123 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  br label %168

124:                                              ; preds = %112, %190, %212, %209, %82, %115
  %125 = phi i64 [ 0, %115 ], [ 0, %82 ], [ %193, %209 ], [ %193, %212 ], [ %193, %190 ], [ 0, %112 ]
  %126 = call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %6) #11
  call void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"* %126, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 %125) #11
  %127 = call i64 @_ZNK5blink22WebMemoryAllocatorDump4GuidEv(%"class.blink::WebMemoryAllocatorDump"* %126) #11
  %128 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #11
  %129 = load i8*, i8** @_ZN3WTF10Partitions24kAllocatedObjectPoolNameE, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %133, label %131

131:                                              ; preds = %124
  %132 = call i64 @strlen(i8* nonnull %129) #12
  br label %133

133:                                              ; preds = %124, %131
  %134 = phi i64 [ %132, %131 ], [ 0, %124 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* %129, i64 %134) #11
  call void @_ZN5blink20WebProcessMemoryDump16AddSuballocationEmRKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %1, i64 %127, %"class.WTF::String"* nonnull dereferenceable(8) %8) #11
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #11
  br label %151

151:                                              ; preds = %133, %147, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #11
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %151
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #11
  br label %167

167:                                              ; preds = %151, %163, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  br label %214

168:                                              ; preds = %118, %212
  %169 = phi i64 [ 0, %118 ], [ %193, %212 ]
  %170 = phi %"struct.WTF::KeyValuePair"* [ %116, %118 ], [ %197, %212 ]
  %171 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 0, i32 1, i32 0
  %172 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %172, i64 0, i32 2
  %174 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %173) #11
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %168
  %177 = call i8* @_ZNK9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %173) #11
  br label %178

178:                                              ; preds = %168, %176
  %179 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %173) #11
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %187, label %181

181:                                              ; preds = %178
  %182 = call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %173) #11
  %183 = icmp ult i64 %182, 4294967296
  br i1 %183, label %185, label %184, !prof !3

184:                                              ; preds = %181
  call void @llvm.trap() #11
  unreachable

185:                                              ; preds = %181
  %186 = trunc i64 %182 to i32
  br label %190

187:                                              ; preds = %178
  %188 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %172, i64 0, i32 1, i32 0, i32 0, i32 2
  %189 = load i32, i32* %188, align 4
  br label %190

190:                                              ; preds = %185, %187
  %191 = phi i32 [ %186, %185 ], [ %189, %187 ]
  %192 = zext i32 %191 to i64
  %193 = add i64 %169, %192
  %194 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %170, i64 1
  %195 = icmp eq %"struct.WTF::KeyValuePair"* %194, %90
  br i1 %195, label %124, label %196

196:                                              ; preds = %190, %209
  %197 = phi %"struct.WTF::KeyValuePair"* [ %210, %209 ], [ %194, %190 ]
  %198 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %197, i64 0, i32 0, i32 0, i32 0, i32 2
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %209, label %201

201:                                              ; preds = %196
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %119) #11
  store i8* %120, i8** %121, align 8
  store i32 32, i32* %122, align 8
  store i32 1, i32* %123, align 4
  store i8 1, i8* %120, align 8
  %202 = icmp eq i32 %199, 1
  br i1 %202, label %204, label %203

203:                                              ; preds = %201
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %119) #11
  br label %212

204:                                              ; preds = %201
  %205 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %197, i64 0, i32 0, i32 0, i32 0, i32 0
  %206 = load i8*, i8** %205, align 8
  %207 = load i8, i8* %206, align 1
  %208 = icmp eq i8 %207, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %119) #11
  br i1 %208, label %209, label %212

209:                                              ; preds = %204, %196
  %210 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %197, i64 1
  %211 = icmp eq %"struct.WTF::KeyValuePair"* %210, %90
  br i1 %211, label %124, label %196

212:                                              ; preds = %204, %203
  %213 = icmp eq %"struct.WTF::KeyValuePair"* %197, %90
  br i1 %213, label %124, label %168

214:                                              ; preds = %3, %167
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.269", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.269", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.269", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.269"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #11
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.269"* nonnull %6, i8* %16) #11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #11
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #11
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.269"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #11
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.269"* nonnull %5, i8* %45) #11
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.268"* nonnull %46, i8* %25) #11
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.269"* nonnull %5, i8* %49) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #11
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #11
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #11
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #11
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #11
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.269"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #11
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.269"* nonnull %3, i8* %105) #11
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.268"* nonnull %106, i16* %85) #11
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.269"* nonnull %3, i16* %109) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #11
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %118
  call void @llvm.trap() #11
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #11
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #11
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

declare %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink20WebProcessMemoryDump16AddSuballocationEmRKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"*, i64, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i64 @_ZNK5blink22WebMemoryAllocatorDump4GuidEv(%"class.blink::WebMemoryAllocatorDump"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32SourceKeyedCachedMetadataHandler27SetSerializedCachedMetadataEN9mojo_base9BigBufferE(%"class.blink::SourceKeyedCachedMetadataHandler"*, %"class.mojo_base::BigBuffer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = alloca %class.scoped_refptr, align 8
  %5 = tail call i8* @_ZN9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %1) #11
  %6 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %1) #11
  %7 = icmp ult i64 %6, 4
  br i1 %7, label %98, label %8

8:                                                ; preds = %2
  %9 = bitcast i8* %5 to i32*
  %10 = load i32, i32* %9, align 1
  %11 = icmp ne i32 %10, 1
  %12 = and i64 %6, -4
  %13 = icmp eq i64 %12, 4
  %14 = or i1 %13, %11
  br i1 %14, label %98, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds i8, i8* %5, i64 4
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 1
  %19 = add i64 %6, -8
  %20 = icmp sgt i32 %18, 0
  br i1 %20, label %21, label %93

21:                                               ; preds = %15
  %22 = getelementptr inbounds i8, i8* %5, i64 8
  %23 = bitcast %"class.WTF::Vector"* %3 to i8*
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 1, i64 0
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %28 = bitcast %class.scoped_refptr* %4 to i8*
  %29 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %30 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0
  br label %34

32:                                               ; preds = %90
  %33 = icmp eq i32 %92, %18
  br i1 %33, label %93, label %34

34:                                               ; preds = %32, %21
  %35 = phi i8* [ %22, %21 ], [ %82, %32 ]
  %36 = phi i64 [ %19, %21 ], [ %81, %32 ]
  %37 = phi i32 [ 0, %21 ], [ %92, %32 ]
  %38 = icmp ult i64 %36, 40
  br i1 %38, label %39, label %40

39:                                               ; preds = %34
  call void @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E5clearEv(%"class.WTF::HashTable"* %30) #11
  br label %98

40:                                               ; preds = %34
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #11
  store i8* %24, i8** %25, align 8
  store i32 32, i32* %26, align 8
  store i32 32, i32* %27, align 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #11
  %41 = getelementptr inbounds i8, i8* %35, i64 32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %24, i8* align 1 %35, i64 32, i1 false) #11
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 1
  %44 = getelementptr inbounds i8, i8* %35, i64 40
  %45 = add i64 %36, -40
  %46 = icmp ult i64 %45, %43
  br i1 %46, label %47, label %48

47:                                               ; preds = %40
  call void @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E5clearEv(%"class.WTF::HashTable"* %30) #11
  br label %79

48:                                               ; preds = %40
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  store %"class.blink::CachedMetadata"* inttoptr (i64 -6148914691236517206 to %"class.blink::CachedMetadata"*), %"class.blink::CachedMetadata"** %29, align 8
  %49 = call %"class.blink::CachedMetadata"* @_ZN5blink14CachedMetadata24CreateFromSerializedDataEPKhm(i8* %44, i64 %43) #11
  store %"class.blink::CachedMetadata"* %49, %"class.blink::CachedMetadata"** %29, align 8
  %50 = icmp eq %"class.blink::CachedMetadata"* %49, null
  br i1 %50, label %76, label %51

51:                                               ; preds = %48
  %52 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6insertINS_17HashMapTranslatorISH_SC_S2_EERS3_S8_EENS_18HashTableAddResultISI_S9_EEOT0_OT1_(%"class.WTF::HashTable"* %30, %"class.WTF::Vector"* nonnull dereferenceable(48) %3, %class.scoped_refptr* nonnull dereferenceable(8) %4) #11
  %53 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %29, align 8
  %54 = icmp eq %"class.blink::CachedMetadata"* %53, null
  br i1 %54, label %76, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %53, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %53, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %57) #11
  %58 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %53, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %76

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %56, i64 6
  %63 = bitcast %"class.base::RefCounted"* %62 to %"class.mojo_base::BigBuffer"*
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %63) #11
  %64 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %56, i64 2
  %65 = bitcast %"class.base::RefCounted"* %64 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %74, label %68, !prof !3

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %56, i64 5, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %73, label %72, !prof !2

72:                                               ; preds = %68
  store i32 0, i32* %69, align 4
  br label %73

73:                                               ; preds = %72, %68
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #11
  br label %74

74:                                               ; preds = %73, %61
  %75 = bitcast %"class.blink::CachedMetadata"* %53 to i8*
  call void @free(i8* %75) #11
  br label %76

76:                                               ; preds = %48, %51, %55, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  %77 = getelementptr inbounds i8, i8* %44, i64 %43
  %78 = sub i64 %45, %43
  br label %79

79:                                               ; preds = %76, %47
  %80 = phi i32 [ 1, %47 ], [ 0, %76 ]
  %81 = phi i64 [ %45, %47 ], [ %78, %76 ]
  %82 = phi i8* [ %44, %47 ], [ %77, %76 ]
  %83 = load i32, i32* %27, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %86, label %85, !prof !2

85:                                               ; preds = %79
  store i32 0, i32* %27, align 4
  br label %86

86:                                               ; preds = %85, %79
  %87 = load i8*, i8** %25, align 8
  %88 = icmp eq i8* %24, %87
  br i1 %88, label %90, label %89, !prof !3

89:                                               ; preds = %86
  call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* nonnull %31, i8* %87) #11
  br label %90

90:                                               ; preds = %86, %89
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #11
  %91 = icmp eq i32 %80, 0
  %92 = add nuw nsw i32 %37, 1
  br i1 %91, label %32, label %98

93:                                               ; preds = %32, %15
  %94 = phi i64 [ %19, %15 ], [ %81, %32 ]
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %98, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 1, i32 0
  call void @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E5clearEv(%"class.WTF::HashTable"* %97) #11
  br label %98

98:                                               ; preds = %90, %39, %93, %8, %96, %2
  ret void
}

declare i8* @_ZN9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #2

declare i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #2

declare %"class.blink::CachedMetadata"* @_ZN5blink14CachedMetadata24CreateFromSerializedDataEPKhm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE6AppendIhEEvPKT_j(%"class.WTF::Vector.2"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !3

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %32) #11
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !3

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #11
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #11
  %50 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !3

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %66) #11
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %67, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !3

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #11
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #11
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #11
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* %96, i8* %97) #11
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #11
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #11
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #11
  %105 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !3

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #11
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32SourceKeyedCachedMetadataHandlerD2Ev(%"class.blink::SourceKeyedCachedMetadataHandler"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink32SourceKeyedCachedMetadataHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::CachedMetadataSender"*, %"class.blink::CachedMetadataSender"** %3, align 8
  store %"class.blink::CachedMetadataSender"* null, %"class.blink::CachedMetadataSender"** %3, align 8
  %5 = icmp eq %"class.blink::CachedMetadataSender"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::CachedMetadataSender"* %4 to void (%"class.blink::CachedMetadataSender"*)***
  %8 = load void (%"class.blink::CachedMetadataSender"*)**, void (%"class.blink::CachedMetadataSender"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::CachedMetadataSender"*)*, void (%"class.blink::CachedMetadataSender"*)** %8, i64 1
  %10 = load void (%"class.blink::CachedMetadataSender"*)*, void (%"class.blink::CachedMetadataSender"*)** %9, align 8
  tail call void %10(%"class.blink::CachedMetadataSender"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::HashMap"* %12 to %"class.WTF::ConditionalDestructor"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS7_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSC_13KeyHashTraitsENS_10HashTraitsIS9_EEEESF_S3_EELb0EED2Ev(%"class.WTF::ConditionalDestructor"* %13) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32SourceKeyedCachedMetadataHandlerD0Ev(%"class.blink::SourceKeyedCachedMetadataHandler"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink32SourceKeyedCachedMetadataHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::CachedMetadataSender"*, %"class.blink::CachedMetadataSender"** %3, align 8
  store %"class.blink::CachedMetadataSender"* null, %"class.blink::CachedMetadataSender"** %3, align 8
  %5 = icmp eq %"class.blink::CachedMetadataSender"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::CachedMetadataSender"* %4 to void (%"class.blink::CachedMetadataSender"*)***
  %8 = load void (%"class.blink::CachedMetadataSender"*)**, void (%"class.blink::CachedMetadataSender"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::CachedMetadataSender"*)*, void (%"class.blink::CachedMetadataSender"*)** %8, i64 1
  %10 = load void (%"class.blink::CachedMetadataSender"*)*, void (%"class.blink::CachedMetadataSender"*)** %9, align 8
  tail call void %10(%"class.blink::CachedMetadataSender"* nonnull %4) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::HashMap"* %12 to %"class.WTF::ConditionalDestructor"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS7_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSC_13KeyHashTraitsENS_10HashTraitsIS9_EEEESF_S3_EELb0EED2Ev(%"class.WTF::ConditionalDestructor"* %13) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21CachedMetadataHandler5TraceEPNS_7VisitorE(%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink32SourceKeyedCachedMetadataHandler24IsServedFromCacheStorageEv(%"class.blink::SourceKeyedCachedMetadataHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.blink::CachedMetadataSender"*, %"class.blink::CachedMetadataSender"** %2, align 8
  %4 = bitcast %"class.blink::CachedMetadataSender"* %3 to i1 (%"class.blink::CachedMetadataSender"*)***
  %5 = load i1 (%"class.blink::CachedMetadataSender"*)**, i1 (%"class.blink::CachedMetadataSender"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::CachedMetadataSender"*)*, i1 (%"class.blink::CachedMetadataSender"*)** %5, i64 3
  %7 = load i1 (%"class.blink::CachedMetadataSender"*)*, i1 (%"class.blink::CachedMetadataSender"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::CachedMetadataSender"* %3) #11
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink32SourceKeyedCachedMetadataHandler16GetCodeCacheSizeEv(%"class.blink::SourceKeyedCachedMetadataHandler"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"*, i8*) local_unnamed_addr #4 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #11
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj64ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.20"*, i8*) local_unnamed_addr #4 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #11
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare i8* @_ZNK9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS7_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSC_13KeyHashTraitsENS_10HashTraitsIS9_EEEESF_S3_EELb0EED2Ev(%"class.WTF::ConditionalDestructor"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::Vector", align 8
  %3 = bitcast %"class.WTF::ConditionalDestructor"* %0 to %"struct.WTF::KeyValuePair"**
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %72, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::ConditionalDestructor", %"class.WTF::ConditionalDestructor"* %0, i64 8
  %8 = bitcast %"class.WTF::ConditionalDestructor"* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %70, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.WTF::Vector"* %2 to i8*
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 1, i64 0
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %17 = zext i32 %9 to i64
  br label %18

18:                                               ; preds = %67, %11
  %19 = phi i64 [ 0, %11 ], [ %68, %67 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %19
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #11
  store i8* %13, i8** %14, align 8
  store i32 32, i32* %15, align 8
  store i32 1, i32* %16, align 4
  store i8 1, i8* %13, align 8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %19, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %25, label %24

24:                                               ; preds = %18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #11
  br label %30

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #11
  br i1 %29, label %67, label %30

30:                                               ; preds = %25, %24
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %19, i32 1, i32 0
  %32 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %31, align 8
  %33 = icmp eq %"class.blink::CachedMetadata"* %32, null
  br i1 %33, label %55, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %32, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %32, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #11
  %37 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %55

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 6
  %42 = bitcast %"class.base::RefCounted"* %41 to %"class.mojo_base::BigBuffer"*
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %42) #11
  %43 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 2
  %44 = bitcast %"class.base::RefCounted"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %53, label %47, !prof !3

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %35, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %47
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %47
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %45) #11
  br label %53

53:                                               ; preds = %52, %40
  %54 = bitcast %"class.blink::CachedMetadata"* %32 to i8*
  call void @free(i8* %54) #11
  br label %55

55:                                               ; preds = %53, %34, %30
  %56 = load i32, i32* %21, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !2

58:                                               ; preds = %55
  store i32 0, i32* %21, align 4
  br label %59

59:                                               ; preds = %58, %55
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %19, i32 0, i32 0, i32 1, i64 0
  %63 = icmp eq i8* %62, %61
  br i1 %63, label %66, label %64, !prof !3

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %65, i8* %61) #11
  br label %66

66:                                               ; preds = %59, %64
  store i8* null, i8** %60, align 8
  br label %67

67:                                               ; preds = %66, %25
  %68 = add nuw nsw i64 %19, 1
  %69 = icmp eq i64 %68, %17
  br i1 %69, label %70, label %18

70:                                               ; preds = %67, %6
  %71 = bitcast %"struct.WTF::KeyValuePair"* %4 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %71) #11
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %3, align 8
  br label %72

72:                                               ; preds = %1, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #11
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6insertINS_17HashMapTranslatorISH_SC_S2_EERS3_S8_EENS_18HashTableAddResultISI_S9_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::Vector"* dereferenceable(48), %class.scoped_refptr* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::Vector", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6ExpandEPS9_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %10 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi %"struct.WTF::KeyValuePair"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = lshr i32 %20, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %87, label %25

25:                                               ; preds = %11
  %26 = and i32 %23, 1
  %27 = icmp eq i32 %23, 1
  br i1 %27, label %62, label %28

28:                                               ; preds = %25
  %29 = sub nsw i32 %23, %26
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i32 [ -1640531527, %28 ], [ %58, %30 ]
  %32 = phi i8* [ %18, %28 ], [ %59, %30 ]
  %33 = phi i32 [ %29, %28 ], [ %60, %30 ]
  %34 = load i8, i8* %32, align 1
  %35 = getelementptr inbounds i8, i8* %32, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %34 to i32
  %38 = add i32 %31, %37
  %39 = shl i32 %38, 16
  %40 = zext i8 %36 to i32
  %41 = shl nuw nsw i32 %40, 11
  %42 = xor i32 %41, %38
  %43 = xor i32 %42, %39
  %44 = lshr i32 %43, 11
  %45 = add i32 %44, %43
  %46 = getelementptr inbounds i8, i8* %32, i64 2
  %47 = load i8, i8* %46, align 1
  %48 = getelementptr inbounds i8, i8* %32, i64 3
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %47 to i32
  %51 = add i32 %45, %50
  %52 = shl i32 %51, 16
  %53 = zext i8 %49 to i32
  %54 = shl nuw nsw i32 %53, 11
  %55 = xor i32 %54, %51
  %56 = xor i32 %55, %52
  %57 = lshr i32 %56, 11
  %58 = add i32 %57, %56
  %59 = getelementptr inbounds i8, i8* %32, i64 4
  %60 = add i32 %33, -2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %30

62:                                               ; preds = %30, %25
  %63 = phi i32 [ undef, %25 ], [ %58, %30 ]
  %64 = phi i32 [ -1640531527, %25 ], [ %58, %30 ]
  %65 = phi i8* [ %18, %25 ], [ %59, %30 ]
  %66 = icmp eq i32 %26, 0
  br i1 %66, label %80, label %67

67:                                               ; preds = %62
  %68 = load i8, i8* %65, align 1
  %69 = getelementptr inbounds i8, i8* %65, i64 1
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %68 to i32
  %72 = add i32 %64, %71
  %73 = shl i32 %72, 16
  %74 = zext i8 %70 to i32
  %75 = shl nuw nsw i32 %74, 11
  %76 = xor i32 %75, %72
  %77 = xor i32 %76, %73
  %78 = lshr i32 %77, 11
  %79 = add i32 %78, %77
  br label %80

80:                                               ; preds = %62, %67
  %81 = phi i32 [ %63, %62 ], [ %79, %67 ]
  %82 = add nsw i32 %23, -1
  %83 = zext i32 %82 to i64
  %84 = shl nuw nsw i64 %83, 1
  %85 = add nuw nsw i64 %84, 2
  %86 = getelementptr i8, i8* %18, i64 %85
  br label %87

87:                                               ; preds = %80, %11
  %88 = phi i32 [ -1640531527, %11 ], [ %81, %80 ]
  %89 = phi i8* [ %18, %11 ], [ %86, %80 ]
  br i1 %22, label %98, label %90

90:                                               ; preds = %87
  %91 = load i8, i8* %89, align 1
  %92 = zext i8 %91 to i32
  %93 = add i32 %88, %92
  %94 = shl i32 %93, 11
  %95 = xor i32 %94, %93
  %96 = lshr i32 %95, 17
  %97 = add i32 %96, %95
  br label %98

98:                                               ; preds = %87, %90
  %99 = phi i32 [ %97, %90 ], [ %88, %87 ]
  %100 = shl i32 %99, 3
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 5
  %103 = add i32 %102, %101
  %104 = shl i32 %103, 2
  %105 = xor i32 %104, %103
  %106 = lshr i32 %105, 15
  %107 = add i32 %106, %105
  %108 = shl i32 %107, 10
  %109 = xor i32 %108, %107
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 -2147483648, i32 %109
  %112 = and i32 %111, %15
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %113
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %113, i32 0, i32 0, i32 0, i32 2
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %183, label %118

118:                                              ; preds = %98
  %119 = bitcast %"class.WTF::Vector"* %4 to i8*
  %120 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 1, i64 0
  %121 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 1
  %123 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 2
  %124 = xor i32 %111, -1
  %125 = lshr i32 %111, 23
  %126 = add i32 %125, %124
  %127 = shl i32 %126, 12
  %128 = xor i32 %127, %126
  %129 = lshr i32 %128, 7
  %130 = xor i32 %129, %128
  %131 = shl i32 %130, 2
  %132 = xor i32 %131, %130
  %133 = lshr i32 %132, 20
  %134 = xor i32 %133, %132
  %135 = or i32 %134, 1
  %136 = zext i32 %135 to i64
  %137 = icmp eq i32 %20, 0
  %138 = zext i32 %20 to i64
  br label %139

139:                                              ; preds = %118, %163
  %140 = phi i32 [ %116, %118 ], [ %171, %163 ]
  %141 = phi i32* [ %115, %118 ], [ %170, %163 ]
  %142 = phi %"struct.WTF::KeyValuePair"* [ %114, %118 ], [ %169, %163 ]
  %143 = phi %"struct.WTF::KeyValuePair"* [ null, %118 ], [ %164, %163 ]
  %144 = phi i64 [ %113, %118 ], [ %168, %163 ]
  %145 = phi i64 [ 0, %118 ], [ %166, %163 ]
  %146 = icmp eq i32 %140, %20
  br i1 %146, label %147, label %153

147:                                              ; preds = %139
  br i1 %137, label %228, label %148

148:                                              ; preds = %147
  %149 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %142, i64 0, i32 0, i32 0, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = call i32 @bcmp(i8* %150, i8* %18, i64 %138) #11
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %228, label %153

153:                                              ; preds = %139, %148
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %119) #11
  store i8* %120, i8** %121, align 8
  store i32 32, i32* %122, align 8
  store i32 1, i32* %123, align 4
  store i8 1, i8* %120, align 8
  %154 = load i32, i32* %141, align 4
  %155 = icmp eq i32 %154, 1
  br i1 %155, label %157, label %156

156:                                              ; preds = %153
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %119) #11
  br label %163

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %142, i64 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  %160 = load i8, i8* %159, align 1
  %161 = icmp eq i8 %160, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %119) #11
  %162 = select i1 %161, %"struct.WTF::KeyValuePair"* %142, %"struct.WTF::KeyValuePair"* %143
  br label %163

163:                                              ; preds = %157, %156
  %164 = phi %"struct.WTF::KeyValuePair"* [ %143, %156 ], [ %162, %157 ]
  %165 = icmp eq i64 %145, 0
  %166 = select i1 %165, i64 %136, i64 %145
  %167 = add i64 %166, %144
  %168 = and i64 %167, %16
  %169 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %168
  %170 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 %168, i32 0, i32 0, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %139

173:                                              ; preds = %163
  %174 = icmp eq %"struct.WTF::KeyValuePair"* %164, null
  br i1 %174, label %183, label %175

175:                                              ; preds = %173
  %176 = bitcast %"struct.WTF::KeyValuePair"* %164 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 0, i64 56, i1 false) #11
  %177 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %178 = load i32, i32* %177, align 8
  %179 = add i32 %178, 2147483647
  %180 = and i32 %179, 2147483647
  %181 = and i32 %178, -2147483648
  %182 = or i32 %180, %181
  store i32 %182, i32* %177, align 8
  br label %183

183:                                              ; preds = %98, %173, %175
  %184 = phi %"struct.WTF::KeyValuePair"* [ %164, %175 ], [ %169, %173 ], [ %114, %98 ]
  %185 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %184, i64 0, i32 0
  %186 = call dereferenceable(48) %"class.WTF::Vector"* @_ZN3WTF6VectorIhLj32ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector"* %185, %"class.WTF::Vector"* dereferenceable(48) %1) #11
  %187 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %2, i64 0, i32 0
  %188 = bitcast %class.scoped_refptr* %2 to i64*
  %189 = load i64, i64* %188, align 8
  store %"class.blink::CachedMetadata"* null, %"class.blink::CachedMetadata"** %187, align 8
  %190 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %184, i64 0, i32 1
  %191 = bitcast %class.scoped_refptr* %190 to i64*
  %192 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %190, i64 0, i32 0
  %193 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %192, align 8
  store i64 %189, i64* %191, align 8
  %194 = icmp eq %"class.blink::CachedMetadata"* %193, null
  br i1 %194, label %216, label %195

195:                                              ; preds = %183
  %196 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %193, i64 0, i32 0, i32 0
  %197 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %193, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %197) #11
  %198 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %193, i64 0, i32 0, i32 0, i32 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %216

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %196, i64 6
  %203 = bitcast %"class.base::RefCounted"* %202 to %"class.mojo_base::BigBuffer"*
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %203) #11
  %204 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %196, i64 2
  %205 = bitcast %"class.base::RefCounted"* %204 to i8**
  %206 = load i8*, i8** %205, align 8
  %207 = icmp eq i8* %206, null
  br i1 %207, label %214, label %208, !prof !3

208:                                              ; preds = %201
  %209 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %196, i64 5, i32 0, i32 0
  %210 = load i32, i32* %209, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %213, label %212, !prof !2

212:                                              ; preds = %208
  store i32 0, i32* %209, align 4
  br label %213

213:                                              ; preds = %212, %208
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %206) #11
  br label %214

214:                                              ; preds = %213, %201
  %215 = bitcast %"class.blink::CachedMetadata"* %193 to i8*
  call void @free(i8* %215) #11
  br label %216

216:                                              ; preds = %183, %195, %214
  %217 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %218 = load i32, i32* %217, align 4
  %219 = add i32 %218, 1
  store i32 %219, i32* %217, align 4
  %220 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %221 = load i32, i32* %220, align 8
  %222 = add i32 %221, %219
  %223 = shl i32 %222, 1
  %224 = load i32, i32* %13, align 8
  %225 = icmp ult i32 %223, %224
  br i1 %225, label %228, label %226

226:                                              ; preds = %216
  %227 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6ExpandEPS9_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %184)
  br label %228

228:                                              ; preds = %147, %148, %216, %226
  %229 = phi i8 [ 1, %216 ], [ 1, %226 ], [ 0, %148 ], [ 0, %147 ]
  %230 = phi %"struct.WTF::KeyValuePair"* [ %184, %216 ], [ %227, %226 ], [ %142, %148 ], [ %142, %147 ]
  %231 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %230, 0
  %232 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %231, i8 %229, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %232
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6ExpandEPS9_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 56
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([161 x i8], [161 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6VectorIhLj32ENS_18PartitionAllocatorEEE13scoped_refptrIN5blink14CachedMetadataEEEEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E8RehashToEPS9_jSJ_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #11
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E8RehashToEPS9_jSJ_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::Vector", align 8
  %6 = alloca %"class.WTF::HashTable", align 8
  %7 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %6, i64 0, i32 3
  %12 = bitcast %"class.WTF::HashTable"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %8, align 8
  store i32 %2, i32* %9, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %15, label %17, label %22

17:                                               ; preds = %4
  %18 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.WTF::HashTable"* %6 to i64*
  br label %34

22:                                               ; preds = %4
  %23 = bitcast %"class.WTF::Vector"* %5 to i8*
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 1, i64 0
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %5, i64 0, i32 0, i32 0, i32 2
  %28 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %29 = ptrtoint %"struct.WTF::KeyValuePair"* %28 to i64
  br label %45

30:                                               ; preds = %74
  %31 = bitcast %"class.WTF::HashTable"* %6 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %34

34:                                               ; preds = %17, %30
  %35 = phi i64* [ %21, %17 ], [ %31, %30 ]
  %36 = phi i64* [ %19, %17 ], [ %33, %30 ]
  %37 = phi i64 [ %18, %17 ], [ %32, %30 ]
  %38 = phi i64 [ %20, %17 ], [ %75, %30 ]
  %39 = phi %"struct.WTF::KeyValuePair"* [ null, %17 ], [ %78, %30 ]
  %40 = phi i32 [ 0, %17 ], [ %76, %30 ]
  store atomic i64 %37, i64* %36 monotonic, align 8
  store i32 %2, i32* %13, align 8
  store i64 %38, i64* %35, align 8
  store i32 %40, i32* %9, align 8
  call void @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E5clearEv(%"class.WTF::HashTable"* nonnull %6)
  %41 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, -2147483648
  store i32 %43, i32* %41, align 8
  %44 = bitcast %"class.WTF::HashTable"* %6 to %"class.WTF::ConditionalDestructor"*
  call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS4_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS7_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSC_13KeyHashTraitsENS_10HashTraitsIS9_EEEESF_S3_EELb0EED2Ev(%"class.WTF::ConditionalDestructor"* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  ret %"struct.WTF::KeyValuePair"* %39

45:                                               ; preds = %22, %74
  %46 = phi i64 [ %29, %22 ], [ %75, %74 ]
  %47 = phi i32 [ %14, %22 ], [ %76, %74 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ %28, %22 ], [ %77, %74 ]
  %49 = phi %"struct.WTF::KeyValuePair"* [ null, %22 ], [ %78, %74 ]
  %50 = phi i32 [ 0, %22 ], [ %79, %74 ]
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 %51
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %48, i64 %51, i32 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %74, label %56

56:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #11
  store i8* %24, i8** %25, align 8
  store i32 32, i32* %26, align 8
  store i32 1, i32* %27, align 4
  store i8 1, i8* %24, align 8
  %57 = icmp eq i32 %54, 1
  br i1 %57, label %59, label %58

58:                                               ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #11
  br label %64

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #11
  br i1 %63, label %74, label %64

64:                                               ; preds = %58, %59
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 0, i32 0
  %66 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E16LookupForWritingINS_22IdentityHashTranslatorISC_SH_S2_EES3_EENSt3__14pairIPS9_bEERKT0_(%"class.WTF::HashTable"* nonnull %6, %"class.WTF::Vector"* dereferenceable(48) %65) #11
  %67 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %66, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairINS_6VectorIhLj32ENS_18PartitionAllocatorEEE13scoped_refptrIN5blink14CachedMetadataEEEES3_NS_18HashMapValueTraitsINS6_32SourceKeyedCachedMetadataHandler13KeyHashTraitsENS_10HashTraitsIS8_EEEELb1EE4MoveEOS9_RS9_(%"struct.WTF::KeyValuePair"* dereferenceable(56) %52, %"struct.WTF::KeyValuePair"* dereferenceable(56) %67) #11
  %68 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 %51
  %70 = icmp eq %"struct.WTF::KeyValuePair"* %69, %3
  %71 = select i1 %70, %"struct.WTF::KeyValuePair"* %67, %"struct.WTF::KeyValuePair"* %49
  %72 = load i32, i32* %13, align 8
  %73 = ptrtoint %"struct.WTF::KeyValuePair"* %68 to i64
  br label %74

74:                                               ; preds = %45, %59, %64
  %75 = phi i64 [ %46, %59 ], [ %73, %64 ], [ %46, %45 ]
  %76 = phi i32 [ %47, %59 ], [ %72, %64 ], [ %47, %45 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %48, %59 ], [ %68, %64 ], [ %48, %45 ]
  %78 = phi %"struct.WTF::KeyValuePair"* [ %49, %59 ], [ %71, %64 ], [ %49, %45 ]
  %79 = add i32 %50, 1
  %80 = icmp eq i32 %79, %76
  br i1 %80, label %30, label %45
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E5clearEv(%"class.WTF::HashTable"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::Vector", align 8
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %73, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %69, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.WTF::Vector"* %2 to i8*
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 1, i64 0
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %2, i64 0, i32 0, i32 0, i32 2
  %16 = zext i32 %8 to i64
  br label %17

17:                                               ; preds = %66, %10
  %18 = phi i64 [ 0, %10 ], [ %67, %66 ]
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %18
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #11
  store i8* %12, i8** %13, align 8
  store i32 32, i32* %14, align 8
  store i32 1, i32* %15, align 4
  store i8 1, i8* %12, align 8
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %18, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %24, label %23

23:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #11
  br label %29

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #11
  br i1 %28, label %66, label %29

29:                                               ; preds = %24, %23
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %18, i32 1, i32 0
  %31 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %30, align 8
  %32 = icmp eq %"class.blink::CachedMetadata"* %31, null
  br i1 %32, label %54, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %31, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %31, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #11
  %36 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %54

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 6
  %41 = bitcast %"class.base::RefCounted"* %40 to %"class.mojo_base::BigBuffer"*
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %41) #11
  %42 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 2
  %43 = bitcast %"class.base::RefCounted"* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %52, label %46, !prof !3

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %34, i64 5, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %51, label %50, !prof !2

50:                                               ; preds = %46
  store i32 0, i32* %47, align 4
  br label %51

51:                                               ; preds = %50, %46
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %44) #11
  br label %52

52:                                               ; preds = %51, %39
  %53 = bitcast %"class.blink::CachedMetadata"* %31 to i8*
  call void @free(i8* %53) #11
  br label %54

54:                                               ; preds = %52, %33, %29
  %55 = load i32, i32* %20, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57, !prof !2

57:                                               ; preds = %54
  store i32 0, i32* %20, align 4
  br label %58

58:                                               ; preds = %57, %54
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %18, i32 0, i32 0, i32 1, i64 0
  %62 = icmp eq i8* %61, %60
  br i1 %62, label %65, label %63, !prof !3

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %19, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %64, i8* %60) #11
  br label %65

65:                                               ; preds = %58, %63
  store i8* null, i8** %59, align 8
  br label %66

66:                                               ; preds = %65, %24
  %67 = add nuw nsw i64 %18, 1
  %68 = icmp eq i64 %67, %16
  br i1 %68, label %69, label %17

69:                                               ; preds = %66, %6
  %70 = bitcast %"struct.WTF::KeyValuePair"* %4 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #11
  %71 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 0, i64* %71 monotonic, align 8
  store i32 0, i32* %7, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  store i32 0, i32* %72, align 4
  br label %73

73:                                               ; preds = %1, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairINS_6VectorIhLj32ENS_18PartitionAllocatorEEE13scoped_refptrIN5blink14CachedMetadataEEEES3_NS_18HashMapValueTraitsINS6_32SourceKeyedCachedMetadataHandler13KeyHashTraitsENS_10HashTraitsIS8_EEEELb1EE4MoveEOS9_RS9_(%"struct.WTF::KeyValuePair"* dereferenceable(56), %"struct.WTF::KeyValuePair"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %3, align 8
  %5 = icmp eq %"class.blink::CachedMetadata"* %4, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %4, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #11
  %9 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %27

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 6
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.mojo_base::BigBuffer"*
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %14) #11
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 2
  %16 = bitcast %"class.base::RefCounted"* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %25, label %19, !prof !3

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 5, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23, !prof !2

23:                                               ; preds = %19
  store i32 0, i32* %20, align 4
  br label %24

24:                                               ; preds = %23, %19
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #11
  br label %25

25:                                               ; preds = %24, %12
  %26 = bitcast %"class.blink::CachedMetadata"* %4 to i8*
  tail call void @free(i8* %26) #11
  br label %27

27:                                               ; preds = %25, %6, %2
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %27
  store i32 0, i32* %28, align 4
  br label %32

32:                                               ; preds = %31, %27
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %36 = icmp eq i8* %35, %34
  br i1 %36, label %39, label %37, !prof !3

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %38, i8* %34) #11
  br label %39

39:                                               ; preds = %32, %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0
  store i8* %35, i8** %33, align 8
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 32, i32* %41, align 8
  store i32 0, i32* %28, align 4
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIhS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"* %40, %"class.WTF::VectorBuffer"* dereferenceable(48) %42, i64 0, i64 0) #11
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %44, i64 0, i32 0
  %46 = bitcast %class.scoped_refptr* %44 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %class.scoped_refptr* %43 to i64*
  store i64 %47, i64* %48, align 8
  store %"class.blink::CachedMetadata"* null, %"class.blink::CachedMetadata"** %45, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E16LookupForWritingINS_22IdentityHashTranslatorISC_SH_S2_EES3_EENSt3__14pairIPS9_bEERKT0_(%"class.WTF::HashTable"*, %"class.WTF::Vector"* dereferenceable(48)) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = lshr i32 %13, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %80, label %18

18:                                               ; preds = %2
  %19 = and i32 %16, 1
  %20 = icmp eq i32 %16, 1
  br i1 %20, label %55, label %21

21:                                               ; preds = %18
  %22 = sub nsw i32 %16, %19
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i32 [ -1640531527, %21 ], [ %51, %23 ]
  %25 = phi i8* [ %11, %21 ], [ %52, %23 ]
  %26 = phi i32 [ %22, %21 ], [ %53, %23 ]
  %27 = load i8, i8* %25, align 1
  %28 = getelementptr inbounds i8, i8* %25, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %27 to i32
  %31 = add i32 %24, %30
  %32 = shl i32 %31, 16
  %33 = zext i8 %29 to i32
  %34 = shl nuw nsw i32 %33, 11
  %35 = xor i32 %34, %31
  %36 = xor i32 %35, %32
  %37 = lshr i32 %36, 11
  %38 = add i32 %37, %36
  %39 = getelementptr inbounds i8, i8* %25, i64 2
  %40 = load i8, i8* %39, align 1
  %41 = getelementptr inbounds i8, i8* %25, i64 3
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %40 to i32
  %44 = add i32 %38, %43
  %45 = shl i32 %44, 16
  %46 = zext i8 %42 to i32
  %47 = shl nuw nsw i32 %46, 11
  %48 = xor i32 %47, %44
  %49 = xor i32 %48, %45
  %50 = lshr i32 %49, 11
  %51 = add i32 %50, %49
  %52 = getelementptr inbounds i8, i8* %25, i64 4
  %53 = add i32 %26, -2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %23

55:                                               ; preds = %23, %18
  %56 = phi i32 [ undef, %18 ], [ %51, %23 ]
  %57 = phi i32 [ -1640531527, %18 ], [ %51, %23 ]
  %58 = phi i8* [ %11, %18 ], [ %52, %23 ]
  %59 = icmp eq i32 %19, 0
  br i1 %59, label %73, label %60

60:                                               ; preds = %55
  %61 = load i8, i8* %58, align 1
  %62 = getelementptr inbounds i8, i8* %58, i64 1
  %63 = load i8, i8* %62, align 1
  %64 = zext i8 %61 to i32
  %65 = add i32 %57, %64
  %66 = shl i32 %65, 16
  %67 = zext i8 %63 to i32
  %68 = shl nuw nsw i32 %67, 11
  %69 = xor i32 %68, %65
  %70 = xor i32 %69, %66
  %71 = lshr i32 %70, 11
  %72 = add i32 %71, %70
  br label %73

73:                                               ; preds = %55, %60
  %74 = phi i32 [ %56, %55 ], [ %72, %60 ]
  %75 = add nsw i32 %16, -1
  %76 = zext i32 %75 to i64
  %77 = shl nuw nsw i64 %76, 1
  %78 = add nuw nsw i64 %77, 2
  %79 = getelementptr i8, i8* %11, i64 %78
  br label %80

80:                                               ; preds = %73, %2
  %81 = phi i32 [ -1640531527, %2 ], [ %74, %73 ]
  %82 = phi i8* [ %11, %2 ], [ %79, %73 ]
  br i1 %15, label %91, label %83

83:                                               ; preds = %80
  %84 = load i8, i8* %82, align 1
  %85 = zext i8 %84 to i32
  %86 = add i32 %81, %85
  %87 = shl i32 %86, 11
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 17
  %90 = add i32 %89, %88
  br label %91

91:                                               ; preds = %80, %83
  %92 = phi i32 [ %90, %83 ], [ %81, %80 ]
  %93 = shl i32 %92, 3
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 5
  %96 = add i32 %95, %94
  %97 = shl i32 %96, 2
  %98 = xor i32 %97, %96
  %99 = lshr i32 %98, 15
  %100 = add i32 %99, %98
  %101 = shl i32 %100, 10
  %102 = xor i32 %101, %100
  %103 = icmp eq i32 %102, 0
  %104 = select i1 %103, i32 -2147483648, i32 %102
  %105 = and i32 %104, %8
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %106
  %108 = ptrtoint %"struct.WTF::KeyValuePair"* %107 to i64
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %106, i32 0, i32 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %91
  %113 = bitcast %"class.WTF::Vector"* %3 to i8*
  %114 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 1, i64 0
  %115 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  %118 = xor i32 %104, -1
  %119 = lshr i32 %104, 23
  %120 = add i32 %119, %118
  %121 = shl i32 %120, 12
  %122 = xor i32 %121, %120
  %123 = lshr i32 %122, 7
  %124 = xor i32 %123, %122
  %125 = shl i32 %124, 2
  %126 = xor i32 %125, %124
  %127 = lshr i32 %126, 20
  %128 = xor i32 %127, %126
  %129 = or i32 %128, 1
  %130 = zext i32 %129 to i64
  %131 = icmp eq i32 %13, 0
  %132 = zext i32 %13 to i64
  br label %141

133:                                              ; preds = %167
  %134 = ptrtoint %"struct.WTF::KeyValuePair"* %173 to i64
  br label %135

135:                                              ; preds = %133, %91
  %136 = phi i64 [ %108, %91 ], [ %134, %133 ]
  %137 = phi %"struct.WTF::KeyValuePair"* [ null, %91 ], [ %168, %133 ]
  %138 = icmp eq %"struct.WTF::KeyValuePair"* %137, null
  %139 = ptrtoint %"struct.WTF::KeyValuePair"* %137 to i64
  %140 = select i1 %138, i64 %136, i64 %139
  br label %178

141:                                              ; preds = %112, %167
  %142 = phi %"struct.WTF::KeyValuePair"* [ null, %112 ], [ %168, %167 ]
  %143 = phi i32 [ %110, %112 ], [ %176, %167 ]
  %144 = phi i32* [ %109, %112 ], [ %175, %167 ]
  %145 = phi i64 [ %108, %112 ], [ %174, %167 ]
  %146 = phi %"struct.WTF::KeyValuePair"* [ %107, %112 ], [ %173, %167 ]
  %147 = phi i64 [ %106, %112 ], [ %172, %167 ]
  %148 = phi i64 [ 0, %112 ], [ %170, %167 ]
  %149 = icmp eq i32 %143, %13
  br i1 %149, label %150, label %156

150:                                              ; preds = %141
  br i1 %131, label %178, label %151

151:                                              ; preds = %150
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i8*, i8** %152, align 8
  %154 = call i32 @bcmp(i8* %153, i8* %11, i64 %132) #11
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %178, label %156

156:                                              ; preds = %141, %151
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %113) #11
  store i8* %114, i8** %115, align 8
  store i32 32, i32* %116, align 8
  store i32 1, i32* %117, align 4
  store i8 1, i8* %114, align 8
  %157 = load i32, i32* %144, align 4
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %160, label %159

159:                                              ; preds = %156
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %113) #11
  br label %167

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i8*, i8** %161, align 8
  %163 = load i8, i8* %162, align 1
  %164 = icmp eq i8 %163, 1
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %113) #11
  %165 = inttoptr i64 %145 to %"struct.WTF::KeyValuePair"*
  %166 = select i1 %164, %"struct.WTF::KeyValuePair"* %165, %"struct.WTF::KeyValuePair"* %142
  br label %167

167:                                              ; preds = %160, %159
  %168 = phi %"struct.WTF::KeyValuePair"* [ %142, %159 ], [ %166, %160 ]
  %169 = icmp eq i64 %148, 0
  %170 = select i1 %169, i64 %130, i64 %148
  %171 = add i64 %170, %147
  %172 = and i64 %171, %9
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %172
  %174 = ptrtoint %"struct.WTF::KeyValuePair"* %173 to i64
  %175 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %172, i32 0, i32 0, i32 0, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %133, label %141

178:                                              ; preds = %150, %151, %135
  %179 = phi i64 [ %140, %135 ], [ %145, %151 ], [ %145, %150 ]
  %180 = phi i8 [ 0, %135 ], [ 1, %151 ], [ 1, %150 ]
  %181 = inttoptr i64 %179 to %"struct.WTF::KeyValuePair"*
  %182 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %181, 0
  %183 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %182, i8 %180, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %183
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIhS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"*, %"class.WTF::VectorBuffer"* dereferenceable(48), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 1, i64 0
  %11 = icmp eq i8* %9, %10
  %12 = ptrtoint i8* %9 to i64
  br i1 %11, label %30, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %17 = icmp eq i8* %15, %16
  br i1 %17, label %39, label %18

18:                                               ; preds = %13
  %19 = ptrtoint i8* %15 to i64
  %20 = bitcast %"class.WTF::VectorBuffer"* %1 to i64*
  %21 = bitcast %"class.WTF::VectorBuffer"* %0 to i64*
  store atomic i64 %12, i64* %20 monotonic, align 8
  store atomic i64 %19, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 1
  %24 = load i32, i32* %22, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %22, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %28 = load i32, i32* %26, align 4
  %29 = load i32, i32* %27, align 4
  store i32 %29, i32* %26, align 4
  store i32 %28, i32* %27, align 4
  br label %262

30:                                               ; preds = %4
  %31 = lshr i64 %2, 32
  %32 = trunc i64 %31 to i32
  %33 = trunc i64 %2 to i32
  %34 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %37 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %13, %30
  %40 = phi i8* [ %38, %30 ], [ %15, %13 ]
  %41 = phi i32 [ %32, %30 ], [ 0, %13 ]
  %42 = phi i32 [ %33, %30 ], [ 0, %13 ]
  %43 = phi i32 [ %35, %30 ], [ 0, %13 ]
  %44 = phi i8* [ %9, %30 ], [ null, %13 ]
  %45 = phi i8* [ %36, %30 ], [ null, %13 ]
  %46 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %47 = icmp eq i8* %40, %46
  br i1 %47, label %48, label %51

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  br label %51

51:                                               ; preds = %39, %48
  %52 = phi i32 [ %7, %48 ], [ 0, %39 ]
  %53 = phi i32 [ %5, %48 ], [ 0, %39 ]
  %54 = phi i32 [ %50, %48 ], [ 0, %39 ]
  %55 = phi i8* [ %46, %48 ], [ null, %39 ]
  %56 = phi i8* [ %10, %48 ], [ null, %39 ]
  %57 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 1
  %59 = load i32, i32* %57, align 4
  %60 = load i32, i32* %58, align 4
  store i32 %60, i32* %57, align 4
  store i32 %59, i32* %58, align 4
  %61 = icmp eq i8* %44, null
  %62 = icmp ne i8* %55, null
  %63 = or i1 %61, %62
  br i1 %63, label %64, label %66

64:                                               ; preds = %51
  %65 = and i1 %61, %62
  br i1 %65, label %66, label %74

66:                                               ; preds = %64, %51
  %67 = phi %"class.WTF::VectorBuffer"* [ %1, %51 ], [ %0, %64 ]
  %68 = phi %"class.WTF::VectorBuffer"* [ %0, %51 ], [ %1, %64 ]
  %69 = phi i8* [ %46, %51 ], [ %10, %64 ]
  %70 = bitcast %"class.WTF::VectorBuffer"* %67 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.WTF::VectorBuffer"* %68 to i64*
  store atomic i64 %71, i64* %72 monotonic, align 8
  %73 = ptrtoint i8* %69 to i64
  store atomic i64 %73, i64* %70 monotonic, align 8
  br label %74

74:                                               ; preds = %66, %64
  %75 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %76 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %77 = load i32, i32* %75, align 4
  %78 = load i32, i32* %76, align 4
  store i32 %78, i32* %75, align 4
  store i32 %77, i32* %76, align 4
  %79 = icmp ne i8* %44, null
  %80 = icmp ult i32 %43, 32
  %81 = icmp eq i32 %42, %41
  %82 = icmp eq i32 %53, %52
  br label %83

83:                                               ; preds = %74, %260
  %84 = phi i32 [ 0, %74 ], [ %115, %260 ]
  %85 = icmp ult i32 %84, %43
  %86 = and i1 %79, %85
  %87 = and i1 %80, %86
  %88 = select i1 %87, i32 %43, i32 32
  br i1 %81, label %98, label %89

89:                                               ; preds = %83
  %90 = icmp ult i32 %84, %42
  %91 = icmp ult i32 %42, %88
  %92 = and i1 %90, %91
  %93 = select i1 %92, i32 %42, i32 %88
  %94 = icmp ult i32 %84, %41
  br i1 %94, label %95, label %98

95:                                               ; preds = %89
  %96 = icmp ult i32 %41, %93
  %97 = select i1 %96, i32 %41, i32 %93
  br label %98

98:                                               ; preds = %83, %95, %89
  %99 = phi i32 [ %97, %95 ], [ %93, %89 ], [ %88, %83 ]
  %100 = icmp ult i32 %84, %54
  %101 = and i1 %62, %100
  %102 = icmp ult i32 %54, %99
  %103 = and i1 %101, %102
  %104 = select i1 %103, i32 %54, i32 %99
  br i1 %82, label %114, label %105

105:                                              ; preds = %98
  %106 = icmp ult i32 %84, %53
  %107 = icmp ult i32 %53, %104
  %108 = and i1 %106, %107
  %109 = select i1 %108, i32 %53, i32 %104
  %110 = icmp ult i32 %84, %52
  br i1 %110, label %111, label %114

111:                                              ; preds = %105
  %112 = icmp ult i32 %52, %109
  %113 = select i1 %112, i32 %52, i32 %109
  br label %114

114:                                              ; preds = %98, %111, %105
  %115 = phi i32 [ %113, %111 ], [ %109, %105 ], [ %104, %98 ]
  br i1 %86, label %116, label %121

116:                                              ; preds = %114
  %117 = icmp ult i32 %84, %42
  %118 = or i1 %81, %117
  %119 = icmp uge i32 %84, %41
  %120 = or i1 %119, %118
  br label %121

121:                                              ; preds = %116, %114
  %122 = phi i1 [ false, %114 ], [ %120, %116 ]
  br i1 %101, label %123, label %231

123:                                              ; preds = %121
  %124 = icmp ult i32 %84, %53
  %125 = or i1 %82, %124
  %126 = xor i1 %125, true
  %127 = icmp ult i32 %84, %52
  %128 = and i1 %127, %126
  %129 = xor i1 %122, true
  %130 = or i1 %128, %129
  %131 = xor i1 %127, true
  %132 = or i1 %125, %131
  br i1 %130, label %231, label %133

133:                                              ; preds = %123
  %134 = zext i32 %84 to i64
  %135 = zext i32 %115 to i64
  %136 = getelementptr inbounds i8, i8* %44, i64 %135
  %137 = icmp eq i32 %84, %115
  br i1 %137, label %260, label %138

138:                                              ; preds = %133
  %139 = getelementptr inbounds i8, i8* %55, i64 %134
  %140 = getelementptr inbounds i8, i8* %44, i64 %134
  %141 = sub nsw i64 %135, %134
  %142 = icmp ult i64 %141, 32
  br i1 %142, label %220, label %143

143:                                              ; preds = %138
  %144 = getelementptr i8, i8* %55, i64 %135
  %145 = icmp ult i8* %140, %144
  %146 = icmp ult i8* %139, %136
  %147 = and i1 %145, %146
  br i1 %147, label %220, label %148

148:                                              ; preds = %143
  %149 = and i64 %141, -32
  %150 = getelementptr i8, i8* %139, i64 %149
  %151 = getelementptr i8, i8* %140, i64 %149
  %152 = add nsw i64 %149, -32
  %153 = lshr exact i64 %152, 5
  %154 = add nuw nsw i64 %153, 1
  %155 = and i64 %154, 1
  %156 = icmp eq i64 %152, 0
  br i1 %156, label %198, label %157

157:                                              ; preds = %148
  %158 = sub nuw nsw i64 %154, %155
  br label %159

159:                                              ; preds = %159, %157
  %160 = phi i64 [ 0, %157 ], [ %195, %159 ]
  %161 = phi i64 [ %158, %157 ], [ %196, %159 ]
  %162 = getelementptr i8, i8* %139, i64 %160
  %163 = getelementptr i8, i8* %140, i64 %160
  %164 = bitcast i8* %163 to <16 x i8>*
  %165 = load <16 x i8>, <16 x i8>* %164, align 1, !alias.scope !4, !noalias !7
  %166 = getelementptr i8, i8* %163, i64 16
  %167 = bitcast i8* %166 to <16 x i8>*
  %168 = load <16 x i8>, <16 x i8>* %167, align 1, !alias.scope !4, !noalias !7
  %169 = bitcast i8* %162 to <16 x i8>*
  %170 = load <16 x i8>, <16 x i8>* %169, align 1, !alias.scope !7
  %171 = getelementptr i8, i8* %162, i64 16
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 1, !alias.scope !7
  %174 = bitcast i8* %163 to <16 x i8>*
  store <16 x i8> %170, <16 x i8>* %174, align 1, !alias.scope !4, !noalias !7
  %175 = bitcast i8* %166 to <16 x i8>*
  store <16 x i8> %173, <16 x i8>* %175, align 1, !alias.scope !4, !noalias !7
  %176 = bitcast i8* %162 to <16 x i8>*
  store <16 x i8> %165, <16 x i8>* %176, align 1, !alias.scope !7
  %177 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %168, <16 x i8>* %177, align 1, !alias.scope !7
  %178 = or i64 %160, 32
  %179 = getelementptr i8, i8* %139, i64 %178
  %180 = getelementptr i8, i8* %140, i64 %178
  %181 = bitcast i8* %180 to <16 x i8>*
  %182 = load <16 x i8>, <16 x i8>* %181, align 1, !alias.scope !4, !noalias !7
  %183 = getelementptr i8, i8* %180, i64 16
  %184 = bitcast i8* %183 to <16 x i8>*
  %185 = load <16 x i8>, <16 x i8>* %184, align 1, !alias.scope !4, !noalias !7
  %186 = bitcast i8* %179 to <16 x i8>*
  %187 = load <16 x i8>, <16 x i8>* %186, align 1, !alias.scope !7
  %188 = getelementptr i8, i8* %179, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !7
  %191 = bitcast i8* %180 to <16 x i8>*
  store <16 x i8> %187, <16 x i8>* %191, align 1, !alias.scope !4, !noalias !7
  %192 = bitcast i8* %183 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %192, align 1, !alias.scope !4, !noalias !7
  %193 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %182, <16 x i8>* %193, align 1, !alias.scope !7
  %194 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %185, <16 x i8>* %194, align 1, !alias.scope !7
  %195 = add i64 %160, 64
  %196 = add i64 %161, -2
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %198, label %159, !llvm.loop !9

198:                                              ; preds = %159, %148
  %199 = phi i64 [ 0, %148 ], [ %195, %159 ]
  %200 = icmp eq i64 %155, 0
  br i1 %200, label %218, label %201

201:                                              ; preds = %198
  %202 = getelementptr i8, i8* %139, i64 %199
  %203 = getelementptr i8, i8* %140, i64 %199
  %204 = bitcast i8* %203 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !4, !noalias !7
  %206 = getelementptr i8, i8* %203, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !4, !noalias !7
  %209 = bitcast i8* %202 to <16 x i8>*
  %210 = load <16 x i8>, <16 x i8>* %209, align 1, !alias.scope !7
  %211 = getelementptr i8, i8* %202, i64 16
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !7
  %214 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %210, <16 x i8>* %214, align 1, !alias.scope !4, !noalias !7
  %215 = bitcast i8* %206 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %215, align 1, !alias.scope !4, !noalias !7
  %216 = bitcast i8* %202 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %216, align 1, !alias.scope !7
  %217 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %217, align 1, !alias.scope !7
  br label %218

218:                                              ; preds = %198, %201
  %219 = icmp eq i64 %141, %149
  br i1 %219, label %260, label %220

220:                                              ; preds = %218, %143, %138
  %221 = phi i8* [ %139, %143 ], [ %139, %138 ], [ %150, %218 ]
  %222 = phi i8* [ %140, %143 ], [ %140, %138 ], [ %151, %218 ]
  br label %223

223:                                              ; preds = %220, %223
  %224 = phi i8* [ %229, %223 ], [ %221, %220 ]
  %225 = phi i8* [ %228, %223 ], [ %222, %220 ]
  %226 = load i8, i8* %225, align 1
  %227 = load i8, i8* %224, align 1
  store i8 %227, i8* %225, align 1
  store i8 %226, i8* %224, align 1
  %228 = getelementptr inbounds i8, i8* %225, i64 1
  %229 = getelementptr inbounds i8, i8* %224, i64 1
  %230 = icmp eq i8* %228, %136
  br i1 %230, label %260, label %223, !llvm.loop !11

231:                                              ; preds = %123, %121
  %232 = phi i1 [ false, %121 ], [ %132, %123 ]
  br i1 %122, label %233, label %246

233:                                              ; preds = %231
  %234 = zext i32 %84 to i64
  %235 = getelementptr inbounds i8, i8* %44, i64 %234
  %236 = getelementptr inbounds i8, i8* %45, i64 %234
  %237 = icmp ne i8* %236, null
  %238 = icmp ne i8* %235, null
  %239 = and i1 %238, %237
  br i1 %239, label %240, label %260, !prof !3

240:                                              ; preds = %233
  %241 = zext i32 %115 to i64
  %242 = getelementptr inbounds i8, i8* %44, i64 %241
  %243 = ptrtoint i8* %242 to i64
  %244 = ptrtoint i8* %235 to i64
  %245 = sub i64 %243, %244
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %236, i8* nonnull align 1 %235, i64 %245, i1 false) #11
  br label %260

246:                                              ; preds = %231
  br i1 %232, label %247, label %260

247:                                              ; preds = %246
  %248 = zext i32 %84 to i64
  %249 = getelementptr inbounds i8, i8* %55, i64 %248
  %250 = getelementptr inbounds i8, i8* %56, i64 %248
  %251 = icmp ne i8* %250, null
  %252 = icmp ne i8* %249, null
  %253 = and i1 %252, %251
  br i1 %253, label %254, label %260, !prof !3

254:                                              ; preds = %247
  %255 = zext i32 %115 to i64
  %256 = getelementptr inbounds i8, i8* %55, i64 %255
  %257 = ptrtoint i8* %256 to i64
  %258 = ptrtoint i8* %249 to i64
  %259 = sub i64 %257, %258
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %250, i8* nonnull align 1 %249, i64 %259, i1 false) #11
  br label %260

260:                                              ; preds = %223, %218, %254, %247, %240, %233, %133, %246
  %261 = icmp ult i32 %115, 32
  br i1 %261, label %83, label %262

262:                                              ; preds = %260, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"class.WTF::Vector"* @_ZN3WTF6VectorIhLj32ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector"* %1, %0
  br i1 %3, label %79, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %54

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %54

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %30, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %24 = ptrtoint i8* %23 to i64
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  store i32 32, i32* %12, align 8
  %26 = icmp eq i8* %23, %22
  br i1 %26, label %30, label %27, !prof !3

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %28, i8* %22) #11
  %29 = load i32, i32* %12, align 8
  br label %30

30:                                               ; preds = %15, %20, %27
  %31 = phi i32 [ 0, %15 ], [ 32, %20 ], [ %29, %27 ]
  %32 = load i32, i32* %7, align 4
  %33 = icmp ult i32 %31, %32
  br i1 %33, label %34, label %54, !prof !3

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %53

38:                                               ; preds = %34
  %39 = icmp ugt i32 %32, 32
  br i1 %39, label %40, label %47

40:                                               ; preds = %38
  %41 = zext i32 %32 to i64
  %42 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %41) #11
  %43 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %42, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %44 = ptrtoint i8* %43 to i64
  %45 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %44, i64* %45 monotonic, align 8
  %46 = trunc i64 %42 to i32
  br label %51

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %49 = ptrtoint i8* %48 to i64
  %50 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  br label %51

51:                                               ; preds = %47, %40
  %52 = phi i32 [ 32, %47 ], [ %46, %40 ]
  store i32 %52, i32* %12, align 8
  br label %54

53:                                               ; preds = %34
  tail call void @_ZN3WTF6VectorIhLj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %32) #11
  br label %54

54:                                               ; preds = %53, %51, %30, %11, %10
  %55 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = load i32, i32* %5, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %60, i8* align 1 %56, i64 %58, i1 false) #11
  %61 = load i8*, i8** %55, align 8
  %62 = load i32, i32* %5, align 4
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  %65 = load i8*, i8** %59, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 %63
  %67 = icmp ne i8* %66, null
  %68 = icmp ne i8* %64, null
  %69 = and i1 %68, %67
  br i1 %69, label %70, label %77, !prof !3

70:                                               ; preds = %54
  %71 = load i32, i32* %7, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %61, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = ptrtoint i8* %64 to i64
  %76 = sub i64 %74, %75
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %66, i8* nonnull align 1 %64, i64 %76, i1 false) #11
  br label %77

77:                                               ; preds = %54, %70
  %78 = load i32, i32* %7, align 4
  store i32 %78, i32* %5, align 4
  br label %79

79:                                               ; preds = %2, %77
  ret %"class.WTF::Vector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj32ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 33
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #11
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %18, i8* nonnull %6) #11
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !3

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #11
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %46, i8* %42) #11
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* @_ZN5blink25MakeGarbageCollectedTraitINS_32SourceKeyedCachedMetadataHandler16SingleKeyHandlerEE4CallIJPS1_RN3WTF6VectorIhLj32ENS6_18PartitionAllocatorEEEEEEPS2_DpOT_(%"class.blink::SourceKeyedCachedMetadataHandler"** dereferenceable(8), %"class.WTF::Vector"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector", align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21CachedMetadataHandlerEEEPhm(i64 72) #11
  %5 = bitcast i8* %4 to %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*
  %6 = bitcast %"class.blink::SourceKeyedCachedMetadataHandler"** %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 1, i64 0
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 1
  store i32 32, i32* %12, align 8
  %13 = icmp ugt i32 %9, 32
  br i1 %13, label %14, label %21

14:                                               ; preds = %2
  %15 = zext i32 %9 to i64
  %16 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %15) #11
  %17 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %18 = ptrtoint i8* %17 to i64
  %19 = bitcast %"class.WTF::Vector"* %3 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %12, align 8
  br label %21

21:                                               ; preds = %14, %2
  %22 = phi i8* [ %10, %2 ], [ %17, %14 ]
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne i8* %27, null
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %33, !prof !3

31:                                               ; preds = %21
  %32 = zext i32 %24 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %22, i8* nonnull align 1 %27, i64 %32, i1 false) #11
  br label %33

33:                                               ; preds = %21, %31
  %34 = bitcast i8* %4 to i32 (...)***
  %35 = getelementptr inbounds i8, i8* %4, i64 8
  store i8 0, i8* %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %36 = getelementptr inbounds i8, i8* %4, i64 16
  %37 = bitcast i8* %36 to i64*
  store i64 %7, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %4, i64 24
  %39 = load i32, i32* %12, align 8
  %40 = getelementptr inbounds i8, i8* %4, i64 40
  %41 = bitcast i8* %38 to i8**
  store i8* %40, i8** %41, align 8
  %42 = getelementptr inbounds i8, i8* %4, i64 32
  %43 = bitcast i8* %42 to i32*
  store i32 32, i32* %43, align 8
  %44 = icmp ugt i32 %39, 32
  br i1 %44, label %45, label %52

45:                                               ; preds = %33
  %46 = zext i32 %39 to i64
  %47 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %46) #11
  %48 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %47, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %49 = ptrtoint i8* %48 to i64
  %50 = bitcast i8* %38 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = trunc i64 %47 to i32
  store i32 %51, i32* %43, align 8
  br label %52

52:                                               ; preds = %45, %33
  %53 = phi i8* [ %40, %33 ], [ %48, %45 ]
  %54 = load i32, i32* %25, align 4
  %55 = getelementptr inbounds i8, i8* %4, i64 36
  %56 = bitcast i8* %55 to i32*
  store i32 %54, i32* %56, align 4
  %57 = load i8*, i8** %11, align 8
  %58 = icmp ne i8* %53, null
  %59 = icmp ne i8* %57, null
  %60 = and i1 %58, %59
  br i1 %60, label %61, label %64, !prof !3

61:                                               ; preds = %52
  %62 = zext i32 %54 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %53, i8* nonnull align 1 %57, i64 %62, i1 false) #11
  %63 = load i32, i32* %25, align 4
  br label %64

64:                                               ; preds = %52, %61
  %65 = phi i32 [ %54, %52 ], [ %63, %61 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67, !prof !2

67:                                               ; preds = %64
  store i32 0, i32* %25, align 4
  br label %68

68:                                               ; preds = %67, %64
  %69 = load i8*, i8** %11, align 8
  %70 = icmp eq i8* %10, %69
  br i1 %70, label %73, label %71, !prof !3

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* nonnull %72, i8* %69) #11
  br label %73

73:                                               ; preds = %68, %71
  store i8* null, i8** %11, align 8
  %74 = getelementptr inbounds i8, i8* %4, i64 -4
  %75 = bitcast i8* %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = or i16 %76, 1
  store atomic i16 %77, i16* %75 release, align 2
  ret %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21CachedMetadataHandlerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21CachedMetadataHandlerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21CachedMetadataHandlerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21CachedMetadataHandlerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #11
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %40, i8* %41) #11
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #11
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #11
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21CachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CachedMetadataHandler"*
  %4 = bitcast i8* %1 to void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)**, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)*, void (%"class.blink::CachedMetadataHandler"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CachedMetadataHandler"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_21CachedMetadataHandlerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CachedMetadataHandler"*
  %3 = bitcast i8* %0 to void (%"class.blink::CachedMetadataHandler"*)***
  %4 = load void (%"class.blink::CachedMetadataHandler"*)**, void (%"class.blink::CachedMetadataHandler"*)*** %3, align 8
  %5 = load void (%"class.blink::CachedMetadataHandler"*)*, void (%"class.blink::CachedMetadataHandler"*)** %4, align 8
  tail call void %5(%"class.blink::CachedMetadataHandler"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21CachedMetadataHandlerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandlerD2Ev(%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !2

7:                                                ; preds = %1
  store i32 0, i32* %4, align 4
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %12 = icmp eq i8* %11, %10
  br i1 %12, label %15, label %13, !prof !3

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %14, i8* %10) #11
  br label %15

15:                                               ; preds = %8, %13
  store i8* null, i8** %9, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandlerD0Ev(%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !2

7:                                                ; preds = %1
  store i32 0, i32* %4, align 4
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %12 = icmp eq i8* %11, %10
  br i1 %12, label %15, label %13, !prof !3

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %3, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %14, i8* %10) #11
  br label %15

15:                                               ; preds = %8, %13
  store i8* null, i8** %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler5TraceEPNS_7VisitorE(%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_32SourceKeyedCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler19ClearCachedMetadataENS_21CachedMetadataHandler14ClearCacheTypeE(%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 1
  br i1 %3, label %46, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::SourceKeyedCachedMetadataHandler"*, %"class.blink::SourceKeyedCachedMetadataHandler"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %6, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %7, i64 0, i32 0
  %10 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6LookupINS_22IdentityHashTranslatorISC_SH_S2_EES3_EEPKS9_RKT0_(%"class.WTF::HashTable"* %9, %"class.WTF::Vector"* dereferenceable(48) %8) #11
  %11 = icmp eq %"struct.WTF::KeyValuePair"* %10, null
  %12 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %7, i64 0, i32 0, i32 0
  %13 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %6, i64 0, i32 1, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %16
  %18 = select i1 %11, %"struct.WTF::KeyValuePair"* %17, %"struct.WTF::KeyValuePair"* %10
  %19 = icmp eq %"struct.WTF::KeyValuePair"* %17, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %4
  tail call void @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E12DeleteBucketERKS9_(%"struct.WTF::KeyValuePair"* dereferenceable(56) %18) #11
  %21 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %6, i64 0, i32 1, i32 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = add i32 %22, 1
  %24 = and i32 %23, 2147483647
  %25 = and i32 %22, -2147483648
  %26 = or i32 %24, %25
  store i32 %26, i32* %21, align 8
  %27 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %6, i64 0, i32 1, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %28, -1
  store i32 %29, i32* %27, align 4
  %30 = mul i32 %29, 6
  %31 = load i32, i32* %14, align 8
  %32 = icmp ult i32 %30, %31
  %33 = icmp ugt i32 %31, 8
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %42

35:                                               ; preds = %20
  %36 = lshr i32 %31, 1
  %37 = zext i32 %36 to i64
  %38 = mul nuw nsw i64 %37, 56
  %39 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([161 x i8], [161 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6VectorIhLj32ENS_18PartitionAllocatorEEE13scoped_refptrIN5blink14CachedMetadataEEEEEEPKcv, i64 0, i64 0)) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %39, i8 0, i64 %38, i1 false) #11
  %40 = bitcast i8* %39 to %"struct.WTF::KeyValuePair"*
  %41 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E8RehashToEPS9_jSJ_(%"class.WTF::HashTable"* %9, %"struct.WTF::KeyValuePair"* %40, i32 %36, %"struct.WTF::KeyValuePair"* null) #11
  br label %42

42:                                               ; preds = %4, %20, %35
  %43 = icmp eq i32 %1, 2
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = load %"class.blink::SourceKeyedCachedMetadataHandler"*, %"class.blink::SourceKeyedCachedMetadataHandler"** %5, align 8
  tail call void @_ZN5blink32SourceKeyedCachedMetadataHandler14SendToPlatformEv(%"class.blink::SourceKeyedCachedMetadataHandler"* %45)
  br label %46

46:                                               ; preds = %2, %44, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler8EncodingEv(%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::SourceKeyedCachedMetadataHandler"*, %"class.blink::SourceKeyedCachedMetadataHandler"** %3, align 8
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %6 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %4, i64 0, i32 3, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = tail call i64 @strlen(i8* nonnull %7) #12
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i64 [ %10, %9 ], [ 0, %1 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %7, i64 %12) #11
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  ret %"class.WTF::StringImpl"* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler24IsServedFromCacheStorageEv(%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::SourceKeyedCachedMetadataHandler"*, %"class.blink::SourceKeyedCachedMetadataHandler"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.blink::CachedMetadataSender"*, %"class.blink::CachedMetadataSender"** %4, align 8
  %6 = bitcast %"class.blink::CachedMetadataSender"* %5 to i1 (%"class.blink::CachedMetadataSender"*)***
  %7 = load i1 (%"class.blink::CachedMetadataSender"*)**, i1 (%"class.blink::CachedMetadataSender"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::CachedMetadataSender"*)*, i1 (%"class.blink::CachedMetadataSender"*)** %7, i64 3
  %9 = load i1 (%"class.blink::CachedMetadataSender"*)*, i1 (%"class.blink::CachedMetadataSender"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::CachedMetadataSender"* %5) #11
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler12OnMemoryDumpEPNS_20WebProcessMemoryDumpERKN3WTF6StringE(%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*, %"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler16GetCodeCacheSizeEv(%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler17SetCachedMetadataEjPKhm(%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*, i32, i8*, i64) unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.scoped_refptr, align 8
  %6 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::SourceKeyedCachedMetadataHandler"*, %"class.blink::SourceKeyedCachedMetadataHandler"** %6, align 8
  %8 = bitcast %class.scoped_refptr* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = tail call noalias i8* @malloc(i64 80) #11
  %10 = icmp ult i64 %3, 4294967296
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %4
  tail call void @llvm.trap() #11
  unreachable

12:                                               ; preds = %4
  %13 = bitcast i8* %9 to %"class.blink::CachedMetadata"*
  %14 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 2
  %15 = trunc i64 %3 to i32
  tail call void @_ZN5blink14CachedMetadataC1EjPKhj(%"class.blink::CachedMetadata"* %13, i32 %1, i8* %2, i32 %15) #11
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %17 = bitcast %class.scoped_refptr* %5 to i8**
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %7, i64 0, i32 1, i32 0
  %19 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6insertINS_17HashMapTranslatorISH_SC_S2_EERS3_S8_EENS_18HashTableAddResultISI_S9_EEOT0_OT1_(%"class.WTF::HashTable"* %18, %"class.WTF::Vector"* dereferenceable(48) %14, %class.scoped_refptr* nonnull dereferenceable(8) %5) #11
  %20 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %16, align 8
  %21 = icmp eq %"class.blink::CachedMetadata"* %20, null
  br i1 %21, label %43, label %22

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %20, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %20, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %24) #11
  %25 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %43

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 6
  %30 = bitcast %"class.base::RefCounted"* %29 to %"class.mojo_base::BigBuffer"*
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %30) #11
  %31 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 2
  %32 = bitcast %"class.base::RefCounted"* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %41, label %35, !prof !3

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %23, i64 5, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39, !prof !2

39:                                               ; preds = %35
  store i32 0, i32* %36, align 4
  br label %40

40:                                               ; preds = %39, %35
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %33) #11
  br label %41

41:                                               ; preds = %40, %28
  %42 = bitcast %"class.blink::CachedMetadata"* %20 to i8*
  call void @free(i8* %42) #11
  br label %43

43:                                               ; preds = %12, %22, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  %44 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 0, i32 1
  %45 = load i8, i8* %44, align 8, !range !12
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = load %"class.blink::SourceKeyedCachedMetadataHandler"*, %"class.blink::SourceKeyedCachedMetadataHandler"** %6, align 8
  call void @_ZN5blink32SourceKeyedCachedMetadataHandler14SendToPlatformEv(%"class.blink::SourceKeyedCachedMetadataHandler"* %48)
  br label %49

49:                                               ; preds = %43, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CachedMetadata"* @_ZNK5blink32SourceKeyedCachedMetadataHandler16SingleKeyHandler17GetCachedMetadataEj(%"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::SourceKeyedCachedMetadataHandler"*, %"class.blink::SourceKeyedCachedMetadataHandler"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler", %"class.blink::SourceKeyedCachedMetadataHandler::SingleKeyHandler"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::SourceKeyedCachedMetadataHandler", %"class.blink::SourceKeyedCachedMetadataHandler"* %4, i64 0, i32 1, i32 0
  %7 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6LookupINS_22IdentityHashTranslatorISC_SH_S2_EERKS3_EEPKS9_RKT0_(%"class.WTF::HashTable"* %6, %"class.WTF::Vector"* dereferenceable(48) %5) #11
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %50, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 0, i32 1, i32 0
  %11 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %10, align 8
  %12 = ptrtoint %"class.blink::CachedMetadata"* %11 to i64
  %13 = icmp eq %"class.blink::CachedMetadata"* %11, null
  br i1 %13, label %50, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %11, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %15) #11
  %16 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %11, i64 0, i32 2
  %17 = tail call i64 @_ZNK9mojo_base9BigBuffer4sizeEv(%"class.mojo_base::BigBuffer"* %16) #11
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = tail call i8* @_ZNK9mojo_base9BigBuffer4dataEv(%"class.mojo_base::BigBuffer"* %16) #11
  br label %24

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %19, %21
  %25 = phi i8* [ %20, %19 ], [ %23, %21 ]
  %26 = getelementptr inbounds i8, i8* %25, i64 4
  %27 = bitcast i8* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %1
  br i1 %29, label %50, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %11, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %15) #11
  %32 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %50

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %31, i64 6
  %37 = bitcast %"class.base::RefCounted"* %36 to %"class.mojo_base::BigBuffer"*
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %37) #11
  %38 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %31, i64 2
  %39 = bitcast %"class.base::RefCounted"* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %48, label %42, !prof !3

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %31, i64 5, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !2

46:                                               ; preds = %42
  store i32 0, i32* %43, align 4
  br label %47

47:                                               ; preds = %46, %42
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %40) #11
  br label %48

48:                                               ; preds = %47, %35
  %49 = bitcast %"class.blink::CachedMetadata"* %11 to i8*
  tail call void @free(i8* %49) #11
  br label %50

50:                                               ; preds = %9, %2, %24, %30, %48
  %51 = phi i64 [ 0, %30 ], [ 0, %48 ], [ %12, %24 ], [ 0, %2 ], [ 0, %9 ]
  %52 = inttoptr i64 %51 to %"class.blink::CachedMetadata"*
  ret %"class.blink::CachedMetadata"* %52
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_32SourceKeyedCachedMetadataHandlerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E12DeleteBucketERKS9_(%"struct.WTF::KeyValuePair"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::CachedMetadata"*, %"class.blink::CachedMetadata"** %2, align 8
  %4 = icmp eq %"class.blink::CachedMetadata"* %3, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #11
  %8 = getelementptr inbounds %"class.blink::CachedMetadata", %"class.blink::CachedMetadata"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %26

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 6
  %13 = bitcast %"class.base::RefCounted"* %12 to %"class.mojo_base::BigBuffer"*
  tail call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* %13) #11
  %14 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 2
  %15 = bitcast %"class.base::RefCounted"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %24, label %18, !prof !3

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 5, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !2

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #11
  br label %24

24:                                               ; preds = %23, %11
  %25 = bitcast %"class.blink::CachedMetadata"* %3 to i8*
  tail call void @free(i8* %25) #11
  br label %26

26:                                               ; preds = %24, %5, %1
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30, !prof !2

30:                                               ; preds = %26
  store i32 0, i32* %27, align 4
  br label %31

31:                                               ; preds = %30, %26
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 1, i64 0
  %35 = icmp eq i8* %34, %33
  br i1 %35, label %36, label %37, !prof !3

36:                                               ; preds = %31
  store i8* null, i8** %32, align 8
  br label %42

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj32ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %38, i8* %33) #11
  %39 = load i32, i32* %27, align 4
  store i8* null, i8** %32, align 8
  %40 = icmp ugt i32 %39, 1
  br i1 %40, label %41, label %42

41:                                               ; preds = %37
  store i32 1, i32* %27, align 4
  br label %50

42:                                               ; preds = %36, %37
  %43 = phi i32 [ 0, %36 ], [ %39, %37 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = ptrtoint i8* %34 to i64
  %49 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  store atomic i64 %48, i64* %49 monotonic, align 8
  store i32 32, i32* %44, align 8
  br label %50

50:                                               ; preds = %47, %42, %41
  %51 = phi i8* [ %34, %47 ], [ null, %42 ], [ null, %41 ]
  %52 = phi i32 [ %43, %47 ], [ %43, %42 ], [ 1, %41 ]
  %53 = zext i32 %52 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %51, i8 1, i64 %53, i1 false) #11
  %54 = load i32, i32* %27, align 4
  %55 = zext i32 %54 to i64
  %56 = load i8*, i8** %32, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %55
  %58 = icmp eq i8* %57, null
  br i1 %58, label %62, label %59, !prof !2

59:                                               ; preds = %50
  %60 = getelementptr inbounds [1 x i8], [1 x i8]* @.ref.tmp.13, i64 0, i64 %55
  %61 = sub nsw i64 1, %55
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %57, i8* nonnull align 1 %60, i64 %61, i1 false) #11
  br label %62

62:                                               ; preds = %50, %59
  store i32 1, i32* %27, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6LookupINS_22IdentityHashTranslatorISC_SH_S2_EES3_EEPKS9_RKT0_(%"class.WTF::HashTable"*, %"class.WTF::Vector"* dereferenceable(48)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %143, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = lshr i32 %14, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %81, label %19

19:                                               ; preds = %6
  %20 = and i32 %17, 1
  %21 = icmp eq i32 %17, 1
  br i1 %21, label %56, label %22

22:                                               ; preds = %19
  %23 = sub nsw i32 %17, %20
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i32 [ -1640531527, %22 ], [ %52, %24 ]
  %26 = phi i8* [ %12, %22 ], [ %53, %24 ]
  %27 = phi i32 [ %23, %22 ], [ %54, %24 ]
  %28 = load i8, i8* %26, align 1
  %29 = getelementptr inbounds i8, i8* %26, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %28 to i32
  %32 = add i32 %25, %31
  %33 = shl i32 %32, 16
  %34 = zext i8 %30 to i32
  %35 = shl nuw nsw i32 %34, 11
  %36 = xor i32 %35, %32
  %37 = xor i32 %36, %33
  %38 = lshr i32 %37, 11
  %39 = add i32 %38, %37
  %40 = getelementptr inbounds i8, i8* %26, i64 2
  %41 = load i8, i8* %40, align 1
  %42 = getelementptr inbounds i8, i8* %26, i64 3
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %41 to i32
  %45 = add i32 %39, %44
  %46 = shl i32 %45, 16
  %47 = zext i8 %43 to i32
  %48 = shl nuw nsw i32 %47, 11
  %49 = xor i32 %48, %45
  %50 = xor i32 %49, %46
  %51 = lshr i32 %50, 11
  %52 = add i32 %51, %50
  %53 = getelementptr inbounds i8, i8* %26, i64 4
  %54 = add i32 %27, -2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %24

56:                                               ; preds = %24, %19
  %57 = phi i32 [ undef, %19 ], [ %52, %24 ]
  %58 = phi i32 [ -1640531527, %19 ], [ %52, %24 ]
  %59 = phi i8* [ %12, %19 ], [ %53, %24 ]
  %60 = icmp eq i32 %20, 0
  br i1 %60, label %74, label %61

61:                                               ; preds = %56
  %62 = load i8, i8* %59, align 1
  %63 = getelementptr inbounds i8, i8* %59, i64 1
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %62 to i32
  %66 = add i32 %58, %65
  %67 = shl i32 %66, 16
  %68 = zext i8 %64 to i32
  %69 = shl nuw nsw i32 %68, 11
  %70 = xor i32 %69, %66
  %71 = xor i32 %70, %67
  %72 = lshr i32 %71, 11
  %73 = add i32 %72, %71
  br label %74

74:                                               ; preds = %56, %61
  %75 = phi i32 [ %57, %56 ], [ %73, %61 ]
  %76 = add nsw i32 %17, -1
  %77 = zext i32 %76 to i64
  %78 = shl nuw nsw i64 %77, 1
  %79 = add nuw nsw i64 %78, 2
  %80 = getelementptr i8, i8* %12, i64 %79
  br label %81

81:                                               ; preds = %74, %6
  %82 = phi i32 [ -1640531527, %6 ], [ %75, %74 ]
  %83 = phi i8* [ %12, %6 ], [ %80, %74 ]
  br i1 %16, label %92, label %84

84:                                               ; preds = %81
  %85 = load i8, i8* %83, align 1
  %86 = zext i8 %85 to i32
  %87 = add i32 %82, %86
  %88 = shl i32 %87, 11
  %89 = xor i32 %88, %87
  %90 = lshr i32 %89, 17
  %91 = add i32 %90, %89
  br label %92

92:                                               ; preds = %81, %84
  %93 = phi i32 [ %91, %84 ], [ %82, %81 ]
  %94 = shl i32 %93, 3
  %95 = xor i32 %94, %93
  %96 = lshr i32 %95, 5
  %97 = add i32 %96, %95
  %98 = shl i32 %97, 2
  %99 = xor i32 %98, %97
  %100 = lshr i32 %99, 15
  %101 = add i32 %100, %99
  %102 = shl i32 %101, 10
  %103 = xor i32 %102, %101
  %104 = icmp eq i32 %103, 0
  %105 = select i1 %104, i32 -2147483648, i32 %103
  %106 = and i32 %105, %9
  %107 = zext i32 %106 to i64
  %108 = xor i32 %105, -1
  %109 = lshr i32 %105, 23
  %110 = add i32 %109, %108
  %111 = shl i32 %110, 12
  %112 = xor i32 %111, %110
  %113 = lshr i32 %112, 7
  %114 = xor i32 %113, %112
  %115 = shl i32 %114, 2
  %116 = xor i32 %115, %114
  %117 = lshr i32 %116, 20
  %118 = xor i32 %117, %116
  %119 = or i32 %118, 1
  %120 = zext i32 %119 to i64
  %121 = icmp eq i32 %14, 0
  %122 = zext i32 %14 to i64
  br label %123

123:                                              ; preds = %138, %92
  %124 = phi i64 [ 0, %92 ], [ %140, %138 ]
  %125 = phi i64 [ %107, %92 ], [ %142, %138 ]
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %125
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %125, i32 0, i32 0, i32 0, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, %14
  br i1 %129, label %130, label %136

130:                                              ; preds = %123
  br i1 %121, label %143, label %131

131:                                              ; preds = %130
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = tail call i32 @bcmp(i8* %133, i8* %12, i64 %122) #11
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %143, label %136

136:                                              ; preds = %123, %131
  %137 = icmp eq i32 %128, 0
  br i1 %137, label %143, label %138

138:                                              ; preds = %136
  %139 = icmp eq i64 %124, 0
  %140 = select i1 %139, i64 %120, i64 %124
  %141 = add i64 %140, %125
  %142 = and i64 %141, %10
  br label %123

143:                                              ; preds = %130, %136, %131, %2
  %144 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %126, %130 ], [ %126, %131 ], [ null, %136 ]
  ret %"struct.WTF::KeyValuePair"* %144
}

declare void @_ZN5blink14CachedMetadataC1EjPKhj(%"class.blink::CachedMetadata"*, i32, i8*, i32) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_6VectorIhLj32ENS_18PartitionAllocatorEEENS_12KeyValuePairIS3_13scoped_refptrIN5blink14CachedMetadataEEEENS_24KeyValuePairKeyExtractorENS6_32SourceKeyedCachedMetadataHandler7KeyHashENS_18HashMapValueTraitsINSB_13KeyHashTraitsENS_10HashTraitsIS8_EEEESE_S2_E6LookupINS_22IdentityHashTranslatorISC_SH_S2_EERKS3_EEPKS9_RKT0_(%"class.WTF::HashTable"*, %"class.WTF::Vector"* dereferenceable(48)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %143, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  %17 = lshr i32 %14, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %81, label %19

19:                                               ; preds = %6
  %20 = and i32 %17, 1
  %21 = icmp eq i32 %17, 1
  br i1 %21, label %56, label %22

22:                                               ; preds = %19
  %23 = sub nsw i32 %17, %20
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i32 [ -1640531527, %22 ], [ %52, %24 ]
  %26 = phi i8* [ %12, %22 ], [ %53, %24 ]
  %27 = phi i32 [ %23, %22 ], [ %54, %24 ]
  %28 = load i8, i8* %26, align 1
  %29 = getelementptr inbounds i8, i8* %26, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %28 to i32
  %32 = add i32 %25, %31
  %33 = shl i32 %32, 16
  %34 = zext i8 %30 to i32
  %35 = shl nuw nsw i32 %34, 11
  %36 = xor i32 %35, %32
  %37 = xor i32 %36, %33
  %38 = lshr i32 %37, 11
  %39 = add i32 %38, %37
  %40 = getelementptr inbounds i8, i8* %26, i64 2
  %41 = load i8, i8* %40, align 1
  %42 = getelementptr inbounds i8, i8* %26, i64 3
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %41 to i32
  %45 = add i32 %39, %44
  %46 = shl i32 %45, 16
  %47 = zext i8 %43 to i32
  %48 = shl nuw nsw i32 %47, 11
  %49 = xor i32 %48, %45
  %50 = xor i32 %49, %46
  %51 = lshr i32 %50, 11
  %52 = add i32 %51, %50
  %53 = getelementptr inbounds i8, i8* %26, i64 4
  %54 = add i32 %27, -2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %24

56:                                               ; preds = %24, %19
  %57 = phi i32 [ undef, %19 ], [ %52, %24 ]
  %58 = phi i32 [ -1640531527, %19 ], [ %52, %24 ]
  %59 = phi i8* [ %12, %19 ], [ %53, %24 ]
  %60 = icmp eq i32 %20, 0
  br i1 %60, label %74, label %61

61:                                               ; preds = %56
  %62 = load i8, i8* %59, align 1
  %63 = getelementptr inbounds i8, i8* %59, i64 1
  %64 = load i8, i8* %63, align 1
  %65 = zext i8 %62 to i32
  %66 = add i32 %58, %65
  %67 = shl i32 %66, 16
  %68 = zext i8 %64 to i32
  %69 = shl nuw nsw i32 %68, 11
  %70 = xor i32 %69, %66
  %71 = xor i32 %70, %67
  %72 = lshr i32 %71, 11
  %73 = add i32 %72, %71
  br label %74

74:                                               ; preds = %56, %61
  %75 = phi i32 [ %57, %56 ], [ %73, %61 ]
  %76 = add nsw i32 %17, -1
  %77 = zext i32 %76 to i64
  %78 = shl nuw nsw i64 %77, 1
  %79 = add nuw nsw i64 %78, 2
  %80 = getelementptr i8, i8* %12, i64 %79
  br label %81

81:                                               ; preds = %74, %6
  %82 = phi i32 [ -1640531527, %6 ], [ %75, %74 ]
  %83 = phi i8* [ %12, %6 ], [ %80, %74 ]
  br i1 %16, label %92, label %84

84:                                               ; preds = %81
  %85 = load i8, i8* %83, align 1
  %86 = zext i8 %85 to i32
  %87 = add i32 %82, %86
  %88 = shl i32 %87, 11
  %89 = xor i32 %88, %87
  %90 = lshr i32 %89, 17
  %91 = add i32 %90, %89
  br label %92

92:                                               ; preds = %81, %84
  %93 = phi i32 [ %91, %84 ], [ %82, %81 ]
  %94 = shl i32 %93, 3
  %95 = xor i32 %94, %93
  %96 = lshr i32 %95, 5
  %97 = add i32 %96, %95
  %98 = shl i32 %97, 2
  %99 = xor i32 %98, %97
  %100 = lshr i32 %99, 15
  %101 = add i32 %100, %99
  %102 = shl i32 %101, 10
  %103 = xor i32 %102, %101
  %104 = icmp eq i32 %103, 0
  %105 = select i1 %104, i32 -2147483648, i32 %103
  %106 = and i32 %105, %9
  %107 = zext i32 %106 to i64
  %108 = xor i32 %105, -1
  %109 = lshr i32 %105, 23
  %110 = add i32 %109, %108
  %111 = shl i32 %110, 12
  %112 = xor i32 %111, %110
  %113 = lshr i32 %112, 7
  %114 = xor i32 %113, %112
  %115 = shl i32 %114, 2
  %116 = xor i32 %115, %114
  %117 = lshr i32 %116, 20
  %118 = xor i32 %117, %116
  %119 = or i32 %118, 1
  %120 = zext i32 %119 to i64
  %121 = icmp eq i32 %14, 0
  %122 = zext i32 %14 to i64
  br label %123

123:                                              ; preds = %138, %92
  %124 = phi i64 [ 0, %92 ], [ %140, %138 ]
  %125 = phi i64 [ %107, %92 ], [ %142, %138 ]
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %125
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %125, i32 0, i32 0, i32 0, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, %14
  br i1 %129, label %130, label %136

130:                                              ; preds = %123
  br i1 %121, label %143, label %131

131:                                              ; preds = %130
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = tail call i32 @bcmp(i8* %133, i8* %12, i64 %122) #11
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %143, label %136

136:                                              ; preds = %123, %131
  %137 = icmp eq i32 %128, 0
  br i1 %137, label %143, label %138

138:                                              ; preds = %136
  %139 = icmp eq i64 %124, 0
  %140 = select i1 %139, i64 %120, i64 %124
  %141 = add i64 %140, %125
  %142 = and i64 %141, %10
  br label %123

143:                                              ; preds = %130, %136, %131, %2
  %144 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %126, %130 ], [ %126, %131 ], [ null, %136 ]
  ret %"struct.WTF::KeyValuePair"* %144
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.269", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.269"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.269", %"class.WTF::StringTypeAdapter.269"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.269"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.269"* nonnull %4, i8* %21) #11
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %30, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %46, i8* %47) #11
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.269"*, i8*) unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.268"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.269"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.268"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.269"*, i16*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !10}
!12 = !{i8 0, i8 2}
