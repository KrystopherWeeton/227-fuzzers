; ModuleID = '../../v8/src/heap/cppgc/memory.cc'
source_filename = "../../v8/src/heap/cppgc/memory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal16NoSanitizeMemsetEPvcm(i8*, i8 signext, i64) local_unnamed_addr #0 {
  %4 = alloca i8*, align 8
  %5 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  store volatile i8* %0, i8** %4, align 8
  %6 = icmp eq i64 %2, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = add i64 %2, -1
  %9 = and i64 %2, 3
  %10 = icmp ult i64 %8, 3
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = sub i64 %2, %9
  br label %25

13:                                               ; preds = %25, %7
  %14 = phi i64 [ 0, %7 ], [ %39, %25 ]
  %15 = icmp eq i64 %9, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %13, %16
  %17 = phi i64 [ %21, %16 ], [ %14, %13 ]
  %18 = phi i64 [ %22, %16 ], [ %9, %13 ]
  %19 = load volatile i8*, i8** %4, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %17
  store i8 %1, i8* %20, align 1
  %21 = add nuw i64 %17, 1
  %22 = add i64 %18, -1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %16, !llvm.loop !2

24:                                               ; preds = %13, %16, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  ret void

25:                                               ; preds = %25, %11
  %26 = phi i64 [ 0, %11 ], [ %39, %25 ]
  %27 = phi i64 [ %12, %11 ], [ %40, %25 ]
  %28 = load volatile i8*, i8** %4, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 %26
  store i8 %1, i8* %29, align 1
  %30 = or i64 %26, 1
  %31 = load volatile i8*, i8** %4, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 %30
  store i8 %1, i8* %32, align 1
  %33 = or i64 %26, 2
  %34 = load volatile i8*, i8** %4, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 %33
  store i8 %1, i8* %35, align 1
  %36 = or i64 %26, 3
  %37 = load volatile i8*, i8** %4, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %36
  store i8 %1, i8* %38, align 1
  %39 = add nuw i64 %26, 4
  %40 = add i64 %27, -4
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %13, label %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

attributes #0 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
