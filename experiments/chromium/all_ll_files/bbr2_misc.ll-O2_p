; ModuleID = '../../net/third_party/quiche/src/quic/core/congestion_control/bbr2_misc.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/congestion_control/bbr2_misc.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::RoundTripCounter" = type { i64, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.quic::MinRttFilter" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::Bbr2NetworkModel" = type { %"struct.quic::Bbr2Params"*, %"class.quic::RoundTripCounter", %"class.quic::BandwidthSampler", %"class.quic::Bbr2MaxBandwidthFilter", %"class.quic::MinRttFilter", i64, i64, i64, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, i64, i64, float, float, i8, %"class.quic::QuicBandwidth", i64 }
%"class.quic::BandwidthSampler" = type <{ %"class.quic::BandwidthSamplerInterface", i64, i64, i64, i64, i64, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", %"class.quic::PacketNumberIndexedQueue", %"class.quic::BandwidthSampler::RecentAckPoints", %"class.quiche::QuicheCircularDeque.0", i64, %"class.quic::QuicUnackedPacketMap"*, %"class.quic::MaxAckHeightTracker", i64, i8, [7 x i8] }>
%"class.quic::BandwidthSamplerInterface" = type { i32 (...)** }
%"class.quic::PacketNumberIndexedQueue" = type { %"class.quiche::QuicheCircularDeque", i64, %"class.quic::QuicPacketNumber" }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper, 3, std::__1::allocator<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper, 3, std::__1::allocator<quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper> >::AllocatorAndData" = type { %"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper"*, i64 }
%"struct.quic::PacketNumberIndexedQueue<quic::BandwidthSampler::ConnectionStateOnSentPacket>::EntryWrapper" = type opaque
%"class.quic::BandwidthSampler::RecentAckPoints" = type { [2 x %"struct.quic::BandwidthSampler::AckPoint"] }
%"struct.quic::BandwidthSampler::AckPoint" = type { %"class.quic::QuicTime", i64 }
%"class.quiche::QuicheCircularDeque.0" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BandwidthSampler::AckPoint, 3, std::__1::allocator<quic::BandwidthSampler::AckPoint> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BandwidthSampler::AckPoint, 3, std::__1::allocator<quic::BandwidthSampler::AckPoint> >::AllocatorAndData" = type { %"struct.quic::BandwidthSampler::AckPoint"*, i64 }
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.3", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.3" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.49" }
%"struct.quic::QuicFrame" = type { %union.anon }
%union.anon = type { %"struct.quic::QuicStreamFrame" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::MaxAckHeightTracker" = type { %"class.quic::WindowedFilter", %"class.quic::QuicTime", i64, i64, double }
%"class.quic::WindowedFilter" = type { i64, i64, [3 x %"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample"] }
%"struct.quic::WindowedFilter<unsigned long, quic::MaxFilter<unsigned long>, unsigned long, unsigned long>::Sample" = type { i64, i64 }
%"class.quic::Bbr2MaxBandwidthFilter" = type { [2 x %"class.quic::QuicBandwidth"] }
%"class.quic::QuicBandwidth" = type { i64 }
%"struct.quic::Bbr2Params" = type <{ float, float, float, [4 x i8], i64, i64, i8, [3 x i8], float, float, [4 x i8], i64, i32, float, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, float, float, float, float, float, float, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, float, float, float, [4 x i8], %"class.quic::Limits", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.quic::Limits" = type { i64, i64 }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.56" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.61" = type opaque
%"struct.quic::Bbr2CongestionEvent" = type { %"class.quic::QuicTime", i64, i64, i64, i64, i64, i8, i8, i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicBandwidth", %"struct.quic::SendTimeState" }
%"struct.quic::SendTimeState" = type { i8, i8, i64, i64, i64, i64 }
%"struct.quic::BandwidthSamplerInterface::CongestionEventSample" = type { %"class.quic::QuicBandwidth", i8, %"class.quic::QuicTime::Delta", i64, %"struct.quic::SendTimeState", i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.32 }
%union.anon.32 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.33 }
%struct.anon.33 = type { i8 }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [75 x i8] c"../../net/third_party/quiche/src/quic/core/congestion_control/bbr2_misc.cc\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"Unreachable case DEFAULT.\00", align 1
@FLAGS_quic_reloadable_flag_quic_bbr2_fix_bw_lo_mode2 = external local_unnamed_addr global i8, align 1
@FLAGS_quic_reloadable_flag_quic_bbr2_fix_bw_lo_mode = external local_unnamed_addr global i8, align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN4quic16RoundTripCounterC1Ev = hidden unnamed_addr alias void (%"class.quic::RoundTripCounter"*), void (%"class.quic::RoundTripCounter"*)* @_ZN4quic16RoundTripCounterC2Ev
@_ZN4quic12MinRttFilterC1ENS_8QuicTime5DeltaES1_ = hidden unnamed_addr alias void (%"class.quic::MinRttFilter"*, i64, i64), void (%"class.quic::MinRttFilter"*, i64, i64)* @_ZN4quic12MinRttFilterC2ENS_8QuicTime5DeltaES1_
@_ZN4quic16Bbr2NetworkModelC1EPKNS_10Bbr2ParamsENS_8QuicTime5DeltaES4_ffPKNS_16BandwidthSamplerE = hidden unnamed_addr alias void (%"class.quic::Bbr2NetworkModel"*, %"struct.quic::Bbr2Params"*, i64, i64, float, float, %"class.quic::BandwidthSampler"*), void (%"class.quic::Bbr2NetworkModel"*, %"struct.quic::Bbr2Params"*, i64, i64, float, float, %"class.quic::BandwidthSampler"*)* @_ZN4quic16Bbr2NetworkModelC2EPKNS_10Bbr2ParamsENS_8QuicTime5DeltaES4_ffPKNS_16BandwidthSamplerE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic16RoundTripCounterC2Ev(%"class.quic::RoundTripCounter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::RoundTripCounter", %"class.quic::RoundTripCounter"* %0, i64 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.quic::RoundTripCounter", %"class.quic::RoundTripCounter"* %0, i64 0, i32 1, i32 0
  %4 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -1, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic16RoundTripCounter12OnPacketSentENS_16QuicPacketNumberE(%"class.quic::RoundTripCounter"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::RoundTripCounter", %"class.quic::RoundTripCounter"* %0, i64 0, i32 1, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic16RoundTripCounter14OnPacketsAckedENS_16QuicPacketNumberE(%"class.quic::RoundTripCounter"*, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.quic::RoundTripCounter", %"class.quic::RoundTripCounter"* %0, i64 0, i32 2
  %4 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %3) #10
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.quic::RoundTripCounter", %"class.quic::RoundTripCounter"* %0, i64 0, i32 2, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %9, label %16

9:                                                ; preds = %5, %2
  %10 = getelementptr inbounds %"class.quic::RoundTripCounter", %"class.quic::RoundTripCounter"* %0, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %11, 1
  store i64 %12, i64* %10, align 8
  %13 = getelementptr inbounds %"class.quic::RoundTripCounter", %"class.quic::RoundTripCounter"* %0, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %3, i64 0, i32 0
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  br label %16

16:                                               ; preds = %5, %9
  %17 = phi i1 [ true, %9 ], [ false, %5 ]
  ret i1 %17
}

declare zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic16RoundTripCounter12RestartRoundEv(%"class.quic::RoundTripCounter"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.quic::RoundTripCounter", %"class.quic::RoundTripCounter"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.quic::RoundTripCounter", %"class.quic::RoundTripCounter"* %0, i64 0, i32 2, i32 0
  %4 = load i64, i64* %2, align 8
  store i64 %4, i64* %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic12MinRttFilterC2ENS_8QuicTime5DeltaES1_(%"class.quic::MinRttFilter"* nocapture, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::MinRttFilter", %"class.quic::MinRttFilter"* %0, i64 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.quic::MinRttFilter", %"class.quic::MinRttFilter"* %0, i64 0, i32 1, i32 0
  store i64 %2, i64* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic12MinRttFilter6UpdateENS_8QuicTime5DeltaES1_(%"class.quic::MinRttFilter"* nocapture, i64, i64) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.quic::MinRttFilter", %"class.quic::MinRttFilter"* %0, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp sgt i64 %5, %1
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.quic::MinRttFilter", %"class.quic::MinRttFilter"* %0, i64 0, i32 1, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %3, %7
  store i64 %1, i64* %4, align 8
  %12 = getelementptr inbounds %"class.quic::MinRttFilter", %"class.quic::MinRttFilter"* %0, i64 0, i32 1, i32 0
  store i64 %2, i64* %12, align 8
  br label %13

13:                                               ; preds = %11, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic12MinRttFilter11ForceUpdateENS_8QuicTime5DeltaES1_(%"class.quic::MinRttFilter"* nocapture, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::MinRttFilter", %"class.quic::MinRttFilter"* %0, i64 0, i32 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.quic::MinRttFilter", %"class.quic::MinRttFilter"* %0, i64 0, i32 1, i32 0
  store i64 %2, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16Bbr2NetworkModelC2EPKNS_10Bbr2ParamsENS_8QuicTime5DeltaES4_ffPKNS_16BandwidthSamplerE(%"class.quic::Bbr2NetworkModel"*, %"struct.quic::Bbr2Params"*, i64, i64, float, float, %"class.quic::BandwidthSampler"*) unnamed_addr #2 align 2 {
  %8 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 0
  store %"struct.quic::Bbr2Params"* %1, %"struct.quic::Bbr2Params"** %8, align 8
  %9 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 1, i32 0
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 1, i32 1, i32 0
  %11 = bitcast i64* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -1, i64 16, i1 false) #10
  %12 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 2
  %13 = icmp eq %"class.quic::BandwidthSampler"* %6, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %7
  tail call void @_ZN4quic16BandwidthSamplerC1ERKS0_(%"class.quic::BandwidthSampler"* %12, %"class.quic::BandwidthSampler"* nonnull dereferenceable(328) %6) #10
  br label %18

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"struct.quic::Bbr2Params", %"struct.quic::Bbr2Params"* %1, i64 0, i32 25
  %17 = load i64, i64* %16, align 8
  tail call void @_ZN4quic16BandwidthSamplerC1EPKNS_20QuicUnackedPacketMapEm(%"class.quic::BandwidthSampler"* %12, %"class.quic::QuicUnackedPacketMap"* null, i64 %17) #10
  br label %18

18:                                               ; preds = %14, %15
  %19 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 3
  %20 = bitcast %"class.quic::Bbr2MaxBandwidthFilter"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #10
  %21 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %2, i64* %21, align 8
  %22 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 4, i32 1, i32 0
  store i64 %3, i64* %22, align 8
  %23 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 5
  %24 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 9, i32 0
  %25 = bitcast i64* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false)
  store i64 9223372036854775807, i64* %24, align 8
  %26 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 10, i32 0
  %27 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 12
  %28 = bitcast i64* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false)
  %29 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 14
  %30 = bitcast i64* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 -1, i64 16, i1 false)
  store float %4, float* %29, align 8
  %31 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 15
  store float %5, float* %31, align 4
  %32 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 16
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 17, i32 0
  %34 = bitcast i64* %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16Bbr2NetworkModel12OnPacketSentENS_8QuicTimeEmNS_16QuicPacketNumberEmNS_22HasRetransmittableDataE(%"class.quic::Bbr2NetworkModel"*, i64, i64, i64, i64, i8 zeroext) local_unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 1, i32 1, i32 0
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 2
  tail call void @_ZN4quic16BandwidthSampler12OnPacketSentENS_8QuicTimeENS_16QuicPacketNumberEmmNS_22HasRetransmittableDataE(%"class.quic::BandwidthSampler"* %8, i64 %1, i64 %3, i64 %4, i64 %2, i8 zeroext %5) #10
  ret void
}

declare void @_ZN4quic16BandwidthSampler12OnPacketSentENS_8QuicTimeENS_16QuicPacketNumberEmmNS_22HasRetransmittableDataE(%"class.quic::BandwidthSampler"*, i64, i64, i64, i64, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16Bbr2NetworkModel22OnCongestionEventStartENS_8QuicTimeERKNSt3__16vectorINS_11AckedPacketENS2_9allocatorIS4_EEEERKNS3_INS_10LostPacketENS5_ISA_EEEEPNS_19Bbr2CongestionEventE(%"class.quic::Bbr2NetworkModel"*, i64, %"class.std::__1::vector.54"* dereferenceable(24), %"class.std::__1::vector.61"*, %"struct.quic::Bbr2CongestionEvent"* nocapture) local_unnamed_addr #2 align 2 {
  %6 = alloca i64, align 8
  %7 = alloca %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", align 8
  %8 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 2
  %9 = tail call i64 @_ZNK4quic16BandwidthSampler17total_bytes_ackedEv(%"class.quic::BandwidthSampler"* %8) #10
  %10 = tail call i64 @_ZNK4quic16BandwidthSampler16total_bytes_lostEv(%"class.quic::BandwidthSampler"* %8) #10
  %11 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %4, i64 0, i32 0, i32 0
  store i64 %1, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %2, i64 0, i32 0, i32 0
  %13 = load %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %2, i64 0, i32 0, i32 1
  %15 = load %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"** %14, align 8
  %16 = icmp eq %"struct.quic::AckedPacket"* %13, %15
  br i1 %16, label %33, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"struct.quic::AckedPacket", %"struct.quic::AckedPacket"* %15, i64 -1, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 1, i32 2
  %21 = tail call zeroext i1 @_ZNK4quic16QuicPacketNumber13IsInitializedEv(%"class.quic::QuicPacketNumber"* %20) #10
  br i1 %21, label %22, label %26

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 1, i32 2, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, %19
  br i1 %25, label %26, label %33

26:                                               ; preds = %22, %17
  %27 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 1, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %27, align 8
  %30 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 1, i32 1, i32 0
  %31 = getelementptr inbounds %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber"* %20, i64 0, i32 0
  %32 = load i64, i64* %30, align 8
  store i64 %32, i64* %31, align 8
  br label %33

33:                                               ; preds = %26, %22, %5
  %34 = phi i8 [ 0, %5 ], [ 1, %26 ], [ 0, %22 ]
  %35 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %4, i64 0, i32 6
  store i8 %34, i8* %35, align 8
  %36 = bitcast %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %36) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 80, i1 false)
  %37 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 3
  %38 = getelementptr inbounds %"class.quic::Bbr2MaxBandwidthFilter", %"class.quic::Bbr2MaxBandwidthFilter"* %37, i64 0, i32 0, i64 0
  %39 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 3, i32 0, i64 1
  %40 = getelementptr inbounds %"class.quic::Bbr2MaxBandwidthFilter", %"class.quic::Bbr2MaxBandwidthFilter"* %37, i64 0, i32 0, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %39, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp slt i64 %41, %43
  %45 = select i1 %44, %"class.quic::QuicBandwidth"* %39, %"class.quic::QuicBandwidth"* %38
  %46 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %45, i64 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 9, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 1, i32 0
  %51 = load i64, i64* %50, align 8
  call void @_ZN4quic16BandwidthSampler17OnCongestionEventENS_8QuicTimeERKNSt3__16vectorINS_11AckedPacketENS2_9allocatorIS4_EEEERKNS3_INS_10LostPacketENS5_ISA_EEEENS_13QuicBandwidthESF_m(%"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* nonnull sret %7, %"class.quic::BandwidthSampler"* %8, i64 %1, %"class.std::__1::vector.54"* dereferenceable(24) %2, %"class.std::__1::vector.61"* %3, i64 %47, i64 %49, i64 %51) #10
  %52 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %7, i64 0, i32 4, i32 0
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %33
  %56 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %4, i64 0, i32 11, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %52, i64 40, i1 false)
  %57 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %7, i64 0, i32 4, i32 1
  %58 = load i8, i8* %57, align 1, !range !2
  %59 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %4, i64 0, i32 7
  store i8 %58, i8* %59, align 1
  br label %60

60:                                               ; preds = %33, %55
  %61 = call i64 @_ZNK4quic16BandwidthSampler17total_bytes_ackedEv(%"class.quic::BandwidthSampler"* %8) #10
  %62 = icmp eq i64 %9, %61
  br i1 %62, label %88, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %7, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %4, i64 0, i32 10, i32 0
  %66 = load i64, i64* %64, align 8
  store i64 %66, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %7, i64 0, i32 1
  %68 = load i8, i8* %67, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %63
  %71 = load i64, i64* %42, align 8
  br label %80

72:                                               ; preds = %63
  %73 = load i64, i64* %40, align 8
  %74 = load i64, i64* %42, align 8
  %75 = icmp slt i64 %73, %74
  %76 = select i1 %75, %"class.quic::QuicBandwidth"* %39, %"class.quic::QuicBandwidth"* %38
  %77 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %76, i64 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = icmp slt i64 %78, %66
  br i1 %79, label %80, label %88

80:                                               ; preds = %70, %72
  %81 = phi i64 [ %71, %70 ], [ %74, %72 ]
  %82 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82)
  store i64 %66, i64* %6, align 8
  %83 = icmp sgt i64 %81, %66
  %84 = bitcast i64* %6 to %"class.quic::QuicBandwidth"*
  %85 = select i1 %83, %"class.quic::QuicBandwidth"* %39, %"class.quic::QuicBandwidth"* %84
  %86 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %85, i64 0, i32 0
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82)
  br label %88

88:                                               ; preds = %60, %72, %80
  %89 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %7, i64 0, i32 2, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = icmp eq i64 %90, 9223372036854775807
  br i1 %91, label %103, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %4, i64 0, i32 9, i32 0
  store i64 %90, i64* %93, align 8
  %94 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 4, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = icmp sgt i64 %95, %90
  br i1 %96, label %101, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 4, i32 1, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %97, %92
  store i64 %90, i64* %94, align 8
  %102 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 4, i32 1, i32 0
  store i64 %1, i64* %102, align 8
  br label %103

103:                                              ; preds = %101, %97, %88
  %104 = call i64 @_ZNK4quic16BandwidthSampler17total_bytes_ackedEv(%"class.quic::BandwidthSampler"* %8) #10
  %105 = sub i64 %104, %9
  %106 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %4, i64 0, i32 4
  store i64 %105, i64* %106, align 8
  %107 = call i64 @_ZNK4quic16BandwidthSampler16total_bytes_lostEv(%"class.quic::BandwidthSampler"* %8) #10
  %108 = sub i64 %107, %10
  %109 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %4, i64 0, i32 5
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %4, i64 0, i32 2
  %111 = load i64, i64* %110, align 8
  %112 = load i64, i64* %106, align 8
  %113 = add i64 %112, %108
  %114 = icmp ult i64 %111, %113
  %115 = sub i64 %111, %108
  %116 = sub i64 %115, %112
  %117 = select i1 %114, i64 0, i64 %116
  %118 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %4, i64 0, i32 3
  store i64 %117, i64* %118, align 8
  %119 = icmp eq i64 %108, 0
  br i1 %119, label %128, label %120

120:                                              ; preds = %103
  %121 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 5
  %122 = bitcast i64* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8
  %124 = insertelement <2 x i64> <i64 undef, i64 1>, i64 %108, i32 0
  %125 = add <2 x i64> %123, %124
  %126 = bitcast i64* %121 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %126, align 8
  %127 = load i64, i64* %106, align 8
  br label %128

128:                                              ; preds = %103, %120
  %129 = phi i64 [ %112, %103 ], [ %127, %120 ]
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %148, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %4, i64 0, i32 11, i32 0
  %133 = load i8, i8* %132, align 8, !range !2
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = call i64 @_ZNK4quic16BandwidthSampler17total_bytes_ackedEv(%"class.quic::BandwidthSampler"* %8) #10
  %137 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %4, i64 0, i32 11, i32 3
  %138 = load i64, i64* %137, align 8
  %139 = icmp ugt i64 %136, %138
  br i1 %139, label %140, label %148

140:                                              ; preds = %135
  %141 = call i64 @_ZNK4quic16BandwidthSampler17total_bytes_ackedEv(%"class.quic::BandwidthSampler"* %8) #10
  %142 = load i64, i64* %137, align 8
  %143 = sub i64 %141, %142
  %144 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 7
  %145 = load i64, i64* %144, align 8
  %146 = icmp ult i64 %145, %143
  %147 = select i1 %146, i64 %143, i64 %145
  store i64 %147, i64* %144, align 8
  br label %148

148:                                              ; preds = %131, %128, %140, %135
  %149 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %7, i64 0, i32 0, i32 0
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 8, i32 0
  %152 = load i64, i64* %151, align 8
  %153 = icmp slt i64 %152, %150
  br i1 %153, label %154, label %155

154:                                              ; preds = %148
  store i64 %150, i64* %151, align 8
  br label %155

155:                                              ; preds = %154, %148
  %156 = getelementptr inbounds %"struct.quic::BandwidthSamplerInterface::CongestionEventSample", %"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* %7, i64 0, i32 3
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 11
  %159 = load i64, i64* %158, align 8
  %160 = icmp ugt i64 %157, %159
  br i1 %160, label %161, label %162

161:                                              ; preds = %155
  store i64 %157, i64* %158, align 8
  br label %162

162:                                              ; preds = %161, %155
  call void @_ZN4quic16Bbr2NetworkModel16AdaptLowerBoundsERKNS_19Bbr2CongestionEventE(%"class.quic::Bbr2NetworkModel"* %0, %"struct.quic::Bbr2CongestionEvent"* dereferenceable(112) %4)
  %163 = load i8, i8* %35, align 8, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %173, label %165

165:                                              ; preds = %162
  %166 = load i64, i64* %149, align 8
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %169, label %168

168:                                              ; preds = %165
  store i64 %166, i64* %151, align 8
  br label %169

169:                                              ; preds = %168, %165
  %170 = load i64, i64* %156, align 8
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %173, label %172

172:                                              ; preds = %169
  store i64 %170, i64* %158, align 8
  br label %173

173:                                              ; preds = %172, %169, %162
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %36) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4quic16BandwidthSampler17OnCongestionEventENS_8QuicTimeERKNSt3__16vectorINS_11AckedPacketENS2_9allocatorIS4_EEEERKNS3_INS_10LostPacketENS5_ISA_EEEENS_13QuicBandwidthESF_m(%"struct.quic::BandwidthSamplerInterface::CongestionEventSample"* sret, %"class.quic::BandwidthSampler"*, i64, %"class.std::__1::vector.54"* dereferenceable(24), %"class.std::__1::vector.61"*, i64, i64, i64) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16Bbr2NetworkModel16AdaptLowerBoundsERKNS_19Bbr2CongestionEventE(%"class.quic::Bbr2NetworkModel"*, %"struct.quic::Bbr2CongestionEvent"* nocapture readonly dereferenceable(112)) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 0
  %9 = load %"struct.quic::Bbr2Params"*, %"struct.quic::Bbr2Params"** %8, align 8
  %10 = getelementptr inbounds %"struct.quic::Bbr2Params", %"struct.quic::Bbr2Params"* %9, i64 0, i32 39
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %84

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 6
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %256, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 8
  %19 = load i8, i8* %18, align 2, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %256

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 5
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %256, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 9, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 9223372036854775807
  br i1 %28, label %29, label %41

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 3
  %31 = getelementptr inbounds %"class.quic::Bbr2MaxBandwidthFilter", %"class.quic::Bbr2MaxBandwidthFilter"* %30, i64 0, i32 0, i64 0
  %32 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 3, i32 0, i64 1
  %33 = getelementptr inbounds %"class.quic::Bbr2MaxBandwidthFilter", %"class.quic::Bbr2MaxBandwidthFilter"* %30, i64 0, i32 0, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %32, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp slt i64 %34, %36
  %38 = select i1 %37, %"class.quic::QuicBandwidth"* %32, %"class.quic::QuicBandwidth"* %31
  %39 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %26, align 8
  br label %41

41:                                               ; preds = %29, %25
  %42 = phi i64 [ %40, %29 ], [ %27, %25 ]
  %43 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 8
  %44 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = getelementptr inbounds %"struct.quic::Bbr2Params", %"struct.quic::Bbr2Params"* %9, i64 0, i32 28
  %46 = load float, float* %45, align 8
  %47 = fsub float 1.000000e+00, %46
  %48 = sitofp i64 %42 to float
  %49 = fmul float %47, %48
  %50 = tail call i64 @llroundf(float %49) #10
  %51 = icmp sgt i64 %50, 0
  %52 = select i1 %51, i64 %50, i64 0
  store i64 %52, i64* %3, align 8
  %53 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %43, i64 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp slt i64 %54, %52
  %56 = bitcast i64* %3 to %"class.quic::QuicBandwidth"*
  %57 = select i1 %55, %"class.quic::QuicBandwidth"* %56, %"class.quic::QuicBandwidth"* %43
  %58 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %57, i64 0, i32 0
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  %60 = load %"struct.quic::Bbr2Params"*, %"struct.quic::Bbr2Params"** %8, align 8
  %61 = getelementptr inbounds %"struct.quic::Bbr2Params", %"struct.quic::Bbr2Params"* %60, i64 0, i32 34
  %62 = load i8, i8* %61, align 1, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %256

64:                                               ; preds = %41
  %65 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 12
  %66 = load i64, i64* %65, align 8
  %67 = icmp eq i64 %66, -1
  br i1 %67, label %68, label %71

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %65, align 8
  br label %71

71:                                               ; preds = %68, %64
  %72 = phi i64 [ %70, %68 ], [ %66, %64 ]
  %73 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 11
  %74 = uitofp i64 %72 to double
  %75 = getelementptr inbounds %"struct.quic::Bbr2Params", %"struct.quic::Bbr2Params"* %60, i64 0, i32 28
  %76 = load float, float* %75, align 8
  %77 = fpext float %76 to double
  %78 = fsub double 1.000000e+00, %77
  %79 = fmul double %78, %74
  %80 = fptoui double %79 to i64
  %81 = load i64, i64* %73, align 8
  %82 = icmp ult i64 %81, %80
  %83 = select i1 %82, i64 %80, i64 %81
  store i64 %83, i64* %65, align 8
  br label %256

84:                                               ; preds = %2
  %85 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 5
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %256, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 15
  %90 = load float, float* %89, align 4
  %91 = fcmp olt float %90, 1.000000e+00
  br i1 %91, label %256, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 9
  %94 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %93, i64 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, 9223372036854775807
  br i1 %96, label %97, label %110

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 3
  %99 = getelementptr inbounds %"class.quic::Bbr2MaxBandwidthFilter", %"class.quic::Bbr2MaxBandwidthFilter"* %98, i64 0, i32 0, i64 0
  %100 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 3, i32 0, i64 1
  %101 = getelementptr inbounds %"class.quic::Bbr2MaxBandwidthFilter", %"class.quic::Bbr2MaxBandwidthFilter"* %98, i64 0, i32 0, i64 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %100, i64 0, i32 0
  %104 = load i64, i64* %103, align 8
  %105 = icmp slt i64 %102, %104
  %106 = select i1 %105, %"class.quic::QuicBandwidth"* %100, %"class.quic::QuicBandwidth"* %99
  %107 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %106, i64 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 9, i32 0
  store i64 %108, i64* %109, align 8
  br label %110

110:                                              ; preds = %97, %92
  %111 = phi i64 [ %108, %97 ], [ %95, %92 ]
  %112 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 10, i32 0
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %110
  store i64 %111, i64* %112, align 8
  br label %116

116:                                              ; preds = %115, %110
  %117 = load i8, i8* %10, align 8
  switch i8 %117, label %191 [
    i8 1, label %118
    i8 2, label %136
    i8 3, label %169
    i8 0, label %184
  ]

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 9, i32 0
  %120 = load i64, i64* %85, align 8
  %121 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 4, i32 0, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = icmp eq i64 %120, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %118
  %125 = mul i64 %120, 8000000
  %126 = icmp slt i64 %125, %122
  br i1 %126, label %131, label %127

127:                                              ; preds = %124
  %128 = sdiv i64 %125, %122
  %129 = icmp sgt i64 %128, 0
  %130 = select i1 %129, i64 %128, i64 0
  br label %131

131:                                              ; preds = %118, %124, %127
  %132 = phi i64 [ %130, %127 ], [ 0, %118 ], [ 1, %124 ]
  %133 = sub nsw i64 %111, %132
  %134 = icmp sgt i64 %133, 0
  %135 = select i1 %134, i64 %133, i64 0
  store i64 %135, i64* %119, align 8
  br label %191

136:                                              ; preds = %116
  %137 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 3
  %138 = getelementptr inbounds %"class.quic::Bbr2MaxBandwidthFilter", %"class.quic::Bbr2MaxBandwidthFilter"* %137, i64 0, i32 0, i64 0
  %139 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 3, i32 0, i64 1
  %140 = getelementptr inbounds %"class.quic::Bbr2MaxBandwidthFilter", %"class.quic::Bbr2MaxBandwidthFilter"* %137, i64 0, i32 0, i64 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %139, i64 0, i32 0
  %143 = load i64, i64* %142, align 8
  %144 = icmp slt i64 %141, %143
  %145 = select i1 %144, %"class.quic::QuicBandwidth"* %139, %"class.quic::QuicBandwidth"* %138
  %146 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %145, i64 0, i32 0
  %147 = load i64, i64* %146, align 8
  %148 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 4, i32 0, i32 0
  %149 = load i64, i64* %148, align 8
  %150 = mul nsw i64 %149, %147
  %151 = sdiv i64 %150, 8
  %152 = udiv i64 %151, 1000000
  %153 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 2
  %154 = load i64, i64* %153, align 8
  %155 = icmp ult i64 %152, %154
  %156 = select i1 %155, i64 %154, i64 %152
  %157 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 9, i32 0
  %158 = load i64, i64* %85, align 8
  %159 = sub i64 %156, %158
  %160 = uitofp i64 %159 to double
  %161 = uitofp i64 %156 to double
  %162 = fdiv double %160, %161
  %163 = fptrunc double %162 to float
  %164 = sitofp i64 %111 to float
  %165 = fmul float %164, %163
  %166 = tail call i64 @llroundf(float %165) #10
  %167 = icmp sgt i64 %166, 0
  %168 = select i1 %167, i64 %166, i64 0
  store i64 %168, i64* %157, align 8
  br label %191

169:                                              ; preds = %116
  %170 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 9, i32 0
  %171 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = load i64, i64* %85, align 8
  %174 = sub i64 %172, %173
  %175 = uitofp i64 %174 to double
  %176 = uitofp i64 %172 to double
  %177 = fdiv double %175, %176
  %178 = fptrunc double %177 to float
  %179 = sitofp i64 %111 to float
  %180 = fmul float %179, %178
  %181 = tail call i64 @llroundf(float %180) #10
  %182 = icmp sgt i64 %181, 0
  %183 = select i1 %182, i64 %181, i64 0
  store i64 %183, i64* %170, align 8
  br label %191

184:                                              ; preds = %116
  %185 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %185, label %186, label %191

186:                                              ; preds = %184
  %187 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %187) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0), i32 261, i32 2) #10
  %188 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %189 = bitcast %"class.std::__1::basic_ostringstream"* %188 to %"class.std::__1::basic_ostream"*
  %190 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %189, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i64 25) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %187) #10
  br label %191

191:                                              ; preds = %186, %184, %116, %169, %136, %131
  %192 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192)
  %193 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 8, i32 0
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %5, align 8
  %195 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_bbr2_fix_bw_lo_mode2, align 1, !range !2
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %202, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 10, i32 0
  %199 = load i64, i64* %198, align 8
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %202, label %201

201:                                              ; preds = %197
  store i64 %199, i64* %5, align 8
  br label %202

202:                                              ; preds = %191, %201, %197
  %203 = phi i64 [ %194, %191 ], [ %199, %201 ], [ %194, %197 ]
  %204 = load float, float* %89, align 4
  %205 = load %"struct.quic::Bbr2Params"*, %"struct.quic::Bbr2Params"** %8, align 8
  %206 = getelementptr inbounds %"struct.quic::Bbr2Params", %"struct.quic::Bbr2Params"* %205, i64 0, i32 2
  %207 = load float, float* %206, align 8
  %208 = fcmp ogt float %204, %207
  br i1 %208, label %209, label %223

209:                                              ; preds = %202
  %210 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210)
  %211 = fdiv float %207, %204
  %212 = sitofp i64 %203 to float
  %213 = fmul float %211, %212
  %214 = call i64 @llroundf(float %213) #10
  %215 = icmp sgt i64 %214, 0
  %216 = select i1 %215, i64 %214, i64 0
  store i64 %216, i64* %6, align 8
  %217 = load i64, i64* %94, align 8
  %218 = icmp slt i64 %217, %216
  %219 = bitcast i64* %6 to %"class.quic::QuicBandwidth"*
  %220 = select i1 %218, %"class.quic::QuicBandwidth"* %219, %"class.quic::QuicBandwidth"* %93
  %221 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %220, i64 0, i32 0
  %222 = load i64, i64* %221, align 8
  store i64 %222, i64* %94, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210)
  br label %230

223:                                              ; preds = %202
  %224 = load i64, i64* %94, align 8
  %225 = icmp slt i64 %224, %203
  %226 = bitcast i64* %5 to %"class.quic::QuicBandwidth"*
  %227 = select i1 %225, %"class.quic::QuicBandwidth"* %226, %"class.quic::QuicBandwidth"* %93
  %228 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %227, i64 0, i32 0
  %229 = load i64, i64* %228, align 8
  store i64 %229, i64* %94, align 8
  br label %230

230:                                              ; preds = %223, %209
  %231 = load i8, i8* @FLAGS_quic_reloadable_flag_quic_bbr2_fix_bw_lo_mode, align 1, !range !2
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %255, label %233

233:                                              ; preds = %230
  %234 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 6
  %235 = load i8, i8* %234, align 8, !range !2
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %255, label %237

237:                                              ; preds = %233
  %238 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %238)
  %239 = load i64, i64* %112, align 8
  %240 = load %"struct.quic::Bbr2Params"*, %"struct.quic::Bbr2Params"** %8, align 8
  %241 = getelementptr inbounds %"struct.quic::Bbr2Params", %"struct.quic::Bbr2Params"* %240, i64 0, i32 28
  %242 = load float, float* %241, align 8
  %243 = fsub float 1.000000e+00, %242
  %244 = sitofp i64 %239 to float
  %245 = fmul float %243, %244
  %246 = call i64 @llroundf(float %245) #10
  %247 = icmp sgt i64 %246, 0
  %248 = select i1 %247, i64 %246, i64 0
  store i64 %248, i64* %7, align 8
  %249 = load i64, i64* %94, align 8
  %250 = icmp slt i64 %249, %248
  %251 = bitcast i64* %7 to %"class.quic::QuicBandwidth"*
  %252 = select i1 %250, %"class.quic::QuicBandwidth"* %251, %"class.quic::QuicBandwidth"* %93
  %253 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %252, i64 0, i32 0
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %94, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %238)
  store i64 0, i64* %112, align 8
  br label %255

255:                                              ; preds = %230, %233, %237
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192)
  br label %256

256:                                              ; preds = %41, %21, %17, %13, %88, %84, %71, %255
  ret void
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16Bbr2NetworkModel23OnCongestionEventFinishENS_16QuicPacketNumberERKNS_19Bbr2CongestionEventE(%"class.quic::Bbr2NetworkModel"*, i64, %"struct.quic::Bbr2CongestionEvent"* nocapture readonly dereferenceable(112)) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %2, i64 0, i32 6
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 5
  %9 = bitcast i64* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #10
  br label %10

10:                                               ; preds = %3, %7
  %11 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 2
  tail call void @_ZN4quic16BandwidthSampler21RemoveObsoletePacketsENS_16QuicPacketNumberE(%"class.quic::BandwidthSampler"* %11, i64 %1) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic16Bbr2NetworkModel10OnNewRoundEv(%"class.quic::Bbr2NetworkModel"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 5
  %3 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN4quic16BandwidthSampler21RemoveObsoletePacketsENS_16QuicPacketNumberE(%"class.quic::BandwidthSampler"*, i64) unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic16Bbr2NetworkModel23UpdateNetworkParametersENS_8QuicTime5DeltaE(%"class.quic::Bbr2NetworkModel"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 4, i32 1, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp sgt i64 %8, %1
  %10 = icmp eq i64 %6, 0
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %4
  store i64 %1, i64* %7, align 8
  br label %13

13:                                               ; preds = %4, %12, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic16Bbr2NetworkModel17MaybeExpireMinRttERKNS_19Bbr2CongestionEventE(%"class.quic::Bbr2NetworkModel"* nocapture, %"struct.quic::Bbr2CongestionEvent"* nocapture readonly dereferenceable(112)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 4, i32 1, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 0
  %8 = load %"struct.quic::Bbr2Params"*, %"struct.quic::Bbr2Params"** %7, align 8
  %9 = getelementptr inbounds %"struct.quic::Bbr2Params", %"struct.quic::Bbr2Params"* %8, i64 0, i32 23, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, %6
  %12 = icmp slt i64 %4, %11
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 9, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 9223372036854775807
  br i1 %16, label %19, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 4, i32 0, i32 0
  store i64 %15, i64* %18, align 8
  store i64 %4, i64* %5, align 8
  br label %19

19:                                               ; preds = %13, %2, %17
  %20 = phi i1 [ true, %17 ], [ false, %2 ], [ false, %13 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic16Bbr2NetworkModel25IsCongestionWindowLimitedERKNS_19Bbr2CongestionEventE(%"class.quic::Bbr2NetworkModel"* nocapture readnone, %"struct.quic::Bbr2CongestionEvent"* nocapture readonly dereferenceable(112)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  %8 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 5
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %7, %9
  %11 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp uge i64 %10, %12
  ret i1 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic16Bbr2NetworkModel17IsInflightTooHighERKNS_19Bbr2CongestionEventEl(%"class.quic::Bbr2NetworkModel"* nocapture readonly, %"struct.quic::Bbr2CongestionEvent"* nocapture readonly dereferenceable(112), i64) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 11, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %41, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 6
  %9 = load i64, i64* %8, align 8
  %10 = icmp slt i64 %9, %2
  br i1 %10, label %41, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 11, i32 5
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %24

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 11, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 11, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 11, i32 4
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  br label %24

24:                                               ; preds = %11, %15
  %25 = phi i64 [ %23, %15 ], [ %13, %11 ]
  %26 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 5
  %27 = load i64, i64* %26, align 8
  %28 = icmp ne i64 %25, 0
  %29 = icmp ne i64 %27, 0
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %40

31:                                               ; preds = %24
  %32 = uitofp i64 %25 to float
  %33 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 0
  %34 = load %"struct.quic::Bbr2Params"*, %"struct.quic::Bbr2Params"** %33, align 8
  %35 = getelementptr inbounds %"struct.quic::Bbr2Params", %"struct.quic::Bbr2Params"* %34, i64 0, i32 27
  %36 = load float, float* %35, align 4
  %37 = fmul float %36, %32
  %38 = fptoui float %37 to i64
  %39 = icmp ugt i64 %27, %38
  br i1 %39, label %41, label %40

40:                                               ; preds = %31, %24
  br label %41

41:                                               ; preds = %31, %40, %7, %3
  %42 = phi i1 [ false, %3 ], [ false, %7 ], [ false, %40 ], [ true, %31 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic16Bbr2NetworkModel17RestartRoundEarlyEv(%"class.quic::Bbr2NetworkModel"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 5
  %3 = bitcast i64* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  %4 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 1, i32 1, i32 0
  %5 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 1, i32 2, i32 0
  %6 = load i64, i64* %4, align 8
  store i64 %6, i64* %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic16Bbr2NetworkModel15cap_inflight_loEm(%"class.quic::Bbr2NetworkModel"* nocapture, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 0
  %4 = load %"struct.quic::Bbr2Params"*, %"struct.quic::Bbr2Params"** %3, align 8
  %5 = getelementptr inbounds %"struct.quic::Bbr2Params", %"struct.quic::Bbr2Params"* %4, i64 0, i32 34
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 12
  %10 = load i64, i64* %9, align 8
  %11 = icmp ne i64 %10, -1
  %12 = icmp ugt i64 %10, %1
  %13 = and i1 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  store i64 %1, i64* %9, align 8
  br label %15

15:                                               ; preds = %8, %2, %14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK4quic16Bbr2NetworkModel25inflight_hi_with_headroomEv(%"class.quic::Bbr2NetworkModel"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 13
  %3 = load i64, i64* %2, align 8
  %4 = uitofp i64 %3 to float
  %5 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 0
  %6 = load %"struct.quic::Bbr2Params"*, %"struct.quic::Bbr2Params"** %5, align 8
  %7 = getelementptr inbounds %"struct.quic::Bbr2Params", %"struct.quic::Bbr2Params"* %6, i64 0, i32 26
  %8 = load float, float* %7, align 8
  %9 = fmul float %8, %4
  %10 = fptoui float %9 to i64
  %11 = tail call i64 @llvm.usub.sat.i64(i64 %3, i64 %10)
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4quic16Bbr2NetworkModel20CheckBandwidthGrowthERKNS_19Bbr2CongestionEventE(%"class.quic::Bbr2NetworkModel"* nocapture, %"struct.quic::Bbr2CongestionEvent"* nocapture readonly dereferenceable(112)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.quic::Bbr2CongestionEvent", %"struct.quic::Bbr2CongestionEvent"* %1, i64 0, i32 7
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %42

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 17, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 0
  %10 = load %"struct.quic::Bbr2Params"*, %"struct.quic::Bbr2Params"** %9, align 8
  %11 = getelementptr inbounds %"struct.quic::Bbr2Params", %"struct.quic::Bbr2Params"* %10, i64 0, i32 2
  %12 = load float, float* %11, align 8
  %13 = sitofp i64 %8 to float
  %14 = fmul float %12, %13
  %15 = tail call i64 @llroundf(float %14) #10
  %16 = icmp sgt i64 %15, 0
  %17 = select i1 %16, i64 %15, i64 0
  %18 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 3
  %19 = getelementptr inbounds %"class.quic::Bbr2MaxBandwidthFilter", %"class.quic::Bbr2MaxBandwidthFilter"* %18, i64 0, i32 0, i64 0
  %20 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 3, i32 0, i64 1
  %21 = getelementptr inbounds %"class.quic::Bbr2MaxBandwidthFilter", %"class.quic::Bbr2MaxBandwidthFilter"* %18, i64 0, i32 0, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %20, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %22, %24
  %26 = select i1 %25, %"class.quic::QuicBandwidth"* %20, %"class.quic::QuicBandwidth"* %19
  %27 = getelementptr inbounds %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth"* %26, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %28, %17
  br i1 %29, label %32, label %30

30:                                               ; preds = %6
  store i64 %28, i64* %7, align 8
  %31 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 18
  store i64 0, i64* %31, align 8
  br label %42

32:                                               ; preds = %6
  %33 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 18
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %33, align 8
  %36 = load %"struct.quic::Bbr2Params"*, %"struct.quic::Bbr2Params"** %9, align 8
  %37 = getelementptr inbounds %"struct.quic::Bbr2Params", %"struct.quic::Bbr2Params"* %36, i64 0, i32 4
  %38 = load i64, i64* %37, align 8
  %39 = icmp ult i64 %35, %38
  br i1 %39, label %42, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.quic::Bbr2NetworkModel", %"class.quic::Bbr2NetworkModel"* %0, i64 0, i32 16
  store i8 1, i8* %41, align 8
  br label %42

42:                                               ; preds = %30, %32, %40, %2
  %43 = phi i32 [ 0, %2 ], [ 2, %30 ], [ 3, %40 ], [ 1, %32 ]
  ret i32 %43
}

declare void @_ZN4quic16BandwidthSamplerC1ERKS0_(%"class.quic::BandwidthSampler"*, %"class.quic::BandwidthSampler"* dereferenceable(328)) unnamed_addr #3

declare void @_ZN4quic16BandwidthSamplerC1EPKNS_20QuicUnackedPacketMapEm(%"class.quic::BandwidthSampler"*, %"class.quic::QuicUnackedPacketMap"*, i64) unnamed_addr #3

declare i64 @_ZNK4quic16BandwidthSampler17total_bytes_ackedEv(%"class.quic::BandwidthSampler"*) unnamed_addr #3

declare i64 @_ZNK4quic16BandwidthSampler16total_bytes_lostEv(%"class.quic::BandwidthSampler"*) unnamed_addr #3

; Function Attrs: nounwind
declare i64 @llroundf(float) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #9

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
