; ModuleID = 'gen/services/viz/public/mojom/compositing/copy_output_request.mojom-test-utils.cc'
source_filename = "gen/services/viz/public/mojom/compositing/copy_output_request.mojom-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.viz::mojom::CopyOutputResultSenderAsyncWaiter" = type { %"class.viz::mojom::CopyOutputResultSender"* }
%"class.viz::mojom::CopyOutputResultSender" = type { i32 (...)** }
%"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting" = type { %"class.viz::mojom::CopyOutputResultSender" }
%"class.viz::CopyOutputResult" = type { i32 (...)**, i8, %"class.gfx::Rect", i8, %class.SkBitmap }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque

$_ZN3viz5mojom22CopyOutputResultSenderD2Ev = comdat any

$_ZN3viz5mojom43CopyOutputResultSenderInterceptorForTestingD0Ev = comdat any

@_ZTVN3viz5mojom43CopyOutputResultSenderInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.viz::mojom::CopyOutputResultSender"*)* @_ZN3viz5mojom22CopyOutputResultSenderD2Ev to i8*), i8* bitcast (void (%"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting"*)* @_ZN3viz5mojom43CopyOutputResultSenderInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting"*, %"class.viz::CopyOutputResult"*)* @_ZN3viz5mojom43CopyOutputResultSenderInterceptorForTesting10SendResultENSt3__110unique_ptrINS_16CopyOutputResultENS2_14default_deleteIS4_EEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN3viz5mojom33CopyOutputResultSenderAsyncWaiterC1EPNS0_22CopyOutputResultSenderE = hidden unnamed_addr alias void (%"class.viz::mojom::CopyOutputResultSenderAsyncWaiter"*, %"class.viz::mojom::CopyOutputResultSender"*), void (%"class.viz::mojom::CopyOutputResultSenderAsyncWaiter"*, %"class.viz::mojom::CopyOutputResultSender"*)* @_ZN3viz5mojom33CopyOutputResultSenderAsyncWaiterC2EPNS0_22CopyOutputResultSenderE
@_ZN3viz5mojom33CopyOutputResultSenderAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.viz::mojom::CopyOutputResultSenderAsyncWaiter"*), void (%"class.viz::mojom::CopyOutputResultSenderAsyncWaiter"*)* @_ZN3viz5mojom33CopyOutputResultSenderAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz5mojom43CopyOutputResultSenderInterceptorForTesting10SendResultENSt3__110unique_ptrINS_16CopyOutputResultENS2_14default_deleteIS4_EEEE(%"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting"*, %"class.viz::CopyOutputResult"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting"* %0 to %"class.viz::mojom::CopyOutputResultSender"* (%"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting"*)***
  %4 = load %"class.viz::mojom::CopyOutputResultSender"* (%"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting"*)**, %"class.viz::mojom::CopyOutputResultSender"* (%"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.viz::mojom::CopyOutputResultSender"* (%"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting"*)*, %"class.viz::mojom::CopyOutputResultSender"* (%"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting"*)** %4, i64 3
  %6 = load %"class.viz::mojom::CopyOutputResultSender"* (%"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting"*)*, %"class.viz::mojom::CopyOutputResultSender"* (%"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.viz::mojom::CopyOutputResultSender"* %6(%"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting"* %0) #5
  %8 = bitcast %"class.viz::mojom::CopyOutputResultSender"* %7 to void (%"class.viz::mojom::CopyOutputResultSender"*, %"class.viz::CopyOutputResult"*)***
  %9 = load void (%"class.viz::mojom::CopyOutputResultSender"*, %"class.viz::CopyOutputResult"*)**, void (%"class.viz::mojom::CopyOutputResultSender"*, %"class.viz::CopyOutputResult"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.viz::mojom::CopyOutputResultSender"*, %"class.viz::CopyOutputResult"*)*, void (%"class.viz::mojom::CopyOutputResultSender"*, %"class.viz::CopyOutputResult"*)** %9, i64 2
  %11 = load void (%"class.viz::mojom::CopyOutputResultSender"*, %"class.viz::CopyOutputResult"*)*, void (%"class.viz::mojom::CopyOutputResultSender"*, %"class.viz::CopyOutputResult"*)** %10, align 8
  tail call void %11(%"class.viz::mojom::CopyOutputResultSender"* %7, %"class.viz::CopyOutputResult"* %1) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz5mojom33CopyOutputResultSenderAsyncWaiterC2EPNS0_22CopyOutputResultSenderE(%"class.viz::mojom::CopyOutputResultSenderAsyncWaiter"* nocapture, %"class.viz::mojom::CopyOutputResultSender"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.viz::mojom::CopyOutputResultSenderAsyncWaiter", %"class.viz::mojom::CopyOutputResultSenderAsyncWaiter"* %0, i64 0, i32 0
  store %"class.viz::mojom::CopyOutputResultSender"* %1, %"class.viz::mojom::CopyOutputResultSender"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3viz5mojom33CopyOutputResultSenderAsyncWaiterD2Ev(%"class.viz::mojom::CopyOutputResultSenderAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom22CopyOutputResultSenderD2Ev(%"class.viz::mojom::CopyOutputResultSender"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3viz5mojom43CopyOutputResultSenderInterceptorForTestingD0Ev(%"class.viz::mojom::CopyOutputResultSenderInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
