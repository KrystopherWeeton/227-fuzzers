; ModuleID = '../../third_party/libjxl/src/lib/jxl/optimize.cc'
source_filename = "../../third_party/libjxl/src/lib/jxl/optimize.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { double*, double*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { double* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { double (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::vector"*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::__less.12" = type { i8 }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::vector"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZNSt3__16__sortIRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEvT0_S9_T_ = comdat any

$_ZNSt3__17__sort3IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_T_ = comdat any

$_ZNSt3__17__sort4IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_S9_T_ = comdat any

$_ZNSt3__17__sort5IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEvT0_S9_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEbT0_S9_T_ = comdat any

@.str.1 = private unnamed_addr constant [22 x i8] c"%s:%d: JXL_CHECK: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [49 x i8] c"../../third_party/libjxl/src/lib/jxl/optimize.cc\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"!simplex.empty()\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"simplex.size() == simplex[0].size()\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"a.size() == b.size()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl8optimize10RunSimplexEidiRKNSt3__16vectorIdNS1_9allocatorIdEEEERKNS1_8functionIFdS7_EEE(%"class.std::__1::vector"* noalias sret, i32, double, i32, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #0 {
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"struct.std::__1::__less.12", align 1
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = alloca %"class.std::__1::vector", align 8
  %14 = alloca %"class.std::__1::vector", align 8
  %15 = alloca %"class.std::__1::vector", align 8
  %16 = alloca %"struct.std::__1::__less.12", align 1
  %17 = alloca %"class.std::__1::vector", align 8
  %18 = alloca %"class.std::__1::vector", align 8
  %19 = alloca %"struct.std::__1::__less.12", align 1
  %20 = alloca %"class.std::__1::vector", align 8
  %21 = alloca [1 x %"class.std::__1::vector"], align 8
  %22 = alloca %"class.std::__1::vector.1", align 8
  %23 = bitcast %"class.std::__1::vector.1"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #7
  %24 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %22, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %22, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast %"class.std::__1::vector"* %20 to i8*
  %28 = bitcast %"class.std::__1::vector.1"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #7, !noalias !2
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = add nsw i32 %1, 1
  %33 = sext i32 %32 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #7, !noalias !2
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %47, label %35

35:                                               ; preds = %6
  %36 = icmp slt i32 %32, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::vector"* %20 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %38) #8
  unreachable

39:                                               ; preds = %35
  %40 = shl nsw i64 %33, 3
  %41 = tail call i8* @_Znwm(i64 %40) #9
  %42 = bitcast i8* %41 to double*
  %43 = bitcast %"class.std::__1::vector"* %20 to i8**
  store i8* %41, i8** %43, align 8, !noalias !2
  %44 = getelementptr inbounds double, double* %42, i64 %33
  store double* %44, double** %31, align 8, !noalias !2
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 %40, i1 false) #7, !noalias !2
  %45 = bitcast double** %30 to i64*
  %46 = ptrtoint double* %44 to i64
  store i64 %46, i64* %45, align 8, !noalias !2
  br label %47

47:                                               ; preds = %39, %6
  %48 = phi double* [ null, %6 ], [ %44, %39 ]
  %49 = phi double* [ null, %6 ], [ %42, %39 ]
  %50 = ptrtoint double* %49 to i64
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8, !noalias !2
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %54 = bitcast double** %53 to i64*
  %55 = load i64, i64* %54, align 8, !noalias !2
  %56 = getelementptr inbounds double, double* %49, i64 1
  %57 = bitcast double* %56 to i8*
  %58 = ptrtoint double* %52 to i64
  %59 = sub i64 %55, %58
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %47
  %62 = bitcast double* %52 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %62, i64 %59, i1 false) #7
  br label %63

63:                                               ; preds = %61, %47
  %64 = bitcast %"class.std::__1::vector"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #7, !noalias !2
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 24, i1 false) #7, !noalias !2
  %66 = ptrtoint double* %56 to i64
  %67 = ptrtoint double* %48 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %264, label %71

71:                                               ; preds = %63
  %72 = icmp ugt i64 %69, 2305843009213693951
  br i1 %72, label %73, label %75

73:                                               ; preds = %71
  %74 = bitcast %"class.std::__1::vector"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %74) #8
  unreachable

75:                                               ; preds = %71
  %76 = tail call i8* @_Znwm(i64 %68) #9
  %77 = bitcast i8* %76 to double*
  %78 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 1
  %79 = bitcast double** %78 to i8**
  store i8* %76, i8** %79, align 8, !noalias !2
  %80 = bitcast %"class.std::__1::vector"* %18 to i8**
  store i8* %76, i8** %80, align 8, !noalias !2
  %81 = getelementptr inbounds double, double* %77, i64 %69
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 2, i32 0, i32 0
  store double* %81, double** %82, align 8, !noalias !2
  %83 = bitcast double** %78 to i64*
  %84 = ptrtoint i8* %76 to i64
  %85 = icmp eq double* %56, %48
  br i1 %85, label %262, label %86

86:                                               ; preds = %75
  %87 = getelementptr double, double* %48, i64 -2
  %88 = ptrtoint double* %87 to i64
  %89 = sub i64 %88, %50
  %90 = lshr i64 %89, 3
  %91 = add nuw nsw i64 %90, 1
  %92 = icmp ult i64 %91, 4
  br i1 %92, label %188, label %93

93:                                               ; preds = %86
  %94 = getelementptr double, double* %48, i64 -2
  %95 = ptrtoint double* %94 to i64
  %96 = sub i64 %95, %50
  %97 = lshr i64 %96, 3
  %98 = add i64 %96, 8
  %99 = and i64 %98, -8
  %100 = getelementptr i8, i8* %76, i64 %99
  %101 = add nuw nsw i64 %97, 2
  %102 = getelementptr double, double* %49, i64 %101
  %103 = bitcast double* %102 to i8*
  %104 = icmp ult i8* %76, %103
  %105 = icmp ugt i8* %100, %57
  %106 = and i1 %104, %105
  br i1 %106, label %188, label %107

107:                                              ; preds = %93
  %108 = and i64 %91, 4611686018427387900
  %109 = getelementptr double, double* %77, i64 %108
  %110 = getelementptr double, double* %56, i64 %108
  %111 = add nsw i64 %108, -4
  %112 = lshr exact i64 %111, 2
  %113 = add nuw nsw i64 %112, 1
  %114 = and i64 %113, 3
  %115 = icmp ult i64 %111, 12
  br i1 %115, label %167, label %116

116:                                              ; preds = %107
  %117 = sub nsw i64 %113, %114
  br label %118

118:                                              ; preds = %118, %116
  %119 = phi i64 [ 0, %116 ], [ %164, %118 ]
  %120 = phi i64 [ %117, %116 ], [ %165, %118 ]
  %121 = getelementptr double, double* %77, i64 %119
  %122 = getelementptr double, double* %56, i64 %119
  %123 = bitcast double* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !5, !noalias !2
  %125 = getelementptr double, double* %122, i64 2
  %126 = bitcast double* %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !5, !noalias !2
  %128 = bitcast double* %121 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %128, align 8, !alias.scope !8, !noalias !10
  %129 = getelementptr double, double* %121, i64 2
  %130 = bitcast double* %129 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %130, align 8, !alias.scope !8, !noalias !10
  %131 = or i64 %119, 4
  %132 = getelementptr double, double* %77, i64 %131
  %133 = getelementptr double, double* %56, i64 %131
  %134 = bitcast double* %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !5, !noalias !2
  %136 = getelementptr double, double* %133, i64 2
  %137 = bitcast double* %136 to <2 x i64>*
  %138 = load <2 x i64>, <2 x i64>* %137, align 8, !alias.scope !5, !noalias !2
  %139 = bitcast double* %132 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %139, align 8, !alias.scope !8, !noalias !10
  %140 = getelementptr double, double* %132, i64 2
  %141 = bitcast double* %140 to <2 x i64>*
  store <2 x i64> %138, <2 x i64>* %141, align 8, !alias.scope !8, !noalias !10
  %142 = or i64 %119, 8
  %143 = getelementptr double, double* %77, i64 %142
  %144 = getelementptr double, double* %56, i64 %142
  %145 = bitcast double* %144 to <2 x i64>*
  %146 = load <2 x i64>, <2 x i64>* %145, align 8, !alias.scope !5, !noalias !2
  %147 = getelementptr double, double* %144, i64 2
  %148 = bitcast double* %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !5, !noalias !2
  %150 = bitcast double* %143 to <2 x i64>*
  store <2 x i64> %146, <2 x i64>* %150, align 8, !alias.scope !8, !noalias !10
  %151 = getelementptr double, double* %143, i64 2
  %152 = bitcast double* %151 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %152, align 8, !alias.scope !8, !noalias !10
  %153 = or i64 %119, 12
  %154 = getelementptr double, double* %77, i64 %153
  %155 = getelementptr double, double* %56, i64 %153
  %156 = bitcast double* %155 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 8, !alias.scope !5, !noalias !2
  %158 = getelementptr double, double* %155, i64 2
  %159 = bitcast double* %158 to <2 x i64>*
  %160 = load <2 x i64>, <2 x i64>* %159, align 8, !alias.scope !5, !noalias !2
  %161 = bitcast double* %154 to <2 x i64>*
  store <2 x i64> %157, <2 x i64>* %161, align 8, !alias.scope !8, !noalias !10
  %162 = getelementptr double, double* %154, i64 2
  %163 = bitcast double* %162 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %163, align 8, !alias.scope !8, !noalias !10
  %164 = add i64 %119, 16
  %165 = add i64 %120, -4
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %118, !llvm.loop !11

167:                                              ; preds = %118, %107
  %168 = phi i64 [ 0, %107 ], [ %164, %118 ]
  %169 = icmp eq i64 %114, 0
  br i1 %169, label %186, label %170

170:                                              ; preds = %167, %170
  %171 = phi i64 [ %183, %170 ], [ %168, %167 ]
  %172 = phi i64 [ %184, %170 ], [ %114, %167 ]
  %173 = getelementptr double, double* %77, i64 %171
  %174 = getelementptr double, double* %56, i64 %171
  %175 = bitcast double* %174 to <2 x i64>*
  %176 = load <2 x i64>, <2 x i64>* %175, align 8, !alias.scope !5, !noalias !2
  %177 = getelementptr double, double* %174, i64 2
  %178 = bitcast double* %177 to <2 x i64>*
  %179 = load <2 x i64>, <2 x i64>* %178, align 8, !alias.scope !5, !noalias !2
  %180 = bitcast double* %173 to <2 x i64>*
  store <2 x i64> %176, <2 x i64>* %180, align 8, !alias.scope !8, !noalias !10
  %181 = getelementptr double, double* %173, i64 2
  %182 = bitcast double* %181 to <2 x i64>*
  store <2 x i64> %179, <2 x i64>* %182, align 8, !alias.scope !8, !noalias !10
  %183 = add i64 %171, 4
  %184 = add i64 %172, -1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %170, !llvm.loop !13

186:                                              ; preds = %170, %167
  %187 = icmp eq i64 %91, %108
  br i1 %187, label %259, label %188

188:                                              ; preds = %186, %93, %86
  %189 = phi double* [ %77, %93 ], [ %77, %86 ], [ %109, %186 ]
  %190 = phi double* [ %56, %93 ], [ %56, %86 ], [ %110, %186 ]
  %191 = ptrtoint double* %190 to i64
  %192 = getelementptr double, double* %48, i64 -1
  %193 = ptrtoint double* %192 to i64
  %194 = sub i64 %193, %191
  %195 = lshr i64 %194, 3
  %196 = add nuw nsw i64 %195, 1
  %197 = and i64 %196, 7
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %210, label %199

199:                                              ; preds = %188, %199
  %200 = phi double* [ %207, %199 ], [ %189, %188 ]
  %201 = phi double* [ %206, %199 ], [ %190, %188 ]
  %202 = phi i64 [ %208, %199 ], [ %197, %188 ]
  %203 = bitcast double* %200 to i64*
  %204 = bitcast double* %201 to i64*
  %205 = load i64, i64* %204, align 8, !noalias !2
  store i64 %205, i64* %203, align 8, !noalias !2
  %206 = getelementptr inbounds double, double* %201, i64 1
  %207 = getelementptr inbounds double, double* %200, i64 1
  %208 = add i64 %202, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %210, label %199, !llvm.loop !15

210:                                              ; preds = %199, %188
  %211 = phi double* [ undef, %188 ], [ %207, %199 ]
  %212 = phi double* [ %189, %188 ], [ %207, %199 ]
  %213 = phi double* [ %190, %188 ], [ %206, %199 ]
  %214 = icmp ult i64 %194, 56
  br i1 %214, label %259, label %215

215:                                              ; preds = %210, %215
  %216 = phi double* [ %257, %215 ], [ %212, %210 ]
  %217 = phi double* [ %256, %215 ], [ %213, %210 ]
  %218 = bitcast double* %216 to i64*
  %219 = bitcast double* %217 to i64*
  %220 = load i64, i64* %219, align 8, !noalias !2
  store i64 %220, i64* %218, align 8, !noalias !2
  %221 = getelementptr inbounds double, double* %217, i64 1
  %222 = getelementptr inbounds double, double* %216, i64 1
  %223 = bitcast double* %222 to i64*
  %224 = bitcast double* %221 to i64*
  %225 = load i64, i64* %224, align 8, !noalias !2
  store i64 %225, i64* %223, align 8, !noalias !2
  %226 = getelementptr inbounds double, double* %217, i64 2
  %227 = getelementptr inbounds double, double* %216, i64 2
  %228 = bitcast double* %227 to i64*
  %229 = bitcast double* %226 to i64*
  %230 = load i64, i64* %229, align 8, !noalias !2
  store i64 %230, i64* %228, align 8, !noalias !2
  %231 = getelementptr inbounds double, double* %217, i64 3
  %232 = getelementptr inbounds double, double* %216, i64 3
  %233 = bitcast double* %232 to i64*
  %234 = bitcast double* %231 to i64*
  %235 = load i64, i64* %234, align 8, !noalias !2
  store i64 %235, i64* %233, align 8, !noalias !2
  %236 = getelementptr inbounds double, double* %217, i64 4
  %237 = getelementptr inbounds double, double* %216, i64 4
  %238 = bitcast double* %237 to i64*
  %239 = bitcast double* %236 to i64*
  %240 = load i64, i64* %239, align 8, !noalias !2
  store i64 %240, i64* %238, align 8, !noalias !2
  %241 = getelementptr inbounds double, double* %217, i64 5
  %242 = getelementptr inbounds double, double* %216, i64 5
  %243 = bitcast double* %242 to i64*
  %244 = bitcast double* %241 to i64*
  %245 = load i64, i64* %244, align 8, !noalias !2
  store i64 %245, i64* %243, align 8, !noalias !2
  %246 = getelementptr inbounds double, double* %217, i64 6
  %247 = getelementptr inbounds double, double* %216, i64 6
  %248 = bitcast double* %247 to i64*
  %249 = bitcast double* %246 to i64*
  %250 = load i64, i64* %249, align 8, !noalias !2
  store i64 %250, i64* %248, align 8, !noalias !2
  %251 = getelementptr inbounds double, double* %217, i64 7
  %252 = getelementptr inbounds double, double* %216, i64 7
  %253 = bitcast double* %252 to i64*
  %254 = bitcast double* %251 to i64*
  %255 = load i64, i64* %254, align 8, !noalias !2
  store i64 %255, i64* %253, align 8, !noalias !2
  %256 = getelementptr inbounds double, double* %217, i64 8
  %257 = getelementptr inbounds double, double* %216, i64 8
  %258 = icmp eq double* %256, %48
  br i1 %258, label %259, label %215, !llvm.loop !16

259:                                              ; preds = %210, %215, %186
  %260 = phi double* [ %109, %186 ], [ %211, %210 ], [ %257, %215 ]
  %261 = ptrtoint double* %260 to i64
  br label %262

262:                                              ; preds = %259, %75
  %263 = phi i64 [ %84, %75 ], [ %261, %259 ]
  store i64 %263, i64* %83, align 8, !noalias !2
  br label %264

264:                                              ; preds = %262, %63
  %265 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1, i32 0
  %266 = load double (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::vector"*)*, double (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::vector"*)** %265, align 8, !noalias !2
  %267 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0
  %268 = call double %266(%"union.std::__1::__function::__policy_storage"* %267, %"class.std::__1::vector"* nonnull dereferenceable(24) %18) #7, !noalias !2
  %269 = load double*, double** %29, align 8, !noalias !2
  store double %268, double* %269, align 8, !noalias !2
  %270 = load double*, double** %65, align 8, !noalias !2
  %271 = icmp eq double* %270, null
  br i1 %271, label %277, label %272

272:                                              ; preds = %264
  %273 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %18, i64 0, i32 0, i32 1
  %274 = ptrtoint double* %270 to i64
  %275 = bitcast double** %273 to i64*
  store i64 %274, i64* %275, align 8, !noalias !2
  %276 = bitcast double* %270 to i8*
  call void @_ZdlPv(i8* %276) #9
  br label %277

277:                                              ; preds = %272, %264
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #7, !noalias !2
  %278 = bitcast [1 x %"class.std::__1::vector"]* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 24, i1 false) #7, !alias.scope !2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %278) #7, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %278, i8 0, i64 24, i1 false) #7, !noalias !2
  %279 = bitcast double** %30 to i64*
  %280 = load i64, i64* %279, align 8, !noalias !2
  %281 = bitcast %"class.std::__1::vector"* %20 to i64*
  %282 = load i64, i64* %281, align 8, !noalias !2
  %283 = sub i64 %280, %282
  %284 = ashr exact i64 %283, 3
  %285 = icmp eq i64 %283, 0
  br i1 %285, label %308, label %286

286:                                              ; preds = %277
  %287 = icmp ugt i64 %284, 2305843009213693951
  br i1 %287, label %288, label %290

288:                                              ; preds = %286
  %289 = bitcast [1 x %"class.std::__1::vector"]* %21 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %289) #8
  unreachable

290:                                              ; preds = %286
  %291 = call i8* @_Znwm(i64 %283) #9
  %292 = bitcast i8* %291 to double*
  %293 = getelementptr inbounds [1 x %"class.std::__1::vector"], [1 x %"class.std::__1::vector"]* %21, i64 0, i64 0, i32 0, i32 1
  %294 = bitcast double** %293 to i8**
  store i8* %291, i8** %294, align 8, !noalias !2
  %295 = bitcast [1 x %"class.std::__1::vector"]* %21 to i8**
  store i8* %291, i8** %295, align 8, !noalias !2
  %296 = getelementptr inbounds double, double* %292, i64 %284
  %297 = getelementptr inbounds [1 x %"class.std::__1::vector"], [1 x %"class.std::__1::vector"]* %21, i64 0, i64 0, i32 0, i32 2, i32 0, i32 0
  store double* %296, double** %297, align 8, !noalias !2
  %298 = bitcast double** %293 to i64*
  %299 = ptrtoint i8* %291 to i64
  %300 = icmp sgt i64 %283, 0
  br i1 %300, label %301, label %306

301:                                              ; preds = %290
  %302 = lshr exact i64 %283, 3
  %303 = inttoptr i64 %282 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %291, i8* align 8 %303, i64 %283, i1 false) #7
  %304 = getelementptr inbounds double, double* %292, i64 %302
  %305 = ptrtoint double* %304 to i64
  br label %306

306:                                              ; preds = %301, %290
  %307 = phi i64 [ %305, %301 ], [ %299, %290 ]
  store i64 %307, i64* %298, align 8, !noalias !2
  br label %308

308:                                              ; preds = %306, %277
  %309 = phi i8* [ null, %277 ], [ %291, %306 ]
  %310 = phi double* [ null, %277 ], [ %292, %306 ]
  %311 = phi i64 [ 0, %277 ], [ %299, %306 ]
  %312 = phi i64 [ 0, %277 ], [ %307, %306 ]
  %313 = call i8* @_Znwm(i64 24) #9, !noalias !2
  %314 = bitcast %"class.std::__1::vector"** %25 to i8**
  store i8* %313, i8** %314, align 8, !alias.scope !2
  %315 = bitcast %"class.std::__1::vector.1"* %22 to i8**
  store i8* %313, i8** %315, align 8, !alias.scope !2
  %316 = getelementptr inbounds i8, i8* %313, i64 24
  %317 = bitcast %"class.std::__1::vector"** %26 to i8**
  store i8* %316, i8** %317, align 8, !alias.scope !2
  %318 = bitcast %"class.std::__1::vector"** %25 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %313, i8 0, i64 24, i1 false) #7, !noalias !2
  %319 = sub i64 %312, %311
  %320 = ashr exact i64 %319, 3
  %321 = icmp eq i64 %319, 0
  br i1 %321, label %344, label %322

322:                                              ; preds = %308
  %323 = icmp ugt i64 %320, 2305843009213693951
  br i1 %323, label %324, label %326

324:                                              ; preds = %322
  %325 = bitcast i8* %313 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %325) #8
  unreachable

326:                                              ; preds = %322
  %327 = call i8* @_Znwm(i64 %319) #9
  %328 = bitcast i8* %327 to double*
  %329 = getelementptr inbounds i8, i8* %313, i64 8
  %330 = bitcast i8* %329 to i8**
  store i8* %327, i8** %330, align 8, !noalias !2
  %331 = bitcast i8* %313 to i8**
  store i8* %327, i8** %331, align 8, !noalias !2
  %332 = getelementptr inbounds double, double* %328, i64 %320
  %333 = getelementptr inbounds i8, i8* %313, i64 16
  %334 = bitcast i8* %333 to double**
  store double* %332, double** %334, align 8, !noalias !2
  %335 = bitcast i8* %329 to i64*
  %336 = ptrtoint i8* %327 to i64
  %337 = icmp sgt i64 %319, 0
  br i1 %337, label %338, label %342

338:                                              ; preds = %326
  %339 = lshr exact i64 %319, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %327, i8* align 8 %309, i64 %319, i1 false) #7, !noalias !2
  %340 = getelementptr inbounds double, double* %328, i64 %339
  %341 = ptrtoint double* %340 to i64
  br label %342

342:                                              ; preds = %338, %326
  %343 = phi i64 [ %341, %338 ], [ %336, %326 ]
  store i64 %343, i64* %335, align 8, !noalias !2
  br label %344

344:                                              ; preds = %342, %308
  %345 = ptrtoint i8* %316 to i64
  store i64 %345, i64* %318, align 8, !alias.scope !2
  %346 = icmp eq double* %310, null
  br i1 %346, label %351, label %347

347:                                              ; preds = %344
  %348 = ptrtoint double* %310 to i64
  %349 = getelementptr inbounds [1 x %"class.std::__1::vector"], [1 x %"class.std::__1::vector"]* %21, i64 0, i64 0, i32 0, i32 1
  %350 = bitcast double** %349 to i64*
  store i64 %348, i64* %350, align 8, !noalias !2
  call void @_ZdlPv(i8* %309) #9
  br label %351

351:                                              ; preds = %347, %344
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %278) #7, !noalias !2
  %352 = icmp sgt i32 %1, 0
  br i1 %352, label %353, label %631

353:                                              ; preds = %351
  %354 = bitcast %"class.std::__1::vector"* %17 to i8*
  %355 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 0
  %356 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 1
  %357 = bitcast double** %356 to i8**
  %358 = bitcast %"class.std::__1::vector"* %17 to i8**
  %359 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  %360 = bitcast double** %356 to i64*
  %361 = getelementptr inbounds %"struct.std::__1::__less.12", %"struct.std::__1::__less.12"* %19, i64 0, i32 0
  %362 = zext i32 %1 to i64
  br label %363

363:                                              ; preds = %627, %353
  %364 = phi i64 [ 0, %353 ], [ %373, %627 ]
  %365 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %24, align 8, !alias.scope !2
  %366 = icmp eq %"class.std::__1::vector"* %20, %365
  br i1 %366, label %372, label %367

367:                                              ; preds = %363
  %368 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %365, i64 0, i32 0, i32 0
  %369 = load double*, double** %368, align 8
  %370 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %365, i64 0, i32 0, i32 1
  %371 = load double*, double** %370, align 8
  call void @_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* nonnull %20, double* %369, double* %371) #7
  br label %372

372:                                              ; preds = %367, %363
  %373 = add nuw nsw i64 %364, 1
  %374 = load double*, double** %29, align 8, !noalias !2
  %375 = getelementptr inbounds double, double* %374, i64 %373
  %376 = load double, double* %375, align 8
  %377 = fadd double %376, %2
  store double %377, double* %375, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %354) #7, !noalias !2
  %378 = load double*, double** %29, align 8, !noalias !2
  %379 = ptrtoint double* %378 to i64
  %380 = getelementptr inbounds double, double* %378, i64 1
  %381 = bitcast double* %380 to i8*
  %382 = load double*, double** %30, align 8, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %354, i8 0, i64 24, i1 false) #7, !noalias !2
  %383 = ptrtoint double* %380 to i64
  %384 = ptrtoint double* %382 to i64
  %385 = sub i64 %384, %383
  %386 = ashr exact i64 %385, 3
  %387 = icmp eq i64 %385, 0
  br i1 %387, label %576, label %388

388:                                              ; preds = %372
  %389 = icmp ugt i64 %386, 2305843009213693951
  br i1 %389, label %390, label %392

390:                                              ; preds = %388
  %391 = bitcast %"class.std::__1::vector"* %17 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %391) #8
  unreachable

392:                                              ; preds = %388
  %393 = call i8* @_Znwm(i64 %385) #9
  %394 = bitcast i8* %393 to double*
  store i8* %393, i8** %357, align 8, !noalias !2
  store i8* %393, i8** %358, align 8, !noalias !2
  %395 = getelementptr inbounds double, double* %394, i64 %386
  store double* %395, double** %359, align 8, !noalias !2
  %396 = ptrtoint i8* %393 to i64
  %397 = icmp eq double* %380, %382
  br i1 %397, label %574, label %398

398:                                              ; preds = %392
  %399 = getelementptr double, double* %382, i64 -2
  %400 = ptrtoint double* %399 to i64
  %401 = sub i64 %400, %379
  %402 = lshr i64 %401, 3
  %403 = add nuw nsw i64 %402, 1
  %404 = icmp ult i64 %403, 4
  br i1 %404, label %500, label %405

405:                                              ; preds = %398
  %406 = getelementptr i8, i8* %393, i64 8
  %407 = getelementptr double, double* %382, i64 -2
  %408 = ptrtoint double* %407 to i64
  %409 = sub i64 %408, %379
  %410 = lshr i64 %409, 3
  %411 = and i64 %409, -8
  %412 = getelementptr i8, i8* %406, i64 %411
  %413 = getelementptr double, double* %378, i64 2
  %414 = getelementptr double, double* %413, i64 %410
  %415 = bitcast double* %414 to i8*
  %416 = icmp ult i8* %393, %415
  %417 = icmp ugt i8* %412, %381
  %418 = and i1 %416, %417
  br i1 %418, label %500, label %419

419:                                              ; preds = %405
  %420 = and i64 %403, 4611686018427387900
  %421 = getelementptr double, double* %394, i64 %420
  %422 = getelementptr double, double* %380, i64 %420
  %423 = add nsw i64 %420, -4
  %424 = lshr exact i64 %423, 2
  %425 = add nuw nsw i64 %424, 1
  %426 = and i64 %425, 3
  %427 = icmp ult i64 %423, 12
  br i1 %427, label %479, label %428

428:                                              ; preds = %419
  %429 = sub nsw i64 %425, %426
  br label %430

430:                                              ; preds = %430, %428
  %431 = phi i64 [ 0, %428 ], [ %476, %430 ]
  %432 = phi i64 [ %429, %428 ], [ %477, %430 ]
  %433 = getelementptr double, double* %394, i64 %431
  %434 = getelementptr double, double* %380, i64 %431
  %435 = bitcast double* %434 to <2 x i64>*
  %436 = load <2 x i64>, <2 x i64>* %435, align 8, !alias.scope !17
  %437 = getelementptr double, double* %434, i64 2
  %438 = bitcast double* %437 to <2 x i64>*
  %439 = load <2 x i64>, <2 x i64>* %438, align 8, !alias.scope !17
  %440 = bitcast double* %433 to <2 x i64>*
  store <2 x i64> %436, <2 x i64>* %440, align 8, !alias.scope !20, !noalias !22
  %441 = getelementptr double, double* %433, i64 2
  %442 = bitcast double* %441 to <2 x i64>*
  store <2 x i64> %439, <2 x i64>* %442, align 8, !alias.scope !20, !noalias !22
  %443 = or i64 %431, 4
  %444 = getelementptr double, double* %394, i64 %443
  %445 = getelementptr double, double* %380, i64 %443
  %446 = bitcast double* %445 to <2 x i64>*
  %447 = load <2 x i64>, <2 x i64>* %446, align 8, !alias.scope !17
  %448 = getelementptr double, double* %445, i64 2
  %449 = bitcast double* %448 to <2 x i64>*
  %450 = load <2 x i64>, <2 x i64>* %449, align 8, !alias.scope !17
  %451 = bitcast double* %444 to <2 x i64>*
  store <2 x i64> %447, <2 x i64>* %451, align 8, !alias.scope !20, !noalias !22
  %452 = getelementptr double, double* %444, i64 2
  %453 = bitcast double* %452 to <2 x i64>*
  store <2 x i64> %450, <2 x i64>* %453, align 8, !alias.scope !20, !noalias !22
  %454 = or i64 %431, 8
  %455 = getelementptr double, double* %394, i64 %454
  %456 = getelementptr double, double* %380, i64 %454
  %457 = bitcast double* %456 to <2 x i64>*
  %458 = load <2 x i64>, <2 x i64>* %457, align 8, !alias.scope !17
  %459 = getelementptr double, double* %456, i64 2
  %460 = bitcast double* %459 to <2 x i64>*
  %461 = load <2 x i64>, <2 x i64>* %460, align 8, !alias.scope !17
  %462 = bitcast double* %455 to <2 x i64>*
  store <2 x i64> %458, <2 x i64>* %462, align 8, !alias.scope !20, !noalias !22
  %463 = getelementptr double, double* %455, i64 2
  %464 = bitcast double* %463 to <2 x i64>*
  store <2 x i64> %461, <2 x i64>* %464, align 8, !alias.scope !20, !noalias !22
  %465 = or i64 %431, 12
  %466 = getelementptr double, double* %394, i64 %465
  %467 = getelementptr double, double* %380, i64 %465
  %468 = bitcast double* %467 to <2 x i64>*
  %469 = load <2 x i64>, <2 x i64>* %468, align 8, !alias.scope !17
  %470 = getelementptr double, double* %467, i64 2
  %471 = bitcast double* %470 to <2 x i64>*
  %472 = load <2 x i64>, <2 x i64>* %471, align 8, !alias.scope !17
  %473 = bitcast double* %466 to <2 x i64>*
  store <2 x i64> %469, <2 x i64>* %473, align 8, !alias.scope !20, !noalias !22
  %474 = getelementptr double, double* %466, i64 2
  %475 = bitcast double* %474 to <2 x i64>*
  store <2 x i64> %472, <2 x i64>* %475, align 8, !alias.scope !20, !noalias !22
  %476 = add i64 %431, 16
  %477 = add i64 %432, -4
  %478 = icmp eq i64 %477, 0
  br i1 %478, label %479, label %430, !llvm.loop !23

479:                                              ; preds = %430, %419
  %480 = phi i64 [ 0, %419 ], [ %476, %430 ]
  %481 = icmp eq i64 %426, 0
  br i1 %481, label %498, label %482

482:                                              ; preds = %479, %482
  %483 = phi i64 [ %495, %482 ], [ %480, %479 ]
  %484 = phi i64 [ %496, %482 ], [ %426, %479 ]
  %485 = getelementptr double, double* %394, i64 %483
  %486 = getelementptr double, double* %380, i64 %483
  %487 = bitcast double* %486 to <2 x i64>*
  %488 = load <2 x i64>, <2 x i64>* %487, align 8, !alias.scope !17
  %489 = getelementptr double, double* %486, i64 2
  %490 = bitcast double* %489 to <2 x i64>*
  %491 = load <2 x i64>, <2 x i64>* %490, align 8, !alias.scope !17
  %492 = bitcast double* %485 to <2 x i64>*
  store <2 x i64> %488, <2 x i64>* %492, align 8, !alias.scope !20, !noalias !22
  %493 = getelementptr double, double* %485, i64 2
  %494 = bitcast double* %493 to <2 x i64>*
  store <2 x i64> %491, <2 x i64>* %494, align 8, !alias.scope !20, !noalias !22
  %495 = add i64 %483, 4
  %496 = add i64 %484, -1
  %497 = icmp eq i64 %496, 0
  br i1 %497, label %498, label %482, !llvm.loop !24

498:                                              ; preds = %482, %479
  %499 = icmp eq i64 %403, %420
  br i1 %499, label %571, label %500

500:                                              ; preds = %498, %405, %398
  %501 = phi double* [ %394, %405 ], [ %394, %398 ], [ %421, %498 ]
  %502 = phi double* [ %380, %405 ], [ %380, %398 ], [ %422, %498 ]
  %503 = ptrtoint double* %502 to i64
  %504 = getelementptr double, double* %382, i64 -1
  %505 = ptrtoint double* %504 to i64
  %506 = sub i64 %505, %503
  %507 = lshr i64 %506, 3
  %508 = add nuw nsw i64 %507, 1
  %509 = and i64 %508, 7
  %510 = icmp eq i64 %509, 0
  br i1 %510, label %522, label %511

511:                                              ; preds = %500, %511
  %512 = phi double* [ %519, %511 ], [ %501, %500 ]
  %513 = phi double* [ %518, %511 ], [ %502, %500 ]
  %514 = phi i64 [ %520, %511 ], [ %509, %500 ]
  %515 = bitcast double* %512 to i64*
  %516 = bitcast double* %513 to i64*
  %517 = load i64, i64* %516, align 8
  store i64 %517, i64* %515, align 8, !noalias !2
  %518 = getelementptr inbounds double, double* %513, i64 1
  %519 = getelementptr inbounds double, double* %512, i64 1
  %520 = add i64 %514, -1
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %522, label %511, !llvm.loop !25

522:                                              ; preds = %511, %500
  %523 = phi double* [ undef, %500 ], [ %519, %511 ]
  %524 = phi double* [ %501, %500 ], [ %519, %511 ]
  %525 = phi double* [ %502, %500 ], [ %518, %511 ]
  %526 = icmp ult i64 %506, 56
  br i1 %526, label %571, label %527

527:                                              ; preds = %522, %527
  %528 = phi double* [ %569, %527 ], [ %524, %522 ]
  %529 = phi double* [ %568, %527 ], [ %525, %522 ]
  %530 = bitcast double* %528 to i64*
  %531 = bitcast double* %529 to i64*
  %532 = load i64, i64* %531, align 8
  store i64 %532, i64* %530, align 8, !noalias !2
  %533 = getelementptr inbounds double, double* %529, i64 1
  %534 = getelementptr inbounds double, double* %528, i64 1
  %535 = bitcast double* %534 to i64*
  %536 = bitcast double* %533 to i64*
  %537 = load i64, i64* %536, align 8
  store i64 %537, i64* %535, align 8, !noalias !2
  %538 = getelementptr inbounds double, double* %529, i64 2
  %539 = getelementptr inbounds double, double* %528, i64 2
  %540 = bitcast double* %539 to i64*
  %541 = bitcast double* %538 to i64*
  %542 = load i64, i64* %541, align 8
  store i64 %542, i64* %540, align 8, !noalias !2
  %543 = getelementptr inbounds double, double* %529, i64 3
  %544 = getelementptr inbounds double, double* %528, i64 3
  %545 = bitcast double* %544 to i64*
  %546 = bitcast double* %543 to i64*
  %547 = load i64, i64* %546, align 8
  store i64 %547, i64* %545, align 8, !noalias !2
  %548 = getelementptr inbounds double, double* %529, i64 4
  %549 = getelementptr inbounds double, double* %528, i64 4
  %550 = bitcast double* %549 to i64*
  %551 = bitcast double* %548 to i64*
  %552 = load i64, i64* %551, align 8
  store i64 %552, i64* %550, align 8, !noalias !2
  %553 = getelementptr inbounds double, double* %529, i64 5
  %554 = getelementptr inbounds double, double* %528, i64 5
  %555 = bitcast double* %554 to i64*
  %556 = bitcast double* %553 to i64*
  %557 = load i64, i64* %556, align 8
  store i64 %557, i64* %555, align 8, !noalias !2
  %558 = getelementptr inbounds double, double* %529, i64 6
  %559 = getelementptr inbounds double, double* %528, i64 6
  %560 = bitcast double* %559 to i64*
  %561 = bitcast double* %558 to i64*
  %562 = load i64, i64* %561, align 8
  store i64 %562, i64* %560, align 8, !noalias !2
  %563 = getelementptr inbounds double, double* %529, i64 7
  %564 = getelementptr inbounds double, double* %528, i64 7
  %565 = bitcast double* %564 to i64*
  %566 = bitcast double* %563 to i64*
  %567 = load i64, i64* %566, align 8
  store i64 %567, i64* %565, align 8, !noalias !2
  %568 = getelementptr inbounds double, double* %529, i64 8
  %569 = getelementptr inbounds double, double* %528, i64 8
  %570 = icmp eq double* %568, %382
  br i1 %570, label %571, label %527, !llvm.loop !26

571:                                              ; preds = %522, %527, %498
  %572 = phi double* [ %421, %498 ], [ %523, %522 ], [ %569, %527 ]
  %573 = ptrtoint double* %572 to i64
  br label %574

574:                                              ; preds = %571, %392
  %575 = phi i64 [ %396, %392 ], [ %573, %571 ]
  store i64 %575, i64* %360, align 8, !noalias !2
  br label %576

576:                                              ; preds = %574, %372
  %577 = load double (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::vector"*)*, double (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::vector"*)** %265, align 8, !noalias !2
  %578 = call double %577(%"union.std::__1::__function::__policy_storage"* %267, %"class.std::__1::vector"* nonnull dereferenceable(24) %17) #7
  %579 = load double*, double** %29, align 8, !noalias !2
  store double %578, double* %579, align 8
  %580 = load double*, double** %355, align 8, !noalias !2
  %581 = icmp eq double* %580, null
  br i1 %581, label %585, label %582

582:                                              ; preds = %576
  %583 = ptrtoint double* %580 to i64
  store i64 %583, i64* %360, align 8, !noalias !2
  %584 = bitcast double* %580 to i8*
  call void @_ZdlPv(i8* %584) #9
  br label %585

585:                                              ; preds = %582, %576
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %354) #7, !noalias !2
  %586 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %25, align 8, !alias.scope !2
  %587 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %26, align 8, !alias.scope !2
  %588 = icmp eq %"class.std::__1::vector"* %586, %587
  br i1 %588, label %625, label %589

589:                                              ; preds = %585
  %590 = bitcast %"class.std::__1::vector"* %586 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %590, i8 0, i64 24, i1 false) #7
  %591 = load i64, i64* %279, align 8, !noalias !2
  %592 = load i64, i64* %281, align 8, !noalias !2
  %593 = sub i64 %591, %592
  %594 = ashr exact i64 %593, 3
  %595 = icmp eq i64 %593, 0
  br i1 %595, label %622, label %596

596:                                              ; preds = %589
  %597 = icmp ugt i64 %594, 2305843009213693951
  br i1 %597, label %598, label %600

598:                                              ; preds = %596
  %599 = bitcast %"class.std::__1::vector"* %586 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %599) #8
  unreachable

600:                                              ; preds = %596
  %601 = call i8* @_Znwm(i64 %593) #9
  %602 = bitcast i8* %601 to double*
  %603 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %586, i64 0, i32 0, i32 1
  %604 = bitcast double** %603 to i8**
  store i8* %601, i8** %604, align 8
  %605 = bitcast %"class.std::__1::vector"* %586 to i8**
  store i8* %601, i8** %605, align 8
  %606 = getelementptr inbounds double, double* %602, i64 %594
  %607 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %586, i64 0, i32 0, i32 2, i32 0, i32 0
  store double* %606, double** %607, align 8
  %608 = load double*, double** %29, align 8, !noalias !2
  %609 = load i64, i64* %279, align 8, !noalias !2
  %610 = bitcast double** %603 to i64*
  %611 = ptrtoint i8* %601 to i64
  %612 = ptrtoint double* %608 to i64
  %613 = sub i64 %609, %612
  %614 = icmp sgt i64 %613, 0
  br i1 %614, label %615, label %620

615:                                              ; preds = %600
  %616 = lshr exact i64 %613, 3
  %617 = bitcast double* %608 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %601, i8* align 8 %617, i64 %613, i1 false) #7
  %618 = getelementptr inbounds double, double* %602, i64 %616
  %619 = ptrtoint double* %618 to i64
  br label %620

620:                                              ; preds = %615, %600
  %621 = phi i64 [ %619, %615 ], [ %611, %600 ]
  store i64 %621, i64* %610, align 8
  br label %622

622:                                              ; preds = %620, %589
  %623 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %586, i64 1
  %624 = ptrtoint %"class.std::__1::vector"* %623 to i64
  store i64 %624, i64* %318, align 8, !alias.scope !2
  br label %627

625:                                              ; preds = %585
  call void @_ZNSt3__16vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.1"* nonnull %22, %"class.std::__1::vector"* nonnull dereferenceable(24) %20) #7
  %626 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %25, align 8, !alias.scope !2
  br label %627

627:                                              ; preds = %625, %622
  %628 = phi %"class.std::__1::vector"* [ %623, %622 ], [ %626, %625 ]
  %629 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %24, align 8, !alias.scope !2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %361) #7, !noalias !2
  call void @_ZNSt3__16__sortIRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEvT0_S9_T_(%"class.std::__1::vector"* %629, %"class.std::__1::vector"* %628, %"struct.std::__1::__less.12"* nonnull dereferenceable(1) %19) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %361) #7, !noalias !2
  %630 = icmp eq i64 %373, %362
  br i1 %630, label %631, label %363

631:                                              ; preds = %627, %351
  %632 = load double*, double** %29, align 8, !noalias !2
  %633 = icmp eq double* %632, null
  br i1 %633, label %637, label %634

634:                                              ; preds = %631
  %635 = ptrtoint double* %632 to i64
  store i64 %635, i64* %279, align 8, !noalias !2
  %636 = bitcast double* %632 to i8*
  call void @_ZdlPv(i8* %636) #9
  br label %637

637:                                              ; preds = %631, %634
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #7, !noalias !2
  %638 = icmp sgt i32 %3, 0
  %639 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %24, align 8
  br i1 %638, label %640, label %694

640:                                              ; preds = %637
  %641 = getelementptr inbounds %"struct.std::__1::__less.12", %"struct.std::__1::__less.12"* %16, i64 0, i32 0
  %642 = getelementptr inbounds %"struct.std::__1::__less.12", %"struct.std::__1::__less.12"* %10, i64 0, i32 0
  %643 = bitcast %"class.std::__1::vector"* %11 to i8*
  %644 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %645 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %646 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %647 = bitcast %"class.std::__1::vector"* %11 to i8**
  %648 = bitcast double** %645 to i64*
  %649 = bitcast %"class.std::__1::vector"* %11 to i64*
  %650 = bitcast %"class.std::__1::vector"* %12 to i8*
  %651 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %652 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %653 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %654 = bitcast %"class.std::__1::vector"* %12 to i8**
  %655 = bitcast double** %652 to i64*
  %656 = bitcast %"class.std::__1::vector"* %12 to i64*
  %657 = bitcast %"class.std::__1::vector"* %13 to i8*
  %658 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %659 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 1
  %660 = bitcast %"class.std::__1::vector"* %9 to i8*
  %661 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %662 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %663 = bitcast double** %662 to i8**
  %664 = bitcast %"class.std::__1::vector"* %9 to i8**
  %665 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %666 = bitcast double** %662 to i64*
  %667 = bitcast %"class.std::__1::vector.1"* %22 to i64*
  %668 = bitcast %"class.std::__1::vector"* %15 to i8*
  %669 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 0
  %670 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 1
  %671 = bitcast %"class.std::__1::vector"* %7 to i8*
  %672 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %673 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %674 = bitcast double** %673 to i8**
  %675 = bitcast %"class.std::__1::vector"* %7 to i8**
  %676 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %677 = bitcast double** %673 to i64*
  %678 = bitcast double** %670 to i64*
  %679 = bitcast %"class.std::__1::vector"* %14 to i8*
  %680 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 0
  %681 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 1
  %682 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %683 = bitcast %"class.std::__1::vector"* %14 to i8**
  %684 = bitcast double** %681 to i64*
  %685 = bitcast %"class.std::__1::vector"* %14 to i64*
  %686 = bitcast %"class.std::__1::vector"* %8 to i8*
  %687 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %688 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %689 = bitcast double** %688 to i8**
  %690 = bitcast %"class.std::__1::vector"* %8 to i8**
  %691 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %692 = bitcast double** %688 to i64*
  %693 = bitcast double** %659 to i64*
  br label %756

694:                                              ; preds = %1723, %637
  %695 = phi %"class.std::__1::vector"* [ %639, %637 ], [ %1725, %1723 ]
  %696 = bitcast %"class.std::__1::vector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %696, i8 0, i64 24, i1 false) #7
  %697 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %695, i64 0, i32 0, i32 1
  %698 = bitcast double** %697 to i64*
  %699 = load i64, i64* %698, align 8
  %700 = bitcast %"class.std::__1::vector"* %695 to i64*
  %701 = load i64, i64* %700, align 8
  %702 = sub i64 %699, %701
  %703 = ashr exact i64 %702, 3
  %704 = icmp eq i64 %702, 0
  br i1 %704, label %732, label %705

705:                                              ; preds = %694
  %706 = icmp ugt i64 %703, 2305843009213693951
  br i1 %706, label %707, label %709

707:                                              ; preds = %705
  %708 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %708) #8
  unreachable

709:                                              ; preds = %705
  %710 = call i8* @_Znwm(i64 %702) #9
  %711 = bitcast i8* %710 to double*
  %712 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %713 = bitcast double** %712 to i8**
  store i8* %710, i8** %713, align 8
  %714 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %710, i8** %714, align 8
  %715 = getelementptr inbounds double, double* %711, i64 %703
  %716 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store double* %715, double** %716, align 8
  %717 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %695, i64 0, i32 0, i32 0
  %718 = load double*, double** %717, align 8
  %719 = load i64, i64* %698, align 8
  %720 = bitcast double** %712 to i64*
  %721 = ptrtoint i8* %710 to i64
  %722 = ptrtoint double* %718 to i64
  %723 = sub i64 %719, %722
  %724 = icmp sgt i64 %723, 0
  br i1 %724, label %725, label %730

725:                                              ; preds = %709
  %726 = lshr exact i64 %723, 3
  %727 = bitcast double* %718 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %710, i8* align 8 %727, i64 %723, i1 false) #7
  %728 = getelementptr inbounds double, double* %711, i64 %726
  %729 = ptrtoint double* %728 to i64
  br label %730

730:                                              ; preds = %725, %709
  %731 = phi i64 [ %729, %725 ], [ %721, %709 ]
  store i64 %731, i64* %720, align 8
  br label %732

732:                                              ; preds = %694, %730
  %733 = icmp eq %"class.std::__1::vector"* %695, null
  br i1 %733, label %755, label %734

734:                                              ; preds = %732
  %735 = bitcast %"class.std::__1::vector"* %695 to i8*
  %736 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %25, align 8
  %737 = icmp eq %"class.std::__1::vector"* %736, %695
  br i1 %737, label %753, label %738

738:                                              ; preds = %734, %749
  %739 = phi %"class.std::__1::vector"* [ %740, %749 ], [ %736, %734 ]
  %740 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %739, i64 -1
  %741 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %740, i64 0, i32 0, i32 0
  %742 = load double*, double** %741, align 8
  %743 = icmp eq double* %742, null
  br i1 %743, label %749, label %744

744:                                              ; preds = %738
  %745 = ptrtoint double* %742 to i64
  %746 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %739, i64 -1, i32 0, i32 1
  %747 = bitcast double** %746 to i64*
  store i64 %745, i64* %747, align 8
  %748 = bitcast double* %742 to i8*
  call void @_ZdlPv(i8* %748) #9
  br label %749

749:                                              ; preds = %744, %738
  %750 = icmp eq %"class.std::__1::vector"* %740, %695
  br i1 %750, label %751, label %738

751:                                              ; preds = %749
  %752 = load i8*, i8** %315, align 8
  br label %753

753:                                              ; preds = %751, %734
  %754 = phi i8* [ %752, %751 ], [ %735, %734 ]
  store %"class.std::__1::vector"* %695, %"class.std::__1::vector"** %25, align 8
  call void @_ZdlPv(i8* %754) #9
  br label %755

755:                                              ; preds = %732, %753
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #7
  ret void

756:                                              ; preds = %1723, %640
  %757 = phi %"class.std::__1::vector"* [ %639, %640 ], [ %1725, %1723 ]
  %758 = phi i32 [ 0, %640 ], [ %1724, %1723 ]
  %759 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %641) #7
  call void @_ZNSt3__16__sortIRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEvT0_S9_T_(%"class.std::__1::vector"* %757, %"class.std::__1::vector"* %759, %"struct.std::__1::__less.12"* nonnull dereferenceable(1) %16) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %641) #7
  %760 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %24, align 8
  %761 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %642) #7
  call void @_ZNSt3__16__sortIRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEvT0_S9_T_(%"class.std::__1::vector"* %760, %"class.std::__1::vector"* %761, %"struct.std::__1::__less.12"* nonnull dereferenceable(1) %10) #7
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %642) #7
  %762 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %25, align 8
  %763 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %762, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %643) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %643, i8 -86, i64 24, i1 false) #7
  %764 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %24, align 8, !noalias !27
  %765 = icmp eq %"class.std::__1::vector"* %764, %762
  br i1 %765, label %766, label %769

766:                                              ; preds = %756
  %767 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0), i32 29, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #7
  %768 = call zeroext i1 @_ZN3jxl5AbortEv() #8
  unreachable

769:                                              ; preds = %756
  %770 = ptrtoint %"class.std::__1::vector"* %764 to i64
  %771 = ptrtoint %"class.std::__1::vector"* %762 to i64
  %772 = sub i64 %771, %770
  %773 = sdiv exact i64 %772, 24
  %774 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %764, i64 0, i32 0, i32 1
  %775 = bitcast double** %774 to i64*
  %776 = load i64, i64* %775, align 8, !noalias !27
  %777 = bitcast %"class.std::__1::vector"* %764 to i64*
  %778 = load i64, i64* %777, align 8, !noalias !27
  %779 = sub i64 %776, %778
  %780 = ashr exact i64 %779, 3
  %781 = icmp eq i64 %773, %780
  br i1 %781, label %785, label %782

782:                                              ; preds = %769
  %783 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0), i32 30, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0)) #7
  %784 = call zeroext i1 @_ZN3jxl5AbortEv() #8
  unreachable

785:                                              ; preds = %769
  %786 = trunc i64 %773 to i32
  %787 = add i32 %786, -1
  %788 = shl i64 %773, 32
  %789 = ashr exact i64 %788, 32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %643, i8 0, i64 24, i1 false) #7, !alias.scope !27
  %790 = icmp eq i64 %788, 0
  br i1 %790, label %802, label %791

791:                                              ; preds = %785
  %792 = icmp ugt i64 %789, 2305843009213693951
  br i1 %792, label %793, label %795

793:                                              ; preds = %791
  %794 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %794) #8
  unreachable

795:                                              ; preds = %791
  %796 = ashr exact i64 %788, 29
  %797 = call i8* @_Znwm(i64 %796) #9
  %798 = bitcast i8* %797 to double*
  store i8* %797, i8** %647, align 8, !alias.scope !27
  %799 = getelementptr inbounds double, double* %798, i64 %789
  store double* %799, double** %646, align 8, !alias.scope !27
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %797, i8 0, i64 %796, i1 false) #7, !noalias !27
  %800 = ptrtoint double* %799 to i64
  store i64 %800, i64* %648, align 8, !alias.scope !27
  %801 = ptrtoint i8* %797 to i64
  br label %802

802:                                              ; preds = %795, %785
  %803 = phi double* [ %798, %795 ], [ null, %785 ]
  %804 = phi i64 [ %801, %795 ], [ 0, %785 ]
  %805 = phi i64 [ %800, %795 ], [ 0, %785 ]
  %806 = icmp sgt i32 %787, 0
  br i1 %806, label %807, label %864

807:                                              ; preds = %802
  %808 = sitofp i32 %787 to double
  %809 = zext i32 %787 to i64
  %810 = and i64 %809, 1
  %811 = icmp eq i32 %787, 1
  %812 = sub nsw i64 %809, %810
  %813 = icmp eq i64 %810, 0
  br label %814

814:                                              ; preds = %829, %807
  %815 = phi i64 [ 0, %807 ], [ %816, %829 ]
  %816 = add nuw nsw i64 %815, 1
  br i1 %811, label %817, label %835

817:                                              ; preds = %835, %814
  %818 = phi i64 [ 0, %814 ], [ %857, %835 ]
  br i1 %813, label %829, label %819

819:                                              ; preds = %817
  %820 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %24, align 8, !noalias !27
  %821 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %820, i64 %818, i32 0, i32 0
  %822 = load double*, double** %821, align 8
  %823 = getelementptr inbounds double, double* %822, i64 %816
  %824 = load double, double* %823, align 8
  %825 = load double*, double** %644, align 8, !alias.scope !27
  %826 = getelementptr inbounds double, double* %825, i64 %816
  %827 = load double, double* %826, align 8
  %828 = fadd double %824, %827
  store double %828, double* %826, align 8
  br label %829

829:                                              ; preds = %817, %819
  %830 = load double*, double** %644, align 8, !alias.scope !27
  %831 = getelementptr inbounds double, double* %830, i64 %816
  %832 = load double, double* %831, align 8
  %833 = fdiv double %832, %808
  store double %833, double* %831, align 8
  %834 = icmp eq i64 %816, %809
  br i1 %834, label %860, label %814

835:                                              ; preds = %814, %835
  %836 = phi i64 [ %857, %835 ], [ 0, %814 ]
  %837 = phi i64 [ %858, %835 ], [ %812, %814 ]
  %838 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %24, align 8, !noalias !27
  %839 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %838, i64 %836, i32 0, i32 0
  %840 = load double*, double** %839, align 8
  %841 = getelementptr inbounds double, double* %840, i64 %816
  %842 = load double, double* %841, align 8
  %843 = load double*, double** %644, align 8, !alias.scope !27
  %844 = getelementptr inbounds double, double* %843, i64 %816
  %845 = load double, double* %844, align 8
  %846 = fadd double %842, %845
  store double %846, double* %844, align 8
  %847 = or i64 %836, 1
  %848 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %24, align 8, !noalias !27
  %849 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %848, i64 %847, i32 0, i32 0
  %850 = load double*, double** %849, align 8
  %851 = getelementptr inbounds double, double* %850, i64 %816
  %852 = load double, double* %851, align 8
  %853 = load double*, double** %644, align 8, !alias.scope !27
  %854 = getelementptr inbounds double, double* %853, i64 %816
  %855 = load double, double* %854, align 8
  %856 = fadd double %852, %855
  store double %856, double* %854, align 8
  %857 = add nuw nsw i64 %836, 2
  %858 = add i64 %837, -2
  %859 = icmp eq i64 %858, 0
  br i1 %859, label %817, label %835

860:                                              ; preds = %829
  %861 = load i64, i64* %648, align 8, !noalias !30
  %862 = load i64, i64* %649, align 8, !noalias !30
  %863 = inttoptr i64 %862 to double*
  br label %864

864:                                              ; preds = %802, %860
  %865 = phi double* [ %863, %860 ], [ %803, %802 ]
  %866 = phi i64 [ %862, %860 ], [ %804, %802 ]
  %867 = phi i64 [ %861, %860 ], [ %805, %802 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %650) #7
  %868 = sub i64 %867, %866
  %869 = ashr exact i64 %868, 3
  %870 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %762, i64 -1, i32 0, i32 1
  %871 = bitcast double** %870 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %650, i8 -86, i64 24, i1 false) #7
  %872 = load i64, i64* %871, align 8, !noalias !30
  %873 = bitcast %"class.std::__1::vector"* %763 to i64*
  %874 = load i64, i64* %873, align 8, !noalias !30
  %875 = sub i64 %872, %874
  %876 = ashr exact i64 %875, 3
  %877 = icmp eq i64 %869, %876
  br i1 %877, label %881, label %878

878:                                              ; preds = %864
  %879 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0), i32 45, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #7
  %880 = call zeroext i1 @_ZN3jxl5AbortEv() #8
  unreachable

881:                                              ; preds = %864
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %650, i8 0, i64 24, i1 false) #7, !alias.scope !30
  %882 = icmp eq i64 %868, 0
  br i1 %882, label %899, label %883

883:                                              ; preds = %881
  %884 = icmp ugt i64 %869, 2305843009213693951
  br i1 %884, label %885, label %887

885:                                              ; preds = %883
  %886 = bitcast %"class.std::__1::vector"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %886) #8
  unreachable

887:                                              ; preds = %883
  %888 = call i8* @_Znwm(i64 %868) #9
  %889 = bitcast i8* %888 to double*
  store i8* %888, i8** %654, align 8, !alias.scope !30
  %890 = getelementptr inbounds double, double* %889, i64 %869
  store double* %890, double** %653, align 8, !alias.scope !30
  %891 = ptrtoint i8* %888 to i64
  %892 = add nsw i64 %869, -1
  %893 = getelementptr double, double* %889, i64 %892
  %894 = ptrtoint double* %893 to i64
  %895 = sub i64 8, %891
  %896 = add i64 %895, %894
  %897 = and i64 %896, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %888, i8 0, i64 %897, i1 false) #7, !noalias !30
  %898 = ptrtoint double* %890 to i64
  store i64 %898, i64* %655, align 8, !alias.scope !30
  br label %899

899:                                              ; preds = %881, %887
  %900 = phi i64 [ %891, %887 ], [ 0, %881 ]
  %901 = phi double* [ %889, %887 ], [ null, %881 ]
  %902 = phi i64 [ %898, %887 ], [ 0, %881 ]
  store double 0.000000e+00, double* %901, align 8, !noalias !30
  %903 = sub i64 %902, %900
  %904 = ashr exact i64 %903, 3
  %905 = icmp ugt i64 %904, 1
  br i1 %905, label %906, label %950

906:                                              ; preds = %899
  %907 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %763, i64 0, i32 0, i32 0
  %908 = getelementptr inbounds double, double* %865, i64 1
  %909 = load double, double* %908, align 8
  %910 = load double*, double** %907, align 8, !noalias !30
  %911 = getelementptr inbounds double, double* %910, i64 1
  %912 = load double, double* %911, align 8
  %913 = fsub double %909, %912
  %914 = getelementptr inbounds double, double* %901, i64 1
  store double %913, double* %914, align 8
  %915 = sub i64 %902, %900
  %916 = ashr exact i64 %915, 3
  %917 = icmp ugt i64 %916, 2
  br i1 %917, label %918, label %950

918:                                              ; preds = %906
  %919 = inttoptr i64 %900 to double*
  %920 = getelementptr inbounds double, double* %865, i64 2
  %921 = load double, double* %920, align 8
  %922 = load double*, double** %907, align 8, !noalias !30
  %923 = getelementptr inbounds double, double* %922, i64 2
  %924 = load double, double* %923, align 8
  %925 = fsub double %921, %924
  %926 = getelementptr inbounds double, double* %919, i64 2
  store double %925, double* %926, align 8
  %927 = load i64, i64* %655, align 8, !alias.scope !30
  %928 = load i64, i64* %656, align 8, !alias.scope !30
  %929 = sub i64 %927, %928
  %930 = ashr exact i64 %929, 3
  %931 = icmp ugt i64 %930, 3
  br i1 %931, label %932, label %950

932:                                              ; preds = %918, %932
  %933 = phi i64 [ %946, %932 ], [ %928, %918 ]
  %934 = phi i64 [ %944, %932 ], [ 3, %918 ]
  %935 = load double*, double** %644, align 8, !noalias !30
  %936 = inttoptr i64 %933 to double*
  %937 = getelementptr inbounds double, double* %935, i64 %934
  %938 = load double, double* %937, align 8
  %939 = load double*, double** %907, align 8, !noalias !30
  %940 = getelementptr inbounds double, double* %939, i64 %934
  %941 = load double, double* %940, align 8
  %942 = fsub double %938, %941
  %943 = getelementptr inbounds double, double* %936, i64 %934
  store double %942, double* %943, align 8
  %944 = add nuw i64 %934, 1
  %945 = load i64, i64* %655, align 8, !alias.scope !30
  %946 = load i64, i64* %656, align 8, !alias.scope !30
  %947 = sub i64 %945, %946
  %948 = ashr exact i64 %947, 3
  %949 = icmp ult i64 %944, %948
  br i1 %949, label %932, label %950

950:                                              ; preds = %932, %918, %906, %899
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %657) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %657, i8 -86, i64 24, i1 false) #7
  call fastcc void @_ZN3jxl8optimize12_GLOBAL__N_13AddERKNSt3__16vectorIdNS2_9allocatorIdEEEES8_(%"class.std::__1::vector"* nonnull sret %13, %"class.std::__1::vector"* nonnull dereferenceable(24) %11, %"class.std::__1::vector"* nonnull dereferenceable(24) %12) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %660) #7
  %951 = load double*, double** %658, align 8
  %952 = ptrtoint double* %951 to i64
  %953 = getelementptr inbounds double, double* %951, i64 1
  %954 = bitcast double* %953 to i8*
  %955 = load double*, double** %659, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %660, i8 0, i64 24, i1 false) #7
  %956 = ptrtoint double* %953 to i64
  %957 = ptrtoint double* %955 to i64
  %958 = sub i64 %957, %956
  %959 = ashr exact i64 %958, 3
  %960 = icmp eq i64 %958, 0
  br i1 %960, label %1149, label %961

961:                                              ; preds = %950
  %962 = icmp ugt i64 %959, 2305843009213693951
  br i1 %962, label %963, label %965

963:                                              ; preds = %961
  %964 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %964) #8
  unreachable

965:                                              ; preds = %961
  %966 = call i8* @_Znwm(i64 %958) #9
  %967 = bitcast i8* %966 to double*
  store i8* %966, i8** %663, align 8
  store i8* %966, i8** %664, align 8
  %968 = getelementptr inbounds double, double* %967, i64 %959
  store double* %968, double** %665, align 8
  %969 = ptrtoint i8* %966 to i64
  %970 = icmp eq double* %953, %955
  br i1 %970, label %1147, label %971

971:                                              ; preds = %965
  %972 = getelementptr double, double* %955, i64 -2
  %973 = ptrtoint double* %972 to i64
  %974 = sub i64 %973, %952
  %975 = lshr i64 %974, 3
  %976 = add nuw nsw i64 %975, 1
  %977 = icmp ult i64 %976, 4
  br i1 %977, label %1073, label %978

978:                                              ; preds = %971
  %979 = getelementptr i8, i8* %966, i64 8
  %980 = getelementptr double, double* %955, i64 -2
  %981 = ptrtoint double* %980 to i64
  %982 = sub i64 %981, %952
  %983 = lshr i64 %982, 3
  %984 = and i64 %982, -8
  %985 = getelementptr i8, i8* %979, i64 %984
  %986 = getelementptr double, double* %951, i64 2
  %987 = getelementptr double, double* %986, i64 %983
  %988 = bitcast double* %987 to i8*
  %989 = icmp ult i8* %966, %988
  %990 = icmp ugt i8* %985, %954
  %991 = and i1 %989, %990
  br i1 %991, label %1073, label %992

992:                                              ; preds = %978
  %993 = and i64 %976, 4611686018427387900
  %994 = getelementptr double, double* %967, i64 %993
  %995 = getelementptr double, double* %953, i64 %993
  %996 = add nsw i64 %993, -4
  %997 = lshr exact i64 %996, 2
  %998 = add nuw nsw i64 %997, 1
  %999 = and i64 %998, 3
  %1000 = icmp ult i64 %996, 12
  br i1 %1000, label %1052, label %1001

1001:                                             ; preds = %992
  %1002 = sub nsw i64 %998, %999
  br label %1003

1003:                                             ; preds = %1003, %1001
  %1004 = phi i64 [ 0, %1001 ], [ %1049, %1003 ]
  %1005 = phi i64 [ %1002, %1001 ], [ %1050, %1003 ]
  %1006 = getelementptr double, double* %967, i64 %1004
  %1007 = getelementptr double, double* %953, i64 %1004
  %1008 = bitcast double* %1007 to <2 x i64>*
  %1009 = load <2 x i64>, <2 x i64>* %1008, align 8, !alias.scope !33
  %1010 = getelementptr double, double* %1007, i64 2
  %1011 = bitcast double* %1010 to <2 x i64>*
  %1012 = load <2 x i64>, <2 x i64>* %1011, align 8, !alias.scope !33
  %1013 = bitcast double* %1006 to <2 x i64>*
  store <2 x i64> %1009, <2 x i64>* %1013, align 8, !alias.scope !36, !noalias !33
  %1014 = getelementptr double, double* %1006, i64 2
  %1015 = bitcast double* %1014 to <2 x i64>*
  store <2 x i64> %1012, <2 x i64>* %1015, align 8, !alias.scope !36, !noalias !33
  %1016 = or i64 %1004, 4
  %1017 = getelementptr double, double* %967, i64 %1016
  %1018 = getelementptr double, double* %953, i64 %1016
  %1019 = bitcast double* %1018 to <2 x i64>*
  %1020 = load <2 x i64>, <2 x i64>* %1019, align 8, !alias.scope !33
  %1021 = getelementptr double, double* %1018, i64 2
  %1022 = bitcast double* %1021 to <2 x i64>*
  %1023 = load <2 x i64>, <2 x i64>* %1022, align 8, !alias.scope !33
  %1024 = bitcast double* %1017 to <2 x i64>*
  store <2 x i64> %1020, <2 x i64>* %1024, align 8, !alias.scope !36, !noalias !33
  %1025 = getelementptr double, double* %1017, i64 2
  %1026 = bitcast double* %1025 to <2 x i64>*
  store <2 x i64> %1023, <2 x i64>* %1026, align 8, !alias.scope !36, !noalias !33
  %1027 = or i64 %1004, 8
  %1028 = getelementptr double, double* %967, i64 %1027
  %1029 = getelementptr double, double* %953, i64 %1027
  %1030 = bitcast double* %1029 to <2 x i64>*
  %1031 = load <2 x i64>, <2 x i64>* %1030, align 8, !alias.scope !33
  %1032 = getelementptr double, double* %1029, i64 2
  %1033 = bitcast double* %1032 to <2 x i64>*
  %1034 = load <2 x i64>, <2 x i64>* %1033, align 8, !alias.scope !33
  %1035 = bitcast double* %1028 to <2 x i64>*
  store <2 x i64> %1031, <2 x i64>* %1035, align 8, !alias.scope !36, !noalias !33
  %1036 = getelementptr double, double* %1028, i64 2
  %1037 = bitcast double* %1036 to <2 x i64>*
  store <2 x i64> %1034, <2 x i64>* %1037, align 8, !alias.scope !36, !noalias !33
  %1038 = or i64 %1004, 12
  %1039 = getelementptr double, double* %967, i64 %1038
  %1040 = getelementptr double, double* %953, i64 %1038
  %1041 = bitcast double* %1040 to <2 x i64>*
  %1042 = load <2 x i64>, <2 x i64>* %1041, align 8, !alias.scope !33
  %1043 = getelementptr double, double* %1040, i64 2
  %1044 = bitcast double* %1043 to <2 x i64>*
  %1045 = load <2 x i64>, <2 x i64>* %1044, align 8, !alias.scope !33
  %1046 = bitcast double* %1039 to <2 x i64>*
  store <2 x i64> %1042, <2 x i64>* %1046, align 8, !alias.scope !36, !noalias !33
  %1047 = getelementptr double, double* %1039, i64 2
  %1048 = bitcast double* %1047 to <2 x i64>*
  store <2 x i64> %1045, <2 x i64>* %1048, align 8, !alias.scope !36, !noalias !33
  %1049 = add i64 %1004, 16
  %1050 = add i64 %1005, -4
  %1051 = icmp eq i64 %1050, 0
  br i1 %1051, label %1052, label %1003, !llvm.loop !38

1052:                                             ; preds = %1003, %992
  %1053 = phi i64 [ 0, %992 ], [ %1049, %1003 ]
  %1054 = icmp eq i64 %999, 0
  br i1 %1054, label %1071, label %1055

1055:                                             ; preds = %1052, %1055
  %1056 = phi i64 [ %1068, %1055 ], [ %1053, %1052 ]
  %1057 = phi i64 [ %1069, %1055 ], [ %999, %1052 ]
  %1058 = getelementptr double, double* %967, i64 %1056
  %1059 = getelementptr double, double* %953, i64 %1056
  %1060 = bitcast double* %1059 to <2 x i64>*
  %1061 = load <2 x i64>, <2 x i64>* %1060, align 8, !alias.scope !33
  %1062 = getelementptr double, double* %1059, i64 2
  %1063 = bitcast double* %1062 to <2 x i64>*
  %1064 = load <2 x i64>, <2 x i64>* %1063, align 8, !alias.scope !33
  %1065 = bitcast double* %1058 to <2 x i64>*
  store <2 x i64> %1061, <2 x i64>* %1065, align 8, !alias.scope !36, !noalias !33
  %1066 = getelementptr double, double* %1058, i64 2
  %1067 = bitcast double* %1066 to <2 x i64>*
  store <2 x i64> %1064, <2 x i64>* %1067, align 8, !alias.scope !36, !noalias !33
  %1068 = add i64 %1056, 4
  %1069 = add i64 %1057, -1
  %1070 = icmp eq i64 %1069, 0
  br i1 %1070, label %1071, label %1055, !llvm.loop !39

1071:                                             ; preds = %1055, %1052
  %1072 = icmp eq i64 %976, %993
  br i1 %1072, label %1144, label %1073

1073:                                             ; preds = %1071, %978, %971
  %1074 = phi double* [ %967, %978 ], [ %967, %971 ], [ %994, %1071 ]
  %1075 = phi double* [ %953, %978 ], [ %953, %971 ], [ %995, %1071 ]
  %1076 = ptrtoint double* %1075 to i64
  %1077 = getelementptr double, double* %955, i64 -1
  %1078 = ptrtoint double* %1077 to i64
  %1079 = sub i64 %1078, %1076
  %1080 = lshr i64 %1079, 3
  %1081 = add nuw nsw i64 %1080, 1
  %1082 = and i64 %1081, 7
  %1083 = icmp eq i64 %1082, 0
  br i1 %1083, label %1095, label %1084

1084:                                             ; preds = %1073, %1084
  %1085 = phi double* [ %1092, %1084 ], [ %1074, %1073 ]
  %1086 = phi double* [ %1091, %1084 ], [ %1075, %1073 ]
  %1087 = phi i64 [ %1093, %1084 ], [ %1082, %1073 ]
  %1088 = bitcast double* %1085 to i64*
  %1089 = bitcast double* %1086 to i64*
  %1090 = load i64, i64* %1089, align 8
  store i64 %1090, i64* %1088, align 8
  %1091 = getelementptr inbounds double, double* %1086, i64 1
  %1092 = getelementptr inbounds double, double* %1085, i64 1
  %1093 = add i64 %1087, -1
  %1094 = icmp eq i64 %1093, 0
  br i1 %1094, label %1095, label %1084, !llvm.loop !40

1095:                                             ; preds = %1084, %1073
  %1096 = phi double* [ undef, %1073 ], [ %1092, %1084 ]
  %1097 = phi double* [ %1074, %1073 ], [ %1092, %1084 ]
  %1098 = phi double* [ %1075, %1073 ], [ %1091, %1084 ]
  %1099 = icmp ult i64 %1079, 56
  br i1 %1099, label %1144, label %1100

1100:                                             ; preds = %1095, %1100
  %1101 = phi double* [ %1142, %1100 ], [ %1097, %1095 ]
  %1102 = phi double* [ %1141, %1100 ], [ %1098, %1095 ]
  %1103 = bitcast double* %1101 to i64*
  %1104 = bitcast double* %1102 to i64*
  %1105 = load i64, i64* %1104, align 8
  store i64 %1105, i64* %1103, align 8
  %1106 = getelementptr inbounds double, double* %1102, i64 1
  %1107 = getelementptr inbounds double, double* %1101, i64 1
  %1108 = bitcast double* %1107 to i64*
  %1109 = bitcast double* %1106 to i64*
  %1110 = load i64, i64* %1109, align 8
  store i64 %1110, i64* %1108, align 8
  %1111 = getelementptr inbounds double, double* %1102, i64 2
  %1112 = getelementptr inbounds double, double* %1101, i64 2
  %1113 = bitcast double* %1112 to i64*
  %1114 = bitcast double* %1111 to i64*
  %1115 = load i64, i64* %1114, align 8
  store i64 %1115, i64* %1113, align 8
  %1116 = getelementptr inbounds double, double* %1102, i64 3
  %1117 = getelementptr inbounds double, double* %1101, i64 3
  %1118 = bitcast double* %1117 to i64*
  %1119 = bitcast double* %1116 to i64*
  %1120 = load i64, i64* %1119, align 8
  store i64 %1120, i64* %1118, align 8
  %1121 = getelementptr inbounds double, double* %1102, i64 4
  %1122 = getelementptr inbounds double, double* %1101, i64 4
  %1123 = bitcast double* %1122 to i64*
  %1124 = bitcast double* %1121 to i64*
  %1125 = load i64, i64* %1124, align 8
  store i64 %1125, i64* %1123, align 8
  %1126 = getelementptr inbounds double, double* %1102, i64 5
  %1127 = getelementptr inbounds double, double* %1101, i64 5
  %1128 = bitcast double* %1127 to i64*
  %1129 = bitcast double* %1126 to i64*
  %1130 = load i64, i64* %1129, align 8
  store i64 %1130, i64* %1128, align 8
  %1131 = getelementptr inbounds double, double* %1102, i64 6
  %1132 = getelementptr inbounds double, double* %1101, i64 6
  %1133 = bitcast double* %1132 to i64*
  %1134 = bitcast double* %1131 to i64*
  %1135 = load i64, i64* %1134, align 8
  store i64 %1135, i64* %1133, align 8
  %1136 = getelementptr inbounds double, double* %1102, i64 7
  %1137 = getelementptr inbounds double, double* %1101, i64 7
  %1138 = bitcast double* %1137 to i64*
  %1139 = bitcast double* %1136 to i64*
  %1140 = load i64, i64* %1139, align 8
  store i64 %1140, i64* %1138, align 8
  %1141 = getelementptr inbounds double, double* %1102, i64 8
  %1142 = getelementptr inbounds double, double* %1101, i64 8
  %1143 = icmp eq double* %1141, %955
  br i1 %1143, label %1144, label %1100, !llvm.loop !41

1144:                                             ; preds = %1095, %1100, %1071
  %1145 = phi double* [ %994, %1071 ], [ %1096, %1095 ], [ %1142, %1100 ]
  %1146 = ptrtoint double* %1145 to i64
  br label %1147

1147:                                             ; preds = %1144, %965
  %1148 = phi i64 [ %969, %965 ], [ %1146, %1144 ]
  store i64 %1148, i64* %666, align 8
  br label %1149

1149:                                             ; preds = %1147, %950
  %1150 = load double (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::vector"*)*, double (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::vector"*)** %265, align 8
  %1151 = call double %1150(%"union.std::__1::__function::__policy_storage"* %267, %"class.std::__1::vector"* nonnull dereferenceable(24) %9) #7
  %1152 = load double*, double** %658, align 8
  store double %1151, double* %1152, align 8
  %1153 = load double*, double** %661, align 8
  %1154 = icmp eq double* %1153, null
  br i1 %1154, label %1158, label %1155

1155:                                             ; preds = %1149
  %1156 = ptrtoint double* %1153 to i64
  store i64 %1156, i64* %666, align 8
  %1157 = bitcast double* %1153 to i8*
  call void @_ZdlPv(i8* %1157) #9
  br label %1158

1158:                                             ; preds = %1155, %1149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %660) #7
  %1159 = load double*, double** %658, align 8
  %1160 = load double, double* %1159, align 8
  %1161 = load i64, i64* %318, align 8
  %1162 = load i64, i64* %667, align 8
  %1163 = sub i64 %1161, %1162
  %1164 = sdiv exact i64 %1163, 24
  %1165 = add nsw i64 %1164, -2
  %1166 = inttoptr i64 %1162 to %"class.std::__1::vector"*
  %1167 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1166, i64 %1165, i32 0, i32 0
  %1168 = load double*, double** %1167, align 8
  %1169 = load double, double* %1168, align 8
  %1170 = fcmp ogt double %1160, %1169
  %1171 = inttoptr i64 %1161 to %"class.std::__1::vector"*
  br i1 %1170, label %1172, label %1465

1172:                                             ; preds = %1158
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %679) #7
  %1173 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1171, i64 -1
  %1174 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1171, i64 -1, i32 0, i32 1
  %1175 = bitcast double** %1174 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %679, i8 -86, i64 24, i1 false) #7
  %1176 = load i64, i64* %1175, align 8, !noalias !42
  %1177 = bitcast %"class.std::__1::vector"* %1173 to i64*
  %1178 = load i64, i64* %1177, align 8, !noalias !42
  %1179 = sub i64 %1176, %1178
  %1180 = ashr exact i64 %1179, 3
  %1181 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1166, i64 0, i32 0, i32 1
  %1182 = bitcast double** %1181 to i64*
  %1183 = load i64, i64* %1182, align 8, !noalias !42
  %1184 = inttoptr i64 %1162 to i64*
  %1185 = load i64, i64* %1184, align 8, !noalias !42
  %1186 = sub i64 %1183, %1185
  %1187 = ashr exact i64 %1186, 3
  %1188 = icmp eq i64 %1180, %1187
  br i1 %1188, label %1192, label %1189

1189:                                             ; preds = %1172
  %1190 = call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0), i32 69, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #7
  %1191 = call zeroext i1 @_ZN3jxl5AbortEv() #8
  unreachable

1192:                                             ; preds = %1172
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %679, i8 0, i64 24, i1 false) #7, !alias.scope !42
  %1193 = icmp eq i64 %1179, 0
  br i1 %1193, label %1210, label %1194

1194:                                             ; preds = %1192
  %1195 = icmp ugt i64 %1180, 2305843009213693951
  br i1 %1195, label %1196, label %1198

1196:                                             ; preds = %1194
  %1197 = bitcast %"class.std::__1::vector"* %14 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1197) #8
  unreachable

1198:                                             ; preds = %1194
  %1199 = call i8* @_Znwm(i64 %1179) #9
  %1200 = bitcast i8* %1199 to double*
  store i8* %1199, i8** %683, align 8, !alias.scope !42
  %1201 = getelementptr inbounds double, double* %1200, i64 %1180
  store double* %1201, double** %682, align 8, !alias.scope !42
  %1202 = ptrtoint i8* %1199 to i64
  %1203 = add nsw i64 %1180, -1
  %1204 = getelementptr double, double* %1200, i64 %1203
  %1205 = ptrtoint double* %1204 to i64
  %1206 = sub i64 8, %1202
  %1207 = add i64 %1206, %1205
  %1208 = and i64 %1207, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1199, i8 0, i64 %1208, i1 false) #7, !noalias !42
  %1209 = ptrtoint double* %1201 to i64
  store i64 %1209, i64* %684, align 8, !alias.scope !42
  br label %1210

1210:                                             ; preds = %1192, %1198
  %1211 = phi double* [ %1201, %1198 ], [ null, %1192 ]
  %1212 = phi double* [ %1200, %1198 ], [ null, %1192 ]
  %1213 = phi i64 [ %1202, %1198 ], [ 0, %1192 ]
  %1214 = phi i64 [ %1209, %1198 ], [ 0, %1192 ]
  store double 0.000000e+00, double* %1212, align 8, !noalias !42
  %1215 = sub i64 %1214, %1213
  %1216 = ashr exact i64 %1215, 3
  %1217 = icmp ugt i64 %1216, 1
  br i1 %1217, label %1218, label %1243

1218:                                             ; preds = %1210
  %1219 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1173, i64 0, i32 0, i32 0
  %1220 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1166, i64 0, i32 0, i32 0
  br label %1221

1221:                                             ; preds = %1221, %1218
  %1222 = phi double* [ %1212, %1218 ], [ %1239, %1221 ]
  %1223 = phi i64 [ 1, %1218 ], [ %1233, %1221 ]
  %1224 = load double*, double** %1219, align 8, !noalias !42
  %1225 = getelementptr inbounds double, double* %1224, i64 %1223
  %1226 = load double, double* %1225, align 8
  %1227 = load double*, double** %1220, align 8, !noalias !42
  %1228 = getelementptr inbounds double, double* %1227, i64 %1223
  %1229 = load double, double* %1228, align 8
  %1230 = fadd double %1226, %1229
  %1231 = fmul double %1230, 5.000000e-01
  %1232 = getelementptr inbounds double, double* %1222, i64 %1223
  store double %1231, double* %1232, align 8
  %1233 = add nuw i64 %1223, 1
  %1234 = load i64, i64* %684, align 8, !alias.scope !42
  %1235 = load i64, i64* %685, align 8, !alias.scope !42
  %1236 = sub i64 %1234, %1235
  %1237 = ashr exact i64 %1236, 3
  %1238 = icmp ult i64 %1233, %1237
  %1239 = inttoptr i64 %1235 to double*
  br i1 %1238, label %1221, label %1240

1240:                                             ; preds = %1221
  %1241 = inttoptr i64 %1235 to double*
  %1242 = inttoptr i64 %1234 to double*
  br label %1243

1243:                                             ; preds = %1240, %1210
  %1244 = phi double* [ %1242, %1240 ], [ %1211, %1210 ]
  %1245 = phi double* [ %1241, %1240 ], [ %1212, %1210 ]
  %1246 = ptrtoint double* %1245 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %686) #7
  %1247 = getelementptr inbounds double, double* %1245, i64 1
  %1248 = bitcast double* %1247 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %686, i8 0, i64 24, i1 false) #7
  %1249 = ptrtoint double* %1247 to i64
  %1250 = ptrtoint double* %1244 to i64
  %1251 = sub i64 %1250, %1249
  %1252 = ashr exact i64 %1251, 3
  %1253 = icmp eq i64 %1251, 0
  br i1 %1253, label %1442, label %1254

1254:                                             ; preds = %1243
  %1255 = icmp ugt i64 %1252, 2305843009213693951
  br i1 %1255, label %1256, label %1258

1256:                                             ; preds = %1254
  %1257 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1257) #8
  unreachable

1258:                                             ; preds = %1254
  %1259 = call i8* @_Znwm(i64 %1251) #9
  %1260 = bitcast i8* %1259 to double*
  store i8* %1259, i8** %689, align 8
  store i8* %1259, i8** %690, align 8
  %1261 = getelementptr inbounds double, double* %1260, i64 %1252
  store double* %1261, double** %691, align 8
  %1262 = ptrtoint i8* %1259 to i64
  %1263 = icmp eq double* %1247, %1244
  br i1 %1263, label %1440, label %1264

1264:                                             ; preds = %1258
  %1265 = getelementptr double, double* %1244, i64 -2
  %1266 = ptrtoint double* %1265 to i64
  %1267 = sub i64 %1266, %1246
  %1268 = lshr i64 %1267, 3
  %1269 = add nuw nsw i64 %1268, 1
  %1270 = icmp ult i64 %1269, 4
  br i1 %1270, label %1366, label %1271

1271:                                             ; preds = %1264
  %1272 = getelementptr i8, i8* %1259, i64 8
  %1273 = getelementptr double, double* %1244, i64 -2
  %1274 = ptrtoint double* %1273 to i64
  %1275 = sub i64 %1274, %1246
  %1276 = lshr i64 %1275, 3
  %1277 = and i64 %1275, -8
  %1278 = getelementptr i8, i8* %1272, i64 %1277
  %1279 = getelementptr double, double* %1245, i64 2
  %1280 = getelementptr double, double* %1279, i64 %1276
  %1281 = bitcast double* %1280 to i8*
  %1282 = icmp ult i8* %1259, %1281
  %1283 = icmp ugt i8* %1278, %1248
  %1284 = and i1 %1282, %1283
  br i1 %1284, label %1366, label %1285

1285:                                             ; preds = %1271
  %1286 = and i64 %1269, 4611686018427387900
  %1287 = getelementptr double, double* %1260, i64 %1286
  %1288 = getelementptr double, double* %1247, i64 %1286
  %1289 = add nsw i64 %1286, -4
  %1290 = lshr exact i64 %1289, 2
  %1291 = add nuw nsw i64 %1290, 1
  %1292 = and i64 %1291, 3
  %1293 = icmp ult i64 %1289, 12
  br i1 %1293, label %1345, label %1294

1294:                                             ; preds = %1285
  %1295 = sub nsw i64 %1291, %1292
  br label %1296

1296:                                             ; preds = %1296, %1294
  %1297 = phi i64 [ 0, %1294 ], [ %1342, %1296 ]
  %1298 = phi i64 [ %1295, %1294 ], [ %1343, %1296 ]
  %1299 = getelementptr double, double* %1260, i64 %1297
  %1300 = getelementptr double, double* %1247, i64 %1297
  %1301 = bitcast double* %1300 to <2 x i64>*
  %1302 = load <2 x i64>, <2 x i64>* %1301, align 8, !alias.scope !45
  %1303 = getelementptr double, double* %1300, i64 2
  %1304 = bitcast double* %1303 to <2 x i64>*
  %1305 = load <2 x i64>, <2 x i64>* %1304, align 8, !alias.scope !45
  %1306 = bitcast double* %1299 to <2 x i64>*
  store <2 x i64> %1302, <2 x i64>* %1306, align 8, !alias.scope !48, !noalias !45
  %1307 = getelementptr double, double* %1299, i64 2
  %1308 = bitcast double* %1307 to <2 x i64>*
  store <2 x i64> %1305, <2 x i64>* %1308, align 8, !alias.scope !48, !noalias !45
  %1309 = or i64 %1297, 4
  %1310 = getelementptr double, double* %1260, i64 %1309
  %1311 = getelementptr double, double* %1247, i64 %1309
  %1312 = bitcast double* %1311 to <2 x i64>*
  %1313 = load <2 x i64>, <2 x i64>* %1312, align 8, !alias.scope !45
  %1314 = getelementptr double, double* %1311, i64 2
  %1315 = bitcast double* %1314 to <2 x i64>*
  %1316 = load <2 x i64>, <2 x i64>* %1315, align 8, !alias.scope !45
  %1317 = bitcast double* %1310 to <2 x i64>*
  store <2 x i64> %1313, <2 x i64>* %1317, align 8, !alias.scope !48, !noalias !45
  %1318 = getelementptr double, double* %1310, i64 2
  %1319 = bitcast double* %1318 to <2 x i64>*
  store <2 x i64> %1316, <2 x i64>* %1319, align 8, !alias.scope !48, !noalias !45
  %1320 = or i64 %1297, 8
  %1321 = getelementptr double, double* %1260, i64 %1320
  %1322 = getelementptr double, double* %1247, i64 %1320
  %1323 = bitcast double* %1322 to <2 x i64>*
  %1324 = load <2 x i64>, <2 x i64>* %1323, align 8, !alias.scope !45
  %1325 = getelementptr double, double* %1322, i64 2
  %1326 = bitcast double* %1325 to <2 x i64>*
  %1327 = load <2 x i64>, <2 x i64>* %1326, align 8, !alias.scope !45
  %1328 = bitcast double* %1321 to <2 x i64>*
  store <2 x i64> %1324, <2 x i64>* %1328, align 8, !alias.scope !48, !noalias !45
  %1329 = getelementptr double, double* %1321, i64 2
  %1330 = bitcast double* %1329 to <2 x i64>*
  store <2 x i64> %1327, <2 x i64>* %1330, align 8, !alias.scope !48, !noalias !45
  %1331 = or i64 %1297, 12
  %1332 = getelementptr double, double* %1260, i64 %1331
  %1333 = getelementptr double, double* %1247, i64 %1331
  %1334 = bitcast double* %1333 to <2 x i64>*
  %1335 = load <2 x i64>, <2 x i64>* %1334, align 8, !alias.scope !45
  %1336 = getelementptr double, double* %1333, i64 2
  %1337 = bitcast double* %1336 to <2 x i64>*
  %1338 = load <2 x i64>, <2 x i64>* %1337, align 8, !alias.scope !45
  %1339 = bitcast double* %1332 to <2 x i64>*
  store <2 x i64> %1335, <2 x i64>* %1339, align 8, !alias.scope !48, !noalias !45
  %1340 = getelementptr double, double* %1332, i64 2
  %1341 = bitcast double* %1340 to <2 x i64>*
  store <2 x i64> %1338, <2 x i64>* %1341, align 8, !alias.scope !48, !noalias !45
  %1342 = add i64 %1297, 16
  %1343 = add i64 %1298, -4
  %1344 = icmp eq i64 %1343, 0
  br i1 %1344, label %1345, label %1296, !llvm.loop !50

1345:                                             ; preds = %1296, %1285
  %1346 = phi i64 [ 0, %1285 ], [ %1342, %1296 ]
  %1347 = icmp eq i64 %1292, 0
  br i1 %1347, label %1364, label %1348

1348:                                             ; preds = %1345, %1348
  %1349 = phi i64 [ %1361, %1348 ], [ %1346, %1345 ]
  %1350 = phi i64 [ %1362, %1348 ], [ %1292, %1345 ]
  %1351 = getelementptr double, double* %1260, i64 %1349
  %1352 = getelementptr double, double* %1247, i64 %1349
  %1353 = bitcast double* %1352 to <2 x i64>*
  %1354 = load <2 x i64>, <2 x i64>* %1353, align 8, !alias.scope !45
  %1355 = getelementptr double, double* %1352, i64 2
  %1356 = bitcast double* %1355 to <2 x i64>*
  %1357 = load <2 x i64>, <2 x i64>* %1356, align 8, !alias.scope !45
  %1358 = bitcast double* %1351 to <2 x i64>*
  store <2 x i64> %1354, <2 x i64>* %1358, align 8, !alias.scope !48, !noalias !45
  %1359 = getelementptr double, double* %1351, i64 2
  %1360 = bitcast double* %1359 to <2 x i64>*
  store <2 x i64> %1357, <2 x i64>* %1360, align 8, !alias.scope !48, !noalias !45
  %1361 = add i64 %1349, 4
  %1362 = add i64 %1350, -1
  %1363 = icmp eq i64 %1362, 0
  br i1 %1363, label %1364, label %1348, !llvm.loop !51

1364:                                             ; preds = %1348, %1345
  %1365 = icmp eq i64 %1269, %1286
  br i1 %1365, label %1437, label %1366

1366:                                             ; preds = %1364, %1271, %1264
  %1367 = phi double* [ %1260, %1271 ], [ %1260, %1264 ], [ %1287, %1364 ]
  %1368 = phi double* [ %1247, %1271 ], [ %1247, %1264 ], [ %1288, %1364 ]
  %1369 = ptrtoint double* %1368 to i64
  %1370 = getelementptr double, double* %1244, i64 -1
  %1371 = ptrtoint double* %1370 to i64
  %1372 = sub i64 %1371, %1369
  %1373 = lshr i64 %1372, 3
  %1374 = add nuw nsw i64 %1373, 1
  %1375 = and i64 %1374, 7
  %1376 = icmp eq i64 %1375, 0
  br i1 %1376, label %1388, label %1377

1377:                                             ; preds = %1366, %1377
  %1378 = phi double* [ %1385, %1377 ], [ %1367, %1366 ]
  %1379 = phi double* [ %1384, %1377 ], [ %1368, %1366 ]
  %1380 = phi i64 [ %1386, %1377 ], [ %1375, %1366 ]
  %1381 = bitcast double* %1378 to i64*
  %1382 = bitcast double* %1379 to i64*
  %1383 = load i64, i64* %1382, align 8
  store i64 %1383, i64* %1381, align 8
  %1384 = getelementptr inbounds double, double* %1379, i64 1
  %1385 = getelementptr inbounds double, double* %1378, i64 1
  %1386 = add i64 %1380, -1
  %1387 = icmp eq i64 %1386, 0
  br i1 %1387, label %1388, label %1377, !llvm.loop !52

1388:                                             ; preds = %1377, %1366
  %1389 = phi double* [ undef, %1366 ], [ %1385, %1377 ]
  %1390 = phi double* [ %1367, %1366 ], [ %1385, %1377 ]
  %1391 = phi double* [ %1368, %1366 ], [ %1384, %1377 ]
  %1392 = icmp ult i64 %1372, 56
  br i1 %1392, label %1437, label %1393

1393:                                             ; preds = %1388, %1393
  %1394 = phi double* [ %1435, %1393 ], [ %1390, %1388 ]
  %1395 = phi double* [ %1434, %1393 ], [ %1391, %1388 ]
  %1396 = bitcast double* %1394 to i64*
  %1397 = bitcast double* %1395 to i64*
  %1398 = load i64, i64* %1397, align 8
  store i64 %1398, i64* %1396, align 8
  %1399 = getelementptr inbounds double, double* %1395, i64 1
  %1400 = getelementptr inbounds double, double* %1394, i64 1
  %1401 = bitcast double* %1400 to i64*
  %1402 = bitcast double* %1399 to i64*
  %1403 = load i64, i64* %1402, align 8
  store i64 %1403, i64* %1401, align 8
  %1404 = getelementptr inbounds double, double* %1395, i64 2
  %1405 = getelementptr inbounds double, double* %1394, i64 2
  %1406 = bitcast double* %1405 to i64*
  %1407 = bitcast double* %1404 to i64*
  %1408 = load i64, i64* %1407, align 8
  store i64 %1408, i64* %1406, align 8
  %1409 = getelementptr inbounds double, double* %1395, i64 3
  %1410 = getelementptr inbounds double, double* %1394, i64 3
  %1411 = bitcast double* %1410 to i64*
  %1412 = bitcast double* %1409 to i64*
  %1413 = load i64, i64* %1412, align 8
  store i64 %1413, i64* %1411, align 8
  %1414 = getelementptr inbounds double, double* %1395, i64 4
  %1415 = getelementptr inbounds double, double* %1394, i64 4
  %1416 = bitcast double* %1415 to i64*
  %1417 = bitcast double* %1414 to i64*
  %1418 = load i64, i64* %1417, align 8
  store i64 %1418, i64* %1416, align 8
  %1419 = getelementptr inbounds double, double* %1395, i64 5
  %1420 = getelementptr inbounds double, double* %1394, i64 5
  %1421 = bitcast double* %1420 to i64*
  %1422 = bitcast double* %1419 to i64*
  %1423 = load i64, i64* %1422, align 8
  store i64 %1423, i64* %1421, align 8
  %1424 = getelementptr inbounds double, double* %1395, i64 6
  %1425 = getelementptr inbounds double, double* %1394, i64 6
  %1426 = bitcast double* %1425 to i64*
  %1427 = bitcast double* %1424 to i64*
  %1428 = load i64, i64* %1427, align 8
  store i64 %1428, i64* %1426, align 8
  %1429 = getelementptr inbounds double, double* %1395, i64 7
  %1430 = getelementptr inbounds double, double* %1394, i64 7
  %1431 = bitcast double* %1430 to i64*
  %1432 = bitcast double* %1429 to i64*
  %1433 = load i64, i64* %1432, align 8
  store i64 %1433, i64* %1431, align 8
  %1434 = getelementptr inbounds double, double* %1395, i64 8
  %1435 = getelementptr inbounds double, double* %1394, i64 8
  %1436 = icmp eq double* %1434, %1244
  br i1 %1436, label %1437, label %1393, !llvm.loop !53

1437:                                             ; preds = %1388, %1393, %1364
  %1438 = phi double* [ %1287, %1364 ], [ %1389, %1388 ], [ %1435, %1393 ]
  %1439 = ptrtoint double* %1438 to i64
  br label %1440

1440:                                             ; preds = %1437, %1258
  %1441 = phi i64 [ %1262, %1258 ], [ %1439, %1437 ]
  store i64 %1441, i64* %692, align 8
  br label %1442

1442:                                             ; preds = %1440, %1243
  %1443 = load double (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::vector"*)*, double (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::vector"*)** %265, align 8
  %1444 = call double %1443(%"union.std::__1::__function::__policy_storage"* %267, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #7
  %1445 = load double*, double** %680, align 8
  store double %1444, double* %1445, align 8
  %1446 = load double*, double** %687, align 8
  %1447 = icmp eq double* %1446, null
  br i1 %1447, label %1451, label %1448

1448:                                             ; preds = %1442
  %1449 = ptrtoint double* %1446 to i64
  store i64 %1449, i64* %692, align 8
  %1450 = bitcast double* %1446 to i8*
  call void @_ZdlPv(i8* %1450) #9
  br label %1451

1451:                                             ; preds = %1448, %1442
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %686) #7
  %1452 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %25, align 8
  %1453 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1452, i64 -1
  %1454 = icmp eq %"class.std::__1::vector"* %1453, %14
  br i1 %1454, label %1458, label %1455

1455:                                             ; preds = %1451
  %1456 = load double*, double** %680, align 8
  %1457 = load double*, double** %681, align 8
  call void @_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %1453, double* %1456, double* %1457) #7
  br label %1458

1458:                                             ; preds = %1455, %1451
  %1459 = load double*, double** %680, align 8
  %1460 = icmp eq double* %1459, null
  br i1 %1460, label %1464, label %1461

1461:                                             ; preds = %1458
  %1462 = ptrtoint double* %1459 to i64
  store i64 %1462, i64* %684, align 8
  %1463 = bitcast double* %1459 to i8*
  call void @_ZdlPv(i8* %1463) #9
  br label %1464

1464:                                             ; preds = %1461, %1458
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %679) #7
  br label %1705

1465:                                             ; preds = %1158
  %1466 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1166, i64 0, i32 0, i32 0
  %1467 = load double*, double** %1466, align 8
  %1468 = load double, double* %1467, align 8
  %1469 = fcmp olt double %1160, %1468
  br i1 %1469, label %1470, label %1700

1470:                                             ; preds = %1465
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %668) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %668, i8 -86, i64 24, i1 false) #7
  call fastcc void @_ZN3jxl8optimize12_GLOBAL__N_13AddERKNSt3__16vectorIdNS2_9allocatorIdEEEES8_(%"class.std::__1::vector"* nonnull sret %15, %"class.std::__1::vector"* nonnull dereferenceable(24) %13, %"class.std::__1::vector"* nonnull dereferenceable(24) %12) #7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %671) #7
  %1471 = load double*, double** %669, align 8
  %1472 = ptrtoint double* %1471 to i64
  %1473 = getelementptr inbounds double, double* %1471, i64 1
  %1474 = bitcast double* %1473 to i8*
  %1475 = load double*, double** %670, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %671, i8 0, i64 24, i1 false) #7
  %1476 = ptrtoint double* %1473 to i64
  %1477 = ptrtoint double* %1475 to i64
  %1478 = sub i64 %1477, %1476
  %1479 = ashr exact i64 %1478, 3
  %1480 = icmp eq i64 %1478, 0
  br i1 %1480, label %1669, label %1481

1481:                                             ; preds = %1470
  %1482 = icmp ugt i64 %1479, 2305843009213693951
  br i1 %1482, label %1483, label %1485

1483:                                             ; preds = %1481
  %1484 = bitcast %"class.std::__1::vector"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1484) #8
  unreachable

1485:                                             ; preds = %1481
  %1486 = call i8* @_Znwm(i64 %1478) #9
  %1487 = bitcast i8* %1486 to double*
  store i8* %1486, i8** %674, align 8
  store i8* %1486, i8** %675, align 8
  %1488 = getelementptr inbounds double, double* %1487, i64 %1479
  store double* %1488, double** %676, align 8
  %1489 = ptrtoint i8* %1486 to i64
  %1490 = icmp eq double* %1473, %1475
  br i1 %1490, label %1667, label %1491

1491:                                             ; preds = %1485
  %1492 = getelementptr double, double* %1475, i64 -2
  %1493 = ptrtoint double* %1492 to i64
  %1494 = sub i64 %1493, %1472
  %1495 = lshr i64 %1494, 3
  %1496 = add nuw nsw i64 %1495, 1
  %1497 = icmp ult i64 %1496, 4
  br i1 %1497, label %1593, label %1498

1498:                                             ; preds = %1491
  %1499 = getelementptr i8, i8* %1486, i64 8
  %1500 = getelementptr double, double* %1475, i64 -2
  %1501 = ptrtoint double* %1500 to i64
  %1502 = sub i64 %1501, %1472
  %1503 = lshr i64 %1502, 3
  %1504 = and i64 %1502, -8
  %1505 = getelementptr i8, i8* %1499, i64 %1504
  %1506 = getelementptr double, double* %1471, i64 2
  %1507 = getelementptr double, double* %1506, i64 %1503
  %1508 = bitcast double* %1507 to i8*
  %1509 = icmp ult i8* %1486, %1508
  %1510 = icmp ugt i8* %1505, %1474
  %1511 = and i1 %1509, %1510
  br i1 %1511, label %1593, label %1512

1512:                                             ; preds = %1498
  %1513 = and i64 %1496, 4611686018427387900
  %1514 = getelementptr double, double* %1487, i64 %1513
  %1515 = getelementptr double, double* %1473, i64 %1513
  %1516 = add nsw i64 %1513, -4
  %1517 = lshr exact i64 %1516, 2
  %1518 = add nuw nsw i64 %1517, 1
  %1519 = and i64 %1518, 3
  %1520 = icmp ult i64 %1516, 12
  br i1 %1520, label %1572, label %1521

1521:                                             ; preds = %1512
  %1522 = sub nsw i64 %1518, %1519
  br label %1523

1523:                                             ; preds = %1523, %1521
  %1524 = phi i64 [ 0, %1521 ], [ %1569, %1523 ]
  %1525 = phi i64 [ %1522, %1521 ], [ %1570, %1523 ]
  %1526 = getelementptr double, double* %1487, i64 %1524
  %1527 = getelementptr double, double* %1473, i64 %1524
  %1528 = bitcast double* %1527 to <2 x i64>*
  %1529 = load <2 x i64>, <2 x i64>* %1528, align 8, !alias.scope !54
  %1530 = getelementptr double, double* %1527, i64 2
  %1531 = bitcast double* %1530 to <2 x i64>*
  %1532 = load <2 x i64>, <2 x i64>* %1531, align 8, !alias.scope !54
  %1533 = bitcast double* %1526 to <2 x i64>*
  store <2 x i64> %1529, <2 x i64>* %1533, align 8, !alias.scope !57, !noalias !54
  %1534 = getelementptr double, double* %1526, i64 2
  %1535 = bitcast double* %1534 to <2 x i64>*
  store <2 x i64> %1532, <2 x i64>* %1535, align 8, !alias.scope !57, !noalias !54
  %1536 = or i64 %1524, 4
  %1537 = getelementptr double, double* %1487, i64 %1536
  %1538 = getelementptr double, double* %1473, i64 %1536
  %1539 = bitcast double* %1538 to <2 x i64>*
  %1540 = load <2 x i64>, <2 x i64>* %1539, align 8, !alias.scope !54
  %1541 = getelementptr double, double* %1538, i64 2
  %1542 = bitcast double* %1541 to <2 x i64>*
  %1543 = load <2 x i64>, <2 x i64>* %1542, align 8, !alias.scope !54
  %1544 = bitcast double* %1537 to <2 x i64>*
  store <2 x i64> %1540, <2 x i64>* %1544, align 8, !alias.scope !57, !noalias !54
  %1545 = getelementptr double, double* %1537, i64 2
  %1546 = bitcast double* %1545 to <2 x i64>*
  store <2 x i64> %1543, <2 x i64>* %1546, align 8, !alias.scope !57, !noalias !54
  %1547 = or i64 %1524, 8
  %1548 = getelementptr double, double* %1487, i64 %1547
  %1549 = getelementptr double, double* %1473, i64 %1547
  %1550 = bitcast double* %1549 to <2 x i64>*
  %1551 = load <2 x i64>, <2 x i64>* %1550, align 8, !alias.scope !54
  %1552 = getelementptr double, double* %1549, i64 2
  %1553 = bitcast double* %1552 to <2 x i64>*
  %1554 = load <2 x i64>, <2 x i64>* %1553, align 8, !alias.scope !54
  %1555 = bitcast double* %1548 to <2 x i64>*
  store <2 x i64> %1551, <2 x i64>* %1555, align 8, !alias.scope !57, !noalias !54
  %1556 = getelementptr double, double* %1548, i64 2
  %1557 = bitcast double* %1556 to <2 x i64>*
  store <2 x i64> %1554, <2 x i64>* %1557, align 8, !alias.scope !57, !noalias !54
  %1558 = or i64 %1524, 12
  %1559 = getelementptr double, double* %1487, i64 %1558
  %1560 = getelementptr double, double* %1473, i64 %1558
  %1561 = bitcast double* %1560 to <2 x i64>*
  %1562 = load <2 x i64>, <2 x i64>* %1561, align 8, !alias.scope !54
  %1563 = getelementptr double, double* %1560, i64 2
  %1564 = bitcast double* %1563 to <2 x i64>*
  %1565 = load <2 x i64>, <2 x i64>* %1564, align 8, !alias.scope !54
  %1566 = bitcast double* %1559 to <2 x i64>*
  store <2 x i64> %1562, <2 x i64>* %1566, align 8, !alias.scope !57, !noalias !54
  %1567 = getelementptr double, double* %1559, i64 2
  %1568 = bitcast double* %1567 to <2 x i64>*
  store <2 x i64> %1565, <2 x i64>* %1568, align 8, !alias.scope !57, !noalias !54
  %1569 = add i64 %1524, 16
  %1570 = add i64 %1525, -4
  %1571 = icmp eq i64 %1570, 0
  br i1 %1571, label %1572, label %1523, !llvm.loop !59

1572:                                             ; preds = %1523, %1512
  %1573 = phi i64 [ 0, %1512 ], [ %1569, %1523 ]
  %1574 = icmp eq i64 %1519, 0
  br i1 %1574, label %1591, label %1575

1575:                                             ; preds = %1572, %1575
  %1576 = phi i64 [ %1588, %1575 ], [ %1573, %1572 ]
  %1577 = phi i64 [ %1589, %1575 ], [ %1519, %1572 ]
  %1578 = getelementptr double, double* %1487, i64 %1576
  %1579 = getelementptr double, double* %1473, i64 %1576
  %1580 = bitcast double* %1579 to <2 x i64>*
  %1581 = load <2 x i64>, <2 x i64>* %1580, align 8, !alias.scope !54
  %1582 = getelementptr double, double* %1579, i64 2
  %1583 = bitcast double* %1582 to <2 x i64>*
  %1584 = load <2 x i64>, <2 x i64>* %1583, align 8, !alias.scope !54
  %1585 = bitcast double* %1578 to <2 x i64>*
  store <2 x i64> %1581, <2 x i64>* %1585, align 8, !alias.scope !57, !noalias !54
  %1586 = getelementptr double, double* %1578, i64 2
  %1587 = bitcast double* %1586 to <2 x i64>*
  store <2 x i64> %1584, <2 x i64>* %1587, align 8, !alias.scope !57, !noalias !54
  %1588 = add i64 %1576, 4
  %1589 = add i64 %1577, -1
  %1590 = icmp eq i64 %1589, 0
  br i1 %1590, label %1591, label %1575, !llvm.loop !60

1591:                                             ; preds = %1575, %1572
  %1592 = icmp eq i64 %1496, %1513
  br i1 %1592, label %1664, label %1593

1593:                                             ; preds = %1591, %1498, %1491
  %1594 = phi double* [ %1487, %1498 ], [ %1487, %1491 ], [ %1514, %1591 ]
  %1595 = phi double* [ %1473, %1498 ], [ %1473, %1491 ], [ %1515, %1591 ]
  %1596 = ptrtoint double* %1595 to i64
  %1597 = getelementptr double, double* %1475, i64 -1
  %1598 = ptrtoint double* %1597 to i64
  %1599 = sub i64 %1598, %1596
  %1600 = lshr i64 %1599, 3
  %1601 = add nuw nsw i64 %1600, 1
  %1602 = and i64 %1601, 7
  %1603 = icmp eq i64 %1602, 0
  br i1 %1603, label %1615, label %1604

1604:                                             ; preds = %1593, %1604
  %1605 = phi double* [ %1612, %1604 ], [ %1594, %1593 ]
  %1606 = phi double* [ %1611, %1604 ], [ %1595, %1593 ]
  %1607 = phi i64 [ %1613, %1604 ], [ %1602, %1593 ]
  %1608 = bitcast double* %1605 to i64*
  %1609 = bitcast double* %1606 to i64*
  %1610 = load i64, i64* %1609, align 8
  store i64 %1610, i64* %1608, align 8
  %1611 = getelementptr inbounds double, double* %1606, i64 1
  %1612 = getelementptr inbounds double, double* %1605, i64 1
  %1613 = add i64 %1607, -1
  %1614 = icmp eq i64 %1613, 0
  br i1 %1614, label %1615, label %1604, !llvm.loop !61

1615:                                             ; preds = %1604, %1593
  %1616 = phi double* [ undef, %1593 ], [ %1612, %1604 ]
  %1617 = phi double* [ %1594, %1593 ], [ %1612, %1604 ]
  %1618 = phi double* [ %1595, %1593 ], [ %1611, %1604 ]
  %1619 = icmp ult i64 %1599, 56
  br i1 %1619, label %1664, label %1620

1620:                                             ; preds = %1615, %1620
  %1621 = phi double* [ %1662, %1620 ], [ %1617, %1615 ]
  %1622 = phi double* [ %1661, %1620 ], [ %1618, %1615 ]
  %1623 = bitcast double* %1621 to i64*
  %1624 = bitcast double* %1622 to i64*
  %1625 = load i64, i64* %1624, align 8
  store i64 %1625, i64* %1623, align 8
  %1626 = getelementptr inbounds double, double* %1622, i64 1
  %1627 = getelementptr inbounds double, double* %1621, i64 1
  %1628 = bitcast double* %1627 to i64*
  %1629 = bitcast double* %1626 to i64*
  %1630 = load i64, i64* %1629, align 8
  store i64 %1630, i64* %1628, align 8
  %1631 = getelementptr inbounds double, double* %1622, i64 2
  %1632 = getelementptr inbounds double, double* %1621, i64 2
  %1633 = bitcast double* %1632 to i64*
  %1634 = bitcast double* %1631 to i64*
  %1635 = load i64, i64* %1634, align 8
  store i64 %1635, i64* %1633, align 8
  %1636 = getelementptr inbounds double, double* %1622, i64 3
  %1637 = getelementptr inbounds double, double* %1621, i64 3
  %1638 = bitcast double* %1637 to i64*
  %1639 = bitcast double* %1636 to i64*
  %1640 = load i64, i64* %1639, align 8
  store i64 %1640, i64* %1638, align 8
  %1641 = getelementptr inbounds double, double* %1622, i64 4
  %1642 = getelementptr inbounds double, double* %1621, i64 4
  %1643 = bitcast double* %1642 to i64*
  %1644 = bitcast double* %1641 to i64*
  %1645 = load i64, i64* %1644, align 8
  store i64 %1645, i64* %1643, align 8
  %1646 = getelementptr inbounds double, double* %1622, i64 5
  %1647 = getelementptr inbounds double, double* %1621, i64 5
  %1648 = bitcast double* %1647 to i64*
  %1649 = bitcast double* %1646 to i64*
  %1650 = load i64, i64* %1649, align 8
  store i64 %1650, i64* %1648, align 8
  %1651 = getelementptr inbounds double, double* %1622, i64 6
  %1652 = getelementptr inbounds double, double* %1621, i64 6
  %1653 = bitcast double* %1652 to i64*
  %1654 = bitcast double* %1651 to i64*
  %1655 = load i64, i64* %1654, align 8
  store i64 %1655, i64* %1653, align 8
  %1656 = getelementptr inbounds double, double* %1622, i64 7
  %1657 = getelementptr inbounds double, double* %1621, i64 7
  %1658 = bitcast double* %1657 to i64*
  %1659 = bitcast double* %1656 to i64*
  %1660 = load i64, i64* %1659, align 8
  store i64 %1660, i64* %1658, align 8
  %1661 = getelementptr inbounds double, double* %1622, i64 8
  %1662 = getelementptr inbounds double, double* %1621, i64 8
  %1663 = icmp eq double* %1661, %1475
  br i1 %1663, label %1664, label %1620, !llvm.loop !62

1664:                                             ; preds = %1615, %1620, %1591
  %1665 = phi double* [ %1514, %1591 ], [ %1616, %1615 ], [ %1662, %1620 ]
  %1666 = ptrtoint double* %1665 to i64
  br label %1667

1667:                                             ; preds = %1664, %1485
  %1668 = phi i64 [ %1489, %1485 ], [ %1666, %1664 ]
  store i64 %1668, i64* %677, align 8
  br label %1669

1669:                                             ; preds = %1667, %1470
  %1670 = load double (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::vector"*)*, double (%"union.std::__1::__function::__policy_storage"*, %"class.std::__1::vector"*)** %265, align 8
  %1671 = call double %1670(%"union.std::__1::__function::__policy_storage"* %267, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #7
  %1672 = load double*, double** %669, align 8
  store double %1671, double* %1672, align 8
  %1673 = load double*, double** %672, align 8
  %1674 = icmp eq double* %1673, null
  br i1 %1674, label %1678, label %1675

1675:                                             ; preds = %1669
  %1676 = ptrtoint double* %1673 to i64
  store i64 %1676, i64* %677, align 8
  %1677 = bitcast double* %1673 to i8*
  call void @_ZdlPv(i8* %1677) #9
  br label %1678

1678:                                             ; preds = %1675, %1669
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %671) #7
  %1679 = load double*, double** %669, align 8
  %1680 = load double, double* %1679, align 8
  %1681 = load double*, double** %658, align 8
  %1682 = load double, double* %1681, align 8
  %1683 = fcmp olt double %1680, %1682
  br i1 %1683, label %1684, label %1686

1684:                                             ; preds = %1678
  %1685 = load double*, double** %670, align 8
  call void @_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* nonnull %13, double* %1679, double* %1685) #7
  br label %1686

1686:                                             ; preds = %1684, %1678
  %1687 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %25, align 8
  %1688 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1687, i64 -1
  %1689 = icmp eq %"class.std::__1::vector"* %1688, %13
  br i1 %1689, label %1693, label %1690

1690:                                             ; preds = %1686
  %1691 = load double*, double** %658, align 8
  %1692 = load double*, double** %659, align 8
  call void @_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %1688, double* %1691, double* %1692) #7
  br label %1693

1693:                                             ; preds = %1690, %1686
  %1694 = load double*, double** %669, align 8
  %1695 = icmp eq double* %1694, null
  br i1 %1695, label %1699, label %1696

1696:                                             ; preds = %1693
  %1697 = ptrtoint double* %1694 to i64
  store i64 %1697, i64* %678, align 8
  %1698 = bitcast double* %1694 to i8*
  call void @_ZdlPv(i8* %1698) #9
  br label %1699

1699:                                             ; preds = %1696, %1693
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %668) #7
  br label %1705

1700:                                             ; preds = %1465
  %1701 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1171, i64 -1
  %1702 = icmp eq %"class.std::__1::vector"* %1701, %13
  br i1 %1702, label %1705, label %1703

1703:                                             ; preds = %1700
  %1704 = load double*, double** %659, align 8
  call void @_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %1701, double* %1159, double* %1704) #7
  br label %1705

1705:                                             ; preds = %1703, %1700, %1699, %1464
  %1706 = load double*, double** %658, align 8
  %1707 = icmp eq double* %1706, null
  br i1 %1707, label %1711, label %1708

1708:                                             ; preds = %1705
  %1709 = ptrtoint double* %1706 to i64
  store i64 %1709, i64* %693, align 8
  %1710 = bitcast double* %1706 to i8*
  call void @_ZdlPv(i8* %1710) #9
  br label %1711

1711:                                             ; preds = %1708, %1705
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %657) #7
  %1712 = load double*, double** %651, align 8
  %1713 = icmp eq double* %1712, null
  br i1 %1713, label %1717, label %1714

1714:                                             ; preds = %1711
  %1715 = ptrtoint double* %1712 to i64
  store i64 %1715, i64* %655, align 8
  %1716 = bitcast double* %1712 to i8*
  call void @_ZdlPv(i8* %1716) #9
  br label %1717

1717:                                             ; preds = %1714, %1711
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %650) #7
  %1718 = load double*, double** %644, align 8
  %1719 = icmp eq double* %1718, null
  br i1 %1719, label %1723, label %1720

1720:                                             ; preds = %1717
  %1721 = ptrtoint double* %1718 to i64
  store i64 %1721, i64* %648, align 8
  %1722 = bitcast double* %1718 to i8*
  call void @_ZdlPv(i8* %1722) #9
  br label %1723

1723:                                             ; preds = %1717, %1720
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %643) #7
  %1724 = add nuw nsw i32 %758, 1
  %1725 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %24, align 8
  %1726 = icmp eq i32 %1724, %3
  br i1 %1726, label %694, label %756
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3jxl8optimize10RunSimplexEidiRKNSt3__18functionIFdRKNS1_6vectorIdNS1_9allocatorIdEEEEEEE(%"class.std::__1::vector"* noalias sret, i32, double, i32, %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #0 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = sext i32 %1 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #7
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %25, label %13

13:                                               ; preds = %5
  %14 = icmp slt i32 %1, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %16) #8
  unreachable

17:                                               ; preds = %13
  %18 = shl nsw i64 %11, 3
  %19 = tail call i8* @_Znwm(i64 %18) #9
  %20 = bitcast i8* %19 to double*
  %21 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %19, i8** %21, align 8
  %22 = getelementptr inbounds double, double* %20, i64 %11
  store double* %22, double** %10, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 %18, i1 false)
  %23 = bitcast double** %9 to i64*
  %24 = ptrtoint double* %22 to i64
  store i64 %24, i64* %23, align 8
  br label %25

25:                                               ; preds = %5, %17
  call void @_ZN3jxl8optimize10RunSimplexEidiRKNSt3__16vectorIdNS1_9allocatorIdEEEERKNS1_8functionIFdS7_EEE(%"class.std::__1::vector"* sret %0, i32 %1, double %2, i32 %3, %"class.std::__1::vector"* nonnull dereferenceable(24) %6, %"class.std::__1::function"* dereferenceable(32) %4)
  %26 = load double*, double** %8, align 8
  %27 = icmp eq double* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = ptrtoint double* %26 to i64
  %30 = bitcast double** %9 to i64*
  store i64 %29, i64* %30, align 8
  %31 = bitcast double* %26 to i8*
  tail call void @_ZdlPv(i8* %31) #9
  br label %32

32:                                               ; preds = %25, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIdNS_9allocatorIdEEE6assignIPdEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIdNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, double*, double*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint double* %2 to i64
  %5 = ptrtoint double* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast double** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to double*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast double** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds double, double* %1, i64 %22
  %25 = select i1 %23, double* %24, double* %2
  %26 = ptrtoint double* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast double* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #7
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast double* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 %36, i1 false) #7
  %42 = inttoptr i64 %35 to double*
  %43 = getelementptr inbounds double, double* %42, i64 %39
  %44 = ptrtoint double* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds double, double* %16, i64 %28
  store double* %48, double** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast double** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #9
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #7
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #8
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #8
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #9
  %75 = bitcast i8* %74 to double*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast double** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds double, double* %75, i64 %72
  store double* %79, double** %8, align 8
  %80 = bitcast double** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast double* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 8 %85, i64 %6, i1 false) #7
  %86 = getelementptr inbounds double, double* %75, i64 %84
  %87 = ptrtoint double* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS0_IdNS_9allocatorIdEEEENS1_IS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector.1"*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::vector"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #8
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::vector"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #9
  %30 = bitcast i8* %29 to %"class.std::__1::vector"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::vector"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::vector"* %35 to i64
  %37 = bitcast %"class.std::__1::vector"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #7
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %39 = bitcast double** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp eq i64 %43, 0
  br i1 %45, label %73, label %46

46:                                               ; preds = %31
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::vector"* %34 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %49) #8
  unreachable

50:                                               ; preds = %46
  %51 = tail call i8* @_Znwm(i64 %43) #9
  %52 = bitcast i8* %51 to double*
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 %9, i32 0, i32 1
  %54 = bitcast double** %53 to i8**
  store i8* %51, i8** %54, align 8
  %55 = bitcast %"class.std::__1::vector"* %34 to i8**
  store i8* %51, i8** %55, align 8
  %56 = getelementptr inbounds double, double* %52, i64 %44
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 %9, i32 0, i32 2, i32 0, i32 0
  store double* %56, double** %57, align 8
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %59 = load double*, double** %58, align 8
  %60 = load i64, i64* %39, align 8
  %61 = bitcast double** %53 to i64*
  %62 = ptrtoint i8* %51 to i64
  %63 = ptrtoint double* %59 to i64
  %64 = sub i64 %60, %63
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %71

66:                                               ; preds = %50
  %67 = lshr exact i64 %64, 3
  %68 = bitcast double* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %51, i8* align 8 %68, i64 %64, i1 false) #7
  %69 = getelementptr inbounds double, double* %52, i64 %67
  %70 = ptrtoint double* %69 to i64
  br label %71

71:                                               ; preds = %66, %50
  %72 = phi i64 [ %70, %66 ], [ %62, %50 ]
  store i64 %72, i64* %61, align 8
  br label %73

73:                                               ; preds = %31, %71
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %34, i64 1
  %75 = ptrtoint %"class.std::__1::vector"* %74 to i64
  %76 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %77 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %76, align 8
  %78 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  %79 = icmp eq %"class.std::__1::vector"* %78, %77
  br i1 %79, label %80, label %82

80:                                               ; preds = %73
  %81 = ptrtoint %"class.std::__1::vector"* %77 to i64
  br label %106

82:                                               ; preds = %73, %82
  %83 = phi %"class.std::__1::vector"* [ %85, %82 ], [ %34, %73 ]
  %84 = phi %"class.std::__1::vector"* [ %86, %82 ], [ %78, %73 ]
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %83, i64 -1
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %84, i64 -1
  %87 = bitcast %"class.std::__1::vector"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 24, i1 false) #7
  %88 = bitcast %"class.std::__1::vector"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %84, i64 -1, i32 0, i32 1
  %92 = bitcast double** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %83, i64 -1, i32 0, i32 1
  %95 = bitcast double** %94 to i64*
  store i64 %93, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %84, i64 -1, i32 0, i32 2, i32 0, i32 0
  %97 = bitcast double** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %83, i64 -1, i32 0, i32 2, i32 0, i32 0
  %100 = bitcast double** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = bitcast %"class.std::__1::vector"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 24, i1 false) #7
  %102 = icmp eq %"class.std::__1::vector"* %86, %77
  br i1 %102, label %103, label %82

103:                                              ; preds = %82
  %104 = load i64, i64* %6, align 8
  %105 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %3, align 8
  br label %106

106:                                              ; preds = %80, %103
  %107 = phi %"class.std::__1::vector"* [ %77, %80 ], [ %105, %103 ]
  %108 = phi %"class.std::__1::vector"* [ %34, %80 ], [ %85, %103 ]
  %109 = phi i64 [ %81, %80 ], [ %104, %103 ]
  %110 = ptrtoint %"class.std::__1::vector"* %108 to i64
  store i64 %110, i64* %6, align 8
  store i64 %75, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %111 = inttoptr i64 %109 to %"class.std::__1::vector"*
  %112 = icmp eq %"class.std::__1::vector"* %107, %111
  br i1 %112, label %126, label %113

113:                                              ; preds = %106, %124
  %114 = phi %"class.std::__1::vector"* [ %115, %124 ], [ %107, %106 ]
  %115 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %114, i64 -1
  %116 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %115, i64 0, i32 0, i32 0
  %117 = load double*, double** %116, align 8
  %118 = icmp eq double* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %113
  %120 = ptrtoint double* %117 to i64
  %121 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %114, i64 -1, i32 0, i32 1
  %122 = bitcast double** %121 to i64*
  store i64 %120, i64* %122, align 8
  %123 = bitcast double* %117 to i8*
  tail call void @_ZdlPv(i8* %123) #9
  br label %124

124:                                              ; preds = %119, %113
  %125 = icmp eq %"class.std::__1::vector"* %115, %111
  br i1 %125, label %126, label %113

126:                                              ; preds = %124, %106
  %127 = icmp eq i64 %109, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = inttoptr i64 %109 to i8*
  tail call void @_ZdlPv(i8* %129) #9
  br label %130

130:                                              ; preds = %126, %128
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEvT0_S9_T_(%"class.std::__1::vector"*, %"class.std::__1::vector"*, %"struct.std::__1::__less.12"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %463, %3
  %5 = phi %"class.std::__1::vector"* [ %1, %3 ], [ %412, %463 ]
  %6 = phi %"class.std::__1::vector"* [ %0, %3 ], [ %20, %463 ]
  %7 = ptrtoint %"class.std::__1::vector"* %5 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 -1
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 -2
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 -1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::vector"* %8 to i64*
  %13 = bitcast double** %11 to i64*
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 -1, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast double** %14 to i64*
  %16 = ptrtoint %"class.std::__1::vector"* %5 to i64
  br label %17

17:                                               ; preds = %474, %4
  %18 = phi %"class.std::__1::vector"* [ %6, %4 ], [ %475, %474 ]
  br label %19

19:                                               ; preds = %257, %17
  %20 = phi %"class.std::__1::vector"* [ %18, %17 ], [ %197, %257 ]
  %21 = ptrtoint %"class.std::__1::vector"* %20 to i64
  %22 = sub i64 %7, %21
  %23 = sdiv exact i64 %22, 24
  switch i64 %23, label %80 [
    i64 0, label %478
    i64 1, label %478
    i64 2, label %24
    i64 3, label %65
    i64 4, label %69
    i64 5, label %74
  ]

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 -1
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 -1, i32 0, i32 1
  %27 = load double*, double** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %29 = load double*, double** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 1
  %31 = load double*, double** %30, align 8
  %32 = icmp eq double* %29, %31
  %33 = ptrtoint double* %29 to i64
  br i1 %32, label %478, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = ptrtoint double* %36 to i64
  br label %38

38:                                               ; preds = %48, %34
  %39 = phi double* [ %49, %48 ], [ %36, %34 ]
  %40 = phi double* [ %50, %48 ], [ %29, %34 ]
  %41 = icmp eq double* %39, %27
  br i1 %41, label %52, label %42

42:                                               ; preds = %38
  %43 = load double, double* %39, align 8
  %44 = load double, double* %40, align 8
  %45 = fcmp olt double %43, %44
  br i1 %45, label %52, label %46

46:                                               ; preds = %42
  %47 = fcmp olt double %44, %43
  br i1 %47, label %478, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds double, double* %39, i64 1
  %50 = getelementptr inbounds double, double* %40, i64 1
  %51 = icmp eq double* %50, %31
  br i1 %51, label %478, label %38

52:                                               ; preds = %42, %38
  %53 = bitcast %"class.std::__1::vector"* %20 to i64*
  %54 = bitcast %"class.std::__1::vector"* %25 to i64*
  store i64 %37, i64* %53, align 8
  store i64 %33, i64* %54, align 8
  %55 = bitcast double** %30 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast double** %26 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %55, align 8
  store i64 %56, i64* %57, align 8
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 2, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 -1, i32 0, i32 2, i32 0, i32 0
  %61 = bitcast double** %59 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast double** %60 to i64*
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %61, align 8
  store i64 %62, i64* %63, align 8
  br label %478

65:                                               ; preds = %19
  %66 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 1
  %67 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 -1
  %68 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_T_(%"class.std::__1::vector"* %20, %"class.std::__1::vector"* %66, %"class.std::__1::vector"* %67, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  br label %478

69:                                               ; preds = %19
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 1
  %71 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 2
  %72 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 -1
  %73 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_S9_T_(%"class.std::__1::vector"* %20, %"class.std::__1::vector"* %70, %"class.std::__1::vector"* %71, %"class.std::__1::vector"* %72, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  br label %478

74:                                               ; preds = %19
  %75 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 1
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 2
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 3
  %78 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 -1
  %79 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_(%"class.std::__1::vector"* %20, %"class.std::__1::vector"* %75, %"class.std::__1::vector"* %76, %"class.std::__1::vector"* %77, %"class.std::__1::vector"* %78, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  br label %478

80:                                               ; preds = %19
  %81 = icmp slt i64 %22, 168
  br i1 %81, label %82, label %83

82:                                               ; preds = %80
  tail call void @_ZNSt3__118__insertion_sort_3IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEvT0_S9_T_(%"class.std::__1::vector"* %20, %"class.std::__1::vector"* %5, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  br label %478

83:                                               ; preds = %80
  %84 = icmp sgt i64 %22, 23976
  %85 = udiv i64 %22, 48
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 %85
  br i1 %84, label %87, label %92

87:                                               ; preds = %83
  %88 = udiv i64 %22, 96
  %89 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 %88
  %90 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %86, i64 %88
  %91 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_(%"class.std::__1::vector"* %20, %"class.std::__1::vector"* %89, %"class.std::__1::vector"* %86, %"class.std::__1::vector"* %90, %"class.std::__1::vector"* %8, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  br label %94

92:                                               ; preds = %83
  %93 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_T_(%"class.std::__1::vector"* %20, %"class.std::__1::vector"* %86, %"class.std::__1::vector"* %8, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  br label %94

94:                                               ; preds = %92, %87
  %95 = phi i32 [ %91, %87 ], [ %93, %92 ]
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 1
  %97 = load double*, double** %96, align 8
  %98 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %86, i64 0, i32 0, i32 0
  %99 = load double*, double** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 %85, i32 0, i32 1
  %101 = load double*, double** %100, align 8
  %102 = icmp eq double* %99, %101
  br i1 %102, label %120, label %103

103:                                              ; preds = %94
  %104 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %105 = load double*, double** %104, align 8
  br label %106

106:                                              ; preds = %116, %103
  %107 = phi double* [ %117, %116 ], [ %105, %103 ]
  %108 = phi double* [ %118, %116 ], [ %99, %103 ]
  %109 = icmp eq double* %107, %97
  br i1 %109, label %319, label %110

110:                                              ; preds = %106
  %111 = load double, double* %107, align 8
  %112 = load double, double* %108, align 8
  %113 = fcmp olt double %111, %112
  br i1 %113, label %319, label %114

114:                                              ; preds = %110
  %115 = fcmp olt double %112, %111
  br i1 %115, label %120, label %116

116:                                              ; preds = %114
  %117 = getelementptr inbounds double, double* %107, i64 1
  %118 = getelementptr inbounds double, double* %108, i64 1
  %119 = icmp eq double* %118, %101
  br i1 %119, label %120, label %106

120:                                              ; preds = %114, %116, %94
  %121 = icmp eq %"class.std::__1::vector"* %20, %9
  br i1 %121, label %122, label %277

122:                                              ; preds = %299, %120
  %123 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 1
  %124 = load double*, double** %10, align 8
  %125 = load double*, double** %11, align 8
  %126 = icmp eq double* %124, %125
  %127 = ptrtoint double* %124 to i64
  br i1 %126, label %145, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  %130 = load double*, double** %129, align 8
  br label %131

131:                                              ; preds = %141, %128
  %132 = phi double* [ %142, %141 ], [ %130, %128 ]
  %133 = phi double* [ %143, %141 ], [ %124, %128 ]
  %134 = icmp eq double* %132, %97
  br i1 %134, label %187, label %135

135:                                              ; preds = %131
  %136 = load double, double* %132, align 8
  %137 = load double, double* %133, align 8
  %138 = fcmp olt double %136, %137
  br i1 %138, label %187, label %139

139:                                              ; preds = %135
  %140 = fcmp olt double %137, %136
  br i1 %140, label %145, label %141

141:                                              ; preds = %139
  %142 = getelementptr inbounds double, double* %132, i64 1
  %143 = getelementptr inbounds double, double* %133, i64 1
  %144 = icmp eq double* %143, %125
  br i1 %144, label %145, label %131

145:                                              ; preds = %139, %141, %122
  %146 = icmp eq %"class.std::__1::vector"* %123, %8
  br i1 %146, label %478, label %147

147:                                              ; preds = %145
  %148 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  br label %149

149:                                              ; preds = %147, %184
  %150 = phi %"class.std::__1::vector"* [ %123, %147 ], [ %185, %184 ]
  %151 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %150, i64 0, i32 0, i32 0
  %152 = load double*, double** %151, align 8
  %153 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %150, i64 0, i32 0, i32 1
  %154 = load double*, double** %153, align 8
  %155 = icmp eq double* %152, %154
  br i1 %155, label %184, label %156

156:                                              ; preds = %149
  %157 = load double*, double** %148, align 8
  br label %158

158:                                              ; preds = %168, %156
  %159 = phi double* [ %169, %168 ], [ %157, %156 ]
  %160 = phi double* [ %170, %168 ], [ %152, %156 ]
  %161 = icmp eq double* %159, %97
  br i1 %161, label %172, label %162

162:                                              ; preds = %158
  %163 = load double, double* %159, align 8
  %164 = load double, double* %160, align 8
  %165 = fcmp olt double %163, %164
  br i1 %165, label %172, label %166

166:                                              ; preds = %162
  %167 = fcmp olt double %164, %163
  br i1 %167, label %184, label %168

168:                                              ; preds = %166
  %169 = getelementptr inbounds double, double* %159, i64 1
  %170 = getelementptr inbounds double, double* %160, i64 1
  %171 = icmp eq double* %170, %154
  br i1 %171, label %184, label %158

172:                                              ; preds = %162, %158
  %173 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %150, i64 0, i32 0, i32 1
  %174 = ptrtoint double* %152 to i64
  %175 = bitcast %"class.std::__1::vector"* %150 to i64*
  store i64 %127, i64* %175, align 8
  store i64 %174, i64* %12, align 8
  %176 = bitcast double** %173 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = load i64, i64* %13, align 8
  store i64 %178, i64* %176, align 8
  store i64 %177, i64* %13, align 8
  %179 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %150, i64 0, i32 0, i32 2, i32 0, i32 0
  %180 = bitcast double** %179 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = load i64, i64* %15, align 8
  store i64 %182, i64* %180, align 8
  store i64 %181, i64* %15, align 8
  %183 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %150, i64 1
  br label %187

184:                                              ; preds = %168, %166, %149
  %185 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %150, i64 1
  %186 = icmp eq %"class.std::__1::vector"* %185, %8
  br i1 %186, label %478, label %149

187:                                              ; preds = %135, %131, %172
  %188 = phi %"class.std::__1::vector"* [ %183, %172 ], [ %123, %131 ], [ %123, %135 ]
  %189 = icmp eq %"class.std::__1::vector"* %188, %8
  br i1 %189, label %478, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 0
  br label %192

192:                                              ; preds = %190, %262
  %193 = phi %"class.std::__1::vector"* [ %276, %262 ], [ %188, %190 ]
  %194 = phi %"class.std::__1::vector"* [ %259, %262 ], [ %8, %190 ]
  %195 = load double*, double** %96, align 8
  br label %196

196:                                              ; preds = %228, %192
  %197 = phi %"class.std::__1::vector"* [ %193, %192 ], [ %229, %228 ]
  %198 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %197, i64 0, i32 0, i32 0
  %199 = load double*, double** %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %197, i64 0, i32 0, i32 1
  %201 = load double*, double** %200, align 8
  %202 = icmp eq double* %199, %201
  br i1 %202, label %228, label %203

203:                                              ; preds = %196
  %204 = load double*, double** %191, align 8
  br label %205

205:                                              ; preds = %215, %203
  %206 = phi double* [ %216, %215 ], [ %204, %203 ]
  %207 = phi double* [ %217, %215 ], [ %199, %203 ]
  %208 = icmp eq double* %206, %195
  br i1 %208, label %219, label %209

209:                                              ; preds = %205
  %210 = load double, double* %206, align 8
  %211 = load double, double* %207, align 8
  %212 = fcmp olt double %210, %211
  br i1 %212, label %219, label %213

213:                                              ; preds = %209
  %214 = fcmp olt double %211, %210
  br i1 %214, label %228, label %215

215:                                              ; preds = %213
  %216 = getelementptr inbounds double, double* %206, i64 1
  %217 = getelementptr inbounds double, double* %207, i64 1
  %218 = icmp eq double* %217, %201
  br i1 %218, label %228, label %205

219:                                              ; preds = %205, %209
  %220 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %197, i64 0, i32 0, i32 1
  %221 = ptrtoint double* %199 to i64
  %222 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %194, i64 -1
  %223 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %222, i64 0, i32 0, i32 0
  %224 = load double*, double** %223, align 8
  %225 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %194, i64 -1, i32 0, i32 1
  %226 = load double*, double** %225, align 8
  %227 = icmp eq double* %224, %226
  br i1 %227, label %257, label %230

228:                                              ; preds = %215, %213, %196
  %229 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %197, i64 1
  br label %196

230:                                              ; preds = %219, %250
  %231 = phi double* [ %255, %250 ], [ %226, %219 ]
  %232 = phi double** [ %254, %250 ], [ %225, %219 ]
  %233 = phi double* [ %253, %250 ], [ %224, %219 ]
  %234 = phi %"class.std::__1::vector"* [ %251, %250 ], [ %222, %219 ]
  %235 = phi %"class.std::__1::vector"* [ %234, %250 ], [ %194, %219 ]
  br label %236

236:                                              ; preds = %246, %230
  %237 = phi double* [ %247, %246 ], [ %204, %230 ]
  %238 = phi double* [ %248, %246 ], [ %233, %230 ]
  %239 = icmp eq double* %237, %195
  br i1 %239, label %250, label %240

240:                                              ; preds = %236
  %241 = load double, double* %237, align 8
  %242 = load double, double* %238, align 8
  %243 = fcmp olt double %241, %242
  br i1 %243, label %250, label %244

244:                                              ; preds = %240
  %245 = fcmp olt double %242, %241
  br i1 %245, label %257, label %246

246:                                              ; preds = %244
  %247 = getelementptr inbounds double, double* %237, i64 1
  %248 = getelementptr inbounds double, double* %238, i64 1
  %249 = icmp eq double* %248, %231
  br i1 %249, label %257, label %236

250:                                              ; preds = %236, %240
  %251 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %234, i64 -1
  %252 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %251, i64 0, i32 0, i32 0
  %253 = load double*, double** %252, align 8
  %254 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %234, i64 -1, i32 0, i32 1
  %255 = load double*, double** %254, align 8
  %256 = icmp eq double* %253, %255
  br i1 %256, label %257, label %230

257:                                              ; preds = %250, %246, %244, %219
  %258 = phi %"class.std::__1::vector"* [ %194, %219 ], [ %235, %244 ], [ %235, %246 ], [ %234, %250 ]
  %259 = phi %"class.std::__1::vector"* [ %222, %219 ], [ %234, %244 ], [ %234, %246 ], [ %251, %250 ]
  %260 = phi double** [ %225, %219 ], [ %232, %244 ], [ %232, %246 ], [ %254, %250 ]
  %261 = icmp ult %"class.std::__1::vector"* %197, %259
  br i1 %261, label %262, label %19

262:                                              ; preds = %257
  %263 = bitcast %"class.std::__1::vector"* %197 to i64*
  %264 = bitcast %"class.std::__1::vector"* %259 to i64*
  %265 = load i64, i64* %264, align 8
  store i64 %265, i64* %263, align 8
  store i64 %221, i64* %264, align 8
  %266 = bitcast double** %220 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = bitcast double** %260 to i64*
  %269 = load i64, i64* %268, align 8
  store i64 %269, i64* %266, align 8
  store i64 %267, i64* %268, align 8
  %270 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %197, i64 0, i32 0, i32 2, i32 0, i32 0
  %271 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %258, i64 -1, i32 0, i32 2, i32 0, i32 0
  %272 = bitcast double** %270 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast double** %271 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %272, align 8
  store i64 %273, i64* %274, align 8
  %276 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %197, i64 1
  br label %192

277:                                              ; preds = %120, %299
  %278 = phi %"class.std::__1::vector"* [ %300, %299 ], [ %9, %120 ]
  %279 = phi %"class.std::__1::vector"* [ %278, %299 ], [ %8, %120 ]
  %280 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %279, i64 -1, i32 0, i32 1
  %281 = load double*, double** %280, align 8
  br i1 %102, label %299, label %282

282:                                              ; preds = %277
  %283 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %278, i64 0, i32 0, i32 0
  %284 = load double*, double** %283, align 8
  br label %285

285:                                              ; preds = %295, %282
  %286 = phi double* [ %296, %295 ], [ %284, %282 ]
  %287 = phi double* [ %297, %295 ], [ %99, %282 ]
  %288 = icmp eq double* %286, %281
  br i1 %288, label %302, label %289

289:                                              ; preds = %285
  %290 = load double, double* %286, align 8
  %291 = load double, double* %287, align 8
  %292 = fcmp olt double %290, %291
  br i1 %292, label %302, label %293

293:                                              ; preds = %289
  %294 = fcmp olt double %291, %290
  br i1 %294, label %299, label %295

295:                                              ; preds = %293
  %296 = getelementptr inbounds double, double* %286, i64 1
  %297 = getelementptr inbounds double, double* %287, i64 1
  %298 = icmp eq double* %297, %101
  br i1 %298, label %299, label %285

299:                                              ; preds = %293, %295, %277
  %300 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %278, i64 -1
  %301 = icmp eq %"class.std::__1::vector"* %20, %300
  br i1 %301, label %122, label %277

302:                                              ; preds = %285, %289
  %303 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %279, i64 -1, i32 0, i32 1
  %304 = ptrtoint double* %284 to i64
  %305 = bitcast %"class.std::__1::vector"* %20 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = bitcast %"class.std::__1::vector"* %278 to i64*
  store i64 %304, i64* %305, align 8
  store i64 %306, i64* %307, align 8
  %308 = bitcast double** %96 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast double** %303 to i64*
  %311 = load i64, i64* %310, align 8
  store i64 %311, i64* %308, align 8
  store i64 %309, i64* %310, align 8
  %312 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 0, i32 0, i32 2, i32 0, i32 0
  %313 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %279, i64 -1, i32 0, i32 2, i32 0, i32 0
  %314 = bitcast double** %312 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast double** %313 to i64*
  %317 = load i64, i64* %316, align 8
  store i64 %317, i64* %314, align 8
  store i64 %315, i64* %316, align 8
  %318 = add i32 %95, 1
  br label %319

319:                                              ; preds = %110, %106, %302
  %320 = phi i32 [ %318, %302 ], [ %95, %106 ], [ %95, %110 ]
  %321 = phi %"class.std::__1::vector"* [ %278, %302 ], [ %8, %106 ], [ %8, %110 ]
  %322 = ptrtoint %"class.std::__1::vector"* %20 to i64
  %323 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 1
  %324 = icmp ult %"class.std::__1::vector"* %323, %321
  br i1 %324, label %325, label %409

325:                                              ; preds = %319, %389
  %326 = phi %"class.std::__1::vector"* [ %407, %389 ], [ %86, %319 ]
  %327 = phi i32 [ %405, %389 ], [ %320, %319 ]
  %328 = phi %"class.std::__1::vector"* [ %408, %389 ], [ %323, %319 ]
  %329 = phi %"class.std::__1::vector"* [ %366, %389 ], [ %321, %319 ]
  %330 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %328, i64 0, i32 0, i32 1
  %331 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %326, i64 0, i32 0, i32 0
  %332 = load double*, double** %331, align 8
  %333 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %326, i64 0, i32 0, i32 1
  %334 = load double*, double** %333, align 8
  %335 = icmp eq double* %332, %334
  br i1 %335, label %356, label %336

336:                                              ; preds = %325, %361
  %337 = phi double** [ %363, %361 ], [ %330, %325 ]
  %338 = phi %"class.std::__1::vector"* [ %362, %361 ], [ %328, %325 ]
  %339 = load double*, double** %337, align 8
  %340 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %338, i64 0, i32 0, i32 0
  %341 = load double*, double** %340, align 8
  br label %342

342:                                              ; preds = %352, %336
  %343 = phi double* [ %353, %352 ], [ %341, %336 ]
  %344 = phi double* [ %354, %352 ], [ %332, %336 ]
  %345 = icmp eq double* %343, %339
  br i1 %345, label %361, label %346

346:                                              ; preds = %342
  %347 = load double, double* %343, align 8
  %348 = load double, double* %344, align 8
  %349 = fcmp olt double %347, %348
  br i1 %349, label %361, label %350

350:                                              ; preds = %346
  %351 = fcmp olt double %348, %347
  br i1 %351, label %356, label %352

352:                                              ; preds = %350
  %353 = getelementptr inbounds double, double* %343, i64 1
  %354 = getelementptr inbounds double, double* %344, i64 1
  %355 = icmp eq double* %354, %334
  br i1 %355, label %356, label %342

356:                                              ; preds = %350, %352, %325
  %357 = phi %"class.std::__1::vector"* [ %328, %325 ], [ %338, %352 ], [ %338, %350 ]
  %358 = phi double** [ %330, %325 ], [ %337, %352 ], [ %337, %350 ]
  %359 = phi double* [ %332, %325 ], [ %334, %352 ], [ %334, %350 ]
  %360 = phi i1 [ true, %325 ], [ false, %352 ], [ false, %350 ]
  br label %364

361:                                              ; preds = %342, %346
  %362 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %338, i64 1
  %363 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %338, i64 1, i32 0, i32 1
  br label %336

364:                                              ; preds = %369, %356
  %365 = phi %"class.std::__1::vector"* [ %329, %356 ], [ %366, %369 ]
  %366 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %365, i64 -1
  %367 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %365, i64 -1, i32 0, i32 1
  %368 = load double*, double** %367, align 8
  br i1 %360, label %369, label %370

369:                                              ; preds = %383, %381, %364
  br label %364

370:                                              ; preds = %364
  %371 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %366, i64 0, i32 0, i32 0
  %372 = load double*, double** %371, align 8
  br label %373

373:                                              ; preds = %383, %370
  %374 = phi double* [ %384, %383 ], [ %372, %370 ]
  %375 = phi double* [ %385, %383 ], [ %332, %370 ]
  %376 = icmp eq double* %374, %368
  br i1 %376, label %387, label %377

377:                                              ; preds = %373
  %378 = load double, double* %374, align 8
  %379 = load double, double* %375, align 8
  %380 = fcmp olt double %378, %379
  br i1 %380, label %387, label %381

381:                                              ; preds = %377
  %382 = fcmp olt double %379, %378
  br i1 %382, label %369, label %383

383:                                              ; preds = %381
  %384 = getelementptr inbounds double, double* %374, i64 1
  %385 = getelementptr inbounds double, double* %375, i64 1
  %386 = icmp eq double* %385, %359
  br i1 %386, label %369, label %373

387:                                              ; preds = %373, %377
  %388 = icmp ugt %"class.std::__1::vector"* %357, %366
  br i1 %388, label %409, label %389

389:                                              ; preds = %387
  %390 = ptrtoint double* %372 to i64
  %391 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %365, i64 -1, i32 0, i32 1
  %392 = bitcast %"class.std::__1::vector"* %357 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = bitcast %"class.std::__1::vector"* %366 to i64*
  store i64 %390, i64* %392, align 8
  store i64 %393, i64* %394, align 8
  %395 = bitcast double** %358 to i64*
  %396 = load i64, i64* %395, align 8
  %397 = bitcast double** %391 to i64*
  %398 = load i64, i64* %397, align 8
  store i64 %398, i64* %395, align 8
  store i64 %396, i64* %397, align 8
  %399 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %357, i64 0, i32 0, i32 2, i32 0, i32 0
  %400 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %365, i64 -1, i32 0, i32 2, i32 0, i32 0
  %401 = bitcast double** %399 to i64*
  %402 = load i64, i64* %401, align 8
  %403 = bitcast double** %400 to i64*
  %404 = load i64, i64* %403, align 8
  store i64 %404, i64* %401, align 8
  store i64 %402, i64* %403, align 8
  %405 = add i32 %327, 1
  %406 = icmp eq %"class.std::__1::vector"* %326, %357
  %407 = select i1 %406, %"class.std::__1::vector"* %366, %"class.std::__1::vector"* %326
  %408 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %357, i64 1
  br label %325

409:                                              ; preds = %387, %319
  %410 = phi %"class.std::__1::vector"* [ %86, %319 ], [ %326, %387 ]
  %411 = phi i32 [ %320, %319 ], [ %327, %387 ]
  %412 = phi %"class.std::__1::vector"* [ %323, %319 ], [ %357, %387 ]
  %413 = icmp eq %"class.std::__1::vector"* %412, %410
  br i1 %413, label %455, label %414

414:                                              ; preds = %409
  %415 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %410, i64 0, i32 0, i32 1
  %416 = load double*, double** %415, align 8
  %417 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %412, i64 0, i32 0, i32 0
  %418 = load double*, double** %417, align 8
  %419 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %412, i64 0, i32 0, i32 1
  %420 = load double*, double** %419, align 8
  %421 = icmp eq double* %418, %420
  %422 = ptrtoint double* %418 to i64
  br i1 %421, label %455, label %423

423:                                              ; preds = %414
  %424 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %410, i64 0, i32 0, i32 0
  %425 = load double*, double** %424, align 8
  %426 = ptrtoint double* %425 to i64
  br label %427

427:                                              ; preds = %437, %423
  %428 = phi double* [ %438, %437 ], [ %425, %423 ]
  %429 = phi double* [ %439, %437 ], [ %418, %423 ]
  %430 = icmp eq double* %428, %416
  br i1 %430, label %441, label %431

431:                                              ; preds = %427
  %432 = load double, double* %428, align 8
  %433 = load double, double* %429, align 8
  %434 = fcmp olt double %432, %433
  br i1 %434, label %441, label %435

435:                                              ; preds = %431
  %436 = fcmp olt double %433, %432
  br i1 %436, label %455, label %437

437:                                              ; preds = %435
  %438 = getelementptr inbounds double, double* %428, i64 1
  %439 = getelementptr inbounds double, double* %429, i64 1
  %440 = icmp eq double* %439, %420
  br i1 %440, label %455, label %427

441:                                              ; preds = %431, %427
  %442 = bitcast %"class.std::__1::vector"* %412 to i64*
  %443 = bitcast %"class.std::__1::vector"* %410 to i64*
  store i64 %426, i64* %442, align 8
  store i64 %422, i64* %443, align 8
  %444 = bitcast double** %419 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast double** %415 to i64*
  %447 = load i64, i64* %446, align 8
  store i64 %447, i64* %444, align 8
  store i64 %445, i64* %446, align 8
  %448 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %412, i64 0, i32 0, i32 2, i32 0, i32 0
  %449 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %410, i64 0, i32 0, i32 2, i32 0, i32 0
  %450 = bitcast double** %448 to i64*
  %451 = load i64, i64* %450, align 8
  %452 = bitcast double** %449 to i64*
  %453 = load i64, i64* %452, align 8
  store i64 %453, i64* %450, align 8
  store i64 %451, i64* %452, align 8
  %454 = add i32 %411, 1
  br label %455

455:                                              ; preds = %435, %437, %414, %409, %441
  %456 = phi i32 [ %454, %441 ], [ %411, %409 ], [ %411, %414 ], [ %411, %437 ], [ %411, %435 ]
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %465

458:                                              ; preds = %455
  %459 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEbT0_S9_T_(%"class.std::__1::vector"* %20, %"class.std::__1::vector"* %412, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  %460 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %412, i64 1
  %461 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEbT0_S9_T_(%"class.std::__1::vector"* %460, %"class.std::__1::vector"* %5, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  br i1 %461, label %462, label %464

462:                                              ; preds = %458
  br i1 %459, label %478, label %463

463:                                              ; preds = %462, %476
  br label %4

464:                                              ; preds = %458
  br i1 %459, label %474, label %465

465:                                              ; preds = %464, %455
  %466 = ptrtoint %"class.std::__1::vector"* %412 to i64
  %467 = sub i64 %466, %322
  %468 = sdiv exact i64 %467, 24
  %469 = sub i64 %16, %466
  %470 = sdiv exact i64 %469, 24
  %471 = icmp slt i64 %468, %470
  br i1 %471, label %472, label %476

472:                                              ; preds = %465
  tail call void @_ZNSt3__16__sortIRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEvT0_S9_T_(%"class.std::__1::vector"* %20, %"class.std::__1::vector"* %412, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  %473 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %412, i64 1
  br label %474

474:                                              ; preds = %472, %464
  %475 = phi %"class.std::__1::vector"* [ %460, %464 ], [ %473, %472 ]
  br label %17

476:                                              ; preds = %465
  %477 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %412, i64 1
  tail call void @_ZNSt3__16__sortIRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEvT0_S9_T_(%"class.std::__1::vector"* %477, %"class.std::__1::vector"* %5, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  br label %463

478:                                              ; preds = %462, %187, %19, %19, %145, %184, %46, %48, %24, %52, %65, %69, %74, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort3IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_T_(%"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"struct.std::__1::__less.12"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %6 = load double*, double** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %8 = load double*, double** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %10 = load double*, double** %9, align 8
  %11 = icmp eq double* %8, %10
  %12 = ptrtoint double* %8 to i64
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %14 = load double*, double** %13, align 8
  %15 = ptrtoint double* %14 to i64
  br i1 %11, label %30, label %16

16:                                               ; preds = %4, %26
  %17 = phi double* [ %27, %26 ], [ %14, %4 ]
  %18 = phi double* [ %28, %26 ], [ %8, %4 ]
  %19 = icmp eq double* %17, %6
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = load double, double* %17, align 8
  %22 = load double, double* %18, align 8
  %23 = fcmp olt double %21, %22
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = fcmp olt double %22, %21
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds double, double* %17, i64 1
  %28 = getelementptr inbounds double, double* %18, i64 1
  %29 = icmp eq double* %28, %10
  br i1 %29, label %30, label %16

30:                                               ; preds = %16, %20, %24, %26, %4
  %31 = phi i1 [ false, %4 ], [ true, %20 ], [ true, %16 ], [ false, %24 ], [ false, %26 ]
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %33 = load double*, double** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %35 = icmp eq double* %14, %6
  br i1 %35, label %53, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %38 = load double*, double** %37, align 8
  br label %39

39:                                               ; preds = %49, %36
  %40 = phi double* [ %50, %49 ], [ %38, %36 ]
  %41 = phi double* [ %51, %49 ], [ %14, %36 ]
  %42 = icmp eq double* %40, %33
  br i1 %42, label %53, label %43

43:                                               ; preds = %39
  %44 = load double, double* %40, align 8
  %45 = load double, double* %41, align 8
  %46 = fcmp olt double %44, %45
  br i1 %46, label %53, label %47

47:                                               ; preds = %43
  %48 = fcmp olt double %45, %44
  br i1 %48, label %53, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds double, double* %40, i64 1
  %51 = getelementptr inbounds double, double* %41, i64 1
  %52 = icmp eq double* %51, %6
  br i1 %52, label %53, label %39

53:                                               ; preds = %39, %43, %47, %49, %30
  %54 = phi i1 [ false, %30 ], [ true, %43 ], [ true, %39 ], [ false, %47 ], [ false, %49 ]
  br i1 %31, label %101, label %55

55:                                               ; preds = %53
  br i1 %54, label %56, label %160

56:                                               ; preds = %55
  %57 = bitcast %"class.std::__1::vector"* %1 to i64*
  %58 = bitcast %"class.std::__1::vector"* %2 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %57, align 8
  store i64 %15, i64* %58, align 8
  %60 = bitcast double** %5 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast double** %32 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %60, align 8
  store i64 %61, i64* %62, align 8
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast double** %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast double** %65 to i64*
  %69 = load i64, i64* %68, align 8
  store i64 %69, i64* %66, align 8
  store i64 %67, i64* %68, align 8
  %70 = load double*, double** %5, align 8
  %71 = load double*, double** %7, align 8
  %72 = load double*, double** %9, align 8
  %73 = icmp eq double* %71, %72
  %74 = ptrtoint double* %71 to i64
  br i1 %73, label %160, label %75

75:                                               ; preds = %56
  %76 = load double*, double** %34, align 8
  %77 = ptrtoint double* %76 to i64
  br label %78

78:                                               ; preds = %88, %75
  %79 = phi double* [ %89, %88 ], [ %76, %75 ]
  %80 = phi double* [ %90, %88 ], [ %71, %75 ]
  %81 = icmp eq double* %79, %70
  br i1 %81, label %92, label %82

82:                                               ; preds = %78
  %83 = load double, double* %79, align 8
  %84 = load double, double* %80, align 8
  %85 = fcmp olt double %83, %84
  br i1 %85, label %92, label %86

86:                                               ; preds = %82
  %87 = fcmp olt double %84, %83
  br i1 %87, label %160, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds double, double* %79, i64 1
  %90 = getelementptr inbounds double, double* %80, i64 1
  %91 = icmp eq double* %90, %72
  br i1 %91, label %160, label %78

92:                                               ; preds = %82, %78
  %93 = bitcast %"class.std::__1::vector"* %0 to i64*
  store i64 %77, i64* %93, align 8
  store i64 %74, i64* %57, align 8
  %94 = bitcast double** %9 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = load i64, i64* %60, align 8
  store i64 %96, i64* %94, align 8
  store i64 %95, i64* %60, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %98 = bitcast double** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = load i64, i64* %66, align 8
  store i64 %100, i64* %98, align 8
  store i64 %99, i64* %66, align 8
  br label %160

101:                                              ; preds = %53
  %102 = bitcast %"class.std::__1::vector"* %0 to i64*
  br i1 %54, label %103, label %116

103:                                              ; preds = %101
  %104 = bitcast %"class.std::__1::vector"* %2 to i64*
  %105 = load i64, i64* %104, align 8
  store i64 %105, i64* %102, align 8
  store i64 %12, i64* %104, align 8
  %106 = bitcast double** %9 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast double** %32 to i64*
  %109 = load i64, i64* %108, align 8
  store i64 %109, i64* %106, align 8
  store i64 %107, i64* %108, align 8
  %110 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %111 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %112 = bitcast double** %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast double** %111 to i64*
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %112, align 8
  store i64 %113, i64* %114, align 8
  br label %160

116:                                              ; preds = %101
  %117 = bitcast %"class.std::__1::vector"* %1 to i64*
  store i64 %15, i64* %102, align 8
  store i64 %12, i64* %117, align 8
  %118 = bitcast double** %9 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast double** %5 to i64*
  %121 = load i64, i64* %120, align 8
  store i64 %121, i64* %118, align 8
  store i64 %119, i64* %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %123 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %124 = bitcast double** %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast double** %123 to i64*
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %124, align 8
  store i64 %125, i64* %126, align 8
  %128 = load double*, double** %32, align 8
  %129 = load double*, double** %34, align 8
  %130 = load double*, double** %5, align 8
  %131 = icmp eq double* %129, %130
  %132 = ptrtoint double* %129 to i64
  br i1 %131, label %160, label %133

133:                                              ; preds = %116
  %134 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %135 = load double*, double** %134, align 8
  %136 = ptrtoint double* %135 to i64
  br label %137

137:                                              ; preds = %147, %133
  %138 = phi double* [ %148, %147 ], [ %135, %133 ]
  %139 = phi double* [ %149, %147 ], [ %129, %133 ]
  %140 = icmp eq double* %138, %128
  br i1 %140, label %151, label %141

141:                                              ; preds = %137
  %142 = load double, double* %138, align 8
  %143 = load double, double* %139, align 8
  %144 = fcmp olt double %142, %143
  br i1 %144, label %151, label %145

145:                                              ; preds = %141
  %146 = fcmp olt double %143, %142
  br i1 %146, label %160, label %147

147:                                              ; preds = %145
  %148 = getelementptr inbounds double, double* %138, i64 1
  %149 = getelementptr inbounds double, double* %139, i64 1
  %150 = icmp eq double* %149, %130
  br i1 %150, label %160, label %137

151:                                              ; preds = %141, %137
  %152 = bitcast %"class.std::__1::vector"* %2 to i64*
  store i64 %136, i64* %117, align 8
  store i64 %132, i64* %152, align 8
  %153 = load i64, i64* %120, align 8
  %154 = bitcast double** %32 to i64*
  %155 = load i64, i64* %154, align 8
  store i64 %155, i64* %120, align 8
  store i64 %153, i64* %154, align 8
  %156 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %157 = load i64, i64* %126, align 8
  %158 = bitcast double** %156 to i64*
  %159 = load i64, i64* %158, align 8
  store i64 %159, i64* %126, align 8
  store i64 %157, i64* %158, align 8
  br label %160

160:                                              ; preds = %86, %88, %145, %147, %116, %56, %151, %92, %55, %103
  %161 = phi i32 [ 1, %103 ], [ 0, %55 ], [ 2, %92 ], [ 2, %151 ], [ 1, %56 ], [ 1, %116 ], [ 1, %147 ], [ 1, %145 ], [ 1, %88 ], [ 1, %86 ]
  ret i32 %161
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_S9_T_(%"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"struct.std::__1::__less.12"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_T_(%"class.std::__1::vector"* %0, %"class.std::__1::vector"* %1, %"class.std::__1::vector"* %2, %"struct.std::__1::__less.12"* dereferenceable(1) %4)
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %8 = load double*, double** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %10 = load double*, double** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %12 = load double*, double** %11, align 8
  %13 = icmp eq double* %10, %12
  %14 = ptrtoint double* %10 to i64
  br i1 %13, label %115, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %17 = load double*, double** %16, align 8
  %18 = ptrtoint double* %17 to i64
  br label %19

19:                                               ; preds = %29, %15
  %20 = phi double* [ %30, %29 ], [ %17, %15 ]
  %21 = phi double* [ %31, %29 ], [ %10, %15 ]
  %22 = icmp eq double* %20, %8
  br i1 %22, label %33, label %23

23:                                               ; preds = %19
  %24 = load double, double* %20, align 8
  %25 = load double, double* %21, align 8
  %26 = fcmp olt double %24, %25
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  %28 = fcmp olt double %25, %24
  br i1 %28, label %115, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds double, double* %20, i64 1
  %31 = getelementptr inbounds double, double* %21, i64 1
  %32 = icmp eq double* %31, %12
  br i1 %32, label %115, label %19

33:                                               ; preds = %23, %19
  %34 = bitcast %"class.std::__1::vector"* %2 to i64*
  %35 = bitcast %"class.std::__1::vector"* %3 to i64*
  store i64 %18, i64* %34, align 8
  store i64 %14, i64* %35, align 8
  %36 = bitcast double** %11 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast double** %7 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %36, align 8
  store i64 %37, i64* %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast double** %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast double** %41 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  store i64 %43, i64* %44, align 8
  %46 = add i32 %6, 1
  %47 = load double*, double** %11, align 8
  %48 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %49 = load double*, double** %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %51 = load double*, double** %50, align 8
  %52 = icmp eq double* %49, %51
  %53 = ptrtoint double* %49 to i64
  br i1 %52, label %115, label %54

54:                                               ; preds = %33
  %55 = load double*, double** %9, align 8
  %56 = ptrtoint double* %55 to i64
  br label %57

57:                                               ; preds = %67, %54
  %58 = phi double* [ %68, %67 ], [ %55, %54 ]
  %59 = phi double* [ %69, %67 ], [ %49, %54 ]
  %60 = icmp eq double* %58, %47
  br i1 %60, label %71, label %61

61:                                               ; preds = %57
  %62 = load double, double* %58, align 8
  %63 = load double, double* %59, align 8
  %64 = fcmp olt double %62, %63
  br i1 %64, label %71, label %65

65:                                               ; preds = %61
  %66 = fcmp olt double %63, %62
  br i1 %66, label %115, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds double, double* %58, i64 1
  %69 = getelementptr inbounds double, double* %59, i64 1
  %70 = icmp eq double* %69, %51
  br i1 %70, label %115, label %57

71:                                               ; preds = %61, %57
  %72 = bitcast %"class.std::__1::vector"* %1 to i64*
  store i64 %56, i64* %72, align 8
  store i64 %53, i64* %34, align 8
  %73 = bitcast double** %50 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = load i64, i64* %36, align 8
  store i64 %75, i64* %73, align 8
  store i64 %74, i64* %36, align 8
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %77 = bitcast double** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = load i64, i64* %42, align 8
  store i64 %79, i64* %77, align 8
  store i64 %78, i64* %42, align 8
  %80 = add i32 %6, 2
  %81 = load double*, double** %50, align 8
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %83 = load double*, double** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %85 = load double*, double** %84, align 8
  %86 = icmp eq double* %83, %85
  %87 = ptrtoint double* %83 to i64
  br i1 %86, label %115, label %88

88:                                               ; preds = %71
  %89 = load double*, double** %48, align 8
  %90 = ptrtoint double* %89 to i64
  br label %91

91:                                               ; preds = %101, %88
  %92 = phi double* [ %102, %101 ], [ %89, %88 ]
  %93 = phi double* [ %103, %101 ], [ %83, %88 ]
  %94 = icmp eq double* %92, %81
  br i1 %94, label %105, label %95

95:                                               ; preds = %91
  %96 = load double, double* %92, align 8
  %97 = load double, double* %93, align 8
  %98 = fcmp olt double %96, %97
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = fcmp olt double %97, %96
  br i1 %100, label %115, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds double, double* %92, i64 1
  %103 = getelementptr inbounds double, double* %93, i64 1
  %104 = icmp eq double* %103, %85
  br i1 %104, label %115, label %91

105:                                              ; preds = %95, %91
  %106 = bitcast %"class.std::__1::vector"* %0 to i64*
  store i64 %90, i64* %106, align 8
  store i64 %87, i64* %72, align 8
  %107 = bitcast double** %84 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = load i64, i64* %73, align 8
  store i64 %109, i64* %107, align 8
  store i64 %108, i64* %73, align 8
  %110 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast double** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = load i64, i64* %77, align 8
  store i64 %113, i64* %111, align 8
  store i64 %112, i64* %77, align 8
  %114 = add i32 %6, 3
  br label %115

115:                                              ; preds = %27, %29, %65, %67, %99, %101, %71, %33, %5, %105
  %116 = phi i32 [ %114, %105 ], [ %6, %5 ], [ %46, %33 ], [ %80, %71 ], [ %80, %101 ], [ %80, %99 ], [ %46, %67 ], [ %46, %65 ], [ %6, %29 ], [ %6, %27 ]
  ret i32 %116
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_(%"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"struct.std::__1::__less.12"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_S9_T_(%"class.std::__1::vector"* %0, %"class.std::__1::vector"* %1, %"class.std::__1::vector"* %2, %"class.std::__1::vector"* %3, %"struct.std::__1::__less.12"* dereferenceable(1) %5)
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %9 = load double*, double** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %11 = load double*, double** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %13 = load double*, double** %12, align 8
  %14 = icmp eq double* %11, %13
  %15 = ptrtoint double* %11 to i64
  br i1 %14, label %150, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %18 = load double*, double** %17, align 8
  %19 = ptrtoint double* %18 to i64
  br label %20

20:                                               ; preds = %30, %16
  %21 = phi double* [ %31, %30 ], [ %18, %16 ]
  %22 = phi double* [ %32, %30 ], [ %11, %16 ]
  %23 = icmp eq double* %21, %9
  br i1 %23, label %34, label %24

24:                                               ; preds = %20
  %25 = load double, double* %21, align 8
  %26 = load double, double* %22, align 8
  %27 = fcmp olt double %25, %26
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = fcmp olt double %26, %25
  br i1 %29, label %150, label %30

30:                                               ; preds = %28
  %31 = getelementptr inbounds double, double* %21, i64 1
  %32 = getelementptr inbounds double, double* %22, i64 1
  %33 = icmp eq double* %32, %13
  br i1 %33, label %150, label %20

34:                                               ; preds = %24, %20
  %35 = bitcast %"class.std::__1::vector"* %3 to i64*
  %36 = bitcast %"class.std::__1::vector"* %4 to i64*
  store i64 %19, i64* %35, align 8
  store i64 %15, i64* %36, align 8
  %37 = bitcast double** %12 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast double** %8 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %37, align 8
  store i64 %38, i64* %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast double** %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast double** %42 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %43, align 8
  store i64 %44, i64* %45, align 8
  %47 = add i32 %7, 1
  %48 = load double*, double** %12, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %50 = load double*, double** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %50, %52
  %54 = ptrtoint double* %50 to i64
  br i1 %53, label %150, label %55

55:                                               ; preds = %34
  %56 = load double*, double** %10, align 8
  %57 = ptrtoint double* %56 to i64
  br label %58

58:                                               ; preds = %68, %55
  %59 = phi double* [ %69, %68 ], [ %56, %55 ]
  %60 = phi double* [ %70, %68 ], [ %50, %55 ]
  %61 = icmp eq double* %59, %48
  br i1 %61, label %72, label %62

62:                                               ; preds = %58
  %63 = load double, double* %59, align 8
  %64 = load double, double* %60, align 8
  %65 = fcmp olt double %63, %64
  br i1 %65, label %72, label %66

66:                                               ; preds = %62
  %67 = fcmp olt double %64, %63
  br i1 %67, label %150, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds double, double* %59, i64 1
  %70 = getelementptr inbounds double, double* %60, i64 1
  %71 = icmp eq double* %70, %52
  br i1 %71, label %150, label %58

72:                                               ; preds = %62, %58
  %73 = bitcast %"class.std::__1::vector"* %2 to i64*
  store i64 %57, i64* %73, align 8
  store i64 %54, i64* %35, align 8
  %74 = bitcast double** %51 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = load i64, i64* %37, align 8
  store i64 %76, i64* %74, align 8
  store i64 %75, i64* %37, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast double** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = load i64, i64* %43, align 8
  store i64 %80, i64* %78, align 8
  store i64 %79, i64* %43, align 8
  %81 = add i32 %7, 2
  %82 = load double*, double** %51, align 8
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %84 = load double*, double** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %86 = load double*, double** %85, align 8
  %87 = icmp eq double* %84, %86
  %88 = ptrtoint double* %84 to i64
  br i1 %87, label %150, label %89

89:                                               ; preds = %72
  %90 = load double*, double** %49, align 8
  %91 = ptrtoint double* %90 to i64
  br label %92

92:                                               ; preds = %102, %89
  %93 = phi double* [ %103, %102 ], [ %90, %89 ]
  %94 = phi double* [ %104, %102 ], [ %84, %89 ]
  %95 = icmp eq double* %93, %82
  br i1 %95, label %106, label %96

96:                                               ; preds = %92
  %97 = load double, double* %93, align 8
  %98 = load double, double* %94, align 8
  %99 = fcmp olt double %97, %98
  br i1 %99, label %106, label %100

100:                                              ; preds = %96
  %101 = fcmp olt double %98, %97
  br i1 %101, label %150, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds double, double* %93, i64 1
  %104 = getelementptr inbounds double, double* %94, i64 1
  %105 = icmp eq double* %104, %86
  br i1 %105, label %150, label %92

106:                                              ; preds = %96, %92
  %107 = bitcast %"class.std::__1::vector"* %1 to i64*
  store i64 %91, i64* %107, align 8
  store i64 %88, i64* %73, align 8
  %108 = bitcast double** %85 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = load i64, i64* %74, align 8
  store i64 %110, i64* %108, align 8
  store i64 %109, i64* %74, align 8
  %111 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %112 = bitcast double** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = load i64, i64* %78, align 8
  store i64 %114, i64* %112, align 8
  store i64 %113, i64* %78, align 8
  %115 = add i32 %7, 3
  %116 = load double*, double** %85, align 8
  %117 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %118 = load double*, double** %117, align 8
  %119 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %120 = load double*, double** %119, align 8
  %121 = icmp eq double* %118, %120
  %122 = ptrtoint double* %118 to i64
  br i1 %121, label %150, label %123

123:                                              ; preds = %106
  %124 = load double*, double** %83, align 8
  %125 = ptrtoint double* %124 to i64
  br label %126

126:                                              ; preds = %136, %123
  %127 = phi double* [ %137, %136 ], [ %124, %123 ]
  %128 = phi double* [ %138, %136 ], [ %118, %123 ]
  %129 = icmp eq double* %127, %116
  br i1 %129, label %140, label %130

130:                                              ; preds = %126
  %131 = load double, double* %127, align 8
  %132 = load double, double* %128, align 8
  %133 = fcmp olt double %131, %132
  br i1 %133, label %140, label %134

134:                                              ; preds = %130
  %135 = fcmp olt double %132, %131
  br i1 %135, label %150, label %136

136:                                              ; preds = %134
  %137 = getelementptr inbounds double, double* %127, i64 1
  %138 = getelementptr inbounds double, double* %128, i64 1
  %139 = icmp eq double* %138, %120
  br i1 %139, label %150, label %126

140:                                              ; preds = %130, %126
  %141 = bitcast %"class.std::__1::vector"* %0 to i64*
  store i64 %125, i64* %141, align 8
  store i64 %122, i64* %107, align 8
  %142 = bitcast double** %119 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = load i64, i64* %108, align 8
  store i64 %144, i64* %142, align 8
  store i64 %143, i64* %108, align 8
  %145 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %146 = bitcast double** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = load i64, i64* %112, align 8
  store i64 %148, i64* %146, align 8
  store i64 %147, i64* %112, align 8
  %149 = add i32 %7, 4
  br label %150

150:                                              ; preds = %28, %30, %66, %68, %100, %102, %134, %136, %106, %72, %34, %6, %140
  %151 = phi i32 [ %149, %140 ], [ %7, %6 ], [ %47, %34 ], [ %81, %72 ], [ %115, %106 ], [ %115, %136 ], [ %115, %134 ], [ %81, %102 ], [ %81, %100 ], [ %47, %68 ], [ %47, %66 ], [ %7, %30 ], [ %7, %28 ]
  ret i32 %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEvT0_S9_T_(%"class.std::__1::vector"*, %"class.std::__1::vector"*, %"struct.std::__1::__less.12"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 2
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 1
  %6 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_T_(%"class.std::__1::vector"* %0, %"class.std::__1::vector"* %5, %"class.std::__1::vector"* %4, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 3
  %8 = icmp eq %"class.std::__1::vector"* %7, %1
  br i1 %8, label %9, label %10

9:                                                ; preds = %117, %3
  ret void

10:                                               ; preds = %3, %117
  %11 = phi %"class.std::__1::vector"* [ %118, %117 ], [ %7, %3 ]
  %12 = phi %"class.std::__1::vector"* [ %11, %117 ], [ %4, %3 ]
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %14 = load double*, double** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %16 = load double*, double** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %18 = load double*, double** %17, align 8
  %19 = icmp eq double* %16, %18
  %20 = ptrtoint double* %14 to i64
  br i1 %19, label %117, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %23 = load double*, double** %22, align 8
  %24 = ptrtoint double* %23 to i64
  br label %25

25:                                               ; preds = %35, %21
  %26 = phi double* [ %36, %35 ], [ %23, %21 ]
  %27 = phi double* [ %37, %35 ], [ %16, %21 ]
  %28 = icmp eq double* %26, %14
  br i1 %28, label %39, label %29

29:                                               ; preds = %25
  %30 = load double, double* %26, align 8
  %31 = load double, double* %27, align 8
  %32 = fcmp olt double %30, %31
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = fcmp olt double %31, %30
  br i1 %34, label %117, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds double, double* %26, i64 1
  %37 = getelementptr inbounds double, double* %27, i64 1
  %38 = icmp eq double* %37, %18
  br i1 %38, label %117, label %25

39:                                               ; preds = %29, %25
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast double** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 24, i1 false) #7
  %44 = bitcast %"class.std::__1::vector"* %12 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.std::__1::vector"* %11 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %48 = bitcast double** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %51 = bitcast double** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %53 = bitcast double** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast double** %55 to i64*
  store i64 %54, i64* %56, align 8
  %57 = bitcast %"class.std::__1::vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #7
  %58 = icmp eq %"class.std::__1::vector"* %12, %0
  br i1 %58, label %95, label %59

59:                                               ; preds = %39, %83
  %60 = phi double** [ %88, %83 ], [ %52, %39 ]
  %61 = phi double** [ %84, %83 ], [ %47, %39 ]
  %62 = phi %"class.std::__1::vector"* [ %63, %83 ], [ %12, %39 ]
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %62, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %63, i64 0, i32 0, i32 0
  %65 = load double*, double** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %62, i64 -1, i32 0, i32 1
  %67 = load double*, double** %66, align 8
  %68 = icmp eq double* %65, %67
  br i1 %68, label %95, label %69

69:                                               ; preds = %59, %79
  %70 = phi double* [ %80, %79 ], [ %23, %59 ]
  %71 = phi double* [ %81, %79 ], [ %65, %59 ]
  %72 = icmp eq double* %70, %14
  br i1 %72, label %83, label %73

73:                                               ; preds = %69
  %74 = load double, double* %70, align 8
  %75 = load double, double* %71, align 8
  %76 = fcmp olt double %74, %75
  br i1 %76, label %83, label %77

77:                                               ; preds = %73
  %78 = fcmp olt double %75, %74
  br i1 %78, label %109, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds double, double* %70, i64 1
  %81 = getelementptr inbounds double, double* %71, i64 1
  %82 = icmp eq double* %81, %67
  br i1 %82, label %109, label %69

83:                                               ; preds = %69, %73
  %84 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %62, i64 -1, i32 0, i32 1
  %85 = bitcast %"class.std::__1::vector"* %63 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8
  %87 = bitcast %"class.std::__1::vector"* %62 to <2 x i64>*
  store <2 x i64> %86, <2 x i64>* %87, align 8
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %62, i64 -1, i32 0, i32 2, i32 0, i32 0
  %89 = bitcast double** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %62, i64 0, i32 0, i32 2, i32 0, i32 0
  %92 = bitcast double** %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = bitcast %"class.std::__1::vector"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #7
  %94 = icmp eq %"class.std::__1::vector"* %63, %0
  br i1 %94, label %95, label %59

95:                                               ; preds = %83, %59, %39
  %96 = phi double** [ %47, %39 ], [ %84, %83 ], [ %61, %59 ]
  %97 = phi double** [ %52, %39 ], [ %88, %83 ], [ %60, %59 ]
  %98 = phi %"class.std::__1::vector"* [ %0, %39 ], [ %0, %83 ], [ %62, %59 ]
  %99 = bitcast double** %96 to i64*
  %100 = bitcast double** %97 to i64*
  %101 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %98, i64 0, i32 0, i32 0
  %102 = load double*, double** %101, align 8
  %103 = bitcast %"class.std::__1::vector"* %98 to i64*
  %104 = icmp eq double* %102, null
  br i1 %104, label %113, label %105

105:                                              ; preds = %95
  %106 = bitcast double* %102 to i8*
  %107 = bitcast %"class.std::__1::vector"* %98 to i8*
  %108 = ptrtoint double* %102 to i64
  store i64 %108, i64* %99, align 8
  tail call void @_ZdlPv(i8* %106) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 24, i1 false) #7
  br label %113

109:                                              ; preds = %79, %77
  %110 = bitcast %"class.std::__1::vector"* %62 to i64*
  %111 = bitcast double** %61 to i64*
  %112 = bitcast double** %60 to i64*
  br label %113

113:                                              ; preds = %109, %105, %95
  %114 = phi i64* [ %99, %105 ], [ %99, %95 ], [ %111, %109 ]
  %115 = phi i64* [ %100, %105 ], [ %100, %95 ], [ %112, %109 ]
  %116 = phi i64* [ %103, %105 ], [ %103, %95 ], [ %110, %109 ]
  store i64 %24, i64* %116, align 8
  store i64 %20, i64* %114, align 8
  store i64 %42, i64* %115, align 8
  br label %117

117:                                              ; preds = %33, %35, %10, %113
  %118 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 1
  %119 = icmp eq %"class.std::__1::vector"* %118, %1
  br i1 %119, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEbT0_S9_T_(%"class.std::__1::vector"*, %"class.std::__1::vector"*, %"struct.std::__1::__less.12"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"class.std::__1::vector"* %1 to i64
  %5 = ptrtoint %"class.std::__1::vector"* %0 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  switch i64 %7, label %64 [
    i64 0, label %187
    i64 1, label %187
    i64 2, label %8
    i64 3, label %49
    i64 4, label %53
    i64 5, label %58
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 -1, i32 0, i32 1
  %11 = load double*, double** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %13 = load double*, double** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %15 = load double*, double** %14, align 8
  %16 = icmp eq double* %13, %15
  %17 = ptrtoint double* %13 to i64
  br i1 %16, label %187, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %20 = load double*, double** %19, align 8
  %21 = ptrtoint double* %20 to i64
  br label %22

22:                                               ; preds = %32, %18
  %23 = phi double* [ %33, %32 ], [ %20, %18 ]
  %24 = phi double* [ %34, %32 ], [ %13, %18 ]
  %25 = icmp eq double* %23, %11
  br i1 %25, label %36, label %26

26:                                               ; preds = %22
  %27 = load double, double* %23, align 8
  %28 = load double, double* %24, align 8
  %29 = fcmp olt double %27, %28
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = fcmp olt double %28, %27
  br i1 %31, label %187, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds double, double* %23, i64 1
  %34 = getelementptr inbounds double, double* %24, i64 1
  %35 = icmp eq double* %34, %15
  br i1 %35, label %187, label %22

36:                                               ; preds = %26, %22
  %37 = bitcast %"class.std::__1::vector"* %0 to i64*
  %38 = bitcast %"class.std::__1::vector"* %9 to i64*
  store i64 %21, i64* %37, align 8
  store i64 %17, i64* %38, align 8
  %39 = bitcast double** %14 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast double** %10 to i64*
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %39, align 8
  store i64 %40, i64* %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 -1, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast double** %43 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast double** %44 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %45, align 8
  store i64 %46, i64* %47, align 8
  br label %187

49:                                               ; preds = %3
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 1
  %51 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 -1
  %52 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_T_(%"class.std::__1::vector"* %0, %"class.std::__1::vector"* %50, %"class.std::__1::vector"* %51, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  br label %187

53:                                               ; preds = %3
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 1
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 2
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 -1
  %57 = tail call i32 @_ZNSt3__17__sort4IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_S9_T_(%"class.std::__1::vector"* %0, %"class.std::__1::vector"* %54, %"class.std::__1::vector"* %55, %"class.std::__1::vector"* %56, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  br label %187

58:                                               ; preds = %3
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 1
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 2
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 3
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 -1
  %63 = tail call i32 @_ZNSt3__17__sort5IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_S9_S9_T_(%"class.std::__1::vector"* %0, %"class.std::__1::vector"* %59, %"class.std::__1::vector"* %60, %"class.std::__1::vector"* %61, %"class.std::__1::vector"* %62, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  br label %187

64:                                               ; preds = %3
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 2
  %66 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 1
  %67 = tail call i32 @_ZNSt3__17__sort3IRNS_6__lessINS_6vectorIdNS_9allocatorIdEEEES5_EEPS5_EEjT0_S9_S9_T_(%"class.std::__1::vector"* %0, %"class.std::__1::vector"* %66, %"class.std::__1::vector"* %65, %"struct.std::__1::__less.12"* dereferenceable(1) %2)
  %68 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 3
  %69 = icmp eq %"class.std::__1::vector"* %68, %1
  br i1 %69, label %187, label %70

70:                                               ; preds = %64, %180
  %71 = phi %"class.std::__1::vector"* [ %182, %180 ], [ %68, %64 ]
  %72 = phi i32 [ %181, %180 ], [ 0, %64 ]
  %73 = phi %"class.std::__1::vector"* [ %71, %180 ], [ %65, %64 ]
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %71, i64 0, i32 0, i32 1
  %75 = load double*, double** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %73, i64 0, i32 0, i32 0
  %77 = load double*, double** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %73, i64 0, i32 0, i32 1
  %79 = load double*, double** %78, align 8
  %80 = icmp eq double* %77, %79
  %81 = ptrtoint double* %75 to i64
  br i1 %80, label %180, label %82

82:                                               ; preds = %70
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %71, i64 0, i32 0, i32 0
  %84 = load double*, double** %83, align 8
  %85 = ptrtoint double* %84 to i64
  br label %86

86:                                               ; preds = %96, %82
  %87 = phi double* [ %97, %96 ], [ %84, %82 ]
  %88 = phi double* [ %98, %96 ], [ %77, %82 ]
  %89 = icmp eq double* %87, %75
  br i1 %89, label %100, label %90

90:                                               ; preds = %86
  %91 = load double, double* %87, align 8
  %92 = load double, double* %88, align 8
  %93 = fcmp olt double %91, %92
  br i1 %93, label %100, label %94

94:                                               ; preds = %90
  %95 = fcmp olt double %92, %91
  br i1 %95, label %180, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds double, double* %87, i64 1
  %98 = getelementptr inbounds double, double* %88, i64 1
  %99 = icmp eq double* %98, %79
  br i1 %99, label %180, label %86

100:                                              ; preds = %90, %86
  %101 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %71, i64 0, i32 0, i32 2, i32 0, i32 0
  %102 = bitcast double** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.std::__1::vector"* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #7
  %105 = bitcast %"class.std::__1::vector"* %73 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.std::__1::vector"* %71 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %73, i64 0, i32 0, i32 1
  %109 = bitcast double** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %71, i64 0, i32 0, i32 1
  %112 = bitcast double** %111 to i64*
  store i64 %110, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %73, i64 0, i32 0, i32 2, i32 0, i32 0
  %114 = bitcast double** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %71, i64 0, i32 0, i32 2, i32 0, i32 0
  %117 = bitcast double** %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = bitcast %"class.std::__1::vector"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 24, i1 false) #7
  %119 = icmp eq %"class.std::__1::vector"* %73, %0
  br i1 %119, label %156, label %120

120:                                              ; preds = %100, %144
  %121 = phi double** [ %149, %144 ], [ %113, %100 ]
  %122 = phi double** [ %145, %144 ], [ %108, %100 ]
  %123 = phi %"class.std::__1::vector"* [ %124, %144 ], [ %73, %100 ]
  %124 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %123, i64 -1
  %125 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %124, i64 0, i32 0, i32 0
  %126 = load double*, double** %125, align 8
  %127 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %123, i64 -1, i32 0, i32 1
  %128 = load double*, double** %127, align 8
  %129 = icmp eq double* %126, %128
  br i1 %129, label %156, label %130

130:                                              ; preds = %120, %140
  %131 = phi double* [ %141, %140 ], [ %84, %120 ]
  %132 = phi double* [ %142, %140 ], [ %126, %120 ]
  %133 = icmp eq double* %131, %75
  br i1 %133, label %144, label %134

134:                                              ; preds = %130
  %135 = load double, double* %131, align 8
  %136 = load double, double* %132, align 8
  %137 = fcmp olt double %135, %136
  br i1 %137, label %144, label %138

138:                                              ; preds = %134
  %139 = fcmp olt double %136, %135
  br i1 %139, label %170, label %140

140:                                              ; preds = %138
  %141 = getelementptr inbounds double, double* %131, i64 1
  %142 = getelementptr inbounds double, double* %132, i64 1
  %143 = icmp eq double* %142, %128
  br i1 %143, label %170, label %130

144:                                              ; preds = %130, %134
  %145 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %123, i64 -1, i32 0, i32 1
  %146 = bitcast %"class.std::__1::vector"* %124 to <2 x i64>*
  %147 = load <2 x i64>, <2 x i64>* %146, align 8
  %148 = bitcast %"class.std::__1::vector"* %123 to <2 x i64>*
  store <2 x i64> %147, <2 x i64>* %148, align 8
  %149 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %123, i64 -1, i32 0, i32 2, i32 0, i32 0
  %150 = bitcast double** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %123, i64 0, i32 0, i32 2, i32 0, i32 0
  %153 = bitcast double** %152 to i64*
  store i64 %151, i64* %153, align 8
  %154 = bitcast %"class.std::__1::vector"* %124 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 24, i1 false) #7
  %155 = icmp eq %"class.std::__1::vector"* %124, %0
  br i1 %155, label %156, label %120

156:                                              ; preds = %144, %120, %100
  %157 = phi double** [ %108, %100 ], [ %145, %144 ], [ %122, %120 ]
  %158 = phi double** [ %113, %100 ], [ %149, %144 ], [ %121, %120 ]
  %159 = phi %"class.std::__1::vector"* [ %0, %100 ], [ %0, %144 ], [ %123, %120 ]
  %160 = bitcast double** %157 to i64*
  %161 = bitcast double** %158 to i64*
  %162 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %159, i64 0, i32 0, i32 0
  %163 = load double*, double** %162, align 8
  %164 = bitcast %"class.std::__1::vector"* %159 to i64*
  %165 = icmp eq double* %163, null
  br i1 %165, label %174, label %166

166:                                              ; preds = %156
  %167 = bitcast double* %163 to i8*
  %168 = bitcast %"class.std::__1::vector"* %159 to i8*
  %169 = ptrtoint double* %163 to i64
  store i64 %169, i64* %160, align 8
  tail call void @_ZdlPv(i8* %167) #9
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #7
  br label %174

170:                                              ; preds = %140, %138
  %171 = bitcast %"class.std::__1::vector"* %123 to i64*
  %172 = bitcast double** %122 to i64*
  %173 = bitcast double** %121 to i64*
  br label %174

174:                                              ; preds = %170, %166, %156
  %175 = phi i64* [ %160, %166 ], [ %160, %156 ], [ %172, %170 ]
  %176 = phi i64* [ %161, %166 ], [ %161, %156 ], [ %173, %170 ]
  %177 = phi i64* [ %164, %166 ], [ %164, %156 ], [ %171, %170 ]
  store i64 %85, i64* %177, align 8
  store i64 %81, i64* %175, align 8
  store i64 %103, i64* %176, align 8
  %178 = add i32 %72, 1
  %179 = icmp eq i32 %178, 8
  br i1 %179, label %184, label %180

180:                                              ; preds = %94, %96, %174, %70
  %181 = phi i32 [ %178, %174 ], [ %72, %70 ], [ %72, %96 ], [ %72, %94 ]
  %182 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %71, i64 1
  %183 = icmp eq %"class.std::__1::vector"* %182, %1
  br i1 %183, label %187, label %70

184:                                              ; preds = %174
  %185 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %71, i64 1
  %186 = icmp eq %"class.std::__1::vector"* %185, %1
  br label %187

187:                                              ; preds = %30, %32, %180, %184, %64, %8, %36, %3, %3, %58, %53, %49
  %188 = phi i1 [ true, %58 ], [ true, %53 ], [ true, %49 ], [ true, %3 ], [ true, %3 ], [ true, %36 ], [ true, %8 ], [ true, %64 ], [ %186, %184 ], [ true, %180 ], [ true, %32 ], [ true, %30 ]
  ret i1 %188
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3jxl8optimize12_GLOBAL__N_13AddERKNSt3__16vectorIdNS2_9allocatorIdEEEES8_(%"class.std::__1::vector"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %5 = bitcast double** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %12 = bitcast double** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = ashr exact i64 %16, 3
  %18 = icmp eq i64 %10, %17
  br i1 %18, label %22, label %19

19:                                               ; preds = %3
  %20 = tail call zeroext i1 (i8*, ...) @_ZN3jxl5DebugEPKcz(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0), i32 57, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0)) #7
  %21 = tail call zeroext i1 @_ZN3jxl5AbortEv() #8
  unreachable

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #7
  %26 = icmp eq i64 %9, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = bitcast double** %23 to i64*
  br label %47

29:                                               ; preds = %22
  %30 = icmp ugt i64 %10, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #8
  unreachable

33:                                               ; preds = %29
  %34 = tail call i8* @_Znwm(i64 %9) #9
  %35 = bitcast i8* %34 to double*
  %36 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %34, i8** %36, align 8
  %37 = getelementptr inbounds double, double* %35, i64 %10
  store double* %37, double** %24, align 8
  %38 = bitcast double** %23 to i64*
  %39 = ptrtoint i8* %34 to i64
  %40 = add nsw i64 %10, -1
  %41 = getelementptr double, double* %35, i64 %40
  %42 = ptrtoint double* %41 to i64
  %43 = sub i64 8, %39
  %44 = add i64 %43, %42
  %45 = and i64 %44, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 %45, i1 false) #7
  %46 = ptrtoint double* %37 to i64
  store i64 %46, i64* %38, align 8
  br label %47

47:                                               ; preds = %27, %33
  %48 = phi i64* [ %28, %27 ], [ %38, %33 ]
  %49 = phi double* [ null, %27 ], [ %35, %33 ]
  %50 = phi i64 [ 0, %27 ], [ %39, %33 ]
  %51 = phi i64 [ 0, %27 ], [ %46, %33 ]
  store double 0.000000e+00, double* %49, align 8
  %52 = bitcast %"class.std::__1::vector"* %0 to i64*
  %53 = sub i64 %51, %50
  %54 = ashr exact i64 %53, 3
  %55 = icmp ugt i64 %54, 1
  br i1 %55, label %56, label %77

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  br label %59

59:                                               ; preds = %56, %59
  %60 = phi double* [ %49, %56 ], [ %76, %59 ]
  %61 = phi i64 [ 1, %56 ], [ %70, %59 ]
  %62 = load double*, double** %57, align 8
  %63 = getelementptr inbounds double, double* %62, i64 %61
  %64 = load double, double* %63, align 8
  %65 = load double*, double** %58, align 8
  %66 = getelementptr inbounds double, double* %65, i64 %61
  %67 = load double, double* %66, align 8
  %68 = fadd double %64, %67
  %69 = getelementptr inbounds double, double* %60, i64 %61
  store double %68, double* %69, align 8
  %70 = add nuw i64 %61, 1
  %71 = load i64, i64* %48, align 8
  %72 = load i64, i64* %52, align 8
  %73 = sub i64 %71, %72
  %74 = ashr exact i64 %73, 3
  %75 = icmp ult i64 %70, %74
  %76 = inttoptr i64 %72 to double*
  br i1 %75, label %59, label %77

77:                                               ; preds = %59, %47
  ret void
}

declare zeroext i1 @_ZN3jxl5DebugEPKcz(i8*, ...) local_unnamed_addr #6

; Function Attrs: noreturn
declare zeroext i1 @_ZN3jxl5AbortEv() local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3jxl8optimize12_GLOBAL__N_114InitialSimplexEidRKNSt3__16vectorIdNS2_9allocatorIdEEEERKNS2_8functionIFdS8_EEE: argument 0"}
!4 = distinct !{!4, !"_ZN3jxl8optimize12_GLOBAL__N_114InitialSimplexEidRKNSt3__16vectorIdNS2_9allocatorIdEEEERKNS2_8functionIFdS8_EEE"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = !{!3, !6}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !12}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = !{!3, !18}
!23 = distinct !{!23, !12}
!24 = distinct !{!24, !14}
!25 = distinct !{!25, !14}
!26 = distinct !{!26, !12}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN3jxl8optimize12_GLOBAL__N_18MidpointERKNSt3__16vectorINS3_IdNS2_9allocatorIdEEEENS4_IS6_EEEE: argument 0"}
!29 = distinct !{!29, !"_ZN3jxl8optimize12_GLOBAL__N_18MidpointERKNSt3__16vectorINS3_IdNS2_9allocatorIdEEEENS4_IS6_EEEE"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN3jxl8optimize12_GLOBAL__N_18SubtractERKNSt3__16vectorIdNS2_9allocatorIdEEEES8_: argument 0"}
!32 = distinct !{!32, !"_ZN3jxl8optimize12_GLOBAL__N_18SubtractERKNSt3__16vectorIdNS2_9allocatorIdEEEES8_"}
!33 = !{!34}
!34 = distinct !{!34, !35}
!35 = distinct !{!35, !"LVerDomain"}
!36 = !{!37}
!37 = distinct !{!37, !35}
!38 = distinct !{!38, !12}
!39 = distinct !{!39, !14}
!40 = distinct !{!40, !14}
!41 = distinct !{!41, !12}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN3jxl8optimize12_GLOBAL__N_17AverageERKNSt3__16vectorIdNS2_9allocatorIdEEEES8_: argument 0"}
!44 = distinct !{!44, !"_ZN3jxl8optimize12_GLOBAL__N_17AverageERKNSt3__16vectorIdNS2_9allocatorIdEEEES8_"}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !12}
!51 = distinct !{!51, !14}
!52 = distinct !{!52, !14}
!53 = distinct !{!53, !12}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !12}
!60 = distinct !{!60, !14}
!61 = distinct !{!61, !14}
!62 = distinct !{!62, !12}
