; ModuleID = '../../third_party/blink/renderer/core/geometry/dom_matrix_read_only.cc'
source_filename = "../../third_party/blink/renderer/core/geometry/dom_matrix_read_only.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::String>::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::String>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::DOMMatrixReadOnly" = type <{ %"class.blink::ScriptWrappable", %"class.blink::TransformationMatrix", i8, [7 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::DOMMatrix2DInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, double, double, double, double, double, double, double, double, double, double, double, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::DOMMatrixInit" = type { %"class.blink::DOMMatrix2DInit", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, double, double, double, double, double, double, double, double, double, double }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1979" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.blink::TraceWrapperV8Reference.1979" = type { %"class.v8::TracedReference.1980" }
%"class.v8::TracedReference.1980" = type { %"class.v8::BasicTracedReference.1981" }
%"class.v8::BasicTracedReference.1981" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2027" }
%"class.blink::Member.2027" = type { %"class.blink::MemberBase.2028" }
%"class.blink::MemberBase.2028" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2029" }
%"class.blink::Member.2029" = type { %"class.blink::MemberBase.2030" }
%"class.blink::MemberBase.2030" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::V8UnionStringOrUnrestrictedDoubleSequence" = type { %"class.blink::bindings::UnionBase", i32, %"class.WTF::String", %"class.WTF::Vector.567" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2016", i8* }
%"class.WTF::StringAppend.2016" = type { i8*, %"class.WTF::String" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CSSToLengthConversionData" = type <{ %"class.blink::ComputedStyle"*, %"class.blink::CSSToLengthConversionData::FontSizes", %"class.blink::CSSToLengthConversionData::ViewportSize", float, [4 x i8] }>
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2041 }
%class.scoped_refptr.2041 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2042", %"class.WTF::Vector.630", %"class.WTF::Vector.2044", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2042" = type { %"class.base::RefCounted.2043" }
%"class.base::RefCounted.2043" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2044" = type { %"class.WTF::VectorBuffer.2045" }
%"class.WTF::VectorBuffer.2045" = type { %"class.WTF::VectorBufferBase.2046" }
%"class.WTF::VectorBufferBase.2046" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2047 }
%union.anon.2047 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2055 }
%class.scoped_refptr.2055 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2065" }
%"class.blink::Member.2065" = type { %"class.blink::MemberBase.2066" }
%"class.blink::MemberBase.2066" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2061" }
%"class.blink::MemberBase.2061" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2062" }
%"class.blink::MemberBase.2062" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2063" }
%"class.blink::MemberBase.2063" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2064" }
%"class.blink::MemberBase.2064" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2056", %"class.WTF::Vector.2056" }
%"class.WTF::Vector.2056" = type { %"class.WTF::VectorBuffer.2057" }
%"class.WTF::VectorBuffer.2057" = type { %"class.WTF::VectorBufferBase.2058" }
%"class.WTF::VectorBufferBase.2058" = type { %class.scoped_refptr.2055*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1708", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.1928", %"class.std::__1::unique_ptr.1934", %"class.std::__1::unique_ptr.1940", %class.scoped_refptr.1704, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.1946", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1667", %"class.std::__1::unique_ptr.1677" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1623, %"class.WTF::Vector.1624", %"class.std::__1::unique_ptr.1629", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1650, %"class.blink::Persistent.1651" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1623 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1624" = type { %"class.WTF::VectorBuffer.1625" }
%"class.WTF::VectorBuffer.1625" = type { %"class.WTF::VectorBufferBase.1626", [8 x i8] }
%"class.WTF::VectorBufferBase.1626" = type { %class.scoped_refptr.1623*, i32, i32 }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1632", %"class.absl::optional.1637", %"class.absl::optional.1642" }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, %union.anon.1636 }
%union.anon.1636 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, [3 x i8], %union.anon.1641 }
%union.anon.1641 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1642" = type { %"class.absl::optional_internal::optional_data.1643" }
%"class.absl::optional_internal::optional_data.1643" = type { %"class.absl::optional_internal::optional_data_base.1644" }
%"class.absl::optional_internal::optional_data_base.1644" = type { %"class.absl::optional_internal::optional_data_dtor_base.1645" }
%"class.absl::optional_internal::optional_data_dtor_base.1645" = type { i8, %union.anon.1646 }
%union.anon.1646 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1650 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1651" = type { %"class.blink::PersistentBase.1652" }
%"class.blink::PersistentBase.1652" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1655", %"struct.blink::PhysicalRect", %"class.blink::Member.1665" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.WTF::HashSet.1658"* }
%"class.WTF::HashSet.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1667" = type { %"class.blink::PersistentBase.1668" }
%"class.blink::PersistentBase.1668" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1671", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1680", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1680" = type { %"class.WTF::HashTable.1683", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1683" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1686", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1689, %"class.std::__1::unique_ptr.1690", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1689 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1975", i16, %class.scoped_refptr.1689 }
%"class.WTF::ThreadSafeRefCounted.1975" = type { %"class.base::RefCountedThreadSafe.1976" }
%"class.base::RefCountedThreadSafe.1976" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.WTF::Vector.1693"* }
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695" }
%"class.WTF::VectorBufferBase.1695" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1704, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1708" = type { %"class.blink::MemberBase.1709" }
%"class.blink::MemberBase.1709" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1712", %"class.blink::Member.1717", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1719", i8, i32, %"class.blink::Color", %"class.absl::optional.1722", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1727", %"class.blink::Member.1729", %"class.blink::Member.1729", %"class.std::__1::unique_ptr.1732", i32, [4 x i8], %"class.WTF::HashSet.1735", %"class.blink::Member.1742", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1744", %"class.blink::HeapHashSet.1751", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1759", i8, %"class.blink::Member.1765", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1777", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1791", i8, %"class.std::__1::unique_ptr.1797", %"class.std::__1::unique_ptr.1878", %"class.WTF::Vector.1884", i32, %class.scoped_refptr.1889, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1890", %"class.blink::Member.1892", %"class.blink::Member.1894", %"class.blink::HeapHashSet.1896", %"class.blink::HeapHashSet.1903", %"class.std::__1::unique_ptr.1910", %"class.std::__1::unique_ptr.1917", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1712" = type { %"class.WTF::HashTable.1713" }
%"class.WTF::HashTable.1713" = type <{ %class.scoped_refptr.1716*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1716 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1717" = type { %"class.blink::MemberBase.1718" }
%"class.blink::MemberBase.1718" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1719" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1720", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1720" = type { %"class.blink::MemberBase.1721" }
%"class.blink::MemberBase.1721" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1722" = type { %"class.absl::optional_internal::optional_data.1723" }
%"class.absl::optional_internal::optional_data.1723" = type { %"class.absl::optional_internal::optional_data_base.1724" }
%"class.absl::optional_internal::optional_data_base.1724" = type { %"class.absl::optional_internal::optional_data_dtor_base.1725" }
%"class.absl::optional_internal::optional_data_dtor_base.1725" = type { i8, %union.anon.1726 }
%union.anon.1726 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::HeapHashSet.1731"* }
%"class.blink::HeapHashSet.1731" = type opaque
%"class.std::__1::unique_ptr.1732" = type { %"class.std::__1::__compressed_pair.1733" }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.1734" }
%"struct.std::__1::__compressed_pair_elem.1734" = type { %"class.WTF::HashSet.1735"* }
%"class.WTF::HashSet.1735" = type { %"class.WTF::HashTable.1736" }
%"class.WTF::HashTable.1736" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1744" = type { %"class.WTF::HashSet.1747" }
%"class.WTF::HashSet.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"class.blink::Member.1750"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1750" = type opaque
%"class.blink::HeapHashSet.1751" = type { %"class.WTF::HashSet.1754" }
%"class.WTF::HashSet.1754" = type { %"class.WTF::HashTable.1755" }
%"class.WTF::HashTable.1755" = type <{ %"class.blink::Member.1757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1963", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1973", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1965", %"class.blink::Member.1967", %"class.blink::Member.1969", %"class.blink::Member.1971", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1973" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1974", { i64, i64 } }
%"class.blink::WeakMember.1974" = type { %"class.blink::MemberBase.1758" }
%"class.std::__1::unique_ptr.1759" = type { %"class.std::__1::__compressed_pair.1760" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.1761" }
%"struct.std::__1::__compressed_pair_elem.1761" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1769", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1769" = type { %"class.WTF::HashTable.1770" }
%"class.WTF::HashTable.1770" = type <{ %"struct.WTF::KeyValuePair.1772"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1772" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1773", i32, i32 }
%"class.WTF::Vector.1773" = type { %"class.WTF::VectorBuffer.1774" }
%"class.WTF::VectorBuffer.1774" = type { %"class.WTF::VectorBufferBase.1775" }
%"class.WTF::VectorBufferBase.1775" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1777" = type { %"class.WTF::LinkedHashSet.1780" }
%"class.WTF::LinkedHashSet.1780" = type { %"class.WTF::HashMap.1781", %"class.WTF::VectorBackedLinkedList.1785" }
%"class.WTF::HashMap.1781" = type { %"class.WTF::HashTable.1782" }
%"class.WTF::HashTable.1782" = type <{ %"struct.WTF::KeyValuePair.1784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1784" = type opaque
%"class.WTF::VectorBackedLinkedList.1785" = type { %"class.WTF::Vector.1786", i32, i32 }
%"class.WTF::Vector.1786" = type { %"class.WTF::VectorBuffer.1787" }
%"class.WTF::VectorBuffer.1787" = type { %"class.WTF::VectorBufferBase.1788" }
%"class.WTF::VectorBufferBase.1788" = type { %"class.WTF::VectorBackedLinkedListNode.1789"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1789" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1791" = type { %"class.std::__1::__compressed_pair.1792" }
%"class.std::__1::__compressed_pair.1792" = type { %"struct.std::__1::__compressed_pair_elem.1793" }
%"struct.std::__1::__compressed_pair_elem.1793" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1800, %class.scoped_refptr.1800, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1855", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1860", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1800 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1801", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1808" }
%"class.WTF::RefCounted.1801" = type { %"class.base::RefCounted.1802" }
%"class.base::RefCounted.1802" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1803", i32, [4 x i8] }>
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1808" = type { %"class.WTF::VectorBuffer.1809" }
%"class.WTF::VectorBuffer.1809" = type { %"class.WTF::VectorBufferBase.1810" }
%"class.WTF::VectorBufferBase.1810" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1811", %"class.std::__1::unique_ptr.1827", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1814", %"class.WTF::Vector.1819", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1814" = type { %"class.WTF::VectorBuffer.1815" }
%"class.WTF::VectorBuffer.1815" = type { %"class.WTF::VectorBufferBase.1816" }
%"class.WTF::VectorBufferBase.1816" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1819" = type { %"class.WTF::VectorBuffer.1820" }
%"class.WTF::VectorBuffer.1820" = type { %"class.WTF::VectorBufferBase.1821" }
%"class.WTF::VectorBufferBase.1821" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1830", %"class.absl::optional.1830" }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, [3 x i8], %union.anon.1834 }
%union.anon.1834 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1808"*, %"class.absl::optional.1840", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1840" = type { %"class.absl::optional_internal::optional_data.1841" }
%"class.absl::optional_internal::optional_data.1841" = type { %"class.absl::optional_internal::optional_data_base.1842" }
%"class.absl::optional_internal::optional_data_base.1842" = type { %"class.absl::optional_internal::optional_data_dtor_base.1843" }
%"class.absl::optional_internal::optional_data_dtor_base.1843" = type { i8, %union.anon.1844 }
%union.anon.1844 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1845", %"class.WTF::Vector.1850" }
%"class.WTF::Vector.1845" = type { %"class.WTF::VectorBuffer.1846" }
%"class.WTF::VectorBuffer.1846" = type { %"class.WTF::VectorBufferBase.1847", [128 x i8] }
%"class.WTF::VectorBufferBase.1847" = type { i32*, i32, i32 }
%"class.WTF::Vector.1850" = type { %"class.WTF::VectorBuffer.1851" }
%"class.WTF::VectorBuffer.1851" = type { %"class.WTF::VectorBufferBase.1852", [128 x i8] }
%"class.WTF::VectorBufferBase.1852" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1855" = type { %"class.WTF::VectorBuffer.1856" }
%"class.WTF::VectorBuffer.1856" = type { %"class.WTF::VectorBufferBase.1857" }
%"class.WTF::VectorBufferBase.1857" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1860" = type { %"class.WTF::HashTable.1861" }
%"class.WTF::HashTable.1861" = type <{ %"struct.WTF::KeyValuePair.1864"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1864" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1865", %"class.WTF::Vector.1870" }
%"class.WTF::HashMap.1865" = type { %"class.WTF::HashTable.1866" }
%"class.WTF::HashTable.1866" = type <{ %"struct.WTF::KeyValuePair.1869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1869" = type opaque
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1878" = type { %"class.std::__1::__compressed_pair.1879" }
%"class.std::__1::__compressed_pair.1879" = type { %"struct.std::__1::__compressed_pair_elem.1880" }
%"struct.std::__1::__compressed_pair_elem.1880" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1889 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1890" = type { %"class.blink::MemberBase.1891" }
%"class.blink::MemberBase.1891" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1896" = type { %"class.WTF::HashSet.1899" }
%"class.WTF::HashSet.1899" = type { %"class.WTF::HashTable.1900" }
%"class.WTF::HashTable.1900" = type <{ %"class.blink::WeakMember.1902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1902" = type opaque
%"class.blink::HeapHashSet.1903" = type { %"class.WTF::HashSet.1906" }
%"class.WTF::HashSet.1906" = type { %"class.WTF::HashTable.1907" }
%"class.WTF::HashTable.1907" = type <{ %"class.blink::WeakMember.1909"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1909" = type opaque
%"class.std::__1::unique_ptr.1910" = type { %"class.std::__1::__compressed_pair.1911" }
%"class.std::__1::__compressed_pair.1911" = type { %"struct.std::__1::__compressed_pair_elem.1912" }
%"struct.std::__1::__compressed_pair_elem.1912" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1913" }
%"class.base::time_internal::TimeBase.1913" = type { i64 }
%"class.std::__1::unique_ptr.1917" = type { %"class.std::__1::__compressed_pair.1918" }
%"class.std::__1::__compressed_pair.1918" = type { %"struct.std::__1::__compressed_pair_elem.1919" }
%"struct.std::__1::__compressed_pair_elem.1919" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1920", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1920" = type { %"class.absl::optional_internal::optional_data.1921" }
%"class.absl::optional_internal::optional_data.1921" = type { %"class.absl::optional_internal::optional_data_base.1922" }
%"class.absl::optional_internal::optional_data_base.1922" = type { %"class.absl::optional_internal::optional_data_dtor_base.1923" }
%"class.absl::optional_internal::optional_data_dtor_base.1923" = type { i8, %union.anon.1924 }
%union.anon.1924 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.1928" = type { %"class.std::__1::__compressed_pair.1929" }
%"class.std::__1::__compressed_pair.1929" = type { %"struct.std::__1::__compressed_pair_elem.1930" }
%"struct.std::__1::__compressed_pair_elem.1930" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.1934" = type { %"class.std::__1::__compressed_pair.1935" }
%"class.std::__1::__compressed_pair.1935" = type { %"struct.std::__1::__compressed_pair_elem.1936" }
%"struct.std::__1::__compressed_pair_elem.1936" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.1940" = type { %"class.std::__1::__compressed_pair.1941" }
%"class.std::__1::__compressed_pair.1941" = type { %"struct.std::__1::__compressed_pair_elem.1942" }
%"struct.std::__1::__compressed_pair_elem.1942" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1704 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.1946" = type { %"class.blink::PersistentBase.1947" }
%"class.blink::PersistentBase.1947" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.1950", i64 }
%"class.blink::HeapVector.1950" = type { %"class.WTF::Vector.1953" }
%"class.WTF::Vector.1953" = type { %"class.WTF::VectorBuffer.1954" }
%"class.WTF::VectorBuffer.1954" = type { %"class.WTF::VectorBufferBase.1955", [368 x i8] }
%"class.WTF::VectorBufferBase.1955" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1757", i8, %"class.blink::Member.1956", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1956" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::HeapLinkedHashSet.1958"* }
%"class.blink::HeapLinkedHashSet.1958" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2031" }
%"class.WTF::Vector.2031" = type { %"class.WTF::VectorBuffer.2032" }
%"class.WTF::VectorBuffer.2032" = type { %"class.WTF::VectorBufferBase.2033" }
%"class.WTF::VectorBufferBase.2033" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2036", %"class.absl::optional.2036", %"class.absl::optional.2036" }
%"class.absl::optional.2036" = type { %"class.absl::optional_internal::optional_data.2037" }
%"class.absl::optional_internal::optional_data.2037" = type { %"class.absl::optional_internal::optional_data_base.2038" }
%"class.absl::optional_internal::optional_data_base.2038" = type { %"class.absl::optional_internal::optional_data_dtor_base.2039" }
%"class.absl::optional_internal::optional_data_dtor_base.2039" = type { i8, %union.anon.2040 }
%union.anon.2040 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2051" }
%"class.WTF::VectorBuffer.2051" = type { %"class.WTF::VectorBufferBase.2052", [32 x i8] }
%"class.WTF::VectorBufferBase.2052" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::CSSToLengthConversionData::FontSizes" = type <{ float, float, %"class.blink::Font"*, float, [4 x i8] }>
%"class.blink::CSSToLengthConversionData::ViewportSize" = type { %"class.blink::DoubleSize" }
%"class.blink::DoubleSize" = type { double, double }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.945, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.2014", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.2014" = type { %"class.blink::MemberBase.2015" }
%"class.blink::MemberBase.2015" = type { %"class.blink::Document"* }
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector.2017" }
%"class.blink::HeapVector.2017" = type { %"class.WTF::Vector.2020" }
%"class.WTF::Vector.2020" = type { %"class.WTF::VectorBuffer.2021" }
%"class.WTF::VectorBuffer.2021" = type { %"class.WTF::VectorBufferBase.2022", [32 x i8] }
%"class.WTF::VectorBufferBase.2022" = type { %"class.blink::Member.1215"*, i32, i32 }
%"class.blink::NotShared" = type { %"class.blink::Member.1984" }
%"class.blink::Member.1984" = type { %"class.blink::MemberBase.1985" }
%"class.blink::MemberBase.1985" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.1986" }
%"class.blink::Member.1986" = type { %"class.blink::MemberBase.1987" }
%"class.blink::MemberBase.1987" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::NotShared.1988" = type { %"class.blink::Member.1989" }
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::DOMTypedArray.1991"* }
%"class.blink::DOMTypedArray.1991" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMMatrix" = type { %"class.blink::DOMMatrixReadOnly.base", [7 x i8] }
%"class.blink::DOMMatrixReadOnly.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::TransformationMatrix", i8 }>
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::DOMPoint" = type { %"class.blink::DOMPointReadOnly" }
%"class.blink::DOMPointReadOnly" = type { %"class.blink::ScriptWrappable", double, double, double, double }
%"class.blink::DOMPointInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, double, double, double }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1992, i32, i8, i8, [2 x i8] }>
%union.anon.1992 = type { %"class.WTF::Vector.1993" }
%"class.WTF::Vector.1993" = type { %"class.WTF::VectorBuffer.1994" }
%"class.WTF::VectorBuffer.1994" = type { %"class.WTF::VectorBufferBase.1995", [16 x i8] }
%"class.WTF::VectorBufferBase.1995" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.1979", %class.scoped_refptr.945 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2005, %"class.blink::Member.2006", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.2005 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2006" = type { %"class.blink::MemberBase.2007" }
%"class.blink::MemberBase.2007" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2008" }
%"class.blink::Persistent.2008" = type { %"class.blink::PersistentBase.2009" }
%"class.blink::PersistentBase.2009" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::V8ObjectBuilder" = type { %"class.blink::ScriptState"*, %"class.v8::Local" }
%"class.v8::Local" = type { %"class.v8::Object"* }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.WTF::StringTypeAdapter.2093" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.2094" = type { %"class.WTF::StringTypeAdapter.2095" }
%"class.WTF::StringTypeAdapter.2095" = type { %"class.WTF::StringView" }

$_ZN5blink29DummyExceptionStateForTestingD2Ev = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink17DOMMatrixReadOnly5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink17DOMMatrixReadOnly18GetWrapperTypeInfoEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17DOMMatrixReadOnlyEE4CallIJRKN3WTF6VectorIdLj0ENS4_18PartitionAllocatorEEEjEEEPS1_DpOT_ = comdat any

$_ZN5blink17DOMMatrixReadOnlyC2IN3WTF6VectorIdLj0ENS2_18PartitionAllocatorEEEEET_i = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm = comdat any

$_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink17DOMMatrixReadOnlyC2IPdEET_i = comdat any

$_ZN5blink17DOMMatrixReadOnlyC2IPfEET_i = comdat any

$_ZN5blink14DOMArrayBuffer6CreateEPKvm = comdat any

$_ZN5blink18DOMArrayBufferBaseD2Ev = comdat any

$_ZN5blink18DOMArrayBufferBaseD0Ev = comdat any

$_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink18DOMArrayBufferBaseE = comdat any

@.str = private unnamed_addr constant [44 x i8] c"Property mismatch on matrix initialization.\00", align 1
@.str.1 = private unnamed_addr constant [68 x i8] c"The is2D member is set to true but the input matrix is a 3d matrix.\00", align 1
@.str.2 = private unnamed_addr constant [56 x i8] c"DOMMatrix can't be constructed with strings on workers.\00", align 1
@.str.3 = private unnamed_addr constant [85 x i8] c"The sequence must contain 6 elements for a 2D matrix or 16 elements for a 3D matrix.\00", align 1
@.str.4 = private unnamed_addr constant [85 x i8] c"The sequence must contain 6 elements for a 2D matrix or 16 elements a for 3D matrix.\00", align 1
@_ZTVN5blink17DOMMatrixReadOnlyE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DOMMatrixReadOnly"*)* @_ZN5blink17DOMMatrixReadOnlyD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMMatrixReadOnly"*)* @_ZN5blink17DOMMatrixReadOnlyD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::DOMMatrixReadOnly"*, %"class.blink::Visitor"*)* @_ZNK5blink17DOMMatrixReadOnly5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::DOMMatrixReadOnly"*)* @_ZNK5blink17DOMMatrixReadOnly18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.6 = private unnamed_addr constant [60 x i8] c"DOMMatrix cannot be serialized with NaN or Infinity values.\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"matrix(\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"matrix3d(\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"m11\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"m12\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"m13\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"m14\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"m21\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"m22\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"m23\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"m24\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"m31\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"m32\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"m33\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"m34\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"m41\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"m42\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"m43\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"m44\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"is2D\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"isIdentity\00", align 1
@_ZZN5blink17DOMMatrixReadOnly24SetMatrixValueFromStringEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateEE19s_identity_matrix2d = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink17DOMMatrixReadOnly24SetMatrixValueFromStringEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateEE19s_identity_matrix2d = internal global i64 0, align 8
@.str.34 = private unnamed_addr constant [18 x i8] c"Failed to parse '\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c"'.\00", align 1
@.str.36 = private unnamed_addr constant [39 x i8] c"Lengths must be absolute, not relative\00", align 1
@.str.37 = private unnamed_addr constant [53 x i8] c"Lengths must be absolute, not depend on the box size\00", align 1
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink17DOMMatrixReadOnly18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.38 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.39 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.40 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.41 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv = private unnamed_addr constant [54 x i8] c"const char *WTF::GetStringWithTypeName() [T = double]\00", align 1
@.str.42 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.43 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZTVN5blink14DOMArrayBufferE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink18DOMArrayBufferBaseE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*)* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@.str.46 = private unnamed_addr constant [25 x i8] c"matrix(1, 0, 0, 1, 0, 0)\00", align 1
@.str.47 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.48 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.49 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

@_ZN5blink17DOMMatrixReadOnlyD1Ev = hidden unnamed_addr alias void (%"class.blink::DOMMatrixReadOnly"*), void (%"class.blink::DOMMatrixReadOnly"*)* @_ZN5blink17DOMMatrixReadOnlyD2Ev
@_ZN5blink17DOMMatrixReadOnlyC1ERKNS_20TransformationMatrixEb = hidden unnamed_addr alias void (%"class.blink::DOMMatrixReadOnly"*, %"class.blink::TransformationMatrix"*, i1), void (%"class.blink::DOMMatrixReadOnly"*, %"class.blink::TransformationMatrix"*, i1)* @_ZN5blink17DOMMatrixReadOnlyC2ERKNS_20TransformationMatrixEb

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17DOMMatrixReadOnly18ValidateAndFixup2DEPNS_15DOMMatrix2DInitE(%"class.blink::DOMMatrix2DInit"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 7
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 13
  %11 = load double, double* %10, align 8
  %12 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 19
  %13 = load double, double* %12, align 8
  %14 = fcmp une double %11, %13
  br i1 %14, label %15, label %19

15:                                               ; preds = %9
  %16 = fcmp uno double %11, 0.000000e+00
  %17 = fcmp uno double %13, 0.000000e+00
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %175

19:                                               ; preds = %5, %1, %15, %9
  %20 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 2
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %37, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 8
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 14
  %29 = load double, double* %28, align 8
  %30 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 20
  %31 = load double, double* %30, align 8
  %32 = fcmp une double %29, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %27
  %34 = fcmp uno double %29, 0.000000e+00
  %35 = fcmp uno double %31, 0.000000e+00
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %175

37:                                               ; preds = %23, %19, %33, %27
  %38 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 3
  %39 = load i8, i8* %38, align 2, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %55, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 9
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 15
  %47 = load double, double* %46, align 8
  %48 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 21
  %49 = load double, double* %48, align 8
  %50 = fcmp une double %47, %49
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = fcmp uno double %47, 0.000000e+00
  %53 = fcmp uno double %49, 0.000000e+00
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %175

55:                                               ; preds = %41, %37, %51, %45
  %56 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 4
  %57 = load i8, i8* %56, align 1, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %73, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 10
  %61 = load i8, i8* %60, align 1, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 16
  %65 = load double, double* %64, align 8
  %66 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 22
  %67 = load double, double* %66, align 8
  %68 = fcmp une double %65, %67
  br i1 %68, label %69, label %73

69:                                               ; preds = %63
  %70 = fcmp uno double %65, 0.000000e+00
  %71 = fcmp uno double %67, 0.000000e+00
  %72 = and i1 %70, %71
  br i1 %72, label %73, label %175

73:                                               ; preds = %59, %55, %69, %63
  %74 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 5
  %75 = load i8, i8* %74, align 4, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %91, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 11
  %79 = load i8, i8* %78, align 2, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %91, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 17
  %83 = load double, double* %82, align 8
  %84 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 23
  %85 = load double, double* %84, align 8
  %86 = fcmp une double %83, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %81
  %88 = fcmp uno double %83, 0.000000e+00
  %89 = fcmp uno double %85, 0.000000e+00
  %90 = and i1 %88, %89
  br i1 %90, label %91, label %175

91:                                               ; preds = %77, %73, %87, %81
  %92 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 6
  %93 = load i8, i8* %92, align 1, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %109, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 12
  %97 = load i8, i8* %96, align 1, !range !2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %109, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 18
  %101 = load double, double* %100, align 8
  %102 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 24
  %103 = load double, double* %102, align 8
  %104 = fcmp une double %101, %103
  br i1 %104, label %105, label %109

105:                                              ; preds = %99
  %106 = fcmp uno double %101, 0.000000e+00
  %107 = fcmp uno double %103, 0.000000e+00
  %108 = and i1 %106, %107
  br i1 %108, label %109, label %175

109:                                              ; preds = %95, %91, %105, %99
  %110 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 7
  %111 = load i8, i8* %110, align 2, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %120

113:                                              ; preds = %109
  br i1 %4, label %117, label %114

114:                                              ; preds = %113
  %115 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 13
  %116 = load double, double* %115, align 8
  br label %117

117:                                              ; preds = %114, %113
  %118 = phi double [ %116, %114 ], [ 1.000000e+00, %113 ]
  %119 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 19
  store double %118, double* %119, align 8
  store i8 1, i8* %110, align 2
  br label %120

120:                                              ; preds = %117, %109
  %121 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 8
  %122 = load i8, i8* %121, align 1, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %131

124:                                              ; preds = %120
  br i1 %22, label %128, label %125

125:                                              ; preds = %124
  %126 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 14
  %127 = load double, double* %126, align 8
  br label %128

128:                                              ; preds = %125, %124
  %129 = phi double [ %127, %125 ], [ 0.000000e+00, %124 ]
  %130 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 20
  store double %129, double* %130, align 8
  store i8 1, i8* %121, align 1
  br label %131

131:                                              ; preds = %128, %120
  %132 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 9
  %133 = load i8, i8* %132, align 8, !range !2
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %135, label %142

135:                                              ; preds = %131
  br i1 %40, label %139, label %136

136:                                              ; preds = %135
  %137 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 15
  %138 = load double, double* %137, align 8
  br label %139

139:                                              ; preds = %136, %135
  %140 = phi double [ %138, %136 ], [ 0.000000e+00, %135 ]
  %141 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 21
  store double %140, double* %141, align 8
  store i8 1, i8* %132, align 8
  br label %142

142:                                              ; preds = %139, %131
  %143 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 10
  %144 = load i8, i8* %143, align 1, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %146, label %153

146:                                              ; preds = %142
  br i1 %58, label %150, label %147

147:                                              ; preds = %146
  %148 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 16
  %149 = load double, double* %148, align 8
  br label %150

150:                                              ; preds = %147, %146
  %151 = phi double [ %149, %147 ], [ 1.000000e+00, %146 ]
  %152 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 22
  store double %151, double* %152, align 8
  store i8 1, i8* %143, align 1
  br label %153

153:                                              ; preds = %150, %142
  %154 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 11
  %155 = load i8, i8* %154, align 2, !range !2
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %157, label %164

157:                                              ; preds = %153
  br i1 %76, label %161, label %158

158:                                              ; preds = %157
  %159 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 17
  %160 = load double, double* %159, align 8
  br label %161

161:                                              ; preds = %158, %157
  %162 = phi double [ %160, %158 ], [ 0.000000e+00, %157 ]
  %163 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 23
  store double %162, double* %163, align 8
  store i8 1, i8* %154, align 2
  br label %164

164:                                              ; preds = %161, %153
  %165 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 12
  %166 = load i8, i8* %165, align 1, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %168, label %175

168:                                              ; preds = %164
  br i1 %94, label %172, label %169

169:                                              ; preds = %168
  %170 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 18
  %171 = load double, double* %170, align 8
  br label %172

172:                                              ; preds = %169, %168
  %173 = phi double [ %171, %169 ], [ 0.000000e+00, %168 ]
  %174 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 24
  store double %173, double* %174, align 8
  store i8 1, i8* %165, align 1
  br label %175

175:                                              ; preds = %172, %164, %105, %87, %69, %51, %33, %15
  %176 = phi i1 [ false, %15 ], [ false, %33 ], [ false, %51 ], [ false, %69 ], [ false, %87 ], [ false, %105 ], [ true, %164 ], [ true, %172 ]
  ret i1 %176
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17DOMMatrixReadOnly16ValidateAndFixupEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::DOMMatrixInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZN5blink17DOMMatrixReadOnly18ValidateAndFixup2DEPNS_15DOMMatrix2DInitE(%"class.blink::DOMMatrix2DInit"* %3)
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #11
  br label %99

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %55, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 12
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %99, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 17
  %16 = load double, double* %15, align 8
  %17 = fcmp une double %16, 0.000000e+00
  br i1 %17, label %54, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 18
  %20 = load double, double* %19, align 8
  %21 = fcmp une double %20, 0.000000e+00
  br i1 %21, label %54, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 13
  %24 = load double, double* %23, align 8
  %25 = fcmp une double %24, 0.000000e+00
  br i1 %25, label %54, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 15
  %28 = load double, double* %27, align 8
  %29 = fcmp une double %28, 0.000000e+00
  br i1 %29, label %54, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 21
  %32 = load double, double* %31, align 8
  %33 = fcmp une double %32, 0.000000e+00
  br i1 %33, label %54, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 14
  %36 = load double, double* %35, align 8
  %37 = fcmp une double %36, 0.000000e+00
  br i1 %37, label %54, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 16
  %40 = load double, double* %39, align 8
  %41 = fcmp une double %40, 0.000000e+00
  br i1 %41, label %54, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 20
  %44 = load double, double* %43, align 8
  %45 = fcmp une double %44, 0.000000e+00
  br i1 %45, label %54, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 19
  %48 = load double, double* %47, align 8
  %49 = fcmp une double %48, 1.000000e+00
  br i1 %49, label %54, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 22
  %52 = load double, double* %51, align 8
  %53 = fcmp une double %52, 1.000000e+00
  br i1 %53, label %54, label %99

54:                                               ; preds = %50, %46, %42, %38, %34, %30, %26, %22, %18, %14
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %1, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0)) #11
  br label %99

55:                                               ; preds = %6
  %56 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 17
  %57 = load double, double* %56, align 8
  %58 = fcmp une double %57, 0.000000e+00
  br i1 %58, label %96, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 18
  %61 = load double, double* %60, align 8
  %62 = fcmp une double %61, 0.000000e+00
  br i1 %62, label %96, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 13
  %65 = load double, double* %64, align 8
  %66 = fcmp une double %65, 0.000000e+00
  br i1 %66, label %96, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 15
  %69 = load double, double* %68, align 8
  %70 = fcmp une double %69, 0.000000e+00
  br i1 %70, label %96, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 21
  %73 = load double, double* %72, align 8
  %74 = fcmp une double %73, 0.000000e+00
  br i1 %74, label %96, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 14
  %77 = load double, double* %76, align 8
  %78 = fcmp une double %77, 0.000000e+00
  br i1 %78, label %96, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 16
  %81 = load double, double* %80, align 8
  %82 = fcmp une double %81, 0.000000e+00
  br i1 %82, label %96, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 20
  %85 = load double, double* %84, align 8
  %86 = fcmp une double %85, 0.000000e+00
  br i1 %86, label %96, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 19
  %89 = load double, double* %88, align 8
  %90 = fcmp une double %89, 1.000000e+00
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 22
  %93 = load double, double* %92, align 8
  %94 = fcmp oeq double %93, 1.000000e+00
  %95 = zext i1 %94 to i8
  br label %96

96:                                               ; preds = %91, %87, %83, %79, %75, %71, %67, %63, %59, %55
  %97 = phi i8 [ 0, %87 ], [ 0, %83 ], [ 0, %79 ], [ 0, %75 ], [ 0, %71 ], [ 0, %67 ], [ 0, %63 ], [ 0, %59 ], [ 0, %55 ], [ %95, %91 ]
  %98 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 12
  store i8 %97, i8* %98, align 1
  store i8 1, i8* %7, align 8
  br label %99

99:                                               ; preds = %10, %50, %96, %54, %5
  %100 = phi i1 [ false, %54 ], [ false, %5 ], [ true, %96 ], [ true, %50 ], [ true, %10 ]
  ret i1 %100
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrixReadOnly"* @_ZN5blink17DOMMatrixReadOnly6CreateEPNS_16ExecutionContextERNS_14ExceptionStateE(%"class.blink::ExecutionContext"* nocapture readnone, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #11
  %4 = bitcast i8* %3 to %"class.blink::DOMMatrixReadOnly"*
  %5 = bitcast i8* %3 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to i64**
  store i64* null, i64** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17DOMMatrixReadOnlyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds i8, i8* %3, i64 16
  %9 = bitcast i8* %8 to double*
  store double 1.000000e+00, double* %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  %11 = getelementptr inbounds i8, i8* %3, i64 56
  %12 = bitcast i8* %11 to double*
  store double 1.000000e+00, double* %12, align 8
  %13 = getelementptr inbounds i8, i8* %3, i64 64
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false)
  %14 = getelementptr inbounds i8, i8* %3, i64 96
  %15 = bitcast i8* %14 to double*
  store double 1.000000e+00, double* %15, align 8
  %16 = getelementptr inbounds i8, i8* %3, i64 104
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false)
  %17 = getelementptr inbounds i8, i8* %3, i64 136
  %18 = bitcast i8* %17 to double*
  store double 1.000000e+00, double* %18, align 8
  %19 = getelementptr inbounds i8, i8* %3, i64 144
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds i8, i8* %3, i64 -4
  %21 = bitcast i8* %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  ret %"class.blink::DOMMatrixReadOnly"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrixReadOnly"* @_ZN5blink17DOMMatrixReadOnly6CreateEPNS_16ExecutionContextEPKNS_41V8UnionStringOrUnrestrictedDoubleSequenceERNS_14ExceptionStateE(%"class.blink::ExecutionContext"*, %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence", %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %45 [
    i32 0, label %7
    i32 1, label %37
  ]

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::ExecutionContext"* %0 to i1 (%"class.blink::ExecutionContext"*)***
  %9 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %9, i64 1
  %11 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::ExecutionContext"* %0) #11
  br i1 %12, label %14, label %13

13:                                               ; preds = %7
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2, i64 0, i64 0)) #11
  br label %45

14:                                               ; preds = %7
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #11
  %16 = bitcast i8* %15 to %"class.blink::DOMMatrixReadOnly"*
  %17 = bitcast i8* %15 to i32 (...)***
  %18 = getelementptr inbounds i8, i8* %15, i64 8
  %19 = bitcast i8* %18 to i64**
  store i64* null, i64** %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17DOMMatrixReadOnlyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %20 = getelementptr inbounds i8, i8* %15, i64 16
  %21 = bitcast i8* %20 to double*
  store double 1.000000e+00, double* %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 32, i1 false)
  %23 = getelementptr inbounds i8, i8* %15, i64 56
  %24 = bitcast i8* %23 to double*
  store double 1.000000e+00, double* %24, align 8
  %25 = getelementptr inbounds i8, i8* %15, i64 64
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false)
  %26 = getelementptr inbounds i8, i8* %15, i64 96
  %27 = bitcast i8* %26 to double*
  store double 1.000000e+00, double* %27, align 8
  %28 = getelementptr inbounds i8, i8* %15, i64 104
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 32, i1 false)
  %29 = getelementptr inbounds i8, i8* %15, i64 136
  %30 = bitcast i8* %29 to double*
  store double 1.000000e+00, double* %30, align 8
  %31 = getelementptr inbounds i8, i8* %15, i64 144
  store i8 1, i8* %31, align 8
  %32 = getelementptr inbounds i8, i8* %15, i64 -4
  %33 = bitcast i8* %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = or i16 %34, 1
  store atomic i16 %35, i16* %33 release, align 2
  %36 = getelementptr inbounds %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence", %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence"* %1, i64 0, i32 2
  tail call void @_ZN5blink17DOMMatrixReadOnly24SetMatrixValueFromStringEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %16, %"class.blink::ExecutionContext"* %0, %"class.WTF::String"* dereferenceable(8) %36, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %45

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence", %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence"* %1, i64 0, i32 3, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  switch i32 %39, label %40 [
    i32 6, label %41
    i32 16, label %41
  ]

40:                                               ; preds = %37
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.3, i64 0, i64 0)) #11
  br label %45

41:                                               ; preds = %37, %37
  %42 = getelementptr inbounds %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence", %"class.blink::V8UnionStringOrUnrestrictedDoubleSequence"* %1, i64 0, i32 3
  %43 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #11
  store i32 %39, i32* %4, align 4
  %44 = call %"class.blink::DOMMatrixReadOnly"* @_ZN5blink25MakeGarbageCollectedTraitINS_17DOMMatrixReadOnlyEE4CallIJRKN3WTF6VectorIdLj0ENS4_18PartitionAllocatorEEEjEEEPS1_DpOT_(%"class.WTF::Vector.567"* dereferenceable(16) %42, i32* nonnull dereferenceable(4) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #11
  br label %45

45:                                               ; preds = %3, %40, %41, %14, %13
  %46 = phi %"class.blink::DOMMatrixReadOnly"* [ %16, %14 ], [ null, %13 ], [ null, %40 ], [ %44, %41 ], [ null, %3 ]
  ret %"class.blink::DOMMatrixReadOnly"* %46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17DOMMatrixReadOnly24SetMatrixValueFromStringEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"*, %"class.blink::ExecutionContext"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = alloca %"class.blink::TransformOperations", align 8
  %9 = alloca %"class.blink::CSSToLengthConversionData", align 8
  %10 = alloca %"class.blink::FloatSize", align 4
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink17DOMMatrixReadOnly24SetMatrixValueFromStringEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateEE19s_identity_matrix2d to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17, !prof !3

13:                                               ; preds = %4
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink17DOMMatrixReadOnly24SetMatrixValueFromStringEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateEE19s_identity_matrix2d) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17DOMMatrixReadOnly24SetMatrixValueFromStringEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateEE19s_identity_matrix2d to %"class.WTF::String"*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.46, i64 0, i64 0), i64 24) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink17DOMMatrixReadOnly24SetMatrixValueFromStringEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateEE19s_identity_matrix2d) #11
  br label %17

17:                                               ; preds = %13, %16, %4
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %19, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %47, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %42

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #11
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !4

37:                                               ; preds = %28
  tail call void @llvm.trap() #11
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %23, %38
  %43 = phi %"class.WTF::StringImpl"* [ %40, %38 ], [ %21, %23 ]
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %87

47:                                               ; preds = %17, %38, %42
  %48 = phi %"class.WTF::StringImpl"* [ null, %17 ], [ null, %38 ], [ %43, %42 ]
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink17DOMMatrixReadOnly24SetMatrixValueFromStringEPKNS_16ExecutionContextERKN3WTF6StringERNS_14ExceptionStateEE19s_identity_matrix2d to %"class.WTF::StringImpl"**), align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %69, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %69

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #11
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !4

65:                                               ; preds = %56
  tail call void @llvm.trap() #11
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  br label %69

69:                                               ; preds = %66, %51, %47
  %70 = phi %"class.WTF::StringImpl"* [ %68, %66 ], [ %48, %51 ], [ %48, %47 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %49 to i64
  %72 = bitcast %"class.WTF::String"* %5 to i64*
  store i64 %71, i64* %72, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #11
  br label %87

87:                                               ; preds = %86, %83, %69, %42
  %88 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %1, i64 0, i32 6, i32 11
  %89 = load i32, i32* %88, align 8
  %90 = tail call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 %89) #11
  %91 = call %"class.blink::CSSValue"* @_ZN5blink9CSSParser16ParseSingleValueENS_13CSSPropertyIDERKN3WTF6StringEPKNS_16CSSParserContextE(i32 369, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::CSSParserContext"* %90) #11
  %92 = icmp eq %"class.blink::CSSValue"* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %91, i64 0, i32 2
  %95 = load i8, i8* %94, align 1
  %96 = and i8 %95, -4
  %97 = icmp eq i8 %96, 32
  br i1 %97, label %98, label %247

98:                                               ; preds = %87, %93
  %99 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #11
  %100 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #11
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %178, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %120

110:                                              ; preds = %103
  %111 = zext i32 %109 to i33
  %112 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #11
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !4

117:                                              ; preds = %110
  call void @llvm.trap() #11
  unreachable

118:                                              ; preds = %110
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %108, align 4
  br label %120

120:                                              ; preds = %118, %103
  %121 = phi i32 [ %119, %118 ], [ %109, %103 ]
  %122 = load atomic i32, i32* %104 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %135

125:                                              ; preds = %120
  %126 = zext i32 %121 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #11
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !4

132:                                              ; preds = %125
  call void @llvm.trap() #11
  unreachable

133:                                              ; preds = %125
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %108, align 4
  br label %135

135:                                              ; preds = %133, %120
  %136 = phi i32 [ %134, %133 ], [ %121, %120 ]
  %137 = load atomic i32, i32* %104 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %135
  %141 = add i32 %136, -1
  store i32 %141, i32* %108, align 4
  br label %142

142:                                              ; preds = %140, %135
  %143 = phi i32 [ %141, %140 ], [ %136, %135 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #11
  br label %146

146:                                              ; preds = %142, %145
  %147 = load atomic i32, i32* %104 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %161

150:                                              ; preds = %146
  %151 = load i32, i32* %108, align 4
  %152 = zext i32 %151 to i33
  %153 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %152, i33 1) #11
  %154 = extractvalue { i33, i1 } %153, 1
  %155 = extractvalue { i33, i1 } %153, 0
  %156 = icmp slt i33 %155, 0
  %157 = or i1 %154, %156
  br i1 %157, label %158, label %159, !prof !4

158:                                              ; preds = %150
  call void @llvm.trap() #11
  unreachable

159:                                              ; preds = %150
  %160 = trunc i33 %155 to i32
  store i32 %160, i32* %108, align 4
  br label %161

161:                                              ; preds = %146, %159
  %162 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([18 x i8]* @.str.34 to i64), i64* %162, align 8
  %163 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %163, align 8
  %164 = load atomic i32, i32* %104 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %182

167:                                              ; preds = %161
  %168 = load i32, i32* %108, align 4
  %169 = zext i32 %168 to i33
  %170 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %169, i33 1) #11
  %171 = extractvalue { i33, i1 } %170, 1
  %172 = extractvalue { i33, i1 } %170, 0
  %173 = icmp slt i33 %172, 0
  %174 = or i1 %171, %173
  br i1 %174, label %175, label %176, !prof !4

175:                                              ; preds = %167
  call void @llvm.trap() #11
  unreachable

176:                                              ; preds = %167
  %177 = trunc i33 %172 to i32
  store i32 %177, i32* %108, align 4
  br label %182

178:                                              ; preds = %98
  %179 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([18 x i8]* @.str.34 to i64), i64* %179, align 8
  %180 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %180, align 8
  %181 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8** %181, align 8
  br label %194

182:                                              ; preds = %176, %161
  %183 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8** %183, align 8
  %184 = load atomic i32, i32* %104 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = load i32, i32* %108, align 4
  br i1 %186, label %188, label %190

188:                                              ; preds = %182
  %189 = add i32 %187, -1
  store i32 %189, i32* %108, align 4
  br label %190

190:                                              ; preds = %188, %182
  %191 = phi i32 [ %189, %188 ], [ %187, %182 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #11
  br label %194

194:                                              ; preds = %178, %190, %193
  %195 = phi %"class.WTF::StringImpl"** [ %180, %178 ], [ %163, %190 ], [ %163, %193 ]
  %196 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %7)
  %197 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %196, %"class.WTF::StringImpl"** %197, align 8
  %198 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %199 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %198, align 8
  %200 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %199, align 8
  call void %200(%"class.blink::ExceptionState"* %3, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %6) #11
  %201 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %197, align 8
  %202 = icmp eq %"class.WTF::StringImpl"* %201, null
  br i1 %202, label %216, label %203

203:                                              ; preds = %194
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = and i32 %205, 2
  %207 = icmp eq i32 %206, 0
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %201, i64 0, i32 0
  %209 = load i32, i32* %208, align 4
  br i1 %207, label %210, label %212

210:                                              ; preds = %203
  %211 = add i32 %209, -1
  store i32 %211, i32* %208, align 4
  br label %212

212:                                              ; preds = %210, %203
  %213 = phi i32 [ %211, %210 ], [ %209, %203 ]
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %216

215:                                              ; preds = %212
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %201) #11
  br label %216

216:                                              ; preds = %194, %212, %215
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #11
  br label %232

232:                                              ; preds = %216, %228, %231
  br i1 %102, label %246, label %233

233:                                              ; preds = %232
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = and i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  br i1 %237, label %240, label %242

240:                                              ; preds = %233
  %241 = add i32 %239, -1
  store i32 %241, i32* %238, align 4
  br label %242

242:                                              ; preds = %240, %233
  %243 = phi i32 [ %241, %240 ], [ %239, %233 ]
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %242
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #11
  br label %246

246:                                              ; preds = %232, %242, %245
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #11
  br label %369

247:                                              ; preds = %93
  %248 = icmp eq i8 %95, 2
  br i1 %248, label %249, label %261

249:                                              ; preds = %247
  %250 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %250, align 8
  %251 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %252 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %253 = bitcast double* %251 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %253, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %252, align 8
  %254 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %255 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %256 = bitcast double* %254 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %256, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %255, align 8
  %257 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 3
  %258 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 3
  %259 = bitcast double* %257 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %259, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %258, align 8
  %260 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 2
  store i8 1, i8* %260, align 8
  br label %369

261:                                              ; preds = %247
  %262 = bitcast %"class.blink::CSSValue"* %91 to %"class.blink::CSSValueList"*
  %263 = call zeroext i1 @_ZN5blink16TransformBuilder18HasRelativeLengthsERKNS_12CSSValueListE(%"class.blink::CSSValueList"* nonnull dereferenceable(56) %262) #11
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 12, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.36, i64 0, i64 0)) #11
  br label %369

265:                                              ; preds = %261
  %266 = bitcast %"class.blink::TransformOperations"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %266) #11
  %267 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %268 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %269 = bitcast %"class.blink::CSSToLengthConversionData"* %9 to i8*
  %270 = bitcast %"class.blink::TransformOperations"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %270, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %269) #11
  %271 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %9, i64 0, i32 1, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %269, i8 0, i64 24, i1 false) #11
  store float 1.000000e+00, float* %271, align 8
  %272 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %9, i64 0, i32 2
  %273 = bitcast %"class.blink::CSSToLengthConversionData::ViewportSize"* %272 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %273, i8 0, i64 16, i1 false) #11
  %274 = getelementptr inbounds %"class.blink::CSSToLengthConversionData", %"class.blink::CSSToLengthConversionData"* %9, i64 0, i32 3
  store float 1.000000e+00, float* %274, align 8
  call void @_ZN5blink16TransformBuilder25CreateTransformOperationsERKNS_8CSSValueERKNS_25CSSToLengthConversionDataE(%"class.blink::TransformOperations"* nonnull sret %8, %"class.blink::CSSValue"* nonnull dereferenceable(3) %91, %"class.blink::CSSToLengthConversionData"* nonnull dereferenceable(56) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %269) #11
  %275 = call i32 @_ZNK5blink19TransformOperations19BoxSizeDependenciesEj(%"class.blink::TransformOperations"* nonnull %8, i32 0) #11
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %278, label %277

277:                                              ; preds = %265
  call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 12, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.37, i64 0, i64 0)) #11
  br label %332

278:                                              ; preds = %265
  %279 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1
  %280 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %279, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %280, align 8
  %281 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %282 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %283 = bitcast double* %281 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %283, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %282, align 8
  %284 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %285 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %286 = bitcast double* %284 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %286, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %285, align 8
  %287 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 3
  %288 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 3
  %289 = bitcast double* %287 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %289, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %288, align 8
  %290 = bitcast %"class.blink::FloatSize"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %290) #11
  %291 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %10, i64 0, i32 0
  store float 0.000000e+00, float* %291, align 4
  %292 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %10, i64 0, i32 1
  store float 0.000000e+00, float* %292, align 4
  %293 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %267, align 8
  %294 = load i32, i32* %268, align 4
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %293, i64 %295
  %297 = icmp eq i32 %294, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290) #11
  br label %329

299:                                              ; preds = %278, %299
  %300 = phi %class.scoped_refptr.638* [ %307, %299 ], [ %293, %278 ]
  %301 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %300, i64 0, i32 0
  %302 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %301, align 8
  %303 = bitcast %"class.blink::TransformOperation"* %302 to void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)***
  %304 = load void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)**, void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)*** %303, align 8
  %305 = getelementptr inbounds void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)*, void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)** %304, i64 3
  %306 = load void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)*, void (%"class.blink::TransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)** %305, align 8
  call void %306(%"class.blink::TransformOperation"* %302, %"class.blink::TransformationMatrix"* dereferenceable(128) %279, %"class.blink::FloatSize"* nonnull dereferenceable(8) %10) #11
  %307 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %300, i64 1
  %308 = icmp eq %class.scoped_refptr.638* %307, %296
  br i1 %308, label %309, label %299

309:                                              ; preds = %299
  %310 = load i32, i32* %268, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290) #11
  %311 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %267, align 8
  %312 = zext i32 %310 to i64
  %313 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %311, i64 %312
  %314 = icmp eq i32 %310, 0
  br i1 %314, label %329, label %317

315:                                              ; preds = %317
  %316 = icmp eq %class.scoped_refptr.638* %328, %313
  br i1 %316, label %329, label %317

317:                                              ; preds = %309, %315
  %318 = phi %class.scoped_refptr.638* [ %328, %315 ], [ %311, %309 ]
  %319 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %318, i64 0, i32 0
  %320 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %319, align 8
  %321 = bitcast %"class.blink::TransformOperation"* %320 to i32 (%"class.blink::TransformOperation"*)***
  %322 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %321, align 8
  %323 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %322, i64 7
  %324 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %323, align 8
  %325 = call i32 %324(%"class.blink::TransformOperation"* %320) #11
  %326 = add i32 %325, -11
  %327 = icmp ugt i32 %326, 9
  %328 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %318, i64 1
  br i1 %327, label %315, label %329

329:                                              ; preds = %315, %317, %298, %309
  %330 = phi i8 [ 1, %309 ], [ 1, %298 ], [ 0, %317 ], [ 1, %315 ]
  %331 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 2
  store i8 %330, i8* %331, align 8
  br label %332

332:                                              ; preds = %329, %277
  %333 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %267, align 8
  %334 = icmp eq %class.scoped_refptr.638* %333, null
  br i1 %334, label %368, label %335, !prof !5

335:                                              ; preds = %332
  %336 = bitcast %class.scoped_refptr.638* %333 to i8*
  %337 = load i32, i32* %268, align 4
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %366, label %339, !prof !4

339:                                              ; preds = %335
  %340 = zext i32 %337 to i64
  %341 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %333, i64 %340
  br label %342

342:                                              ; preds = %360, %339
  %343 = phi %class.scoped_refptr.638* [ %361, %360 ], [ %333, %339 ]
  %344 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %343, i64 0, i32 0
  %345 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %344, align 8
  %346 = icmp eq %"class.blink::TransformOperation"* %345, null
  br i1 %346, label %360, label %347

347:                                              ; preds = %342
  %348 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %345, i64 0, i32 1, i32 0
  %349 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %348, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %349) #11
  %350 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %348, i64 0, i32 0, i32 0
  %351 = load i32, i32* %350, align 4
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %360

353:                                              ; preds = %347
  %354 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %348, i64 -2
  %355 = bitcast %"class.base::RefCounted.483"* %354 to %"class.blink::TransformOperation"*
  %356 = bitcast %"class.base::RefCounted.483"* %354 to void (%"class.blink::TransformOperation"*)***
  %357 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %356, align 8
  %358 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %357, i64 1
  %359 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %358, align 8
  call void %359(%"class.blink::TransformOperation"* nonnull %355) #11
  br label %360

360:                                              ; preds = %353, %347, %342
  %361 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %343, i64 1
  %362 = icmp eq %class.scoped_refptr.638* %361, %341
  br i1 %362, label %363, label %342

363:                                              ; preds = %360
  store i32 0, i32* %268, align 4
  %364 = bitcast %"class.blink::TransformOperations"* %8 to i8**
  %365 = load i8*, i8** %364, align 8
  br label %366

366:                                              ; preds = %363, %335
  %367 = phi i8* [ %365, %363 ], [ %336, %335 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %367) #11
  store %class.scoped_refptr.638* null, %class.scoped_refptr.638** %267, align 8
  br label %368

368:                                              ; preds = %332, %366
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %266) #11
  br label %369

369:                                              ; preds = %249, %368, %264, %246
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %371 = icmp eq %"class.WTF::StringImpl"* %370, null
  br i1 %371, label %385, label %372

372:                                              ; preds = %369
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = load atomic i32, i32* %373 monotonic, align 4
  %375 = and i32 %374, 2
  %376 = icmp eq i32 %375, 0
  %377 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %370, i64 0, i32 0
  %378 = load i32, i32* %377, align 4
  br i1 %376, label %379, label %381

379:                                              ; preds = %372
  %380 = add i32 %378, -1
  store i32 %380, i32* %377, align 4
  br label %381

381:                                              ; preds = %379, %372
  %382 = phi i32 [ %380, %379 ], [ %378, %372 ]
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %384, label %385

384:                                              ; preds = %381
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %370) #11
  br label %385

385:                                              ; preds = %369, %381, %384
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrixReadOnly"* @_ZN5blink17DOMMatrixReadOnly22CreateForSerializationEPdi(double*, i32) local_unnamed_addr #1 align 2 {
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #11
  %4 = bitcast i8* %3 to %"class.blink::DOMMatrixReadOnly"*
  tail call void @_ZN5blink17DOMMatrixReadOnlyC2IPdEET_i(%"class.blink::DOMMatrixReadOnly"* %4, double* %0, i32 %1) #11
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  ret %"class.blink::DOMMatrixReadOnly"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrixReadOnly"* @_ZN5blink17DOMMatrixReadOnly16fromFloat32ArrayENS_9NotSharedINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEERNS_14ExceptionStateE(%"class.blink::NotShared"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %4, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 6, label %14
    i64 16, label %14
  ]

13:                                               ; preds = %10, %2
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %1, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.4, i64 0, i64 0)) #11
  br label %25

14:                                               ; preds = %10, %10
  %15 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %4, i64 0, i32 0, i32 1
  %16 = bitcast i8** %15 to float**
  %17 = load float*, float** %16, align 8
  %18 = trunc i64 %12 to i32
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #11
  %20 = bitcast i8* %19 to %"class.blink::DOMMatrixReadOnly"*
  tail call void @_ZN5blink17DOMMatrixReadOnlyC2IPfEET_i(%"class.blink::DOMMatrixReadOnly"* %20, float* %17, i32 %18) #11
  %21 = getelementptr inbounds i8, i8* %19, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = or i16 %23, 1
  store atomic i16 %24, i16* %22 release, align 2
  br label %25

25:                                               ; preds = %14, %13
  %26 = phi %"class.blink::DOMMatrixReadOnly"* [ null, %13 ], [ %20, %14 ]
  ret %"class.blink::DOMMatrixReadOnly"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrixReadOnly"* @_ZN5blink17DOMMatrixReadOnly16fromFloat64ArrayENS_9NotSharedINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEEEERNS_14ExceptionStateE(%"class.blink::NotShared.1988"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::NotShared.1988", %"class.blink::NotShared.1988"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::DOMTypedArray.1991"*, %"class.blink::DOMTypedArray.1991"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DOMTypedArray.1991", %"class.blink::DOMTypedArray.1991"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::DOMTypedArray.1991", %"class.blink::DOMTypedArray.1991"* %4, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 6, label %14
    i64 16, label %14
  ]

13:                                               ; preds = %10, %2
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %1, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.3, i64 0, i64 0)) #11
  br label %25

14:                                               ; preds = %10, %10
  %15 = getelementptr inbounds %"class.blink::DOMTypedArray.1991", %"class.blink::DOMTypedArray.1991"* %4, i64 0, i32 0, i32 1
  %16 = bitcast i8** %15 to double**
  %17 = load double*, double** %16, align 8
  %18 = trunc i64 %12 to i32
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #11
  %20 = bitcast i8* %19 to %"class.blink::DOMMatrixReadOnly"*
  tail call void @_ZN5blink17DOMMatrixReadOnlyC2IPdEET_i(%"class.blink::DOMMatrixReadOnly"* %20, double* %17, i32 %18) #11
  %21 = getelementptr inbounds i8, i8* %19, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = or i16 %23, 1
  store atomic i16 %24, i16* %22 release, align 2
  br label %25

25:                                               ; preds = %14, %13
  %26 = phi %"class.blink::DOMMatrixReadOnly"* [ null, %13 ], [ %20, %14 ]
  ret %"class.blink::DOMMatrixReadOnly"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrixReadOnly"* @_ZN5blink17DOMMatrixReadOnly12fromMatrix2DEPNS_15DOMMatrix2DInitERNS_14ExceptionStateE(%"class.blink::DOMMatrix2DInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = tail call zeroext i1 @_ZN5blink17DOMMatrixReadOnly18ValidateAndFixup2DEPNS_15DOMMatrix2DInitE(%"class.blink::DOMMatrix2DInit"* %0)
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #11
  br label %37

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 19
  %7 = bitcast double* %6 to <2 x i64>*
  %8 = load <2 x i64>, <2 x i64>* %7, align 8
  %9 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 21
  %10 = bitcast double* %9 to <2 x i64>*
  %11 = load <2 x i64>, <2 x i64>* %10, align 8
  %12 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 23
  %13 = bitcast double* %12 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #11
  %16 = bitcast i8* %15 to %"class.blink::DOMMatrixReadOnly"*
  %17 = bitcast i8* %15 to i32 (...)***
  %18 = getelementptr inbounds i8, i8* %15, i64 8
  %19 = bitcast i8* %18 to i64**
  store i64* null, i64** %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17DOMMatrixReadOnlyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %20 = getelementptr inbounds i8, i8* %15, i64 16
  %21 = getelementptr inbounds i8, i8* %15, i64 64
  %22 = getelementptr inbounds i8, i8* %15, i64 96
  %23 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> %8, <2 x i64>* %23, align 8
  %24 = getelementptr inbounds i8, i8* %15, i64 32
  %25 = getelementptr inbounds i8, i8* %15, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #11
  %26 = bitcast i8* %25 to <2 x i64>*
  store <2 x i64> %11, <2 x i64>* %26, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #11
  %27 = bitcast i8* %22 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %27, align 8
  %28 = getelementptr inbounds i8, i8* %15, i64 112
  %29 = bitcast i8* %28 to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %29, align 8
  %30 = getelementptr inbounds i8, i8* %15, i64 128
  %31 = bitcast i8* %30 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %31, align 8
  %32 = getelementptr inbounds i8, i8* %15, i64 144
  store i8 1, i8* %32, align 8
  %33 = getelementptr inbounds i8, i8* %15, i64 -4
  %34 = bitcast i8* %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = or i16 %35, 1
  store atomic i16 %36, i16* %34 release, align 2
  br label %37

37:                                               ; preds = %5, %4
  %38 = phi %"class.blink::DOMMatrixReadOnly"* [ %16, %5 ], [ null, %4 ]
  ret %"class.blink::DOMMatrixReadOnly"* %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrixReadOnly"* @_ZN5blink17DOMMatrixReadOnly10fromMatrixEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::DOMMatrixInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = tail call zeroext i1 @_ZN5blink17DOMMatrixReadOnly16ValidateAndFixupEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::DOMMatrixInit"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %1)
  br i1 %3, label %4, label %92

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 12
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0, i32 19
  %9 = bitcast double* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0, i32 20
  %12 = bitcast double* %11 to i64*
  %13 = load i64, i64* %12, align 8
  br i1 %7, label %39, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0, i32 21
  %16 = bitcast double* %15 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0, i32 23
  %19 = bitcast double* %18 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 8
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #11
  %22 = bitcast i8* %21 to i32 (...)***
  %23 = getelementptr inbounds i8, i8* %21, i64 8
  %24 = bitcast i8* %23 to i64**
  store i64* null, i64** %24, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17DOMMatrixReadOnlyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %25 = getelementptr inbounds i8, i8* %21, i64 16
  %26 = getelementptr inbounds i8, i8* %21, i64 24
  %27 = getelementptr inbounds i8, i8* %21, i64 64
  %28 = getelementptr inbounds i8, i8* %21, i64 96
  %29 = bitcast i8* %25 to i64*
  store i64 %10, i64* %29, align 8
  %30 = bitcast i8* %26 to i64*
  store i64 %13, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %21, i64 32
  %32 = getelementptr inbounds i8, i8* %21, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #11
  %33 = bitcast i8* %32 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %33, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #11
  %34 = bitcast i8* %28 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %34, align 8
  %35 = getelementptr inbounds i8, i8* %21, i64 112
  %36 = bitcast i8* %35 to <2 x i64>*
  store <2 x i64> %20, <2 x i64>* %36, align 8
  %37 = getelementptr inbounds i8, i8* %21, i64 128
  %38 = bitcast i8* %37 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %38, align 8
  br label %83

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 13
  %41 = bitcast double* %40 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  %43 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0, i32 21
  %44 = bitcast double* %43 to <2 x i64>*
  %45 = load <2 x i64>, <2 x i64>* %44, align 8
  %46 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 15
  %47 = bitcast double* %46 to <2 x i64>*
  %48 = load <2 x i64>, <2 x i64>* %47, align 8
  %49 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 17
  %50 = bitcast double* %49 to <2 x i64>*
  %51 = load <2 x i64>, <2 x i64>* %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 19
  %53 = bitcast double* %52 to <2 x i64>*
  %54 = load <2 x i64>, <2 x i64>* %53, align 8
  %55 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 0, i32 23
  %56 = bitcast double* %55 to <2 x i64>*
  %57 = load <2 x i64>, <2 x i64>* %56, align 8
  %58 = getelementptr inbounds %"class.blink::DOMMatrixInit", %"class.blink::DOMMatrixInit"* %0, i64 0, i32 21
  %59 = bitcast double* %58 to <2 x i64>*
  %60 = load <2 x i64>, <2 x i64>* %59, align 8
  %61 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #11
  %62 = bitcast i8* %61 to i32 (...)***
  %63 = getelementptr inbounds i8, i8* %61, i64 8
  %64 = bitcast i8* %63 to i64**
  store i64* null, i64** %64, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17DOMMatrixReadOnlyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %65 = getelementptr inbounds i8, i8* %61, i64 16
  %66 = getelementptr inbounds i8, i8* %61, i64 24
  %67 = getelementptr inbounds i8, i8* %61, i64 64
  %68 = getelementptr inbounds i8, i8* %61, i64 96
  %69 = bitcast i8* %65 to i64*
  store i64 %10, i64* %69, align 8
  %70 = bitcast i8* %66 to i64*
  store i64 %13, i64* %70, align 8
  %71 = getelementptr inbounds i8, i8* %61, i64 32
  %72 = bitcast i8* %71 to <2 x i64>*
  store <2 x i64> %42, <2 x i64>* %72, align 8
  %73 = getelementptr inbounds i8, i8* %61, i64 48
  %74 = bitcast i8* %73 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %74, align 8
  %75 = bitcast i8* %67 to <2 x i64>*
  store <2 x i64> %48, <2 x i64>* %75, align 8
  %76 = getelementptr inbounds i8, i8* %61, i64 80
  %77 = bitcast i8* %76 to <2 x i64>*
  store <2 x i64> %51, <2 x i64>* %77, align 8
  %78 = bitcast i8* %68 to <2 x i64>*
  store <2 x i64> %54, <2 x i64>* %78, align 8
  %79 = getelementptr inbounds i8, i8* %61, i64 112
  %80 = bitcast i8* %79 to <2 x i64>*
  store <2 x i64> %57, <2 x i64>* %80, align 8
  %81 = getelementptr inbounds i8, i8* %61, i64 128
  %82 = bitcast i8* %81 to <2 x i64>*
  store <2 x i64> %60, <2 x i64>* %82, align 8
  br label %83

83:                                               ; preds = %14, %39
  %84 = phi i8* [ %21, %14 ], [ %61, %39 ]
  %85 = phi i8 [ 1, %14 ], [ 0, %39 ]
  %86 = bitcast i8* %84 to %"class.blink::DOMMatrixReadOnly"*
  %87 = getelementptr inbounds i8, i8* %84, i64 144
  store i8 %85, i8* %87, align 8
  %88 = getelementptr inbounds i8, i8* %84, i64 -4
  %89 = bitcast i8* %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = or i16 %90, 1
  store atomic i16 %91, i16* %89 release, align 2
  br label %92

92:                                               ; preds = %83, %2
  %93 = phi %"class.blink::DOMMatrixReadOnly"* [ null, %2 ], [ %86, %83 ]
  ret %"class.blink::DOMMatrixReadOnly"* %93
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink17DOMMatrixReadOnlyD2Ev(%"class.blink::DOMMatrixReadOnly"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink17DOMMatrixReadOnlyD0Ev(%"class.blink::DOMMatrixReadOnly"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17DOMMatrixReadOnly4is2DEv(%"class.blink::DOMMatrixReadOnly"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17DOMMatrixReadOnly10isIdentityEv(%"class.blink::DOMMatrixReadOnly"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 0
  %3 = load double, double* %2, align 8
  %4 = fcmp oeq double %3, 1.000000e+00
  br i1 %4, label %5, label %65

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %7 = load double, double* %6, align 8
  %8 = fcmp oeq double %7, 0.000000e+00
  br i1 %8, label %9, label %65

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %11 = load double, double* %10, align 8
  %12 = fcmp oeq double %11, 0.000000e+00
  br i1 %12, label %13, label %65

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 3
  %15 = load double, double* %14, align 8
  %16 = fcmp oeq double %15, 0.000000e+00
  br i1 %16, label %17, label %65

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %19 = load double, double* %18, align 8
  %20 = fcmp oeq double %19, 0.000000e+00
  br i1 %20, label %21, label %65

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %23 = load double, double* %22, align 8
  %24 = fcmp oeq double %23, 1.000000e+00
  br i1 %24, label %25, label %65

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %27 = load double, double* %26, align 8
  %28 = fcmp oeq double %27, 0.000000e+00
  br i1 %28, label %29, label %65

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 3
  %31 = load double, double* %30, align 8
  %32 = fcmp oeq double %31, 0.000000e+00
  br i1 %32, label %33, label %65

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %35 = load double, double* %34, align 8
  %36 = fcmp oeq double %35, 0.000000e+00
  br i1 %36, label %37, label %65

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 1
  %39 = load double, double* %38, align 8
  %40 = fcmp oeq double %39, 0.000000e+00
  br i1 %40, label %41, label %65

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %43 = load double, double* %42, align 8
  %44 = fcmp oeq double %43, 1.000000e+00
  br i1 %44, label %45, label %65

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 3
  %47 = load double, double* %46, align 8
  %48 = fcmp oeq double %47, 0.000000e+00
  br i1 %48, label %49, label %65

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %51 = load double, double* %50, align 8
  %52 = fcmp oeq double %51, 0.000000e+00
  br i1 %52, label %53, label %65

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 1
  %55 = load double, double* %54, align 8
  %56 = fcmp oeq double %55, 0.000000e+00
  br i1 %56, label %57, label %65

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %59 = load double, double* %58, align 8
  %60 = fcmp oeq double %59, 0.000000e+00
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 3
  %63 = load double, double* %62, align 8
  %64 = fcmp oeq double %63, 1.000000e+00
  br label %65

65:                                               ; preds = %1, %5, %9, %13, %17, %21, %25, %29, %33, %37, %41, %45, %49, %53, %57, %61
  %66 = phi i1 [ false, %57 ], [ false, %53 ], [ false, %49 ], [ false, %45 ], [ false, %41 ], [ false, %37 ], [ false, %33 ], [ false, %29 ], [ false, %25 ], [ false, %21 ], [ false, %17 ], [ false, %13 ], [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %64, %61 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly8multiplyEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"*, %"class.blink::DOMMatrixInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %8, align 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringImpl"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  %12 = bitcast i8** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  %14 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %13) #11
  %15 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix12multiplySelfEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::DOMMatrix"* %14, %"class.blink::DOMMatrixInit"* %1, %"class.blink::ExceptionState"* dereferenceable(72) %2) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #11
  ret %"class.blink::DOMMatrix"* %15
}

declare %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix12multiplySelfEPNS_13DOMMatrixInitERNS_14ExceptionStateE(%"class.blink::DOMMatrix"*, %"class.blink::DOMMatrixInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 3
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = bitcast %"class.v8::Isolate"* %14 to %"class.v8::internal::Isolate"*
  %16 = load i64, i64* %10, align 8
  %17 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %15, i64 %16) #11
  %18 = tail call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %14) #11
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast i64* %17 to %"class.v8::Value"*
  %21 = tail call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %14, %"class.v8::Value"* %20) #11
  br label %22

22:                                               ; preds = %19, %12, %8
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %39

39:                                               ; preds = %22, %35, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly9translateEddd(%"class.blink::DOMMatrixReadOnly"*, double, double, double) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %6 = bitcast %"class.blink::DummyExceptionStateForTesting"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %8, align 8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %9, align 2
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 2
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %12 = bitcast %"class.WTF::StringImpl"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #11
  %13 = bitcast i8** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %14 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0
  %15 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #11
  %16 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix13translateSelfEddd(%"class.blink::DOMMatrix"* %15, double %1, double %2, double %3) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #11
  ret %"class.blink::DOMMatrix"* %16
}

declare %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix13translateSelfEddd(%"class.blink::DOMMatrix"*, double, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly5scaleEd(%"class.blink::DOMMatrixReadOnly"*, double) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %7, align 2
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringImpl"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %11 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %13 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #11
  %14 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix9scaleSelfEdddddd(%"class.blink::DOMMatrix"* %13, double %1, double %1, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #11
  ret %"class.blink::DOMMatrix"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly5scaleEdddddd(%"class.blink::DOMMatrixReadOnly"*, double, double, double, double, double, double) local_unnamed_addr #1 align 2 {
  %8 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %9 = bitcast %"class.blink::DummyExceptionStateForTesting"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %11, align 8
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 2
  %14 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %15 = bitcast %"class.WTF::StringImpl"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #11
  %16 = bitcast i8** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %17 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0
  %18 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %17) #11
  %19 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix9scaleSelfEdddddd(%"class.blink::DOMMatrix"* %18, double %1, double %2, double %3, double %4, double %5, double %6) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #11
  ret %"class.blink::DOMMatrix"* %19
}

declare %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix9scaleSelfEdddddd(%"class.blink::DOMMatrix"*, double, double, double, double, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly7scale3dEdddd(%"class.blink::DOMMatrixReadOnly"*, double, double, double, double) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %7 = bitcast %"class.blink::DummyExceptionStateForTesting"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %9, align 8
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %10, align 2
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 2
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  %13 = bitcast %"class.WTF::StringImpl"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #11
  %14 = bitcast i8** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %15 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0
  %16 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %15) #11
  %17 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix11scale3dSelfEdddd(%"class.blink::DOMMatrix"* %16, double %1, double %2, double %3, double %4) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #11
  ret %"class.blink::DOMMatrix"* %17
}

declare %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix11scale3dSelfEdddd(%"class.blink::DOMMatrix"*, double, double, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly15scaleNonUniformEdd(%"class.blink::DOMMatrixReadOnly"*, double, double) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %8, align 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringImpl"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  %12 = bitcast i8** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  %14 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %13) #11
  %15 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix9scaleSelfEdddddd(%"class.blink::DOMMatrix"* %14, double %1, double %2, double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #11
  ret %"class.blink::DOMMatrix"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly6rotateEd(%"class.blink::DOMMatrixReadOnly"*, double) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %7, align 2
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringImpl"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %11 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %13 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #11
  %14 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10rotateSelfEd(%"class.blink::DOMMatrix"* %13, double %1) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #11
  ret %"class.blink::DOMMatrix"* %14
}

declare %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10rotateSelfEd(%"class.blink::DOMMatrix"*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly6rotateEdd(%"class.blink::DOMMatrixReadOnly"*, double, double) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %8, align 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringImpl"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  %12 = bitcast i8** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  %14 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %13) #11
  %15 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10rotateSelfEdd(%"class.blink::DOMMatrix"* %14, double %1, double %2) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #11
  ret %"class.blink::DOMMatrix"* %15
}

declare %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10rotateSelfEdd(%"class.blink::DOMMatrix"*, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly6rotateEddd(%"class.blink::DOMMatrixReadOnly"*, double, double, double) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %6 = bitcast %"class.blink::DummyExceptionStateForTesting"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %8, align 8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %9, align 2
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 1, i32 2
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %12 = bitcast %"class.WTF::StringImpl"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #11
  %13 = bitcast i8** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %14 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %5, i64 0, i32 0
  %15 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %14) #11
  %16 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10rotateSelfEddd(%"class.blink::DOMMatrix"* %15, double %1, double %2, double %3) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %6) #11
  ret %"class.blink::DOMMatrix"* %16
}

declare %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10rotateSelfEddd(%"class.blink::DOMMatrix"*, double, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly16rotateFromVectorEdd(%"class.blink::DOMMatrixReadOnly"*, double, double) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %5 = bitcast %"class.blink::DummyExceptionStateForTesting"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %8, align 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 1, i32 2
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringImpl"** %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  %12 = bitcast i8** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %4, i64 0, i32 0
  %14 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %13) #11
  %15 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix20rotateFromVectorSelfEdd(%"class.blink::DOMMatrix"* %14, double %1, double %2) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #11
  ret %"class.blink::DOMMatrix"* %15
}

declare %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix20rotateFromVectorSelfEdd(%"class.blink::DOMMatrix"*, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly15rotateAxisAngleEdddd(%"class.blink::DOMMatrixReadOnly"*, double, double, double, double) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %7 = bitcast %"class.blink::DummyExceptionStateForTesting"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %9, align 8
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %10, align 2
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 2
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  %13 = bitcast %"class.WTF::StringImpl"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #11
  %14 = bitcast i8** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %15 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0
  %16 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %15) #11
  %17 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix19rotateAxisAngleSelfEdddd(%"class.blink::DOMMatrix"* %16, double %1, double %2, double %3, double %4) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #11
  ret %"class.blink::DOMMatrix"* %17
}

declare %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix19rotateAxisAngleSelfEdddd(%"class.blink::DOMMatrix"*, double, double, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly5skewXEd(%"class.blink::DOMMatrixReadOnly"*, double) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %7, align 2
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringImpl"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %11 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %13 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #11
  %14 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix9skewXSelfEd(%"class.blink::DOMMatrix"* %13, double %1) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #11
  ret %"class.blink::DOMMatrix"* %14
}

declare %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix9skewXSelfEd(%"class.blink::DOMMatrix"*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly5skewYEd(%"class.blink::DOMMatrixReadOnly"*, double) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %7, align 2
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = bitcast %"class.WTF::StringImpl"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %11 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %13 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %12) #11
  %14 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix9skewYSelfEd(%"class.blink::DOMMatrix"* %13, double %1) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #11
  ret %"class.blink::DOMMatrix"* %14
}

declare %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix9skewYSelfEd(%"class.blink::DOMMatrix"*, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly5flipXEv(%"class.blink::DOMMatrixReadOnly"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %3 = bitcast %"class.blink::DummyExceptionStateForTesting"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %5, align 8
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %6, align 2
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 2
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  %9 = bitcast %"class.WTF::StringImpl"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11
  %10 = bitcast i8** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0
  %12 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %11) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %3) #11
  %13 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 0
  %14 = load double, double* %13, align 8
  %15 = fsub double -0.000000e+00, %14
  %16 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0, i64 0
  store double %15, double* %16, align 8
  %17 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %18 = load double, double* %17, align 8
  %19 = fsub double -0.000000e+00, %18
  %20 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0, i64 1
  store double %19, double* %20, align 8
  %21 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %22 = load double, double* %21, align 8
  %23 = fsub double -0.000000e+00, %22
  %24 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0, i64 2
  store double %23, double* %24, align 8
  %25 = fcmp oeq double %22, 0.000000e+00
  call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %12, i1 zeroext %25) #11
  %26 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 3
  %27 = load double, double* %26, align 8
  %28 = fsub double -0.000000e+00, %27
  %29 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0, i64 3
  store double %28, double* %29, align 8
  %30 = fcmp oeq double %27, 0.000000e+00
  call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %12, i1 zeroext %30) #11
  ret %"class.blink::DOMMatrix"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly5flipYEv(%"class.blink::DOMMatrixReadOnly"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %3 = bitcast %"class.blink::DummyExceptionStateForTesting"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %5, align 8
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %6, align 2
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 2
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  %9 = bitcast %"class.WTF::StringImpl"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11
  %10 = bitcast i8** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0
  %12 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %11) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %3) #11
  %13 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %14 = load double, double* %13, align 8
  %15 = fsub double -0.000000e+00, %14
  %16 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i64 1, i64 0
  store double %15, double* %16, align 8
  %17 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %18 = load double, double* %17, align 8
  %19 = fsub double -0.000000e+00, %18
  %20 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i64 1, i64 1
  store double %19, double* %20, align 8
  %21 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %22 = load double, double* %21, align 8
  %23 = fsub double -0.000000e+00, %22
  %24 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i64 1, i64 2
  store double %23, double* %24, align 8
  %25 = fcmp oeq double %22, 0.000000e+00
  call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %12, i1 zeroext %25) #11
  %26 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 3
  %27 = load double, double* %26, align 8
  %28 = fsub double -0.000000e+00, %27
  %29 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i64 1, i64 3
  store double %28, double* %29, align 8
  %30 = fcmp oeq double %27, 0.000000e+00
  call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %12, i1 zeroext %30) #11
  ret %"class.blink::DOMMatrix"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix"* @_ZN5blink17DOMMatrixReadOnly7inverseEv(%"class.blink::DOMMatrixReadOnly"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %3 = bitcast %"class.blink::DummyExceptionStateForTesting"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %5, align 8
  %6 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %6, align 2
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 1, i32 2
  %8 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0, i32 5, i32 0, i32 0
  %9 = bitcast %"class.WTF::StringImpl"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #11
  %10 = bitcast i8** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %2, i64 0, i32 0
  %12 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix6CreateEPNS_17DOMMatrixReadOnlyERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %11) #11
  %13 = call %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10invertSelfEv(%"class.blink::DOMMatrix"* %12) #11
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %3) #11
  ret %"class.blink::DOMMatrix"* %13
}

declare %"class.blink::DOMMatrix"* @_ZN5blink9DOMMatrix10invertSelfEv(%"class.blink::DOMMatrix"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMPoint"* @_ZN5blink17DOMMatrixReadOnly14transformPointEPKNS_12DOMPointInitE(%"class.blink::DOMMatrixReadOnly"* readonly, %"class.blink::DOMPointInit"* readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp ne i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 8
  %7 = load double, double* %6, align 8
  %8 = fcmp oeq double %7, 0.000000e+00
  %9 = and i1 %5, %8
  br i1 %9, label %10, label %40

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 5
  %12 = load double, double* %11, align 8
  %13 = fcmp oeq double %12, 1.000000e+00
  br i1 %13, label %14, label %40

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 6
  %16 = load double, double* %15, align 8
  %17 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 0
  %18 = load double, double* %17, align 8
  %19 = fmul double %16, %18
  %20 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 7
  %21 = load double, double* %20, align 8
  %22 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %23 = load double, double* %22, align 8
  %24 = fmul double %21, %23
  %25 = fadd double %19, %24
  %26 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %27 = load double, double* %26, align 8
  %28 = fadd double %27, %25
  %29 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %30 = load double, double* %29, align 8
  %31 = fmul double %16, %30
  %32 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %33 = load double, double* %32, align 8
  %34 = fmul double %21, %33
  %35 = fadd double %31, %34
  %36 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 1
  %37 = load double, double* %36, align 8
  %38 = fadd double %37, %35
  %39 = tail call %"class.blink::DOMPoint"* @_ZN5blink8DOMPoint6CreateEdddd(double %28, double %38, double 0.000000e+00, double 1.000000e+00) #11
  br label %108

40:                                               ; preds = %2, %10
  %41 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 6
  %42 = load double, double* %41, align 8
  %43 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 0
  %44 = load double, double* %43, align 8
  %45 = fmul double %42, %44
  %46 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 7
  %47 = load double, double* %46, align 8
  %48 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %49 = load double, double* %48, align 8
  %50 = fmul double %47, %49
  %51 = fadd double %45, %50
  %52 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %53 = load double, double* %52, align 8
  %54 = fmul double %7, %53
  %55 = fadd double %51, %54
  %56 = getelementptr inbounds %"class.blink::DOMPointInit", %"class.blink::DOMPointInit"* %1, i64 0, i32 5
  %57 = load double, double* %56, align 8
  %58 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %59 = load double, double* %58, align 8
  %60 = fmul double %57, %59
  %61 = fadd double %55, %60
  %62 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %63 = load double, double* %62, align 8
  %64 = fmul double %42, %63
  %65 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %66 = load double, double* %65, align 8
  %67 = fmul double %47, %66
  %68 = fadd double %64, %67
  %69 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 1
  %70 = load double, double* %69, align 8
  %71 = fmul double %7, %70
  %72 = fadd double %68, %71
  %73 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 1
  %74 = load double, double* %73, align 8
  %75 = fmul double %57, %74
  %76 = fadd double %72, %75
  %77 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %78 = load double, double* %77, align 8
  %79 = fmul double %42, %78
  %80 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %81 = load double, double* %80, align 8
  %82 = fmul double %47, %81
  %83 = fadd double %79, %82
  %84 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %85 = load double, double* %84, align 8
  %86 = fmul double %7, %85
  %87 = fadd double %83, %86
  %88 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %89 = load double, double* %88, align 8
  %90 = fmul double %57, %89
  %91 = fadd double %87, %90
  %92 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 3
  %93 = load double, double* %92, align 8
  %94 = fmul double %42, %93
  %95 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 3
  %96 = load double, double* %95, align 8
  %97 = fmul double %47, %96
  %98 = fadd double %94, %97
  %99 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 3
  %100 = load double, double* %99, align 8
  %101 = fmul double %7, %100
  %102 = fadd double %98, %101
  %103 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 3
  %104 = load double, double* %103, align 8
  %105 = fmul double %57, %104
  %106 = fadd double %102, %105
  %107 = tail call %"class.blink::DOMPoint"* @_ZN5blink8DOMPoint6CreateEdddd(double %61, double %76, double %91, double %106) #11
  br label %108

108:                                              ; preds = %40, %14
  %109 = phi %"class.blink::DOMPoint"* [ %39, %14 ], [ %107, %40 ]
  ret %"class.blink::DOMPoint"* %109
}

declare %"class.blink::DOMPoint"* @_ZN5blink8DOMPoint6CreateEdddd(double, double, double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17DOMMatrixReadOnlyC2ERKNS_20TransformationMatrixEb(%"class.blink::DOMMatrixReadOnly"* nocapture, %"class.blink::TransformationMatrix"* nocapture readonly dereferenceable(128), i1 zeroext) unnamed_addr #1 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17DOMMatrixReadOnlyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1
  %8 = bitcast %"class.blink::TransformationMatrix"* %7 to i8*
  %9 = bitcast %"class.blink::TransformationMatrix"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 128, i1 false) #11
  %10 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 2
  store i8 %4, i8* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17DOMMatrixReadOnly14toFloat32ArrayEv(%"class.blink::NotShared"* noalias nocapture sret, %"class.blink::DOMMatrixReadOnly"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca [16 x float], align 16
  %4 = bitcast [16 x float]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 0, i64 0
  %6 = bitcast double* %5 to <4 x double>*
  %7 = load <4 x double>, <4 x double>* %6, align 8
  %8 = fptrunc <4 x double> %7 to <4 x float>
  %9 = bitcast [16 x float]* %3 to <4 x float>*
  store <4 x float> %8, <4 x float>* %9, align 16
  %10 = getelementptr inbounds [16 x float], [16 x float]* %3, i64 0, i64 4
  %11 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %12 = bitcast double* %11 to <4 x double>*
  %13 = load <4 x double>, <4 x double>* %12, align 8
  %14 = fptrunc <4 x double> %13 to <4 x float>
  %15 = bitcast float* %10 to <4 x float>*
  store <4 x float> %14, <4 x float>* %15, align 16
  %16 = getelementptr inbounds [16 x float], [16 x float]* %3, i64 0, i64 8
  %17 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %18 = bitcast double* %17 to <4 x double>*
  %19 = load <4 x double>, <4 x double>* %18, align 8
  %20 = fptrunc <4 x double> %19 to <4 x float>
  %21 = bitcast float* %16 to <4 x float>*
  store <4 x float> %20, <4 x float>* %21, align 16
  %22 = getelementptr inbounds [16 x float], [16 x float]* %3, i64 0, i64 12
  %23 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %24 = bitcast double* %23 to <4 x double>*
  %25 = load <4 x double>, <4 x double>* %24, align 8
  %26 = fptrunc <4 x double> %25 to <4 x float>
  %27 = bitcast float* %22 to <4 x float>*
  store <4 x float> %26, <4 x float>* %27, align 16
  %28 = call %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateEPKvm(i8* nonnull %4, i64 64) #11
  %29 = bitcast %"class.blink::DOMArrayBuffer"* %28 to %"class.blink::DOMArrayBufferBase"*
  %30 = call %"class.blink::DOMTypedArray"* @_ZN5blink13DOMTypedArrayIfN2v812Float32ArrayELb0EE6CreateEPNS_18DOMArrayBufferBaseEmm(%"class.blink::DOMArrayBufferBase"* %29, i64 0, i64 16) #11
  %31 = getelementptr inbounds %"class.blink::NotShared", %"class.blink::NotShared"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray"* %30, %"class.blink::DOMTypedArray"** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17DOMMatrixReadOnly14toFloat64ArrayEv(%"class.blink::NotShared.1988"* noalias nocapture sret, %"class.blink::DOMMatrixReadOnly"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca [16 x double], align 16
  %4 = bitcast [16 x double]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1
  %6 = bitcast %"class.blink::TransformationMatrix"* %5 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = bitcast [16 x double]* %3 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %8, align 16
  %9 = getelementptr inbounds [16 x double], [16 x double]* %3, i64 0, i64 2
  %10 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %11 = bitcast double* %10 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8
  %13 = bitcast double* %9 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %13, align 16
  %14 = getelementptr inbounds [16 x double], [16 x double]* %3, i64 0, i64 4
  %15 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %16 = bitcast double* %15 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %16, align 8
  %18 = bitcast double* %14 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %18, align 16
  %19 = getelementptr inbounds [16 x double], [16 x double]* %3, i64 0, i64 6
  %20 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %21 = bitcast double* %20 to <2 x i64>*
  %22 = load <2 x i64>, <2 x i64>* %21, align 8
  %23 = bitcast double* %19 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %23, align 16
  %24 = getelementptr inbounds [16 x double], [16 x double]* %3, i64 0, i64 8
  %25 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %26 = bitcast double* %25 to <2 x i64>*
  %27 = load <2 x i64>, <2 x i64>* %26, align 8
  %28 = bitcast double* %24 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %28, align 16
  %29 = getelementptr inbounds [16 x double], [16 x double]* %3, i64 0, i64 10
  %30 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %31 = bitcast double* %30 to <2 x i64>*
  %32 = load <2 x i64>, <2 x i64>* %31, align 8
  %33 = bitcast double* %29 to <2 x i64>*
  store <2 x i64> %32, <2 x i64>* %33, align 16
  %34 = getelementptr inbounds [16 x double], [16 x double]* %3, i64 0, i64 12
  %35 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %36 = bitcast double* %35 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  %38 = bitcast double* %34 to <2 x i64>*
  store <2 x i64> %37, <2 x i64>* %38, align 16
  %39 = getelementptr inbounds [16 x double], [16 x double]* %3, i64 0, i64 14
  %40 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %41 = bitcast double* %40 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  %43 = bitcast double* %39 to <2 x i64>*
  store <2 x i64> %42, <2 x i64>* %43, align 16
  %44 = call %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateEPKvm(i8* nonnull %4, i64 128) #11
  %45 = bitcast %"class.blink::DOMArrayBuffer"* %44 to %"class.blink::DOMArrayBufferBase"*
  %46 = call %"class.blink::DOMTypedArray.1991"* @_ZN5blink13DOMTypedArrayIdN2v812Float64ArrayELb0EE6CreateEPNS_18DOMArrayBufferBaseEmm(%"class.blink::DOMArrayBufferBase"* %45, i64 0, i64 16) #11
  %47 = getelementptr inbounds %"class.blink::NotShared.1988", %"class.blink::NotShared.1988"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::DOMTypedArray.1991"* %46, %"class.blink::DOMTypedArray.1991"** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink17DOMMatrixReadOnly8toStringERNS_14ExceptionStateE(%"class.blink::DOMMatrixReadOnly"* readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.WTF::StringView", align 8
  %25 = alloca %"class.WTF::StringView", align 8
  %26 = alloca %"class.WTF::StringView", align 8
  %27 = alloca %"class.WTF::StringView", align 8
  %28 = alloca %"class.WTF::StringView", align 8
  %29 = alloca %"class.WTF::StringView", align 8
  %30 = alloca %"class.WTF::StringView", align 8
  %31 = alloca %"class.WTF::StringView", align 8
  %32 = alloca %"class.WTF::StringView", align 8
  %33 = alloca %"class.WTF::StringView", align 8
  %34 = alloca %"class.WTF::StringView", align 8
  %35 = alloca %"class.WTF::StringView", align 8
  %36 = alloca %"class.WTF::StringView", align 8
  %37 = alloca %"class.WTF::StringView", align 8
  %38 = alloca %"class.WTF::StringView", align 8
  %39 = alloca %"class.WTF::StringView", align 8
  %40 = alloca %"class.WTF::StringView", align 8
  %41 = alloca %"class.WTF::StringView", align 8
  %42 = alloca %"class.WTF::StringView", align 8
  %43 = alloca %"class.WTF::StringView", align 8
  %44 = alloca %"class.WTF::StringView", align 8
  %45 = alloca %"class.WTF::StringView", align 8
  %46 = alloca %"class.WTF::StringView", align 8
  %47 = alloca %"class.WTF::StringView", align 8
  %48 = alloca %"class.WTF::StringView", align 8
  %49 = alloca %"class.WTF::StringView", align 8
  %50 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %50) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 48, i1 false)
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %53 = bitcast %union.anon.1992* %52 to i8*
  store i8 0, i8* %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %55, align 4
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %56, align 1
  %57 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 2
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  %60 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 0
  %61 = load double, double* %60, align 8
  %62 = tail call double @llvm.fabs.f64(double %61) #12
  %63 = fcmp one double %62, 0x7FF0000000000000
  br i1 %59, label %309, label %64

64:                                               ; preds = %2
  br i1 %63, label %65, label %90

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %67 = load double, double* %66, align 8
  %68 = tail call double @llvm.fabs.f64(double %67) #12
  %69 = fcmp ueq double %68, 0x7FF0000000000000
  br i1 %69, label %90, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %72 = load double, double* %71, align 8
  %73 = tail call double @llvm.fabs.f64(double %72) #12
  %74 = fcmp ueq double %73, 0x7FF0000000000000
  br i1 %74, label %90, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %77 = load double, double* %76, align 8
  %78 = tail call double @llvm.fabs.f64(double %77) #12
  %79 = fcmp ueq double %78, 0x7FF0000000000000
  br i1 %79, label %90, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %82 = load double, double* %81, align 8
  %83 = tail call double @llvm.fabs.f64(double %82) #12
  %84 = fcmp ueq double %83, 0x7FF0000000000000
  br i1 %84, label %90, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 1
  %87 = load double, double* %86, align 8
  %88 = tail call double @llvm.fabs.f64(double %87) #12
  %89 = fcmp ueq double %88, 0x7FF0000000000000
  br i1 %89, label %90, label %91

90:                                               ; preds = %85, %80, %75, %70, %65, %64
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 11, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.6, i64 0, i64 0)) #11
  br label %954

91:                                               ; preds = %85
  %92 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #11
  %93 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %94 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8** %95, align 8
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 7, i32* %96, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #11
  %97 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #11
  %98 = load double, double* %60, align 8
  %99 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %98) #11
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %101, label %106

101:                                              ; preds = %91
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %102, align 8
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %104 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 0, i32* %105, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  br label %126

106:                                              ; preds = %91
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %107, align 8
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 1
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %112 = bitcast i8** %111 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %112, align 8
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %109, i32* %113, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %106
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %106
  %123 = phi i32 [ %121, %120 ], [ %119, %106 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #11
  br label %126

126:                                              ; preds = %101, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #11
  %127 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #11
  %128 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %129 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %130, align 8
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 2, i32* %131, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #11
  %132 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #11
  %133 = load double, double* %66, align 8
  %134 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %133) #11
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %136, label %141

136:                                              ; preds = %126
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %137, align 8
  %138 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %139 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 0, i32* %140, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  br label %161

141:                                              ; preds = %126
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %134, %"class.WTF::StringImpl"** %142, align 8
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 1
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %147 = bitcast i8** %146 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %145, %"class.WTF::StringImpl"** %147, align 8
  %148 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %144, i32* %148, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %141
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %141
  %158 = phi i32 [ %156, %155 ], [ %154, %141 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #11
  br label %161

161:                                              ; preds = %136, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #11
  %162 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #11
  %163 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %164 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %163, i64* %164, align 8
  %165 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %165, align 8
  %166 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 2, i32* %166, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #11
  %167 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #11
  %168 = load double, double* %71, align 8
  %169 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %168) #11
  %170 = icmp eq %"class.WTF::StringImpl"* %169, null
  br i1 %170, label %171, label %176

171:                                              ; preds = %161
  %172 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %172, align 8
  %173 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %174 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 0, i32* %175, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  br label %196

176:                                              ; preds = %161
  %177 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %169, %"class.WTF::StringImpl"** %177, align 8
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 1
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 1
  %181 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %182 = bitcast i8** %181 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"** %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %179, i32* %183, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %169, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %176
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %176
  %193 = phi i32 [ %191, %190 ], [ %189, %176 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %169) #11
  br label %196

196:                                              ; preds = %171, %192, %195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #11
  %197 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %197) #11
  %198 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %199 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %198, i64* %199, align 8
  %200 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %200, align 8
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 2, i32* %201, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %197) #11
  %202 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %202) #11
  %203 = load double, double* %76, align 8
  %204 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %203) #11
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %206, label %211

206:                                              ; preds = %196
  %207 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %207, align 8
  %208 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %209 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %208, i64* %209, align 8
  %210 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 0, i32* %210, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  br label %231

211:                                              ; preds = %196
  %212 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %204, %"class.WTF::StringImpl"** %212, align 8
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 1
  %214 = load i32, i32* %213, align 4
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 1
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %217 = bitcast i8** %216 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %217, align 8
  %218 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %214, i32* %218, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %227

225:                                              ; preds = %211
  %226 = add i32 %224, -1
  store i32 %226, i32* %223, align 4
  br label %227

227:                                              ; preds = %225, %211
  %228 = phi i32 [ %226, %225 ], [ %224, %211 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #11
  br label %231

231:                                              ; preds = %206, %227, %230
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %202) #11
  %232 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %232) #11
  %233 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %234 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %233, i64* %234, align 8
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %235, align 8
  %236 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 2, i32* %236, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %232) #11
  %237 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %237) #11
  %238 = load double, double* %81, align 8
  %239 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %238) #11
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %241, label %246

241:                                              ; preds = %231
  %242 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %242, align 8
  %243 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %244 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %243, i64* %244, align 8
  %245 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 0, i32* %245, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  br label %266

246:                                              ; preds = %231
  %247 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %239, %"class.WTF::StringImpl"** %247, align 8
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 1
  %251 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %252 = bitcast i8** %251 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %250, %"class.WTF::StringImpl"** %252, align 8
  %253 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %249, i32* %253, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  br i1 %257, label %260, label %262

260:                                              ; preds = %246
  %261 = add i32 %259, -1
  store i32 %261, i32* %258, align 4
  br label %262

262:                                              ; preds = %260, %246
  %263 = phi i32 [ %261, %260 ], [ %259, %246 ]
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %262
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #11
  br label %266

266:                                              ; preds = %241, %262, %265
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %237) #11
  %267 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #11
  %268 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %269 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %268, i64* %269, align 8
  %270 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %270, align 8
  %271 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 2, i32* %271, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #11
  %272 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %272) #11
  %273 = load double, double* %86, align 8
  %274 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %273) #11
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %276, label %281

276:                                              ; preds = %266
  %277 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %277, align 8
  %278 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %279 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %278, i64* %279, align 8
  %280 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 0, i32* %280, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  br label %301

281:                                              ; preds = %266
  %282 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %274, %"class.WTF::StringImpl"** %282, align 8
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 1
  %284 = load i32, i32* %283, align 4
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 1
  %286 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %287 = bitcast i8** %286 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %285, %"class.WTF::StringImpl"** %287, align 8
  %288 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %284, i32* %288, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  br i1 %292, label %295, label %297

295:                                              ; preds = %281
  %296 = add i32 %294, -1
  store i32 %296, i32* %293, align 4
  br label %297

297:                                              ; preds = %295, %281
  %298 = phi i32 [ %296, %295 ], [ %294, %281 ]
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %297
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #11
  br label %301

301:                                              ; preds = %276, %297, %300
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %272) #11
  %302 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %302) #11
  %303 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %304 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %303, i64* %304, align 8
  %305 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i8** %305, align 8
  %306 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 1, i32* %306, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %16)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %302) #11
  %307 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #11
  %308 = ptrtoint %"class.WTF::StringImpl"* %307 to i64
  br label %954

309:                                              ; preds = %2
  br i1 %63, label %310, label %385

310:                                              ; preds = %309
  %311 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %312 = load double, double* %311, align 8
  %313 = tail call double @llvm.fabs.f64(double %312) #12
  %314 = fcmp ueq double %313, 0x7FF0000000000000
  br i1 %314, label %385, label %315

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %317 = load double, double* %316, align 8
  %318 = tail call double @llvm.fabs.f64(double %317) #12
  %319 = fcmp ueq double %318, 0x7FF0000000000000
  br i1 %319, label %385, label %320

320:                                              ; preds = %315
  %321 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 3
  %322 = load double, double* %321, align 8
  %323 = tail call double @llvm.fabs.f64(double %322) #12
  %324 = fcmp ueq double %323, 0x7FF0000000000000
  br i1 %324, label %385, label %325

325:                                              ; preds = %320
  %326 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %327 = load double, double* %326, align 8
  %328 = tail call double @llvm.fabs.f64(double %327) #12
  %329 = fcmp ueq double %328, 0x7FF0000000000000
  br i1 %329, label %385, label %330

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %332 = load double, double* %331, align 8
  %333 = tail call double @llvm.fabs.f64(double %332) #12
  %334 = fcmp ueq double %333, 0x7FF0000000000000
  br i1 %334, label %385, label %335

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %337 = load double, double* %336, align 8
  %338 = tail call double @llvm.fabs.f64(double %337) #12
  %339 = fcmp ueq double %338, 0x7FF0000000000000
  br i1 %339, label %385, label %340

340:                                              ; preds = %335
  %341 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 3
  %342 = load double, double* %341, align 8
  %343 = tail call double @llvm.fabs.f64(double %342) #12
  %344 = fcmp ueq double %343, 0x7FF0000000000000
  br i1 %344, label %385, label %345

345:                                              ; preds = %340
  %346 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %347 = load double, double* %346, align 8
  %348 = tail call double @llvm.fabs.f64(double %347) #12
  %349 = fcmp ueq double %348, 0x7FF0000000000000
  br i1 %349, label %385, label %350

350:                                              ; preds = %345
  %351 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 1
  %352 = load double, double* %351, align 8
  %353 = tail call double @llvm.fabs.f64(double %352) #12
  %354 = fcmp ueq double %353, 0x7FF0000000000000
  br i1 %354, label %385, label %355

355:                                              ; preds = %350
  %356 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %357 = load double, double* %356, align 8
  %358 = tail call double @llvm.fabs.f64(double %357) #12
  %359 = fcmp ueq double %358, 0x7FF0000000000000
  br i1 %359, label %385, label %360

360:                                              ; preds = %355
  %361 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 3
  %362 = load double, double* %361, align 8
  %363 = tail call double @llvm.fabs.f64(double %362) #12
  %364 = fcmp ueq double %363, 0x7FF0000000000000
  br i1 %364, label %385, label %365

365:                                              ; preds = %360
  %366 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %367 = load double, double* %366, align 8
  %368 = tail call double @llvm.fabs.f64(double %367) #12
  %369 = fcmp ueq double %368, 0x7FF0000000000000
  br i1 %369, label %385, label %370

370:                                              ; preds = %365
  %371 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 1
  %372 = load double, double* %371, align 8
  %373 = tail call double @llvm.fabs.f64(double %372) #12
  %374 = fcmp ueq double %373, 0x7FF0000000000000
  br i1 %374, label %385, label %375

375:                                              ; preds = %370
  %376 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %377 = load double, double* %376, align 8
  %378 = tail call double @llvm.fabs.f64(double %377) #12
  %379 = fcmp ueq double %378, 0x7FF0000000000000
  br i1 %379, label %385, label %380

380:                                              ; preds = %375
  %381 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 3
  %382 = load double, double* %381, align 8
  %383 = tail call double @llvm.fabs.f64(double %382) #12
  %384 = fcmp ueq double %383, 0x7FF0000000000000
  br i1 %384, label %385, label %386

385:                                              ; preds = %380, %375, %370, %365, %360, %355, %350, %345, %340, %335, %330, %325, %320, %315, %310, %309
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 11, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.6, i64 0, i64 0)) #11
  br label %954

386:                                              ; preds = %380
  %387 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %387) #11
  %388 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %389 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %388, i64* %389, align 8
  %390 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8** %390, align 8
  %391 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 9, i32* %391, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %17)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %387) #11
  %392 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %392) #11
  %393 = load double, double* %60, align 8
  %394 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %393) #11
  %395 = icmp eq %"class.WTF::StringImpl"* %394, null
  br i1 %395, label %396, label %401

396:                                              ; preds = %386
  %397 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* null, i8** %397, align 8
  %398 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %399 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %398, i64* %399, align 8
  %400 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 0, i32* %400, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  br label %421

401:                                              ; preds = %386
  %402 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  store %"class.WTF::StringImpl"* %394, %"class.WTF::StringImpl"** %402, align 8
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 1
  %404 = load i32, i32* %403, align 4
  %405 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 1
  %406 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %407 = bitcast i8** %406 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %405, %"class.WTF::StringImpl"** %407, align 8
  %408 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %404, i32* %408, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %18)
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load atomic i32, i32* %409 monotonic, align 4
  %411 = and i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %394, i64 0, i32 0
  %414 = load i32, i32* %413, align 4
  br i1 %412, label %415, label %417

415:                                              ; preds = %401
  %416 = add i32 %414, -1
  store i32 %416, i32* %413, align 4
  br label %417

417:                                              ; preds = %415, %401
  %418 = phi i32 [ %416, %415 ], [ %414, %401 ]
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %417
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %394) #11
  br label %421

421:                                              ; preds = %396, %417, %420
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %392) #11
  %422 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %422) #11
  %423 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %424 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %423, i64* %424, align 8
  %425 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %425, align 8
  %426 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 2, i32* %426, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %19)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %422) #11
  %427 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %427) #11
  %428 = load double, double* %311, align 8
  %429 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %428) #11
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %431, label %436

431:                                              ; preds = %421
  %432 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* null, i8** %432, align 8
  %433 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %434 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %433, i64* %434, align 8
  %435 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 0, i32* %435, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %20)
  br label %456

436:                                              ; preds = %421
  %437 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 0
  store %"class.WTF::StringImpl"* %429, %"class.WTF::StringImpl"** %437, align 8
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 1
  %439 = load i32, i32* %438, align 4
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 1
  %441 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  %442 = bitcast i8** %441 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %440, %"class.WTF::StringImpl"** %442, align 8
  %443 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 %439, i32* %443, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %20)
  %444 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %445 = load atomic i32, i32* %444 monotonic, align 4
  %446 = and i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %449 = load i32, i32* %448, align 4
  br i1 %447, label %450, label %452

450:                                              ; preds = %436
  %451 = add i32 %449, -1
  store i32 %451, i32* %448, align 4
  br label %452

452:                                              ; preds = %450, %436
  %453 = phi i32 [ %451, %450 ], [ %449, %436 ]
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %456

455:                                              ; preds = %452
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %429) #11
  br label %456

456:                                              ; preds = %431, %452, %455
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %427) #11
  %457 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %457) #11
  %458 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %459 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %458, i64* %459, align 8
  %460 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %460, align 8
  %461 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 2, i32* %461, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %21)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %457) #11
  %462 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %462) #11
  %463 = load double, double* %316, align 8
  %464 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %463) #11
  %465 = icmp eq %"class.WTF::StringImpl"* %464, null
  br i1 %465, label %466, label %471

466:                                              ; preds = %456
  %467 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* null, i8** %467, align 8
  %468 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %469 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %468, i64* %469, align 8
  %470 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 0, i32* %470, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %22)
  br label %491

471:                                              ; preds = %456
  %472 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 0
  store %"class.WTF::StringImpl"* %464, %"class.WTF::StringImpl"** %472, align 8
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 0, i32 1
  %474 = load i32, i32* %473, align 4
  %475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 1
  %476 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  %477 = bitcast i8** %476 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %475, %"class.WTF::StringImpl"** %477, align 8
  %478 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 %474, i32* %478, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %22)
  %479 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %480 = load atomic i32, i32* %479 monotonic, align 4
  %481 = and i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %464, i64 0, i32 0
  %484 = load i32, i32* %483, align 4
  br i1 %482, label %485, label %487

485:                                              ; preds = %471
  %486 = add i32 %484, -1
  store i32 %486, i32* %483, align 4
  br label %487

487:                                              ; preds = %485, %471
  %488 = phi i32 [ %486, %485 ], [ %484, %471 ]
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %491

490:                                              ; preds = %487
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %464) #11
  br label %491

491:                                              ; preds = %466, %487, %490
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %462) #11
  %492 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %492) #11
  %493 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %494 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %493, i64* %494, align 8
  %495 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %495, align 8
  %496 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 2, i32* %496, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %23)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %492) #11
  %497 = bitcast %"class.WTF::StringView"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %497) #11
  %498 = load double, double* %321, align 8
  %499 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %498) #11
  %500 = icmp eq %"class.WTF::StringImpl"* %499, null
  br i1 %500, label %501, label %506

501:                                              ; preds = %491
  %502 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  store i8* null, i8** %502, align 8
  %503 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %504 = bitcast %"class.WTF::StringView"* %24 to i64*
  store i64 %503, i64* %504, align 8
  %505 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  store i32 0, i32* %505, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %24)
  br label %526

506:                                              ; preds = %491
  %507 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 0
  store %"class.WTF::StringImpl"* %499, %"class.WTF::StringImpl"** %507, align 8
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 1
  %509 = load i32, i32* %508, align 4
  %510 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 1
  %511 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  %512 = bitcast i8** %511 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %510, %"class.WTF::StringImpl"** %512, align 8
  %513 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  store i32 %509, i32* %513, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %24)
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %515 = load atomic i32, i32* %514 monotonic, align 4
  %516 = and i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 0
  %519 = load i32, i32* %518, align 4
  br i1 %517, label %520, label %522

520:                                              ; preds = %506
  %521 = add i32 %519, -1
  store i32 %521, i32* %518, align 4
  br label %522

522:                                              ; preds = %520, %506
  %523 = phi i32 [ %521, %520 ], [ %519, %506 ]
  %524 = icmp eq i32 %523, 0
  br i1 %524, label %525, label %526

525:                                              ; preds = %522
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %499) #11
  br label %526

526:                                              ; preds = %501, %522, %525
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %497) #11
  %527 = bitcast %"class.WTF::StringView"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %527) #11
  %528 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %529 = bitcast %"class.WTF::StringView"* %25 to i64*
  store i64 %528, i64* %529, align 8
  %530 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %530, align 8
  %531 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 2
  store i32 2, i32* %531, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %25)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %527) #11
  %532 = bitcast %"class.WTF::StringView"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %532) #11
  %533 = load double, double* %326, align 8
  %534 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %533) #11
  %535 = icmp eq %"class.WTF::StringImpl"* %534, null
  br i1 %535, label %536, label %541

536:                                              ; preds = %526
  %537 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  store i8* null, i8** %537, align 8
  %538 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %539 = bitcast %"class.WTF::StringView"* %26 to i64*
  store i64 %538, i64* %539, align 8
  %540 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  store i32 0, i32* %540, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %26)
  br label %561

541:                                              ; preds = %526
  %542 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 0
  store %"class.WTF::StringImpl"* %534, %"class.WTF::StringImpl"** %542, align 8
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 1
  %544 = load i32, i32* %543, align 4
  %545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 1
  %546 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  %547 = bitcast i8** %546 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %545, %"class.WTF::StringImpl"** %547, align 8
  %548 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  store i32 %544, i32* %548, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %26)
  %549 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %550 = load atomic i32, i32* %549 monotonic, align 4
  %551 = and i32 %550, 2
  %552 = icmp eq i32 %551, 0
  %553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 0
  %554 = load i32, i32* %553, align 4
  br i1 %552, label %555, label %557

555:                                              ; preds = %541
  %556 = add i32 %554, -1
  store i32 %556, i32* %553, align 4
  br label %557

557:                                              ; preds = %555, %541
  %558 = phi i32 [ %556, %555 ], [ %554, %541 ]
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %560, label %561

560:                                              ; preds = %557
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %534) #11
  br label %561

561:                                              ; preds = %536, %557, %560
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %532) #11
  %562 = bitcast %"class.WTF::StringView"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %562) #11
  %563 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %564 = bitcast %"class.WTF::StringView"* %27 to i64*
  store i64 %563, i64* %564, align 8
  %565 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %565, align 8
  %566 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 2
  store i32 2, i32* %566, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %27)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %562) #11
  %567 = bitcast %"class.WTF::StringView"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %567) #11
  %568 = load double, double* %331, align 8
  %569 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %568) #11
  %570 = icmp eq %"class.WTF::StringImpl"* %569, null
  br i1 %570, label %571, label %576

571:                                              ; preds = %561
  %572 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  store i8* null, i8** %572, align 8
  %573 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %574 = bitcast %"class.WTF::StringView"* %28 to i64*
  store i64 %573, i64* %574, align 8
  %575 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 2
  store i32 0, i32* %575, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %28)
  br label %596

576:                                              ; preds = %561
  %577 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 0
  store %"class.WTF::StringImpl"* %569, %"class.WTF::StringImpl"** %577, align 8
  %578 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 1
  %579 = load i32, i32* %578, align 4
  %580 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 1
  %581 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  %582 = bitcast i8** %581 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %580, %"class.WTF::StringImpl"** %582, align 8
  %583 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 2
  store i32 %579, i32* %583, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %28)
  %584 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %585 = load atomic i32, i32* %584 monotonic, align 4
  %586 = and i32 %585, 2
  %587 = icmp eq i32 %586, 0
  %588 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 0
  %589 = load i32, i32* %588, align 4
  br i1 %587, label %590, label %592

590:                                              ; preds = %576
  %591 = add i32 %589, -1
  store i32 %591, i32* %588, align 4
  br label %592

592:                                              ; preds = %590, %576
  %593 = phi i32 [ %591, %590 ], [ %589, %576 ]
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %596

595:                                              ; preds = %592
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %569) #11
  br label %596

596:                                              ; preds = %571, %592, %595
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %567) #11
  %597 = bitcast %"class.WTF::StringView"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %597) #11
  %598 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %599 = bitcast %"class.WTF::StringView"* %29 to i64*
  store i64 %598, i64* %599, align 8
  %600 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %600, align 8
  %601 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 2
  store i32 2, i32* %601, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %29)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %597) #11
  %602 = bitcast %"class.WTF::StringView"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %602) #11
  %603 = load double, double* %336, align 8
  %604 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %603) #11
  %605 = icmp eq %"class.WTF::StringImpl"* %604, null
  br i1 %605, label %606, label %611

606:                                              ; preds = %596
  %607 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 1
  store i8* null, i8** %607, align 8
  %608 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %609 = bitcast %"class.WTF::StringView"* %30 to i64*
  store i64 %608, i64* %609, align 8
  %610 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 2
  store i32 0, i32* %610, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %30)
  br label %631

611:                                              ; preds = %596
  %612 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 0
  store %"class.WTF::StringImpl"* %604, %"class.WTF::StringImpl"** %612, align 8
  %613 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 1
  %614 = load i32, i32* %613, align 4
  %615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 1
  %616 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 1
  %617 = bitcast i8** %616 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %615, %"class.WTF::StringImpl"** %617, align 8
  %618 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 2
  store i32 %614, i32* %618, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %30)
  %619 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %620 = load atomic i32, i32* %619 monotonic, align 4
  %621 = and i32 %620, 2
  %622 = icmp eq i32 %621, 0
  %623 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %604, i64 0, i32 0
  %624 = load i32, i32* %623, align 4
  br i1 %622, label %625, label %627

625:                                              ; preds = %611
  %626 = add i32 %624, -1
  store i32 %626, i32* %623, align 4
  br label %627

627:                                              ; preds = %625, %611
  %628 = phi i32 [ %626, %625 ], [ %624, %611 ]
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %630, label %631

630:                                              ; preds = %627
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %604) #11
  br label %631

631:                                              ; preds = %606, %627, %630
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %602) #11
  %632 = bitcast %"class.WTF::StringView"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %632) #11
  %633 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %634 = bitcast %"class.WTF::StringView"* %31 to i64*
  store i64 %633, i64* %634, align 8
  %635 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %635, align 8
  %636 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 2
  store i32 2, i32* %636, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %31)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %632) #11
  %637 = bitcast %"class.WTF::StringView"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %637) #11
  %638 = load double, double* %341, align 8
  %639 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %638) #11
  %640 = icmp eq %"class.WTF::StringImpl"* %639, null
  br i1 %640, label %641, label %646

641:                                              ; preds = %631
  %642 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 1
  store i8* null, i8** %642, align 8
  %643 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %644 = bitcast %"class.WTF::StringView"* %32 to i64*
  store i64 %643, i64* %644, align 8
  %645 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 2
  store i32 0, i32* %645, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %32)
  br label %666

646:                                              ; preds = %631
  %647 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 0
  store %"class.WTF::StringImpl"* %639, %"class.WTF::StringImpl"** %647, align 8
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 1
  %649 = load i32, i32* %648, align 4
  %650 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 1
  %651 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 1
  %652 = bitcast i8** %651 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %650, %"class.WTF::StringImpl"** %652, align 8
  %653 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 2
  store i32 %649, i32* %653, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %32)
  %654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %655 = load atomic i32, i32* %654 monotonic, align 4
  %656 = and i32 %655, 2
  %657 = icmp eq i32 %656, 0
  %658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 0
  %659 = load i32, i32* %658, align 4
  br i1 %657, label %660, label %662

660:                                              ; preds = %646
  %661 = add i32 %659, -1
  store i32 %661, i32* %658, align 4
  br label %662

662:                                              ; preds = %660, %646
  %663 = phi i32 [ %661, %660 ], [ %659, %646 ]
  %664 = icmp eq i32 %663, 0
  br i1 %664, label %665, label %666

665:                                              ; preds = %662
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %639) #11
  br label %666

666:                                              ; preds = %641, %662, %665
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %637) #11
  %667 = bitcast %"class.WTF::StringView"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %667) #11
  %668 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %669 = bitcast %"class.WTF::StringView"* %33 to i64*
  store i64 %668, i64* %669, align 8
  %670 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %670, align 8
  %671 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 2
  store i32 2, i32* %671, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %33)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %667) #11
  %672 = bitcast %"class.WTF::StringView"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %672) #11
  %673 = load double, double* %346, align 8
  %674 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %673) #11
  %675 = icmp eq %"class.WTF::StringImpl"* %674, null
  br i1 %675, label %676, label %681

676:                                              ; preds = %666
  %677 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 1
  store i8* null, i8** %677, align 8
  %678 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %679 = bitcast %"class.WTF::StringView"* %34 to i64*
  store i64 %678, i64* %679, align 8
  %680 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 2
  store i32 0, i32* %680, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %34)
  br label %701

681:                                              ; preds = %666
  %682 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 0
  store %"class.WTF::StringImpl"* %674, %"class.WTF::StringImpl"** %682, align 8
  %683 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 1
  %684 = load i32, i32* %683, align 4
  %685 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 1
  %686 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 1
  %687 = bitcast i8** %686 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %685, %"class.WTF::StringImpl"** %687, align 8
  %688 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %34, i64 0, i32 2
  store i32 %684, i32* %688, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %34)
  %689 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %690 = load atomic i32, i32* %689 monotonic, align 4
  %691 = and i32 %690, 2
  %692 = icmp eq i32 %691, 0
  %693 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 0
  %694 = load i32, i32* %693, align 4
  br i1 %692, label %695, label %697

695:                                              ; preds = %681
  %696 = add i32 %694, -1
  store i32 %696, i32* %693, align 4
  br label %697

697:                                              ; preds = %695, %681
  %698 = phi i32 [ %696, %695 ], [ %694, %681 ]
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %700, label %701

700:                                              ; preds = %697
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %674) #11
  br label %701

701:                                              ; preds = %676, %697, %700
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %672) #11
  %702 = bitcast %"class.WTF::StringView"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %702) #11
  %703 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %704 = bitcast %"class.WTF::StringView"* %35 to i64*
  store i64 %703, i64* %704, align 8
  %705 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %705, align 8
  %706 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %35, i64 0, i32 2
  store i32 2, i32* %706, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %35)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %702) #11
  %707 = bitcast %"class.WTF::StringView"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %707) #11
  %708 = load double, double* %351, align 8
  %709 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %708) #11
  %710 = icmp eq %"class.WTF::StringImpl"* %709, null
  br i1 %710, label %711, label %716

711:                                              ; preds = %701
  %712 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 1
  store i8* null, i8** %712, align 8
  %713 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %714 = bitcast %"class.WTF::StringView"* %36 to i64*
  store i64 %713, i64* %714, align 8
  %715 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 2
  store i32 0, i32* %715, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %36)
  br label %736

716:                                              ; preds = %701
  %717 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 0
  store %"class.WTF::StringImpl"* %709, %"class.WTF::StringImpl"** %717, align 8
  %718 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %709, i64 0, i32 1
  %719 = load i32, i32* %718, align 4
  %720 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %709, i64 1
  %721 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 1
  %722 = bitcast i8** %721 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %720, %"class.WTF::StringImpl"** %722, align 8
  %723 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 2
  store i32 %719, i32* %723, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %36)
  %724 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %709, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %725 = load atomic i32, i32* %724 monotonic, align 4
  %726 = and i32 %725, 2
  %727 = icmp eq i32 %726, 0
  %728 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %709, i64 0, i32 0
  %729 = load i32, i32* %728, align 4
  br i1 %727, label %730, label %732

730:                                              ; preds = %716
  %731 = add i32 %729, -1
  store i32 %731, i32* %728, align 4
  br label %732

732:                                              ; preds = %730, %716
  %733 = phi i32 [ %731, %730 ], [ %729, %716 ]
  %734 = icmp eq i32 %733, 0
  br i1 %734, label %735, label %736

735:                                              ; preds = %732
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %709) #11
  br label %736

736:                                              ; preds = %711, %732, %735
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %707) #11
  %737 = bitcast %"class.WTF::StringView"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %737) #11
  %738 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %739 = bitcast %"class.WTF::StringView"* %37 to i64*
  store i64 %738, i64* %739, align 8
  %740 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %37, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %740, align 8
  %741 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %37, i64 0, i32 2
  store i32 2, i32* %741, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %37)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %737) #11
  %742 = bitcast %"class.WTF::StringView"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %742) #11
  %743 = load double, double* %356, align 8
  %744 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %743) #11
  %745 = icmp eq %"class.WTF::StringImpl"* %744, null
  br i1 %745, label %746, label %751

746:                                              ; preds = %736
  %747 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %38, i64 0, i32 1
  store i8* null, i8** %747, align 8
  %748 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %749 = bitcast %"class.WTF::StringView"* %38 to i64*
  store i64 %748, i64* %749, align 8
  %750 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %38, i64 0, i32 2
  store i32 0, i32* %750, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %38)
  br label %771

751:                                              ; preds = %736
  %752 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %38, i64 0, i32 0
  store %"class.WTF::StringImpl"* %744, %"class.WTF::StringImpl"** %752, align 8
  %753 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %744, i64 0, i32 1
  %754 = load i32, i32* %753, align 4
  %755 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %744, i64 1
  %756 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %38, i64 0, i32 1
  %757 = bitcast i8** %756 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %755, %"class.WTF::StringImpl"** %757, align 8
  %758 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %38, i64 0, i32 2
  store i32 %754, i32* %758, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %38)
  %759 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %744, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %760 = load atomic i32, i32* %759 monotonic, align 4
  %761 = and i32 %760, 2
  %762 = icmp eq i32 %761, 0
  %763 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %744, i64 0, i32 0
  %764 = load i32, i32* %763, align 4
  br i1 %762, label %765, label %767

765:                                              ; preds = %751
  %766 = add i32 %764, -1
  store i32 %766, i32* %763, align 4
  br label %767

767:                                              ; preds = %765, %751
  %768 = phi i32 [ %766, %765 ], [ %764, %751 ]
  %769 = icmp eq i32 %768, 0
  br i1 %769, label %770, label %771

770:                                              ; preds = %767
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %744) #11
  br label %771

771:                                              ; preds = %746, %767, %770
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %742) #11
  %772 = bitcast %"class.WTF::StringView"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %772) #11
  %773 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %774 = bitcast %"class.WTF::StringView"* %39 to i64*
  store i64 %773, i64* %774, align 8
  %775 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %39, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %775, align 8
  %776 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %39, i64 0, i32 2
  store i32 2, i32* %776, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %39)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %772) #11
  %777 = bitcast %"class.WTF::StringView"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %777) #11
  %778 = load double, double* %361, align 8
  %779 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %778) #11
  %780 = icmp eq %"class.WTF::StringImpl"* %779, null
  br i1 %780, label %781, label %786

781:                                              ; preds = %771
  %782 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %40, i64 0, i32 1
  store i8* null, i8** %782, align 8
  %783 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %784 = bitcast %"class.WTF::StringView"* %40 to i64*
  store i64 %783, i64* %784, align 8
  %785 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %40, i64 0, i32 2
  store i32 0, i32* %785, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %40)
  br label %806

786:                                              ; preds = %771
  %787 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %40, i64 0, i32 0
  store %"class.WTF::StringImpl"* %779, %"class.WTF::StringImpl"** %787, align 8
  %788 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %779, i64 0, i32 1
  %789 = load i32, i32* %788, align 4
  %790 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %779, i64 1
  %791 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %40, i64 0, i32 1
  %792 = bitcast i8** %791 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %790, %"class.WTF::StringImpl"** %792, align 8
  %793 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %40, i64 0, i32 2
  store i32 %789, i32* %793, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %40)
  %794 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %779, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %795 = load atomic i32, i32* %794 monotonic, align 4
  %796 = and i32 %795, 2
  %797 = icmp eq i32 %796, 0
  %798 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %779, i64 0, i32 0
  %799 = load i32, i32* %798, align 4
  br i1 %797, label %800, label %802

800:                                              ; preds = %786
  %801 = add i32 %799, -1
  store i32 %801, i32* %798, align 4
  br label %802

802:                                              ; preds = %800, %786
  %803 = phi i32 [ %801, %800 ], [ %799, %786 ]
  %804 = icmp eq i32 %803, 0
  br i1 %804, label %805, label %806

805:                                              ; preds = %802
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %779) #11
  br label %806

806:                                              ; preds = %781, %802, %805
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %777) #11
  %807 = bitcast %"class.WTF::StringView"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %807) #11
  %808 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %809 = bitcast %"class.WTF::StringView"* %41 to i64*
  store i64 %808, i64* %809, align 8
  %810 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %41, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %810, align 8
  %811 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %41, i64 0, i32 2
  store i32 2, i32* %811, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %41)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %807) #11
  %812 = bitcast %"class.WTF::StringView"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %812) #11
  %813 = load double, double* %366, align 8
  %814 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %813) #11
  %815 = icmp eq %"class.WTF::StringImpl"* %814, null
  br i1 %815, label %816, label %821

816:                                              ; preds = %806
  %817 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %42, i64 0, i32 1
  store i8* null, i8** %817, align 8
  %818 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %819 = bitcast %"class.WTF::StringView"* %42 to i64*
  store i64 %818, i64* %819, align 8
  %820 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %42, i64 0, i32 2
  store i32 0, i32* %820, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %42)
  br label %841

821:                                              ; preds = %806
  %822 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %42, i64 0, i32 0
  store %"class.WTF::StringImpl"* %814, %"class.WTF::StringImpl"** %822, align 8
  %823 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %814, i64 0, i32 1
  %824 = load i32, i32* %823, align 4
  %825 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %814, i64 1
  %826 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %42, i64 0, i32 1
  %827 = bitcast i8** %826 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %825, %"class.WTF::StringImpl"** %827, align 8
  %828 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %42, i64 0, i32 2
  store i32 %824, i32* %828, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %42)
  %829 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %814, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %830 = load atomic i32, i32* %829 monotonic, align 4
  %831 = and i32 %830, 2
  %832 = icmp eq i32 %831, 0
  %833 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %814, i64 0, i32 0
  %834 = load i32, i32* %833, align 4
  br i1 %832, label %835, label %837

835:                                              ; preds = %821
  %836 = add i32 %834, -1
  store i32 %836, i32* %833, align 4
  br label %837

837:                                              ; preds = %835, %821
  %838 = phi i32 [ %836, %835 ], [ %834, %821 ]
  %839 = icmp eq i32 %838, 0
  br i1 %839, label %840, label %841

840:                                              ; preds = %837
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %814) #11
  br label %841

841:                                              ; preds = %816, %837, %840
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %812) #11
  %842 = bitcast %"class.WTF::StringView"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %842) #11
  %843 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %844 = bitcast %"class.WTF::StringView"* %43 to i64*
  store i64 %843, i64* %844, align 8
  %845 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %43, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %845, align 8
  %846 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %43, i64 0, i32 2
  store i32 2, i32* %846, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %43)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %842) #11
  %847 = bitcast %"class.WTF::StringView"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %847) #11
  %848 = load double, double* %371, align 8
  %849 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %848) #11
  %850 = icmp eq %"class.WTF::StringImpl"* %849, null
  br i1 %850, label %851, label %856

851:                                              ; preds = %841
  %852 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %44, i64 0, i32 1
  store i8* null, i8** %852, align 8
  %853 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %854 = bitcast %"class.WTF::StringView"* %44 to i64*
  store i64 %853, i64* %854, align 8
  %855 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %44, i64 0, i32 2
  store i32 0, i32* %855, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %44)
  br label %876

856:                                              ; preds = %841
  %857 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %44, i64 0, i32 0
  store %"class.WTF::StringImpl"* %849, %"class.WTF::StringImpl"** %857, align 8
  %858 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %849, i64 0, i32 1
  %859 = load i32, i32* %858, align 4
  %860 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %849, i64 1
  %861 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %44, i64 0, i32 1
  %862 = bitcast i8** %861 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %860, %"class.WTF::StringImpl"** %862, align 8
  %863 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %44, i64 0, i32 2
  store i32 %859, i32* %863, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %44)
  %864 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %849, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %865 = load atomic i32, i32* %864 monotonic, align 4
  %866 = and i32 %865, 2
  %867 = icmp eq i32 %866, 0
  %868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %849, i64 0, i32 0
  %869 = load i32, i32* %868, align 4
  br i1 %867, label %870, label %872

870:                                              ; preds = %856
  %871 = add i32 %869, -1
  store i32 %871, i32* %868, align 4
  br label %872

872:                                              ; preds = %870, %856
  %873 = phi i32 [ %871, %870 ], [ %869, %856 ]
  %874 = icmp eq i32 %873, 0
  br i1 %874, label %875, label %876

875:                                              ; preds = %872
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %849) #11
  br label %876

876:                                              ; preds = %851, %872, %875
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %847) #11
  %877 = bitcast %"class.WTF::StringView"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %877) #11
  %878 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %879 = bitcast %"class.WTF::StringView"* %45 to i64*
  store i64 %878, i64* %879, align 8
  %880 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %45, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %880, align 8
  %881 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %45, i64 0, i32 2
  store i32 2, i32* %881, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %45)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %877) #11
  %882 = bitcast %"class.WTF::StringView"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %882) #11
  %883 = load double, double* %376, align 8
  %884 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %883) #11
  %885 = icmp eq %"class.WTF::StringImpl"* %884, null
  br i1 %885, label %886, label %891

886:                                              ; preds = %876
  %887 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 1
  store i8* null, i8** %887, align 8
  %888 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %889 = bitcast %"class.WTF::StringView"* %46 to i64*
  store i64 %888, i64* %889, align 8
  %890 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 2
  store i32 0, i32* %890, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %46)
  br label %911

891:                                              ; preds = %876
  %892 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 0
  store %"class.WTF::StringImpl"* %884, %"class.WTF::StringImpl"** %892, align 8
  %893 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %884, i64 0, i32 1
  %894 = load i32, i32* %893, align 4
  %895 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %884, i64 1
  %896 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 1
  %897 = bitcast i8** %896 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %895, %"class.WTF::StringImpl"** %897, align 8
  %898 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 2
  store i32 %894, i32* %898, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %46)
  %899 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %884, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %900 = load atomic i32, i32* %899 monotonic, align 4
  %901 = and i32 %900, 2
  %902 = icmp eq i32 %901, 0
  %903 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %884, i64 0, i32 0
  %904 = load i32, i32* %903, align 4
  br i1 %902, label %905, label %907

905:                                              ; preds = %891
  %906 = add i32 %904, -1
  store i32 %906, i32* %903, align 4
  br label %907

907:                                              ; preds = %905, %891
  %908 = phi i32 [ %906, %905 ], [ %904, %891 ]
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %910, label %911

910:                                              ; preds = %907
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %884) #11
  br label %911

911:                                              ; preds = %886, %907, %910
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %882) #11
  %912 = bitcast %"class.WTF::StringView"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %912) #11
  %913 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %914 = bitcast %"class.WTF::StringView"* %47 to i64*
  store i64 %913, i64* %914, align 8
  %915 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %47, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8** %915, align 8
  %916 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %47, i64 0, i32 2
  store i32 2, i32* %916, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %47)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %912) #11
  %917 = bitcast %"class.WTF::StringView"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %917) #11
  %918 = load double, double* %381, align 8
  %919 = call %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double %918) #11
  %920 = icmp eq %"class.WTF::StringImpl"* %919, null
  br i1 %920, label %921, label %926

921:                                              ; preds = %911
  %922 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 1
  store i8* null, i8** %922, align 8
  %923 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %924 = bitcast %"class.WTF::StringView"* %48 to i64*
  store i64 %923, i64* %924, align 8
  %925 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 2
  store i32 0, i32* %925, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %48)
  br label %946

926:                                              ; preds = %911
  %927 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 0
  store %"class.WTF::StringImpl"* %919, %"class.WTF::StringImpl"** %927, align 8
  %928 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %919, i64 0, i32 1
  %929 = load i32, i32* %928, align 4
  %930 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %919, i64 1
  %931 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 1
  %932 = bitcast i8** %931 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %930, %"class.WTF::StringImpl"** %932, align 8
  %933 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 2
  store i32 %929, i32* %933, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %48)
  %934 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %919, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %935 = load atomic i32, i32* %934 monotonic, align 4
  %936 = and i32 %935, 2
  %937 = icmp eq i32 %936, 0
  %938 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %919, i64 0, i32 0
  %939 = load i32, i32* %938, align 4
  br i1 %937, label %940, label %942

940:                                              ; preds = %926
  %941 = add i32 %939, -1
  store i32 %941, i32* %938, align 4
  br label %942

942:                                              ; preds = %940, %926
  %943 = phi i32 [ %941, %940 ], [ %939, %926 ]
  %944 = icmp eq i32 %943, 0
  br i1 %944, label %945, label %946

945:                                              ; preds = %942
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %919) #11
  br label %946

946:                                              ; preds = %921, %942, %945
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %917) #11
  %947 = bitcast %"class.WTF::StringView"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %947) #11
  %948 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %949 = bitcast %"class.WTF::StringView"* %49 to i64*
  store i64 %948, i64* %949, align 8
  %950 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %49, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i8** %950, align 8
  %951 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %49, i64 0, i32 2
  store i32 1, i32* %951, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %49)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %947) #11
  %952 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #11
  %953 = ptrtoint %"class.WTF::StringImpl"* %952 to i64
  br label %954

954:                                              ; preds = %946, %385, %301, %90
  %955 = phi i64 [ %308, %301 ], [ 0, %90 ], [ %953, %946 ], [ 0, %385 ]
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #11
  %956 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %957 = icmp eq %"class.WTF::StringImpl"* %956, null
  br i1 %957, label %971, label %958

958:                                              ; preds = %954
  %959 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %956, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %960 = load atomic i32, i32* %959 monotonic, align 4
  %961 = and i32 %960, 2
  %962 = icmp eq i32 %961, 0
  %963 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %956, i64 0, i32 0
  %964 = load i32, i32* %963, align 4
  br i1 %962, label %965, label %967

965:                                              ; preds = %958
  %966 = add i32 %964, -1
  store i32 %966, i32* %963, align 4
  br label %967

967:                                              ; preds = %965, %958
  %968 = phi i32 [ %966, %965 ], [ %964, %958 ]
  %969 = icmp eq i32 %968, 0
  br i1 %969, label %970, label %971

970:                                              ; preds = %967
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %956) #11
  br label %971

971:                                              ; preds = %954, %967, %970
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %50) #11
  %972 = inttoptr i64 %955 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %972
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #11
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #11
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #11
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #11
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #11
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String24NumberToStringECMAScriptEd(double) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17DOMMatrixReadOnly16toJSONForBindingEPNS_11ScriptStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::DOMMatrixReadOnly"* readonly, %"class.blink::ScriptState"*) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.blink::V8ObjectBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.WTF::StringView", align 8
  %25 = alloca %"class.WTF::StringView", align 8
  %26 = alloca %"class.WTF::StringView", align 8
  %27 = alloca %"class.WTF::StringView", align 8
  %28 = alloca %"class.WTF::StringView", align 8
  %29 = bitcast %"class.blink::V8ObjectBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #11
  %30 = bitcast %"class.blink::V8ObjectBuilder"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  call void @_ZN5blink15V8ObjectBuilderC1EPNS_11ScriptStateE(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.blink::ScriptState"* %2) #11
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %33 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 1, i32* %35, align 8
  %36 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 0, i64 0
  %37 = load double, double* %36, align 8
  %38 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, double %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  %39 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  %40 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %41 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i8** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 1, i32* %43, align 8
  %44 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %45 = load double, double* %44, align 8
  %46 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6, double %45) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  %47 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #11
  %48 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %49 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i8** %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 1, i32* %51, align 8
  %52 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %53 = load double, double* %52, align 8
  %54 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %7, double %53) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #11
  %55 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #11
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %57 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0), i8** %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 1, i32* %59, align 8
  %60 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %61 = load double, double* %60, align 8
  %62 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %8, double %61) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #11
  %63 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #11
  %64 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %65 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i8** %66, align 8
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 1, i32* %67, align 8
  %68 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %69 = load double, double* %68, align 8
  %70 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %9, double %69) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #11
  %71 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #11
  %72 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %73 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i8** %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 1, i32* %75, align 8
  %76 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 3, i64 1
  %77 = load double, double* %76, align 8
  %78 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %10, double %77) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #11
  %79 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #11
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %81 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0), i8** %82, align 8
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 3, i32* %83, align 8
  %84 = load double, double* %36, align 8
  %85 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %11, double %84) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #11
  %86 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %88 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i8** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 3, i32* %90, align 8
  %91 = load double, double* %44, align 8
  %92 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %12, double %91) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %93 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #11
  %94 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %95 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i8** %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 3, i32* %97, align 8
  %98 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %99 = load double, double* %98, align 8
  %100 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %13, double %99) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #11
  %101 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #11
  %102 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %103 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i8** %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 3, i32* %105, align 8
  %106 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 0, i64 3
  %107 = load double, double* %106, align 8
  %108 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %14, double %107) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #11
  %109 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #11
  %110 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %111 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0), i8** %112, align 8
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 3, i32* %113, align 8
  %114 = load double, double* %52, align 8
  %115 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %15, double %114) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #11
  %116 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #11
  %117 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %118 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i8** %119, align 8
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 3, i32* %120, align 8
  %121 = load double, double* %60, align 8
  %122 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %16, double %121) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #11
  %123 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #11
  %124 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %125 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i8** %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 3, i32* %127, align 8
  %128 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %129 = load double, double* %128, align 8
  %130 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %17, double %129) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #11
  %131 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #11
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %133 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0), i8** %134, align 8
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 3, i32* %135, align 8
  %136 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 1, i64 3
  %137 = load double, double* %136, align 8
  %138 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %18, double %137) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #11
  %139 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #11
  %140 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %141 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0), i8** %142, align 8
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 3, i32* %143, align 8
  %144 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %145 = load double, double* %144, align 8
  %146 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %19, double %145) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #11
  %147 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #11
  %148 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %149 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0), i8** %150, align 8
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 3, i32* %151, align 8
  %152 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 2, i64 1
  %153 = load double, double* %152, align 8
  %154 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %20, double %153) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #11
  %155 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #11
  %156 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %157 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0), i8** %158, align 8
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 3, i32* %159, align 8
  %160 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %161 = load double, double* %160, align 8
  %162 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %21, double %161) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #11
  %163 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #11
  %164 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %165 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %164, i64* %165, align 8
  %166 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), i8** %166, align 8
  %167 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 3, i32* %167, align 8
  %168 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 2, i64 3
  %169 = load double, double* %168, align 8
  %170 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %22, double %169) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #11
  %171 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #11
  %172 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %173 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %172, i64* %173, align 8
  %174 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8** %174, align 8
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 3, i32* %175, align 8
  %176 = load double, double* %68, align 8
  %177 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %23, double %176) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #11
  %178 = bitcast %"class.WTF::StringView"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #11
  %179 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %180 = bitcast %"class.WTF::StringView"* %24 to i64*
  store i64 %179, i64* %180, align 8
  %181 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i8** %181, align 8
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  store i32 3, i32* %182, align 8
  %183 = load double, double* %76, align 8
  %184 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %24, double %183) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #11
  %185 = bitcast %"class.WTF::StringView"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %185) #11
  %186 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %187 = bitcast %"class.WTF::StringView"* %25 to i64*
  store i64 %186, i64* %187, align 8
  %188 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i8** %188, align 8
  %189 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 2
  store i32 3, i32* %189, align 8
  %190 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %191 = load double, double* %190, align 8
  %192 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %25, double %191) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %185) #11
  %193 = bitcast %"class.WTF::StringView"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %193) #11
  %194 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %195 = bitcast %"class.WTF::StringView"* %26 to i64*
  store i64 %194, i64* %195, align 8
  %196 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i8** %196, align 8
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %26, i64 0, i32 2
  store i32 3, i32* %197, align 8
  %198 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 3, i64 3
  %199 = load double, double* %198, align 8
  %200 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %26, double %199) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #11
  %201 = bitcast %"class.WTF::StringView"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %201) #11
  %202 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %203 = bitcast %"class.WTF::StringView"* %27 to i64*
  store i64 %202, i64* %203, align 8
  %204 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i8** %204, align 8
  %205 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 2
  store i32 4, i32* %205, align 8
  %206 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 2
  %207 = load i8, i8* %206, align 8, !range !2
  %208 = icmp ne i8 %207, 0
  %209 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder10AddBooleanERKN3WTF10StringViewEb(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %27, i1 zeroext %208) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %201) #11
  %210 = bitcast %"class.WTF::StringView"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %210) #11
  %211 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %212 = bitcast %"class.WTF::StringView"* %28 to i64*
  store i64 %211, i64* %212, align 8
  %213 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0), i8** %213, align 8
  %214 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 2
  store i32 10, i32* %214, align 8
  %215 = load double, double* %36, align 8
  %216 = fcmp oeq double %215, 1.000000e+00
  br i1 %216, label %217, label %262

217:                                              ; preds = %3
  %218 = load double, double* %44, align 8
  %219 = fcmp oeq double %218, 0.000000e+00
  br i1 %219, label %220, label %262

220:                                              ; preds = %217
  %221 = load double, double* %98, align 8
  %222 = fcmp oeq double %221, 0.000000e+00
  br i1 %222, label %223, label %262

223:                                              ; preds = %220
  %224 = load double, double* %106, align 8
  %225 = fcmp oeq double %224, 0.000000e+00
  br i1 %225, label %226, label %262

226:                                              ; preds = %223
  %227 = load double, double* %52, align 8
  %228 = fcmp oeq double %227, 0.000000e+00
  br i1 %228, label %229, label %262

229:                                              ; preds = %226
  %230 = load double, double* %60, align 8
  %231 = fcmp oeq double %230, 1.000000e+00
  br i1 %231, label %232, label %262

232:                                              ; preds = %229
  %233 = load double, double* %128, align 8
  %234 = fcmp oeq double %233, 0.000000e+00
  br i1 %234, label %235, label %262

235:                                              ; preds = %232
  %236 = load double, double* %136, align 8
  %237 = fcmp oeq double %236, 0.000000e+00
  br i1 %237, label %238, label %262

238:                                              ; preds = %235
  %239 = load double, double* %144, align 8
  %240 = fcmp oeq double %239, 0.000000e+00
  br i1 %240, label %241, label %262

241:                                              ; preds = %238
  %242 = load double, double* %152, align 8
  %243 = fcmp oeq double %242, 0.000000e+00
  br i1 %243, label %244, label %262

244:                                              ; preds = %241
  %245 = load double, double* %160, align 8
  %246 = fcmp oeq double %245, 1.000000e+00
  br i1 %246, label %247, label %262

247:                                              ; preds = %244
  %248 = load double, double* %168, align 8
  %249 = fcmp oeq double %248, 0.000000e+00
  br i1 %249, label %250, label %262

250:                                              ; preds = %247
  %251 = load double, double* %68, align 8
  %252 = fcmp oeq double %251, 0.000000e+00
  br i1 %252, label %253, label %262

253:                                              ; preds = %250
  %254 = load double, double* %76, align 8
  %255 = fcmp oeq double %254, 0.000000e+00
  br i1 %255, label %256, label %262

256:                                              ; preds = %253
  %257 = load double, double* %190, align 8
  %258 = fcmp oeq double %257, 0.000000e+00
  br i1 %258, label %259, label %262

259:                                              ; preds = %256
  %260 = load double, double* %198, align 8
  %261 = fcmp oeq double %260, 1.000000e+00
  br label %262

262:                                              ; preds = %3, %217, %220, %223, %226, %229, %232, %235, %238, %241, %244, %247, %250, %253, %256, %259
  %263 = phi i1 [ false, %256 ], [ false, %253 ], [ false, %250 ], [ false, %247 ], [ false, %244 ], [ false, %241 ], [ false, %238 ], [ false, %235 ], [ false, %232 ], [ false, %229 ], [ false, %226 ], [ false, %223 ], [ false, %220 ], [ false, %217 ], [ false, %3 ], [ %261, %259 ]
  %264 = call dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder10AddBooleanERKN3WTF10StringViewEb(%"class.blink::V8ObjectBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %28, i1 zeroext %263) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %210) #11
  call void @_ZNK5blink15V8ObjectBuilder14GetScriptValueEv(%"class.blink::ScriptValue"* sret %0, %"class.blink::V8ObjectBuilder"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #11
  ret void
}

declare void @_ZN5blink15V8ObjectBuilderC1EPNS_11ScriptStateE(%"class.blink::V8ObjectBuilder"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder9AddNumberERKN3WTF10StringViewEd(%"class.blink::V8ObjectBuilder"*, %"class.WTF::StringView"* dereferenceable(24), double) local_unnamed_addr #2

declare dereferenceable(16) %"class.blink::V8ObjectBuilder"* @_ZN5blink15V8ObjectBuilder10AddBooleanERKN3WTF10StringViewEb(%"class.blink::V8ObjectBuilder"*, %"class.WTF::StringView"* dereferenceable(24), i1 zeroext) local_unnamed_addr #2

declare void @_ZNK5blink15V8ObjectBuilder14GetScriptValueEv(%"class.blink::ScriptValue"* sret, %"class.blink::V8ObjectBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17DOMMatrixReadOnly18GetAffineTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::DOMMatrixReadOnly"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 0, i64 0
  %4 = load double, double* %3, align 8
  %5 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %6 = load double, double* %5, align 8
  %7 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %8 = load double, double* %7, align 8
  %9 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %10 = load double, double* %9, align 8
  %11 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %1, i64 0, i32 1, i32 0, i32 0, i64 3, i64 1
  %14 = load double, double* %13, align 8
  tail call void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"* %0, double %4, double %6, double %8, double %10, double %12, double %14) #11
  ret void
}

declare void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"*, double, double, double, double, double, double) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

declare %"class.blink::CSSValue"* @_ZN5blink9CSSParser16ParseSingleValueENS_13CSSPropertyIDERKN3WTF6StringEPKNS_16CSSParserContextE(i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSParserContext"*) local_unnamed_addr #2

declare %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2093", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2093", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2093"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #11
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2093"* nonnull %3, i8* %8) #11
  %9 = bitcast %"class.WTF::StringTypeAdapter.2093"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #11
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2093"* nonnull %2, i8* %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #11
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #11
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !4

41:                                               ; preds = %34
  call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #11
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #11
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !4

77:                                               ; preds = %70
  call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #11
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #11
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare zeroext i1 @_ZN5blink16TransformBuilder18HasRelativeLengthsERKNS_12CSSValueListE(%"class.blink::CSSValueList"* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN5blink16TransformBuilder25CreateTransformOperationsERKNS_8CSSValueERKNS_25CSSToLengthConversionDataE(%"class.blink::TransformOperations"* sret, %"class.blink::CSSValue"* dereferenceable(3), %"class.blink::CSSToLengthConversionData"* dereferenceable(56)) local_unnamed_addr #2

declare i32 @_ZNK5blink19TransformOperations19BoxSizeDependenciesEj(%"class.blink::TransformOperations"*, i32) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17DOMMatrixReadOnly5TraceEPNS_7VisitorE(%"class.blink::DOMMatrixReadOnly"*, %"class.blink::Visitor"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink17DOMMatrixReadOnly18GetWrapperTypeInfoEv(%"class.blink::DOMMatrixReadOnly"*) unnamed_addr #1 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17DOMMatrixReadOnly18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"*, i1 zeroext) local_unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #11
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.38, i64 0, i64 0), i8* %40, i8* %41) #11
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.39, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #11
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !4

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #11
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMMatrixReadOnly"* @_ZN5blink25MakeGarbageCollectedTraitINS_17DOMMatrixReadOnlyEE4CallIJRKN3WTF6VectorIdLj0ENS4_18PartitionAllocatorEEEjEEEPS1_DpOT_(%"class.WTF::Vector.567"* dereferenceable(16), i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.567", align 8
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #11
  %5 = bitcast i8* %4 to %"class.blink::DOMMatrixReadOnly"*
  %6 = getelementptr inbounds %"class.WTF::Vector.567", %"class.WTF::Vector.567"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.567", %"class.WTF::Vector.567"* %3, i64 0, i32 0, i32 0, i32 0
  store double* null, double** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.567", %"class.WTF::Vector.567"* %3, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = zext i32 %7 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64 %12) #11
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #11
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.567"* %3 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %9, align 8
  %19 = icmp ne i8* %14, null
  br label %20

20:                                               ; preds = %11, %2
  %21 = phi i8* [ null, %2 ], [ %14, %11 ]
  %22 = phi i1 [ false, %2 ], [ %19, %11 ]
  %23 = getelementptr inbounds %"class.WTF::Vector.567", %"class.WTF::Vector.567"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector.567", %"class.WTF::Vector.567"* %3, i64 0, i32 0, i32 0, i32 2
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.567", %"class.WTF::Vector.567"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load double*, double** %26, align 8
  %28 = icmp ne double* %27, null
  %29 = and i1 %22, %28
  br i1 %29, label %30, label %34, !prof !5

30:                                               ; preds = %20
  %31 = zext i32 %24 to i64
  %32 = bitcast double* %27 to i8*
  %33 = shl nuw nsw i64 %31, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %32, i64 %33, i1 false) #11
  br label %34

34:                                               ; preds = %20, %30
  %35 = load i32, i32* %1, align 4
  call void @_ZN5blink17DOMMatrixReadOnlyC2IN3WTF6VectorIdLj0ENS2_18PartitionAllocatorEEEEET_i(%"class.blink::DOMMatrixReadOnly"* %5, %"class.WTF::Vector.567"* nonnull %3, i32 %35)
  %36 = load double*, double** %8, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %44, label %39, !prof !5

39:                                               ; preds = %34
  %40 = load i32, i32* %25, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %43, label %42, !prof !4

42:                                               ; preds = %39
  store i32 0, i32* %25, align 4
  br label %43

43:                                               ; preds = %42, %39
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #11
  store double* null, double** %8, align 8
  br label %44

44:                                               ; preds = %34, %43
  %45 = getelementptr inbounds i8, i8* %4, i64 -4
  %46 = bitcast i8* %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = or i16 %47, 1
  store atomic i16 %48, i16* %46 release, align 2
  ret %"class.blink::DOMMatrixReadOnly"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17DOMMatrixReadOnlyC2IN3WTF6VectorIdLj0ENS2_18PartitionAllocatorEEEEET_i(%"class.blink::DOMMatrixReadOnly"*, %"class.WTF::Vector.567"*, i32) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17DOMMatrixReadOnlyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %9 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %10 = bitcast double* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %9, align 8
  %11 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %12 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %13 = bitcast double* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %12, align 8
  %14 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 3
  %15 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 3
  %16 = bitcast double* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %15, align 8
  switch i32 %2, label %127 [
    i32 6, label %17
    i32 16, label %50
  ]

17:                                               ; preds = %3
  %18 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 0) #11
  %19 = bitcast double* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 1) #11
  %22 = bitcast double* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 2) #11
  %25 = bitcast double* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 3) #11
  %28 = bitcast double* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 4) #11
  %31 = bitcast double* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 5) #11
  %34 = bitcast double* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.blink::TransformationMatrix"* %6 to i64*
  store i64 %20, i64* %36, align 8
  %37 = bitcast double* %8 to i64*
  store i64 %23, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %39 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %40 = bitcast double* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #11
  %41 = bitcast double* %39 to i64*
  store i64 %26, i64* %41, align 8
  %42 = bitcast double* %9 to i64*
  store i64 %29, i64* %42, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #11
  %43 = bitcast double* %12 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %43, align 8
  %44 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %45 = bitcast double* %44 to i64*
  store i64 %32, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 1
  %47 = bitcast double* %46 to i64*
  store i64 %35, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %49 = bitcast double* %48 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %49, align 8
  br label %124

50:                                               ; preds = %3
  %51 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 0) #11
  %52 = bitcast double* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 1) #11
  %55 = bitcast double* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 2) #11
  %58 = bitcast double* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 3) #11
  %61 = bitcast double* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 4) #11
  %64 = bitcast double* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 5) #11
  %67 = bitcast double* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 6) #11
  %70 = bitcast double* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 7) #11
  %73 = bitcast double* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 8) #11
  %76 = bitcast double* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 9) #11
  %79 = bitcast double* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 10) #11
  %82 = bitcast double* %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 11) #11
  %85 = bitcast double* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 12) #11
  %88 = bitcast double* %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 13) #11
  %91 = bitcast double* %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 14) #11
  %94 = bitcast double* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = tail call dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"* %1, i32 15) #11
  %97 = bitcast double* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.blink::TransformationMatrix"* %6 to i64*
  store i64 %53, i64* %99, align 8
  %100 = bitcast double* %8 to i64*
  store i64 %56, i64* %100, align 8
  %101 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %102 = bitcast double* %101 to i64*
  store i64 %59, i64* %102, align 8
  %103 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 3
  %104 = bitcast double* %103 to i64*
  store i64 %62, i64* %104, align 8
  %105 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %106 = bitcast double* %105 to i64*
  store i64 %65, i64* %106, align 8
  %107 = bitcast double* %9 to i64*
  store i64 %68, i64* %107, align 8
  %108 = bitcast double* %11 to i64*
  store i64 %71, i64* %108, align 8
  %109 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 3
  %110 = bitcast double* %109 to i64*
  store i64 %74, i64* %110, align 8
  %111 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %112 = bitcast double* %111 to i64*
  store i64 %77, i64* %112, align 8
  %113 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 1
  %114 = bitcast double* %113 to i64*
  store i64 %80, i64* %114, align 8
  %115 = bitcast double* %12 to i64*
  store i64 %83, i64* %115, align 8
  %116 = bitcast double* %14 to i64*
  store i64 %86, i64* %116, align 8
  %117 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %118 = bitcast double* %117 to i64*
  store i64 %89, i64* %118, align 8
  %119 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 1
  %120 = bitcast double* %119 to i64*
  store i64 %92, i64* %120, align 8
  %121 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %122 = bitcast double* %121 to i64*
  store i64 %95, i64* %122, align 8
  %123 = bitcast double* %15 to i64*
  store i64 %98, i64* %123, align 8
  br label %124

124:                                              ; preds = %17, %50
  %125 = phi i8 [ 0, %50 ], [ 1, %17 ]
  %126 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 2
  store i8 %125, i8* %126, align 8
  br label %127

127:                                              ; preds = %124, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIdEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.40, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.41, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) double* @_ZN3WTF6VectorIdLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.567"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.567", %"class.WTF::Vector.567"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.42, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.43, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.567", %"class.WTF::Vector.567"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load double*, double** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds double, double* %24, i64 %25
  ret double* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17DOMMatrixReadOnlyC2IPdEET_i(%"class.blink::DOMMatrixReadOnly"*, double*, i32) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17DOMMatrixReadOnlyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %9 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %10 = bitcast double* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %9, align 8
  %11 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %12 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %13 = bitcast double* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %12, align 8
  %14 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 3
  %15 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 3
  %16 = bitcast double* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %15, align 8
  switch i32 %2, label %76 [
    i32 6, label %17
    i32 16, label %36
  ]

17:                                               ; preds = %3
  %18 = bitcast double* %1 to <2 x i64>*
  %19 = load <2 x i64>, <2 x i64>* %18, align 8
  %20 = getelementptr inbounds double, double* %1, i64 2
  %21 = bitcast double* %20 to <2 x i64>*
  %22 = load <2 x i64>, <2 x i64>* %21, align 8
  %23 = getelementptr inbounds double, double* %1, i64 4
  %24 = bitcast double* %23 to <2 x i64>*
  %25 = load <2 x i64>, <2 x i64>* %24, align 8
  %26 = bitcast %"class.blink::TransformationMatrix"* %6 to <2 x i64>*
  store <2 x i64> %19, <2 x i64>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %28 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %29 = bitcast double* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %30 = bitcast double* %28 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %30, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #11
  %31 = bitcast double* %12 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %31, align 8
  %32 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %33 = bitcast double* %32 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %33, align 8
  %34 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %35 = bitcast double* %34 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %35, align 8
  br label %73

36:                                               ; preds = %3
  %37 = bitcast double* %1 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  %39 = getelementptr inbounds double, double* %1, i64 2
  %40 = bitcast double* %39 to <2 x i64>*
  %41 = load <2 x i64>, <2 x i64>* %40, align 8
  %42 = getelementptr inbounds double, double* %1, i64 4
  %43 = bitcast double* %42 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = getelementptr inbounds double, double* %1, i64 6
  %46 = bitcast double* %45 to <2 x i64>*
  %47 = load <2 x i64>, <2 x i64>* %46, align 8
  %48 = getelementptr inbounds double, double* %1, i64 8
  %49 = bitcast double* %48 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 8
  %51 = getelementptr inbounds double, double* %1, i64 10
  %52 = bitcast double* %51 to <2 x i64>*
  %53 = load <2 x i64>, <2 x i64>* %52, align 8
  %54 = getelementptr inbounds double, double* %1, i64 12
  %55 = bitcast double* %54 to <2 x i64>*
  %56 = load <2 x i64>, <2 x i64>* %55, align 8
  %57 = getelementptr inbounds double, double* %1, i64 14
  %58 = bitcast double* %57 to <2 x i64>*
  %59 = load <2 x i64>, <2 x i64>* %58, align 8
  %60 = bitcast %"class.blink::TransformationMatrix"* %6 to <2 x i64>*
  store <2 x i64> %38, <2 x i64>* %60, align 8
  %61 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %62 = bitcast double* %61 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %62, align 8
  %63 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %64 = bitcast double* %63 to <2 x i64>*
  store <2 x i64> %44, <2 x i64>* %64, align 8
  %65 = bitcast double* %11 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %65, align 8
  %66 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %67 = bitcast double* %66 to <2 x i64>*
  store <2 x i64> %50, <2 x i64>* %67, align 8
  %68 = bitcast double* %12 to <2 x i64>*
  store <2 x i64> %53, <2 x i64>* %68, align 8
  %69 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %70 = bitcast double* %69 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %70, align 8
  %71 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %72 = bitcast double* %71 to <2 x i64>*
  store <2 x i64> %59, <2 x i64>* %72, align 8
  br label %73

73:                                               ; preds = %17, %36
  %74 = phi i8 [ 0, %36 ], [ 1, %17 ]
  %75 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 2
  store i8 %74, i8* %75, align 8
  br label %76

76:                                               ; preds = %73, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17DOMMatrixReadOnlyC2IPfEET_i(%"class.blink::DOMMatrixReadOnly"*, float*, i32) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink17DOMMatrixReadOnlyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %6, align 8
  %7 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 1
  %8 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 1
  %9 = bitcast double* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %8, align 8
  %10 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 2
  %11 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 2
  %12 = bitcast double* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %11, align 8
  %13 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 3
  %14 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 3
  %15 = bitcast double* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false) #11
  store double 1.000000e+00, double* %14, align 8
  switch i32 %2, label %83 [
    i32 6, label %16
    i32 16, label %32
  ]

16:                                               ; preds = %3
  %17 = bitcast float* %1 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 4
  %19 = fpext <2 x float> %18 to <2 x double>
  %20 = getelementptr inbounds float, float* %1, i64 2
  %21 = bitcast float* %20 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 4
  %23 = fpext <2 x float> %22 to <2 x double>
  %24 = getelementptr inbounds float, float* %1, i64 4
  %25 = bitcast float* %24 to <2 x float>*
  %26 = load <2 x float>, <2 x float>* %25, align 4
  %27 = bitcast double* %6 to <2 x double>*
  store <2 x double> %19, <2 x double>* %27, align 8
  %28 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %29 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %30 = bitcast double* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #11
  %31 = bitcast double* %29 to <2 x double>*
  store <2 x double> %23, <2 x double>* %31, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #11
  br label %71

32:                                               ; preds = %3
  %33 = bitcast float* %1 to <2 x float>*
  %34 = load <2 x float>, <2 x float>* %33, align 4
  %35 = fpext <2 x float> %34 to <2 x double>
  %36 = getelementptr inbounds float, float* %1, i64 2
  %37 = bitcast float* %36 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 4
  %39 = fpext <2 x float> %38 to <2 x double>
  %40 = getelementptr inbounds float, float* %1, i64 4
  %41 = bitcast float* %40 to <2 x float>*
  %42 = load <2 x float>, <2 x float>* %41, align 4
  %43 = fpext <2 x float> %42 to <2 x double>
  %44 = getelementptr inbounds float, float* %1, i64 6
  %45 = bitcast float* %44 to <2 x float>*
  %46 = load <2 x float>, <2 x float>* %45, align 4
  %47 = fpext <2 x float> %46 to <2 x double>
  %48 = getelementptr inbounds float, float* %1, i64 8
  %49 = bitcast float* %48 to <2 x float>*
  %50 = load <2 x float>, <2 x float>* %49, align 4
  %51 = fpext <2 x float> %50 to <2 x double>
  %52 = getelementptr inbounds float, float* %1, i64 10
  %53 = bitcast float* %52 to <2 x float>*
  %54 = load <2 x float>, <2 x float>* %53, align 4
  %55 = fpext <2 x float> %54 to <2 x double>
  %56 = getelementptr inbounds float, float* %1, i64 12
  %57 = bitcast float* %56 to <2 x float>*
  %58 = load <2 x float>, <2 x float>* %57, align 4
  %59 = getelementptr inbounds float, float* %1, i64 14
  %60 = bitcast float* %59 to <2 x float>*
  %61 = load <2 x float>, <2 x float>* %60, align 4
  %62 = fpext <2 x float> %61 to <2 x double>
  %63 = bitcast double* %6 to <2 x double>*
  store <2 x double> %35, <2 x double>* %63, align 8
  %64 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 0, i64 2
  %65 = bitcast double* %64 to <2 x double>*
  store <2 x double> %39, <2 x double>* %65, align 8
  %66 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 1, i64 0
  %67 = bitcast double* %66 to <2 x double>*
  store <2 x double> %43, <2 x double>* %67, align 8
  %68 = bitcast double* %10 to <2 x double>*
  store <2 x double> %47, <2 x double>* %68, align 8
  %69 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 2, i64 0
  %70 = bitcast double* %69 to <2 x double>*
  store <2 x double> %51, <2 x double>* %70, align 8
  br label %71

71:                                               ; preds = %16, %32
  %72 = phi i8 [ 0, %32 ], [ 1, %16 ]
  %73 = phi <2 x double> [ %55, %32 ], [ <double 1.000000e+00, double 0.000000e+00>, %16 ]
  %74 = phi <2 x float> [ %58, %32 ], [ %26, %16 ]
  %75 = phi <2 x double> [ %62, %32 ], [ <double 0.000000e+00, double 1.000000e+00>, %16 ]
  %76 = fpext <2 x float> %74 to <2 x double>
  %77 = bitcast double* %11 to <2 x double>*
  store <2 x double> %73, <2 x double>* %77, align 8
  %78 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %79 = bitcast double* %78 to <2 x double>*
  store <2 x double> %76, <2 x double>* %79, align 8
  %80 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 1, i32 0, i32 0, i64 3, i64 2
  %81 = bitcast double* %80 to <2 x double>*
  store <2 x double> %75, <2 x double>* %81, align 8
  %82 = getelementptr inbounds %"class.blink::DOMMatrixReadOnly", %"class.blink::DOMMatrixReadOnly"* %0, i64 0, i32 2
  store i8 %72, i8* %82, align 8
  br label %83

83:                                               ; preds = %71, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateEPKvm(i8*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.blink::ArrayBufferContents", align 8
  %4 = alloca %"class.blink::ArrayBufferContents", align 8
  %5 = alloca %"class.blink::ArrayBufferContents", align 8
  %6 = alloca %"class.blink::ArrayBufferContents", align 8
  %7 = bitcast %"class.blink::ArrayBufferContents"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %5, i64 0, i32 0, i32 1
  %10 = bitcast %"class.blink::ArrayBufferContents"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZN5blink19ArrayBufferContentsC1EmmNS0_11SharingTypeENS0_20InitializationPolicyE(%"class.blink::ArrayBufferContents"* nonnull %5, i64 %1, i64 1, i32 0, i32 1) #11
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %11) #11
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17, !prof !4

16:                                               ; preds = %2, %13
  notail call fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64 %1) #13
  unreachable

17:                                               ; preds = %13
  %18 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  %19 = icmp eq %"class.v8::BackingStore"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %18) #11
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i8* [ %21, %20 ], [ null, %17 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %0, i64 %1, i1 false)
  %24 = bitcast %"class.blink::ArrayBufferContents"* %5 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::ArrayBufferContents"* %6 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %6, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::__shared_weak_count"** %9 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::__shared_weak_count"** %27 to i64*
  store i64 %29, i64* %30, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #11
  %31 = bitcast %"class.blink::ArrayBufferContents"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  %32 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #11
  %33 = bitcast i8* %32 to %"class.blink::DOMArrayBuffer"*
  %34 = bitcast %"class.blink::ArrayBufferContents"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #11
  %35 = bitcast %"class.blink::ArrayBufferContents"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 16, i1 false) #11
  %36 = bitcast i8* %32 to i32 (...)***
  %37 = getelementptr inbounds i8, i8* %32, i64 8
  %38 = bitcast i8* %37 to i64**
  store i64* null, i64** %38, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 16
  %40 = bitcast i8* %39 to i64*
  store i64 %25, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %32, i64 24
  %42 = bitcast i8* %41 to i64*
  store i64 %29, i64* %42, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #11
  %43 = getelementptr inbounds i8, i8* %32, i64 32
  store i8 0, i8* %43, align 8
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %3) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink14DOMArrayBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #11
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %4) #11
  %44 = getelementptr inbounds i8, i8* %32, i64 -4
  %45 = bitcast i8* %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = or i16 %46, 1
  store atomic i16 %47, i16* %45 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %6) #11
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret %"class.blink::DOMArrayBuffer"* %33
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::DOMTypedArray"* @_ZN5blink13DOMTypedArrayIfN2v812Float32ArrayELb0EE6CreateEPNS_18DOMArrayBufferBaseEmm(%"class.blink::DOMArrayBufferBase"*, i64, i64) local_unnamed_addr #1 align 2

declare void @_ZN5blink19ArrayBufferContentsC1EmmNS0_11SharingTypeENS0_20InitializationPolicyE(%"class.blink::ArrayBufferContents"*, i64, i64, i32, i32) unnamed_addr #2

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64) unnamed_addr #10 {
  tail call void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() #11
  tail call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 %0) #11
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !6
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #11, !srcloc !7
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"*) unnamed_addr #9

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() local_unnamed_addr #2

declare void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD2Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 1
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD0Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #1 comdat align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE(%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*) unnamed_addr #1 comdat align 2 {
  ret %"class.v8::Value"* null
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::DOMTypedArray.1991"* @_ZN5blink13DOMTypedArrayIdN2v812Float64ArrayELb0EE6CreateEPNS_18DOMArrayBufferBaseEmm(%"class.blink::DOMArrayBufferBase"*, i64, i64) local_unnamed_addr #1 align 2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2093", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2093"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2093", %"class.WTF::StringTypeAdapter.2093"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2093"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2093"* nonnull %4, i8* %14) #11
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2016"* %9) #11
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2016"* %9) #11
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i64 0, i64 0), i8* %25, i8* %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.48, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.49, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.48, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2093", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2094", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2093", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2093"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2093"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2093"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.2093"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2093", %"class.WTF::StringTypeAdapter.2093"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2093"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.2094"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2094", %"class.WTF::StringTypeAdapter.2094"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2094", %"class.WTF::StringTypeAdapter.2094"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2094"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2093"* nonnull %3, i8* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2094", %"class.WTF::StringTypeAdapter.2094"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2095"* nonnull %34, i8* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2016"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2093"* nonnull %5, i8* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2093", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2094", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2093", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2093"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2093"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2093"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.2093"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2093", %"class.WTF::StringTypeAdapter.2093"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2093"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.2094"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2094", %"class.WTF::StringTypeAdapter.2094"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2094", %"class.WTF::StringTypeAdapter.2094"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2094"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2093"* nonnull %3, i16* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2094", %"class.WTF::StringTypeAdapter.2094"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2095"* nonnull %34, i16* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2016"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2093"* nonnull %5, i16* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2093"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2016"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2093", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2093"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2093", %"class.WTF::StringTypeAdapter.2093"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2016", %"class.WTF::StringAppend.2016"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2093"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2093"* nonnull %4, i8* %13) #11
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2016", %"class.WTF::StringAppend.2016"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i64 0, i64 0), i8* %30, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.48, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.49, i64 0, i64 0), i8* %45, i8* %46) #11
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.48, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2093"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2095"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2093"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2095"*, i16*) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readnone }
attributes #13 = { noreturn }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{i32 -2137081524}
!7 = !{i32 -2137081503}
