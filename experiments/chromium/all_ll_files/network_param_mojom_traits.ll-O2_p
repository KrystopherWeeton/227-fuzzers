; ModuleID = '../../services/network/public/cpp/network_param_mojom_traits.cc'
source_filename = "../../services/network/public/cpp/network_param_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::mojom::internal::AuthChallengeInfo_Data" = type { %"struct.mojo::internal::StructHeader", i8, [7 x i8], %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.3", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.1"*, %"class.mojo::ScopedHandleBase.1"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.1" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.1"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.5" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.14, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.16", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.13", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.14 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15" }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i32 }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.url::mojom::internal::Origin_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0", i16, [6 x i8], %"struct.mojo::internal::Pointer.27" }
%"struct.mojo::internal::Pointer.27" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.network::mojom::internal::HttpVersion_Data" = type { %"struct.mojo::internal::StructHeader", i16, i16, [4 x i8] }
%"class.net::HttpVersion" = type { i32 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom25AuthChallengeInfoDataViewEN3net17AuthChallengeInfoEE4ReadES3_PS5_(%"class.network::mojom::internal::AuthChallengeInfo_Data"*, %"class.mojo::Message"*, %"class.net::AuthChallengeInfo"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.network::mojom::internal::AuthChallengeInfo_Data", %"class.network::mojom::internal::AuthChallengeInfo_Data"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = and i8 %5, 1
  %7 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 0
  store i8 %6, i8* %7, align 8
  %8 = getelementptr inbounds %"class.network::mojom::internal::AuthChallengeInfo_Data", %"class.network::mojom::internal::AuthChallengeInfo_Data"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %8, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %3
  %13 = bitcast %"struct.mojo::internal::Pointer"* %8 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 %10
  %15 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 1
  %16 = bitcast i8* %14 to %"class.url::mojom::internal::Origin_Data"*
  %17 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN3url5mojom14OriginDataViewENS1_6OriginEE4ReadES3_PS4_(%"class.url::mojom::internal::Origin_Data"* nonnull %16, %"class.mojo::Message"* %1, %"class.url::Origin"* %15) #4
  br i1 %17, label %18, label %230

18:                                               ; preds = %3, %12
  %19 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 2
  %20 = getelementptr inbounds %"class.network::mojom::internal::AuthChallengeInfo_Data", %"class.network::mojom::internal::AuthChallengeInfo_Data"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %20, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = bitcast %"struct.mojo::internal::Pointer.0"* %20 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 %22
  br i1 %23, label %71, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = getelementptr inbounds i8, i8* %25, i64 4
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 1
  %31 = zext i32 %30 to i64
  %32 = tail call i1 @llvm.is.constant.i64(i64 %31) #4
  %33 = icmp ult i32 %30, 23
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %53

35:                                               ; preds = %26
  %36 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %31, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  br label %47

44:                                               ; preds = %35
  %45 = trunc i32 %30 to i8
  store i8 %45, i8* %37, align 1
  %46 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  br label %47

47:                                               ; preds = %44, %40
  %48 = phi i8* [ %43, %40 ], [ %46, %44 ]
  %49 = icmp eq i32 %30, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 %27, i64 %31, i1 false) #4
  br label %51

51:                                               ; preds = %50, %47
  %52 = getelementptr inbounds i8, i8* %48, i64 %31
  store i8 0, i8* %52, align 1
  br label %56

53:                                               ; preds = %26
  %54 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %19, i8* %27, i64 %31) #4
  %55 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %56

56:                                               ; preds = %53, %51
  %57 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %55, %53 ], [ %36, %51 ]
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %64 = select i1 %60, i8* %62, i8* %63
  %65 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = zext i8 %59 to i64
  %68 = select i1 %60, i64 %66, i64 %67
  %69 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %64, i64 %68) #4
  br i1 %69, label %71, label %70

70:                                               ; preds = %56
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #4
  br label %71

71:                                               ; preds = %70, %56, %18
  %72 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 3
  %73 = getelementptr inbounds %"class.network::mojom::internal::AuthChallengeInfo_Data", %"class.network::mojom::internal::AuthChallengeInfo_Data"* %0, i64 0, i32 5
  %74 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %73, i64 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  %77 = bitcast %"struct.mojo::internal::Pointer.0"* %73 to i8*
  %78 = getelementptr inbounds i8, i8* %77, i64 %75
  br i1 %76, label %124, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds i8, i8* %78, i64 8
  %81 = getelementptr inbounds i8, i8* %78, i64 4
  %82 = bitcast i8* %81 to i32*
  %83 = load i32, i32* %82, align 1
  %84 = zext i32 %83 to i64
  %85 = tail call i1 @llvm.is.constant.i64(i64 %84) #4
  %86 = icmp ult i32 %83, 23
  %87 = and i1 %86, %85
  br i1 %87, label %88, label %106

88:                                               ; preds = %79
  %89 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %89, i64 0, i32 1, i32 0
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %84, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  br label %100

97:                                               ; preds = %88
  %98 = trunc i32 %83 to i8
  store i8 %98, i8* %90, align 1
  %99 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  br label %100

100:                                              ; preds = %97, %93
  %101 = phi i8* [ %96, %93 ], [ %99, %97 ]
  %102 = icmp eq i32 %83, 0
  br i1 %102, label %104, label %103

103:                                              ; preds = %100
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %101, i8* align 1 %80, i64 %84, i1 false) #4
  br label %104

104:                                              ; preds = %103, %100
  %105 = getelementptr inbounds i8, i8* %101, i64 %84
  store i8 0, i8* %105, align 1
  br label %109

106:                                              ; preds = %79
  %107 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %80, i64 %84) #4
  %108 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %109

109:                                              ; preds = %106, %104
  %110 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %108, %106 ], [ %89, %104 ]
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %117 = select i1 %113, i8* %115, i8* %116
  %118 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = zext i8 %112 to i64
  %121 = select i1 %113, i64 %119, i64 %120
  %122 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %117, i64 %121) #4
  br i1 %122, label %124, label %123

123:                                              ; preds = %109
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #4
  br label %124

124:                                              ; preds = %123, %109, %71
  %125 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 4
  %126 = getelementptr inbounds %"class.network::mojom::internal::AuthChallengeInfo_Data", %"class.network::mojom::internal::AuthChallengeInfo_Data"* %0, i64 0, i32 6
  %127 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %126, i64 0, i32 0
  %128 = load i64, i64* %127, align 8
  %129 = icmp eq i64 %128, 0
  %130 = bitcast %"struct.mojo::internal::Pointer.0"* %126 to i8*
  %131 = getelementptr inbounds i8, i8* %130, i64 %128
  br i1 %129, label %177, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds i8, i8* %131, i64 8
  %134 = getelementptr inbounds i8, i8* %131, i64 4
  %135 = bitcast i8* %134 to i32*
  %136 = load i32, i32* %135, align 1
  %137 = zext i32 %136 to i64
  %138 = tail call i1 @llvm.is.constant.i64(i64 %137) #4
  %139 = icmp ult i32 %136, 23
  %140 = and i1 %139, %138
  br i1 %140, label %141, label %159

141:                                              ; preds = %132
  %142 = bitcast %"class.std::__1::basic_string"* %125 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %143 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %142, i64 0, i32 1, i32 0
  %144 = load i8, i8* %143, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %137, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i8*, i8** %148, align 8
  br label %153

150:                                              ; preds = %141
  %151 = trunc i32 %136 to i8
  store i8 %151, i8* %143, align 1
  %152 = bitcast %"class.std::__1::basic_string"* %125 to i8*
  br label %153

153:                                              ; preds = %150, %146
  %154 = phi i8* [ %149, %146 ], [ %152, %150 ]
  %155 = icmp eq i32 %136, 0
  br i1 %155, label %157, label %156

156:                                              ; preds = %153
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %133, i64 %137, i1 false) #4
  br label %157

157:                                              ; preds = %156, %153
  %158 = getelementptr inbounds i8, i8* %154, i64 %137
  store i8 0, i8* %158, align 1
  br label %162

159:                                              ; preds = %132
  %160 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %125, i8* %133, i64 %137) #4
  %161 = bitcast %"class.std::__1::basic_string"* %125 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %162

162:                                              ; preds = %159, %157
  %163 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %161, %159 ], [ %142, %157 ]
  %164 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %163, i64 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1
  %166 = icmp slt i8 %165, 0
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %125, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = bitcast %"class.std::__1::basic_string"* %125 to i8*
  %170 = select i1 %166, i8* %168, i8* %169
  %171 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = zext i8 %165 to i64
  %174 = select i1 %166, i64 %172, i64 %173
  %175 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %170, i64 %174) #4
  br i1 %175, label %177, label %176

176:                                              ; preds = %162
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #4
  br label %177

177:                                              ; preds = %176, %162, %124
  %178 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 5
  %179 = getelementptr inbounds %"class.network::mojom::internal::AuthChallengeInfo_Data", %"class.network::mojom::internal::AuthChallengeInfo_Data"* %0, i64 0, i32 7
  %180 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %179, i64 0, i32 0
  %181 = load i64, i64* %180, align 8
  %182 = icmp eq i64 %181, 0
  %183 = bitcast %"struct.mojo::internal::Pointer.0"* %179 to i8*
  %184 = getelementptr inbounds i8, i8* %183, i64 %181
  br i1 %182, label %230, label %185

185:                                              ; preds = %177
  %186 = getelementptr inbounds i8, i8* %184, i64 8
  %187 = getelementptr inbounds i8, i8* %184, i64 4
  %188 = bitcast i8* %187 to i32*
  %189 = load i32, i32* %188, align 1
  %190 = zext i32 %189 to i64
  %191 = tail call i1 @llvm.is.constant.i64(i64 %190) #4
  %192 = icmp ult i32 %189, 23
  %193 = and i1 %192, %191
  br i1 %193, label %194, label %212

194:                                              ; preds = %185
  %195 = bitcast %"class.std::__1::basic_string"* %178 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %196 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %195, i64 0, i32 1, i32 0
  %197 = load i8, i8* %196, align 1
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %199, label %203

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %190, i64* %200, align 8
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i8*, i8** %201, align 8
  br label %206

203:                                              ; preds = %194
  %204 = trunc i32 %189 to i8
  store i8 %204, i8* %196, align 1
  %205 = bitcast %"class.std::__1::basic_string"* %178 to i8*
  br label %206

206:                                              ; preds = %203, %199
  %207 = phi i8* [ %202, %199 ], [ %205, %203 ]
  %208 = icmp eq i32 %189, 0
  br i1 %208, label %210, label %209

209:                                              ; preds = %206
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %207, i8* align 1 %186, i64 %190, i1 false) #4
  br label %210

210:                                              ; preds = %209, %206
  %211 = getelementptr inbounds i8, i8* %207, i64 %190
  store i8 0, i8* %211, align 1
  br label %215

212:                                              ; preds = %185
  %213 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %178, i8* %186, i64 %190) #4
  %214 = bitcast %"class.std::__1::basic_string"* %178 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %215

215:                                              ; preds = %212, %210
  %216 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %214, %212 ], [ %195, %210 ]
  %217 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %216, i64 0, i32 1, i32 0
  %218 = load i8, i8* %217, align 1
  %219 = icmp slt i8 %218, 0
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %178, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = bitcast %"class.std::__1::basic_string"* %178 to i8*
  %223 = select i1 %219, i8* %221, i8* %222
  %224 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = zext i8 %218 to i64
  %227 = select i1 %219, i64 %225, i64 %226
  %228 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %223, i64 %227) #4
  br i1 %228, label %230, label %229

229:                                              ; preds = %215
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #4
  br label %230

230:                                              ; preds = %12, %177, %215, %229
  %231 = phi i1 [ true, %177 ], [ true, %215 ], [ true, %229 ], [ false, %12 ]
  ret i1 %231
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN7network5mojom19HttpVersionDataViewEN3net11HttpVersionEE4ReadES3_PS5_(%"class.network::mojom::internal::HttpVersion_Data"*, %"class.net::HttpVersion"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::internal::HttpVersion_Data", %"class.network::mojom::internal::HttpVersion_Data"* %0, i64 0, i32 1
  %4 = load i16, i16* %3, align 1
  %5 = getelementptr inbounds %"class.network::mojom::internal::HttpVersion_Data", %"class.network::mojom::internal::HttpVersion_Data"* %0, i64 0, i32 2
  %6 = load i16, i16* %5, align 1
  %7 = zext i16 %4 to i32
  %8 = shl nuw i32 %7, 16
  %9 = zext i16 %6 to i32
  %10 = or i32 %8, %9
  %11 = getelementptr inbounds %"class.net::HttpVersion", %"class.net::HttpVersion"* %1, i64 0, i32 0
  store i32 %10, i32* %11, align 4
  ret i1 true
}

declare zeroext i1 @_ZN4mojo12StructTraitsIN3url5mojom14OriginDataViewENS1_6OriginEE4ReadES3_PS4_(%"class.url::mojom::internal::Origin_Data"*, %"class.mojo::Message"*, %"class.url::Origin"*) local_unnamed_addr #1

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
