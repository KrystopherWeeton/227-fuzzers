; ModuleID = '../../third_party/blink/renderer/core/svg/svg_animated_integer_optional_integer.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_animated_integer_optional_integer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.195" }
%"struct.std::__1::atomic.195" = type { %"struct.std::__1::__atomic_base.196" }
%"struct.std::__1::__atomic_base.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.182", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.126", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.46" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.106", %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.118", %"class.std::__1::__compressed_pair.120", [4 x i8] }>
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108", %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { i64 }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { float }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.129", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.149" }
%"class.WTF::VectorBuffer.149" = type { %"class.WTF::VectorBufferBase.150" }
%"class.WTF::VectorBufferBase.150" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.163" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.85"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.186" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.181 }
%class.scoped_refptr.181 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__cxx_atomic_impl.184" }
%"struct.std::__1::__cxx_atomic_impl.184" = type { %"struct.std::__1::__cxx_atomic_base_impl.185" }
%"struct.std::__1::__cxx_atomic_base_impl.185" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::SVGAnimatedIntegerOptionalInteger" = type { %"class.blink::SVGAnimatedPropertyCommon", %"class.blink::Member.8", %"class.blink::Member.8" }
%"class.blink::SVGAnimatedPropertyCommon" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::SVGAnimatedPropertyBase" = type { %"class.blink::GarbageCollectedMixin", i24, %"class.blink::Member", %"class.blink::QualifiedName"* }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SVGElement"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::SVGIntegerOptionalInteger"* }
%"class.blink::SVGIntegerOptionalInteger" = type { %"class.blink::SVGPropertyBase", %"class.blink::Member.6", %"class.blink::Member.6" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::SVGInteger"* }
%"class.blink::SVGInteger" = type <{ %"class.blink::SVGPropertyHelper", i32, [4 x i8] }>
%"class.blink::SVGPropertyHelper" = type { %"class.blink::SVGPropertyBase" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::SVGAnimatedInteger"* }
%"class.blink::SVGAnimatedInteger" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty", %"class.blink::Member.13" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::SVGAnimatedProperty" = type { %"class.blink::SVGAnimatedPropertyCommon.12" }
%"class.blink::SVGAnimatedPropertyCommon.12" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.6", %"class.blink::Member.6" }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::SVGAnimatedIntegerOptionalInteger"* }
%"class.blink::SVGElement" = type opaque
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink33SVGAnimatedIntegerOptionalIntegerD0Ev = comdat any

$_ZNK5blink25SVGAnimatedPropertyCommonINS_25SVGIntegerOptionalIntegerEE13BaseValueBaseEv = comdat any

$_ZNK5blink25SVGAnimatedPropertyCommonINS_25SVGIntegerOptionalIntegerEE11IsAnimatingEv = comdat any

$_ZN5blink25SVGAnimatedPropertyCommonINS_25SVGIntegerOptionalIntegerEE19CreateAnimatedValueEv = comdat any

$_ZN5blink25SVGAnimatedPropertyCommonINS_25SVGIntegerOptionalIntegerEE16AttributeChangedERKN3WTF6StringE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_18SVGAnimatedIntegerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_25SVGIntegerOptionalIntegerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink33SVGAnimatedIntegerOptionalIntegerE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SVGAnimatedIntegerOptionalInteger"*, %"class.blink::Visitor"*)* @_ZNK5blink33SVGAnimatedIntegerOptionalInteger5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::SVGAnimatedPropertyBase"*)* @_ZN5blink23SVGAnimatedPropertyBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGAnimatedIntegerOptionalInteger"*)* @_ZN5blink33SVGAnimatedIntegerOptionalIntegerD0Ev to i8*), i8* bitcast (%"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyCommon"*)* @_ZNK5blink25SVGAnimatedPropertyCommonINS_25SVGIntegerOptionalIntegerEE13BaseValueBaseEv to i8*), i8* bitcast (i1 (%"class.blink::SVGAnimatedPropertyCommon"*)* @_ZNK5blink25SVGAnimatedPropertyCommonINS_25SVGIntegerOptionalIntegerEE11IsAnimatingEv to i8*), i8* bitcast (%"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyCommon"*)* @_ZN5blink25SVGAnimatedPropertyCommonINS_25SVGIntegerOptionalIntegerEE19CreateAnimatedValueEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimatedIntegerOptionalInteger"*, %"class.blink::SVGPropertyBase"*)* @_ZN5blink33SVGAnimatedIntegerOptionalInteger16SetAnimatedValueEPNS_15SVGPropertyBaseE to i8*), i8* bitcast (void (%"class.blink::SVGAnimatedIntegerOptionalInteger"*)* @_ZN5blink33SVGAnimatedIntegerOptionalInteger14AnimationEndedEv to i8*), i8* bitcast (i32 (%"class.blink::SVGAnimatedPropertyCommon"*, %"class.WTF::String"*)* @_ZN5blink25SVGAnimatedPropertyCommonINS_25SVGIntegerOptionalIntegerEE16AttributeChangedERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::SVGAnimatedIntegerOptionalInteger"*)* @_ZNK5blink33SVGAnimatedIntegerOptionalInteger25NeedsSynchronizeAttributeEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimatedPropertyBase"*)* @_ZN5blink23SVGAnimatedPropertyBase20SynchronizeAttributeEv to i8*)] }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGPropertyBase]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink18SVGAnimatedIntegerE = external unnamed_addr constant { [12 x i8*], [13 x i8*] }, align 8
@_ZTVN5blink15ScriptWrappableE = external unnamed_addr constant { [11 x i8*] }, align 8

@_ZN5blink33SVGAnimatedIntegerOptionalIntegerC1EPNS_10SVGElementERKNS_13QualifiedNameEi = hidden unnamed_addr alias void (%"class.blink::SVGAnimatedIntegerOptionalInteger"*, %"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, i32), void (%"class.blink::SVGAnimatedIntegerOptionalInteger"*, %"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, i32)* @_ZN5blink33SVGAnimatedIntegerOptionalIntegerC2EPNS_10SVGElementERKNS_13QualifiedNameEi

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33SVGAnimatedIntegerOptionalIntegerC2EPNS_10SVGElementERKNS_13QualifiedNameEi(%"class.blink::SVGAnimatedIntegerOptionalInteger"*, %"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 16) #5
  %6 = bitcast i8* %5 to %"class.blink::SVGInteger"*
  tail call void @_ZN5blink10SVGIntegerC1Ei(%"class.blink::SVGInteger"* %6, i32 %3) #5
  %7 = getelementptr inbounds i8, i8* %5, i64 -4
  %8 = bitcast i8* %7 to i16*
  %9 = load atomic i16, i16* %8 monotonic, align 2
  %10 = or i16 %9, 1
  store atomic i16 %10, i16* %8 release, align 2
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 16) #5
  %12 = bitcast i8* %11 to %"class.blink::SVGInteger"*
  tail call void @_ZN5blink10SVGIntegerC1Ei(%"class.blink::SVGInteger"* %12, i32 %3) #5
  %13 = getelementptr inbounds i8, i8* %11, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 24) #5
  %18 = bitcast i8* %17 to %"class.blink::SVGIntegerOptionalInteger"*
  tail call void @_ZN5blink25SVGIntegerOptionalIntegerC1EPNS_10SVGIntegerES2_(%"class.blink::SVGIntegerOptionalInteger"* %18, %"class.blink::SVGInteger"* %6, %"class.blink::SVGInteger"* %12) #5
  %19 = getelementptr inbounds i8, i8* %17, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  %23 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"* %23, i32 6, %"class.blink::SVGElement"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %2, i32 0, i32 %3) #5
  %24 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.blink::SVGIntegerOptionalInteger"** %25 to i8**
  store i8* %17, i8** %26, align 8
  %27 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %"class.blink::SVGIntegerOptionalInteger"** %27 to i8**
  store i8* %17, i8** %28, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN5blink33SVGAnimatedIntegerOptionalIntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %29 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 1
  %30 = getelementptr inbounds i8, i8* %17, i64 8
  %31 = bitcast i8* %30 to %"class.blink::SVGInteger"**
  %32 = load %"class.blink::SVGInteger"*, %"class.blink::SVGInteger"** %31, align 8
  %33 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 72) #5
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds i8, i8* %33, i64 8
  %36 = bitcast i8* %35 to i64**
  store i64* null, i64** %36, align 8
  %37 = getelementptr inbounds i8, i8* %33, i64 16
  %38 = getelementptr inbounds %"class.blink::SVGInteger", %"class.blink::SVGInteger"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = bitcast i8* %37 to %"class.blink::SVGAnimatedPropertyBase"*
  tail call void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"* %40, i32 5, %"class.blink::SVGElement"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %2, i32 0, i32 %39) #5
  %41 = bitcast i8* %37 to i32 (...)***
  %42 = getelementptr inbounds i8, i8* %33, i64 48
  %43 = bitcast i8* %42 to %"class.blink::SVGInteger"**
  store %"class.blink::SVGInteger"* %32, %"class.blink::SVGInteger"** %43, align 8
  %44 = getelementptr inbounds i8, i8* %33, i64 56
  %45 = bitcast i8* %44 to %"class.blink::SVGInteger"**
  store %"class.blink::SVGInteger"* %32, %"class.blink::SVGInteger"** %45, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [13 x i8*] }, { [12 x i8*], [13 x i8*] }* @_ZTVN5blink18SVGAnimatedIntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [13 x i8*] }, { [12 x i8*], [13 x i8*] }* @_ZTVN5blink18SVGAnimatedIntegerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %46 = getelementptr inbounds i8, i8* %33, i64 64
  %47 = bitcast i8* %46 to %"class.blink::SVGAnimatedIntegerOptionalInteger"**
  store %"class.blink::SVGAnimatedIntegerOptionalInteger"* null, %"class.blink::SVGAnimatedIntegerOptionalInteger"** %47, align 8
  %48 = getelementptr inbounds i8, i8* %33, i64 -4
  %49 = bitcast i8* %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = or i16 %50, 1
  store atomic i16 %51, i16* %49 release, align 2
  %52 = bitcast %"class.blink::Member.8"* %29 to i8**
  store i8* %33, i8** %52, align 8
  %53 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 2
  %54 = load %"class.blink::SVGIntegerOptionalInteger"*, %"class.blink::SVGIntegerOptionalInteger"** %25, align 8
  %55 = getelementptr inbounds %"class.blink::SVGIntegerOptionalInteger", %"class.blink::SVGIntegerOptionalInteger"* %54, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::SVGInteger"*, %"class.blink::SVGInteger"** %55, align 8
  %57 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 72) #5
  %58 = bitcast i8* %57 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %59 = getelementptr inbounds i8, i8* %57, i64 8
  %60 = bitcast i8* %59 to i64**
  store i64* null, i64** %60, align 8
  %61 = getelementptr inbounds i8, i8* %57, i64 16
  %62 = getelementptr inbounds %"class.blink::SVGInteger", %"class.blink::SVGInteger"* %56, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = bitcast i8* %61 to %"class.blink::SVGAnimatedPropertyBase"*
  tail call void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"* %64, i32 5, %"class.blink::SVGElement"* %1, %"class.blink::QualifiedName"* dereferenceable(8) %2, i32 0, i32 %63) #5
  %65 = bitcast i8* %61 to i32 (...)***
  %66 = getelementptr inbounds i8, i8* %57, i64 48
  %67 = bitcast i8* %66 to %"class.blink::SVGInteger"**
  store %"class.blink::SVGInteger"* %56, %"class.blink::SVGInteger"** %67, align 8
  %68 = getelementptr inbounds i8, i8* %57, i64 56
  %69 = bitcast i8* %68 to %"class.blink::SVGInteger"**
  store %"class.blink::SVGInteger"* %56, %"class.blink::SVGInteger"** %69, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [13 x i8*] }, { [12 x i8*], [13 x i8*] }* @_ZTVN5blink18SVGAnimatedIntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [13 x i8*] }, { [12 x i8*], [13 x i8*] }* @_ZTVN5blink18SVGAnimatedIntegerE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %70 = getelementptr inbounds i8, i8* %57, i64 64
  %71 = bitcast i8* %70 to %"class.blink::SVGAnimatedIntegerOptionalInteger"**
  store %"class.blink::SVGAnimatedIntegerOptionalInteger"* null, %"class.blink::SVGAnimatedIntegerOptionalInteger"** %71, align 8
  %72 = getelementptr inbounds i8, i8* %57, i64 -4
  %73 = bitcast i8* %72 to i16*
  %74 = load atomic i16, i16* %73 monotonic, align 2
  %75 = or i16 %74, 1
  store atomic i16 %75, i16* %73 release, align 2
  %76 = bitcast %"class.blink::Member.8"* %53 to i8**
  store i8* %57, i8** %76, align 8
  %77 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %29, i64 0, i32 0, i32 0
  %78 = load %"class.blink::SVGAnimatedInteger"*, %"class.blink::SVGAnimatedInteger"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::SVGAnimatedInteger", %"class.blink::SVGAnimatedInteger"* %78, i64 0, i32 2
  %80 = ptrtoint %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0 to i64
  %81 = bitcast %"class.blink::Member.13"* %79 to i64*
  store atomic i64 %80, i64* %81 monotonic, align 8
  %82 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %4
  %85 = bitcast %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0 to i8*
  %86 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %85) #5
  br label %87

87:                                               ; preds = %4, %84
  %88 = getelementptr inbounds %"class.blink::Member.8", %"class.blink::Member.8"* %53, i64 0, i32 0, i32 0
  %89 = load %"class.blink::SVGAnimatedInteger"*, %"class.blink::SVGAnimatedInteger"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::SVGAnimatedInteger", %"class.blink::SVGAnimatedInteger"* %89, i64 0, i32 2
  %91 = bitcast %"class.blink::Member.13"* %90 to i64*
  store atomic i64 %80, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #5
  br label %97

97:                                               ; preds = %87, %94
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink33SVGAnimatedIntegerOptionalInteger5TraceEPNS_7VisitorE(%"class.blink::SVGAnimatedIntegerOptionalInteger"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.8"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18SVGAnimatedIntegerEE5TraceEPNS_7VisitorEPKv) #5
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.8"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18SVGAnimatedIntegerEE5TraceEPNS_7VisitorEPKv) #5
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 0, i32 1
  %26 = bitcast %"class.blink::Member.2"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25SVGIntegerOptionalIntegerEE5TraceEPNS_7VisitorEPKv) #5
  br label %35

35:                                               ; preds = %29, %24
  %36 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 0, i32 2
  %37 = bitcast %"class.blink::Member.2"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_25SVGIntegerOptionalIntegerEE5TraceEPNS_7VisitorEPKv) #5
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink23SVGAnimatedPropertyBase5TraceEPNS_7VisitorE(%"class.blink::SVGAnimatedPropertyBase"* %47, %"class.blink::Visitor"* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33SVGAnimatedIntegerOptionalInteger16SetAnimatedValueEPNS_15SVGPropertyBaseE(%"class.blink::SVGAnimatedIntegerOptionalInteger"* nocapture, %"class.blink::SVGPropertyBase"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 0, i32 2
  %4 = ptrtoint %"class.blink::SVGPropertyBase"* %1 to i64
  %5 = bitcast %"class.blink::Member.2"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  %8 = bitcast %"class.blink::SVGPropertyBase"* %1 to %"class.blink::SVGIntegerOptionalInteger"*
  br i1 %7, label %14, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::SVGPropertyBase"* %1 to i8*
  %11 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #5
  %12 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::SVGIntegerOptionalInteger"*, %"class.blink::SVGIntegerOptionalInteger"** %12, align 8
  br label %14

14:                                               ; preds = %2, %9
  %15 = phi %"class.blink::SVGIntegerOptionalInteger"* [ %8, %2 ], [ %13, %9 ]
  %16 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.blink::SVGAnimatedInteger"*, %"class.blink::SVGAnimatedInteger"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::SVGAnimatedInteger", %"class.blink::SVGAnimatedInteger"* %17, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::SVGIntegerOptionalInteger", %"class.blink::SVGIntegerOptionalInteger"* %15, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::SVGInteger"*, %"class.blink::SVGInteger"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::SVGInteger", %"class.blink::SVGInteger"* %21, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::SVGAnimatedPropertyCommon.12"* %18 to void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)***
  %24 = load void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)** %24, i64 6
  %26 = load void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)** %25, align 8
  tail call void %26(%"class.blink::SVGAnimatedPropertyCommon.12"* %18, %"class.blink::SVGPropertyBase"* %22) #5
  %27 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::SVGAnimatedInteger"*, %"class.blink::SVGAnimatedInteger"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::SVGAnimatedInteger", %"class.blink::SVGAnimatedInteger"* %28, i64 0, i32 1, i32 0
  %30 = load %"class.blink::SVGIntegerOptionalInteger"*, %"class.blink::SVGIntegerOptionalInteger"** %19, align 8
  %31 = getelementptr inbounds %"class.blink::SVGIntegerOptionalInteger", %"class.blink::SVGIntegerOptionalInteger"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::SVGInteger"*, %"class.blink::SVGInteger"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::SVGInteger", %"class.blink::SVGInteger"* %32, i64 0, i32 0, i32 0
  %34 = bitcast %"class.blink::SVGAnimatedPropertyCommon.12"* %29 to void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)***
  %35 = load void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)** %35, i64 6
  %37 = load void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGAnimatedPropertyCommon.12"*, %"class.blink::SVGPropertyBase"*)** %36, align 8
  tail call void %37(%"class.blink::SVGAnimatedPropertyCommon.12"* %29, %"class.blink::SVGPropertyBase"* %33) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink33SVGAnimatedIntegerOptionalInteger14AnimationEndedEv(%"class.blink::SVGAnimatedIntegerOptionalInteger"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.blink::Member.2"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.blink::Member.2"* %3 to i64*
  store atomic i64 %5, i64* %6 monotonic, align 8
  %7 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = inttoptr i64 %5 to i8*
  %11 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %10) #5
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::SVGAnimatedInteger"*, %"class.blink::SVGAnimatedInteger"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::SVGAnimatedInteger", %"class.blink::SVGAnimatedInteger"* %14, i64 0, i32 1, i32 0
  %16 = bitcast %"class.blink::SVGAnimatedPropertyCommon.12"* %15 to void (%"class.blink::SVGAnimatedPropertyCommon.12"*)***
  %17 = load void (%"class.blink::SVGAnimatedPropertyCommon.12"*)**, void (%"class.blink::SVGAnimatedPropertyCommon.12"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::SVGAnimatedPropertyCommon.12"*)*, void (%"class.blink::SVGAnimatedPropertyCommon.12"*)** %17, i64 7
  %19 = load void (%"class.blink::SVGAnimatedPropertyCommon.12"*)*, void (%"class.blink::SVGAnimatedPropertyCommon.12"*)** %18, align 8
  tail call void %19(%"class.blink::SVGAnimatedPropertyCommon.12"* %15) #5
  %20 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::SVGAnimatedInteger"*, %"class.blink::SVGAnimatedInteger"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::SVGAnimatedInteger", %"class.blink::SVGAnimatedInteger"* %21, i64 0, i32 1, i32 0
  %23 = bitcast %"class.blink::SVGAnimatedPropertyCommon.12"* %22 to void (%"class.blink::SVGAnimatedPropertyCommon.12"*)***
  %24 = load void (%"class.blink::SVGAnimatedPropertyCommon.12"*)**, void (%"class.blink::SVGAnimatedPropertyCommon.12"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::SVGAnimatedPropertyCommon.12"*)*, void (%"class.blink::SVGAnimatedPropertyCommon.12"*)** %24, i64 7
  %26 = load void (%"class.blink::SVGAnimatedPropertyCommon.12"*)*, void (%"class.blink::SVGAnimatedPropertyCommon.12"*)** %25, align 8
  tail call void %26(%"class.blink::SVGAnimatedPropertyCommon.12"* %22) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink33SVGAnimatedIntegerOptionalInteger25NeedsSynchronizeAttributeEv(%"class.blink::SVGAnimatedIntegerOptionalInteger"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::SVGAnimatedInteger"*, %"class.blink::SVGAnimatedInteger"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimatedInteger", %"class.blink::SVGAnimatedInteger"* %3, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %4 to i1 (%"class.blink::SVGAnimatedPropertyBase"*)***
  %6 = load i1 (%"class.blink::SVGAnimatedPropertyBase"*)**, i1 (%"class.blink::SVGAnimatedPropertyBase"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::SVGAnimatedPropertyBase"*)*, i1 (%"class.blink::SVGAnimatedPropertyBase"*)** %6, i64 9
  %8 = load i1 (%"class.blink::SVGAnimatedPropertyBase"*)*, i1 (%"class.blink::SVGAnimatedPropertyBase"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::SVGAnimatedPropertyBase"* %4) #5
  br i1 %9, label %19, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::SVGAnimatedInteger"*, %"class.blink::SVGAnimatedInteger"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SVGAnimatedInteger", %"class.blink::SVGAnimatedInteger"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %13 to i1 (%"class.blink::SVGAnimatedPropertyBase"*)***
  %15 = load i1 (%"class.blink::SVGAnimatedPropertyBase"*)**, i1 (%"class.blink::SVGAnimatedPropertyBase"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::SVGAnimatedPropertyBase"*)*, i1 (%"class.blink::SVGAnimatedPropertyBase"*)** %15, i64 9
  %17 = load i1 (%"class.blink::SVGAnimatedPropertyBase"*)*, i1 (%"class.blink::SVGAnimatedPropertyBase"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::SVGAnimatedPropertyBase"* %13) #5
  br label %19

19:                                               ; preds = %10, %1
  %20 = phi i1 [ true, %1 ], [ %18, %10 ]
  ret i1 %20
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33SVGAnimatedIntegerOptionalIntegerD0Ev(%"class.blink::SVGAnimatedIntegerOptionalInteger"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimatedIntegerOptionalInteger", %"class.blink::SVGAnimatedIntegerOptionalInteger"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink23SVGAnimatedPropertyBaseD2Ev(%"class.blink::SVGAnimatedPropertyBase"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::SVGPropertyBase"* @_ZNK5blink25SVGAnimatedPropertyCommonINS_25SVGIntegerOptionalIntegerEE13BaseValueBaseEv(%"class.blink::SVGAnimatedPropertyCommon"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyCommon", %"class.blink::SVGAnimatedPropertyCommon"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::SVGIntegerOptionalInteger"*, %"class.blink::SVGIntegerOptionalInteger"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGIntegerOptionalInteger", %"class.blink::SVGIntegerOptionalInteger"* %3, i64 0, i32 0
  ret %"class.blink::SVGPropertyBase"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink25SVGAnimatedPropertyCommonINS_25SVGIntegerOptionalIntegerEE11IsAnimatingEv(%"class.blink::SVGAnimatedPropertyCommon"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyCommon", %"class.blink::SVGAnimatedPropertyCommon"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::SVGIntegerOptionalInteger"*, %"class.blink::SVGIntegerOptionalInteger"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyCommon", %"class.blink::SVGAnimatedPropertyCommon"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::SVGIntegerOptionalInteger"*, %"class.blink::SVGIntegerOptionalInteger"** %4, align 8
  %6 = icmp ne %"class.blink::SVGIntegerOptionalInteger"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::SVGPropertyBase"* @_ZN5blink25SVGAnimatedPropertyCommonINS_25SVGIntegerOptionalIntegerEE19CreateAnimatedValueEv(%"class.blink::SVGAnimatedPropertyCommon"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyCommon", %"class.blink::SVGAnimatedPropertyCommon"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::SVGIntegerOptionalInteger"*, %"class.blink::SVGIntegerOptionalInteger"** %2, align 8
  %4 = tail call %"class.blink::SVGIntegerOptionalInteger"* @_ZNK5blink25SVGIntegerOptionalInteger5CloneEv(%"class.blink::SVGIntegerOptionalInteger"* %3) #5
  %5 = getelementptr inbounds %"class.blink::SVGIntegerOptionalInteger", %"class.blink::SVGIntegerOptionalInteger"* %4, i64 0, i32 0
  ret %"class.blink::SVGPropertyBase"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink25SVGAnimatedPropertyCommonINS_25SVGIntegerOptionalIntegerEE16AttributeChangedERKN3WTF6StringE(%"class.blink::SVGAnimatedPropertyCommon"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyCommon", %"class.blink::SVGAnimatedPropertyCommon"* %0, i64 0, i32 0, i32 1
  %4 = bitcast i24* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, -524289
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyCommon", %"class.blink::SVGAnimatedPropertyCommon"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::SVGIntegerOptionalInteger"*, %"class.blink::SVGIntegerOptionalInteger"** %11, align 8
  %13 = tail call i32 @_ZN5blink25SVGIntegerOptionalInteger16SetValueAsStringERKN3WTF6StringE(%"class.blink::SVGIntegerOptionalInteger"* %12, %"class.WTF::String"* dereferenceable(8) %1) #5
  %14 = and i32 %13, 255
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %10
  %17 = load i32, i32* %4, align 8
  br label %18

18:                                               ; preds = %16, %2
  %19 = phi i32 [ %6, %2 ], [ %17, %16 ]
  %20 = phi i32 [ 0, %2 ], [ %13, %16 ]
  %21 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyCommon", %"class.blink::SVGAnimatedPropertyCommon"* %0, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::SVGIntegerOptionalInteger"*, %"class.blink::SVGIntegerOptionalInteger"** %21, align 8
  %23 = lshr i32 %19, 16
  %24 = and i32 %23, 7
  tail call void @_ZN5blink25SVGIntegerOptionalInteger10SetInitialEj(%"class.blink::SVGIntegerOptionalInteger"* %22, i32 %24) #5
  br label %25

25:                                               ; preds = %10, %18
  %26 = phi i32 [ %20, %18 ], [ %13, %10 ]
  ret i32 %26
}

declare void @_ZN5blink23SVGAnimatedPropertyBase20SynchronizeAttributeEv(%"class.blink::SVGAnimatedPropertyBase"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

declare void @_ZN5blink10SVGIntegerC1Ei(%"class.blink::SVGInteger"*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #5
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #5
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #2 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #5
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #5
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #5
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #5
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #5
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #5
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #5
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SVGPropertyBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::SVGPropertyBase"*)***
  %4 = load void (%"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGPropertyBase"*)*** %3, align 8
  %5 = load void (%"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGPropertyBase"*)** %4, align 8
  tail call void %5(%"class.blink::SVGPropertyBase"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

declare void @_ZN5blink25SVGIntegerOptionalIntegerC1EPNS_10SVGIntegerES2_(%"class.blink::SVGIntegerOptionalInteger"*, %"class.blink::SVGInteger"*, %"class.blink::SVGInteger"*) unnamed_addr #3

declare void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"*, i32, %"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #5
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #5
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #5
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #5
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind
declare void @_ZN5blink23SVGAnimatedPropertyBaseD2Ev(%"class.blink::SVGAnimatedPropertyBase"*) unnamed_addr #4

declare void @_ZNK5blink23SVGAnimatedPropertyBase5TraceEPNS_7VisitorE(%"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18SVGAnimatedIntegerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGAnimatedInteger"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGAnimatedInteger"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGAnimatedInteger"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGAnimatedInteger"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGAnimatedInteger"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGAnimatedInteger"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::SVGAnimatedInteger"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGAnimatedInteger"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGAnimatedInteger"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_25SVGIntegerOptionalIntegerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGIntegerOptionalInteger"*
  tail call void @_ZNK5blink25SVGIntegerOptionalInteger5TraceEPNS_7VisitorE(%"class.blink::SVGIntegerOptionalInteger"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

declare void @_ZNK5blink25SVGIntegerOptionalInteger5TraceEPNS_7VisitorE(%"class.blink::SVGIntegerOptionalInteger"*, %"class.blink::Visitor"*) unnamed_addr #3

declare %"class.blink::SVGIntegerOptionalInteger"* @_ZNK5blink25SVGIntegerOptionalInteger5CloneEv(%"class.blink::SVGIntegerOptionalInteger"*) local_unnamed_addr #3

declare i32 @_ZN5blink25SVGIntegerOptionalInteger16SetValueAsStringERKN3WTF6StringE(%"class.blink::SVGIntegerOptionalInteger"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink25SVGIntegerOptionalInteger10SetInitialEj(%"class.blink::SVGIntegerOptionalInteger"*, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
