; ModuleID = '../../third_party/webrtc/modules/video_processing/video_denoiser.cc'
source_filename = "../../third_party/webrtc/modules/video_processing/video_denoiser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::VideoDenoiser" = type { i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.webrtc::VideoFrameBufferPool", %"class.rtc::scoped_refptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::DenoiserFilter"* }
%"class.webrtc::DenoiserFilter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.webrtc::NoiseEstimation"* }
%"class.webrtc::NoiseEstimation" = type { i32, i32, i32, i32, i32, i32, i32, i32, double, double, %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i32* }
%"class.webrtc::VideoFrameBufferPool" = type { %"class.rtc::RaceChecker", %"class.std::__1::list", i8, i64 }
%"class.rtc::RaceChecker" = type { i32, i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.25" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i64 }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::I420BufferInterface"* }
%"class.webrtc::I420BufferInterface" = type { %"class.webrtc::PlanarYuv8Buffer" }
%"class.webrtc::PlanarYuv8Buffer" = type { %"class.webrtc::PlanarYuvBuffer" }
%"class.webrtc::PlanarYuvBuffer" = type { %"class.webrtc::VideoFrameBuffer" }
%"class.webrtc::VideoFrameBuffer" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.rtc::scoped_refptr.28" = type { %"class.webrtc::I420Buffer"* }
%"class.webrtc::I420Buffer" = type { %"class.webrtc::I420BufferInterface", i32, i32, i32, i32, i32, %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.15" }

@_ZN6webrtc13VideoDenoiserC1Eb = hidden unnamed_addr alias void (%"class.webrtc::VideoDenoiser"*, i1), void (%"class.webrtc::VideoDenoiser"*, i1)* @_ZN6webrtc13VideoDenoiserC2Eb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13VideoDenoiserC2Eb(%"class.webrtc::VideoDenoiser"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 4
  %6 = tail call %"class.webrtc::DenoiserFilter"* @_ZN6webrtc14DenoiserFilter6CreateEbPNS_7CpuTypeE(i1 zeroext %1, i32* %5) #8
  %7 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  store %"class.webrtc::DenoiserFilter"* %6, %"class.webrtc::DenoiserFilter"** %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 6
  %9 = tail call i8* @_Znwm(i64 56) #9
  %10 = ptrtoint i8* %9 to i64
  %11 = bitcast %"class.std::__1::unique_ptr.1"* %8 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 56, i1 false)
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 7
  %13 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 12
  %14 = bitcast %"class.std::__1::unique_ptr.13"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 40, i1 false)
  tail call void @_ZN6webrtc20VideoFrameBufferPoolC1Ev(%"class.webrtc::VideoFrameBufferPool"* %13) #8
  %15 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 13, i32 0
  store %"class.webrtc::I420BufferInterface"* null, %"class.webrtc::I420BufferInterface"** %15, align 8
  ret void
}

declare %"class.webrtc::DenoiserFilter"* @_ZN6webrtc14DenoiserFilter6CreateEbPNS_7CpuTypeE(i1 zeroext, i32*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN6webrtc20VideoFrameBufferPoolC1Ev(%"class.webrtc::VideoFrameBufferPool"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13VideoDenoiser13DenoiserResetEN3rtc13scoped_refptrINS_19I420BufferInterfaceEEE(%"class.webrtc::VideoDenoiser"* nocapture, %"class.rtc::scoped_refptr"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %1, i64 0, i32 0
  %4 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = bitcast %"class.webrtc::I420BufferInterface"* %4 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %7 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %7, i64 5
  %9 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %8, align 8
  %10 = tail call i32 %9(%"class.webrtc::VideoFrameBuffer"* %5) #8
  %11 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 0
  store i32 %10, i32* %11, align 8
  %12 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %3, align 8
  %13 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.webrtc::I420BufferInterface"* %12 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %15 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %15, i64 6
  %17 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %16, align 8
  %18 = tail call i32 %17(%"class.webrtc::VideoFrameBuffer"* %13) #8
  %19 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 1
  store i32 %18, i32* %19, align 4
  %20 = load i32, i32* %11, align 8
  %21 = ashr i32 %20, 4
  %22 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 3
  store i32 %21, i32* %22, align 4
  %23 = ashr i32 %18, 4
  %24 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 2
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %26 = load %"class.webrtc::NoiseEstimation"*, %"class.webrtc::NoiseEstimation"** %25, align 8
  %27 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  tail call void @_ZN6webrtc15NoiseEstimation4InitEiiNS_7CpuTypeE(%"class.webrtc::NoiseEstimation"* %26, i32 %20, i32 %18, i32 %28) #8
  %29 = load i32, i32* %22, align 4
  %30 = load i32, i32* %24, align 8
  %31 = mul nsw i32 %30, %29
  %32 = sext i32 %31 to i64
  %33 = tail call i8* @_Znam(i64 %32) #9
  %34 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  store i8* %33, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %2
  tail call void @_ZdaPv(i8* nonnull %35) #9
  %38 = load i32, i32* %22, align 4
  %39 = load i32, i32* %24, align 8
  %40 = mul nsw i32 %39, %38
  %41 = sext i32 %40 to i64
  br label %42

42:                                               ; preds = %2, %37
  %43 = phi i64 [ %32, %2 ], [ %41, %37 ]
  %44 = phi i32 [ %29, %2 ], [ %38, %37 ]
  %45 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %43, i64 4)
  %46 = extractvalue { i64, i1 } %45, 1
  %47 = extractvalue { i64, i1 } %45, 0
  %48 = select i1 %46, i64 -1, i64 %47
  %49 = tail call i8* @_Znam(i64 %48) #9
  %50 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = bitcast i32** %50 to i8**
  store i8* %49, i8** %52, align 8
  %53 = icmp eq i32* %51, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %42
  %55 = bitcast i32* %51 to i8*
  tail call void @_ZdaPv(i8* %55) #9
  %56 = load i32, i32* %22, align 4
  br label %57

57:                                               ; preds = %42, %54
  %58 = phi i32 [ %44, %42 ], [ %56, %54 ]
  %59 = sext i32 %58 to i64
  %60 = tail call i8* @_Znam(i64 %59) #9
  %61 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  store i8* %60, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %65, label %64

64:                                               ; preds = %57
  tail call void @_ZdaPv(i8* nonnull %62) #9
  br label %65

65:                                               ; preds = %57, %64
  %66 = load i32, i32* %24, align 8
  %67 = sext i32 %66 to i64
  %68 = tail call i8* @_Znam(i64 %67) #9
  %69 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  store i8* %68, i8** %69, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %65
  tail call void @_ZdaPv(i8* nonnull %70) #9
  %73 = load i32, i32* %24, align 8
  br label %74

74:                                               ; preds = %65, %72
  %75 = phi i32 [ %66, %65 ], [ %73, %72 ]
  %76 = load i32, i32* %22, align 4
  %77 = mul nsw i32 %75, %76
  %78 = sext i32 %77 to i64
  %79 = tail call i8* @_Znam(i64 %78) #9
  %80 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  store i8* %79, i8** %80, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %84, label %83

83:                                               ; preds = %74
  tail call void @_ZdaPv(i8* nonnull %81) #9
  br label %84

84:                                               ; preds = %74, %83
  ret void
}

declare void @_ZN6webrtc15NoiseEstimation4InitEiiNS_7CpuTypeE(%"class.webrtc::NoiseEstimation"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6webrtc13VideoDenoiser13PositionCheckEiii(%"class.webrtc::VideoDenoiser"* nocapture readonly, i32, i32, i32) local_unnamed_addr #5 align 2 {
  %5 = icmp eq i32 %3, 0
  br i1 %5, label %31, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = ashr i32 %8, 4
  %10 = icmp slt i32 %9, %1
  br i1 %10, label %11, label %31

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = ashr i32 %13, 4
  %15 = icmp slt i32 %14, %2
  br i1 %15, label %16, label %31

16:                                               ; preds = %11
  %17 = mul nsw i32 %13, 15
  %18 = ashr i32 %17, 4
  %19 = icmp sgt i32 %18, %2
  br i1 %19, label %20, label %31

20:                                               ; preds = %16
  %21 = ashr i32 %8, 3
  %22 = icmp slt i32 %21, %1
  %23 = ashr i32 %13, 3
  %24 = icmp slt i32 %23, %2
  %25 = and i1 %22, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = mul nsw i32 %13, 7
  %28 = ashr i32 %27, 3
  %29 = icmp sgt i32 %28, %2
  %30 = select i1 %29, i32 1, i32 2
  ret i32 %30

31:                                               ; preds = %20, %6, %11, %16, %4
  %32 = phi i32 [ 1, %4 ], [ 3, %16 ], [ 3, %11 ], [ 3, %6 ], [ 2, %20 ]
  ret i32 %32
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc13VideoDenoiser20ReduceFalseDetectionERKNSt3__110unique_ptrIA_hNS1_14default_deleteIS3_EEEEPS6_i(%"class.webrtc::VideoDenoiser"* nocapture readonly, %"class.std::__1::unique_ptr.13"* nocapture readonly dereferenceable(8), %"class.std::__1::unique_ptr.13"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %122

9:                                                ; preds = %4
  %10 = load i32, i32* %5, align 4
  %11 = add nsw i32 %10, -1
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %2, i64 0, i32 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %9, %42
  %15 = phi i32 [ 0, %9 ], [ %44, %42 ]
  %16 = phi i32 [ %11, %9 ], [ %43, %42 ]
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %42, label %25

18:                                               ; preds = %42
  %19 = icmp sgt i32 %45, 0
  br i1 %19, label %20, label %122

20:                                               ; preds = %18
  %21 = load i32, i32* %5, align 4
  %22 = add nsw i32 %21, -1
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %2, i64 0, i32 0, i32 0, i32 0
  br label %47

25:                                               ; preds = %14, %37
  %26 = phi i32 [ %40, %37 ], [ 0, %14 ]
  %27 = load i32, i32* %5, align 4
  %28 = mul nsw i32 %27, %15
  %29 = add nsw i32 %28, %26
  %30 = sext i32 %29 to i64
  %31 = load i8*, i8** %12, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 %30
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %25
  %36 = add nsw i32 %26, -1
  br label %42

37:                                               ; preds = %25
  %38 = load i8*, i8** %13, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 %30
  store i8 0, i8* %39, align 1
  %40 = add nuw i32 %26, 1
  %41 = icmp eq i32 %26, %16
  br i1 %41, label %42, label %25

42:                                               ; preds = %37, %14, %35
  %43 = phi i32 [ %36, %35 ], [ %16, %14 ], [ %16, %37 ]
  %44 = add nuw nsw i32 %15, 1
  %45 = load i32, i32* %6, align 8
  %46 = icmp slt i32 %44, %45
  br i1 %46, label %14, label %18

47:                                               ; preds = %20, %75
  %48 = phi i32 [ %45, %20 ], [ %50, %75 ]
  %49 = phi i32 [ %22, %20 ], [ %76, %75 ]
  %50 = add nsw i32 %48, -1
  %51 = icmp slt i32 %49, 0
  br i1 %51, label %75, label %58

52:                                               ; preds = %75
  %53 = load i32, i32* %6, align 8
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %122

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %1, i64 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %2, i64 0, i32 0, i32 0, i32 0
  br label %83

58:                                               ; preds = %47, %70
  %59 = phi i32 [ %73, %70 ], [ 0, %47 ]
  %60 = load i32, i32* %5, align 4
  %61 = mul nsw i32 %60, %50
  %62 = add nsw i32 %61, %59
  %63 = sext i32 %62 to i64
  %64 = load i8*, i8** %23, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 %63
  %66 = load i8, i8* %65, align 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %58
  %69 = add nsw i32 %59, -1
  br label %75

70:                                               ; preds = %58
  %71 = load i8*, i8** %24, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 %63
  store i8 0, i8* %72, align 1
  %73 = add nuw i32 %59, 1
  %74 = icmp eq i32 %59, %49
  br i1 %74, label %75, label %58

75:                                               ; preds = %70, %47, %68
  %76 = phi i32 [ %69, %68 ], [ %49, %47 ], [ %49, %70 ]
  %77 = icmp sgt i32 %50, 0
  br i1 %77, label %47, label %52

78:                                               ; preds = %117
  %79 = icmp sgt i32 %118, 0
  br i1 %79, label %80, label %122

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %1, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %2, i64 0, i32 0, i32 0, i32 0
  br label %123

83:                                               ; preds = %55, %117
  %84 = phi i32 [ %53, %55 ], [ %118, %117 ]
  %85 = phi i32 [ 0, %55 ], [ %120, %117 ]
  %86 = phi i32 [ 0, %55 ], [ %119, %117 ]
  %87 = load i32, i32* %5, align 4
  %88 = icmp sgt i32 %87, %86
  br i1 %88, label %89, label %117

89:                                               ; preds = %83
  %90 = add nsw i32 %87, -1
  %91 = mul nsw i32 %87, %85
  %92 = add nsw i32 %91, %90
  %93 = sext i32 %92 to i64
  %94 = load i8*, i8** %56, align 8
  %95 = getelementptr inbounds i8, i8* %94, i64 %93
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %114

98:                                               ; preds = %89, %104
  %99 = phi i64 [ %109, %104 ], [ %93, %89 ]
  %100 = phi i32 [ %106, %104 ], [ %90, %89 ]
  %101 = load i8*, i8** %57, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 %99
  store i8 0, i8* %102, align 1
  %103 = icmp sgt i32 %100, %86
  br i1 %103, label %104, label %114

104:                                              ; preds = %98
  %105 = load i32, i32* %5, align 4
  %106 = add nsw i32 %100, -1
  %107 = mul nsw i32 %105, %85
  %108 = add nsw i32 %107, %106
  %109 = sext i32 %108 to i64
  %110 = load i8*, i8** %56, align 8
  %111 = getelementptr inbounds i8, i8* %110, i64 %109
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %98, label %114

114:                                              ; preds = %98, %104, %89
  %115 = phi i32 [ %87, %89 ], [ %86, %98 ], [ %100, %104 ]
  %116 = load i32, i32* %6, align 8
  br label %117

117:                                              ; preds = %114, %83
  %118 = phi i32 [ %84, %83 ], [ %116, %114 ]
  %119 = phi i32 [ %86, %83 ], [ %115, %114 ]
  %120 = add nuw nsw i32 %85, 1
  %121 = icmp slt i32 %120, %118
  br i1 %121, label %83, label %78

122:                                              ; preds = %154, %4, %18, %52, %78
  ret void

123:                                              ; preds = %80, %154
  %124 = phi i32 [ %118, %80 ], [ %126, %154 ]
  %125 = phi i32 [ 0, %80 ], [ %155, %154 ]
  %126 = add nsw i32 %124, -1
  %127 = load i32, i32* %5, align 4
  %128 = icmp sgt i32 %127, %125
  br i1 %128, label %129, label %154

129:                                              ; preds = %123
  %130 = add nsw i32 %127, -1
  %131 = mul nsw i32 %127, %126
  %132 = add nsw i32 %131, %130
  %133 = sext i32 %132 to i64
  %134 = load i8*, i8** %81, align 8
  %135 = getelementptr inbounds i8, i8* %134, i64 %133
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %138, label %154

138:                                              ; preds = %129, %144
  %139 = phi i64 [ %149, %144 ], [ %133, %129 ]
  %140 = phi i32 [ %146, %144 ], [ %130, %129 ]
  %141 = load i8*, i8** %82, align 8
  %142 = getelementptr inbounds i8, i8* %141, i64 %139
  store i8 0, i8* %142, align 1
  %143 = icmp sgt i32 %140, %125
  br i1 %143, label %144, label %154

144:                                              ; preds = %138
  %145 = load i32, i32* %5, align 4
  %146 = add nsw i32 %140, -1
  %147 = mul nsw i32 %145, %126
  %148 = add nsw i32 %147, %146
  %149 = sext i32 %148 to i64
  %150 = load i8*, i8** %81, align 8
  %151 = getelementptr inbounds i8, i8* %150, i64 %149
  %152 = load i8, i8* %151, align 1
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %138, label %154

154:                                              ; preds = %144, %138, %129, %123
  %155 = phi i32 [ %125, %123 ], [ %127, %129 ], [ %125, %138 ], [ %140, %144 ]
  %156 = icmp sgt i32 %126, 0
  br i1 %156, label %123, label %122
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6webrtc13VideoDenoiser15IsTrailingBlockERKNSt3__110unique_ptrIA_hNS1_14default_deleteIS3_EEEEii(%"class.webrtc::VideoDenoiser"* nocapture readonly, %"class.std::__1::unique_ptr.13"* nocapture readonly dereferenceable(8), i32, i32) local_unnamed_addr #5 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = mul nsw i32 %6, %2
  %8 = add nsw i32 %7, %3
  %9 = icmp ne i32 %2, 0
  %10 = icmp ne i32 %3, 0
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %46

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 2
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, -1
  %16 = icmp eq i32 %15, %2
  %17 = add nsw i32 %6, -1
  %18 = icmp eq i32 %17, %3
  %19 = or i1 %18, %16
  br i1 %19, label %46, label %20

20:                                               ; preds = %12
  %21 = add nsw i32 %8, 1
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 %22
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %46

28:                                               ; preds = %20
  %29 = add nsw i32 %8, -1
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %24, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %46

34:                                               ; preds = %28
  %35 = add nsw i32 %8, %6
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %24, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = sub nsw i32 %8, %6
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %24, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = icmp ne i8 %44, 0
  br label %46

46:                                               ; preds = %40, %20, %28, %34, %4, %12
  %47 = phi i1 [ false, %12 ], [ false, %4 ], [ true, %34 ], [ true, %28 ], [ true, %20 ], [ %45, %40 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13VideoDenoiser12CopySrcOnMOBEPKhiPhi(%"class.webrtc::VideoDenoiser"* nocapture readonly, i8*, i32, i8*, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %16 = load i32, i32* %10, align 4
  br label %18

17:                                               ; preds = %35, %5
  ret void

18:                                               ; preds = %9, %35
  %19 = phi i32 [ %16, %9 ], [ %36, %35 ]
  %20 = phi i32 [ %16, %9 ], [ %37, %35 ]
  %21 = phi i64 [ 0, %9 ], [ %38, %35 ]
  %22 = trunc i64 %21 to i32
  %23 = shl i32 %22, 4
  %24 = mul nsw i32 %23, %2
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = mul nsw i32 %23, %4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %3, i64 %28
  %30 = icmp sgt i32 %20, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %18
  %32 = mul nsw i32 %20, %22
  %33 = icmp ne i64 %21, 0
  %34 = sext i32 %32 to i64
  br label %42

35:                                               ; preds = %114, %18
  %36 = phi i32 [ %19, %18 ], [ %115, %114 ]
  %37 = phi i32 [ %20, %18 ], [ %115, %114 ]
  %38 = add nuw nsw i64 %21, 1
  %39 = load i32, i32* %6, align 8
  %40 = sext i32 %39 to i64
  %41 = icmp slt i64 %38, %40
  br i1 %41, label %18, label %17

42:                                               ; preds = %31, %114
  %43 = phi i32 [ %19, %31 ], [ %115, %114 ]
  %44 = phi i64 [ 0, %31 ], [ %116, %114 ]
  %45 = phi i32 [ %20, %31 ], [ %115, %114 ]
  %46 = add nsw i64 %44, %34
  %47 = shl i64 %44, 4
  %48 = and i64 %47, 4294967280
  %49 = getelementptr inbounds i8, i8* %26, i64 %48
  %50 = getelementptr inbounds i8, i8* %29, i64 %48
  %51 = load i32*, i32** %11, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 %46
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %112

55:                                               ; preds = %42
  %56 = trunc i64 %44 to i32
  %57 = mul nsw i32 %45, %22
  %58 = add nsw i32 %57, %56
  %59 = icmp ne i64 %44, 0
  %60 = and i1 %33, %59
  br i1 %60, label %61, label %95

61:                                               ; preds = %55
  %62 = load i32, i32* %6, align 8
  %63 = add nsw i32 %62, -1
  %64 = zext i32 %63 to i64
  %65 = icmp eq i64 %21, %64
  %66 = add nsw i32 %45, -1
  %67 = zext i32 %66 to i64
  %68 = icmp eq i64 %44, %67
  %69 = or i1 %68, %65
  br i1 %69, label %95, label %70

70:                                               ; preds = %61
  %71 = add nsw i32 %58, 1
  %72 = sext i32 %71 to i64
  %73 = load i8*, i8** %12, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %72
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %112

77:                                               ; preds = %70
  %78 = add nsw i32 %58, -1
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %73, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %112

83:                                               ; preds = %77
  %84 = add nsw i32 %58, %45
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %73, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %112

89:                                               ; preds = %83
  %90 = sub nsw i32 %58, %45
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %73, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %112

95:                                               ; preds = %89, %55, %61
  %96 = load i8*, i8** %13, align 8
  %97 = getelementptr inbounds i8, i8* %96, i64 %44
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = load i8*, i8** %14, align 8
  %101 = getelementptr inbounds i8, i8* %100, i64 %21
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = mul nuw nsw i32 %103, %99
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %95
  %107 = sext i32 %58 to i64
  %108 = load i8*, i8** %15, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 %107
  %110 = load i8, i8* %109, align 1
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %89, %70, %77, %83, %106, %42
  tail call void @CopyPlane(i8* %49, i32 %2, i8* %50, i32 %4, i32 16, i32 16) #8
  %113 = load i32, i32* %10, align 4
  br label %114

114:                                              ; preds = %106, %95, %112
  %115 = phi i32 [ %43, %106 ], [ %43, %95 ], [ %113, %112 ]
  %116 = add nuw nsw i64 %44, 1
  %117 = sext i32 %115 to i64
  %118 = icmp slt i64 %116, %117
  br i1 %118, label %42, label %35
}

declare void @CopyPlane(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13VideoDenoiser16CopyLumaOnMarginEPKhiPhi(%"class.webrtc::VideoDenoiser"* nocapture readonly, i8*, i32, i8*, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = shl i32 %9, 4
  %11 = sub nsw i32 %7, %10
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %22

13:                                               ; preds = %5
  %14 = mul nsw i32 %10, %2
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %1, i64 %15
  %17 = mul nsw i32 %10, %4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %3, i64 %18
  %20 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  tail call void @CopyPlane(i8* %16, i32 %2, i8* %19, i32 %4, i32 %21, i32 %11) #8
  br label %22

22:                                               ; preds = %13, %5
  %23 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %0, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = shl i32 %26, 4
  %28 = sub nsw i32 %24, %27
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %22
  %31 = sext i32 %27 to i64
  %32 = getelementptr inbounds i8, i8* %1, i64 %31
  %33 = getelementptr inbounds i8, i8* %3, i64 %31
  %34 = load i32, i32* %8, align 8
  %35 = shl i32 %34, 4
  tail call void @CopyPlane(i8* %32, i32 %2, i8* %33, i32 %4, i32 %28, i32 %35) #8
  br label %36

36:                                               ; preds = %30, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc13VideoDenoiser12DenoiseFrameEN3rtc13scoped_refptrINS_19I420BufferInterfaceEEEb(%"class.rtc::scoped_refptr"* noalias nocapture sret, %"class.webrtc::VideoDenoiser"*, %"class.rtc::scoped_refptr"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.rtc::scoped_refptr", align 8
  %6 = alloca %"class.rtc::scoped_refptr.28", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 13, i32 0
  %10 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %9, align 8
  %11 = icmp eq %"class.webrtc::I420BufferInterface"* %10, null
  br i1 %11, label %35, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %2, i64 0, i32 0
  %16 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %15, align 8
  %17 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.webrtc::I420BufferInterface"* %16 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %19 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %19, i64 5
  %21 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %20, align 8
  %22 = tail call i32 %21(%"class.webrtc::VideoFrameBuffer"* %17) #8
  %23 = icmp eq i32 %14, %22
  br i1 %23, label %24, label %35

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %15, align 8
  %28 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = bitcast %"class.webrtc::I420BufferInterface"* %27 to i32 (%"class.webrtc::VideoFrameBuffer"*)***
  %30 = load i32 (%"class.webrtc::VideoFrameBuffer"*)**, i32 (%"class.webrtc::VideoFrameBuffer"*)*** %29, align 8
  %31 = getelementptr inbounds i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %30, i64 6
  %32 = load i32 (%"class.webrtc::VideoFrameBuffer"*)*, i32 (%"class.webrtc::VideoFrameBuffer"*)** %31, align 8
  %33 = tail call i32 %32(%"class.webrtc::VideoFrameBuffer"* %28) #8
  %34 = icmp eq i32 %26, %33
  br i1 %34, label %73, label %35

35:                                               ; preds = %24, %12, %4
  %36 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %5, i64 0, i32 0
  %37 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %2, i64 0, i32 0
  %38 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %37, align 8
  store %"class.webrtc::I420BufferInterface"* %38, %"class.webrtc::I420BufferInterface"** %36, align 8
  %39 = icmp eq %"class.webrtc::I420BufferInterface"* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  call void @_ZN6webrtc13VideoDenoiser13DenoiserResetEN3rtc13scoped_refptrINS_19I420BufferInterfaceEEE(%"class.webrtc::VideoDenoiser"* %1, %"class.rtc::scoped_refptr"* nonnull %5)
  br label %51

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.webrtc::I420BufferInterface"* %38 to void (%"class.rtc::RefCountInterface"*)***
  %44 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %43, align 8
  %45 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %44, align 8
  tail call void %45(%"class.rtc::RefCountInterface"* %42) #8
  call void @_ZN6webrtc13VideoDenoiser13DenoiserResetEN3rtc13scoped_refptrINS_19I420BufferInterfaceEEE(%"class.webrtc::VideoDenoiser"* %1, %"class.rtc::scoped_refptr"* nonnull %5)
  %46 = bitcast %"class.webrtc::I420BufferInterface"* %38 to i32 (%"class.rtc::RefCountInterface"*)***
  %47 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %46, align 8
  %48 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %47, i64 1
  %49 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %48, align 8
  %50 = tail call i32 %49(%"class.rtc::RefCountInterface"* %42) #8
  br label %51

51:                                               ; preds = %40, %41
  %52 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %37, align 8
  %53 = icmp eq %"class.webrtc::I420BufferInterface"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = bitcast %"class.webrtc::I420BufferInterface"* %52 to void (%"class.rtc::RefCountInterface"*)***
  %57 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %56, align 8
  %58 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %57, align 8
  tail call void %58(%"class.rtc::RefCountInterface"* %55) #8
  br label %59

59:                                               ; preds = %54, %51
  %60 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %9, align 8
  %61 = icmp eq %"class.webrtc::I420BufferInterface"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.webrtc::I420BufferInterface"* %60 to i32 (%"class.rtc::RefCountInterface"*)***
  %65 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %65, i64 1
  %67 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %66, align 8
  %68 = tail call i32 %67(%"class.rtc::RefCountInterface"* %63) #8
  br label %69

69:                                               ; preds = %59, %62
  store %"class.webrtc::I420BufferInterface"* %52, %"class.webrtc::I420BufferInterface"** %9, align 8
  %70 = bitcast %"class.rtc::scoped_refptr"* %2 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.webrtc::I420BufferInterface"* null, %"class.webrtc::I420BufferInterface"** %37, align 8
  %72 = bitcast %"class.rtc::scoped_refptr"* %0 to i64*
  store i64 %71, i64* %72, align 8
  br label %513

73:                                               ; preds = %24
  %74 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %15, align 8
  %75 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %74, i64 0, i32 0
  %76 = bitcast %"class.webrtc::I420BufferInterface"* %74 to i8* (%"class.webrtc::PlanarYuv8Buffer"*)***
  %77 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)**, i8* (%"class.webrtc::PlanarYuv8Buffer"*)*** %76, align 8
  %78 = getelementptr inbounds i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %77, i64 16
  %79 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %78, align 8
  %80 = tail call i8* %79(%"class.webrtc::PlanarYuv8Buffer"* %75) #8
  %81 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %15, align 8
  %82 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %81, i64 0, i32 0, i32 0
  %83 = bitcast %"class.webrtc::I420BufferInterface"* %81 to i32 (%"class.webrtc::PlanarYuvBuffer"*)***
  %84 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)**, i32 (%"class.webrtc::PlanarYuvBuffer"*)*** %83, align 8
  %85 = getelementptr inbounds i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %84, i64 13
  %86 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %85, align 8
  %87 = tail call i32 %86(%"class.webrtc::PlanarYuvBuffer"* %82) #8
  %88 = bitcast %"class.rtc::scoped_refptr.28"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #8
  %89 = getelementptr inbounds %"class.rtc::scoped_refptr.28", %"class.rtc::scoped_refptr.28"* %6, i64 0, i32 0
  store %"class.webrtc::I420Buffer"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::I420Buffer"*), %"class.webrtc::I420Buffer"** %89, align 8
  %90 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 12
  %91 = load i32, i32* %13, align 8
  %92 = load i32, i32* %25, align 4
  call void @_ZN6webrtc20VideoFrameBufferPool16CreateI420BufferEii(%"class.rtc::scoped_refptr.28"* nonnull sret %6, %"class.webrtc::VideoFrameBufferPool"* %90, i32 %91, i32 %92) #8
  %93 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %89, align 8
  %94 = call i8* @_ZN6webrtc10I420Buffer12MutableDataYEv(%"class.webrtc::I420Buffer"* %93) #8
  %95 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %89, align 8
  %96 = bitcast %"class.webrtc::I420Buffer"* %95 to i32 (%"class.webrtc::I420Buffer"*)***
  %97 = load i32 (%"class.webrtc::I420Buffer"*)**, i32 (%"class.webrtc::I420Buffer"*)*** %96, align 8
  %98 = getelementptr inbounds i32 (%"class.webrtc::I420Buffer"*)*, i32 (%"class.webrtc::I420Buffer"*)** %97, i64 13
  %99 = load i32 (%"class.webrtc::I420Buffer"*)*, i32 (%"class.webrtc::I420Buffer"*)** %98, align 8
  %100 = call i32 %99(%"class.webrtc::I420Buffer"* %95) #8
  %101 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %9, align 8
  %102 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %101, i64 0, i32 0
  %103 = bitcast %"class.webrtc::I420BufferInterface"* %101 to i8* (%"class.webrtc::PlanarYuv8Buffer"*)***
  %104 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)**, i8* (%"class.webrtc::PlanarYuv8Buffer"*)*** %103, align 8
  %105 = getelementptr inbounds i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %104, i64 16
  %106 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %105, align 8
  %107 = call i8* %106(%"class.webrtc::PlanarYuv8Buffer"* %102) #8
  %108 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %9, align 8
  %109 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %108, i64 0, i32 0, i32 0
  %110 = bitcast %"class.webrtc::I420BufferInterface"* %108 to i32 (%"class.webrtc::PlanarYuvBuffer"*)***
  %111 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)**, i32 (%"class.webrtc::PlanarYuvBuffer"*)*** %110, align 8
  %112 = getelementptr inbounds i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %111, i64 13
  %113 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %112, align 8
  %114 = call i32 %113(%"class.webrtc::PlanarYuvBuffer"* %109) #8
  %115 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 9, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 3
  %118 = load i32, i32* %117, align 4
  %119 = sext i32 %118 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %116, i8 0, i64 %119, i1 false)
  %120 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 2
  %123 = load i32, i32* %122, align 8
  %124 = sext i32 %123 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %121, i8 0, i64 %124, i1 false)
  %125 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 8
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = load i32, i32* %117, align 4
  %129 = load i32, i32* %122, align 8
  %130 = mul nsw i32 %129, %128
  %131 = sext i32 %130 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %127, i8 1, i64 %131, i1 false)
  br i1 %3, label %132, label %137

132:                                              ; preds = %73
  %133 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %134 = load %"class.webrtc::NoiseEstimation"*, %"class.webrtc::NoiseEstimation"** %133, align 8
  %135 = call zeroext i8 @_ZN6webrtc15NoiseEstimation13GetNoiseLevelEv(%"class.webrtc::NoiseEstimation"* %134) #8
  %136 = zext i8 %135 to i32
  br label %137

137:                                              ; preds = %73, %132
  %138 = phi i32 [ %136, %132 ], [ 0, %73 ]
  %139 = load i32, i32* %122, align 8
  %140 = icmp sgt i32 %139, 0
  br i1 %140, label %141, label %167

141:                                              ; preds = %137
  %142 = icmp eq i32 %138, 0
  %143 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %145 = bitcast i32* %8 to i8*
  %146 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %148 = bitcast i32* %7 to i8*
  %149 = sext i32 %87 to i64
  %150 = load i32, i32* %117, align 4
  %151 = shl nsw i64 %149, 2
  %152 = add nsw i64 %151, 4
  %153 = mul nsw i64 %149, 5
  %154 = add nsw i64 %153, 4
  %155 = mul nsw i64 %149, 6
  %156 = add nsw i64 %155, 4
  %157 = mul nsw i64 %149, 7
  %158 = add nsw i64 %157, 4
  %159 = shl nsw i64 %149, 3
  %160 = or i64 %159, 4
  %161 = mul nsw i64 %149, 9
  %162 = add nsw i64 %161, 4
  %163 = mul nsw i64 %149, 10
  %164 = add nsw i64 %163, 4
  %165 = mul nsw i64 %149, 11
  %166 = add nsw i64 %165, 4
  br label %173

167:                                              ; preds = %194, %137
  %168 = getelementptr inbounds %"class.webrtc::VideoDenoiser", %"class.webrtc::VideoDenoiser"* %1, i64 0, i32 7
  call void @_ZN6webrtc13VideoDenoiser20ReduceFalseDetectionERKNSt3__110unique_ptrIA_hNS1_14default_deleteIS3_EEEEPS6_i(%"class.webrtc::VideoDenoiser"* %1, %"class.std::__1::unique_ptr.13"* dereferenceable(8) %168, %"class.std::__1::unique_ptr.13"* %125, i32 undef)
  call void @_ZN6webrtc13VideoDenoiser12CopySrcOnMOBEPKhiPhi(%"class.webrtc::VideoDenoiser"* %1, i8* %80, i32 %87, i8* %94, i32 %100)
  %169 = load i32, i32* %122, align 8
  %170 = shl i32 %169, 4
  %171 = load i32, i32* %25, align 4
  %172 = icmp eq i32 %171, %170
  br i1 %172, label %406, label %411

173:                                              ; preds = %141, %194
  %174 = phi i32 [ %139, %141 ], [ %195, %194 ]
  %175 = phi i32 [ %150, %141 ], [ %196, %194 ]
  %176 = phi i64 [ 0, %141 ], [ %197, %194 ]
  %177 = trunc i64 %176 to i32
  %178 = shl i32 %177, 4
  %179 = mul nsw i32 %178, %87
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, i8* %80, i64 %180
  %182 = mul nsw i32 %178, %100
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i8, i8* %94, i64 %183
  %185 = mul nsw i32 %178, %114
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i8, i8* %107, i64 %186
  %188 = icmp sgt i32 %175, 0
  br i1 %188, label %189, label %194

189:                                              ; preds = %173
  %190 = mul nsw i32 %175, %177
  %191 = sext i32 %190 to i64
  br label %200

192:                                              ; preds = %400
  %193 = load i32, i32* %122, align 8
  br label %194

194:                                              ; preds = %192, %173
  %195 = phi i32 [ %193, %192 ], [ %174, %173 ]
  %196 = phi i32 [ %403, %192 ], [ %175, %173 ]
  %197 = add nuw nsw i64 %176, 1
  %198 = sext i32 %195 to i64
  %199 = icmp slt i64 %197, %198
  br i1 %199, label %173, label %167

200:                                              ; preds = %189, %400
  %201 = phi i64 [ 0, %189 ], [ %402, %400 ]
  %202 = phi i32 [ %175, %189 ], [ %403, %400 ]
  %203 = add nsw i64 %201, %191
  %204 = trunc i64 %203 to i32
  %205 = srem i32 %204, 41
  %206 = icmp eq i32 %205, 0
  br i1 %142, label %235, label %207

207:                                              ; preds = %200
  %208 = load i32, i32* %122, align 8
  %209 = ashr i32 %208, 4
  %210 = sext i32 %209 to i64
  %211 = icmp sgt i64 %176, %210
  %212 = ashr i32 %202, 4
  %213 = sext i32 %212 to i64
  %214 = icmp sgt i64 %201, %213
  %215 = and i1 %214, %211
  br i1 %215, label %216, label %235

216:                                              ; preds = %207
  %217 = mul nsw i32 %202, 15
  %218 = ashr i32 %217, 4
  %219 = sext i32 %218 to i64
  %220 = icmp slt i64 %201, %219
  br i1 %220, label %221, label %235

221:                                              ; preds = %216
  %222 = ashr i32 %208, 3
  %223 = sext i32 %222 to i64
  %224 = icmp sgt i64 %176, %223
  %225 = ashr i32 %202, 3
  %226 = sext i32 %225 to i64
  %227 = icmp sgt i64 %201, %226
  %228 = and i1 %227, %224
  br i1 %228, label %229, label %235

229:                                              ; preds = %221
  %230 = mul nsw i32 %202, 7
  %231 = ashr i32 %230, 3
  %232 = sext i32 %231 to i64
  %233 = icmp slt i64 %201, %232
  %234 = select i1 %233, i32 1, i32 2
  br label %235

235:                                              ; preds = %200, %207, %216, %221, %229
  %236 = phi i32 [ %234, %229 ], [ 1, %200 ], [ 3, %216 ], [ 3, %207 ], [ 2, %221 ]
  %237 = shl nuw nsw i32 %236, 9
  %238 = shl i64 %201, 4
  %239 = and i64 %238, 4294967280
  %240 = getelementptr inbounds i8, i8* %181, i64 %239
  %241 = getelementptr inbounds i8, i8* %184, i64 %239
  %242 = getelementptr inbounds i8, i8* %187, i64 %239
  br i1 %206, label %243, label %339

243:                                              ; preds = %235
  %244 = getelementptr inbounds i8, i8* %240, i64 %152
  %245 = bitcast i8* %244 to <8 x i8>*
  %246 = load <8 x i8>, <8 x i8>* %245, align 1
  %247 = zext <8 x i8> %246 to <8 x i32>
  %248 = shufflevector <8 x i32> %247, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %249 = add nsw <8 x i32> %248, %247
  %250 = shufflevector <8 x i32> %249, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %251 = add nsw <8 x i32> %249, %250
  %252 = shufflevector <8 x i32> %251, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %253 = add nsw <8 x i32> %251, %252
  %254 = extractelement <8 x i32> %253, i32 0
  %255 = getelementptr inbounds i8, i8* %240, i64 %154
  %256 = bitcast i8* %255 to <8 x i8>*
  %257 = load <8 x i8>, <8 x i8>* %256, align 1
  %258 = zext <8 x i8> %257 to <8 x i32>
  %259 = shufflevector <8 x i32> %258, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %260 = add nsw <8 x i32> %259, %258
  %261 = shufflevector <8 x i32> %260, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %262 = add nsw <8 x i32> %260, %261
  %263 = shufflevector <8 x i32> %262, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %264 = add nsw <8 x i32> %262, %263
  %265 = extractelement <8 x i32> %264, i32 0
  %266 = add nsw i32 %265, %254
  %267 = getelementptr inbounds i8, i8* %240, i64 %156
  %268 = bitcast i8* %267 to <8 x i8>*
  %269 = load <8 x i8>, <8 x i8>* %268, align 1
  %270 = zext <8 x i8> %269 to <8 x i32>
  %271 = shufflevector <8 x i32> %270, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %272 = add nsw <8 x i32> %271, %270
  %273 = shufflevector <8 x i32> %272, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %274 = add nsw <8 x i32> %272, %273
  %275 = shufflevector <8 x i32> %274, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %276 = add nsw <8 x i32> %274, %275
  %277 = extractelement <8 x i32> %276, i32 0
  %278 = add nsw i32 %277, %266
  %279 = getelementptr inbounds i8, i8* %240, i64 %158
  %280 = bitcast i8* %279 to <8 x i8>*
  %281 = load <8 x i8>, <8 x i8>* %280, align 1
  %282 = zext <8 x i8> %281 to <8 x i32>
  %283 = shufflevector <8 x i32> %282, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %284 = add nsw <8 x i32> %283, %282
  %285 = shufflevector <8 x i32> %284, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %286 = add nsw <8 x i32> %284, %285
  %287 = shufflevector <8 x i32> %286, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %288 = add nsw <8 x i32> %286, %287
  %289 = extractelement <8 x i32> %288, i32 0
  %290 = add nsw i32 %289, %278
  %291 = getelementptr inbounds i8, i8* %240, i64 %160
  %292 = bitcast i8* %291 to <8 x i8>*
  %293 = load <8 x i8>, <8 x i8>* %292, align 1
  %294 = zext <8 x i8> %293 to <8 x i32>
  %295 = shufflevector <8 x i32> %294, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %296 = add nsw <8 x i32> %295, %294
  %297 = shufflevector <8 x i32> %296, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %298 = add nsw <8 x i32> %296, %297
  %299 = shufflevector <8 x i32> %298, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %300 = add nsw <8 x i32> %298, %299
  %301 = extractelement <8 x i32> %300, i32 0
  %302 = add nsw i32 %301, %290
  %303 = getelementptr inbounds i8, i8* %240, i64 %162
  %304 = bitcast i8* %303 to <8 x i8>*
  %305 = load <8 x i8>, <8 x i8>* %304, align 1
  %306 = zext <8 x i8> %305 to <8 x i32>
  %307 = shufflevector <8 x i32> %306, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %308 = add nsw <8 x i32> %307, %306
  %309 = shufflevector <8 x i32> %308, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %310 = add nsw <8 x i32> %308, %309
  %311 = shufflevector <8 x i32> %310, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %312 = add nsw <8 x i32> %310, %311
  %313 = extractelement <8 x i32> %312, i32 0
  %314 = add nsw i32 %313, %302
  %315 = getelementptr inbounds i8, i8* %240, i64 %164
  %316 = bitcast i8* %315 to <8 x i8>*
  %317 = load <8 x i8>, <8 x i8>* %316, align 1
  %318 = zext <8 x i8> %317 to <8 x i32>
  %319 = shufflevector <8 x i32> %318, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %320 = add nsw <8 x i32> %319, %318
  %321 = shufflevector <8 x i32> %320, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %322 = add nsw <8 x i32> %320, %321
  %323 = shufflevector <8 x i32> %322, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %324 = add nsw <8 x i32> %322, %323
  %325 = extractelement <8 x i32> %324, i32 0
  %326 = add nsw i32 %325, %314
  %327 = getelementptr inbounds i8, i8* %240, i64 %166
  %328 = bitcast i8* %327 to <8 x i8>*
  %329 = load <8 x i8>, <8 x i8>* %328, align 1
  %330 = zext <8 x i8> %329 to <8 x i32>
  %331 = shufflevector <8 x i32> %330, <8 x i32> undef, <8 x i32> <i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef>
  %332 = add nsw <8 x i32> %331, %330
  %333 = shufflevector <8 x i32> %332, <8 x i32> undef, <8 x i32> <i32 2, i32 3, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %334 = add nsw <8 x i32> %332, %333
  %335 = shufflevector <8 x i32> %334, <8 x i32> undef, <8 x i32> <i32 1, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %336 = add nsw <8 x i32> %334, %335
  %337 = extractelement <8 x i32> %336, i32 0
  %338 = add nsw i32 %337, %326
  br label %339

339:                                              ; preds = %243, %235
  %340 = phi i32 [ 0, %235 ], [ %338, %243 ]
  %341 = load %"class.webrtc::DenoiserFilter"*, %"class.webrtc::DenoiserFilter"** %143, align 8
  %342 = bitcast %"class.webrtc::DenoiserFilter"* %341 to i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i8*, i32, i8, i32)***
  %343 = load i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i8*, i32, i8, i32)**, i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i8*, i32, i8, i32)*** %342, align 8
  %344 = getelementptr inbounds i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i8*, i32, i8, i32)*, i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i8*, i32, i8, i32)** %343, i64 3
  %345 = load i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i8*, i32, i8, i32)*, i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i8*, i32, i8, i32)** %344, align 8
  %346 = call i32 %345(%"class.webrtc::DenoiserFilter"* %341, i8* %242, i32 %114, i8* %241, i32 %100, i8* %240, i32 %87, i8 zeroext 0, i32 %138) #8
  %347 = load i32*, i32** %144, align 8
  %348 = getelementptr inbounds i32, i32* %347, i64 %203
  store i32 %346, i32* %348, align 4
  %349 = load i32*, i32** %144, align 8
  %350 = getelementptr inbounds i32, i32* %349, i64 %203
  %351 = load i32, i32* %350, align 4
  %352 = icmp eq i32 %351, 1
  br i1 %352, label %353, label %365

353:                                              ; preds = %339
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %148) #8
  store i32 0, i32* %7, align 4
  br i1 %206, label %354, label %362

354:                                              ; preds = %353
  %355 = load %"class.webrtc::DenoiserFilter"*, %"class.webrtc::DenoiserFilter"** %143, align 8
  %356 = bitcast %"class.webrtc::DenoiserFilter"* %355 to i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)***
  %357 = load i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)**, i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)*** %356, align 8
  %358 = getelementptr inbounds i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)*, i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)** %357, i64 2
  %359 = load i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)*, i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)** %358, align 8
  %360 = call i32 %359(%"class.webrtc::DenoiserFilter"* %355, i8* %242, i32 %100, i8* %240, i32 %87, i32* nonnull %7) #8
  %361 = load %"class.webrtc::NoiseEstimation"*, %"class.webrtc::NoiseEstimation"** %147, align 8
  call void @_ZN6webrtc15NoiseEstimation8GetNoiseEijj(%"class.webrtc::NoiseEstimation"* %361, i32 %204, i32 %360, i32 %340) #8
  br label %362

362:                                              ; preds = %354, %353
  %363 = load i8*, i8** %146, align 8
  %364 = getelementptr inbounds i8, i8* %363, i64 %203
  store i8 0, i8* %364, align 1
  br label %400

365:                                              ; preds = %339
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #8
  store i32 0, i32* %8, align 4
  %366 = load %"class.webrtc::DenoiserFilter"*, %"class.webrtc::DenoiserFilter"** %143, align 8
  %367 = bitcast %"class.webrtc::DenoiserFilter"* %366 to i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)***
  %368 = load i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)**, i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)*** %367, align 8
  %369 = getelementptr inbounds i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)*, i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)** %368, i64 2
  %370 = load i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)*, i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)** %369, align 8
  %371 = call i32 %370(%"class.webrtc::DenoiserFilter"* %366, i8* %242, i32 %114, i8* %241, i32 %100, i32* nonnull %8) #8
  %372 = icmp ugt i32 %371, %237
  br i1 %372, label %373, label %389

373:                                              ; preds = %365
  br i1 %206, label %374, label %376

374:                                              ; preds = %373
  %375 = load %"class.webrtc::NoiseEstimation"*, %"class.webrtc::NoiseEstimation"** %147, align 8
  call void @_ZN6webrtc15NoiseEstimation17ResetConsecLowVarEi(%"class.webrtc::NoiseEstimation"* %375, i32 %204) #8
  br label %376

376:                                              ; preds = %374, %373
  %377 = load i8*, i8** %146, align 8
  %378 = getelementptr inbounds i8, i8* %377, i64 %203
  store i8 1, i8* %378, align 1
  %379 = icmp ne i32 %236, 3
  %380 = zext i1 %379 to i8
  %381 = load i8*, i8** %115, align 8
  %382 = getelementptr inbounds i8, i8* %381, i64 %201
  %383 = load i8, i8* %382, align 1
  %384 = add i8 %383, %380
  store i8 %384, i8* %382, align 1
  %385 = load i8*, i8** %120, align 8
  %386 = getelementptr inbounds i8, i8* %385, i64 %176
  %387 = load i8, i8* %386, align 1
  %388 = add i8 %387, %380
  store i8 %388, i8* %386, align 1
  br label %400

389:                                              ; preds = %365
  %390 = load i8*, i8** %146, align 8
  %391 = getelementptr inbounds i8, i8* %390, i64 %203
  store i8 0, i8* %391, align 1
  br i1 %206, label %392, label %400

392:                                              ; preds = %389
  %393 = load %"class.webrtc::DenoiserFilter"*, %"class.webrtc::DenoiserFilter"** %143, align 8
  %394 = bitcast %"class.webrtc::DenoiserFilter"* %393 to i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)***
  %395 = load i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)**, i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)*** %394, align 8
  %396 = getelementptr inbounds i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)*, i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)** %395, i64 2
  %397 = load i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)*, i32 (%"class.webrtc::DenoiserFilter"*, i8*, i32, i8*, i32, i32*)** %396, align 8
  %398 = call i32 %397(%"class.webrtc::DenoiserFilter"* %393, i8* %242, i32 %114, i8* %240, i32 %87, i32* nonnull %8) #8
  %399 = load %"class.webrtc::NoiseEstimation"*, %"class.webrtc::NoiseEstimation"** %147, align 8
  call void @_ZN6webrtc15NoiseEstimation8GetNoiseEijj(%"class.webrtc::NoiseEstimation"* %399, i32 %204, i32 %398, i32 %340) #8
  br label %400

400:                                              ; preds = %376, %392, %389, %362
  %401 = phi i8* [ %148, %362 ], [ %145, %389 ], [ %145, %392 ], [ %145, %376 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %401) #8
  %402 = add nuw nsw i64 %201, 1
  %403 = load i32, i32* %117, align 4
  %404 = sext i32 %403 to i64
  %405 = icmp slt i64 %402, %404
  br i1 %405, label %200, label %192

406:                                              ; preds = %167
  %407 = load i32, i32* %117, align 4
  %408 = shl i32 %407, 4
  %409 = load i32, i32* %13, align 8
  %410 = icmp eq i32 %408, %409
  br i1 %410, label %434, label %411

411:                                              ; preds = %406, %167
  %412 = sub nsw i32 %171, %170
  %413 = icmp sgt i32 %412, 0
  br i1 %413, label %414, label %422

414:                                              ; preds = %411
  %415 = mul nsw i32 %170, %87
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds i8, i8* %80, i64 %416
  %418 = mul nsw i32 %170, %100
  %419 = sext i32 %418 to i64
  %420 = getelementptr inbounds i8, i8* %94, i64 %419
  %421 = load i32, i32* %13, align 8
  call void @CopyPlane(i8* %417, i32 %87, i8* %420, i32 %100, i32 %421, i32 %412) #8
  br label %422

422:                                              ; preds = %414, %411
  %423 = load i32, i32* %13, align 8
  %424 = load i32, i32* %117, align 4
  %425 = shl i32 %424, 4
  %426 = sub nsw i32 %423, %425
  %427 = icmp sgt i32 %426, 0
  br i1 %427, label %428, label %434

428:                                              ; preds = %422
  %429 = sext i32 %425 to i64
  %430 = getelementptr inbounds i8, i8* %80, i64 %429
  %431 = getelementptr inbounds i8, i8* %94, i64 %429
  %432 = load i32, i32* %122, align 8
  %433 = shl i32 %432, 4
  call void @CopyPlane(i8* %430, i32 %87, i8* %431, i32 %100, i32 %426, i32 %433) #8
  br label %434

434:                                              ; preds = %428, %422, %406
  %435 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %15, align 8
  %436 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %435, i64 0, i32 0
  %437 = bitcast %"class.webrtc::I420BufferInterface"* %435 to i8* (%"class.webrtc::PlanarYuv8Buffer"*)***
  %438 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)**, i8* (%"class.webrtc::PlanarYuv8Buffer"*)*** %437, align 8
  %439 = getelementptr inbounds i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %438, i64 17
  %440 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %439, align 8
  %441 = call i8* %440(%"class.webrtc::PlanarYuv8Buffer"* %436) #8
  %442 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %15, align 8
  %443 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %442, i64 0, i32 0, i32 0
  %444 = bitcast %"class.webrtc::I420BufferInterface"* %442 to i32 (%"class.webrtc::PlanarYuvBuffer"*)***
  %445 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)**, i32 (%"class.webrtc::PlanarYuvBuffer"*)*** %444, align 8
  %446 = getelementptr inbounds i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %445, i64 14
  %447 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %446, align 8
  %448 = call i32 %447(%"class.webrtc::PlanarYuvBuffer"* %443) #8
  %449 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %89, align 8
  %450 = call i8* @_ZN6webrtc10I420Buffer12MutableDataUEv(%"class.webrtc::I420Buffer"* %449) #8
  %451 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %89, align 8
  %452 = bitcast %"class.webrtc::I420Buffer"* %451 to i32 (%"class.webrtc::I420Buffer"*)***
  %453 = load i32 (%"class.webrtc::I420Buffer"*)**, i32 (%"class.webrtc::I420Buffer"*)*** %452, align 8
  %454 = getelementptr inbounds i32 (%"class.webrtc::I420Buffer"*)*, i32 (%"class.webrtc::I420Buffer"*)** %453, i64 14
  %455 = load i32 (%"class.webrtc::I420Buffer"*)*, i32 (%"class.webrtc::I420Buffer"*)** %454, align 8
  %456 = call i32 %455(%"class.webrtc::I420Buffer"* %451) #8
  %457 = load i32, i32* %13, align 8
  %458 = add nsw i32 %457, 1
  %459 = ashr i32 %458, 1
  %460 = load i32, i32* %25, align 4
  %461 = add nsw i32 %460, 1
  %462 = ashr i32 %461, 1
  call void @CopyPlane(i8* %441, i32 %448, i8* %450, i32 %456, i32 %459, i32 %462) #8
  %463 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %15, align 8
  %464 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %463, i64 0, i32 0
  %465 = bitcast %"class.webrtc::I420BufferInterface"* %463 to i8* (%"class.webrtc::PlanarYuv8Buffer"*)***
  %466 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)**, i8* (%"class.webrtc::PlanarYuv8Buffer"*)*** %465, align 8
  %467 = getelementptr inbounds i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %466, i64 18
  %468 = load i8* (%"class.webrtc::PlanarYuv8Buffer"*)*, i8* (%"class.webrtc::PlanarYuv8Buffer"*)** %467, align 8
  %469 = call i8* %468(%"class.webrtc::PlanarYuv8Buffer"* %464) #8
  %470 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %15, align 8
  %471 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %470, i64 0, i32 0, i32 0
  %472 = bitcast %"class.webrtc::I420BufferInterface"* %470 to i32 (%"class.webrtc::PlanarYuvBuffer"*)***
  %473 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)**, i32 (%"class.webrtc::PlanarYuvBuffer"*)*** %472, align 8
  %474 = getelementptr inbounds i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %473, i64 15
  %475 = load i32 (%"class.webrtc::PlanarYuvBuffer"*)*, i32 (%"class.webrtc::PlanarYuvBuffer"*)** %474, align 8
  %476 = call i32 %475(%"class.webrtc::PlanarYuvBuffer"* %471) #8
  %477 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %89, align 8
  %478 = call i8* @_ZN6webrtc10I420Buffer12MutableDataVEv(%"class.webrtc::I420Buffer"* %477) #8
  %479 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %89, align 8
  %480 = bitcast %"class.webrtc::I420Buffer"* %479 to i32 (%"class.webrtc::I420Buffer"*)***
  %481 = load i32 (%"class.webrtc::I420Buffer"*)**, i32 (%"class.webrtc::I420Buffer"*)*** %480, align 8
  %482 = getelementptr inbounds i32 (%"class.webrtc::I420Buffer"*)*, i32 (%"class.webrtc::I420Buffer"*)** %481, i64 15
  %483 = load i32 (%"class.webrtc::I420Buffer"*)*, i32 (%"class.webrtc::I420Buffer"*)** %482, align 8
  %484 = call i32 %483(%"class.webrtc::I420Buffer"* %479) #8
  %485 = load i32, i32* %13, align 8
  %486 = add nsw i32 %485, 1
  %487 = ashr i32 %486, 1
  %488 = load i32, i32* %25, align 4
  %489 = add nsw i32 %488, 1
  %490 = ashr i32 %489, 1
  call void @CopyPlane(i8* %469, i32 %476, i8* %478, i32 %484, i32 %487, i32 %490) #8
  %491 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %89, align 8
  %492 = getelementptr inbounds %"class.webrtc::I420Buffer", %"class.webrtc::I420Buffer"* %491, i64 0, i32 0
  %493 = icmp eq %"class.webrtc::I420Buffer"* %491, null
  br i1 %493, label %499, label %494

494:                                              ; preds = %434
  %495 = getelementptr inbounds %"class.webrtc::I420Buffer", %"class.webrtc::I420Buffer"* %491, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %496 = bitcast %"class.webrtc::I420Buffer"* %491 to void (%"class.rtc::RefCountInterface"*)***
  %497 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %496, align 8
  %498 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %497, align 8
  call void %498(%"class.rtc::RefCountInterface"* %495) #8
  br label %499

499:                                              ; preds = %494, %434
  %500 = load %"class.webrtc::I420BufferInterface"*, %"class.webrtc::I420BufferInterface"** %9, align 8
  %501 = icmp eq %"class.webrtc::I420BufferInterface"* %500, null
  br i1 %501, label %509, label %502

502:                                              ; preds = %499
  %503 = getelementptr inbounds %"class.webrtc::I420BufferInterface", %"class.webrtc::I420BufferInterface"* %500, i64 0, i32 0, i32 0, i32 0, i32 0
  %504 = bitcast %"class.webrtc::I420BufferInterface"* %500 to i32 (%"class.rtc::RefCountInterface"*)***
  %505 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %504, align 8
  %506 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %505, i64 1
  %507 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %506, align 8
  %508 = call i32 %507(%"class.rtc::RefCountInterface"* %503) #8
  br label %509

509:                                              ; preds = %502, %499
  store %"class.webrtc::I420BufferInterface"* %492, %"class.webrtc::I420BufferInterface"** %9, align 8
  %510 = getelementptr inbounds %"class.rtc::scoped_refptr", %"class.rtc::scoped_refptr"* %0, i64 0, i32 0
  %511 = load %"class.webrtc::I420Buffer"*, %"class.webrtc::I420Buffer"** %89, align 8
  %512 = getelementptr inbounds %"class.webrtc::I420Buffer", %"class.webrtc::I420Buffer"* %511, i64 0, i32 0
  store %"class.webrtc::I420BufferInterface"* %512, %"class.webrtc::I420BufferInterface"** %510, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #8
  br label %513

513:                                              ; preds = %509, %69
  ret void
}

declare void @_ZN6webrtc20VideoFrameBufferPool16CreateI420BufferEii(%"class.rtc::scoped_refptr.28"* sret, %"class.webrtc::VideoFrameBufferPool"*, i32, i32) local_unnamed_addr #1

declare i8* @_ZN6webrtc10I420Buffer12MutableDataYEv(%"class.webrtc::I420Buffer"*) local_unnamed_addr #1

declare zeroext i8 @_ZN6webrtc15NoiseEstimation13GetNoiseLevelEv(%"class.webrtc::NoiseEstimation"*) local_unnamed_addr #1

declare void @_ZN6webrtc15NoiseEstimation8GetNoiseEijj(%"class.webrtc::NoiseEstimation"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN6webrtc15NoiseEstimation17ResetConsecLowVarEi(%"class.webrtc::NoiseEstimation"*, i32) local_unnamed_addr #1

declare i8* @_ZN6webrtc10I420Buffer12MutableDataUEv(%"class.webrtc::I420Buffer"*) local_unnamed_addr #1

declare i8* @_ZN6webrtc10I420Buffer12MutableDataVEv(%"class.webrtc::I420Buffer"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
