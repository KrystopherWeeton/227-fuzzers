; ModuleID = '../../components/spellcheck/renderer/spellcheck_provider.cc'
source_filename = "../../components/spellcheck/renderer/spellcheck_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.SpellCheckProvider::DictionaryUpdateObserverImpl" = type { %class.DictionaryUpdateObserver, %class.SpellCheckProvider* }
%class.DictionaryUpdateObserver = type { i32 (...)** }
%class.SpellCheckProvider = type { %"class.content::RenderFrameObserver.base", %"class.blink::WebTextCheckClient", %"class.base::IDMap", %"class.std::__1::basic_string", %"class.blink::WebVector", i32, %class.SpellCheck*, %"class.service_manager::LocalInterfaceProvider"*, %"class.mojo::Remote", %"class.std::__1::unique_ptr.277", %"class.base::WeakPtrFactory.283" }
%"class.content::RenderFrameObserver.base" = type <{ %"class.IPC::Listener", %"class.IPC::Sender", %"class.content::RenderFrame"*, i32 }>
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.content::RenderFrame" = type <{ %"class.IPC::Listener", %"class.IPC::Sender", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.blink::WebTextCheckClient" = type { i32 (...)** }
%"class.base::IDMap" = type <{ i32, [4 x i8], %"class.base::internal::flat_tree", i32, [4 x i8], %"class.std::__1::unordered_map", i8, [7 x i8] }>
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i32* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.23", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10", %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { float }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.blink::WebVector" = type { %"class.std::__1::vector.32" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"*, %"class.std::__1::__compressed_pair.42" }
%"struct.blink::WebTextCheckingResult" = type { i32, i32, i32, %"class.blink::WebVector.34" }
%"class.blink::WebVector.34" = type { %"class.std::__1::vector.35" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.37" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::WebString"* }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.blink::WebTextCheckingResult"* }
%class.SpellCheck = type { %"class.spellcheck::mojom::SpellChecker", %"class.base::SupportsWeakPtr", %"class.std::__1::unique_ptr.54", %"class.mojo::ReceiverSetBase", %"class.std::__1::vector.72", %class.CustomDictionaryEngine, %"class.service_manager::LocalInterfaceProvider"*, i8, [7 x i8], %"class.base::ObserverList", %"class.base::WeakPtrFactory.96" }
%"class.spellcheck::mojom::SpellChecker" = type { i32 (...)** }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.47 }
%class.scoped_refptr.47 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.49" }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i8 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.SpellCheck::SpellcheckRequest"* }
%"class.SpellCheck::SpellcheckRequest" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.60", i64, %"class.std::__1::map.61", i8*, i64, %"class.base::WeakPtrFactory" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.58 }
%class.scoped_refptr.58 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.59", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.59" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.60" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.61" = type { %"class.std::__1::__tree.62" }
%"class.std::__1::__tree.62" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"class.std::__1::unique_ptr.74"*, %"class.std::__1::unique_ptr.74"*, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::unique_ptr.74" = type opaque
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.std::__1::unique_ptr.74"* }
%class.CustomDictionaryEngine = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.80" }
%"class.std::__1::__tree.80" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.89", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.91" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory.96" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.service_manager::LocalInterfaceProvider" = type { i32 (...)** }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.271" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.97, %"class.std::__1::unique_ptr.224", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.99, i32 }>
%class.scoped_refptr.97 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.99, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.187", %"class.absl::optional.192", %"class.absl::optional.139", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.215", i8, [7 x i8], %class.scoped_refptr.99, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.98" }>
%"class.base::RefCountedThreadSafe.98" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string.101" }
%"class.std::__1::basic_string.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.104 }
%union.anon.104 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.122" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.122" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.99, %"class.std::__1::unique_ptr.123", %"class.absl::optional", %"struct.std::__1::atomic.135", i8, i8, i8, i8, i32, i32, %"class.absl::optional.139", %"class.std::__1::unique_ptr.144", i8, i64, %class.scoped_refptr.176, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.186" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.99, i8, %"class.mojo::ScopedHandleBase.126", %class.scoped_refptr.127, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.128", i8*, %"class.base::WeakPtrFactory.129" }
%"class.mojo::ScopedHandleBase.126" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.127 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.128" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.129" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.133 }
%union.anon.133 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.134", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.134" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"struct.std::__1::atomic.135" = type { %"struct.std::__1::__atomic_base.136" }
%"struct.std::__1::__atomic_base.136" = type { %"struct.std::__1::__cxx_atomic_impl.137" }
%"struct.std::__1::__cxx_atomic_impl.137" = type { %"struct.std::__1::__cxx_atomic_base_impl.138" }
%"struct.std::__1::__cxx_atomic_base_impl.138" = type { i8 }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.147", i8, i64, %class.scoped_refptr.148, %class.scoped_refptr.172 }
%"class.base::RepeatingCallback.147" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.148 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.150", %"class.std::__1::map.161", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.149 }
%class.scoped_refptr.149 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.150" = type { %"class.std::__1::__tree.151" }
%"class.std::__1::__tree.151" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.152", %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.161" = type { %"class.std::__1::__tree.162" }
%"class.std::__1::__tree.162" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.scoped_refptr.172 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.176 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type <{ %"class.base::RefCountedThreadSafe.177", [4 x i8], %"struct.mojo::internal::MessageQuotaChecker::Configuration"*, %"class.base::TimeTicks", %"struct.std::__1::atomic.179", %"struct.std::__1::atomic.179", %"struct.std::__1::atomic.179", %"class.base::Lock", %"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage", i64, i64, %"class.mojo::MessagePipeHandle", [4 x i8] }>
%"class.base::RefCountedThreadSafe.177" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.mojo::internal::MessageQuotaChecker::Configuration" = type { i8, i64, i64, i64, {}* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.std::__1::atomic.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__cxx_atomic_impl.182" }
%"struct.std::__1::__cxx_atomic_impl.182" = type { %"struct.std::__1::__cxx_atomic_base_impl.183" }
%"struct.std::__1::__cxx_atomic_base_impl.183" = type { i64 }
%"class.mojo::internal::MessageQuotaChecker::DecayingRateAverage" = type { i64, i64, double }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.284", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.99, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.285", [4 x i8] }>
%"class.base::RefCountedThreadSafe.284" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.285" = type { %"struct.std::__1::__atomic_base.286" }
%"struct.std::__1::__atomic_base.286" = type { %"struct.std::__1::__atomic_base.287" }
%"struct.std::__1::__atomic_base.287" = type { %"struct.std::__1::__cxx_atomic_impl.288" }
%"struct.std::__1::__cxx_atomic_impl.288" = type { %"struct.std::__1::__cxx_atomic_base_impl.289" }
%"struct.std::__1::__cxx_atomic_base_impl.289" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.185 }
%class.scoped_refptr.185 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.186" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.187" = type { %"class.absl::optional_internal::optional_data.188" }
%"class.absl::optional_internal::optional_data.188" = type { %"class.absl::optional_internal::optional_data_base.189" }
%"class.absl::optional_internal::optional_data_base.189" = type { %"class.absl::optional_internal::optional_data_dtor_base.190" }
%"class.absl::optional_internal::optional_data_dtor_base.190" = type { i8, %union.anon.191 }
%union.anon.191 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.192" = type { %"class.absl::optional_internal::optional_data.193" }
%"class.absl::optional_internal::optional_data.193" = type { %"class.absl::optional_internal::optional_data_base.194" }
%"class.absl::optional_internal::optional_data_base.194" = type { %"class.absl::optional_internal::optional_data_dtor_base.195" }
%"class.absl::optional_internal::optional_data_dtor_base.195" = type { i8, [7 x i8], %union.anon.196 }
%union.anon.196 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.139" = type { %"class.absl::optional_internal::optional_data.140" }
%"class.absl::optional_internal::optional_data.140" = type { %"class.absl::optional_internal::optional_data_base.141" }
%"class.absl::optional_internal::optional_data_base.141" = type { %"class.absl::optional_internal::optional_data_dtor_base.142" }
%"class.absl::optional_internal::optional_data_dtor_base.142" = type { i8, %union.anon.143 }
%union.anon.143 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string.101", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.201 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.201 = type { %"class.std::__1::map.203" }
%"class.std::__1::map.203" = type { %"class.std::__1::__tree.204" }
%"class.std::__1::__tree.204" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.205", %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.214"*, i64 }
%"class.std::__1::unique_ptr.214" = type opaque
%"class.std::__1::map.215" = type { %"class.std::__1::__tree.216" }
%"class.std::__1::__tree.216" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.217", %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.227", %"class.absl::optional.228", %"class.absl::optional.233", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.240", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.248", %"class.std::__1::map.257", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.266", i8, %class.scoped_refptr.99, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.267" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.227" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.228" = type { %"class.absl::optional_internal::optional_data.229" }
%"class.absl::optional_internal::optional_data.229" = type { %"class.absl::optional_internal::optional_data_base.230" }
%"class.absl::optional_internal::optional_data_base.230" = type { %"class.absl::optional_internal::optional_data_dtor_base.231" }
%"class.absl::optional_internal::optional_data_dtor_base.231" = type { i8, %union.anon.232 }
%union.anon.232 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.233" = type { %"class.absl::optional_internal::optional_data.234" }
%"class.absl::optional_internal::optional_data.234" = type { %"class.absl::optional_internal::optional_data_base.235" }
%"class.absl::optional_internal::optional_data_base.235" = type { %"class.absl::optional_internal::optional_data_dtor_base.236" }
%"class.absl::optional_internal::optional_data_dtor_base.236" = type { i8, %union.anon.237 }
%union.anon.237 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.99, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.238" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.238" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.239 }
%class.scoped_refptr.239 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.243", %class.scoped_refptr.244 }
%"class.base::RepeatingCallback.243" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.244 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.98", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.248" = type { %"class.std::__1::__tree.249" }
%"class.std::__1::__tree.249" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.250", %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.257" = type { %"class.std::__1::__tree.258" }
%"class.std::__1::__tree.258" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.259", %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::OnceCallback.266" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.267" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%class.scoped_refptr.99 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.100" }>
%"class.base::RefCountedThreadSafe.100" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.spellcheck::mojom::SpellCheckHostProxy"* }
%"class.spellcheck::mojom::SpellCheckHostProxy" = type { %"class.spellcheck::mojom::SpellCheckHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.spellcheck::mojom::SpellCheckHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* }
%"class.base::WeakPtrFactory.283" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.content::RenderFrameObserver" = type <{ %"class.IPC::Listener", %"class.IPC::Sender", %"class.content::RenderFrame"*, i32, [4 x i8] }>
%"class.blink::WebLocalFrame" = type { %"class.blink::WebFrame" }
%"class.blink::WebFrame" = type { i32 (...)**, i32, [4 x i8], %"class.blink::MultiToken" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.97, %"class.std::__1::unique_ptr.224", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.99, i32, [4 x i8] }>
%"class.blink::WebTextCheckingCompletion" = type { i32 (...)** }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.105 }
%struct.anon.105 = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::tuple.558" = type { i8 }
%"class.base::OnceCallback.296" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr.297" = type { %"class.base::internal::WeakPtrBase" }
%"struct.std::__1::__tuple_impl.566" = type { %"class.std::__1::__tuple_leaf.567", %"class.std::__1::__tuple_leaf.568", %"class.std::__1::__tuple_leaf.569" }
%"class.std::__1::__tuple_leaf.567" = type { %"class.base::WeakPtr.297" }
%"class.std::__1::__tuple_leaf.568" = type { i32 }
%"class.std::__1::__tuple_leaf.569" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.298" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %struct.SpellCheckResult*, %struct.SpellCheckResult*, %"class.std::__1::__compressed_pair.543" }
%struct.SpellCheckResult = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector.301", i8, [7 x i8] }>
%"class.std::__1::vector.301" = type { %"class.std::__1::__vector_base.302" }
%"class.std::__1::__vector_base.302" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %struct.SpellCheckResult* }
%"class.blink::WebElement" = type { %"class.blink::WebNode" }
%"class.blink::WebNode" = type { i32 (...)**, %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.std::__1::vector.299" = type { %"class.std::__1::__vector_base.300" }
%"class.std::__1::__vector_base.300" = type { %"class.std::__1::vector.301"*, %"class.std::__1::vector.301"*, %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.std::__1::vector.301"* }
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.550" }
%"struct.std::__1::pair.550" = type { i32, %"class.std::__1::unique_ptr.290" }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::WebTextCheckingCompletion"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.19"*, i8, [7 x i8] }>
%"class.std::__1::allocator.19" = type { i8 }
%"class.IPC::Message" = type { %"class.base::Pickle", i8, %class.scoped_refptr.314 }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%class.scoped_refptr.314 = type { %"class.IPC::MessageAttachmentSet"* }
%"class.IPC::MessageAttachmentSet" = type opaque
%"class.content::RendererPpapiHost" = type opaque
%class.GURL = type { %"class.std::__1::basic_string.101", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.315" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %class.GURL* }
%"class.blink::WebDocumentLoader" = type { i32 (...)** }
%"class.v8::Context" = type { i8 }
%"class.blink::WebFormElement" = type { %"class.blink::WebElement" }
%"class.blink::UseCounterFeature" = type { i32, i32 }
%"class.blink::WebURLRequest" = type { %"class.std::__1::unique_ptr.326", %"class.blink::ResourceRequest"* }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.blink::ResourceRequest"* }
%"class.blink::ResourceRequest" = type opaque
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.333, %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.std::__1::basic_string.101", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.355", i32, [4 x i8], i64, %"class.std::__1::basic_string.101", i32, [4 x i8], %"class.absl::optional.361", %"class.std::__1::vector.368", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.403", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.413", %"class.absl::optional.514", %"class.absl::optional.525", %"class.std::__1::vector.368", %class.GURL, i8, [7 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.332" }
%"class.base::time_internal::TimeBase.332" = type { i64 }
%class.scoped_refptr.333 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.334", %"class.std::__1::vector.335", %"class.std::__1::basic_string.101", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.334" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.335" = type { %"class.std::__1::__vector_base.336" }
%"class.std::__1::__vector_base.336" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.337" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.342" }
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string.101", %"class.std::__1::vector.345", %"class.std::__1::vector.345", %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101" }
%"class.std::__1::vector.345" = type { %"class.std::__1::__vector_base.346" }
%"class.std::__1::__vector_base.346" = type { %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*, %"class.std::__1::__compressed_pair.347" }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.mojo::InlinedStructPtr"* }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string.101", i16, [6 x i8] }>
%"class.std::__1::vector.355" = type { %"class.std::__1::__vector_base.356" }
%"class.std::__1::__vector_base.356" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"class.absl::optional.361" = type { %"class.absl::optional_internal::optional_data.362" }
%"class.absl::optional_internal::optional_data.362" = type { %"class.absl::optional_internal::optional_data_base.363" }
%"class.absl::optional_internal::optional_data_base.363" = type { %"class.absl::optional_internal::optional_data_dtor_base.364" }
%"class.absl::optional_internal::optional_data_dtor_base.364" = type { i8, [7 x i8], %union.anon.365 }
%union.anon.365 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.366, %class.scoped_refptr.366, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.386", %"class.std::__1::basic_string.101", %"class.std::__1::vector.394", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.366 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.367", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string.101", %"class.std::__1::unique_ptr.375", %"class.std::__1::vector.379" }
%"class.base::RefCountedThreadSafe.367" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101", %"class.std::__1::vector.368", %"class.std::__1::vector.368", %"class.std::__1::vector.368", %"class.std::__1::vector.368" }
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.379" = type { %"class.std::__1::__vector_base.380" }
%"class.std::__1::__vector_base.380" = type { %"class.std::__1::unique_ptr.375"*, %"class.std::__1::unique_ptr.375"*, %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.std::__1::unique_ptr.375"* }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.389" }
%"class.net::HashValue" = type { i32, %union.anon.388 }
%union.anon.388 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.390" }
%"struct.std::__1::__compressed_pair_elem.390" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.394" = type { %"class.std::__1::__vector_base.395" }
%"class.std::__1::__vector_base.395" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.398" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.396, i32, [4 x i8] }>
%class.scoped_refptr.396 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.397", i32, %"class.std::__1::basic_string.101", %"class.base::Time", %"class.std::__1::basic_string.101", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string.101" }
%"class.base::RefCountedThreadSafe.397" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string.101" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.absl::optional.403" = type { %"class.absl::optional_internal::optional_data.404" }
%"class.absl::optional_internal::optional_data.404" = type { %"class.absl::optional_internal::optional_data_base.405" }
%"class.absl::optional_internal::optional_data_base.405" = type { %"class.absl::optional_internal::optional_data_dtor_base.406" }
%"class.absl::optional_internal::optional_data_dtor_base.406" = type { i8, %union.anon.407 }
%union.anon.407 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.408" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101", i16, [6 x i8] }>
%"class.absl::optional.408" = type { %"class.absl::optional_internal::optional_data.409" }
%"class.absl::optional_internal::optional_data.409" = type { %"class.absl::optional_internal::optional_data_base.410" }
%"class.absl::optional_internal::optional_data_base.410" = type { %"class.absl::optional_internal::optional_data_dtor_base.411" }
%"class.absl::optional_internal::optional_data_dtor_base.411" = type { i8, %union.anon.412 }
%union.anon.412 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.mojo::StructPtr.413" = type { %"class.std::__1::unique_ptr.414" }
%"class.std::__1::unique_ptr.414" = type { %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.417", %"class.mojo::StructPtr.466", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.478", %"class.base::TimeDelta", %"class.absl::optional.478", i32, [4 x i8], %"class.std::__1::vector.490", %"class.mojo::StructPtr.504", i8, [7 x i8] }>
%"class.std::__1::vector.417" = type { %"class.std::__1::__vector_base.418" }
%"class.std::__1::__vector_base.418" = type { %"class.mojo::StructPtr.419"*, %"class.mojo::StructPtr.419"*, %"class.std::__1::__compressed_pair.461" }
%"class.mojo::StructPtr.419" = type { %"class.std::__1::unique_ptr.420" }
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.423", %"class.base::flat_map", %"class.base::flat_map.439", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.449", i8, %"class.std::__1::vector.368", i32, %"class.mojo::StructPtr.451", %"class.std::__1::vector.368" }
%"class.mojo::StructPtr.423" = type { %"class.std::__1::unique_ptr.424" }
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101", i32, [4 x i8], %"class.std::__1::basic_string.101", i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.430" }
%"class.base::internal::flat_tree.430" = type { %"class.std::__1::vector.431" }
%"class.std::__1::vector.431" = type { %"class.std::__1::__vector_base.432" }
%"class.std::__1::__vector_base.432" = type { %"struct.std::__1::pair.433"*, %"struct.std::__1::pair.433"*, %"class.std::__1::__compressed_pair.434" }
%"struct.std::__1::pair.433" = type opaque
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"struct.std::__1::pair.433"* }
%"class.base::flat_map.439" = type { %"class.base::internal::flat_tree.440" }
%"class.base::internal::flat_tree.440" = type { %"class.std::__1::vector.441" }
%"class.std::__1::vector.441" = type { %"class.std::__1::__vector_base.442" }
%"class.std::__1::__vector_base.442" = type { %"struct.std::__1::pair.443"*, %"struct.std::__1::pair.443"*, %"class.std::__1::__compressed_pair.444" }
%"struct.std::__1::pair.443" = type opaque
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"struct.std::__1::pair.443"* }
%"class.mojo::InlinedStructPtr.449" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string.101", i32, i32 }
%"class.mojo::StructPtr.451" = type { %"class.std::__1::unique_ptr.452" }
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.368", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.mojo::StructPtr.419"* }
%"class.mojo::StructPtr.466" = type { %"class.std::__1::unique_ptr.467" }
%"class.std::__1::unique_ptr.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.473", i32, %"class.absl::optional.473" }
%"class.absl::optional.473" = type { %"class.absl::optional_internal::optional_data.474" }
%"class.absl::optional_internal::optional_data.474" = type { %"class.absl::optional_internal::optional_data_base.475" }
%"class.absl::optional_internal::optional_data_base.475" = type { %"class.absl::optional_internal::optional_data_dtor_base.476" }
%"class.absl::optional_internal::optional_data_dtor_base.476" = type { i8, %union.anon.477 }
%union.anon.477 = type { %"class.std::__1::basic_string.101" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.473", i32, %"class.absl::optional.473" }
%"class.absl::optional.478" = type { %"class.absl::optional_internal::optional_data.479" }
%"class.absl::optional_internal::optional_data.479" = type { %"class.absl::optional_internal::optional_data_base.480" }
%"class.absl::optional_internal::optional_data_base.480" = type { %"class.absl::optional_internal::optional_data_dtor_base.481" }
%"class.absl::optional_internal::optional_data_dtor_base.481" = type { i8, %union.anon.482 }
%union.anon.482 = type { %"class.std::__1::vector.483" }
%"class.std::__1::vector.483" = type { %"class.std::__1::__vector_base.484" }
%"class.std::__1::__vector_base.484" = type { i32*, i32*, %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { i32* }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"class.mojo::StructPtr.492"*, %"class.mojo::StructPtr.492"*, %"class.std::__1::__compressed_pair.499" }
%"class.mojo::StructPtr.492" = type { %"class.std::__1::unique_ptr.493" }
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.473" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.mojo::StructPtr.492"* }
%"class.mojo::StructPtr.504" = type { %"class.std::__1::unique_ptr.505" }
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.368"* }
%"class.absl::optional.514" = type { %"class.absl::optional_internal::optional_data.515" }
%"class.absl::optional_internal::optional_data.515" = type { %"class.absl::optional_internal::optional_data_base.516" }
%"class.absl::optional_internal::optional_data_base.516" = type { %"class.absl::optional_internal::optional_data_dtor_base.517" }
%"class.absl::optional_internal::optional_data_dtor_base.517" = type { i8, %union.anon.518 }
%union.anon.518 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.519" }
%"class.std::__1::unique_ptr.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.368", %"class.absl::optional.473", %"class.std::__1::vector.368", %"class.std::__1::vector.368" }
%"class.absl::optional.525" = type { %"class.absl::optional_internal::optional_data.526" }
%"class.absl::optional_internal::optional_data.526" = type { %"class.absl::optional_internal::optional_data_base.527" }
%"class.absl::optional_internal::optional_data_base.527" = type { %"class.absl::optional_internal::optional_data_dtor_base.528" }
%"class.absl::optional_internal::optional_data_dtor_base.528" = type { i8, %union.anon.529 }
%union.anon.529 = type { %"class.base::UnguessableToken" }
%"class.std::__1::vector.368" = type { %"class.std::__1::__vector_base.369" }
%"class.std::__1::__vector_base.369" = type { %"class.std::__1::basic_string.101"*, %"class.std::__1::basic_string.101"*, %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.std::__1::basic_string.101"* }
%"struct.network::URLLoaderCompletionStatus" = type <{ i32, i32, i8, [7 x i8], %"class.base::TimeTicks", i64, i64, i64, %"class.absl::optional.530", i32, [4 x i8], %"class.absl::optional.361", %"class.absl::optional.535", i8, [7 x i8], %"class.net::ProxyServer", %"struct.net::ResolveErrorInfo", i8, [7 x i8] }>
%"class.absl::optional.530" = type { %"class.absl::optional_internal::optional_data.531" }
%"class.absl::optional_internal::optional_data.531" = type { %"class.absl::optional_internal::optional_data_base.532" }
%"class.absl::optional_internal::optional_data_base.532" = type { %"class.absl::optional_internal::optional_data_dtor_base.533" }
%"class.absl::optional_internal::optional_data_dtor_base.533" = type { i8, [7 x i8], %union.anon.534 }
%union.anon.534 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string.101", i32, i8, [3 x i8] }>
%"class.absl::optional.535" = type { %"class.absl::optional_internal::optional_data.536" }
%"class.absl::optional_internal::optional_data.536" = type { %"class.absl::optional_internal::optional_data_base.537" }
%"class.absl::optional_internal::optional_data_base.537" = type { %"class.absl::optional_internal::optional_data_dtor_base.538" }
%"class.absl::optional_internal::optional_data_dtor_base.538" = type { i8, %union.anon.539 }
%union.anon.539 = type { i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.ui::AXMode" = type { i32 }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.540", [4 x i8] }>
%"class.base::RefCounted.540" = type { %"class.base::subtle::RefCountedBase" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"struct.blink::MobileFriendliness" = type opaque
%"class.base::ReadOnlySharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::vector.541" = type opaque
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.100", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.101", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::__split_buffer" = type { i32*, i32*, i32*, %"class.std::__1::__compressed_pair.582" }
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.5", %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"class.std::__1::allocator.7"* }
%"class.std::__1::allocator.7" = type { i8 }

$_ZN15service_manager22LocalInterfaceProvider12GetInterfaceIN10spellcheck5mojom14SpellCheckHostEEEvN4mojo15PendingReceiverIT_EE = comdat any

$_ZNK4base5IDMapINSt3__110unique_ptrIN5blink25WebTextCheckingCompletionENS1_14default_deleteIS4_EEEEiE6LookupEi = comdat any

$_ZN4base5IDMapINSt3__110unique_ptrIN5blink25WebTextCheckingCompletionENS1_14default_deleteIS4_EEEEiE6RemoveEi = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZN3IPC8Listener18OnChannelConnectedEi = comdat any

$_ZN3IPC8Listener14OnChannelErrorEv = comdat any

$_ZN3IPC8Listener20OnBadMessageReceivedERKNS_7MessageE = comdat any

$_ZN3IPC8Listener28OnAssociatedInterfaceRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4mojo29ScopedInterfaceEndpointHandleE = comdat any

$_ZN3IPC8Listener15OnChannelDeniedEv = comdat any

$_ZN3IPC8Listener20OnChannelListenErrorEv = comdat any

$_ZN7content19RenderFrameObserver21DidCreatePepperPluginEPNS_17RendererPpapiHostE = comdat any

$_ZN7content19RenderFrameObserver6OnStopEv = comdat any

$_ZN7content19RenderFrameObserver9WasHiddenEv = comdat any

$_ZN7content19RenderFrameObserver8WasShownEv = comdat any

$_ZN7content19RenderFrameObserver18DidStartNavigationERK4GURLN4absl8optionalIN5blink17WebNavigationTypeEEE = comdat any

$_ZN7content19RenderFrameObserver23ReadyToCommitNavigationEPN5blink17WebDocumentLoaderE = comdat any

$_ZN7content19RenderFrameObserver24DidSetPageLifecycleStateEv = comdat any

$_ZN7content19RenderFrameObserver20DidCreateNewDocumentEv = comdat any

$_ZN7content19RenderFrameObserver24DidCreateDocumentElementEv = comdat any

$_ZN7content19RenderFrameObserver24DidCommitProvisionalLoadEN2ui14PageTransitionE = comdat any

$_ZN7content19RenderFrameObserver22DidFailProvisionalLoadEv = comdat any

$_ZN7content19RenderFrameObserver13DidFinishLoadEv = comdat any

$_ZN7content19RenderFrameObserver21DidFinishDocumentLoadEv = comdat any

$_ZN7content19RenderFrameObserver21DidHandleOnloadEventsEv = comdat any

$_ZN7content19RenderFrameObserver22DidCreateScriptContextEN2v85LocalINS1_7ContextEEEi = comdat any

$_ZN7content19RenderFrameObserver24WillReleaseScriptContextEN2v85LocalINS1_7ContextEEEi = comdat any

$_ZN7content19RenderFrameObserver20DidClearWindowObjectEv = comdat any

$_ZN7content19RenderFrameObserver21DidChangeScrollOffsetEv = comdat any

$_ZN7content19RenderFrameObserver19WillSendSubmitEventERKN5blink14WebFormElementE = comdat any

$_ZN7content19RenderFrameObserver14WillSubmitFormERKN5blink14WebFormElementE = comdat any

$_ZN7content19RenderFrameObserver11DidMatchCSSERKN5blink9WebVectorINS1_9WebStringEEES6_ = comdat any

$_ZN7content19RenderFrameObserver31DidFinishSameDocumentNavigationEv = comdat any

$_ZN7content19RenderFrameObserver10WillDetachEv = comdat any

$_ZN7content19RenderFrameObserver27DetailedConsoleMessageAddedERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_S9_ji = comdat any

$_ZN7content19RenderFrameObserver19DidMeaningfulLayoutEN5blink19WebMeaningfulLayoutE = comdat any

$_ZN7content19RenderFrameObserver26DidChangePerformanceTimingEv = comdat any

$_ZN7content19RenderFrameObserver20DidObserveInputDelayEN4base9TimeDeltaE = comdat any

$_ZN7content19RenderFrameObserver26DidObserveFirstScrollDelayEN4base9TimeDeltaE = comdat any

$_ZN7content19RenderFrameObserver18DidChangeCpuTimingEN4base9TimeDeltaE = comdat any

$_ZN7content19RenderFrameObserver25DidObserveLoadingBehaviorEN5blink19LoadingBehaviorFlagE = comdat any

$_ZN7content19RenderFrameObserver25DidObserveNewFeatureUsageERKN5blink17UseCounterFeatureE = comdat any

$_ZN7content19RenderFrameObserver21DidObserveLayoutShiftEdb = comdat any

$_ZN7content19RenderFrameObserver37DidObserveInputForLayoutShiftTrackingEN4base9TimeTicksE = comdat any

$_ZN7content19RenderFrameObserver18DidObserveLayoutNgEjjjjjj = comdat any

$_ZN7content19RenderFrameObserver26DidObserveLazyLoadBehaviorEN5blink19WebLocalFrameClient16LazyLoadBehaviorE = comdat any

$_ZN7content19RenderFrameObserver15WillSendRequestERKN5blink13WebURLRequestE = comdat any

$_ZN7content19RenderFrameObserver16DidStartResponseERK4GURLiRKN7network5mojom15URLResponseHeadENS5_18RequestDestinationEi = comdat any

$_ZN7content19RenderFrameObserver19DidCompleteResponseEiRKN7network25URLLoaderCompletionStatusE = comdat any

$_ZN7content19RenderFrameObserver17DidCancelResponseEi = comdat any

$_ZN7content19RenderFrameObserver30DidLoadResourceFromMemoryCacheERK4GURLilRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEb = comdat any

$_ZN7content19RenderFrameObserver28DidReceiveTransferSizeUpdateEii = comdat any

$_ZN7content19RenderFrameObserver24AccessibilityModeChangedERKN2ui6AXModeE = comdat any

$_ZN7content19RenderFrameObserver13ScriptedPrintEb = comdat any

$_ZN7content19RenderFrameObserver23DraggableRegionsChangedEv = comdat any

$_ZN7content19RenderFrameObserver28WillCreateWorkerFetchContextEPN5blink21WebWorkerFetchContextE = comdat any

$_ZN7content19RenderFrameObserver30OnMainFrameIntersectionChangedERKN3gfx4RectE = comdat any

$_ZN7content19RenderFrameObserver24OnOverlayPopupAdDetectedEv = comdat any

$_ZN7content19RenderFrameObserver23OnLargeStickyAdDetectedEv = comdat any

$_ZN7content19RenderFrameObserver26OnInterfaceRequestForFrameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4mojo16ScopedHandleBaseINSA_17MessagePipeHandleEEE = comdat any

$_ZN7content19RenderFrameObserver27OnMobileFriendlinessChangedERKN5blink18MobileFriendlinessE = comdat any

$_ZN7content19RenderFrameObserver41PreloadSubresourceOptimizationsForOriginsERKNSt3__16vectorIN5blink17WebSecurityOriginENS1_9allocatorIS4_EEEE = comdat any

$_ZNSt3__16vectorIN5blink21WebTextCheckingResultENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZN4mojo6RemoteIN10spellcheck5mojom14SpellCheckHostEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo6RemoteIN10spellcheck5mojom14SpellCheckHostEE4BindENS_13PendingRemoteIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM18SpellCheckProviderFviRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEbRKNS4_6vectorI16SpellCheckResultNS8_ISE_EEEEEJNS_7WeakPtrIS3_EEiSA_EEEFvbSI_EE7RunOnceEPNS0_13BindStateBaseEbSI_ = comdat any

$_ZN4base8internal9BindStateIM18SpellCheckProviderFviRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEbRKNS3_6vectorI16SpellCheckResultNS7_ISD_EEEEEJNS_7WeakPtrIS2_EEiS9_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM18SpellCheckProviderFviRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEbRKNS4_6vectorI16SpellCheckResultNS8_ISE_EEEEEJNS_7WeakPtrIS3_EEiSA_EEEEEbPKNS0_13BindStateBaseENSO_21CancellationQueryModeE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN4base7WeakPtrI18SpellCheckProviderEEiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEC2IJLm0ELm1ELm2EEJS6_iSC_EJEJEJS6_RiRKSC_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSJ_IJDpT2_EEEDpOT3_ = comdat any

$_ZNSt3__16vectorIN5blink9WebStringENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJRKiEEEvDpOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

@_ZTVN18SpellCheckProvider28DictionaryUpdateObserverImplE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)* @_ZN18SpellCheckProvider28DictionaryUpdateObserverImplD2Ev to i8*), i8* bitcast (void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)* @_ZN18SpellCheckProvider28DictionaryUpdateObserverImplD0Ev to i8*), i8* bitcast (void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*, %"class.blink::WebVector.34"*)* @_ZN18SpellCheckProvider28DictionaryUpdateObserverImpl19OnDictionaryUpdatedERKN5blink9WebVectorINS1_9WebStringEEE to i8*)] }, align 8
@_ZTV18SpellCheckProvider = hidden unnamed_addr constant { [70 x i8*], [5 x i8*], [7 x i8*] } { [70 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.content::RenderFrameObserver"*, %"class.IPC::Message"*)* @_ZN7content19RenderFrameObserver17OnMessageReceivedERKN3IPC7MessageE to i8*), i8* bitcast (void (%"class.IPC::Listener"*, i32)* @_ZN3IPC8Listener18OnChannelConnectedEi to i8*), i8* bitcast (void (%"class.IPC::Listener"*)* @_ZN3IPC8Listener14OnChannelErrorEv to i8*), i8* bitcast (void (%"class.IPC::Listener"*, %"class.IPC::Message"*)* @_ZN3IPC8Listener20OnBadMessageReceivedERKNS_7MessageE to i8*), i8* bitcast (void (%"class.IPC::Listener"*, %"class.std::__1::basic_string.101"*, %"class.mojo::ScopedInterfaceEndpointHandle"*)* @_ZN3IPC8Listener28OnAssociatedInterfaceRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4mojo29ScopedInterfaceEndpointHandleE to i8*), i8* bitcast (void (%"class.IPC::Listener"*)* @_ZN3IPC8Listener15OnChannelDeniedEv to i8*), i8* bitcast (void (%"class.IPC::Listener"*)* @_ZN3IPC8Listener20OnChannelListenErrorEv to i8*), i8* bitcast (void (%class.SpellCheckProvider*)* @_ZN18SpellCheckProviderD2Ev to i8*), i8* bitcast (void (%class.SpellCheckProvider*)* @_ZN18SpellCheckProviderD0Ev to i8*), i8* bitcast (void (%class.SpellCheckProvider*)* @_ZN18SpellCheckProvider10OnDestructEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.content::RendererPpapiHost"*)* @_ZN7content19RenderFrameObserver21DidCreatePepperPluginEPNS_17RendererPpapiHostE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver6OnStopEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver9WasHiddenEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver8WasShownEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %class.GURL*, i64)* @_ZN7content19RenderFrameObserver18DidStartNavigationERK4GURLN4absl8optionalIN5blink17WebNavigationTypeEEE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.blink::WebDocumentLoader"*)* @_ZN7content19RenderFrameObserver23ReadyToCommitNavigationEPN5blink17WebDocumentLoaderE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver24DidSetPageLifecycleStateEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver20DidCreateNewDocumentEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver24DidCreateDocumentElementEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, i32)* @_ZN7content19RenderFrameObserver24DidCommitProvisionalLoadEN2ui14PageTransitionE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver22DidFailProvisionalLoadEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver13DidFinishLoadEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver21DidFinishDocumentLoadEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver21DidHandleOnloadEventsEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.v8::Context"*, i32)* @_ZN7content19RenderFrameObserver22DidCreateScriptContextEN2v85LocalINS1_7ContextEEEi to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.v8::Context"*, i32)* @_ZN7content19RenderFrameObserver24WillReleaseScriptContextEN2v85LocalINS1_7ContextEEEi to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver20DidClearWindowObjectEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver21DidChangeScrollOffsetEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.blink::WebFormElement"*)* @_ZN7content19RenderFrameObserver19WillSendSubmitEventERKN5blink14WebFormElementE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.blink::WebFormElement"*)* @_ZN7content19RenderFrameObserver14WillSubmitFormERKN5blink14WebFormElementE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.blink::WebVector.34"*, %"class.blink::WebVector.34"*)* @_ZN7content19RenderFrameObserver11DidMatchCSSERKN5blink9WebVectorINS1_9WebStringEEES6_ to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver31DidFinishSameDocumentNavigationEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver10WillDetachEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i32, i32)* @_ZN7content19RenderFrameObserver27DetailedConsoleMessageAddedERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_S9_ji to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, i32)* @_ZN7content19RenderFrameObserver19DidMeaningfulLayoutEN5blink19WebMeaningfulLayoutE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver26DidChangePerformanceTimingEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, i64)* @_ZN7content19RenderFrameObserver20DidObserveInputDelayEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, i64)* @_ZN7content19RenderFrameObserver26DidObserveFirstScrollDelayEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, i64)* @_ZN7content19RenderFrameObserver18DidChangeCpuTimingEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, i32)* @_ZN7content19RenderFrameObserver25DidObserveLoadingBehaviorEN5blink19LoadingBehaviorFlagE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.blink::UseCounterFeature"*)* @_ZN7content19RenderFrameObserver25DidObserveNewFeatureUsageERKN5blink17UseCounterFeatureE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, double, i1)* @_ZN7content19RenderFrameObserver21DidObserveLayoutShiftEdb to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, i64)* @_ZN7content19RenderFrameObserver37DidObserveInputForLayoutShiftTrackingEN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, i32, i32, i32, i32, i32, i32)* @_ZN7content19RenderFrameObserver18DidObserveLayoutNgEjjjjjj to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, i32)* @_ZN7content19RenderFrameObserver26DidObserveLazyLoadBehaviorEN5blink19WebLocalFrameClient16LazyLoadBehaviorE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.blink::WebURLRequest"*)* @_ZN7content19RenderFrameObserver15WillSendRequestERKN5blink13WebURLRequestE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %class.GURL*, i32, %"class.network::mojom::URLResponseHead"*, i32, i32)* @_ZN7content19RenderFrameObserver16DidStartResponseERK4GURLiRKN7network5mojom15URLResponseHeadENS5_18RequestDestinationEi to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, i32, %"struct.network::URLLoaderCompletionStatus"*)* @_ZN7content19RenderFrameObserver19DidCompleteResponseEiRKN7network25URLLoaderCompletionStatusE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, i32)* @_ZN7content19RenderFrameObserver17DidCancelResponseEi to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %class.GURL*, i32, i64, %"class.std::__1::basic_string.101"*, i1)* @_ZN7content19RenderFrameObserver30DidLoadResourceFromMemoryCacheERK4GURLilRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEb to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, i32, i32)* @_ZN7content19RenderFrameObserver28DidReceiveTransferSizeUpdateEii to i8*), i8* bitcast (void (%class.SpellCheckProvider*, %"class.blink::WebElement"*)* @_ZN18SpellCheckProvider21FocusedElementChangedERKN5blink10WebElementE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.ui::AXMode"*)* @_ZN7content19RenderFrameObserver24AccessibilityModeChangedERKN2ui6AXModeE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, i1)* @_ZN7content19RenderFrameObserver13ScriptedPrintEb to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver23DraggableRegionsChangedEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.blink::WebWorkerFetchContext"*)* @_ZN7content19RenderFrameObserver28WillCreateWorkerFetchContextEPN5blink21WebWorkerFetchContextE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.gfx::Rect"*)* @_ZN7content19RenderFrameObserver30OnMainFrameIntersectionChangedERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver24OnOverlayPopupAdDetectedEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*)* @_ZN7content19RenderFrameObserver23OnLargeStickyAdDetectedEv to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.std::__1::basic_string.101"*, %"class.mojo::ScopedHandleBase"*)* @_ZN7content19RenderFrameObserver26OnInterfaceRequestForFrameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4mojo16ScopedHandleBaseINSA_17MessagePipeHandleEEE to i8*), i8* bitcast (i1 (%"class.content::RenderFrameObserver"*, %"class.std::__1::basic_string.101"*, %"class.mojo::ScopedInterfaceEndpointHandle"*)* @_ZN7content19RenderFrameObserver36OnAssociatedInterfaceRequestForFrameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4mojo29ScopedInterfaceEndpointHandleE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"struct.blink::MobileFriendliness"*)* @_ZN7content19RenderFrameObserver27OnMobileFriendlinessChangedERKN5blink18MobileFriendlinessE to i8*), i8* bitcast (i1 (%"class.content::RenderFrameObserver"*, %"class.base::ReadOnlySharedMemoryRegion"*)* @_ZN7content19RenderFrameObserver24SetUpSmoothnessReportingERN4base26ReadOnlySharedMemoryRegionE to i8*), i8* bitcast (void (%"class.content::RenderFrameObserver"*, %"class.std::__1::vector.541"*)* @_ZN7content19RenderFrameObserver41PreloadSubresourceOptimizationsForOriginsERKNSt3__16vectorIN5blink17WebSecurityOriginENS1_9allocatorIS4_EEEE to i8*), i8* bitcast (i1 (%"class.content::RenderFrameObserver"*, %"class.IPC::Message"*)* @_ZN7content19RenderFrameObserver4SendEPN3IPC7MessageE to i8*), i8* bitcast (i1 (%class.SpellCheckProvider*)* @_ZNK18SpellCheckProvider22IsSpellCheckingEnabledEv to i8*), i8* bitcast (void (%class.SpellCheckProvider*, %"class.blink::WebString"*, i64*, i64*, %"class.blink::WebVector.34"*)* @_ZN18SpellCheckProvider13CheckSpellingERKN5blink9WebStringERmS4_PNS0_9WebVectorIS1_EE to i8*), i8* bitcast (void (%class.SpellCheckProvider*, %"class.blink::WebString"*, %"class.blink::WebTextCheckingCompletion"*)* @_ZN18SpellCheckProvider21RequestCheckingOfTextERKN5blink9WebStringENSt3__110unique_ptrINS0_25WebTextCheckingCompletionENS4_14default_deleteIS6_EEEE to i8*)], [5 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (i1 (%"class.content::RenderFrameObserver"*, %"class.IPC::Message"*)* @_ZThn8_N7content19RenderFrameObserver4SendEPN3IPC7MessageE to i8*), i8* bitcast (void (%class.SpellCheckProvider*)* @_ZThn8_N18SpellCheckProviderD1Ev to i8*), i8* bitcast (void (%class.SpellCheckProvider*)* @_ZThn8_N18SpellCheckProviderD0Ev to i8*)], [7 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (i1 (%class.SpellCheckProvider*)* @_ZThn32_NK18SpellCheckProvider22IsSpellCheckingEnabledEv to i8*), i8* bitcast (void (%class.SpellCheckProvider*, %"class.blink::WebString"*, i64*, i64*, %"class.blink::WebVector.34"*)* @_ZThn32_N18SpellCheckProvider13CheckSpellingERKN5blink9WebStringERmS4_PNS0_9WebVectorIS1_EE to i8*), i8* bitcast (void (%class.SpellCheckProvider*, %"class.blink::WebString"*, %"class.blink::WebTextCheckingCompletion"*)* @_ZThn32_N18SpellCheckProvider21RequestCheckingOfTextERKN5blink9WebStringENSt3__110unique_ptrINS0_25WebTextCheckingCompletionENS4_14default_deleteIS6_EEEE to i8*), i8* bitcast (void (%class.SpellCheckProvider*)* @_ZThn32_N18SpellCheckProviderD1Ev to i8*), i8* bitcast (void (%class.SpellCheckProvider*)* @_ZThn32_N18SpellCheckProviderD0Ev to i8*)] }, align 8
@_ZN10spellcheck5mojom14SpellCheckHost5Name_E = external constant [0 x i8], align 1
@_ZTVN10spellcheck5mojom31SpellCheckHostResponseValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN18SpellCheckProvider28DictionaryUpdateObserverImplC1EPS_ = hidden unnamed_addr alias void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*, %class.SpellCheckProvider*), void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*, %class.SpellCheckProvider*)* @_ZN18SpellCheckProvider28DictionaryUpdateObserverImplC2EPS_
@_ZN18SpellCheckProvider28DictionaryUpdateObserverImplD1Ev = hidden unnamed_addr alias void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*), void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)* @_ZN18SpellCheckProvider28DictionaryUpdateObserverImplD2Ev
@_ZN18SpellCheckProviderC1EPN7content11RenderFrameEP10SpellCheckPN15service_manager22LocalInterfaceProviderE = hidden unnamed_addr alias void (%class.SpellCheckProvider*, %"class.content::RenderFrame"*, %class.SpellCheck*, %"class.service_manager::LocalInterfaceProvider"*), void (%class.SpellCheckProvider*, %"class.content::RenderFrame"*, %class.SpellCheck*, %"class.service_manager::LocalInterfaceProvider"*)* @_ZN18SpellCheckProviderC2EPN7content11RenderFrameEP10SpellCheckPN15service_manager22LocalInterfaceProviderE
@_ZN18SpellCheckProviderD1Ev = hidden unnamed_addr alias void (%class.SpellCheckProvider*), void (%class.SpellCheckProvider*)* @_ZN18SpellCheckProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SpellCheckProvider28DictionaryUpdateObserverImplC2EPS_(%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*, %class.SpellCheckProvider*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SpellCheckProvider::DictionaryUpdateObserverImpl", %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.SpellCheckProvider::DictionaryUpdateObserverImpl", %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN18SpellCheckProvider28DictionaryUpdateObserverImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.SpellCheckProvider::DictionaryUpdateObserverImpl", %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %0, i64 0, i32 1
  store %class.SpellCheckProvider* %1, %class.SpellCheckProvider** %5, align 8
  %6 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %1, i64 0, i32 6
  %7 = load %class.SpellCheck*, %class.SpellCheck** %6, align 8
  tail call void @_ZN10SpellCheck27AddDictionaryUpdateObserverEP24DictionaryUpdateObserver(%class.SpellCheck* %7, %class.DictionaryUpdateObserver* %3) #12
  ret void
}

declare void @_ZN10SpellCheck27AddDictionaryUpdateObserverEP24DictionaryUpdateObserver(%class.SpellCheck*, %class.DictionaryUpdateObserver*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SpellCheckProvider28DictionaryUpdateObserverImplD2Ev(%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SpellCheckProvider::DictionaryUpdateObserverImpl", %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN18SpellCheckProvider28DictionaryUpdateObserverImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SpellCheckProvider::DictionaryUpdateObserverImpl", %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %0, i64 0, i32 1
  %4 = load %class.SpellCheckProvider*, %class.SpellCheckProvider** %3, align 8
  %5 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %4, i64 0, i32 6
  %6 = load %class.SpellCheck*, %class.SpellCheck** %5, align 8
  %7 = getelementptr inbounds %"class.SpellCheckProvider::DictionaryUpdateObserverImpl", %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %0, i64 0, i32 0
  tail call void @_ZN10SpellCheck30RemoveDictionaryUpdateObserverEP24DictionaryUpdateObserver(%class.SpellCheck* %6, %class.DictionaryUpdateObserver* %7) #12
  ret void
}

declare void @_ZN10SpellCheck30RemoveDictionaryUpdateObserverEP24DictionaryUpdateObserver(%class.SpellCheck*, %class.DictionaryUpdateObserver*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SpellCheckProvider28DictionaryUpdateObserverImplD0Ev(%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SpellCheckProvider::DictionaryUpdateObserverImpl", %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN18SpellCheckProvider28DictionaryUpdateObserverImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SpellCheckProvider::DictionaryUpdateObserverImpl", %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %0, i64 0, i32 1
  %4 = load %class.SpellCheckProvider*, %class.SpellCheckProvider** %3, align 8
  %5 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %4, i64 0, i32 6
  %6 = load %class.SpellCheck*, %class.SpellCheck** %5, align 8
  %7 = getelementptr inbounds %"class.SpellCheckProvider::DictionaryUpdateObserverImpl", %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %0, i64 0, i32 0
  tail call void @_ZN10SpellCheck30RemoveDictionaryUpdateObserverEP24DictionaryUpdateObserver(%class.SpellCheck* %6, %class.DictionaryUpdateObserver* %7) #12
  %8 = bitcast %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SpellCheckProvider28DictionaryUpdateObserverImpl19OnDictionaryUpdatedERKN5blink9WebVectorINS1_9WebStringEEE(%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* nocapture readonly, %"class.blink::WebVector.34"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SpellCheckProvider::DictionaryUpdateObserverImpl", %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %0, i64 0, i32 1
  %4 = load %class.SpellCheckProvider*, %class.SpellCheckProvider** %3, align 8
  %5 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %4, i64 0, i32 3
  %6 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  store i16 0, i16* %12, align 2
  %13 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %13, align 8
  br label %16

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  store i16 0, i16* %15, align 2
  store i8 0, i8* %7, align 1
  br label %16

16:                                               ; preds = %10, %14
  %17 = load %class.SpellCheckProvider*, %class.SpellCheckProvider** %3, align 8
  %18 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %17, i64 0, i32 4, i32 0
  tail call void @_ZNSt3__16vectorIN5blink21WebTextCheckingResultENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.32"* %18, %"struct.blink::WebTextCheckingResult"* null, %"struct.blink::WebTextCheckingResult"* null) #12
  %19 = bitcast %class.SpellCheckProvider** %3 to %"class.content::RenderFrameObserver"**
  %20 = load %"class.content::RenderFrameObserver"*, %"class.content::RenderFrameObserver"** %19, align 8
  %21 = tail call %"class.content::RenderFrame"* @_ZNK7content19RenderFrameObserver12render_frameEv(%"class.content::RenderFrameObserver"* %20) #12
  %22 = icmp eq %"class.content::RenderFrame"* %21, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.content::RenderFrame"* %21 to %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)***
  %25 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)**, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %25, i64 15
  %27 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %26, align 8
  %28 = tail call %"class.blink::WebLocalFrame"* %27(%"class.content::RenderFrame"* nonnull %21) #12
  %29 = bitcast %"class.blink::WebLocalFrame"* %28 to void (%"class.blink::WebLocalFrame"*, %"class.blink::WebVector.34"*)***
  %30 = load void (%"class.blink::WebLocalFrame"*, %"class.blink::WebVector.34"*)**, void (%"class.blink::WebLocalFrame"*, %"class.blink::WebVector.34"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::WebLocalFrame"*, %"class.blink::WebVector.34"*)*, void (%"class.blink::WebLocalFrame"*, %"class.blink::WebVector.34"*)** %30, i64 92
  %32 = load void (%"class.blink::WebLocalFrame"*, %"class.blink::WebVector.34"*)*, void (%"class.blink::WebLocalFrame"*, %"class.blink::WebVector.34"*)** %31, align 8
  tail call void %32(%"class.blink::WebLocalFrame"* %28, %"class.blink::WebVector.34"* dereferenceable(24) %1) #12
  br label %33

33:                                               ; preds = %16, %23
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.content::RenderFrame"* @_ZNK7content19RenderFrameObserver12render_frameEv(%"class.content::RenderFrameObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SpellCheckProviderC2EPN7content11RenderFrameEP10SpellCheckPN15service_manager22LocalInterfaceProviderE(%class.SpellCheckProvider*, %"class.content::RenderFrame"*, %class.SpellCheck*, %"class.service_manager::LocalInterfaceProvider"*) unnamed_addr #0 align 2 {
  %5 = bitcast %class.SpellCheckProvider* %0 to %"class.content::RenderFrameObserver"*
  tail call void @_ZN7content19RenderFrameObserverC2EPNS_11RenderFrameE(%"class.content::RenderFrameObserver"* %5, %"class.content::RenderFrame"* %1) #12
  %6 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::WebTextCheckClient", %"class.blink::WebTextCheckClient"* %6, i64 0, i32 0
  %8 = bitcast %class.SpellCheckProvider* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [5 x i8*], [7 x i8*] }, { [70 x i8*], [5 x i8*], [7 x i8*] }* @_ZTV18SpellCheckProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [5 x i8*], [7 x i8*] }, { [70 x i8*], [5 x i8*], [7 x i8*] }* @_ZTV18SpellCheckProvider, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [5 x i8*], [7 x i8*] }, { [70 x i8*], [5 x i8*], [7 x i8*] }* @_ZTV18SpellCheckProvider, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 0
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 2
  %11 = bitcast %"class.base::internal::flat_tree"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #12
  %12 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 3
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 5
  %14 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 5, i32 0, i32 3
  %15 = bitcast %"class.std::__1::__compressed_pair.23"* %14 to i32*
  %16 = bitcast %"class.std::__1::unordered_map"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %15, align 4
  %17 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 6
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 3
  %19 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 6
  %20 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 48, i1 false)
  store %class.SpellCheck* %2, %class.SpellCheck** %19, align 8
  %21 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 7
  store %"class.service_manager::LocalInterfaceProvider"* %3, %"class.service_manager::LocalInterfaceProvider"** %21, align 8
  %22 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 8
  %23 = bitcast %"class.mojo::Remote"* %22 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %23) #12
  %24 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 8, i32 0, i32 1
  %25 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 9
  %26 = bitcast %"class.std::__1::unique_ptr.277"* %25 to i64*
  %27 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 10, i32 0
  %28 = ptrtoint %class.SpellCheckProvider* %0 to i64
  %29 = bitcast %"class.std::__1::unique_ptr.271"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %27, i64 %28) #12
  %30 = icmp eq %"class.content::RenderFrame"* %1, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %4
  %32 = bitcast %"class.content::RenderFrame"* %1 to %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)***
  %33 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)**, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %33, i64 15
  %35 = load %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)*, %"class.blink::WebLocalFrame"* (%"class.content::RenderFrame"*)** %34, align 8
  %36 = tail call %"class.blink::WebLocalFrame"* %35(%"class.content::RenderFrame"* nonnull %1) #12
  %37 = bitcast %"class.blink::WebLocalFrame"* %36 to void (%"class.blink::WebLocalFrame"*, %"class.blink::WebTextCheckClient"*)***
  %38 = load void (%"class.blink::WebLocalFrame"*, %"class.blink::WebTextCheckClient"*)**, void (%"class.blink::WebLocalFrame"*, %"class.blink::WebTextCheckClient"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::WebLocalFrame"*, %"class.blink::WebTextCheckClient"*)*, void (%"class.blink::WebLocalFrame"*, %"class.blink::WebTextCheckClient"*)** %38, i64 87
  %40 = load void (%"class.blink::WebLocalFrame"*, %"class.blink::WebTextCheckClient"*)*, void (%"class.blink::WebLocalFrame"*, %"class.blink::WebTextCheckClient"*)** %39, align 8
  tail call void %40(%"class.blink::WebLocalFrame"* %36, %"class.blink::WebTextCheckClient"* %6) #12
  br label %41

41:                                               ; preds = %4, %31
  %42 = tail call i8* @_Znwm(i64 16) #13
  %43 = bitcast i8* %42 to %class.DictionaryUpdateObserver*
  %44 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN18SpellCheckProvider28DictionaryUpdateObserverImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds i8, i8* %42, i64 8
  %46 = bitcast i8* %45 to %class.SpellCheckProvider**
  store %class.SpellCheckProvider* %0, %class.SpellCheckProvider** %46, align 8
  %47 = load %class.SpellCheck*, %class.SpellCheck** %19, align 8
  tail call void @_ZN10SpellCheck27AddDictionaryUpdateObserverEP24DictionaryUpdateObserver(%class.SpellCheck* %47, %class.DictionaryUpdateObserver* nonnull %43) #12
  %48 = ptrtoint i8* %42 to i64
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.277", %"class.std::__1::unique_ptr.277"* %25, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*, %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"** %49, align 8
  store i64 %48, i64* %26, align 8
  %51 = icmp eq %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %50, null
  br i1 %51, label %57, label %52

52:                                               ; preds = %41
  %53 = bitcast %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %50 to void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)***
  %54 = load void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)**, void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)*, void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)** %54, i64 1
  %56 = load void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)*, void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)** %55, align 8
  tail call void %56(%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* nonnull %50) #12
  br label %57

57:                                               ; preds = %52, %41
  ret void
}

declare void @_ZN7content19RenderFrameObserverC2EPNS_11RenderFrameE(%"class.content::RenderFrameObserver"*, %"class.content::RenderFrame"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SpellCheckProviderD2Ev(%class.SpellCheckProvider*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.SpellCheckProvider* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [5 x i8*], [7 x i8*] }, { [70 x i8*], [5 x i8*], [7 x i8*] }* @_ZTV18SpellCheckProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [5 x i8*], [7 x i8*] }, { [70 x i8*], [5 x i8*], [7 x i8*] }* @_ZTV18SpellCheckProvider, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [70 x i8*], [5 x i8*], [7 x i8*] }, { [70 x i8*], [5 x i8*], [7 x i8*] }* @_ZTV18SpellCheckProvider, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 10, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %4) #12
  %5 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %6 = load %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*, %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"** %5, align 8
  store %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* null, %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"** %5, align 8
  %7 = icmp eq %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %6 to void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)***
  %10 = load void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)**, void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)*, void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)** %10, i64 1
  %12 = load void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)*, void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)** %11, align 8
  tail call void %12(%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* nonnull %6) #12
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 8
  %15 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.spellcheck::mojom::SpellCheckHostProxy"*, %"class.spellcheck::mojom::SpellCheckHostProxy"** %15, align 8
  store %"class.spellcheck::mojom::SpellCheckHostProxy"* null, %"class.spellcheck::mojom::SpellCheckHostProxy"** %15, align 8
  %17 = icmp eq %"class.spellcheck::mojom::SpellCheckHostProxy"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.spellcheck::mojom::SpellCheckHostProxy"* %16 to void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)***
  %20 = load void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)**, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)** %20, i64 1
  %22 = load void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)** %21, align 8
  tail call void %22(%"class.spellcheck::mojom::SpellCheckHostProxy"* nonnull %16) #12
  br label %23

23:                                               ; preds = %13, %18
  %24 = bitcast %"class.mojo::Remote"* %14 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %24) #12
  %25 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 4
  %26 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %26, align 8
  %28 = icmp eq %"struct.blink::WebTextCheckingResult"* %27, null
  br i1 %28, label %62, label %29

29:                                               ; preds = %23
  %30 = bitcast %"struct.blink::WebTextCheckingResult"* %27 to i8*
  %31 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %32 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %31, align 8
  %33 = icmp eq %"struct.blink::WebTextCheckingResult"* %32, %27
  br i1 %33, label %60, label %34

34:                                               ; preds = %29, %55
  %35 = phi %"struct.blink::WebTextCheckingResult"* [ %36, %55 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %35, i64 -1, i32 3
  %38 = getelementptr inbounds %"class.blink::WebVector.34", %"class.blink::WebVector.34"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::WebString"*, %"class.blink::WebString"** %38, align 8
  %40 = icmp eq %"class.blink::WebString"* %39, null
  br i1 %40, label %55, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.blink::WebString"* %39 to i8*
  %43 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %35, i64 -1, i32 3, i32 0, i32 0, i32 1
  %44 = load %"class.blink::WebString"*, %"class.blink::WebString"** %43, align 8
  %45 = icmp eq %"class.blink::WebString"* %44, %39
  br i1 %45, label %53, label %46

46:                                               ; preds = %41, %46
  %47 = phi %"class.blink::WebString"* [ %48, %46 ], [ %44, %41 ]
  %48 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %47, i64 -1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %48) #12
  %49 = icmp eq %"class.blink::WebString"* %48, %39
  br i1 %49, label %50, label %46

50:                                               ; preds = %46
  %51 = bitcast %"class.blink::WebVector.34"* %37 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %41
  %54 = phi i8* [ %52, %50 ], [ %42, %41 ]
  store %"class.blink::WebString"* %39, %"class.blink::WebString"** %43, align 8
  tail call void @_ZdlPv(i8* %54) #13
  br label %55

55:                                               ; preds = %53, %34
  %56 = icmp eq %"struct.blink::WebTextCheckingResult"* %36, %27
  br i1 %56, label %57, label %34

57:                                               ; preds = %55
  %58 = bitcast %"class.blink::WebVector"* %25 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %57, %29
  %61 = phi i8* [ %59, %57 ], [ %30, %29 ]
  store %"struct.blink::WebTextCheckingResult"* %27, %"struct.blink::WebTextCheckingResult"** %31, align 8
  tail call void @_ZdlPv(i8* %61) #13
  br label %62

62:                                               ; preds = %23, %60
  %63 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 3
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %64, i64 0, i32 1, i32 1
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = bitcast %"class.std::__1::basic_string"* %63 to i8**
  %70 = load i8*, i8** %69, align 8
  tail call void @_ZdlPv(i8* %70) #13
  br label %71

71:                                               ; preds = %62, %68
  %72 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node_base"* %73, null
  br i1 %74, label %91, label %75

75:                                               ; preds = %71, %88
  %76 = phi %"struct.std::__1::__hash_node_base"* [ %78, %88 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %76, i64 0, i32 0
  %78 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %76, i64 3
  %80 = bitcast %"struct.std::__1::__hash_node_base"* %79 to %"class.blink::WebTextCheckingCompletion"**
  %81 = load %"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebTextCheckingCompletion"** %80, align 8
  store %"class.blink::WebTextCheckingCompletion"* null, %"class.blink::WebTextCheckingCompletion"** %80, align 8
  %82 = icmp eq %"class.blink::WebTextCheckingCompletion"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %75
  %84 = bitcast %"class.blink::WebTextCheckingCompletion"* %81 to void (%"class.blink::WebTextCheckingCompletion"*)***
  %85 = load void (%"class.blink::WebTextCheckingCompletion"*)**, void (%"class.blink::WebTextCheckingCompletion"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %85, i64 3
  %87 = load void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %86, align 8
  tail call void %87(%"class.blink::WebTextCheckingCompletion"* nonnull %81) #12
  br label %88

88:                                               ; preds = %83, %75
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %76 to i8*
  tail call void @_ZdlPv(i8* %89) #13
  %90 = icmp eq %"struct.std::__1::__hash_node_base"* %78, null
  br i1 %90, label %91, label %75

91:                                               ; preds = %88, %71
  %92 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %92, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %92, align 8
  %94 = icmp eq %"struct.std::__1::__hash_node_base"** %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %91
  %96 = bitcast %"struct.std::__1::__hash_node_base"** %93 to i8*
  tail call void @_ZdlPv(i8* %96) #13
  br label %97

97:                                               ; preds = %95, %91
  %98 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0
  %99 = load i32*, i32** %98, align 8
  %100 = icmp eq i32* %99, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %97
  %102 = ptrtoint i32* %99 to i64
  %103 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 2, i32 0, i32 0, i32 1
  %104 = bitcast i32** %103 to i64*
  store i64 %102, i64* %104, align 8
  %105 = bitcast i32* %99 to i8*
  tail call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %97, %101
  %107 = bitcast %class.SpellCheckProvider* %0 to %"class.content::RenderFrameObserver"*
  tail call void @_ZN7content19RenderFrameObserverD2Ev(%"class.content::RenderFrameObserver"* %107) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7content19RenderFrameObserverD2Ev(%"class.content::RenderFrameObserver"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N18SpellCheckProviderD1Ev(%class.SpellCheckProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 -1, i32 10, i32 0, i32 1
  %3 = bitcast i64* %2 to %class.SpellCheckProvider*
  tail call void @_ZN18SpellCheckProviderD2Ev(%class.SpellCheckProvider* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N18SpellCheckProviderD1Ev(%class.SpellCheckProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 -1, i32 8, i32 0, i32 1
  %3 = bitcast %"class.std::__1::unique_ptr.271"* %2 to %class.SpellCheckProvider*
  tail call void @_ZN18SpellCheckProviderD2Ev(%class.SpellCheckProvider* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SpellCheckProviderD0Ev(%class.SpellCheckProvider*) unnamed_addr #0 align 2 {
  tail call void @_ZN18SpellCheckProviderD2Ev(%class.SpellCheckProvider* %0) #12
  %2 = bitcast %class.SpellCheckProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N18SpellCheckProviderD0Ev(%class.SpellCheckProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 -1, i32 10, i32 0, i32 1
  %3 = bitcast i64* %2 to %class.SpellCheckProvider*
  tail call void @_ZN18SpellCheckProviderD2Ev(%class.SpellCheckProvider* %3) #12
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N18SpellCheckProviderD0Ev(%class.SpellCheckProvider*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 -1, i32 8, i32 0, i32 1
  %3 = bitcast %"class.std::__1::unique_ptr.271"* %2 to %class.SpellCheckProvider*
  tail call void @_ZN18SpellCheckProviderD2Ev(%class.SpellCheckProvider* %3) #12
  %4 = bitcast %"class.std::__1::unique_ptr.271"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SpellCheckProvider39ResetDictionaryUpdateObserverForTestingEv(%class.SpellCheckProvider* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*, %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"** %2, align 8
  store %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* null, %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"** %2, align 8
  %4 = icmp eq %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* %3 to void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)***
  %7 = load void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)**, void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)*, void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)** %7, i64 1
  %9 = load void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)*, void (%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"*)** %8, align 8
  tail call void %9(%"class.SpellCheckProvider::DictionaryUpdateObserverImpl"* nonnull %3) #12
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.spellcheck::mojom::SpellCheckHost"* @_ZN18SpellCheckProvider17GetSpellCheckHostEv(%class.SpellCheckProvider*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.mojo::PendingReceiver", align 8
  %3 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 8
  %4 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 8, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %8, align 8
  %10 = icmp eq %"class.mojo::InterfaceEndpointClient"* %9, null
  br i1 %10, label %37, label %11

11:                                               ; preds = %7, %1
  %12 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 8, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.271"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.spellcheck::mojom::SpellCheckHostProxy"*, %"class.spellcheck::mojom::SpellCheckHostProxy"** %13, align 8
  %15 = icmp eq %"class.spellcheck::mojom::SpellCheckHostProxy"* %14, null
  br i1 %15, label %16, label %65

16:                                               ; preds = %11
  %17 = bitcast %"class.mojo::Remote"* %3 to %"class.mojo::internal::InterfacePtrStateBase"*
  %18 = tail call i8* @_Znwm(i64 8) #13
  %19 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10spellcheck5mojom31SpellCheckHostResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = bitcast i8* %18 to %"class.mojo::MessageReceiver"*
  %21 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %17, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %20, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5mojom14SpellCheckHost5Name_E, i64 0, i64 0)) #12
  br i1 %21, label %22, label %65

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = bitcast %"class.mojo::InterfaceEndpointClient"** %23 to %"class.mojo::MessageReceiverWithResponder"**
  %25 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %24, align 8
  %26 = tail call i8* @_Znwm(i64 16) #13
  %27 = bitcast i8* %26 to %"class.spellcheck::mojom::SpellCheckHostProxy"*
  tail call void @_ZN10spellcheck5mojom19SpellCheckHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.spellcheck::mojom::SpellCheckHostProxy"* nonnull %27, %"class.mojo::MessageReceiverWithResponder"* %25) #12
  %28 = ptrtoint i8* %26 to i64
  %29 = load %"class.spellcheck::mojom::SpellCheckHostProxy"*, %"class.spellcheck::mojom::SpellCheckHostProxy"** %13, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.271"* %12 to i64*
  store i64 %28, i64* %30, align 8
  %31 = icmp eq %"class.spellcheck::mojom::SpellCheckHostProxy"* %29, null
  br i1 %31, label %65, label %32

32:                                               ; preds = %22
  %33 = bitcast %"class.spellcheck::mojom::SpellCheckHostProxy"* %29 to void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)***
  %34 = load void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)**, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)** %34, i64 1
  %36 = load void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)** %35, align 8
  tail call void %36(%"class.spellcheck::mojom::SpellCheckHostProxy"* nonnull %29) #12
  br label %65

37:                                               ; preds = %7
  %38 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 7
  %39 = load %"class.service_manager::LocalInterfaceProvider"*, %"class.service_manager::LocalInterfaceProvider"** %38, align 8
  call void @_ZN4mojo6RemoteIN10spellcheck5mojom14SpellCheckHostEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver"* nonnull sret %2, %"class.mojo::Remote"* %3, %"class.base::SequencedTaskRunner"* null) #12
  call void @_ZN15service_manager22LocalInterfaceProvider12GetInterfaceIN10spellcheck5mojom14SpellCheckHostEEEvN4mojo15PendingReceiverIT_EE(%"class.service_manager::LocalInterfaceProvider"* %39, %"class.mojo::PendingReceiver"* nonnull %2)
  %40 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %40) #12
  %41 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 8, i32 0, i32 1
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.271"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.spellcheck::mojom::SpellCheckHostProxy"*, %"class.spellcheck::mojom::SpellCheckHostProxy"** %42, align 8
  %44 = icmp eq %"class.spellcheck::mojom::SpellCheckHostProxy"* %43, null
  br i1 %44, label %45, label %65

45:                                               ; preds = %37
  %46 = bitcast %"class.mojo::Remote"* %3 to %"class.mojo::internal::InterfacePtrStateBase"*
  %47 = call i8* @_Znwm(i64 8) #13
  %48 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10spellcheck5mojom31SpellCheckHostResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = bitcast i8* %47 to %"class.mojo::MessageReceiver"*
  %50 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %46, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %49, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5mojom14SpellCheckHost5Name_E, i64 0, i64 0)) #12
  br i1 %50, label %51, label %65

51:                                               ; preds = %45
  %52 = bitcast %"class.mojo::InterfaceEndpointClient"** %8 to %"class.mojo::MessageReceiverWithResponder"**
  %53 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %52, align 8
  %54 = call i8* @_Znwm(i64 16) #13
  %55 = bitcast i8* %54 to %"class.spellcheck::mojom::SpellCheckHostProxy"*
  call void @_ZN10spellcheck5mojom19SpellCheckHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.spellcheck::mojom::SpellCheckHostProxy"* nonnull %55, %"class.mojo::MessageReceiverWithResponder"* %53) #12
  %56 = ptrtoint i8* %54 to i64
  %57 = load %"class.spellcheck::mojom::SpellCheckHostProxy"*, %"class.spellcheck::mojom::SpellCheckHostProxy"** %42, align 8
  %58 = bitcast %"class.std::__1::unique_ptr.271"* %41 to i64*
  store i64 %56, i64* %58, align 8
  %59 = icmp eq %"class.spellcheck::mojom::SpellCheckHostProxy"* %57, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %51
  %61 = bitcast %"class.spellcheck::mojom::SpellCheckHostProxy"* %57 to void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)***
  %62 = load void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)**, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)** %62, i64 1
  %64 = load void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)** %63, align 8
  call void %64(%"class.spellcheck::mojom::SpellCheckHostProxy"* nonnull %57) #12
  br label %65

65:                                               ; preds = %60, %51, %45, %37, %32, %22, %16, %11
  %66 = phi %"class.spellcheck::mojom::SpellCheckHostProxy"** [ %13, %11 ], [ %13, %16 ], [ %13, %22 ], [ %13, %32 ], [ %42, %37 ], [ %42, %45 ], [ %42, %51 ], [ %42, %60 ]
  %67 = load %"class.spellcheck::mojom::SpellCheckHostProxy"*, %"class.spellcheck::mojom::SpellCheckHostProxy"** %66, align 8
  %68 = getelementptr inbounds %"class.spellcheck::mojom::SpellCheckHostProxy", %"class.spellcheck::mojom::SpellCheckHostProxy"* %67, i64 0, i32 0
  ret %"class.spellcheck::mojom::SpellCheckHost"* %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15service_manager22LocalInterfaceProvider12GetInterfaceIN10spellcheck5mojom14SpellCheckHostEEEvN4mojo15PendingReceiverIT_EE(%"class.service_manager::LocalInterfaceProvider"*, %"class.mojo::PendingReceiver"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string.101", align 8
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = bitcast %"class.std::__1::basic_string.101"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5mojom14SpellCheckHost5Name_E, i64 0, i64 0)) #12
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string.101"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #14
  unreachable

10:                                               ; preds = %2
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #13
  %16 = getelementptr inbounds %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %25

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string.101"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %12
  %26 = phi i8* [ %15, %12 ], [ %5, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5mojom14SpellCheckHost5Name_E, i64 0, i64 0), i64 %6, i1 false) #12
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i8* [ %5, %20 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %6
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4, !noalias !2
  store i32 0, i32* %30, align 4, !noalias !2
  %32 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %31, i32* %32, align 4, !alias.scope !7
  %33 = bitcast %"class.service_manager::LocalInterfaceProvider"* %0 to void (%"class.service_manager::LocalInterfaceProvider"*, %"class.std::__1::basic_string.101"*, %"class.mojo::ScopedHandleBase"*)***
  %34 = load void (%"class.service_manager::LocalInterfaceProvider"*, %"class.std::__1::basic_string.101"*, %"class.mojo::ScopedHandleBase"*)**, void (%"class.service_manager::LocalInterfaceProvider"*, %"class.std::__1::basic_string.101"*, %"class.mojo::ScopedHandleBase"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.service_manager::LocalInterfaceProvider"*, %"class.std::__1::basic_string.101"*, %"class.mojo::ScopedHandleBase"*)*, void (%"class.service_manager::LocalInterfaceProvider"*, %"class.std::__1::basic_string.101"*, %"class.mojo::ScopedHandleBase"*)** %34, i64 2
  %36 = load void (%"class.service_manager::LocalInterfaceProvider"*, %"class.std::__1::basic_string.101"*, %"class.mojo::ScopedHandleBase"*)*, void (%"class.service_manager::LocalInterfaceProvider"*, %"class.std::__1::basic_string.101"*, %"class.mojo::ScopedHandleBase"*)** %35, align 8
  call void %36(%"class.service_manager::LocalInterfaceProvider"* %0, %"class.std::__1::basic_string.101"* nonnull dereferenceable(24) %3, %"class.mojo::ScopedHandleBase"* nonnull %4) #12
  %37 = load i32, i32* %32, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %27
  %40 = call i32 @MojoClose(i32 %37) #12
  br label %41

41:                                               ; preds = %39, %27
  %42 = bitcast %"class.std::__1::basic_string.101"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.std::__1::basic_string.101", %"class.std::__1::basic_string.101"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %48) #13
  br label %49

49:                                               ; preds = %41, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SpellCheckProvider19RequestTextCheckingERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS0_10unique_ptrIN5blink25WebTextCheckingCompletionENS0_14default_deleteISB_EEEE(%class.SpellCheckProvider*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.blink::WebTextCheckingCompletion"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.558", align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %"class.base::OnceCallback.296", align 8
  %10 = alloca %"class.base::WeakPtr.297", align 8
  %11 = ptrtoint %"class.blink::WebTextCheckingCompletion"* %2 to i64
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %12, i64 0, i32 1, i32 1
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %14 to i64
  %19 = select i1 %15, i64 %17, i64 %18
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %55, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i16*, i16** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %25 = select i1 %15, i16* %23, i16* %24
  %26 = bitcast i32* %8 to i8*
  br label %27

27:                                               ; preds = %50, %21
  %28 = phi i64 [ 0, %21 ], [ %51, %50 ]
  %29 = icmp ult i64 %28, %19
  br i1 %29, label %30, label %55

30:                                               ; preds = %27
  %31 = add nuw i64 %28, 1
  %32 = getelementptr inbounds i16, i16* %25, i64 %28
  %33 = load i16, i16* %32, align 2
  %34 = zext i16 %33 to i32
  %35 = and i32 %34, 64512
  %36 = icmp ne i32 %35, 55296
  %37 = icmp eq i64 %31, %19
  %38 = or i1 %37, %36
  br i1 %38, label %50, label %39

39:                                               ; preds = %30
  %40 = getelementptr inbounds i16, i16* %25, i64 %31
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i32
  %43 = and i32 %42, 64512
  %44 = icmp eq i32 %43, 56320
  br i1 %44, label %45, label %50

45:                                               ; preds = %39
  %46 = add i64 %28, 2
  %47 = shl nuw nsw i32 %34, 10
  %48 = add nsw i32 %47, -56613888
  %49 = add nsw i32 %48, %42
  br label %50

50:                                               ; preds = %45, %39, %30
  %51 = phi i64 [ %31, %30 ], [ %46, %45 ], [ %31, %39 ]
  %52 = phi i32 [ %34, %30 ], [ %49, %45 ], [ %34, %39 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #12
  store i32 0, i32* %8, align 4
  %53 = call i32 @uscript_getScript_69(i32 %52, i32* nonnull %8) #12
  %54 = icmp eq i32 %53, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #12
  br i1 %54, label %27, label %60

55:                                               ; preds = %27, %3
  %56 = bitcast %"class.blink::WebTextCheckingCompletion"* %2 to void (%"class.blink::WebTextCheckingCompletion"*)***
  %57 = load void (%"class.blink::WebTextCheckingCompletion"*)**, void (%"class.blink::WebTextCheckingCompletion"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %57, i64 1
  %59 = load void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %58, align 8
  call void %59(%"class.blink::WebTextCheckingCompletion"* %2) #12
  br label %121

60:                                               ; preds = %50
  %61 = call zeroext i1 @_ZN18SpellCheckProvider23SatisfyRequestFromCacheERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPN5blink25WebTextCheckingCompletionE(%class.SpellCheckProvider* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.blink::WebTextCheckingCompletion"* %2)
  br i1 %61, label %121, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 3
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %64, i64 0, i32 1, i32 1
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i16*, i16** %69, align 8
  store i16 0, i16* %70, align 2
  %71 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %71, align 8
  br label %74

72:                                               ; preds = %62
  %73 = bitcast %"class.std::__1::basic_string"* %63 to i16*
  store i16 0, i16* %73, align 2
  store i8 0, i8* %65, align 1
  br label %74

74:                                               ; preds = %68, %72
  %75 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 4, i32 0
  call void @_ZNSt3__16vectorIN5blink21WebTextCheckingResultENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.32"* %75, %"struct.blink::WebTextCheckingResult"* null, %"struct.blink::WebTextCheckingResult"* null) #12
  %76 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %76) #12
  %77 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 3
  %78 = load i32, i32* %77, align 8
  store i32 %78, i32* %7, align 4
  %79 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 5, i32 0
  %80 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #12
  %81 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %81, align 8
  %82 = getelementptr inbounds %"class.std::__1::tuple.558", %"class.std::__1::tuple.558"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %82) #12
  %83 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %79, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.558"* nonnull dereferenceable(1) %6) #12
  %84 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %83, 0
  %85 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %84, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %82) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #12
  %86 = bitcast %"struct.std::__1::__hash_node_base"* %85 to %"class.blink::WebTextCheckingCompletion"**
  %87 = load %"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebTextCheckingCompletion"** %86, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %85 to i64*
  store i64 %11, i64* %88, align 8
  %89 = icmp eq %"class.blink::WebTextCheckingCompletion"* %87, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %74
  %91 = bitcast %"class.blink::WebTextCheckingCompletion"* %87 to void (%"class.blink::WebTextCheckingCompletion"*)***
  %92 = load void (%"class.blink::WebTextCheckingCompletion"*)**, void (%"class.blink::WebTextCheckingCompletion"*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %92, i64 3
  %94 = load void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %93, align 8
  call void %94(%"class.blink::WebTextCheckingCompletion"* nonnull %87) #12
  br label %95

95:                                               ; preds = %74, %90
  %96 = load i32, i32* %77, align 8
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %77, align 8
  %98 = load i32, i32* %7, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %76) #12
  %99 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 5
  store i32 %98, i32* %99, align 8
  %100 = call zeroext i1 @_ZN10spellcheck22UseBrowserSpellCheckerEv() #12
  br i1 %100, label %128, label %101

101:                                              ; preds = %95
  %102 = call dereferenceable(8) %"class.spellcheck::mojom::SpellCheckHost"* @_ZN18SpellCheckProvider17GetSpellCheckHostEv(%class.SpellCheckProvider* %0)
  %103 = bitcast %"class.base::WeakPtr.297"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #12
  %104 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #12, !noalias !10
  %105 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 10, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %105) #12, !noalias !10
  %106 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 10, i32 0, i32 1
  %107 = load i64, i64* %106, align 8, !noalias !10
  %108 = getelementptr inbounds %"class.base::WeakPtr.297", %"class.base::WeakPtr.297"* %10, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %108, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %107) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #12, !noalias !10
  %109 = call i8* @_Znwm(i64 96) #13, !noalias !13
  %110 = bitcast i8* %109 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %110, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1, %"class.std::__1::vector.298"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM18SpellCheckProviderFviRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEbRKNS4_6vectorI16SpellCheckResultNS8_ISE_EEEEEJNS_7WeakPtrIS3_EEiSA_EEEFvbSI_EE7RunOnceEPNS0_13BindStateBaseEbSI_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM18SpellCheckProviderFviRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEbRKNS3_6vectorI16SpellCheckResultNS7_ISD_EEEEEJNS_7WeakPtrIS2_EEiS9_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM18SpellCheckProviderFviRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEbRKNS4_6vectorI16SpellCheckResultNS8_ISE_EEEEEJNS_7WeakPtrIS3_EEiSA_EEEEEbPKNS0_13BindStateBaseENSO_21CancellationQueryModeE) #12, !noalias !13
  %111 = getelementptr inbounds i8, i8* %109, i64 32
  %112 = bitcast i8* %111 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.SpellCheckProvider*, i32, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.298"*)* @_ZN18SpellCheckProvider24OnRespondSpellingServiceEiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEbRKNS0_6vectorI16SpellCheckResultNS4_ISA_EEEE to i64), i64 0>, <2 x i64>* %112, align 8, !noalias !13
  %113 = getelementptr inbounds i8, i8* %109, i64 48
  %114 = bitcast i8* %113 to %"struct.std::__1::__tuple_impl.566"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN4base7WeakPtrI18SpellCheckProviderEEiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEC2IJLm0ELm1ELm2EEJS6_iSC_EJEJEJS6_RiRKSC_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSJ_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.566"* %114, %"class.base::WeakPtr.297"* nonnull dereferenceable(16) %10, i32* dereferenceable(4) %99, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12, !noalias !13
  %115 = bitcast %"class.base::OnceCallback.296"* %9 to i8**
  store i8* %109, i8** %115, align 8, !alias.scope !13
  %116 = bitcast %"class.spellcheck::mojom::SpellCheckHost"* %102 to void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.296"*)***
  %117 = load void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.296"*)**, void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.296"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.296"*)*, void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.296"*)** %117, i64 4
  %119 = load void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.296"*)*, void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.296"*)** %118, align 8
  call void %119(%"class.spellcheck::mojom::SpellCheckHost"* %102, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.base::OnceCallback.296"* nonnull %9) #12
  %120 = getelementptr inbounds %"class.base::OnceCallback.296", %"class.base::OnceCallback.296"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %120) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %108) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #12
  br label %128

121:                                              ; preds = %60, %55
  %122 = icmp eq %"class.blink::WebTextCheckingCompletion"* %2, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %121
  %124 = bitcast %"class.blink::WebTextCheckingCompletion"* %2 to void (%"class.blink::WebTextCheckingCompletion"*)***
  %125 = load void (%"class.blink::WebTextCheckingCompletion"*)**, void (%"class.blink::WebTextCheckingCompletion"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %125, i64 3
  %127 = load void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %126, align 8
  call void %127(%"class.blink::WebTextCheckingCompletion"* nonnull %2) #12
  br label %128

128:                                              ; preds = %101, %95, %121, %123
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK18SpellCheckProvider17HasWordCharactersERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEm(%class.SpellCheckProvider* nocapture readnone, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i64) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %14 = zext i8 %7 to i64
  %15 = select i1 %8, i16* %10, i16* %13
  %16 = select i1 %8, i64 %12, i64 %14
  %17 = bitcast i32* %4 to i8*
  br label %18

18:                                               ; preds = %41, %3
  %19 = phi i64 [ %2, %3 ], [ %42, %41 ]
  %20 = icmp ult i64 %19, %16
  br i1 %20, label %21, label %46

21:                                               ; preds = %18
  %22 = add nuw i64 %19, 1
  %23 = getelementptr inbounds i16, i16* %15, i64 %19
  %24 = load i16, i16* %23, align 2
  %25 = zext i16 %24 to i32
  %26 = and i32 %25, 64512
  %27 = icmp ne i32 %26, 55296
  %28 = icmp eq i64 %22, %16
  %29 = or i1 %28, %27
  br i1 %29, label %41, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds i16, i16* %15, i64 %22
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %32 to i32
  %34 = and i32 %33, 64512
  %35 = icmp eq i32 %34, 56320
  br i1 %35, label %36, label %41

36:                                               ; preds = %30
  %37 = add i64 %19, 2
  %38 = shl nuw nsw i32 %25, 10
  %39 = add nsw i32 %38, -56613888
  %40 = add nsw i32 %39, %33
  br label %41

41:                                               ; preds = %21, %30, %36
  %42 = phi i64 [ %22, %21 ], [ %37, %36 ], [ %22, %30 ]
  %43 = phi i32 [ %25, %21 ], [ %40, %36 ], [ %25, %30 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #12
  store i32 0, i32* %4, align 4
  %44 = call i32 @uscript_getScript_69(i32 %43, i32* nonnull %4) #12
  %45 = icmp eq i32 %44, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #12
  br i1 %45, label %18, label %46

46:                                               ; preds = %18, %41
  %47 = phi i1 [ true, %41 ], [ false, %18 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18SpellCheckProvider23SatisfyRequestFromCacheERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPN5blink25WebTextCheckingCompletionE(%class.SpellCheckProvider*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.blink::WebTextCheckingCompletion"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.blink::WebVector", align 8
  %7 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  br label %17

15:                                               ; preds = %3
  %16 = zext i8 %10 to i64
  br label %17

17:                                               ; preds = %12, %15
  %18 = phi i64 [ %14, %12 ], [ %16, %15 ]
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %497, label %20

20:                                               ; preds = %17
  %21 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #12
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  %28 = load i8, i8* %26, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %31, i64 24, i1 false) #12
  br label %205

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = icmp ult i64 %36, 11
  br i1 %37, label %38, label %43

38:                                               ; preds = %32
  %39 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %40 = trunc i64 %36 to i8
  %41 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %41, i64 0, i32 1, i32 1
  store i8 %40, i8* %42, align 1
  br label %58

43:                                               ; preds = %32
  %44 = icmp ugt i64 %36, 9223372036854775791
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %46) #14
  unreachable

47:                                               ; preds = %43
  %48 = add nuw nsw i64 %36, 8
  %49 = and i64 %48, -8
  %50 = icmp slt i64 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

52:                                               ; preds = %47
  %53 = shl i64 %49, 1
  %54 = tail call i8* @_Znwm(i64 %53) #13
  %55 = bitcast i8* %54 to i16*
  %56 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  store i8* %54, i8** %56, align 8
  %57 = or i64 %49, -9223372036854775808
  store i64 %57, i64* %24, align 8
  store i64 %36, i64* %23, align 8
  br label %58

58:                                               ; preds = %52, %38
  %59 = phi i16* [ %39, %38 ], [ %55, %52 ]
  %60 = add nuw nsw i64 %36, 1
  %61 = add i64 %36, 1
  %62 = icmp ult i64 %61, 16
  br i1 %62, label %152, label %63

63:                                               ; preds = %58
  %64 = add i64 %36, 1
  %65 = getelementptr i16, i16* %59, i64 %64
  %66 = getelementptr i16, i16* %34, i64 %64
  %67 = icmp ult i16* %59, %66
  %68 = icmp ult i16* %34, %65
  %69 = and i1 %67, %68
  br i1 %69, label %152, label %70

70:                                               ; preds = %63
  %71 = and i64 %61, -16
  %72 = sub i64 %60, %71
  %73 = getelementptr i16, i16* %34, i64 %71
  %74 = getelementptr i16, i16* %59, i64 %71
  %75 = add i64 %71, -16
  %76 = lshr exact i64 %75, 4
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp ult i64 %75, 48
  br i1 %79, label %131, label %80

80:                                               ; preds = %70
  %81 = sub nsw i64 %77, %78
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi i64 [ 0, %80 ], [ %128, %82 ]
  %84 = phi i64 [ %81, %80 ], [ %129, %82 ]
  %85 = getelementptr i16, i16* %34, i64 %83
  %86 = getelementptr i16, i16* %59, i64 %83
  %87 = bitcast i16* %85 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !18
  %89 = getelementptr i16, i16* %85, i64 8
  %90 = bitcast i16* %89 to <8 x i16>*
  %91 = load <8 x i16>, <8 x i16>* %90, align 2, !alias.scope !18
  %92 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %92, align 2, !alias.scope !21, !noalias !18
  %93 = getelementptr i16, i16* %86, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %91, <8 x i16>* %94, align 2, !alias.scope !21, !noalias !18
  %95 = or i64 %83, 16
  %96 = getelementptr i16, i16* %34, i64 %95
  %97 = getelementptr i16, i16* %59, i64 %95
  %98 = bitcast i16* %96 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !18
  %100 = getelementptr i16, i16* %96, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !18
  %103 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %103, align 2, !alias.scope !21, !noalias !18
  %104 = getelementptr i16, i16* %97, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %105, align 2, !alias.scope !21, !noalias !18
  %106 = or i64 %83, 32
  %107 = getelementptr i16, i16* %34, i64 %106
  %108 = getelementptr i16, i16* %59, i64 %106
  %109 = bitcast i16* %107 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !18
  %111 = getelementptr i16, i16* %107, i64 8
  %112 = bitcast i16* %111 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !18
  %114 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %114, align 2, !alias.scope !21, !noalias !18
  %115 = getelementptr i16, i16* %108, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %116, align 2, !alias.scope !21, !noalias !18
  %117 = or i64 %83, 48
  %118 = getelementptr i16, i16* %34, i64 %117
  %119 = getelementptr i16, i16* %59, i64 %117
  %120 = bitcast i16* %118 to <8 x i16>*
  %121 = load <8 x i16>, <8 x i16>* %120, align 2, !alias.scope !18
  %122 = getelementptr i16, i16* %118, i64 8
  %123 = bitcast i16* %122 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !18
  %125 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %121, <8 x i16>* %125, align 2, !alias.scope !21, !noalias !18
  %126 = getelementptr i16, i16* %119, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %127, align 2, !alias.scope !21, !noalias !18
  %128 = add i64 %83, 64
  %129 = add i64 %84, -4
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %82, !llvm.loop !23

131:                                              ; preds = %82, %70
  %132 = phi i64 [ 0, %70 ], [ %128, %82 ]
  %133 = icmp eq i64 %78, 0
  br i1 %133, label %150, label %134

134:                                              ; preds = %131, %134
  %135 = phi i64 [ %147, %134 ], [ %132, %131 ]
  %136 = phi i64 [ %148, %134 ], [ %78, %131 ]
  %137 = getelementptr i16, i16* %34, i64 %135
  %138 = getelementptr i16, i16* %59, i64 %135
  %139 = bitcast i16* %137 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !18
  %141 = getelementptr i16, i16* %137, i64 8
  %142 = bitcast i16* %141 to <8 x i16>*
  %143 = load <8 x i16>, <8 x i16>* %142, align 2, !alias.scope !18
  %144 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %144, align 2, !alias.scope !21, !noalias !18
  %145 = getelementptr i16, i16* %138, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %143, <8 x i16>* %146, align 2, !alias.scope !21, !noalias !18
  %147 = add i64 %135, 16
  %148 = add i64 %136, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %134, !llvm.loop !25

150:                                              ; preds = %134, %131
  %151 = icmp eq i64 %61, %71
  br i1 %151, label %205, label %152

152:                                              ; preds = %150, %63, %58
  %153 = phi i64 [ %60, %63 ], [ %60, %58 ], [ %72, %150 ]
  %154 = phi i16* [ %34, %63 ], [ %34, %58 ], [ %73, %150 ]
  %155 = phi i16* [ %59, %63 ], [ %59, %58 ], [ %74, %150 ]
  %156 = add i64 %153, -1
  %157 = and i64 %153, 7
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %170, label %159

159:                                              ; preds = %152, %159
  %160 = phi i64 [ %165, %159 ], [ %153, %152 ]
  %161 = phi i16* [ %167, %159 ], [ %154, %152 ]
  %162 = phi i16* [ %166, %159 ], [ %155, %152 ]
  %163 = phi i64 [ %168, %159 ], [ %157, %152 ]
  %164 = load i16, i16* %161, align 2
  store i16 %164, i16* %162, align 2
  %165 = add i64 %160, -1
  %166 = getelementptr inbounds i16, i16* %162, i64 1
  %167 = getelementptr inbounds i16, i16* %161, i64 1
  %168 = add i64 %163, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %159, !llvm.loop !27

170:                                              ; preds = %159, %152
  %171 = phi i64 [ %153, %152 ], [ %165, %159 ]
  %172 = phi i16* [ %154, %152 ], [ %167, %159 ]
  %173 = phi i16* [ %155, %152 ], [ %166, %159 ]
  %174 = icmp ult i64 %156, 7
  br i1 %174, label %205, label %175

175:                                              ; preds = %170, %175
  %176 = phi i64 [ %201, %175 ], [ %171, %170 ]
  %177 = phi i16* [ %203, %175 ], [ %172, %170 ]
  %178 = phi i16* [ %202, %175 ], [ %173, %170 ]
  %179 = load i16, i16* %177, align 2
  store i16 %179, i16* %178, align 2
  %180 = getelementptr inbounds i16, i16* %178, i64 1
  %181 = getelementptr inbounds i16, i16* %177, i64 1
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %178, i64 2
  %184 = getelementptr inbounds i16, i16* %177, i64 2
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %178, i64 3
  %187 = getelementptr inbounds i16, i16* %177, i64 3
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %178, i64 4
  %190 = getelementptr inbounds i16, i16* %177, i64 4
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = getelementptr inbounds i16, i16* %178, i64 5
  %193 = getelementptr inbounds i16, i16* %177, i64 5
  %194 = load i16, i16* %193, align 2
  store i16 %194, i16* %192, align 2
  %195 = getelementptr inbounds i16, i16* %178, i64 6
  %196 = getelementptr inbounds i16, i16* %177, i64 6
  %197 = load i16, i16* %196, align 2
  store i16 %197, i16* %195, align 2
  %198 = getelementptr inbounds i16, i16* %178, i64 7
  %199 = getelementptr inbounds i16, i16* %177, i64 7
  %200 = load i16, i16* %199, align 2
  store i16 %200, i16* %198, align 2
  %201 = add i64 %176, -8
  %202 = getelementptr inbounds i16, i16* %178, i64 8
  %203 = getelementptr inbounds i16, i16* %177, i64 8
  %204 = icmp eq i64 %201, 0
  br i1 %204, label %205, label %175, !llvm.loop !28

205:                                              ; preds = %170, %175, %150, %30
  %206 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  %210 = load i64, i64* %23, align 8
  %211 = zext i8 %208 to i64
  %212 = select i1 %209, i64 %210, i64 %211
  %213 = icmp ult i64 %212, %18
  br i1 %213, label %297, label %214

214:                                              ; preds = %205
  %215 = load i8, i8* %9, align 1
  %216 = icmp slt i8 %215, 0
  %217 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %218 = load i64, i64* %217, align 8
  %219 = zext i8 %215 to i64
  %220 = select i1 %216, i64 %218, i64 %219
  %221 = icmp eq i64 %220, -1
  br i1 %221, label %222, label %224

222:                                              ; preds = %214
  %223 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* nonnull %223) #14
  unreachable

224:                                              ; preds = %214
  %225 = icmp ugt i64 %18, %220
  %226 = select i1 %225, i64 %220, i64 %18
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %248, label %228

228:                                              ; preds = %224
  %229 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %230 = load i16*, i16** %22, align 8
  %231 = select i1 %209, i16* %230, i16* %229
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load i16*, i16** %232, align 8
  %234 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %235 = select i1 %216, i16* %233, i16* %234
  br label %236

236:                                              ; preds = %228, %243
  %237 = phi i64 [ %244, %243 ], [ %226, %228 ]
  %238 = phi i16* [ %246, %243 ], [ %235, %228 ]
  %239 = phi i16* [ %245, %243 ], [ %231, %228 ]
  %240 = load i16, i16* %239, align 2
  %241 = load i16, i16* %238, align 2
  %242 = icmp eq i16 %241, %240
  br i1 %242, label %243, label %489

243:                                              ; preds = %236
  %244 = add i64 %237, -1
  %245 = getelementptr inbounds i16, i16* %239, i64 1
  %246 = getelementptr inbounds i16, i16* %238, i64 1
  %247 = icmp eq i64 %244, 0
  br i1 %247, label %248, label %236

248:                                              ; preds = %243, %224
  %249 = icmp eq i64 %18, %220
  br i1 %249, label %250, label %489

250:                                              ; preds = %248
  %251 = icmp eq i64 %212, %18
  br i1 %251, label %292, label %252

252:                                              ; preds = %250
  %253 = load i8, i8* %26, align 1
  %254 = icmp slt i8 %253, 0
  %255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load i16*, i16** %255, align 8
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %260 = zext i8 %253 to i64
  %261 = select i1 %254, i16* %256, i16* %259
  %262 = select i1 %254, i64 %258, i64 %260
  %263 = bitcast i32* %4 to i8*
  br label %264

264:                                              ; preds = %287, %252
  %265 = phi i64 [ %18, %252 ], [ %288, %287 ]
  %266 = icmp ult i64 %265, %262
  br i1 %266, label %267, label %292

267:                                              ; preds = %264
  %268 = add nuw i64 %265, 1
  %269 = getelementptr inbounds i16, i16* %261, i64 %265
  %270 = load i16, i16* %269, align 2
  %271 = zext i16 %270 to i32
  %272 = and i32 %271, 64512
  %273 = icmp ne i32 %272, 55296
  %274 = icmp eq i64 %268, %262
  %275 = or i1 %274, %273
  br i1 %275, label %287, label %276

276:                                              ; preds = %267
  %277 = getelementptr inbounds i16, i16* %261, i64 %268
  %278 = load i16, i16* %277, align 2
  %279 = zext i16 %278 to i32
  %280 = and i32 %279, 64512
  %281 = icmp eq i32 %280, 56320
  br i1 %281, label %282, label %287

282:                                              ; preds = %276
  %283 = add i64 %265, 2
  %284 = shl nuw nsw i32 %271, 10
  %285 = add nsw i32 %284, -56613888
  %286 = add nsw i32 %285, %279
  br label %287

287:                                              ; preds = %282, %276, %267
  %288 = phi i64 [ %268, %267 ], [ %283, %282 ], [ %268, %276 ]
  %289 = phi i32 [ %271, %267 ], [ %286, %282 ], [ %271, %276 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %263) #12
  store i32 0, i32* %4, align 4
  %290 = call i32 @uscript_getScript_69(i32 %289, i32* nonnull %4) #12
  %291 = icmp eq i32 %290, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %263) #12
  br i1 %291, label %264, label %489

292:                                              ; preds = %264, %250
  %293 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 4
  %294 = bitcast %"class.blink::WebTextCheckingCompletion"* %2 to void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)***
  %295 = load void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)**, void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)*** %294, align 8
  %296 = load void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)*, void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)** %295, align 8
  call void %296(%"class.blink::WebTextCheckingCompletion"* %2, %"class.blink::WebVector"* dereferenceable(24) %293) #12
  br label %489

297:                                              ; preds = %205
  %298 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %299 = icmp slt i8 %208, 0
  %300 = load i16*, i16** %22, align 8
  %301 = select i1 %299, i16* %300, i16* %298
  %302 = select i1 %299, i64 %210, i64 %211
  %303 = load i8, i8* %9, align 1
  %304 = icmp slt i8 %303, 0
  br i1 %304, label %305, label %308

305:                                              ; preds = %297
  %306 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %307 = load i64, i64* %306, align 8
  br label %310

308:                                              ; preds = %297
  %309 = zext i8 %303 to i64
  br label %310

310:                                              ; preds = %308, %305
  %311 = phi i64 [ %307, %305 ], [ %309, %308 ]
  %312 = icmp eq i64 %302, -1
  br i1 %312, label %313, label %315

313:                                              ; preds = %310
  %314 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %314) #14
  unreachable

315:                                              ; preds = %310
  %316 = icmp ult i64 %311, %212
  %317 = select i1 %316, i64 %311, i64 %212
  br i1 %304, label %318, label %321

318:                                              ; preds = %315
  %319 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load i16*, i16** %319, align 8
  br label %323

321:                                              ; preds = %315
  %322 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  br label %323

323:                                              ; preds = %321, %318
  %324 = phi i16* [ %320, %318 ], [ %322, %321 ]
  %325 = icmp ugt i64 %317, %302
  %326 = select i1 %325, i64 %302, i64 %317
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %340, label %328

328:                                              ; preds = %323, %335
  %329 = phi i64 [ %336, %335 ], [ %326, %323 ]
  %330 = phi i16* [ %338, %335 ], [ %301, %323 ]
  %331 = phi i16* [ %337, %335 ], [ %324, %323 ]
  %332 = load i16, i16* %331, align 2
  %333 = load i16, i16* %330, align 2
  %334 = icmp eq i16 %333, %332
  br i1 %334, label %335, label %489

335:                                              ; preds = %328
  %336 = add i64 %329, -1
  %337 = getelementptr inbounds i16, i16* %331, i64 1
  %338 = getelementptr inbounds i16, i16* %330, i64 1
  %339 = icmp eq i64 %336, 0
  br i1 %339, label %340, label %328

340:                                              ; preds = %335, %323
  %341 = icmp eq i64 %317, %302
  br i1 %341, label %342, label %489

342:                                              ; preds = %340
  %343 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 4
  %344 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %345 = bitcast %"struct.blink::WebTextCheckingResult"** %344 to i64*
  %346 = load i64, i64* %345, align 8
  %347 = bitcast %"class.blink::WebVector"* %343 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = icmp eq i64 %346, %348
  %350 = inttoptr i64 %348 to %"struct.blink::WebTextCheckingResult"*
  br i1 %349, label %354, label %351

351:                                              ; preds = %342
  %352 = sub i64 %346, %348
  %353 = sdiv exact i64 %352, 40
  br label %470

354:                                              ; preds = %485, %342
  %355 = phi i64 [ 0, %342 ], [ %486, %485 ]
  %356 = bitcast %"class.blink::WebVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %356) #12
  %357 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 0
  %358 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 1
  %359 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %360 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %350, i64 %355
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %356, i8 0, i64 24, i1 false) #12
  %361 = mul nuw i64 %355, 40
  %362 = sdiv exact i64 %361, 40
  %363 = icmp eq i64 %361, 0
  br i1 %363, label %431, label %364

364:                                              ; preds = %354
  %365 = icmp ugt i64 %362, 461168601842738790
  br i1 %365, label %366, label %368

366:                                              ; preds = %364
  %367 = bitcast %"class.blink::WebVector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %367) #14
  unreachable

368:                                              ; preds = %364
  %369 = call i8* @_Znwm(i64 %361) #13
  %370 = bitcast i8* %369 to %"struct.blink::WebTextCheckingResult"*
  %371 = bitcast %"struct.blink::WebTextCheckingResult"** %358 to i8**
  store i8* %369, i8** %371, align 8
  %372 = bitcast %"class.blink::WebVector"* %6 to i8**
  store i8* %369, i8** %372, align 8
  %373 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %370, i64 %362
  store %"struct.blink::WebTextCheckingResult"* %373, %"struct.blink::WebTextCheckingResult"** %359, align 8
  %374 = bitcast %"struct.blink::WebTextCheckingResult"** %358 to i64*
  %375 = ptrtoint i8* %369 to i64
  %376 = icmp eq i64 %355, 0
  br i1 %376, label %429, label %377

377:                                              ; preds = %368
  %378 = bitcast i8* %369 to %"struct.blink::WebTextCheckingResult"*
  br label %379

379:                                              ; preds = %423, %377
  %380 = phi %"struct.blink::WebTextCheckingResult"* [ %425, %423 ], [ %378, %377 ]
  %381 = phi %"struct.blink::WebTextCheckingResult"* [ %424, %423 ], [ %350, %377 ]
  %382 = bitcast %"struct.blink::WebTextCheckingResult"* %380 to i8*
  %383 = bitcast %"struct.blink::WebTextCheckingResult"* %381 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %382, i8* align 8 %383, i64 12, i1 false) #12
  %384 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %380, i64 0, i32 3
  %385 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %381, i64 0, i32 3
  %386 = bitcast %"class.blink::WebVector.34"* %384 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %386, i8 0, i64 24, i1 false) #12
  %387 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %381, i64 0, i32 3, i32 0, i32 0, i32 1
  %388 = bitcast %"class.blink::WebString"** %387 to i64*
  %389 = load i64, i64* %388, align 8
  %390 = bitcast %"class.blink::WebVector.34"* %385 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = sub i64 %389, %391
  %393 = ashr exact i64 %392, 3
  %394 = icmp eq i64 %392, 0
  br i1 %394, label %423, label %395

395:                                              ; preds = %379
  %396 = icmp ugt i64 %393, 2305843009213693951
  br i1 %396, label %397, label %399

397:                                              ; preds = %395
  %398 = bitcast %"class.blink::WebVector.34"* %384 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %398) #14
  unreachable

399:                                              ; preds = %395
  %400 = call i8* @_Znwm(i64 %392) #13
  %401 = bitcast i8* %400 to %"class.blink::WebString"*
  %402 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %380, i64 0, i32 3, i32 0, i32 0, i32 1
  %403 = bitcast %"class.blink::WebString"** %402 to i8**
  store i8* %400, i8** %403, align 8
  %404 = bitcast %"class.blink::WebVector.34"* %384 to i8**
  store i8* %400, i8** %404, align 8
  %405 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %401, i64 %393
  %406 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %380, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::WebString"* %405, %"class.blink::WebString"** %406, align 8
  %407 = getelementptr inbounds %"class.blink::WebVector.34", %"class.blink::WebVector.34"* %385, i64 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::WebString"*, %"class.blink::WebString"** %407, align 8
  %409 = load %"class.blink::WebString"*, %"class.blink::WebString"** %387, align 8
  %410 = bitcast %"class.blink::WebString"** %402 to i64*
  %411 = ptrtoint i8* %400 to i64
  %412 = icmp eq %"class.blink::WebString"* %408, %409
  br i1 %412, label %421, label %413

413:                                              ; preds = %399, %413
  %414 = phi %"class.blink::WebString"* [ %417, %413 ], [ %401, %399 ]
  %415 = phi %"class.blink::WebString"* [ %416, %413 ], [ %408, %399 ]
  call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %414, %"class.blink::WebString"* dereferenceable(8) %415) #12
  %416 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %415, i64 1
  %417 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %414, i64 1
  %418 = icmp eq %"class.blink::WebString"* %416, %409
  br i1 %418, label %419, label %413

419:                                              ; preds = %413
  %420 = ptrtoint %"class.blink::WebString"* %417 to i64
  br label %421

421:                                              ; preds = %419, %399
  %422 = phi i64 [ %411, %399 ], [ %420, %419 ]
  store i64 %422, i64* %410, align 8
  br label %423

423:                                              ; preds = %421, %379
  %424 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %381, i64 1
  %425 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %380, i64 1
  %426 = icmp eq %"struct.blink::WebTextCheckingResult"* %424, %360
  br i1 %426, label %427, label %379

427:                                              ; preds = %423
  %428 = ptrtoint %"struct.blink::WebTextCheckingResult"* %425 to i64
  br label %429

429:                                              ; preds = %368, %427
  %430 = phi i64 [ %375, %368 ], [ %428, %427 ]
  store i64 %430, i64* %374, align 8
  br label %431

431:                                              ; preds = %354, %429
  %432 = bitcast %"class.blink::WebTextCheckingCompletion"* %2 to void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)***
  %433 = load void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)**, void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)*** %432, align 8
  %434 = load void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)*, void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)** %433, align 8
  call void %434(%"class.blink::WebTextCheckingCompletion"* %2, %"class.blink::WebVector"* nonnull dereferenceable(24) %6) #12
  %435 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %357, align 8
  %436 = icmp eq %"struct.blink::WebTextCheckingResult"* %435, null
  br i1 %436, label %469, label %437

437:                                              ; preds = %431
  %438 = bitcast %"struct.blink::WebTextCheckingResult"* %435 to i8*
  %439 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %358, align 8
  %440 = icmp eq %"struct.blink::WebTextCheckingResult"* %439, %435
  br i1 %440, label %467, label %441

441:                                              ; preds = %437, %462
  %442 = phi %"struct.blink::WebTextCheckingResult"* [ %443, %462 ], [ %439, %437 ]
  %443 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %442, i64 -1
  %444 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %442, i64 -1, i32 3
  %445 = getelementptr inbounds %"class.blink::WebVector.34", %"class.blink::WebVector.34"* %444, i64 0, i32 0, i32 0, i32 0
  %446 = load %"class.blink::WebString"*, %"class.blink::WebString"** %445, align 8
  %447 = icmp eq %"class.blink::WebString"* %446, null
  br i1 %447, label %462, label %448

448:                                              ; preds = %441
  %449 = bitcast %"class.blink::WebString"* %446 to i8*
  %450 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %442, i64 -1, i32 3, i32 0, i32 0, i32 1
  %451 = load %"class.blink::WebString"*, %"class.blink::WebString"** %450, align 8
  %452 = icmp eq %"class.blink::WebString"* %451, %446
  br i1 %452, label %460, label %453

453:                                              ; preds = %448, %453
  %454 = phi %"class.blink::WebString"* [ %455, %453 ], [ %451, %448 ]
  %455 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %454, i64 -1
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %455) #12
  %456 = icmp eq %"class.blink::WebString"* %455, %446
  br i1 %456, label %457, label %453

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::WebVector.34"* %444 to i8**
  %459 = load i8*, i8** %458, align 8
  br label %460

460:                                              ; preds = %457, %448
  %461 = phi i8* [ %459, %457 ], [ %449, %448 ]
  store %"class.blink::WebString"* %446, %"class.blink::WebString"** %450, align 8
  call void @_ZdlPv(i8* %461) #13
  br label %462

462:                                              ; preds = %460, %441
  %463 = icmp eq %"struct.blink::WebTextCheckingResult"* %443, %435
  br i1 %463, label %464, label %441

464:                                              ; preds = %462
  %465 = bitcast %"class.blink::WebVector"* %6 to i8**
  %466 = load i8*, i8** %465, align 8
  br label %467

467:                                              ; preds = %464, %437
  %468 = phi i8* [ %466, %464 ], [ %438, %437 ]
  store %"struct.blink::WebTextCheckingResult"* %435, %"struct.blink::WebTextCheckingResult"** %358, align 8
  call void @_ZdlPv(i8* %468) #13
  br label %469

469:                                              ; preds = %431, %467
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %356) #12
  br label %489

470:                                              ; preds = %351, %485
  %471 = phi i64 [ 0, %351 ], [ %487, %485 ]
  %472 = phi i64 [ 0, %351 ], [ %486, %485 ]
  %473 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %350, i64 %471, i32 1
  %474 = load i32, i32* %473, align 4
  %475 = sext i32 %474 to i64
  %476 = icmp ult i64 %212, %475
  br i1 %476, label %485, label %477

477:                                              ; preds = %470
  %478 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %350, i64 %471, i32 2
  %479 = load i32, i32* %478, align 8
  %480 = sext i32 %479 to i64
  %481 = add nsw i64 %480, %475
  %482 = icmp ule i64 %481, %212
  %483 = zext i1 %482 to i64
  %484 = add i64 %472, %483
  br label %485

485:                                              ; preds = %477, %470
  %486 = phi i64 [ %472, %470 ], [ %484, %477 ]
  %487 = add nuw i64 %471, 1
  %488 = icmp ult i64 %487, %353
  br i1 %488, label %470, label %354

489:                                              ; preds = %236, %287, %328, %248, %340, %469, %292
  %490 = phi i1 [ true, %469 ], [ true, %292 ], [ false, %340 ], [ false, %248 ], [ false, %328 ], [ false, %287 ], [ false, %236 ]
  %491 = load i8, i8* %207, align 1
  %492 = icmp slt i8 %491, 0
  br i1 %492, label %493, label %496

493:                                              ; preds = %489
  %494 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %495 = load i8*, i8** %494, align 8
  call void @_ZdlPv(i8* %495) #13
  br label %496

496:                                              ; preds = %489, %493
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #12
  br label %497

497:                                              ; preds = %17, %496
  %498 = phi i1 [ %490, %496 ], [ false, %17 ]
  ret i1 %498
}

declare zeroext i1 @_ZN10spellcheck22UseBrowserSpellCheckerEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SpellCheckProvider24OnRespondSpellingServiceEiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEbRKNS0_6vectorI16SpellCheckResultNS4_ISA_EEEE(%class.SpellCheckProvider*, i32, %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.std::__1::vector.298"*) #0 align 2 {
  %6 = alloca %"class.blink::WebVector", align 16
  %7 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2
  %8 = tail call %"class.blink::WebTextCheckingCompletion"* @_ZNK4base5IDMapINSt3__110unique_ptrIN5blink25WebTextCheckingCompletionENS1_14default_deleteIS4_EEEEiE6LookupEi(%"class.base::IDMap"* %7, i32 %1)
  %9 = icmp eq %"class.blink::WebTextCheckingCompletion"* %8, null
  br i1 %9, label %140, label %10

10:                                               ; preds = %5
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %63, label %15

15:                                               ; preds = %10
  %16 = tail call i64 @llvm.ctpop.i64(i64 %13) #12, !range !29
  %17 = icmp ugt i64 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = add i64 %13, -1
  %20 = and i64 %19, %11
  br label %25

21:                                               ; preds = %15
  %22 = icmp ugt i64 %13, %11
  br i1 %22, label %25, label %23

23:                                               ; preds = %21
  %24 = urem i64 %11, %13
  br label %25

25:                                               ; preds = %23, %21, %18
  %26 = phi i64 [ %20, %18 ], [ %24, %23 ], [ %11, %21 ]
  %27 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 2, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, i64 %26
  %30 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base"* %30, null
  br i1 %31, label %63, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %30, i64 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %34, null
  br i1 %35, label %63, label %36

36:                                               ; preds = %32
  %37 = add i64 %13, -1
  br label %38

38:                                               ; preds = %59, %36
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %34, %36 ], [ %61, %59 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 1
  %41 = bitcast %"struct.std::__1::__hash_node_base"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %11
  br i1 %43, label %54, label %44

44:                                               ; preds = %38
  br i1 %17, label %47, label %45

45:                                               ; preds = %44
  %46 = and i64 %42, %37
  br label %51

47:                                               ; preds = %44
  %48 = icmp ult i64 %42, %13
  br i1 %48, label %51, label %49

49:                                               ; preds = %47
  %50 = urem i64 %42, %13
  br label %51

51:                                               ; preds = %49, %47, %45
  %52 = phi i64 [ %46, %45 ], [ %50, %49 ], [ %42, %47 ]
  %53 = icmp eq i64 %52, %26
  br i1 %53, label %59, label %63

54:                                               ; preds = %38
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 2
  %56 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i32*
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %1
  br i1 %58, label %63, label %59

59:                                               ; preds = %54, %51
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base"* %61, null
  br i1 %62, label %63, label %38

63:                                               ; preds = %51, %54, %59, %10, %25, %32
  %64 = phi %"struct.std::__1::__hash_node_base"* [ null, %25 ], [ null, %10 ], [ null, %32 ], [ null, %51 ], [ null, %59 ], [ %39, %54 ]
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %64, i64 3
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to i64*
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %65 to %"class.blink::WebTextCheckingCompletion"**
  %68 = load %"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebTextCheckingCompletion"** %67, align 8
  store i64 0, i64* %66, align 8
  tail call void @_ZN4base5IDMapINSt3__110unique_ptrIN5blink25WebTextCheckingCompletionENS1_14default_deleteIS4_EEEEiE6RemoveEi(%"class.base::IDMap"* %7, i32 %1)
  br i1 %3, label %72, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 6
  %71 = load %class.SpellCheck*, %class.SpellCheck** %70, align 8
  tail call void @_ZN10SpellCheck19RequestTextCheckingERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS0_10unique_ptrIN5blink25WebTextCheckingCompletionENS0_14default_deleteISB_EEEE(%class.SpellCheck* %71, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.blink::WebTextCheckingCompletion"* %68) #12
  br label %140

72:                                               ; preds = %63
  %73 = bitcast %"class.blink::WebVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #12
  %74 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %73, i8 0, i64 24, i1 false) #12
  %76 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 6
  %77 = load %class.SpellCheck*, %class.SpellCheck** %76, align 8
  call void @_ZN10SpellCheck25CreateTextCheckingResultsENS_12ResultFilterEiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS1_6vectorI16SpellCheckResultNS5_ISB_EEEEPN5blink9WebVectorINSG_21WebTextCheckingResultEEE(%class.SpellCheck* %77, i32 2, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::vector.298"* %4, %"class.blink::WebVector"* nonnull %6) #12
  %78 = bitcast %"class.blink::WebTextCheckingCompletion"* %68 to void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)***
  %79 = load void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)**, void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)*** %78, align 8
  %80 = load void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)*, void (%"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebVector"*)** %79, align 8
  call void %80(%"class.blink::WebTextCheckingCompletion"* %68, %"class.blink::WebVector"* nonnull dereferenceable(24) %6) #12
  %81 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 3
  %82 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %81, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %83 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 4
  %84 = bitcast %"class.blink::WebVector"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.blink::WebVector"* %6 to i64*
  %87 = bitcast %"class.blink::WebVector"* %6 to <2 x i64>*
  %88 = load <2 x i64>, <2 x i64>* %87, align 16
  store i64 %85, i64* %86, align 16
  %89 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %90 = bitcast %"class.blink::WebVector"* %83 to <2 x i64>*
  %91 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %92 = bitcast %"struct.blink::WebTextCheckingResult"** %91 to i64*
  %93 = bitcast %"struct.blink::WebTextCheckingResult"** %89 to <2 x i64>*
  %94 = load <2 x i64>, <2 x i64>* %93, align 8
  store <2 x i64> %88, <2 x i64>* %90, align 8
  %95 = bitcast %"struct.blink::WebTextCheckingResult"** %75 to i64*
  %96 = load i64, i64* %95, align 16
  store i64 %96, i64* %92, align 8
  %97 = bitcast %"struct.blink::WebTextCheckingResult"** %74 to <2 x i64>*
  store <2 x i64> %94, <2 x i64>* %97, align 8
  %98 = inttoptr i64 %85 to %"struct.blink::WebTextCheckingResult"*
  %99 = icmp eq i64 %85, 0
  %100 = extractelement <2 x i64> %94, i32 0
  %101 = inttoptr i64 %100 to %"struct.blink::WebTextCheckingResult"*
  br i1 %99, label %133, label %102

102:                                              ; preds = %72
  %103 = inttoptr i64 %85 to i8*
  %104 = icmp eq %"struct.blink::WebTextCheckingResult"* %101, %98
  br i1 %104, label %131, label %105

105:                                              ; preds = %102, %126
  %106 = phi %"struct.blink::WebTextCheckingResult"* [ %107, %126 ], [ %101, %102 ]
  %107 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %106, i64 -1
  %108 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %106, i64 -1, i32 3
  %109 = getelementptr inbounds %"class.blink::WebVector.34", %"class.blink::WebVector.34"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::WebString"*, %"class.blink::WebString"** %109, align 8
  %111 = icmp eq %"class.blink::WebString"* %110, null
  br i1 %111, label %126, label %112

112:                                              ; preds = %105
  %113 = bitcast %"class.blink::WebString"* %110 to i8*
  %114 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %106, i64 -1, i32 3, i32 0, i32 0, i32 1
  %115 = load %"class.blink::WebString"*, %"class.blink::WebString"** %114, align 8
  %116 = icmp eq %"class.blink::WebString"* %115, %110
  br i1 %116, label %124, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.blink::WebString"* [ %119, %117 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %118, i64 -1
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %119) #12
  %120 = icmp eq %"class.blink::WebString"* %119, %110
  br i1 %120, label %121, label %117

121:                                              ; preds = %117
  %122 = bitcast %"class.blink::WebVector.34"* %108 to i8**
  %123 = load i8*, i8** %122, align 8
  br label %124

124:                                              ; preds = %121, %112
  %125 = phi i8* [ %123, %121 ], [ %113, %112 ]
  store %"class.blink::WebString"* %110, %"class.blink::WebString"** %114, align 8
  call void @_ZdlPv(i8* %125) #13
  br label %126

126:                                              ; preds = %124, %105
  %127 = icmp eq %"struct.blink::WebTextCheckingResult"* %107, %98
  br i1 %127, label %128, label %105

128:                                              ; preds = %126
  %129 = bitcast %"class.blink::WebVector"* %6 to i8**
  %130 = load i8*, i8** %129, align 16
  br label %131

131:                                              ; preds = %128, %102
  %132 = phi i8* [ %130, %128 ], [ %103, %102 ]
  store %"struct.blink::WebTextCheckingResult"* %98, %"struct.blink::WebTextCheckingResult"** %74, align 8
  call void @_ZdlPv(i8* %132) #13
  br label %133

133:                                              ; preds = %131, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #12
  %134 = icmp eq %"class.blink::WebTextCheckingCompletion"* %68, null
  br i1 %134, label %140, label %135

135:                                              ; preds = %133
  %136 = bitcast %"class.blink::WebTextCheckingCompletion"* %68 to void (%"class.blink::WebTextCheckingCompletion"*)***
  %137 = load void (%"class.blink::WebTextCheckingCompletion"*)**, void (%"class.blink::WebTextCheckingCompletion"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %137, i64 3
  %139 = load void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %138, align 8
  call void %139(%"class.blink::WebTextCheckingCompletion"* nonnull %68) #12
  br label %140

140:                                              ; preds = %135, %133, %69, %5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN18SpellCheckProvider21FocusedElementChangedERKN5blink10WebElementE(%class.SpellCheckProvider* nocapture, %"class.blink::WebElement"* nocapture dereferenceable(16)) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK18SpellCheckProvider22IsSpellCheckingEnabledEv(%class.SpellCheckProvider* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 6
  %3 = load %class.SpellCheck*, %class.SpellCheck** %2, align 8
  %4 = tail call zeroext i1 @_ZN10SpellCheck19IsSpellcheckEnabledEv(%class.SpellCheck* %3) #12
  ret i1 %4
}

declare zeroext i1 @_ZN10SpellCheck19IsSpellcheckEnabledEv(%class.SpellCheck*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn32_NK18SpellCheckProvider22IsSpellCheckingEnabledEv(%class.SpellCheckProvider* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 -1, i32 8, i32 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.271"* %2, i64 23
  %4 = bitcast %"class.std::__1::unique_ptr.271"* %3 to %class.SpellCheck**
  %5 = load %class.SpellCheck*, %class.SpellCheck** %4, align 8
  %6 = tail call zeroext i1 @_ZN10SpellCheck19IsSpellcheckEnabledEv(%class.SpellCheck* %5) #12
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SpellCheckProvider13CheckSpellingERKN5blink9WebStringERmS4_PNS0_9WebVectorIS1_EE(%class.SpellCheckProvider*, %"class.blink::WebString"* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), %"class.blink::WebVector.34"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::WebString", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::vector.299", align 8
  %9 = alloca %"class.std::__1::vector.301", align 8
  %10 = alloca %"class.blink::WebVector.34", align 8
  %11 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 24, i1 false)
  %15 = tail call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* %1) #12, !noalias !30
  %16 = tail call i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"* %1) #12, !noalias !30
  %17 = tail call i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"* %1) #12, !noalias !30
  call void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string"* nonnull sret %7, i64 %15, i8* %16, i16* %17) #12
  %18 = icmp eq %"class.blink::WebVector.34"* %4, null
  br i1 %18, label %190, label %19

19:                                               ; preds = %5
  %20 = bitcast %"class.std::__1::vector.299"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.std::__1::vector.299", %"class.std::__1::vector.299"* %8, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector.299", %"class.std::__1::vector.299"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #12
  %23 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 6
  %24 = load %class.SpellCheck*, %class.SpellCheck** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i16*, i16** %12, align 8
  %30 = load i64, i64* %13, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %32 = zext i8 %27 to i64
  %33 = select i1 %28, i16* %29, i16* %31
  %34 = select i1 %28, i64 %30, i64 %32
  %35 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = call zeroext i1 @_ZN10SpellCheck14SpellCheckWordEPKDsmmiPmS2_PNSt3__16vectorINS4_INS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEENS8_ISC_EEEE(%class.SpellCheck* %24, i16* %33, i64 0, i64 %34, i32 %36, i64* %2, i64* %3, %"class.std::__1::vector.299"* nonnull %8) #12
  %38 = bitcast %"class.std::__1::vector.301"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #12
  %39 = getelementptr inbounds %"class.std::__1::vector.301", %"class.std::__1::vector.301"* %9, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector.301", %"class.std::__1::vector.301"* %9, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #12
  call void @_ZN10spellcheck15FillSuggestionsERKNSt3__16vectorINS1_INS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEENS5_IS9_EEEEPS9_(%"class.std::__1::vector.299"* nonnull dereferenceable(24) %8, %"class.std::__1::vector.301"* nonnull %9) #12
  %41 = bitcast %"class.blink::WebVector.34"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #12
  %42 = getelementptr inbounds %"class.blink::WebVector.34", %"class.blink::WebVector.34"* %10, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::WebVector.34", %"class.blink::WebVector.34"* %10, i64 0, i32 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.blink::WebVector.34", %"class.blink::WebVector.34"* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.std::__1::basic_string"** %40 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::vector.301"* %9 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %46, %48
  %50 = sdiv exact i64 %49, 24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #12
  %51 = icmp eq i64 %49, 0
  %52 = inttoptr i64 %48 to %"class.std::__1::basic_string"*
  %53 = inttoptr i64 %46 to %"class.std::__1::basic_string"*
  br i1 %51, label %74, label %54

54:                                               ; preds = %19
  %55 = icmp ugt i64 %50, 2305843009213693951
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = bitcast %"class.blink::WebVector.34"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %57) #14
  unreachable

58:                                               ; preds = %54
  %59 = shl nsw i64 %50, 3
  %60 = call i8* @_Znwm(i64 %59) #13
  %61 = bitcast i8* %60 to %"class.blink::WebString"*
  %62 = bitcast %"class.blink::WebString"** %43 to i8**
  store i8* %60, i8** %62, align 8
  %63 = bitcast %"class.blink::WebVector.34"* %10 to i8**
  store i8* %60, i8** %63, align 8
  %64 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %61, i64 %50
  store %"class.blink::WebString"* %64, %"class.blink::WebString"** %44, align 8
  br label %65

65:                                               ; preds = %65, %58
  %66 = phi %"class.blink::WebString"* [ %67, %65 ], [ %61, %58 ]
  call void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"* %66) #12
  %67 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %66, i64 1
  %68 = icmp eq %"class.blink::WebString"* %67, %64
  br i1 %68, label %69, label %65

69:                                               ; preds = %65
  %70 = bitcast %"class.blink::WebString"** %43 to i64*
  %71 = ptrtoint %"class.blink::WebString"* %64 to i64
  store i64 %71, i64* %70, align 8
  %72 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %73 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 8
  br label %74

74:                                               ; preds = %19, %69
  %75 = phi %"class.std::__1::basic_string"* [ %53, %19 ], [ %73, %69 ]
  %76 = phi %"class.std::__1::basic_string"* [ %52, %19 ], [ %72, %69 ]
  %77 = icmp eq %"class.std::__1::basic_string"* %76, %75
  br i1 %77, label %88, label %78

78:                                               ; preds = %74
  %79 = load %"class.blink::WebString"*, %"class.blink::WebString"** %42, align 8
  %80 = bitcast %"class.blink::WebString"* %6 to i8*
  br label %81

81:                                               ; preds = %81, %78
  %82 = phi %"class.blink::WebString"* [ %79, %78 ], [ %86, %81 ]
  %83 = phi %"class.std::__1::basic_string"* [ %76, %78 ], [ %85, %81 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #12
  call void @_ZN5blink9WebString9FromUTF16ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.blink::WebString"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %83) #12
  %84 = call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"* %82, %"class.blink::WebString"* nonnull dereferenceable(8) %6) #12
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #12
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 1
  %86 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %82, i64 1
  %87 = icmp eq %"class.std::__1::basic_string"* %85, %75
  br i1 %87, label %88, label %81

88:                                               ; preds = %81, %74
  %89 = icmp eq %"class.blink::WebVector.34"* %10, %4
  br i1 %89, label %94, label %90

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.blink::WebVector.34", %"class.blink::WebVector.34"* %4, i64 0, i32 0
  %92 = load %"class.blink::WebString"*, %"class.blink::WebString"** %42, align 8
  %93 = load %"class.blink::WebString"*, %"class.blink::WebString"** %43, align 8
  call void @_ZNSt3__16vectorIN5blink9WebStringENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.35"* %91, %"class.blink::WebString"* %92, %"class.blink::WebString"* %93) #12
  br label %94

94:                                               ; preds = %88, %90
  %95 = load i8, i8* %26, align 1
  %96 = icmp slt i8 %95, 0
  %97 = load i64, i64* %13, align 8
  %98 = zext i8 %95 to i64
  %99 = select i1 %96, i64 %97, i64 %98
  %100 = call i1 @llvm.is.constant.i64(i64 %99) #12
  %101 = icmp ult i64 %99, 2147483648
  %102 = trunc i64 %99 to i32
  %103 = select i1 %101, i32 %102, i32 2147483647
  %104 = icmp ult i64 %99, 2147483647
  %105 = select i1 %104, i64 %99, i64 2147483647
  %106 = trunc i64 %105 to i32
  %107 = select i1 %100, i32 %106, i32 %103
  call void @_ZN27spellcheck_renderer_metrics38RecordCheckedTextLengthWithSuggestionsEi(i32 %107) #12
  %108 = load %"class.blink::WebString"*, %"class.blink::WebString"** %42, align 8
  %109 = icmp eq %"class.blink::WebString"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %94
  %111 = bitcast %"class.blink::WebString"* %108 to i8*
  %112 = load %"class.blink::WebString"*, %"class.blink::WebString"** %43, align 8
  %113 = icmp eq %"class.blink::WebString"* %112, %108
  br i1 %113, label %121, label %114

114:                                              ; preds = %110, %114
  %115 = phi %"class.blink::WebString"* [ %116, %114 ], [ %112, %110 ]
  %116 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %115, i64 -1
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %116) #12
  %117 = icmp eq %"class.blink::WebString"* %116, %108
  br i1 %117, label %118, label %114

118:                                              ; preds = %114
  %119 = bitcast %"class.blink::WebVector.34"* %10 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %110
  %122 = phi i8* [ %120, %118 ], [ %111, %110 ]
  store %"class.blink::WebString"* %108, %"class.blink::WebString"** %43, align 8
  call void @_ZdlPv(i8* %122) #13
  br label %123

123:                                              ; preds = %94, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  %124 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %125 = icmp eq %"class.std::__1::basic_string"* %124, null
  br i1 %125, label %147, label %126

126:                                              ; preds = %123
  %127 = bitcast %"class.std::__1::basic_string"* %124 to i8*
  %128 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 8
  %129 = icmp eq %"class.std::__1::basic_string"* %128, %124
  br i1 %129, label %145, label %130

130:                                              ; preds = %126, %140
  %131 = phi %"class.std::__1::basic_string"* [ %132, %140 ], [ %128, %126 ]
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %131, i64 -1
  %133 = bitcast %"class.std::__1::basic_string"* %132 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %134 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %133, i64 0, i32 1, i32 1
  %135 = load i8, i8* %134, align 1
  %136 = icmp slt i8 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %130
  %138 = bitcast %"class.std::__1::basic_string"* %132 to i8**
  %139 = load i8*, i8** %138, align 8
  call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %137, %130
  %141 = icmp eq %"class.std::__1::basic_string"* %132, %124
  br i1 %141, label %142, label %130

142:                                              ; preds = %140
  %143 = bitcast %"class.std::__1::vector.301"* %9 to i8**
  %144 = load i8*, i8** %143, align 8
  br label %145

145:                                              ; preds = %142, %126
  %146 = phi i8* [ %144, %142 ], [ %127, %126 ]
  store %"class.std::__1::basic_string"* %124, %"class.std::__1::basic_string"** %40, align 8
  call void @_ZdlPv(i8* %146) #13
  br label %147

147:                                              ; preds = %123, %145
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #12
  %148 = load %"class.std::__1::vector.301"*, %"class.std::__1::vector.301"** %21, align 8
  %149 = icmp eq %"class.std::__1::vector.301"* %148, null
  br i1 %149, label %189, label %150

150:                                              ; preds = %147
  %151 = bitcast %"class.std::__1::vector.301"* %148 to i8*
  %152 = load %"class.std::__1::vector.301"*, %"class.std::__1::vector.301"** %22, align 8
  %153 = icmp eq %"class.std::__1::vector.301"* %152, %148
  br i1 %153, label %187, label %154

154:                                              ; preds = %150, %182
  %155 = phi %"class.std::__1::vector.301"* [ %156, %182 ], [ %152, %150 ]
  %156 = getelementptr inbounds %"class.std::__1::vector.301", %"class.std::__1::vector.301"* %155, i64 -1
  %157 = getelementptr inbounds %"class.std::__1::vector.301", %"class.std::__1::vector.301"* %156, i64 0, i32 0, i32 0
  %158 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %157, align 8
  %159 = icmp eq %"class.std::__1::basic_string"* %158, null
  br i1 %159, label %182, label %160

160:                                              ; preds = %154
  %161 = bitcast %"class.std::__1::basic_string"* %158 to i8*
  %162 = getelementptr inbounds %"class.std::__1::vector.301", %"class.std::__1::vector.301"* %155, i64 -1, i32 0, i32 1
  %163 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %162, align 8
  %164 = icmp eq %"class.std::__1::basic_string"* %163, %158
  br i1 %164, label %180, label %165

165:                                              ; preds = %160, %175
  %166 = phi %"class.std::__1::basic_string"* [ %167, %175 ], [ %163, %160 ]
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %166, i64 -1
  %168 = bitcast %"class.std::__1::basic_string"* %167 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %168, i64 0, i32 1, i32 1
  %170 = load i8, i8* %169, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %165
  %173 = bitcast %"class.std::__1::basic_string"* %167 to i8**
  %174 = load i8*, i8** %173, align 8
  call void @_ZdlPv(i8* %174) #13
  br label %175

175:                                              ; preds = %172, %165
  %176 = icmp eq %"class.std::__1::basic_string"* %167, %158
  br i1 %176, label %177, label %165

177:                                              ; preds = %175
  %178 = bitcast %"class.std::__1::vector.301"* %156 to i8**
  %179 = load i8*, i8** %178, align 8
  br label %180

180:                                              ; preds = %177, %160
  %181 = phi i8* [ %179, %177 ], [ %161, %160 ]
  store %"class.std::__1::basic_string"* %158, %"class.std::__1::basic_string"** %162, align 8
  call void @_ZdlPv(i8* %181) #13
  br label %182

182:                                              ; preds = %180, %154
  %183 = icmp eq %"class.std::__1::vector.301"* %156, %148
  br i1 %183, label %184, label %154

184:                                              ; preds = %182
  %185 = bitcast %"class.std::__1::vector.299"* %8 to i8**
  %186 = load i8*, i8** %185, align 8
  br label %187

187:                                              ; preds = %184, %150
  %188 = phi i8* [ %186, %184 ], [ %151, %150 ]
  store %"class.std::__1::vector.301"* %148, %"class.std::__1::vector.301"** %22, align 8
  call void @_ZdlPv(i8* %188) #13
  br label %189

189:                                              ; preds = %147, %187
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  br label %226

190:                                              ; preds = %5
  %191 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 6
  %192 = load %class.SpellCheck*, %class.SpellCheck** %191, align 8
  %193 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %193, i64 0, i32 1, i32 1
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  %197 = load i16*, i16** %12, align 8
  %198 = load i64, i64* %13, align 8
  %199 = bitcast %"class.std::__1::basic_string"* %7 to i16*
  %200 = zext i8 %195 to i64
  %201 = select i1 %196, i16* %197, i16* %199
  %202 = select i1 %196, i64 %198, i64 %200
  %203 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 0, i32 0, i32 3
  %204 = load i32, i32* %203, align 8
  %205 = call zeroext i1 @_ZN10SpellCheck14SpellCheckWordEPKDsmmiPmS2_Dn(%class.SpellCheck* %192, i16* %201, i64 0, i64 %202, i32 %204, i64* %2, i64* %3, i8* null) #12
  %206 = load i8, i8* %194, align 1
  %207 = icmp slt i8 %206, 0
  %208 = load i64, i64* %13, align 8
  %209 = zext i8 %206 to i64
  %210 = select i1 %207, i64 %208, i64 %209
  %211 = call i1 @llvm.is.constant.i64(i64 %210) #12
  %212 = icmp ult i64 %210, 2147483648
  %213 = trunc i64 %210 to i32
  %214 = select i1 %212, i32 %213, i32 2147483647
  %215 = icmp ult i64 %210, 2147483647
  %216 = select i1 %215, i64 %210, i64 2147483647
  %217 = trunc i64 %216 to i32
  %218 = select i1 %211, i32 %217, i32 %214
  call void @_ZN27spellcheck_renderer_metrics36RecordCheckedTextLengthNoSuggestionsEi(i32 %218) #12
  %219 = call dereferenceable(8) %"class.spellcheck::mojom::SpellCheckHost"* @_ZN18SpellCheckProvider17GetSpellCheckHostEv(%class.SpellCheckProvider* %0)
  %220 = load i64, i64* %3, align 8
  %221 = icmp ne i64 %220, 0
  %222 = bitcast %"class.spellcheck::mojom::SpellCheckHost"* %219 to void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, i1)***
  %223 = load void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, i1)**, void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, i1)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, i1)*, void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, i1)** %223, i64 3
  %225 = load void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, i1)*, void (%"class.spellcheck::mojom::SpellCheckHost"*, %"class.std::__1::basic_string"*, i1)** %224, align 8
  call void %225(%"class.spellcheck::mojom::SpellCheckHost"* %219, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7, i1 zeroext %221) #12
  br label %226

226:                                              ; preds = %190, %189
  %227 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %193, %190 ], [ %25, %189 ]
  %228 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %227, i64 0, i32 1, i32 1
  %229 = load i8, i8* %228, align 1
  %230 = icmp slt i8 %229, 0
  br i1 %230, label %231, label %234

231:                                              ; preds = %226
  %232 = bitcast %"class.std::__1::basic_string"* %7 to i8**
  %233 = load i8*, i8** %232, align 8
  call void @_ZdlPv(i8* %233) #13
  br label %234

234:                                              ; preds = %226, %231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  ret void
}

declare zeroext i1 @_ZN10SpellCheck14SpellCheckWordEPKDsmmiPmS2_PNSt3__16vectorINS4_INS3_12basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEENS8_ISA_EEEENS8_ISC_EEEE(%class.SpellCheck*, i16*, i64, i64, i32, i64*, i64*, %"class.std::__1::vector.299"*) local_unnamed_addr #1

declare void @_ZN10spellcheck15FillSuggestionsERKNSt3__16vectorINS1_INS0_12basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS5_IS7_EEEENS5_IS9_EEEEPS9_(%"class.std::__1::vector.299"* dereferenceable(24), %"class.std::__1::vector.301"*) local_unnamed_addr #1

declare void @_ZN27spellcheck_renderer_metrics38RecordCheckedTextLengthWithSuggestionsEi(i32) local_unnamed_addr #1

declare zeroext i1 @_ZN10SpellCheck14SpellCheckWordEPKDsmmiPmS2_Dn(%class.SpellCheck*, i16*, i64, i64, i32, i64*, i64*, i8*) local_unnamed_addr #1

declare void @_ZN27spellcheck_renderer_metrics36RecordCheckedTextLengthNoSuggestionsEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N18SpellCheckProvider13CheckSpellingERKN5blink9WebStringERmS4_PNS0_9WebVectorIS1_EE(%class.SpellCheckProvider*, %"class.blink::WebString"* dereferenceable(8), i64* dereferenceable(8), i64* dereferenceable(8), %"class.blink::WebVector.34"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 -1, i32 8, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.271"* %6 to %class.SpellCheckProvider*
  tail call void @_ZN18SpellCheckProvider13CheckSpellingERKN5blink9WebStringERmS4_PNS0_9WebVectorIS1_EE(%class.SpellCheckProvider* %7, %"class.blink::WebString"* dereferenceable(8) %1, i64* dereferenceable(8) %2, i64* dereferenceable(8) %3, %"class.blink::WebVector.34"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SpellCheckProvider21RequestCheckingOfTextERKN5blink9WebStringENSt3__110unique_ptrINS0_25WebTextCheckingCompletionENS4_14default_deleteIS6_EEEE(%class.SpellCheckProvider*, %"class.blink::WebString"* dereferenceable(8), %"class.blink::WebTextCheckingCompletion"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = tail call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* %1) #12, !noalias !33
  %7 = tail call i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"* %1) #12, !noalias !33
  %8 = tail call i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"* %1) #12, !noalias !33
  call void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string"* nonnull sret %4, i64 %6, i8* %7, i16* %8) #12
  call void @_ZN18SpellCheckProvider19RequestTextCheckingERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS0_10unique_ptrIN5blink25WebTextCheckingCompletionENS0_14default_deleteISB_EEEE(%class.SpellCheckProvider* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.blink::WebTextCheckingCompletion"* %2)
  %9 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %15 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %15) #13
  br label %16

16:                                               ; preds = %3, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  %17 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* %1) #12
  %18 = call i1 @llvm.is.constant.i64(i64 %17) #12
  %19 = icmp ult i64 %17, 2147483648
  %20 = trunc i64 %17 to i32
  %21 = select i1 %19, i32 %20, i32 2147483647
  %22 = icmp ult i64 %17, 2147483647
  %23 = select i1 %22, i64 %17, i64 2147483647
  %24 = trunc i64 %23 to i32
  %25 = select i1 %18, i32 %24, i32 %21
  call void @_ZN27spellcheck_renderer_metrics28RecordAsyncCheckedTextLengthEi(i32 %25) #12
  ret void
}

declare void @_ZN27spellcheck_renderer_metrics28RecordAsyncCheckedTextLengthEi(i32) local_unnamed_addr #1

declare i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn32_N18SpellCheckProvider21RequestCheckingOfTextERKN5blink9WebStringENSt3__110unique_ptrINS0_25WebTextCheckingCompletionENS4_14default_deleteIS6_EEEE(%class.SpellCheckProvider*, %"class.blink::WebString"* dereferenceable(8), %"class.blink::WebTextCheckingCompletion"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SpellCheckProvider, %class.SpellCheckProvider* %0, i64 -1, i32 8, i32 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.271"* %4 to %class.SpellCheckProvider*
  tail call void @_ZN18SpellCheckProvider21RequestCheckingOfTextERKN5blink9WebStringENSt3__110unique_ptrINS0_25WebTextCheckingCompletionENS4_14default_deleteIS6_EEEE(%class.SpellCheckProvider* %5, %"class.blink::WebString"* dereferenceable(8) %1, %"class.blink::WebTextCheckingCompletion"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::WebTextCheckingCompletion"* @_ZNK4base5IDMapINSt3__110unique_ptrIN5blink25WebTextCheckingCompletionENS1_14default_deleteIS4_EEEEiE6LookupEi(%"class.base::IDMap"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %104, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !29
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, -1
  %12 = and i64 %11, %3
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %3
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %3, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %3, %13 ]
  %19 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %104, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %104, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %104

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %104, label %30

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 3
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to %"class.blink::WebTextCheckingCompletion"**
  %58 = load %"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebTextCheckingCompletion"** %57, align 8
  %59 = icmp eq %"class.blink::WebTextCheckingCompletion"* %58, null
  br i1 %59, label %104, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %64 = bitcast i32** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = ptrtoint i32* %62 to i64
  %67 = sub i64 %65, %66
  %68 = icmp eq i64 %67, 0
  %69 = inttoptr i64 %65 to i32*
  br i1 %68, label %87, label %70

70:                                               ; preds = %60
  %71 = ashr exact i64 %67, 2
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i32* [ %62, %70 ], [ %83, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %82, %72 ]
  %75 = lshr i64 %74, 1
  %76 = getelementptr inbounds i32, i32* %73, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, %1
  %79 = getelementptr inbounds i32, i32* %76, i64 1
  %80 = xor i64 %75, -1
  %81 = add i64 %74, %80
  %82 = select i1 %78, i64 %81, i64 %75
  %83 = select i1 %78, i32* %79, i32* %73
  %84 = icmp eq i64 %82, 0
  br i1 %84, label %85, label %72

85:                                               ; preds = %72
  %86 = ptrtoint i32* %83 to i64
  br label %87

87:                                               ; preds = %85, %60
  %88 = phi i64 [ %86, %85 ], [ %66, %60 ]
  %89 = phi i32* [ %83, %85 ], [ %62, %60 ]
  %90 = icmp eq i32* %89, %69
  br i1 %90, label %97, label %91

91:                                               ; preds = %87
  %92 = load i32, i32* %89, align 4
  %93 = icmp sgt i32 %92, %1
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds i32, i32* %89, i64 1
  %96 = ptrtoint i32* %95 to i64
  br label %97

97:                                               ; preds = %87, %91, %94
  %98 = phi i64 [ %96, %94 ], [ %88, %87 ], [ %88, %91 ]
  %99 = inttoptr i64 %98 to i32*
  %100 = icmp eq i32* %89, %99
  %101 = select i1 %100, i32* %69, i32* %89
  %102 = icmp eq i32* %101, %69
  %103 = select i1 %102, %"class.blink::WebTextCheckingCompletion"* %58, %"class.blink::WebTextCheckingCompletion"* null
  ret %"class.blink::WebTextCheckingCompletion"* %103

104:                                              ; preds = %51, %43, %55, %24, %2, %17
  ret %"class.blink::WebTextCheckingCompletion"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base5IDMapINSt3__110unique_ptrIN5blink25WebTextCheckingCompletionENS1_14default_deleteIS4_EEEEiE6RemoveEi(%"class.base::IDMap"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.559", align 8
  %4 = alloca i32, align 4
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %152, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #12, !range !29
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, -1
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ugt i64 %8, %6
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %18, %16, %13
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %26, label %152, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base"* %29, null
  br i1 %30, label %152, label %31

31:                                               ; preds = %27
  %32 = add i64 %8, -1
  br label %33

33:                                               ; preds = %54, %31
  %34 = phi %"struct.std::__1::__hash_node_base"* [ %29, %31 ], [ %56, %54 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 1
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %6
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  br i1 %12, label %42, label %40

40:                                               ; preds = %39
  %41 = and i64 %37, %32
  br label %46

42:                                               ; preds = %39
  %43 = icmp ult i64 %37, %8
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %37, %8
  br label %46

46:                                               ; preds = %44, %42, %40
  %47 = phi i64 [ %41, %40 ], [ %45, %44 ], [ %37, %42 ]
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %54, label %152

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %1
  br i1 %53, label %58, label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base"* %56, null
  br i1 %57, label %152, label %33

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %62 = bitcast i32** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = ptrtoint i32* %60 to i64
  %65 = sub i64 %63, %64
  %66 = icmp eq i64 %65, 0
  %67 = inttoptr i64 %63 to i32*
  br i1 %66, label %85, label %68

68:                                               ; preds = %58
  %69 = ashr exact i64 %65, 2
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i32* [ %60, %68 ], [ %81, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %80, %70 ]
  %73 = lshr i64 %72, 1
  %74 = getelementptr inbounds i32, i32* %71, i64 %73
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, %1
  %77 = getelementptr inbounds i32, i32* %74, i64 1
  %78 = xor i64 %73, -1
  %79 = add i64 %72, %78
  %80 = select i1 %76, i64 %79, i64 %73
  %81 = select i1 %76, i32* %77, i32* %71
  %82 = icmp eq i64 %80, 0
  br i1 %82, label %83, label %70

83:                                               ; preds = %70
  %84 = ptrtoint i32* %81 to i64
  br label %85

85:                                               ; preds = %83, %58
  %86 = phi i64 [ %84, %83 ], [ %64, %58 ]
  %87 = phi i32* [ %81, %83 ], [ %60, %58 ]
  %88 = icmp eq i32* %87, %67
  br i1 %88, label %95, label %89

89:                                               ; preds = %85
  %90 = load i32, i32* %87, align 4
  %91 = icmp sgt i32 %90, %1
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds i32, i32* %87, i64 1
  %94 = ptrtoint i32* %93 to i64
  br label %95

95:                                               ; preds = %85, %89, %92
  %96 = phi i64 [ %94, %92 ], [ %86, %85 ], [ %86, %89 ]
  %97 = inttoptr i64 %96 to i32*
  %98 = icmp eq i32* %87, %97
  %99 = select i1 %98, i32* %67, i32* %87
  %100 = icmp eq i32* %99, %67
  br i1 %100, label %101, label %152

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %127

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %5, i64 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr.559"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #12
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE(%"class.std::__1::unique_ptr.559"* nonnull sret %3, %"class.std::__1::__hash_table"* %106, %"struct.std::__1::__hash_node_base"* %34) #12
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.559", %"class.std::__1::unique_ptr.559"* %3, i64 0, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %108, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node"* %109, null
  br i1 %110, label %126, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.559", %"class.std::__1::unique_ptr.559"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %113 = load i8, i8* %112, align 8, !range !36
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %124, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %109, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %117 = load %"class.blink::WebTextCheckingCompletion"*, %"class.blink::WebTextCheckingCompletion"** %116, align 8
  store %"class.blink::WebTextCheckingCompletion"* null, %"class.blink::WebTextCheckingCompletion"** %116, align 8
  %118 = icmp eq %"class.blink::WebTextCheckingCompletion"* %117, null
  br i1 %118, label %124, label %119

119:                                              ; preds = %115
  %120 = bitcast %"class.blink::WebTextCheckingCompletion"* %117 to void (%"class.blink::WebTextCheckingCompletion"*)***
  %121 = load void (%"class.blink::WebTextCheckingCompletion"*)**, void (%"class.blink::WebTextCheckingCompletion"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %121, i64 3
  %123 = load void (%"class.blink::WebTextCheckingCompletion"*)*, void (%"class.blink::WebTextCheckingCompletion"*)** %122, align 8
  call void %123(%"class.blink::WebTextCheckingCompletion"* nonnull %117) #12
  br label %124

124:                                              ; preds = %119, %115, %111
  %125 = bitcast %"struct.std::__1::__hash_node"* %109 to i8*
  call void @_ZdlPv(i8* %125) #13
  br label %126

126:                                              ; preds = %105, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #12
  br label %152

127:                                              ; preds = %101
  br i1 %66, label %143, label %128

128:                                              ; preds = %127
  %129 = ashr exact i64 %65, 2
  br label %130

130:                                              ; preds = %130, %128
  %131 = phi i32* [ %60, %128 ], [ %141, %130 ]
  %132 = phi i64 [ %129, %128 ], [ %140, %130 ]
  %133 = lshr i64 %132, 1
  %134 = getelementptr inbounds i32, i32* %131, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = icmp slt i32 %135, %1
  %137 = getelementptr inbounds i32, i32* %134, i64 1
  %138 = xor i64 %133, -1
  %139 = add i64 %132, %138
  %140 = select i1 %136, i64 %139, i64 %133
  %141 = select i1 %136, i32* %137, i32* %131
  %142 = icmp eq i64 %140, 0
  br i1 %142, label %143, label %130

143:                                              ; preds = %130, %127
  %144 = phi i32* [ %60, %127 ], [ %141, %130 ]
  %145 = icmp eq i32* %144, %67
  br i1 %145, label %149, label %146

146:                                              ; preds = %143
  %147 = load i32, i32* %144, align 4
  %148 = icmp sgt i32 %147, %1
  br i1 %148, label %149, label %152

149:                                              ; preds = %146, %143
  %150 = getelementptr inbounds %"class.base::IDMap", %"class.base::IDMap"* %0, i64 0, i32 2, i32 0
  %151 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_(%"class.std::__1::vector"* %150, i32* %144, i32* nonnull dereferenceable(4) %4) #12
  br label %152

152:                                              ; preds = %54, %46, %149, %146, %95, %27, %2, %20, %126
  ret void
}

declare void @_ZN10SpellCheck19RequestTextCheckingERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEENS0_10unique_ptrIN5blink25WebTextCheckingCompletionENS0_14default_deleteISB_EEEE(%class.SpellCheck*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.blink::WebTextCheckingCompletion"*) local_unnamed_addr #1

declare void @_ZN10SpellCheck25CreateTextCheckingResultsENS_12ResultFilterEiRKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS1_6vectorI16SpellCheckResultNS5_ISB_EEEEPN5blink9WebVectorINSG_21WebTextCheckingResultEEE(%class.SpellCheck*, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.298"*, %"class.blink::WebVector"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !37
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !37
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !40, !noalias !37
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !40, !noalias !37
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !37
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !37
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !40, !noalias !37
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !40, !noalias !37
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !37
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !37
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !40, !noalias !37
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !40, !noalias !37
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !37
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !37
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !40, !noalias !37
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !40, !noalias !37
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !42

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !37
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !37
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !40, !noalias !37
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !40, !noalias !37
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !43

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !44

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !45

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #14
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #14
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #13
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !46
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !46
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !49, !noalias !46
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !49, !noalias !46
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !46
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !46
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !49, !noalias !46
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !49, !noalias !46
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !46
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !46
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !49, !noalias !46
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !49, !noalias !46
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !46
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !46
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !49, !noalias !46
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !49, !noalias !46
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !51

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !46
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !46
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !49, !noalias !46
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !49, !noalias !46
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !52

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !53

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !54

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !55
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !55
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !58, !noalias !55
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !58, !noalias !55
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !55
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !55
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !58, !noalias !55
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !58, !noalias !55
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !55
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !55
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !58, !noalias !55
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !58, !noalias !55
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !55
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !55
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !58, !noalias !55
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !58, !noalias !55
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !60

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !55
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !55
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !58, !noalias !55
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !58, !noalias !55
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !61

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !62

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !63

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #12
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

declare i32 @uscript_getScript_69(i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18SpellCheckProvider10OnDestructEv(%class.SpellCheckProvider*) unnamed_addr #0 align 2 {
  %2 = icmp eq %class.SpellCheckProvider* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SpellCheckProvider* %0 to void (%class.SpellCheckProvider*)***
  %5 = load void (%class.SpellCheckProvider*)**, void (%class.SpellCheckProvider*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SpellCheckProvider*)*, void (%class.SpellCheckProvider*)** %5, i64 8
  %7 = load void (%class.SpellCheckProvider*)*, void (%class.SpellCheckProvider*)** %6, align 8
  tail call void %7(%class.SpellCheckProvider* nonnull %0) #12
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7content19RenderFrameObserver17OnMessageReceivedERKN3IPC7MessageE(%"class.content::RenderFrameObserver"*, %"class.IPC::Message"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3IPC8Listener18OnChannelConnectedEi(%"class.IPC::Listener"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3IPC8Listener14OnChannelErrorEv(%"class.IPC::Listener"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3IPC8Listener20OnBadMessageReceivedERKNS_7MessageE(%"class.IPC::Listener"*, %"class.IPC::Message"* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3IPC8Listener28OnAssociatedInterfaceRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4mojo29ScopedInterfaceEndpointHandleE(%"class.IPC::Listener"*, %"class.std::__1::basic_string.101"* dereferenceable(24), %"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3IPC8Listener15OnChannelDeniedEv(%"class.IPC::Listener"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3IPC8Listener20OnChannelListenErrorEv(%"class.IPC::Listener"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver21DidCreatePepperPluginEPNS_17RendererPpapiHostE(%"class.content::RenderFrameObserver"*, %"class.content::RendererPpapiHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver6OnStopEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver9WasHiddenEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver8WasShownEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver18DidStartNavigationERK4GURLN4absl8optionalIN5blink17WebNavigationTypeEEE(%"class.content::RenderFrameObserver"*, %class.GURL* dereferenceable(120), i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver23ReadyToCommitNavigationEPN5blink17WebDocumentLoaderE(%"class.content::RenderFrameObserver"*, %"class.blink::WebDocumentLoader"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver24DidSetPageLifecycleStateEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver20DidCreateNewDocumentEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver24DidCreateDocumentElementEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver24DidCommitProvisionalLoadEN2ui14PageTransitionE(%"class.content::RenderFrameObserver"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver22DidFailProvisionalLoadEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver13DidFinishLoadEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver21DidFinishDocumentLoadEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver21DidHandleOnloadEventsEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver22DidCreateScriptContextEN2v85LocalINS1_7ContextEEEi(%"class.content::RenderFrameObserver"*, %"class.v8::Context"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver24WillReleaseScriptContextEN2v85LocalINS1_7ContextEEEi(%"class.content::RenderFrameObserver"*, %"class.v8::Context"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver20DidClearWindowObjectEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver21DidChangeScrollOffsetEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver19WillSendSubmitEventERKN5blink14WebFormElementE(%"class.content::RenderFrameObserver"*, %"class.blink::WebFormElement"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver14WillSubmitFormERKN5blink14WebFormElementE(%"class.content::RenderFrameObserver"*, %"class.blink::WebFormElement"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver11DidMatchCSSERKN5blink9WebVectorINS1_9WebStringEEES6_(%"class.content::RenderFrameObserver"*, %"class.blink::WebVector.34"* dereferenceable(24), %"class.blink::WebVector.34"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver31DidFinishSameDocumentNavigationEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver10WillDetachEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver27DetailedConsoleMessageAddedERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_S9_ji(%"class.content::RenderFrameObserver"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), i32, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver19DidMeaningfulLayoutEN5blink19WebMeaningfulLayoutE(%"class.content::RenderFrameObserver"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver26DidChangePerformanceTimingEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver20DidObserveInputDelayEN4base9TimeDeltaE(%"class.content::RenderFrameObserver"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver26DidObserveFirstScrollDelayEN4base9TimeDeltaE(%"class.content::RenderFrameObserver"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver18DidChangeCpuTimingEN4base9TimeDeltaE(%"class.content::RenderFrameObserver"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver25DidObserveLoadingBehaviorEN5blink19LoadingBehaviorFlagE(%"class.content::RenderFrameObserver"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver25DidObserveNewFeatureUsageERKN5blink17UseCounterFeatureE(%"class.content::RenderFrameObserver"*, %"class.blink::UseCounterFeature"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver21DidObserveLayoutShiftEdb(%"class.content::RenderFrameObserver"*, double, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver37DidObserveInputForLayoutShiftTrackingEN4base9TimeTicksE(%"class.content::RenderFrameObserver"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver18DidObserveLayoutNgEjjjjjj(%"class.content::RenderFrameObserver"*, i32, i32, i32, i32, i32, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver26DidObserveLazyLoadBehaviorEN5blink19WebLocalFrameClient16LazyLoadBehaviorE(%"class.content::RenderFrameObserver"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver15WillSendRequestERKN5blink13WebURLRequestE(%"class.content::RenderFrameObserver"*, %"class.blink::WebURLRequest"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver16DidStartResponseERK4GURLiRKN7network5mojom15URLResponseHeadENS5_18RequestDestinationEi(%"class.content::RenderFrameObserver"*, %class.GURL* dereferenceable(120), i32, %"class.network::mojom::URLResponseHead"* dereferenceable(1320), i32, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver19DidCompleteResponseEiRKN7network25URLLoaderCompletionStatusE(%"class.content::RenderFrameObserver"*, i32, %"struct.network::URLLoaderCompletionStatus"* dereferenceable(312)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver17DidCancelResponseEi(%"class.content::RenderFrameObserver"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver30DidLoadResourceFromMemoryCacheERK4GURLilRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEb(%"class.content::RenderFrameObserver"*, %class.GURL* dereferenceable(120), i32, i64, %"class.std::__1::basic_string.101"* dereferenceable(24), i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver28DidReceiveTransferSizeUpdateEii(%"class.content::RenderFrameObserver"*, i32, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver24AccessibilityModeChangedERKN2ui6AXModeE(%"class.content::RenderFrameObserver"*, %"class.ui::AXMode"* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver13ScriptedPrintEb(%"class.content::RenderFrameObserver"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver23DraggableRegionsChangedEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver28WillCreateWorkerFetchContextEPN5blink21WebWorkerFetchContextE(%"class.content::RenderFrameObserver"*, %"class.blink::WebWorkerFetchContext"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver30OnMainFrameIntersectionChangedERKN3gfx4RectE(%"class.content::RenderFrameObserver"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver24OnOverlayPopupAdDetectedEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver23OnLargeStickyAdDetectedEv(%"class.content::RenderFrameObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver26OnInterfaceRequestForFrameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4mojo16ScopedHandleBaseINSA_17MessagePipeHandleEEE(%"class.content::RenderFrameObserver"*, %"class.std::__1::basic_string.101"* dereferenceable(24), %"class.mojo::ScopedHandleBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN7content19RenderFrameObserver36OnAssociatedInterfaceRequestForFrameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPN4mojo29ScopedInterfaceEndpointHandleE(%"class.content::RenderFrameObserver"*, %"class.std::__1::basic_string.101"* dereferenceable(24), %"class.mojo::ScopedInterfaceEndpointHandle"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver27OnMobileFriendlinessChangedERKN5blink18MobileFriendlinessE(%"class.content::RenderFrameObserver"*, %"struct.blink::MobileFriendliness"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN7content19RenderFrameObserver24SetUpSmoothnessReportingERN4base26ReadOnlySharedMemoryRegionE(%"class.content::RenderFrameObserver"*, %"class.base::ReadOnlySharedMemoryRegion"* dereferenceable(64)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content19RenderFrameObserver41PreloadSubresourceOptimizationsForOriginsERKNSt3__16vectorIN5blink17WebSecurityOriginENS1_9allocatorIS4_EEEE(%"class.content::RenderFrameObserver"*, %"class.std::__1::vector.541"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN7content19RenderFrameObserver4SendEPN3IPC7MessageE(%"class.content::RenderFrameObserver"*, %"class.IPC::Message"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare zeroext i1 @_ZThn8_N7content19RenderFrameObserver4SendEPN3IPC7MessageE(%"class.content::RenderFrameObserver"*, %"class.IPC::Message"*) unnamed_addr #0 align 2

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #4

declare void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string"* sret, i64, i8*, i16*) local_unnamed_addr #1

declare i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"*) local_unnamed_addr #1

declare i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink21WebTextCheckingResultENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.32"*, %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.blink::WebTextCheckingResult"* %1 to i64
  %5 = ptrtoint %"struct.blink::WebTextCheckingResult"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = sdiv exact i64 %6, 40
  %8 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.blink::WebTextCheckingResult"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.32"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 40
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.blink::WebTextCheckingResult"*
  br i1 %15, label %129, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.blink::WebTextCheckingResult"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 40
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %1, i64 %22
  %25 = select i1 %23, %"struct.blink::WebTextCheckingResult"* %24, %"struct.blink::WebTextCheckingResult"* %2
  %26 = icmp eq %"struct.blink::WebTextCheckingResult"* %25, %1
  br i1 %26, label %43, label %27

27:                                               ; preds = %17, %39
  %28 = phi %"struct.blink::WebTextCheckingResult"* [ %41, %39 ], [ %16, %17 ]
  %29 = phi %"struct.blink::WebTextCheckingResult"* [ %40, %39 ], [ %1, %17 ]
  %30 = bitcast %"struct.blink::WebTextCheckingResult"* %28 to i8*
  %31 = bitcast %"struct.blink::WebTextCheckingResult"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 12, i1 false) #12
  %32 = icmp eq %"struct.blink::WebTextCheckingResult"* %28, %29
  br i1 %32, label %39, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %28, i64 0, i32 3, i32 0
  %35 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.blink::WebString"*, %"class.blink::WebString"** %35, align 8
  %37 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %29, i64 0, i32 3, i32 0, i32 0, i32 1
  %38 = load %"class.blink::WebString"*, %"class.blink::WebString"** %37, align 8
  tail call void @_ZNSt3__16vectorIN5blink9WebStringENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.35"* %34, %"class.blink::WebString"* %36, %"class.blink::WebString"* %38) #12
  br label %39

39:                                               ; preds = %33, %27
  %40 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %29, i64 1
  %41 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %28, i64 1
  %42 = icmp eq %"struct.blink::WebTextCheckingResult"* %40, %25
  br i1 %42, label %43, label %27

43:                                               ; preds = %39, %17
  %44 = phi %"struct.blink::WebTextCheckingResult"* [ %16, %17 ], [ %41, %39 ]
  br i1 %23, label %45, label %102

45:                                               ; preds = %43
  %46 = load i64, i64* %19, align 8
  %47 = icmp eq %"struct.blink::WebTextCheckingResult"* %25, %2
  br i1 %47, label %100, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to %"struct.blink::WebTextCheckingResult"*
  br label %50

50:                                               ; preds = %94, %48
  %51 = phi %"struct.blink::WebTextCheckingResult"* [ %96, %94 ], [ %49, %48 ]
  %52 = phi %"struct.blink::WebTextCheckingResult"* [ %95, %94 ], [ %24, %48 ]
  %53 = bitcast %"struct.blink::WebTextCheckingResult"* %51 to i8*
  %54 = bitcast %"struct.blink::WebTextCheckingResult"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 12, i1 false) #12
  %55 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %51, i64 0, i32 3
  %56 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %52, i64 0, i32 3
  %57 = bitcast %"class.blink::WebVector.34"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #12
  %58 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %52, i64 0, i32 3, i32 0, i32 0, i32 1
  %59 = bitcast %"class.blink::WebString"** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.blink::WebVector.34"* %56 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %60, %62
  %64 = ashr exact i64 %63, 3
  %65 = icmp eq i64 %63, 0
  br i1 %65, label %94, label %66

66:                                               ; preds = %50
  %67 = icmp ugt i64 %64, 2305843009213693951
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = bitcast %"class.blink::WebVector.34"* %55 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %69) #14
  unreachable

70:                                               ; preds = %66
  %71 = tail call i8* @_Znwm(i64 %63) #13
  %72 = bitcast i8* %71 to %"class.blink::WebString"*
  %73 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %51, i64 0, i32 3, i32 0, i32 0, i32 1
  %74 = bitcast %"class.blink::WebString"** %73 to i8**
  store i8* %71, i8** %74, align 8
  %75 = bitcast %"class.blink::WebVector.34"* %55 to i8**
  store i8* %71, i8** %75, align 8
  %76 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %72, i64 %64
  %77 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %51, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::WebString"* %76, %"class.blink::WebString"** %77, align 8
  %78 = getelementptr inbounds %"class.blink::WebVector.34", %"class.blink::WebVector.34"* %56, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::WebString"*, %"class.blink::WebString"** %78, align 8
  %80 = load %"class.blink::WebString"*, %"class.blink::WebString"** %58, align 8
  %81 = bitcast %"class.blink::WebString"** %73 to i64*
  %82 = ptrtoint i8* %71 to i64
  %83 = icmp eq %"class.blink::WebString"* %79, %80
  br i1 %83, label %92, label %84

84:                                               ; preds = %70, %84
  %85 = phi %"class.blink::WebString"* [ %88, %84 ], [ %72, %70 ]
  %86 = phi %"class.blink::WebString"* [ %87, %84 ], [ %79, %70 ]
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %85, %"class.blink::WebString"* dereferenceable(8) %86) #12
  %87 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %86, i64 1
  %88 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %85, i64 1
  %89 = icmp eq %"class.blink::WebString"* %87, %80
  br i1 %89, label %90, label %84

90:                                               ; preds = %84
  %91 = ptrtoint %"class.blink::WebString"* %88 to i64
  br label %92

92:                                               ; preds = %90, %70
  %93 = phi i64 [ %82, %70 ], [ %91, %90 ]
  store i64 %93, i64* %81, align 8
  br label %94

94:                                               ; preds = %92, %50
  %95 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %52, i64 1
  %96 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %51, i64 1
  %97 = icmp eq %"struct.blink::WebTextCheckingResult"* %95, %2
  br i1 %97, label %98, label %50

98:                                               ; preds = %94
  %99 = ptrtoint %"struct.blink::WebTextCheckingResult"* %96 to i64
  br label %100

100:                                              ; preds = %45, %98
  %101 = phi i64 [ %46, %45 ], [ %99, %98 ]
  store i64 %101, i64* %19, align 8
  br label %241

102:                                              ; preds = %43
  %103 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %18, align 8
  %104 = icmp eq %"struct.blink::WebTextCheckingResult"* %103, %44
  br i1 %104, label %128, label %105

105:                                              ; preds = %102, %126
  %106 = phi %"struct.blink::WebTextCheckingResult"* [ %107, %126 ], [ %103, %102 ]
  %107 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %106, i64 -1
  %108 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %106, i64 -1, i32 3
  %109 = getelementptr inbounds %"class.blink::WebVector.34", %"class.blink::WebVector.34"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::WebString"*, %"class.blink::WebString"** %109, align 8
  %111 = icmp eq %"class.blink::WebString"* %110, null
  br i1 %111, label %126, label %112

112:                                              ; preds = %105
  %113 = bitcast %"class.blink::WebString"* %110 to i8*
  %114 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %106, i64 -1, i32 3, i32 0, i32 0, i32 1
  %115 = load %"class.blink::WebString"*, %"class.blink::WebString"** %114, align 8
  %116 = icmp eq %"class.blink::WebString"* %115, %110
  br i1 %116, label %124, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.blink::WebString"* [ %119, %117 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %118, i64 -1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %119) #12
  %120 = icmp eq %"class.blink::WebString"* %119, %110
  br i1 %120, label %121, label %117

121:                                              ; preds = %117
  %122 = bitcast %"class.blink::WebVector.34"* %108 to i8**
  %123 = load i8*, i8** %122, align 8
  br label %124

124:                                              ; preds = %121, %112
  %125 = phi i8* [ %123, %121 ], [ %113, %112 ]
  store %"class.blink::WebString"* %110, %"class.blink::WebString"** %114, align 8
  tail call void @_ZdlPv(i8* %125) #13
  br label %126

126:                                              ; preds = %124, %105
  %127 = icmp eq %"struct.blink::WebTextCheckingResult"* %107, %44
  br i1 %127, label %128, label %105

128:                                              ; preds = %126, %102
  store %"struct.blink::WebTextCheckingResult"* %44, %"struct.blink::WebTextCheckingResult"** %18, align 8
  br label %241

129:                                              ; preds = %3
  %130 = icmp eq i64 %12, 0
  br i1 %130, label %165, label %131

131:                                              ; preds = %129
  %132 = inttoptr i64 %12 to i8*
  %133 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 1
  %134 = load %"struct.blink::WebTextCheckingResult"*, %"struct.blink::WebTextCheckingResult"** %133, align 8
  %135 = icmp eq %"struct.blink::WebTextCheckingResult"* %134, %16
  br i1 %135, label %162, label %136

136:                                              ; preds = %131, %157
  %137 = phi %"struct.blink::WebTextCheckingResult"* [ %138, %157 ], [ %134, %131 ]
  %138 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %137, i64 -1
  %139 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %137, i64 -1, i32 3
  %140 = getelementptr inbounds %"class.blink::WebVector.34", %"class.blink::WebVector.34"* %139, i64 0, i32 0, i32 0, i32 0
  %141 = load %"class.blink::WebString"*, %"class.blink::WebString"** %140, align 8
  %142 = icmp eq %"class.blink::WebString"* %141, null
  br i1 %142, label %157, label %143

143:                                              ; preds = %136
  %144 = bitcast %"class.blink::WebString"* %141 to i8*
  %145 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %137, i64 -1, i32 3, i32 0, i32 0, i32 1
  %146 = load %"class.blink::WebString"*, %"class.blink::WebString"** %145, align 8
  %147 = icmp eq %"class.blink::WebString"* %146, %141
  br i1 %147, label %155, label %148

148:                                              ; preds = %143, %148
  %149 = phi %"class.blink::WebString"* [ %150, %148 ], [ %146, %143 ]
  %150 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %149, i64 -1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %150) #12
  %151 = icmp eq %"class.blink::WebString"* %150, %141
  br i1 %151, label %152, label %148

152:                                              ; preds = %148
  %153 = bitcast %"class.blink::WebVector.34"* %139 to i8**
  %154 = load i8*, i8** %153, align 8
  br label %155

155:                                              ; preds = %152, %143
  %156 = phi i8* [ %154, %152 ], [ %144, %143 ]
  store %"class.blink::WebString"* %141, %"class.blink::WebString"** %145, align 8
  tail call void @_ZdlPv(i8* %156) #13
  br label %157

157:                                              ; preds = %155, %136
  %158 = icmp eq %"struct.blink::WebTextCheckingResult"* %138, %16
  br i1 %158, label %159, label %136

159:                                              ; preds = %157
  %160 = bitcast %"class.std::__1::vector.32"* %0 to i8**
  %161 = load i8*, i8** %160, align 8
  br label %162

162:                                              ; preds = %159, %131
  %163 = phi i8* [ %161, %159 ], [ %132, %131 ]
  store %"struct.blink::WebTextCheckingResult"* %16, %"struct.blink::WebTextCheckingResult"** %133, align 8
  tail call void @_ZdlPv(i8* %163) #13
  %164 = bitcast %"class.std::__1::vector.32"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 24, i1 false) #12
  br label %165

165:                                              ; preds = %129, %162
  %166 = phi i64 [ %10, %129 ], [ 0, %162 ]
  %167 = icmp ugt i64 %7, 461168601842738790
  br i1 %167, label %168, label %170

168:                                              ; preds = %165
  %169 = bitcast %"class.std::__1::vector.32"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %169) #14
  unreachable

170:                                              ; preds = %165
  %171 = sdiv exact i64 %166, 40
  %172 = icmp ult i64 %171, 230584300921369395
  br i1 %172, label %173, label %177

173:                                              ; preds = %170
  %174 = shl nsw i64 %171, 1
  %175 = icmp ult i64 %174, %7
  %176 = select i1 %175, i64 %7, i64 %174
  br label %177

177:                                              ; preds = %173, %170
  %178 = phi i64 [ %176, %173 ], [ 461168601842738790, %170 ]
  %179 = mul i64 %178, 40
  %180 = tail call i8* @_Znwm(i64 %179) #13
  %181 = bitcast i8* %180 to %"struct.blink::WebTextCheckingResult"*
  %182 = getelementptr inbounds %"class.std::__1::vector.32", %"class.std::__1::vector.32"* %0, i64 0, i32 0, i32 1
  %183 = bitcast %"struct.blink::WebTextCheckingResult"** %182 to i8**
  store i8* %180, i8** %183, align 8
  %184 = bitcast %"class.std::__1::vector.32"* %0 to i8**
  store i8* %180, i8** %184, align 8
  %185 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %181, i64 %178
  store %"struct.blink::WebTextCheckingResult"* %185, %"struct.blink::WebTextCheckingResult"** %8, align 8
  %186 = bitcast %"struct.blink::WebTextCheckingResult"** %182 to i64*
  %187 = ptrtoint i8* %180 to i64
  %188 = icmp eq %"struct.blink::WebTextCheckingResult"* %1, %2
  br i1 %188, label %239, label %189

189:                                              ; preds = %177, %233
  %190 = phi %"struct.blink::WebTextCheckingResult"* [ %235, %233 ], [ %181, %177 ]
  %191 = phi %"struct.blink::WebTextCheckingResult"* [ %234, %233 ], [ %1, %177 ]
  %192 = bitcast %"struct.blink::WebTextCheckingResult"* %190 to i8*
  %193 = bitcast %"struct.blink::WebTextCheckingResult"* %191 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %192, i8* align 8 %193, i64 12, i1 false) #12
  %194 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %190, i64 0, i32 3
  %195 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %191, i64 0, i32 3
  %196 = bitcast %"class.blink::WebVector.34"* %194 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 0, i64 24, i1 false) #12
  %197 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %191, i64 0, i32 3, i32 0, i32 0, i32 1
  %198 = bitcast %"class.blink::WebString"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = bitcast %"class.blink::WebVector.34"* %195 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = sub i64 %199, %201
  %203 = ashr exact i64 %202, 3
  %204 = icmp eq i64 %202, 0
  br i1 %204, label %233, label %205

205:                                              ; preds = %189
  %206 = icmp ugt i64 %203, 2305843009213693951
  br i1 %206, label %207, label %209

207:                                              ; preds = %205
  %208 = bitcast %"class.blink::WebVector.34"* %194 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %208) #14
  unreachable

209:                                              ; preds = %205
  %210 = tail call i8* @_Znwm(i64 %202) #13
  %211 = bitcast i8* %210 to %"class.blink::WebString"*
  %212 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %190, i64 0, i32 3, i32 0, i32 0, i32 1
  %213 = bitcast %"class.blink::WebString"** %212 to i8**
  store i8* %210, i8** %213, align 8
  %214 = bitcast %"class.blink::WebVector.34"* %194 to i8**
  store i8* %210, i8** %214, align 8
  %215 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %211, i64 %203
  %216 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %190, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::WebString"* %215, %"class.blink::WebString"** %216, align 8
  %217 = getelementptr inbounds %"class.blink::WebVector.34", %"class.blink::WebVector.34"* %195, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.blink::WebString"*, %"class.blink::WebString"** %217, align 8
  %219 = load %"class.blink::WebString"*, %"class.blink::WebString"** %197, align 8
  %220 = bitcast %"class.blink::WebString"** %212 to i64*
  %221 = ptrtoint i8* %210 to i64
  %222 = icmp eq %"class.blink::WebString"* %218, %219
  br i1 %222, label %231, label %223

223:                                              ; preds = %209, %223
  %224 = phi %"class.blink::WebString"* [ %227, %223 ], [ %211, %209 ]
  %225 = phi %"class.blink::WebString"* [ %226, %223 ], [ %218, %209 ]
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %224, %"class.blink::WebString"* dereferenceable(8) %225) #12
  %226 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %225, i64 1
  %227 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %224, i64 1
  %228 = icmp eq %"class.blink::WebString"* %226, %219
  br i1 %228, label %229, label %223

229:                                              ; preds = %223
  %230 = ptrtoint %"class.blink::WebString"* %227 to i64
  br label %231

231:                                              ; preds = %229, %209
  %232 = phi i64 [ %221, %209 ], [ %230, %229 ]
  store i64 %232, i64* %220, align 8
  br label %233

233:                                              ; preds = %231, %189
  %234 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %191, i64 1
  %235 = getelementptr inbounds %"struct.blink::WebTextCheckingResult", %"struct.blink::WebTextCheckingResult"* %190, i64 1
  %236 = icmp eq %"struct.blink::WebTextCheckingResult"* %234, %2
  br i1 %236, label %237, label %189

237:                                              ; preds = %233
  %238 = ptrtoint %"struct.blink::WebTextCheckingResult"* %235 to i64
  br label %239

239:                                              ; preds = %177, %237
  %240 = phi i64 [ %187, %177 ], [ %238, %237 ]
  store i64 %240, i64* %186, align 8
  br label %241

241:                                              ; preds = %100, %128, %239
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #1

declare void @_ZN10spellcheck5mojom19SpellCheckHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.spellcheck::mojom::SpellCheckHostProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN10spellcheck5mojom14SpellCheckHostEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver"* noalias sret, %"class.mojo::Remote"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = alloca %"class.mojo::ScopedHandleBase", align 4
  %6 = alloca %"class.mojo::MessagePipeHandle", align 4
  %7 = alloca %"class.mojo::MessagePipeHandle", align 4
  %8 = alloca %"class.mojo::PendingRemote", align 4
  %9 = bitcast %"class.mojo::MessagePipeHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = bitcast %"class.mojo::MessagePipeHandle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %12, align 4
  %13 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %10, i32* nonnull %12) #12
  %14 = load i32, i32* %10, align 4
  %15 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #12
  %16 = bitcast %"class.mojo::ScopedHandleBase"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %8, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 %14, i32* %18, align 4, !alias.scope !64
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* nonnull %17, %"class.mojo::ScopedHandleBase"* nonnull %5, i32 0) #12
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = call i32 @MojoClose(i32 %19) #12
  br label %23

23:                                               ; preds = %21, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @_ZN4mojo6RemoteIN10spellcheck5mojom14SpellCheckHostEE4BindENS_13PendingRemoteIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* %1, %"class.mojo::PendingRemote"* nonnull %8, %"class.base::SequencedTaskRunner"* %2)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %17) #12
  %24 = bitcast %"class.mojo::ScopedHandleBase"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  %25 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %0, i64 0, i32 0
  %26 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %15, i32* %26, align 4, !alias.scope !67
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* %25, %"class.mojo::ScopedHandleBase"* nonnull %4) #12
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = call i32 @MojoClose(i32 %27) #12
  br label %31

31:                                               ; preds = %23, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN10spellcheck5mojom14SpellCheckHostEE4BindENS_13PendingRemoteIS3_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"*, %"class.mojo::PendingRemote"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #12
  %10 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.271"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.271"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.spellcheck::mojom::SpellCheckHostProxy"*, %"class.spellcheck::mojom::SpellCheckHostProxy"** %17, align 8
  store %"class.spellcheck::mojom::SpellCheckHostProxy"* null, %"class.spellcheck::mojom::SpellCheckHostProxy"** %17, align 8
  %19 = icmp eq %"class.spellcheck::mojom::SpellCheckHostProxy"* %18, null
  br i1 %19, label %52, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.spellcheck::mojom::SpellCheckHostProxy"* %18 to void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)***
  %22 = load void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)**, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)** %22, i64 1
  %24 = load void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)** %23, align 8
  call void %24(%"class.spellcheck::mojom::SpellCheckHostProxy"* nonnull %18) #12
  br label %52

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0
  %27 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %27, %"struct.mojo::internal::PendingRemoteState"* %26, %"class.base::SequencedTaskRunner"* %2) #12
  %28 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.271"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.spellcheck::mojom::SpellCheckHostProxy"*, %"class.spellcheck::mojom::SpellCheckHostProxy"** %29, align 8
  %31 = icmp eq %"class.spellcheck::mojom::SpellCheckHostProxy"* %30, null
  br i1 %31, label %32, label %62

32:                                               ; preds = %25
  %33 = tail call i8* @_Znwm(i64 8) #13
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN10spellcheck5mojom31SpellCheckHostResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = bitcast i8* %33 to %"class.mojo::MessageReceiver"*
  %36 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %27, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %35, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10spellcheck5mojom14SpellCheckHost5Name_E, i64 0, i64 0)) #12
  br i1 %36, label %37, label %62

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = bitcast %"class.mojo::InterfaceEndpointClient"** %38 to %"class.mojo::MessageReceiverWithResponder"**
  %40 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %39, align 8
  %41 = tail call i8* @_Znwm(i64 16) #13
  %42 = bitcast i8* %41 to %"class.spellcheck::mojom::SpellCheckHostProxy"*
  tail call void @_ZN10spellcheck5mojom19SpellCheckHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.spellcheck::mojom::SpellCheckHostProxy"* nonnull %42, %"class.mojo::MessageReceiverWithResponder"* %40) #12
  %43 = ptrtoint i8* %41 to i64
  %44 = load %"class.spellcheck::mojom::SpellCheckHostProxy"*, %"class.spellcheck::mojom::SpellCheckHostProxy"** %29, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.271"* %28 to i64*
  store i64 %43, i64* %45, align 8
  %46 = icmp eq %"class.spellcheck::mojom::SpellCheckHostProxy"* %44, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.spellcheck::mojom::SpellCheckHostProxy"* %44 to void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)***
  %49 = load void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)**, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)** %49, i64 1
  %51 = load void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)*, void (%"class.spellcheck::mojom::SpellCheckHostProxy"*)** %50, align 8
  tail call void %51(%"class.spellcheck::mojom::SpellCheckHostProxy"* nonnull %44) #12
  br label %62

52:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #12
  %53 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe.100", %"class.base::RefCountedThreadSafe.100"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe.100", %"class.base::RefCountedThreadSafe.100"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe.100"* %60 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #12
  br label %62

62:                                               ; preds = %47, %37, %32, %25, %52, %54, %59
  ret void
}

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #1

declare i32 @MojoClose(i32) local_unnamed_addr #1

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #1

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #1

declare void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"*, %"class.mojo::ScopedHandleBase"*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #4

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.558"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !29
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #13, !noalias !70
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !70
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !70
  store i32 %62, i32* %61, align 8, !noalias !70
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to i64*
  store i64 0, i64* %64, align 8, !noalias !70
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !70
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !70
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #12, !range !29
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #12
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #12, !range !29
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, -1
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #12, !range !29
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !29
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !29
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !29
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !73

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !29
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #4

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM18SpellCheckProviderFviRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEbRKNS4_6vectorI16SpellCheckResultNS8_ISE_EEEEEJNS_7WeakPtrIS3_EEiSA_EEEFvbSI_EE7RunOnceEPNS0_13BindStateBaseEbSI_(%"class.base::internal::BindStateBase"*, i1 zeroext, %"class.std::__1::vector.298"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 2
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to i32*
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 3
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.std::__1::basic_string"*
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakReference"*
  %12 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #12
  br i1 %12, label %13, label %49

13:                                               ; preds = %3
  %14 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 1
  %15 = bitcast void (%"class.base::internal::BindStateBase"*)** %14 to %class.SpellCheckProvider**
  %16 = load %class.SpellCheckProvider*, %class.SpellCheckProvider** %15, align 8
  %17 = icmp eq %class.SpellCheckProvider* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.base::internal::BindStateBase"* %5 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %22 = bitcast void ()** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #12
  br i1 %24, label %28, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #12
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  br label %28

28:                                               ; preds = %25, %18
  %29 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %11) #12
  %30 = bitcast void (%"class.base::internal::BindStateBase"*)** %14 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = select i1 %29, i8* %31, i8* null
  %33 = getelementptr inbounds i8, i8* %32, i64 %23
  %34 = bitcast i8* %33 to %class.SpellCheckProvider*
  %35 = and i64 %20, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %28
  %38 = bitcast i8* %33 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = add i64 %20, -1
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = bitcast i8* %41 to void (%class.SpellCheckProvider*, i32, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.298"*)**
  %43 = load void (%class.SpellCheckProvider*, i32, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.298"*)*, void (%class.SpellCheckProvider*, i32, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.298"*)** %42, align 8
  br label %46

44:                                               ; preds = %28
  %45 = inttoptr i64 %20 to void (%class.SpellCheckProvider*, i32, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.298"*)*
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi void (%class.SpellCheckProvider*, i32, %"class.std::__1::basic_string"*, i1, %"class.std::__1::vector.298"*)* [ %43, %37 ], [ %45, %44 ]
  %48 = load i32, i32* %8, align 4
  call void %47(%class.SpellCheckProvider* %34, i32 %48, %"class.std::__1::basic_string"* dereferenceable(24) %10, i1 zeroext %1, %"class.std::__1::vector.298"* dereferenceable(24) %2) #12
  br label %49

49:                                               ; preds = %3, %13, %46
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM18SpellCheckProviderFviRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEEbRKNS3_6vectorI16SpellCheckResultNS7_ISD_EEEEEJNS_7WeakPtrIS2_EEiS9_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2, i32 1
  %5 = bitcast void ()** %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast void ()** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #13
  br label %12

12:                                               ; preds = %3, %9
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %14) #12
  %15 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #13
  br label %16

16:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIM18SpellCheckProviderFviRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEbRKNS4_6vectorI16SpellCheckResultNS8_ISE_EEEEEJNS_7WeakPtrIS3_EEiSA_EEEEEbPKNS0_13BindStateBaseENSO_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %class.SpellCheckProvider**
  %9 = load %class.SpellCheckProvider*, %class.SpellCheckProvider** %8, align 8
  %10 = icmp ne %class.SpellCheckProvider* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2EEEEJN4base7WeakPtrI18SpellCheckProviderEEiNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEC2IJLm0ELm1ELm2EEJS6_iSC_EJEJEJS6_RiRKSC_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENSJ_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl.566"*, %"class.base::WeakPtr.297"* dereferenceable(16), i32* dereferenceable(4), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__tuple_impl.566", %"struct.std::__1::__tuple_impl.566"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.base::WeakPtr.297", %"class.base::WeakPtr.297"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %5, %"class.base::internal::WeakReference"* dereferenceable(8) %6) #12
  %7 = getelementptr inbounds %"struct.std::__1::__tuple_impl.566", %"struct.std::__1::__tuple_impl.566"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::WeakPtr.297", %"class.base::WeakPtr.297"* %1, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__tuple_impl.566", %"struct.std::__1::__tuple_impl.566"* %0, i64 0, i32 1, i32 0
  %11 = load i32, i32* %2, align 4
  store i32 %11, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.std::__1::__tuple_impl.566", %"struct.std::__1::__tuple_impl.566"* %0, i64 0, i32 2
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %4
  %18 = bitcast %"class.std::__1::__tuple_leaf.569"* %12 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #12
  br label %195

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i16*, i16** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = icmp ult i64 %24, 11
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::__tuple_leaf.569"* %12 to i16*
  %28 = trunc i64 %24 to i8
  %29 = bitcast %"class.std::__1::__tuple_leaf.569"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  store i8 %28, i8* %30, align 1
  br label %48

31:                                               ; preds = %20
  %32 = icmp ugt i64 %24, 9223372036854775791
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::__tuple_leaf.569"* %12 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %34) #14
  unreachable

35:                                               ; preds = %31
  %36 = add nuw nsw i64 %24, 8
  %37 = and i64 %36, -8
  %38 = icmp slt i64 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @abort() #14
  unreachable

40:                                               ; preds = %35
  %41 = shl i64 %37, 1
  %42 = tail call i8* @_Znwm(i64 %41) #13
  %43 = bitcast i8* %42 to i16*
  %44 = bitcast %"class.std::__1::__tuple_leaf.569"* %12 to i8**
  store i8* %42, i8** %44, align 8
  %45 = or i64 %37, -9223372036854775808
  %46 = getelementptr inbounds %"struct.std::__1::__tuple_impl.566", %"struct.std::__1::__tuple_impl.566"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__tuple_impl.566", %"struct.std::__1::__tuple_impl.566"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %47, align 8
  br label %48

48:                                               ; preds = %40, %26
  %49 = phi i16* [ %27, %26 ], [ %43, %40 ]
  %50 = add nuw nsw i64 %24, 1
  %51 = add i64 %24, 1
  %52 = icmp ult i64 %51, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %48
  %54 = add i64 %24, 1
  %55 = getelementptr i16, i16* %49, i64 %54
  %56 = getelementptr i16, i16* %22, i64 %54
  %57 = icmp ult i16* %49, %56
  %58 = icmp ult i16* %22, %55
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %51, -16
  %62 = sub i64 %50, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %49, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %49, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !74
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !74
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !77, !noalias !74
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !77, !noalias !74
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %49, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !74
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !74
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !77, !noalias !74
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !77, !noalias !74
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %49, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !74
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !74
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !77, !noalias !74
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !77, !noalias !74
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %49, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !74
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !74
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !77, !noalias !74
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !77, !noalias !74
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !79

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %49, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !74
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !74
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !77, !noalias !74
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !77, !noalias !74
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !80

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %51, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %48
  %143 = phi i64 [ %50, %53 ], [ %50, %48 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %48 ], [ %63, %140 ]
  %145 = phi i16* [ %49, %53 ], [ %49, %48 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !81

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !82

195:                                              ; preds = %160, %165, %140, %17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #4

declare void @_ZN5blink9WebStringC1Ev(%"class.blink::WebString"*) unnamed_addr #1

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSEOS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink9WebString9FromUTF16ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEE(%"class.blink::WebString"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink9WebStringENS_9allocatorIS2_EEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.35"*, %"class.blink::WebString"*, %"class.blink::WebString"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.blink::WebString"* %1 to i64
  %5 = ptrtoint %"class.blink::WebString"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.blink::WebString"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.35"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.blink::WebString"*
  br i1 %15, label %59, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.blink::WebString"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %1, i64 %22
  %25 = select i1 %23, %"class.blink::WebString"* %24, %"class.blink::WebString"* %2
  %26 = icmp eq %"class.blink::WebString"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"class.blink::WebString"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"class.blink::WebString"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"* %28, %"class.blink::WebString"* dereferenceable(8) %29) #12
  %31 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %29, i64 1
  %32 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %28, i64 1
  %33 = icmp eq %"class.blink::WebString"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"class.blink::WebString"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %51

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"class.blink::WebString"* %25, %2
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"class.blink::WebString"*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %"class.blink::WebString"* [ %45, %41 ], [ %40, %39 ]
  %43 = phi %"class.blink::WebString"* [ %44, %41 ], [ %24, %39 ]
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %42, %"class.blink::WebString"* dereferenceable(8) %43) #12
  %44 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %43, i64 1
  %45 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %42, i64 1
  %46 = icmp eq %"class.blink::WebString"* %44, %2
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %"class.blink::WebString"* %45 to i64
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %37, %36 ], [ %48, %47 ]
  store i64 %50, i64* %19, align 8
  br label %113

51:                                               ; preds = %34
  %52 = load %"class.blink::WebString"*, %"class.blink::WebString"** %18, align 8
  %53 = icmp eq %"class.blink::WebString"* %52, %35
  br i1 %53, label %58, label %54

54:                                               ; preds = %51, %54
  %55 = phi %"class.blink::WebString"* [ %56, %54 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %55, i64 -1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %56) #12
  %57 = icmp eq %"class.blink::WebString"* %56, %35
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %51
  store %"class.blink::WebString"* %35, %"class.blink::WebString"** %18, align 8
  br label %113

59:                                               ; preds = %3
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %59
  %62 = inttoptr i64 %12 to i8*
  %63 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %64 = load %"class.blink::WebString"*, %"class.blink::WebString"** %63, align 8
  %65 = icmp eq %"class.blink::WebString"* %64, %16
  br i1 %65, label %73, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"class.blink::WebString"* [ %68, %66 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %67, i64 -1
  tail call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* %68) #12
  %69 = icmp eq %"class.blink::WebString"* %68, %16
  br i1 %69, label %70, label %66

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::vector.35"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i8* [ %72, %70 ], [ %62, %61 ]
  store %"class.blink::WebString"* %16, %"class.blink::WebString"** %63, align 8
  tail call void @_ZdlPv(i8* %74) #13
  %75 = bitcast %"class.std::__1::vector.35"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #12
  br label %76

76:                                               ; preds = %59, %73
  %77 = phi i64 [ %10, %59 ], [ 0, %73 ]
  %78 = icmp ugt i64 %7, 2305843009213693951
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::vector.35"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #14
  unreachable

81:                                               ; preds = %76
  %82 = ashr exact i64 %77, 3
  %83 = icmp ult i64 %82, 1152921504606846975
  br i1 %83, label %84, label %91

84:                                               ; preds = %81
  %85 = ashr exact i64 %77, 2
  %86 = icmp ult i64 %85, %7
  br i1 %86, label %91, label %87

87:                                               ; preds = %84
  %88 = icmp ugt i64 %85, 2305843009213693951
  br i1 %88, label %89, label %91

89:                                               ; preds = %87
  %90 = bitcast %"class.std::__1::vector.35"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %90) #14
  unreachable

91:                                               ; preds = %84, %81, %87
  %92 = phi i64 [ %85, %87 ], [ 2305843009213693951, %81 ], [ %7, %84 ]
  %93 = shl i64 %92, 3
  %94 = tail call i8* @_Znwm(i64 %93) #13
  %95 = bitcast i8* %94 to %"class.blink::WebString"*
  %96 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %97 = bitcast %"class.blink::WebString"** %96 to i8**
  store i8* %94, i8** %97, align 8
  %98 = bitcast %"class.std::__1::vector.35"* %0 to i8**
  store i8* %94, i8** %98, align 8
  %99 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %95, i64 %92
  store %"class.blink::WebString"* %99, %"class.blink::WebString"** %8, align 8
  %100 = bitcast %"class.blink::WebString"** %96 to i64*
  %101 = ptrtoint i8* %94 to i64
  %102 = icmp eq %"class.blink::WebString"* %1, %2
  br i1 %102, label %111, label %103

103:                                              ; preds = %91, %103
  %104 = phi %"class.blink::WebString"* [ %107, %103 ], [ %95, %91 ]
  %105 = phi %"class.blink::WebString"* [ %106, %103 ], [ %1, %91 ]
  tail call void @_ZN5blink9WebStringC1ERKS0_(%"class.blink::WebString"* %104, %"class.blink::WebString"* dereferenceable(8) %105) #12
  %106 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %105, i64 1
  %107 = getelementptr inbounds %"class.blink::WebString", %"class.blink::WebString"* %104, i64 1
  %108 = icmp eq %"class.blink::WebString"* %106, %2
  br i1 %108, label %109, label %103

109:                                              ; preds = %103
  %110 = ptrtoint %"class.blink::WebString"* %107 to i64
  br label %111

111:                                              ; preds = %91, %109
  %112 = phi i64 [ %101, %91 ], [ %110, %109 ]
  store i64 %112, i64* %100, align 8
  br label %113

113:                                              ; preds = %49, %58, %111
  ret void
}

declare dereferenceable(8) %"class.blink::WebString"* @_ZN5blink9WebStringaSERKS0_(%"class.blink::WebString"*, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS8_PvEEEE(%"class.std::__1::unique_ptr.559"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !29
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.16"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.559"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.559", %"class.std::__1::unique_ptr.559"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.19"** %98 to %"class.std::__1::__compressed_pair.16"**
  store %"class.std::__1::__compressed_pair.16"* %30, %"class.std::__1::__compressed_pair.16"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.559", %"class.std::__1::unique_ptr.559"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJRKiEEENS_11__wrap_iterIPiEENS7_IPS5_EEDpOT_(%"class.std::__1::vector"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  %16 = load i32, i32* %2, align 4
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i32 %16, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !83
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !83
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !86, !noalias !83
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !86, !noalias !83
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !83
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !83
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !86, !noalias !83
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !86, !noalias !83
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !83
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !83
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !86, !noalias !83
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !86, !noalias !83
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !83
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !83
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !86, !noalias !83
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !86, !noalias !83
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !88

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !83
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !83
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !86, !noalias !83
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !86, !noalias !83
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !89

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i32* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  %149 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %24, i1 false) #12
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i32* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i32* [ %154, %150 ], [ %41, %39 ]
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds i32, i32* %152, i64 1
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp ult i32* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !90

157:                                              ; preds = %142, %145
  store i32 %16, i32* %1, align 4
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #12
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i32** %7 to i64*
  %167 = bitcast %"class.std::__1::vector"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #14
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  store i32* null, i32** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.7"** %165 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %159, %"class.std::__1::__compressed_pair.4"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 1
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 2
  store i32* null, i32** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.7"** %165 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %159, %"class.std::__1::__compressed_pair.4"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 4611686018427387903
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #14
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 4611686018427387903, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 2
  %200 = tail call i8* @_Znwm(i64 %199) #13
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i32* [ %201, %196 ], [ null, %185 ]
  store i32* %205, i32** %161, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %203
  store i32* %206, i32** %163, align 8
  store i32* %206, i32** %162, align 8
  %207 = getelementptr inbounds i32, i32* %205, i64 %204
  store i32* %207, i32** %164, align 8
  call void @_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJRKiEEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, i32* dereferenceable(4) %2)
  %208 = load i32*, i32** %162, align 8
  %209 = load i32*, i32** %6, align 8
  %210 = ptrtoint i32* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 2
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i32, i32* %208, i64 %213
  store i32* %214, i32** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i32* %214 to i8*
  %218 = bitcast i32* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #12
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i32*, i32** %7, align 8
  %221 = icmp eq i32* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i32* %220 to i64
  %224 = bitcast i32** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i32*, i32** %163, align 8
  %228 = getelementptr i32, i32* %220, i64 -1
  %229 = ptrtoint i32* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 2
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i32* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i32* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i32, i32* %237, align 4
  store i32 %239, i32* %236, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 1
  %241 = load i32*, i32** %163, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 1
  store i32* %242, i32** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !91

245:                                              ; preds = %235, %226
  %246 = phi i32* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i32* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i32* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 12
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i32* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i32* [ %266, %250 ], [ %248, %245 ]
  %253 = load i32, i32* %252, align 4
  store i32 %253, i32* %251, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32*, i32** %163, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 1
  store i32* %256, i32** %163, align 8
  %257 = load i32, i32* %254, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 2
  %259 = load i32*, i32** %163, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 1
  store i32* %260, i32** %163, align 8
  %261 = load i32, i32* %258, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 3
  %263 = load i32*, i32** %163, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 1
  store i32* %264, i32** %163, align 8
  %265 = load i32, i32* %262, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 4
  %267 = load i32*, i32** %163, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  store i32* %268, i32** %163, align 8
  %269 = icmp eq i32* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i32* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i32* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i32** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i32** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i32** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i32*
  %287 = inttoptr i64 %278 to i32*
  %288 = icmp eq i32* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i32, i32* %287, i64 -1
  %291 = ptrtoint i32* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 2
  %294 = xor i64 %293, -1
  %295 = getelementptr i32, i32* %287, i64 %294
  store i32* %295, i32** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #13
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #12
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i32* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i32* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJRKiEEEvDpOT_(%"struct.std::__1::__split_buffer"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ugt i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i32* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = ptrtoint i32* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i32* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %12, i64 %25, i1 false) #12
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i32* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32* %33, i32** %3, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32* %34, i32** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i32** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 1
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #14
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 2
  %47 = tail call i8* @_Znwm(i64 %46) #13
  %48 = bitcast i8* %47 to i32*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %45
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %41
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %11 to i64
  %55 = ptrtoint i32* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds i32, i32* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -4
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = and i64 %41, -4
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -4
  %69 = lshr i64 %68, 2
  %70 = and i64 %68, -4
  %71 = add i64 %66, %70
  %72 = add i64 %71, 4
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i32, i32* %11, i64 %74
  %76 = bitcast i32* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 9223372036854775800
  %82 = getelementptr i32, i32* %50, i64 %81
  %83 = getelementptr i32, i32* %11, i64 %81
  %84 = add nsw i64 %81, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 24
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i32, i32* %50, i64 %92
  %95 = getelementptr i32, i32* %11, i64 %92
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !92
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !92
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !95, !noalias !92
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !95, !noalias !92
  %104 = or i64 %92, 8
  %105 = getelementptr i32, i32* %50, i64 %104
  %106 = getelementptr i32, i32* %11, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !92
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !92
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !95, !noalias !92
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !95, !noalias !92
  %115 = or i64 %92, 16
  %116 = getelementptr i32, i32* %50, i64 %115
  %117 = getelementptr i32, i32* %11, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !92
  %120 = getelementptr i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !92
  %123 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !95, !noalias !92
  %124 = getelementptr i32, i32* %116, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !95, !noalias !92
  %126 = or i64 %92, 24
  %127 = getelementptr i32, i32* %50, i64 %126
  %128 = getelementptr i32, i32* %11, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !92
  %131 = getelementptr i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !92
  %134 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !95, !noalias !92
  %135 = getelementptr i32, i32* %127, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !95, !noalias !92
  %137 = add i64 %92, 32
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !97

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i32, i32* %50, i64 %144
  %147 = getelementptr i32, i32* %11, i64 %144
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !92
  %150 = getelementptr i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !92
  %153 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !95, !noalias !92
  %154 = getelementptr i32, i32* %146, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4, !alias.scope !95, !noalias !92
  %156 = add i64 %144, 8
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !98

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i32* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i32* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i32* %162 to i64
  %165 = and i64 %41, -4
  %166 = add i64 %56, %165
  %167 = add i64 %166, -4
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 2
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i32* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i32* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %176, align 4
  %180 = getelementptr inbounds i32, i32* %176, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !99

184:                                              ; preds = %175, %161
  %185 = phi i32* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i32* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 28 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i32* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i32* [ %214, %188 ], [ %186, %184 ]
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %189, i64 2
  %196 = getelementptr inbounds i32, i32* %190, i64 2
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %189, i64 3
  %199 = getelementptr inbounds i32, i32* %190, i64 3
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %189, i64 4
  %202 = getelementptr inbounds i32, i32* %190, i64 4
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %189, i64 5
  %205 = getelementptr inbounds i32, i32* %190, i64 5
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %189, i64 6
  %208 = getelementptr inbounds i32, i32* %190, i64 6
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %189, i64 7
  %211 = getelementptr inbounds i32, i32* %190, i64 7
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %189, i64 8
  %214 = getelementptr inbounds i32, i32* %190, i64 8
  %215 = icmp eq i32* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !100

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i32* %58 to i64
  %218 = load i32*, i32** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i32* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i32** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i32** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i32* %220, null
  %225 = inttoptr i64 %221 to i32*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i32* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #13
  %228 = load i32*, i32** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i32* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %230, align 4
  %232 = load i32*, i32** %3, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  store i32* %233, i32** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #14
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #14
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #13
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !101
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !101
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !104, !noalias !101
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !104, !noalias !101
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !101
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !101
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !104, !noalias !101
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !104, !noalias !101
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !101
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !101
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !104, !noalias !101
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !104, !noalias !101
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !101
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !101
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !104, !noalias !101
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !104, !noalias !101
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !106

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !101
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !101
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !104, !noalias !101
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !104, !noalias !101
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !107

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !108

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !109

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !110

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !111

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !112

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !114
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !114
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !117, !noalias !114
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !117, !noalias !114
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !114
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !114
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !117, !noalias !114
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !117, !noalias !114
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !114
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !114
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !117, !noalias !114
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !117, !noalias !114
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !114
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !114
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !117, !noalias !114
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !117, !noalias !114
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !119

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !114
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !114
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !117, !noalias !114
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !117, !noalias !114
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !120

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !121

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !122

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #13
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!4 = distinct !{!4, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!5 = distinct !{!5, !6, !"_ZN4mojo15PendingReceiverIN10spellcheck5mojom14SpellCheckHostEE8PassPipeEv: argument 0"}
!6 = distinct !{!6, !"_ZN4mojo15PendingReceiverIN10spellcheck5mojom14SpellCheckHostEE8PassPipeEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!9 = distinct !{!9, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK4base14WeakPtrFactoryI18SpellCheckProviderE10GetWeakPtrEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4base14WeakPtrFactoryI18SpellCheckProviderE10GetWeakPtrEv"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM18SpellCheckProviderFviRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEbRKNS4_6vectorI16SpellCheckResultNS8_ISE_EEEEEJNS_7WeakPtrIS3_EERiSC_EEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM18SpellCheckProviderFviRKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEEbRKNS4_6vectorI16SpellCheckResultNS8_ISE_EEEEEJNS_7WeakPtrIS3_EERiSC_EEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceIM18SpellCheckProviderFviRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEbRKNS2_6vectorI16SpellCheckResultNS6_ISC_EEEEEJNS_7WeakPtrIS1_EERiSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceIM18SpellCheckProviderFviRKNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEbRKNS2_6vectorI16SpellCheckResultNS6_ISC_EEEEEJNS_7WeakPtrIS1_EERiSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_"}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.isvectorized", i32 1}
!25 = distinct !{!25, !26}
!26 = !{!"llvm.loop.unroll.disable"}
!27 = distinct !{!27, !26}
!28 = distinct !{!28, !24}
!29 = !{i64 0, i64 65}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK5blink9WebString5Utf16Ev: argument 0"}
!32 = distinct !{!32, !"_ZNK5blink9WebString5Utf16Ev"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK5blink9WebString5Utf16Ev: argument 0"}
!35 = distinct !{!35, !"_ZNK5blink9WebString5Utf16Ev"}
!36 = !{i8 0, i8 2}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !24}
!43 = distinct !{!43, !26}
!44 = distinct !{!44, !26}
!45 = distinct !{!45, !24}
!46 = !{!47}
!47 = distinct !{!47, !48}
!48 = distinct !{!48, !"LVerDomain"}
!49 = !{!50}
!50 = distinct !{!50, !48}
!51 = distinct !{!51, !24}
!52 = distinct !{!52, !26}
!53 = distinct !{!53, !26}
!54 = distinct !{!54, !24}
!55 = !{!56}
!56 = distinct !{!56, !57}
!57 = distinct !{!57, !"LVerDomain"}
!58 = !{!59}
!59 = distinct !{!59, !57}
!60 = distinct !{!60, !24}
!61 = distinct !{!61, !26}
!62 = distinct !{!62, !26}
!63 = distinct !{!63, !24}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!66 = distinct !{!66, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!69 = distinct !{!69, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSO_IJEEEEEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!72 = distinct !{!72, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN5blink25WebTextCheckingCompletionENS_14default_deleteIS4_EEEEEENS_22__unordered_map_hasherIiS8_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSO_IJEEEEEENS2_INS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISV_EEEEEEmOT_DpOT0_"}
!73 = distinct !{!73, !26}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !24}
!80 = distinct !{!80, !26}
!81 = distinct !{!81, !26}
!82 = distinct !{!82, !24}
!83 = !{!84}
!84 = distinct !{!84, !85}
!85 = distinct !{!85, !"LVerDomain"}
!86 = !{!87}
!87 = distinct !{!87, !85}
!88 = distinct !{!88, !24}
!89 = distinct !{!89, !26}
!90 = distinct !{!90, !24}
!91 = distinct !{!91, !26}
!92 = !{!93}
!93 = distinct !{!93, !94}
!94 = distinct !{!94, !"LVerDomain"}
!95 = !{!96}
!96 = distinct !{!96, !94}
!97 = distinct !{!97, !24}
!98 = distinct !{!98, !26}
!99 = distinct !{!99, !26}
!100 = distinct !{!100, !24}
!101 = !{!102}
!102 = distinct !{!102, !103}
!103 = distinct !{!103, !"LVerDomain"}
!104 = !{!105}
!105 = distinct !{!105, !103}
!106 = distinct !{!106, !24}
!107 = distinct !{!107, !26}
!108 = distinct !{!108, !26}
!109 = distinct !{!109, !24}
!110 = distinct !{!110, !24}
!111 = distinct !{!111, !26}
!112 = distinct !{!112, !113, !24}
!113 = !{!"llvm.loop.unroll.runtime.disable"}
!114 = !{!115}
!115 = distinct !{!115, !116}
!116 = distinct !{!116, !"LVerDomain"}
!117 = !{!118}
!118 = distinct !{!118, !116}
!119 = distinct !{!119, !24}
!120 = distinct !{!120, !26}
!121 = distinct !{!121, !26}
!122 = distinct !{!122, !24}
