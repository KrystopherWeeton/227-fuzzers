; ModuleID = '../../v8/src/compiler/loop-unrolling.cc'
source_filename = "../../v8/src/compiler/loop-unrolling.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::ZoneUnorderedSet" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.21", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16", %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::__hash_node_base" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.v8::internal::ZoneAllocator.18" }
%"class.v8::internal::ZoneAllocator.18" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { float }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.24" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25", %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.v8::internal::ZoneAllocator.27" }
%"class.v8::internal::ZoneAllocator.27" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.9" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::compiler::SourcePositionTable" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::SourcePositionTable::Decorator"*, %"class.v8::internal::SourcePosition", %"class.v8::internal::compiler::NodeAuxData" }
%"class.v8::internal::compiler::SourcePositionTable::Decorator" = type opaque
%"class.v8::internal::SourcePosition" = type { i64 }
%"class.v8::internal::compiler::NodeAuxData" = type { %"class.v8::internal::ZoneVector.28" }
%"class.v8::internal::ZoneVector.28" = type { %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.v8::internal::SourcePosition"*, %"class.v8::internal::SourcePosition"*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.v8::internal::SourcePosition"* }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.v8::internal::ZoneAllocator.34" }
%"class.v8::internal::ZoneAllocator.34" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::NodeOriginTable" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::NodeOriginTable::Decorator"*, %"class.v8::internal::compiler::NodeOrigin", i8*, %"class.v8::internal::compiler::NodeAuxData.35" }
%"class.v8::internal::compiler::NodeOriginTable::Decorator" = type opaque
%"class.v8::internal::compiler::NodeOrigin" = type { i8*, i8*, i32, i64 }
%"class.v8::internal::compiler::NodeAuxData.35" = type { %"class.v8::internal::ZoneVector.36" }
%"class.v8::internal::ZoneVector.36" = type { %"class.std::__1::vector.37" }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.v8::internal::compiler::NodeOrigin"*, %"class.v8::internal::compiler::NodeOrigin"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40", %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.v8::internal::compiler::NodeOrigin"* }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.v8::internal::ZoneAllocator.42" }
%"class.v8::internal::ZoneAllocator.42" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneVector.43" = type { %"class.std::__1::vector.44" }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.v8::internal::compiler::Node"** }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.v8::internal::ZoneAllocator.49" }
%"class.v8::internal::ZoneAllocator.49" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::NodeCopier" = type <{ %"class.v8::internal::compiler::NodeMarker", %"class.v8::internal::ZoneVector.43"*, i32, [4 x i8] }>
%"class.v8::internal::compiler::NodeMarker" = type { %"class.v8::internal::compiler::NodeMarkerBase" }
%"class.v8::internal::compiler::NodeMarkerBase" = type { i32, i32 }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"class.v8::internal::compiler::Node"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN2v88internal8compiler10NodeCopier9CopyNodesINSt3__121__hash_const_iteratorIPNS4_11__hash_nodeIPNS1_4NodeEPvEEEEEEvPNS1_5GraphEPNS0_4ZoneES8_NS_4base14iterator_rangeIT_EEPNS1_19SourcePositionTableEPNS1_15NodeOriginTableE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"index < node->op()->EffectInputCount()\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"copy nodes\00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler10UnrollLoopEPNS1_4NodeEPNS0_16ZoneUnorderedSetIS3_NS_4base4hashIS3_EENSt3__18equal_toIS3_EEEEjPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS0_4ZoneEPNS1_19SourcePositionTableEPNS1_15NodeOriginTableE(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneUnorderedSet"* readonly, i32, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::NodeOriginTable"*) local_unnamed_addr #0 {
  %9 = alloca %"class.v8::internal::ZoneVector.43", align 8
  %10 = alloca %"class.v8::internal::compiler::NodeCopier", align 8
  %11 = icmp eq %"class.v8::internal::ZoneUnorderedSet"* %1, null
  br i1 %11, label %973, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 251658240
  %16 = icmp eq i32 %15, 251658240
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  %18 = lshr i32 %14, 24
  %19 = and i32 %18, 15
  br label %27

20:                                               ; preds = %12
  %21 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %22 = add i64 %21, 32
  %23 = inttoptr i64 %22 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %24 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %23, align 8
  %25 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %17, %20
  %28 = phi i32 [ %19, %17 ], [ %26, %20 ]
  %29 = icmp slt i32 %28, 2
  br i1 %29, label %973, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = mul i32 %2, 50
  %35 = add i32 %34, 50
  %36 = udiv i32 %35, %33
  %37 = icmp ult i32 %36, 7
  %38 = select i1 %37, i32 %36, i32 7
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %973, label %40

40:                                               ; preds = %30
  %41 = add nuw nsw i32 %38, 1
  %42 = mul i32 %41, %33
  %43 = bitcast %"class.v8::internal::ZoneVector.43"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #5
  %44 = ptrtoint %"class.v8::internal::Zone"* %5 to i64
  %45 = getelementptr inbounds %"class.v8::internal::ZoneVector.43", %"class.v8::internal::ZoneVector.43"* %9, i64 0, i32 0, i32 0, i32 2, i32 1
  %46 = bitcast %"struct.std::__1::__compressed_pair_elem.48"* %45 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #5
  store i64 %44, i64* %46, align 8
  %47 = bitcast %"class.v8::internal::compiler::NodeCopier"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #5
  %48 = getelementptr inbounds %"class.v8::internal::compiler::NodeCopier", %"class.v8::internal::compiler::NodeCopier"* %10, i64 0, i32 0, i32 0
  call void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"* nonnull %48, %"class.v8::internal::compiler::Graph"* %3, i32 %42) #5
  %49 = getelementptr inbounds %"class.v8::internal::compiler::NodeCopier", %"class.v8::internal::compiler::NodeCopier"* %10, i64 0, i32 1
  store %"class.v8::internal::ZoneVector.43"* %9, %"class.v8::internal::ZoneVector.43"** %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::NodeCopier", %"class.v8::internal::compiler::NodeCopier"* %10, i64 0, i32 2
  store i32 %38, i32* %50, align 8
  %51 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %4) #5
  %52 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %3, %"class.v8::internal::compiler::Operator"* %51, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #5
  %53 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  call void @_ZN2v88internal8compiler10NodeCopier9CopyNodesINSt3__121__hash_const_iteratorIPNS4_11__hash_nodeIPNS1_4NodeEPvEEEEEEvPNS1_5GraphEPNS0_4ZoneES8_NS_4base14iterator_rangeIT_EEPNS1_19SourcePositionTableEPNS1_15NodeOriginTableE(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Graph"* %3, %"class.v8::internal::Zone"* %5, %"class.v8::internal::compiler::Node"* %52, %"struct.std::__1::__hash_node_base"* %54, %"struct.std::__1::__hash_node_base"* null, %"class.v8::internal::compiler::SourcePositionTable"* %6, %"class.v8::internal::compiler::NodeOriginTable"* %7)
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %0, i64 0, i32 4
  %56 = bitcast %"struct.v8::internal::compiler::Node::Use"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %40
  %60 = zext i32 %41 to i64
  %61 = shl nuw nsw i32 %41, 3
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 2
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %5, i64 0, i32 3
  %65 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.v8::internal::ZoneUnorderedSet", %"class.v8::internal::ZoneUnorderedSet"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = add nuw nsw i32 %38, 2
  %68 = shl nuw nsw i32 %67, 3
  %69 = zext i32 %68 to i64
  %70 = zext i32 %38 to i64
  br label %81

71:                                               ; preds = %499, %40
  %72 = ptrtoint %"class.v8::internal::compiler::Node"* %0 to i64
  %73 = add i64 %72, 32
  %74 = inttoptr i64 %73 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %75 = add nsw i32 %38, -1
  %76 = icmp eq i32 %75, 0
  %77 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"**
  %78 = inttoptr i64 %73 to i64*
  %79 = bitcast %"class.v8::internal::compiler::Node"* %0 to %"struct.v8::internal::compiler::Node::Use"*
  %80 = inttoptr i64 %73 to %"struct.v8::internal::compiler::Node::Use"**
  br label %503

81:                                               ; preds = %59, %499
  %82 = phi i64 [ %57, %59 ], [ %501, %499 ]
  %83 = inttoptr i64 %82 to %"struct.v8::internal::compiler::Node::Use"*
  %84 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %83, i64 1
  %85 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %83, i64 0, i32 2
  %86 = load i32, i32* %85, align 8
  %87 = lshr i32 %86, 1
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %84, i64 %88
  %90 = and i32 %86, 1
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %81
  %93 = bitcast %"struct.v8::internal::compiler::Node::Use"* %89 to %"class.v8::internal::compiler::Node"*
  br label %97

94:                                               ; preds = %81
  %95 = bitcast %"struct.v8::internal::compiler::Node::Use"* %89 to %"class.v8::internal::compiler::Node"**
  %96 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %95, align 8
  br label %97

97:                                               ; preds = %92, %94
  %98 = phi %"class.v8::internal::compiler::Node"* [ %93, %92 ], [ %96, %94 ]
  %99 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %98, i64 0, i32 0
  %100 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %100, i64 0, i32 2
  %102 = load i16, i16* %101, align 8
  switch i16 %102, label %499 [
    i16 2, label %103
    i16 52, label %263
  ]

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %98, i64 0, i32 3
  %105 = load i32, i32* %104, align 4
  %106 = and i32 %105, 251658240
  %107 = icmp eq i32 %106, 251658240
  %108 = ptrtoint %"class.v8::internal::compiler::Node"* %98 to i64
  %109 = add i64 %108, 32
  br i1 %107, label %110, label %114

110:                                              ; preds = %103
  %111 = inttoptr i64 %109 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, 16
  br label %114

114:                                              ; preds = %103, %110
  %115 = phi i64 [ %113, %110 ], [ %109, %103 ]
  %116 = inttoptr i64 %115 to %"class.v8::internal::compiler::Node"**
  %117 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %116, align 8
  %118 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %117, i64 0, i32 0
  %119 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %119, i64 0, i32 2
  %121 = load i16, i16* %120, align 8
  %122 = icmp eq i16 %121, 521
  br i1 %122, label %224, label %499

123:                                              ; preds = %258
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %117, i64 0, i32 4
  %125 = bitcast %"struct.v8::internal::compiler::Node::Use"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %499, label %128

128:                                              ; preds = %123
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %117, i64 0, i32 3
  %130 = ptrtoint %"class.v8::internal::compiler::Node"* %117 to i64
  %131 = add i64 %130, 32
  %132 = inttoptr i64 %131 to i64*
  br label %133

133:                                              ; preds = %128, %214
  %134 = phi i64 [ %216, %214 ], [ %126, %128 ]
  %135 = inttoptr i64 %134 to %"struct.v8::internal::compiler::Node::Use"*
  %136 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %135, i64 1
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %135, i64 0, i32 2
  %138 = load i32, i32* %137, align 8
  %139 = lshr i32 %138, 1
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %136, i64 %140
  %142 = and i32 %138, 1
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %133
  %145 = bitcast %"struct.v8::internal::compiler::Node::Use"* %141 to %"class.v8::internal::compiler::Node"*
  br label %149

146:                                              ; preds = %133
  %147 = bitcast %"struct.v8::internal::compiler::Node::Use"* %141 to %"class.v8::internal::compiler::Node"**
  %148 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %147, align 8
  br label %149

149:                                              ; preds = %146, %144
  %150 = phi %"class.v8::internal::compiler::Node"* [ %145, %144 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %150, i64 0, i32 0
  %152 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %151, align 8
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %152, i64 0, i32 2
  %154 = load i16, i16* %153, align 8
  %155 = icmp eq i16 %154, 36
  br i1 %155, label %156, label %214

156:                                              ; preds = %149
  %157 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %118, align 8
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %157, i64 0, i32 6
  %159 = load i32, i32* %158, align 8
  %160 = icmp sgt i32 %159, 0
  br i1 %160, label %161, label %261, !prof !2

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %157, i64 0, i32 5
  %163 = load i32, i32* %162, align 4
  %164 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %157) #5
  %165 = zext i1 %164 to i32
  %166 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %118, align 8
  %167 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %166) #5
  %168 = zext i1 %167 to i32
  %169 = add i32 %163, %165
  %170 = add i32 %169, %168
  %171 = load i32, i32* %129, align 4
  %172 = and i32 %171, 251658240
  %173 = icmp eq i32 %172, 251658240
  br i1 %173, label %174, label %177

174:                                              ; preds = %161
  %175 = load i64, i64* %132, align 8
  %176 = add i64 %175, 16
  br label %177

177:                                              ; preds = %161, %174
  %178 = phi i64 [ %176, %174 ], [ %131, %161 ]
  %179 = inttoptr i64 %178 to %"class.v8::internal::compiler::Node"**
  %180 = sext i32 %170 to i64
  %181 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %179, i64 %180
  %182 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %182, i64 0, i32 0
  %184 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %183, align 8
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %184, i64 0, i32 6
  %186 = load i32, i32* %185, align 8
  %187 = icmp sgt i32 %186, 0
  br i1 %187, label %188, label %262, !prof !2

188:                                              ; preds = %177
  %189 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %184, i64 0, i32 5
  %190 = load i32, i32* %189, align 4
  %191 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %184) #5
  %192 = zext i1 %191 to i32
  %193 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %183, align 8
  %194 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %193) #5
  %195 = zext i1 %194 to i32
  %196 = add i32 %190, %192
  %197 = add i32 %196, %195
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %182, i64 0, i32 3
  %199 = load i32, i32* %198, align 4
  %200 = and i32 %199, 251658240
  %201 = icmp eq i32 %200, 251658240
  %202 = ptrtoint %"class.v8::internal::compiler::Node"* %182 to i64
  %203 = add i64 %202, 32
  br i1 %201, label %204, label %208

204:                                              ; preds = %188
  %205 = inttoptr i64 %203 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = add i64 %206, 16
  br label %208

208:                                              ; preds = %188, %204
  %209 = phi i64 [ %207, %204 ], [ %203, %188 ]
  %210 = inttoptr i64 %209 to %"class.v8::internal::compiler::Node"**
  %211 = sext i32 %197 to i64
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %210, i64 %211
  %213 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %212, align 8
  br label %218

214:                                              ; preds = %218, %149
  %215 = inttoptr i64 %134 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %499, label %133

218:                                              ; preds = %208, %218
  %219 = phi i32 [ 0, %208 ], [ %222, %218 ]
  %220 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %150, i32 %219) #5
  %221 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %213, i32 %219) #5
  call void @_ZN2v88internal8compiler4Node11ReplaceUsesEPS2_(%"class.v8::internal::compiler::Node"* %220, %"class.v8::internal::compiler::Node"* %221) #5
  %222 = add nuw i32 %219, 1
  %223 = icmp ult i32 %222, %38
  br i1 %223, label %218, label %214

224:                                              ; preds = %114, %258
  %225 = phi i32 [ %259, %258 ], [ 0, %114 ]
  %226 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %98, i32 %225) #5
  %227 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int32ConstantEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %4, i32 1) #5
  %228 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %3, %"class.v8::internal::compiler::Operator"* %227, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #5
  %229 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %226, i64 0, i32 3
  %230 = load i32, i32* %229, align 4
  %231 = and i32 %230, 251658240
  %232 = icmp eq i32 %231, 251658240
  %233 = ptrtoint %"class.v8::internal::compiler::Node"* %226 to i64
  %234 = add i64 %233, 32
  br i1 %232, label %235, label %239

235:                                              ; preds = %224
  %236 = inttoptr i64 %234 to i64*
  %237 = load i64, i64* %236, align 8
  %238 = add i64 %237, 16
  br label %239

239:                                              ; preds = %224, %235
  %240 = phi i64 [ %238, %235 ], [ %234, %224 ]
  %241 = inttoptr i64 %240 to %"class.v8::internal::compiler::Node"**
  %242 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %241, align 8
  %243 = icmp eq %"class.v8::internal::compiler::Node"* %242, %228
  br i1 %243, label %258, label %244

244:                                              ; preds = %239
  br i1 %232, label %247, label %245

245:                                              ; preds = %244
  %246 = bitcast %"class.v8::internal::compiler::Node"* %226 to %"struct.v8::internal::compiler::Node::Use"*
  br label %250

247:                                              ; preds = %244
  %248 = inttoptr i64 %234 to %"struct.v8::internal::compiler::Node::Use"**
  %249 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %248, align 8
  br label %250

250:                                              ; preds = %247, %245
  %251 = phi %"struct.v8::internal::compiler::Node::Use"* [ %246, %245 ], [ %249, %247 ]
  %252 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %251, i64 -1
  %253 = icmp eq %"class.v8::internal::compiler::Node"* %242, null
  br i1 %253, label %255, label %254

254:                                              ; preds = %250
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %242, %"struct.v8::internal::compiler::Node::Use"* %252) #5
  br label %255

255:                                              ; preds = %254, %250
  store %"class.v8::internal::compiler::Node"* %228, %"class.v8::internal::compiler::Node"** %241, align 8
  %256 = icmp eq %"class.v8::internal::compiler::Node"* %228, null
  br i1 %256, label %258, label %257

257:                                              ; preds = %255
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %228, %"struct.v8::internal::compiler::Node::Use"* %252) #5
  br label %258

258:                                              ; preds = %239, %255, %257
  %259 = add nuw i32 %225, 1
  %260 = icmp ult i32 %259, %38
  br i1 %260, label %224, label %123

261:                                              ; preds = %156
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #6
  unreachable

262:                                              ; preds = %177
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0)) #6
  unreachable

263:                                              ; preds = %97
  %264 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %98, i64 0, i32 3
  %265 = load i32, i32* %264, align 4
  %266 = and i32 %265, 251658240
  %267 = icmp eq i32 %266, 251658240
  %268 = ptrtoint %"class.v8::internal::compiler::Node"* %98 to i64
  %269 = add i64 %268, 32
  br i1 %267, label %270, label %274

270:                                              ; preds = %263
  %271 = inttoptr i64 %269 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = add i64 %272, 16
  br label %274

274:                                              ; preds = %263, %270
  %275 = phi i64 [ %273, %270 ], [ %269, %263 ]
  %276 = inttoptr i64 %275 to %"class.v8::internal::compiler::Node"**
  %277 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %276, i64 1
  %278 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %277, align 8
  %279 = icmp eq %"class.v8::internal::compiler::Node"* %278, %0
  br i1 %279, label %280, label %499

280:                                              ; preds = %274
  %281 = load i64, i64* %63, align 8
  %282 = load i64, i64* %64, align 8
  %283 = sub i64 %282, %281
  %284 = icmp ult i64 %283, %62
  br i1 %284, label %285, label %287, !prof !3

285:                                              ; preds = %280
  %286 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 %62) #5
  br label %289

287:                                              ; preds = %280
  %288 = add i64 %281, %62
  store i64 %288, i64* %63, align 8
  br label %289

289:                                              ; preds = %287, %285
  %290 = phi i64 [ %286, %285 ], [ %281, %287 ]
  %291 = inttoptr i64 %290 to %"class.v8::internal::compiler::Node"**
  store %"class.v8::internal::compiler::Node"* %98, %"class.v8::internal::compiler::Node"** %291, align 8
  br label %300

292:                                              ; preds = %300
  %293 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5MergeEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %4, i32 %41) #5
  %294 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %3, %"class.v8::internal::compiler::Operator"* %293, i32 %41, %"class.v8::internal::compiler::Node"** %291, i1 zeroext false) #5
  %295 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %98, i64 0, i32 4
  %296 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %295, align 8
  %297 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %296, null
  br i1 %297, label %499, label %298

298:                                              ; preds = %292
  %299 = icmp eq %"class.v8::internal::compiler::Node"* %294, null
  br label %308

300:                                              ; preds = %289, %300
  %301 = phi i64 [ 1, %289 ], [ %306, %300 ]
  %302 = trunc i64 %301 to i32
  %303 = add i32 %302, -1
  %304 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %98, i32 %303) #5
  %305 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %291, i64 %301
  store %"class.v8::internal::compiler::Node"* %304, %"class.v8::internal::compiler::Node"** %305, align 8
  %306 = add nuw nsw i64 %301, 1
  %307 = icmp ult i64 %301, %70
  br i1 %307, label %300, label %292

308:                                              ; preds = %497, %298
  %309 = phi %"struct.v8::internal::compiler::Node::Use"* [ %296, %298 ], [ %311, %497 ]
  %310 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %309, i64 0, i32 0
  %311 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %310, align 8
  %312 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %309, i64 0, i32 2
  %313 = load i32, i32* %312, align 8
  %314 = lshr i32 %313, 1
  %315 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %309, i64 1
  %316 = zext i32 %314 to i64
  %317 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %315, i64 %316
  %318 = and i32 %313, 1
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %322, label %320

320:                                              ; preds = %308
  %321 = bitcast %"struct.v8::internal::compiler::Node::Use"* %317 to %"class.v8::internal::compiler::Node"*
  br label %326

322:                                              ; preds = %308
  %323 = bitcast %"struct.v8::internal::compiler::Node::Use"* %317 to %"class.v8::internal::compiler::Node"**
  %324 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %323, align 8
  %325 = bitcast %"class.v8::internal::compiler::Node"* %324 to %"struct.v8::internal::compiler::Node::Use"*
  br label %326

326:                                              ; preds = %320, %322
  %327 = phi %"struct.v8::internal::compiler::Node::Use"* [ %317, %320 ], [ %325, %322 ]
  %328 = phi %"class.v8::internal::compiler::Node"* [ %321, %320 ], [ %324, %322 ]
  %329 = ptrtoint %"class.v8::internal::compiler::Node"* %328 to i64
  %330 = call i64 @_ZN2v84base10hash_valueEm(i64 %329) #5
  %331 = load i64, i64* %65, align 8
  %332 = icmp eq i64 %331, 0
  br i1 %332, label %461, label %333

333:                                              ; preds = %326
  %334 = call i64 @llvm.ctpop.i64(i64 %331) #5, !range !4
  %335 = icmp ugt i64 %334, 1
  br i1 %335, label %339, label %336

336:                                              ; preds = %333
  %337 = add i64 %331, -1
  %338 = and i64 %337, %330
  br label %343

339:                                              ; preds = %333
  %340 = icmp ult i64 %330, %331
  br i1 %340, label %343, label %341

341:                                              ; preds = %339
  %342 = urem i64 %330, %331
  br label %343

343:                                              ; preds = %341, %339, %336
  %344 = phi i64 [ %338, %336 ], [ %342, %341 ], [ %330, %339 ]
  %345 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %66, align 8
  %346 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %345, i64 %344
  %347 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %346, align 8
  %348 = icmp eq %"struct.std::__1::__hash_node_base"* %347, null
  br i1 %348, label %461, label %349

349:                                              ; preds = %343
  %350 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %347, i64 0, i32 0
  %351 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %350, align 8
  %352 = icmp eq %"struct.std::__1::__hash_node_base"* %351, null
  br i1 %352, label %461, label %353

353:                                              ; preds = %349
  %354 = add i64 %331, -1
  br i1 %335, label %355, label %377

355:                                              ; preds = %353, %373
  %356 = phi %"struct.std::__1::__hash_node_base"* [ %375, %373 ], [ %351, %353 ]
  %357 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %356, i64 1
  %358 = bitcast %"struct.std::__1::__hash_node_base"* %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = icmp eq i64 %330, %359
  br i1 %360, label %368, label %361

361:                                              ; preds = %355
  %362 = icmp ult i64 %359, %331
  br i1 %362, label %365, label %363

363:                                              ; preds = %361
  %364 = urem i64 %359, %331
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i64 [ %364, %363 ], [ %359, %361 ]
  %367 = icmp eq i64 %366, %344
  br i1 %367, label %373, label %461

368:                                              ; preds = %355
  %369 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %356, i64 2
  %370 = bitcast %"struct.std::__1::__hash_node_base"* %369 to %"class.v8::internal::compiler::Node"**
  %371 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %370, align 8
  %372 = icmp eq %"class.v8::internal::compiler::Node"* %371, %328
  br i1 %372, label %395, label %373

373:                                              ; preds = %368, %365
  %374 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %356, i64 0, i32 0
  %375 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %374, align 8
  %376 = icmp eq %"struct.std::__1::__hash_node_base"* %375, null
  br i1 %376, label %461, label %355

377:                                              ; preds = %353, %391
  %378 = phi %"struct.std::__1::__hash_node_base"* [ %393, %391 ], [ %351, %353 ]
  %379 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %378, i64 1
  %380 = bitcast %"struct.std::__1::__hash_node_base"* %379 to i64*
  %381 = load i64, i64* %380, align 8
  %382 = icmp eq i64 %330, %381
  br i1 %382, label %386, label %383

383:                                              ; preds = %377
  %384 = and i64 %381, %354
  %385 = icmp eq i64 %384, %344
  br i1 %385, label %391, label %461

386:                                              ; preds = %377
  %387 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %378, i64 2
  %388 = bitcast %"struct.std::__1::__hash_node_base"* %387 to %"class.v8::internal::compiler::Node"**
  %389 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %388, align 8
  %390 = icmp eq %"class.v8::internal::compiler::Node"* %389, %328
  br i1 %390, label %395, label %391

391:                                              ; preds = %386, %383
  %392 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %378, i64 0, i32 0
  %393 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %392, align 8
  %394 = icmp eq %"struct.std::__1::__hash_node_base"* %393, null
  br i1 %394, label %461, label %377

395:                                              ; preds = %386, %368
  %396 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %328, i64 0, i32 0
  %397 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %396, align 8
  %398 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %397, i64 0, i32 2
  %399 = load i16, i16* %398, align 8
  %400 = icmp eq i16 %399, 54
  br i1 %400, label %401, label %403

401:                                              ; preds = %395
  %402 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9EffectPhiEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %4, i32 %41) #5
  br label %406

403:                                              ; preds = %395
  %404 = call zeroext i8 @_ZN2v88internal8compiler29LoopExitValueRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %397) #5
  %405 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %4, i8 zeroext %404, i32 %41) #5
  br label %406

406:                                              ; preds = %403, %401
  %407 = phi %"class.v8::internal::compiler::Operator"* [ %402, %401 ], [ %405, %403 ]
  %408 = load i64, i64* %63, align 8
  %409 = load i64, i64* %64, align 8
  %410 = sub i64 %409, %408
  %411 = icmp ult i64 %410, %69
  br i1 %411, label %412, label %414, !prof !3

412:                                              ; preds = %406
  %413 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %5, i64 %69) #5
  br label %416

414:                                              ; preds = %406
  %415 = add i64 %408, %69
  store i64 %415, i64* %63, align 8
  br label %416

416:                                              ; preds = %414, %412
  %417 = phi i64 [ %413, %412 ], [ %408, %414 ]
  %418 = inttoptr i64 %417 to %"class.v8::internal::compiler::Node"**
  %419 = inttoptr i64 %417 to i64*
  store i64 %329, i64* %419, align 8
  br label %453

420:                                              ; preds = %453
  %421 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %418, i64 %60
  store %"class.v8::internal::compiler::Node"* %294, %"class.v8::internal::compiler::Node"** %421, align 8
  %422 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %3, %"class.v8::internal::compiler::Operator"* %407, i32 %67, %"class.v8::internal::compiler::Node"** %418, i1 zeroext false) #5
  call void @_ZN2v88internal8compiler4Node11ReplaceUsesEPS2_(%"class.v8::internal::compiler::Node"* %328, %"class.v8::internal::compiler::Node"* %422) #5
  %423 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %422, i64 0, i32 3
  %424 = load i32, i32* %423, align 4
  %425 = and i32 %424, 251658240
  %426 = icmp eq i32 %425, 251658240
  %427 = ptrtoint %"class.v8::internal::compiler::Node"* %422 to i64
  %428 = add i64 %427, 32
  br i1 %426, label %429, label %433

429:                                              ; preds = %420
  %430 = inttoptr i64 %428 to i64*
  %431 = load i64, i64* %430, align 8
  %432 = add i64 %431, 16
  br label %433

433:                                              ; preds = %420, %429
  %434 = phi i64 [ %432, %429 ], [ %428, %420 ]
  %435 = inttoptr i64 %434 to %"class.v8::internal::compiler::Node"**
  %436 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %435, align 8
  %437 = icmp eq %"class.v8::internal::compiler::Node"* %436, %328
  br i1 %437, label %497, label %438

438:                                              ; preds = %433
  br i1 %426, label %441, label %439

439:                                              ; preds = %438
  %440 = bitcast %"class.v8::internal::compiler::Node"* %422 to %"struct.v8::internal::compiler::Node::Use"*
  br label %444

441:                                              ; preds = %438
  %442 = inttoptr i64 %428 to %"struct.v8::internal::compiler::Node::Use"**
  %443 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %442, align 8
  br label %444

444:                                              ; preds = %441, %439
  %445 = phi %"struct.v8::internal::compiler::Node::Use"* [ %440, %439 ], [ %443, %441 ]
  %446 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %445, i64 -1
  %447 = icmp eq %"class.v8::internal::compiler::Node"* %436, null
  br i1 %447, label %449, label %448

448:                                              ; preds = %444
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %436, %"struct.v8::internal::compiler::Node::Use"* %446) #5
  br label %449

449:                                              ; preds = %448, %444
  %450 = inttoptr i64 %434 to %"struct.v8::internal::compiler::Node::Use"**
  store %"struct.v8::internal::compiler::Node::Use"* %327, %"struct.v8::internal::compiler::Node::Use"** %450, align 8
  %451 = icmp eq %"class.v8::internal::compiler::Node"* %328, null
  br i1 %451, label %497, label %452

452:                                              ; preds = %449
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %328, %"struct.v8::internal::compiler::Node::Use"* %446) #5
  br label %497

453:                                              ; preds = %416, %453
  %454 = phi i64 [ 1, %416 ], [ %459, %453 ]
  %455 = trunc i64 %454 to i32
  %456 = add i32 %455, -1
  %457 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %328, i32 %456) #5
  %458 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %418, i64 %454
  store %"class.v8::internal::compiler::Node"* %457, %"class.v8::internal::compiler::Node"** %458, align 8
  %459 = add nuw nsw i64 %454, 1
  %460 = icmp ult i64 %454, %70
  br i1 %460, label %453, label %420

461:                                              ; preds = %391, %383, %373, %365, %343, %326, %349
  %462 = icmp eq %"class.v8::internal::compiler::Node"* %328, %294
  br i1 %462, label %497, label %463

463:                                              ; preds = %461
  %464 = load i32, i32* %312, align 8
  %465 = lshr i32 %464, 1
  %466 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %328, i64 0, i32 3
  %467 = load i32, i32* %466, align 4
  %468 = and i32 %467, 251658240
  %469 = icmp eq i32 %468, 251658240
  %470 = add i64 %329, 32
  br i1 %469, label %471, label %475

471:                                              ; preds = %463
  %472 = inttoptr i64 %470 to i64*
  %473 = load i64, i64* %472, align 8
  %474 = add i64 %473, 16
  br label %475

475:                                              ; preds = %463, %471
  %476 = phi i64 [ %474, %471 ], [ %470, %463 ]
  %477 = inttoptr i64 %476 to %"class.v8::internal::compiler::Node"**
  %478 = zext i32 %465 to i64
  %479 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %477, i64 %478
  %480 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %479, align 8
  %481 = icmp eq %"class.v8::internal::compiler::Node"* %480, %294
  br i1 %481, label %497, label %482

482:                                              ; preds = %475
  br i1 %469, label %485, label %483

483:                                              ; preds = %482
  %484 = bitcast %"class.v8::internal::compiler::Node"* %328 to %"struct.v8::internal::compiler::Node::Use"*
  br label %488

485:                                              ; preds = %482
  %486 = inttoptr i64 %470 to %"struct.v8::internal::compiler::Node::Use"**
  %487 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %486, align 8
  br label %488

488:                                              ; preds = %485, %483
  %489 = phi %"struct.v8::internal::compiler::Node::Use"* [ %484, %483 ], [ %487, %485 ]
  %490 = xor i32 %465, -1
  %491 = sext i32 %490 to i64
  %492 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %489, i64 %491
  %493 = icmp eq %"class.v8::internal::compiler::Node"* %480, null
  br i1 %493, label %495, label %494

494:                                              ; preds = %488
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %480, %"struct.v8::internal::compiler::Node::Use"* %492) #5
  br label %495

495:                                              ; preds = %494, %488
  store %"class.v8::internal::compiler::Node"* %294, %"class.v8::internal::compiler::Node"** %479, align 8
  br i1 %299, label %497, label %496

496:                                              ; preds = %495
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %294, %"struct.v8::internal::compiler::Node::Use"* %492) #5
  br label %497

497:                                              ; preds = %496, %495, %475, %452, %449, %433, %461
  %498 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %311, null
  br i1 %498, label %499, label %308

499:                                              ; preds = %497, %214, %292, %123, %114, %97, %274
  %500 = inttoptr i64 %82 to i64*
  %501 = load i64, i64* %500, align 8
  %502 = icmp eq i64 %501, 0
  br i1 %502, label %71, label %81

503:                                              ; preds = %71, %607
  %504 = phi i64 [ 1, %71 ], [ %608, %607 ]
  %505 = load i32, i32* %13, align 4
  %506 = and i32 %505, 251658240
  %507 = icmp eq i32 %506, 251658240
  br i1 %507, label %511, label %508

508:                                              ; preds = %503
  %509 = lshr i32 %505, 24
  %510 = and i32 %509, 15
  br label %515

511:                                              ; preds = %503
  %512 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %74, align 8
  %513 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %512, i64 0, i32 1
  %514 = load i32, i32* %513, align 8
  br label %515

515:                                              ; preds = %508, %511
  %516 = phi i32 [ %510, %508 ], [ %514, %511 ]
  %517 = sext i32 %516 to i64
  %518 = icmp slt i64 %504, %517
  br i1 %518, label %519, label %666

519:                                              ; preds = %515
  %520 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %0, i32 %75) #5
  %521 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %520, i64 0, i32 3
  %522 = load i32, i32* %521, align 4
  %523 = and i32 %522, 251658240
  %524 = icmp eq i32 %523, 251658240
  %525 = ptrtoint %"class.v8::internal::compiler::Node"* %520 to i64
  %526 = add i64 %525, 32
  br i1 %524, label %527, label %531

527:                                              ; preds = %519
  %528 = inttoptr i64 %526 to i64*
  %529 = load i64, i64* %528, align 8
  %530 = add i64 %529, 16
  br label %531

531:                                              ; preds = %519, %527
  %532 = phi i64 [ %530, %527 ], [ %526, %519 ]
  %533 = inttoptr i64 %532 to %"class.v8::internal::compiler::Node"**
  %534 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %533, i64 %504
  %535 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %534, align 8
  br i1 %76, label %538, label %536

536:                                              ; preds = %531
  %537 = xor i64 %504, -1
  br label %609

538:                                              ; preds = %659, %531
  %539 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %0, i32 0) #5
  %540 = load i32, i32* %13, align 4
  %541 = and i32 %540, 251658240
  %542 = icmp eq i32 %541, 251658240
  br i1 %542, label %543, label %547

543:                                              ; preds = %538
  %544 = load i64, i64* %78, align 8
  %545 = add i64 %544, 16
  %546 = inttoptr i64 %545 to %"class.v8::internal::compiler::Node"**
  br label %547

547:                                              ; preds = %538, %543
  %548 = phi %"class.v8::internal::compiler::Node"** [ %546, %543 ], [ %77, %538 ]
  %549 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %548, i64 %504
  %550 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %549, align 8
  %551 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %539, i64 0, i32 3
  %552 = load i32, i32* %551, align 4
  %553 = and i32 %552, 251658240
  %554 = icmp eq i32 %553, 251658240
  %555 = ptrtoint %"class.v8::internal::compiler::Node"* %539 to i64
  %556 = add i64 %555, 32
  br i1 %554, label %557, label %561

557:                                              ; preds = %547
  %558 = inttoptr i64 %556 to i64*
  %559 = load i64, i64* %558, align 8
  %560 = add i64 %559, 16
  br label %561

561:                                              ; preds = %547, %557
  %562 = phi i64 [ %560, %557 ], [ %556, %547 ]
  %563 = inttoptr i64 %562 to %"class.v8::internal::compiler::Node"**
  %564 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %563, i64 %504
  %565 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %564, align 8
  %566 = icmp eq %"class.v8::internal::compiler::Node"* %565, %550
  br i1 %566, label %582, label %567

567:                                              ; preds = %561
  br i1 %554, label %570, label %568

568:                                              ; preds = %567
  %569 = bitcast %"class.v8::internal::compiler::Node"* %539 to %"struct.v8::internal::compiler::Node::Use"*
  br label %573

570:                                              ; preds = %567
  %571 = inttoptr i64 %556 to %"struct.v8::internal::compiler::Node::Use"**
  %572 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %571, align 8
  br label %573

573:                                              ; preds = %570, %568
  %574 = phi %"struct.v8::internal::compiler::Node::Use"* [ %569, %568 ], [ %572, %570 ]
  %575 = xor i64 %504, -1
  %576 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %574, i64 %575
  %577 = icmp eq %"class.v8::internal::compiler::Node"* %565, null
  br i1 %577, label %579, label %578

578:                                              ; preds = %573
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %565, %"struct.v8::internal::compiler::Node::Use"* %576) #5
  br label %579

579:                                              ; preds = %578, %573
  store %"class.v8::internal::compiler::Node"* %550, %"class.v8::internal::compiler::Node"** %564, align 8
  %580 = icmp eq %"class.v8::internal::compiler::Node"* %550, null
  br i1 %580, label %582, label %581

581:                                              ; preds = %579
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %550, %"struct.v8::internal::compiler::Node::Use"* %576) #5
  br label %582

582:                                              ; preds = %561, %579, %581
  %583 = load i32, i32* %13, align 4
  %584 = and i32 %583, 251658240
  %585 = icmp eq i32 %584, 251658240
  br i1 %585, label %586, label %590

586:                                              ; preds = %582
  %587 = load i64, i64* %78, align 8
  %588 = add i64 %587, 16
  %589 = inttoptr i64 %588 to %"class.v8::internal::compiler::Node"**
  br label %590

590:                                              ; preds = %582, %586
  %591 = phi %"class.v8::internal::compiler::Node"** [ %589, %586 ], [ %77, %582 ]
  %592 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %591, i64 %504
  %593 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %592, align 8
  %594 = icmp eq %"class.v8::internal::compiler::Node"* %593, %535
  br i1 %594, label %607, label %595

595:                                              ; preds = %590
  br i1 %585, label %596, label %598

596:                                              ; preds = %595
  %597 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %80, align 8
  br label %598

598:                                              ; preds = %595, %596
  %599 = phi %"struct.v8::internal::compiler::Node::Use"* [ %597, %596 ], [ %79, %595 ]
  %600 = xor i64 %504, -1
  %601 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %599, i64 %600
  %602 = icmp eq %"class.v8::internal::compiler::Node"* %593, null
  br i1 %602, label %604, label %603

603:                                              ; preds = %598
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %593, %"struct.v8::internal::compiler::Node::Use"* %601) #5
  br label %604

604:                                              ; preds = %603, %598
  store %"class.v8::internal::compiler::Node"* %535, %"class.v8::internal::compiler::Node"** %592, align 8
  %605 = icmp eq %"class.v8::internal::compiler::Node"* %535, null
  br i1 %605, label %607, label %606

606:                                              ; preds = %604
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %535, %"struct.v8::internal::compiler::Node::Use"* %601) #5
  br label %607

607:                                              ; preds = %590, %604, %606
  %608 = add nuw nsw i64 %504, 1
  br label %503

609:                                              ; preds = %536, %659
  %610 = phi i32 [ %75, %536 ], [ %612, %659 ]
  %611 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %0, i32 %610) #5
  %612 = add i32 %610, -1
  %613 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %0, i32 %612) #5
  %614 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %613, i64 0, i32 3
  %615 = load i32, i32* %614, align 4
  %616 = and i32 %615, 251658240
  %617 = icmp eq i32 %616, 251658240
  %618 = ptrtoint %"class.v8::internal::compiler::Node"* %613 to i64
  %619 = add i64 %618, 32
  br i1 %617, label %620, label %624

620:                                              ; preds = %609
  %621 = inttoptr i64 %619 to i64*
  %622 = load i64, i64* %621, align 8
  %623 = add i64 %622, 16
  br label %624

624:                                              ; preds = %609, %620
  %625 = phi i64 [ %623, %620 ], [ %619, %609 ]
  %626 = inttoptr i64 %625 to %"class.v8::internal::compiler::Node"**
  %627 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %626, i64 %504
  %628 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %627, align 8
  %629 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %611, i64 0, i32 3
  %630 = load i32, i32* %629, align 4
  %631 = and i32 %630, 251658240
  %632 = icmp eq i32 %631, 251658240
  %633 = ptrtoint %"class.v8::internal::compiler::Node"* %611 to i64
  %634 = add i64 %633, 32
  br i1 %632, label %635, label %639

635:                                              ; preds = %624
  %636 = inttoptr i64 %634 to i64*
  %637 = load i64, i64* %636, align 8
  %638 = add i64 %637, 16
  br label %639

639:                                              ; preds = %624, %635
  %640 = phi i64 [ %638, %635 ], [ %634, %624 ]
  %641 = inttoptr i64 %640 to %"class.v8::internal::compiler::Node"**
  %642 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %641, i64 %504
  %643 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %642, align 8
  %644 = icmp eq %"class.v8::internal::compiler::Node"* %643, %628
  br i1 %644, label %659, label %645

645:                                              ; preds = %639
  br i1 %632, label %648, label %646

646:                                              ; preds = %645
  %647 = bitcast %"class.v8::internal::compiler::Node"* %611 to %"struct.v8::internal::compiler::Node::Use"*
  br label %651

648:                                              ; preds = %645
  %649 = inttoptr i64 %634 to %"struct.v8::internal::compiler::Node::Use"**
  %650 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %649, align 8
  br label %651

651:                                              ; preds = %648, %646
  %652 = phi %"struct.v8::internal::compiler::Node::Use"* [ %647, %646 ], [ %650, %648 ]
  %653 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %652, i64 %537
  %654 = icmp eq %"class.v8::internal::compiler::Node"* %643, null
  br i1 %654, label %656, label %655

655:                                              ; preds = %651
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %643, %"struct.v8::internal::compiler::Node::Use"* %653) #5
  br label %656

656:                                              ; preds = %655, %651
  store %"class.v8::internal::compiler::Node"* %628, %"class.v8::internal::compiler::Node"** %642, align 8
  %657 = icmp eq %"class.v8::internal::compiler::Node"* %628, null
  br i1 %657, label %659, label %658

658:                                              ; preds = %656
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %628, %"struct.v8::internal::compiler::Node::Use"* %653) #5
  br label %659

659:                                              ; preds = %639, %656, %658
  %660 = icmp eq i32 %612, 0
  br i1 %660, label %538, label %609

661:                                              ; preds = %681
  %662 = load i64, i64* %56, align 8
  %663 = icmp eq i64 %662, 0
  br i1 %663, label %687, label %664

664:                                              ; preds = %661
  %665 = icmp eq %"class.v8::internal::compiler::Node"* %0, null
  br label %696

666:                                              ; preds = %515, %681
  %667 = phi i32 [ %685, %681 ], [ 0, %515 ]
  %668 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %0, i32 %667) #5
  %669 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler4Node11RemoveInputEi(%"class.v8::internal::compiler::Node"* %668, i32 0) #5
  %670 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %0, i32 %667) #5
  %671 = load i32, i32* %13, align 4
  %672 = and i32 %671, 251658240
  %673 = icmp eq i32 %672, 251658240
  br i1 %673, label %677, label %674

674:                                              ; preds = %666
  %675 = lshr i32 %671, 24
  %676 = and i32 %675, 15
  br label %681

677:                                              ; preds = %666
  %678 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %74, align 8
  %679 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %678, i64 0, i32 1
  %680 = load i32, i32* %679, align 8
  br label %681

681:                                              ; preds = %674, %677
  %682 = phi i32 [ %676, %674 ], [ %680, %677 ]
  %683 = add nsw i32 %682, -1
  %684 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5MergeEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %4, i32 %683) #5
  call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %670, %"class.v8::internal::compiler::Operator"* %684) #5
  %685 = add nuw i32 %667, 1
  %686 = icmp ult i32 %685, %38
  br i1 %686, label %666, label %661

687:                                              ; preds = %969, %661
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #5
  %688 = getelementptr inbounds %"class.v8::internal::ZoneVector.43", %"class.v8::internal::ZoneVector.43"* %9, i64 0, i32 0, i32 0, i32 0
  %689 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %688, align 8
  %690 = icmp eq %"class.v8::internal::compiler::Node"** %689, null
  br i1 %690, label %695, label %691

691:                                              ; preds = %687
  %692 = ptrtoint %"class.v8::internal::compiler::Node"** %689 to i64
  %693 = getelementptr inbounds %"class.v8::internal::ZoneVector.43", %"class.v8::internal::ZoneVector.43"* %9, i64 0, i32 0, i32 0, i32 1
  %694 = bitcast %"class.v8::internal::compiler::Node"*** %693 to i64*
  store i64 %692, i64* %694, align 8
  br label %695

695:                                              ; preds = %687, %691
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #5
  br label %973

696:                                              ; preds = %664, %969
  %697 = phi i64 [ %662, %664 ], [ %971, %969 ]
  %698 = inttoptr i64 %697 to %"struct.v8::internal::compiler::Node::Use"*
  %699 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %698, i64 1
  %700 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %698, i64 0, i32 2
  %701 = load i32, i32* %700, align 8
  %702 = lshr i32 %701, 1
  %703 = zext i32 %702 to i64
  %704 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %699, i64 %703
  %705 = and i32 %701, 1
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %709, label %707

707:                                              ; preds = %696
  %708 = bitcast %"struct.v8::internal::compiler::Node::Use"* %704 to %"class.v8::internal::compiler::Node"*
  br label %713

709:                                              ; preds = %696
  %710 = bitcast %"struct.v8::internal::compiler::Node::Use"* %704 to %"class.v8::internal::compiler::Node"**
  %711 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %710, align 8
  %712 = bitcast %"class.v8::internal::compiler::Node"* %711 to %"struct.v8::internal::compiler::Node::Use"*
  br label %713

713:                                              ; preds = %707, %709
  %714 = phi %"struct.v8::internal::compiler::Node::Use"* [ %704, %707 ], [ %712, %709 ]
  %715 = phi %"class.v8::internal::compiler::Node"* [ %708, %707 ], [ %711, %709 ]
  %716 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %715, i64 0, i32 0
  %717 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %716, align 8
  %718 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %717, i64 0, i32 2
  %719 = load i16, i16* %718, align 8
  %720 = zext i16 %719 to i32
  %721 = add nsw i32 %720, -35
  %722 = icmp ult i32 %721, 2
  br i1 %722, label %723, label %898

723:                                              ; preds = %713
  %724 = icmp eq i16 %719, 35
  %725 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %717, i64 0, i32 5
  %726 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %717, i64 0, i32 6
  %727 = select i1 %724, i32* %725, i32* %726
  %728 = load i32, i32* %727, align 4
  %729 = icmp sgt i32 %728, 1
  br i1 %729, label %730, label %738

730:                                              ; preds = %723
  %731 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %715, i64 0, i32 3
  %732 = ptrtoint %"class.v8::internal::compiler::Node"* %715 to i64
  %733 = add i64 %732, 32
  %734 = inttoptr i64 %733 to %"class.v8::internal::compiler::Node"**
  %735 = inttoptr i64 %733 to i64*
  %736 = inttoptr i64 %733 to %"struct.v8::internal::compiler::Node::Use"**
  %737 = zext i32 %728 to i64
  br label %740

738:                                              ; preds = %833, %723
  %739 = add nsw i32 %728, -1
  br label %889

740:                                              ; preds = %833, %730
  %741 = phi i64 [ 1, %730 ], [ %834, %833 ]
  %742 = phi i32 [ 1, %730 ], [ %835, %833 ]
  %743 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %715, i32 %75) #5
  %744 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %743, i64 0, i32 3
  %745 = load i32, i32* %744, align 4
  %746 = and i32 %745, 251658240
  %747 = icmp eq i32 %746, 251658240
  %748 = ptrtoint %"class.v8::internal::compiler::Node"* %743 to i64
  %749 = add i64 %748, 32
  br i1 %747, label %750, label %754

750:                                              ; preds = %740
  %751 = inttoptr i64 %749 to i64*
  %752 = load i64, i64* %751, align 8
  %753 = add i64 %752, 16
  br label %754

754:                                              ; preds = %740, %750
  %755 = phi i64 [ %753, %750 ], [ %749, %740 ]
  %756 = inttoptr i64 %755 to %"class.v8::internal::compiler::Node"**
  %757 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %756, i64 %741
  %758 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %757, align 8
  br i1 %76, label %762, label %759

759:                                              ; preds = %754
  %760 = xor i32 %742, -1
  %761 = sext i32 %760 to i64
  br label %837

762:                                              ; preds = %887, %754
  %763 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %715, i32 0) #5
  %764 = load i32, i32* %731, align 4
  %765 = and i32 %764, 251658240
  %766 = icmp eq i32 %765, 251658240
  br i1 %766, label %767, label %771

767:                                              ; preds = %762
  %768 = load i64, i64* %735, align 8
  %769 = add i64 %768, 16
  %770 = inttoptr i64 %769 to %"class.v8::internal::compiler::Node"**
  br label %771

771:                                              ; preds = %762, %767
  %772 = phi %"class.v8::internal::compiler::Node"** [ %770, %767 ], [ %734, %762 ]
  %773 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %772, i64 %741
  %774 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %773, align 8
  %775 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %763, i64 0, i32 3
  %776 = load i32, i32* %775, align 4
  %777 = and i32 %776, 251658240
  %778 = icmp eq i32 %777, 251658240
  %779 = ptrtoint %"class.v8::internal::compiler::Node"* %763 to i64
  %780 = add i64 %779, 32
  br i1 %778, label %781, label %785

781:                                              ; preds = %771
  %782 = inttoptr i64 %780 to i64*
  %783 = load i64, i64* %782, align 8
  %784 = add i64 %783, 16
  br label %785

785:                                              ; preds = %771, %781
  %786 = phi i64 [ %784, %781 ], [ %780, %771 ]
  %787 = inttoptr i64 %786 to %"class.v8::internal::compiler::Node"**
  %788 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %787, i64 %741
  %789 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %788, align 8
  %790 = icmp eq %"class.v8::internal::compiler::Node"* %789, %774
  br i1 %790, label %807, label %791

791:                                              ; preds = %785
  br i1 %778, label %794, label %792

792:                                              ; preds = %791
  %793 = bitcast %"class.v8::internal::compiler::Node"* %763 to %"struct.v8::internal::compiler::Node::Use"*
  br label %797

794:                                              ; preds = %791
  %795 = inttoptr i64 %780 to %"struct.v8::internal::compiler::Node::Use"**
  %796 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %795, align 8
  br label %797

797:                                              ; preds = %794, %792
  %798 = phi %"struct.v8::internal::compiler::Node::Use"* [ %793, %792 ], [ %796, %794 ]
  %799 = xor i32 %742, -1
  %800 = sext i32 %799 to i64
  %801 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %798, i64 %800
  %802 = icmp eq %"class.v8::internal::compiler::Node"* %789, null
  br i1 %802, label %804, label %803

803:                                              ; preds = %797
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %789, %"struct.v8::internal::compiler::Node::Use"* %801) #5
  br label %804

804:                                              ; preds = %803, %797
  store %"class.v8::internal::compiler::Node"* %774, %"class.v8::internal::compiler::Node"** %788, align 8
  %805 = icmp eq %"class.v8::internal::compiler::Node"* %774, null
  br i1 %805, label %807, label %806

806:                                              ; preds = %804
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %774, %"struct.v8::internal::compiler::Node::Use"* %801) #5
  br label %807

807:                                              ; preds = %785, %804, %806
  %808 = load i32, i32* %731, align 4
  %809 = and i32 %808, 251658240
  %810 = icmp eq i32 %809, 251658240
  br i1 %810, label %811, label %815

811:                                              ; preds = %807
  %812 = load i64, i64* %735, align 8
  %813 = add i64 %812, 16
  %814 = inttoptr i64 %813 to %"class.v8::internal::compiler::Node"**
  br label %815

815:                                              ; preds = %807, %811
  %816 = phi %"class.v8::internal::compiler::Node"** [ %814, %811 ], [ %734, %807 ]
  %817 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %816, i64 %741
  %818 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %817, align 8
  %819 = icmp eq %"class.v8::internal::compiler::Node"* %818, %758
  br i1 %819, label %833, label %820

820:                                              ; preds = %815
  br i1 %810, label %821, label %823

821:                                              ; preds = %820
  %822 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %736, align 8
  br label %823

823:                                              ; preds = %820, %821
  %824 = phi %"struct.v8::internal::compiler::Node::Use"* [ %822, %821 ], [ %714, %820 ]
  %825 = xor i32 %742, -1
  %826 = sext i32 %825 to i64
  %827 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %824, i64 %826
  %828 = icmp eq %"class.v8::internal::compiler::Node"* %818, null
  br i1 %828, label %830, label %829

829:                                              ; preds = %823
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %818, %"struct.v8::internal::compiler::Node::Use"* %827) #5
  br label %830

830:                                              ; preds = %829, %823
  store %"class.v8::internal::compiler::Node"* %758, %"class.v8::internal::compiler::Node"** %817, align 8
  %831 = icmp eq %"class.v8::internal::compiler::Node"* %758, null
  br i1 %831, label %833, label %832

832:                                              ; preds = %830
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %758, %"struct.v8::internal::compiler::Node::Use"* %827) #5
  br label %833

833:                                              ; preds = %815, %830, %832
  %834 = add nuw nsw i64 %741, 1
  %835 = add nuw nsw i32 %742, 1
  %836 = icmp eq i64 %834, %737
  br i1 %836, label %738, label %740

837:                                              ; preds = %759, %887
  %838 = phi i32 [ %75, %759 ], [ %840, %887 ]
  %839 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %715, i32 %838) #5
  %840 = add i32 %838, -1
  %841 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %715, i32 %840) #5
  %842 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %841, i64 0, i32 3
  %843 = load i32, i32* %842, align 4
  %844 = and i32 %843, 251658240
  %845 = icmp eq i32 %844, 251658240
  %846 = ptrtoint %"class.v8::internal::compiler::Node"* %841 to i64
  %847 = add i64 %846, 32
  br i1 %845, label %848, label %852

848:                                              ; preds = %837
  %849 = inttoptr i64 %847 to i64*
  %850 = load i64, i64* %849, align 8
  %851 = add i64 %850, 16
  br label %852

852:                                              ; preds = %837, %848
  %853 = phi i64 [ %851, %848 ], [ %847, %837 ]
  %854 = inttoptr i64 %853 to %"class.v8::internal::compiler::Node"**
  %855 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %854, i64 %741
  %856 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %855, align 8
  %857 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %839, i64 0, i32 3
  %858 = load i32, i32* %857, align 4
  %859 = and i32 %858, 251658240
  %860 = icmp eq i32 %859, 251658240
  %861 = ptrtoint %"class.v8::internal::compiler::Node"* %839 to i64
  %862 = add i64 %861, 32
  br i1 %860, label %863, label %867

863:                                              ; preds = %852
  %864 = inttoptr i64 %862 to i64*
  %865 = load i64, i64* %864, align 8
  %866 = add i64 %865, 16
  br label %867

867:                                              ; preds = %852, %863
  %868 = phi i64 [ %866, %863 ], [ %862, %852 ]
  %869 = inttoptr i64 %868 to %"class.v8::internal::compiler::Node"**
  %870 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %869, i64 %741
  %871 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %870, align 8
  %872 = icmp eq %"class.v8::internal::compiler::Node"* %871, %856
  br i1 %872, label %887, label %873

873:                                              ; preds = %867
  br i1 %860, label %876, label %874

874:                                              ; preds = %873
  %875 = bitcast %"class.v8::internal::compiler::Node"* %839 to %"struct.v8::internal::compiler::Node::Use"*
  br label %879

876:                                              ; preds = %873
  %877 = inttoptr i64 %862 to %"struct.v8::internal::compiler::Node::Use"**
  %878 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %877, align 8
  br label %879

879:                                              ; preds = %876, %874
  %880 = phi %"struct.v8::internal::compiler::Node::Use"* [ %875, %874 ], [ %878, %876 ]
  %881 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %880, i64 %761
  %882 = icmp eq %"class.v8::internal::compiler::Node"* %871, null
  br i1 %882, label %884, label %883

883:                                              ; preds = %879
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %871, %"struct.v8::internal::compiler::Node::Use"* %881) #5
  br label %884

884:                                              ; preds = %883, %879
  store %"class.v8::internal::compiler::Node"* %856, %"class.v8::internal::compiler::Node"** %870, align 8
  %885 = icmp eq %"class.v8::internal::compiler::Node"* %856, null
  br i1 %885, label %887, label %886

886:                                              ; preds = %884
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %856, %"struct.v8::internal::compiler::Node::Use"* %881) #5
  br label %887

887:                                              ; preds = %867, %884, %886
  %888 = icmp eq i32 %840, 0
  br i1 %888, label %762, label %837

889:                                              ; preds = %738, %889
  %890 = phi i32 [ 0, %738 ], [ %896, %889 ]
  %891 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %715, i32 %890) #5
  %892 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler4Node11RemoveInputEi(%"class.v8::internal::compiler::Node"* %891, i32 0) #5
  %893 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %715, i32 %890) #5
  %894 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %716, align 8
  %895 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder16ResizeMergeOrPhiEPKNS1_8OperatorEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %4, %"class.v8::internal::compiler::Operator"* %894, i32 %739) #5
  call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %893, %"class.v8::internal::compiler::Operator"* %895) #5
  %896 = add nuw i32 %890, 1
  %897 = icmp ult i32 %896, %38
  br i1 %897, label %889, label %898

898:                                              ; preds = %889, %713
  %899 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %716, align 8
  %900 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %899, i64 0, i32 2
  %901 = load i16, i16* %900, align 8
  %902 = icmp eq i16 %901, 52
  br i1 %902, label %903, label %969

903:                                              ; preds = %898
  br i1 %665, label %904, label %935

904:                                              ; preds = %903, %932
  %905 = phi i32 [ %933, %932 ], [ 0, %903 ]
  %906 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %715, i32 %905) #5
  %907 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %906, i64 0, i32 3
  %908 = load i32, i32* %907, align 4
  %909 = and i32 %908, 251658240
  %910 = icmp eq i32 %909, 251658240
  %911 = ptrtoint %"class.v8::internal::compiler::Node"* %906 to i64
  %912 = add i64 %911, 32
  br i1 %910, label %913, label %917

913:                                              ; preds = %904
  %914 = inttoptr i64 %912 to i64*
  %915 = load i64, i64* %914, align 8
  %916 = add i64 %915, 16
  br label %917

917:                                              ; preds = %913, %904
  %918 = phi i64 [ %916, %913 ], [ %912, %904 ]
  %919 = inttoptr i64 %918 to %"class.v8::internal::compiler::Node"**
  %920 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %919, i64 1
  %921 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %920, align 8
  %922 = icmp eq %"class.v8::internal::compiler::Node"* %921, null
  br i1 %922, label %932, label %923

923:                                              ; preds = %917
  br i1 %910, label %926, label %924

924:                                              ; preds = %923
  %925 = bitcast %"class.v8::internal::compiler::Node"* %906 to %"struct.v8::internal::compiler::Node::Use"*
  br label %929

926:                                              ; preds = %923
  %927 = inttoptr i64 %912 to %"struct.v8::internal::compiler::Node::Use"**
  %928 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %927, align 8
  br label %929

929:                                              ; preds = %926, %924
  %930 = phi %"struct.v8::internal::compiler::Node::Use"* [ %925, %924 ], [ %928, %926 ]
  %931 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %930, i64 -2
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %921, %"struct.v8::internal::compiler::Node::Use"* %931) #5
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %920, align 8
  br label %932

932:                                              ; preds = %929, %917
  %933 = add nuw i32 %905, 1
  %934 = icmp ult i32 %933, %38
  br i1 %934, label %904, label %969

935:                                              ; preds = %903, %966
  %936 = phi i32 [ %967, %966 ], [ 0, %903 ]
  %937 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* nonnull %10, %"class.v8::internal::compiler::Node"* %715, i32 %936) #5
  %938 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %937, i64 0, i32 3
  %939 = load i32, i32* %938, align 4
  %940 = and i32 %939, 251658240
  %941 = icmp eq i32 %940, 251658240
  %942 = ptrtoint %"class.v8::internal::compiler::Node"* %937 to i64
  %943 = add i64 %942, 32
  br i1 %941, label %944, label %948

944:                                              ; preds = %935
  %945 = inttoptr i64 %943 to i64*
  %946 = load i64, i64* %945, align 8
  %947 = add i64 %946, 16
  br label %948

948:                                              ; preds = %935, %944
  %949 = phi i64 [ %947, %944 ], [ %943, %935 ]
  %950 = inttoptr i64 %949 to %"class.v8::internal::compiler::Node"**
  %951 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %950, i64 1
  %952 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %951, align 8
  %953 = icmp eq %"class.v8::internal::compiler::Node"* %952, %0
  br i1 %953, label %966, label %954

954:                                              ; preds = %948
  br i1 %941, label %957, label %955

955:                                              ; preds = %954
  %956 = bitcast %"class.v8::internal::compiler::Node"* %937 to %"struct.v8::internal::compiler::Node::Use"*
  br label %960

957:                                              ; preds = %954
  %958 = inttoptr i64 %943 to %"struct.v8::internal::compiler::Node::Use"**
  %959 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %958, align 8
  br label %960

960:                                              ; preds = %957, %955
  %961 = phi %"struct.v8::internal::compiler::Node::Use"* [ %956, %955 ], [ %959, %957 ]
  %962 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %961, i64 -2
  %963 = icmp eq %"class.v8::internal::compiler::Node"* %952, null
  br i1 %963, label %965, label %964

964:                                              ; preds = %960
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %952, %"struct.v8::internal::compiler::Node::Use"* %962) #5
  br label %965

965:                                              ; preds = %964, %960
  store %"class.v8::internal::compiler::Node"* %0, %"class.v8::internal::compiler::Node"** %951, align 8
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %0, %"struct.v8::internal::compiler::Node::Use"* %962) #5
  br label %966

966:                                              ; preds = %948, %965
  %967 = add nuw i32 %936, 1
  %968 = icmp ult i32 %967, %38
  br i1 %968, label %935, label %969

969:                                              ; preds = %966, %932, %898
  %970 = inttoptr i64 %697 to i64*
  %971 = load i64, i64* %970, align 8
  %972 = icmp eq i64 %971, 0
  br i1 %972, label %687, label %696

973:                                              ; preds = %695, %30, %27, %8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10NodeCopier9CopyNodesINSt3__121__hash_const_iteratorIPNS4_11__hash_nodeIPNS1_4NodeEPvEEEEEEvPNS1_5GraphEPNS0_4ZoneES8_NS_4base14iterator_rangeIT_EEPNS1_19SourcePositionTableEPNS1_15NodeOriginTableE(%"class.v8::internal::compiler::NodeCopier"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"*, %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::NodeOriginTable"*) local_unnamed_addr #0 comdat align 2 {
  %9 = ptrtoint %"struct.std::__1::__hash_node_base"* %4 to i64
  %10 = icmp eq %"struct.std::__1::__hash_node_base"* %4, %5
  br i1 %10, label %566, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::SourcePositionTable", %"class.v8::internal::compiler::SourcePositionTable"* %6, i64 0, i32 2, i32 0
  %13 = icmp eq %"class.v8::internal::compiler::NodeOriginTable"* %7, null
  %14 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %7, i64 0, i32 2, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %7, i64 0, i32 2, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %7, i64 0, i32 2, i32 2
  %17 = bitcast i32* %16 to i64*
  %18 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %7, i64 0, i32 2, i32 3
  %19 = getelementptr inbounds %"class.v8::internal::compiler::NodeOriginTable", %"class.v8::internal::compiler::NodeOriginTable"* %7, i64 0, i32 3
  %20 = bitcast i8** %19 to i64*
  %21 = bitcast i8** %14 to i64*
  %22 = getelementptr inbounds %"class.v8::internal::compiler::NodeCopier", %"class.v8::internal::compiler::NodeCopier"* %0, i64 0, i32 1
  %23 = bitcast %"class.v8::internal::ZoneVector.43"** %22 to %"class.std::__1::vector.44"**
  %24 = getelementptr inbounds %"class.v8::internal::compiler::NodeCopier", %"class.v8::internal::compiler::NodeCopier"* %0, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::compiler::NodeCopier", %"class.v8::internal::compiler::NodeCopier"* %0, i64 0, i32 2
  %26 = bitcast i8** %14 to <2 x i8*>*
  %27 = bitcast i8** %14 to <2 x i8*>*
  br label %32

28:                                               ; preds = %315
  br i1 %10, label %566, label %29

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::NodeCopier", %"class.v8::internal::compiler::NodeCopier"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  br label %567

32:                                               ; preds = %11, %315
  %33 = phi i64 [ %9, %11 ], [ %317, %315 ]
  %34 = phi i64 [ undef, %11 ], [ %56, %315 ]
  %35 = inttoptr i64 %33 to %"struct.std::__1::__hash_node"*
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %35, i64 0, i32 2
  %37 = bitcast %"class.v8::internal::compiler::Node"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = inttoptr i64 %38 to %"class.v8::internal::compiler::Node"*
  %40 = tail call i64 @_ZNK2v88internal8compiler19SourcePositionTable17GetSourcePositionEPNS1_4NodeE(%"class.v8::internal::compiler::SourcePositionTable"* %6, %"class.v8::internal::compiler::Node"* %39) #5
  %41 = load i64, i64* %12, align 8
  %42 = and i64 %40, 140737488355327
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %32
  store i64 %40, i64* %12, align 8
  br label %45

45:                                               ; preds = %32, %44
  br i1 %13, label %55, label %46

46:                                               ; preds = %45
  %47 = load <2 x i8*>, <2 x i8*>* %26, align 8
  %48 = load i64, i64* %17, align 8
  %49 = load i64, i64* %18, align 8
  %50 = load i64, i64* %20, align 8
  %51 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %39, i64 0, i32 3
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 16777215
  %54 = zext i32 %53 to i64
  store i64 %50, i64* %21, align 8
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8** %15, align 8
  store i32 1, i32* %16, align 8
  store i64 %54, i64* %18, align 8
  br label %55

55:                                               ; preds = %45, %46
  %56 = phi i64 [ %34, %45 ], [ %48, %46 ]
  %57 = phi i64 [ -9223372036854775808, %45 ], [ %49, %46 ]
  %58 = phi <2 x i8*> [ <i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0)>, %45 ], [ %47, %46 ]
  %59 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %23, align 8
  %60 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %59, i64 0, i32 0, i32 1
  %61 = bitcast %"class.v8::internal::compiler::Node"*** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::vector.44"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = lshr exact i64 %65, 3
  %67 = trunc i64 %66 to i32
  %68 = load i32, i32* %24, align 4
  %69 = add i32 %68, 1
  %70 = add i32 %69, %67
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %39, i64 0, i32 2
  store i32 %70, i32* %71, align 8
  %72 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %23, align 8
  %73 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %72, i64 0, i32 0, i32 1
  %74 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %72, i64 0, i32 0, i32 2, i32 0, i32 0
  %76 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %75, align 8
  %77 = icmp eq %"class.v8::internal::compiler::Node"** %74, %76
  %78 = ptrtoint %"class.v8::internal::compiler::Node"** %76 to i64
  br i1 %77, label %84, label %79

79:                                               ; preds = %55
  %80 = bitcast %"class.v8::internal::compiler::Node"** %74 to i64*
  store i64 %38, i64* %80, align 8
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %74, i64 1
  %82 = ptrtoint %"class.v8::internal::compiler::Node"** %81 to i64
  %83 = bitcast %"class.v8::internal::compiler::Node"*** %73 to i64*
  store i64 %82, i64* %83, align 8
  br label %310

84:                                               ; preds = %55
  %85 = ptrtoint %"class.v8::internal::compiler::Node"** %74 to i64
  %86 = bitcast %"class.v8::internal::compiler::Node"*** %73 to i64*
  %87 = bitcast %"class.std::__1::vector.44"* %72 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %85, %88
  %90 = ashr exact i64 %89, 3
  %91 = add nsw i64 %90, 1
  %92 = icmp ugt i64 %91, 268435455
  br i1 %92, label %93, label %95

93:                                               ; preds = %84
  %94 = bitcast %"class.std::__1::vector.44"* %72 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %94) #6
  unreachable

95:                                               ; preds = %84
  %96 = bitcast %"class.v8::internal::compiler::Node"*** %75 to i64*
  %97 = sub i64 %78, %88
  %98 = ashr exact i64 %97, 3
  %99 = icmp ult i64 %98, 134217727
  br i1 %99, label %100, label %105

100:                                              ; preds = %95
  %101 = ashr exact i64 %97, 2
  %102 = icmp ult i64 %101, %91
  %103 = select i1 %102, i64 %91, i64 %101
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %123, label %105

105:                                              ; preds = %100, %95
  %106 = phi i64 [ %103, %100 ], [ 268435455, %95 ]
  %107 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %72, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %108 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %107, align 8
  %109 = shl i64 %106, 3
  %110 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %108, i64 0, i32 2
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %108, i64 0, i32 3
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 %113, %111
  %115 = icmp ugt i64 %109, %114
  br i1 %115, label %116, label %118, !prof !3

116:                                              ; preds = %105
  %117 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %108, i64 %109) #5
  br label %120

118:                                              ; preds = %105
  %119 = add i64 %111, %109
  store i64 %119, i64* %110, align 8
  br label %120

120:                                              ; preds = %118, %116
  %121 = phi i64 [ %117, %116 ], [ %111, %118 ]
  %122 = inttoptr i64 %121 to %"class.v8::internal::compiler::Node"**
  br label %123

123:                                              ; preds = %120, %100
  %124 = phi i64 [ %106, %120 ], [ 0, %100 ]
  %125 = phi %"class.v8::internal::compiler::Node"** [ %122, %120 ], [ null, %100 ]
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %125, i64 %90
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %125, i64 %124
  %128 = ptrtoint %"class.v8::internal::compiler::Node"** %127 to i64
  %129 = bitcast %"class.v8::internal::compiler::Node"** %126 to i64*
  store i64 %38, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 1
  %131 = ptrtoint %"class.v8::internal::compiler::Node"** %130 to i64
  %132 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %72, i64 0, i32 0, i32 0
  %133 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %132, align 8
  %134 = ptrtoint %"class.v8::internal::compiler::Node"** %133 to i64
  %135 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %73, align 8
  %136 = icmp eq %"class.v8::internal::compiler::Node"** %135, %133
  br i1 %136, label %307, label %137

137:                                              ; preds = %123
  %138 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %135, i64 -1
  %139 = ptrtoint %"class.v8::internal::compiler::Node"** %138 to i64
  %140 = sub i64 %139, %134
  %141 = lshr i64 %140, 3
  %142 = add nuw nsw i64 %141, 1
  %143 = icmp ult i64 %142, 4
  br i1 %143, label %237, label %144

144:                                              ; preds = %137
  %145 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %125, i64 -1
  %146 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %135, i64 -1
  %147 = ptrtoint %"class.v8::internal::compiler::Node"** %146 to i64
  %148 = sub i64 %147, %134
  %149 = lshr i64 %148, 3
  %150 = sub nsw i64 %90, %149
  %151 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %145, i64 %150
  %152 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %135, i64 -1
  %153 = sub nsw i64 0, %149
  %154 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %152, i64 %153
  %155 = icmp ult %"class.v8::internal::compiler::Node"** %151, %135
  %156 = icmp ult %"class.v8::internal::compiler::Node"** %154, %126
  %157 = and i1 %155, %156
  br i1 %157, label %237, label %158

158:                                              ; preds = %144
  %159 = and i64 %142, 4611686018427387900
  %160 = sub nsw i64 0, %159
  %161 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 %160
  %162 = sub nsw i64 0, %159
  %163 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %135, i64 %162
  %164 = add nsw i64 %159, -4
  %165 = lshr exact i64 %164, 2
  %166 = add nuw nsw i64 %165, 1
  %167 = and i64 %166, 1
  %168 = icmp eq i64 %164, 0
  br i1 %168, label %213, label %169

169:                                              ; preds = %158
  %170 = sub nuw nsw i64 %166, %167
  %171 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 -1
  %172 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %135, i64 -1
  %173 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 -1
  %174 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %135, i64 -1
  br label %175

175:                                              ; preds = %175, %169
  %176 = phi i64 [ 0, %169 ], [ %210, %175 ]
  %177 = phi i64 [ %170, %169 ], [ %211, %175 ]
  %178 = sub i64 0, %176
  %179 = sub i64 0, %176
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %171, i64 %178
  %181 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %172, i64 %179
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 -1
  %183 = bitcast %"class.v8::internal::compiler::Node"** %182 to <2 x i64>*
  %184 = load <2 x i64>, <2 x i64>* %183, align 8, !alias.scope !5
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %181, i64 -2
  %186 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %185, i64 -1
  %187 = bitcast %"class.v8::internal::compiler::Node"** %186 to <2 x i64>*
  %188 = load <2 x i64>, <2 x i64>* %187, align 8, !alias.scope !5
  %189 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 -1
  %190 = bitcast %"class.v8::internal::compiler::Node"** %189 to <2 x i64>*
  store <2 x i64> %184, <2 x i64>* %190, align 8, !alias.scope !8, !noalias !5
  %191 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 -2
  %192 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %191, i64 -1
  %193 = bitcast %"class.v8::internal::compiler::Node"** %192 to <2 x i64>*
  store <2 x i64> %188, <2 x i64>* %193, align 8, !alias.scope !8, !noalias !5
  %194 = sub nuw nsw i64 -4, %176
  %195 = sub nuw nsw i64 -4, %176
  %196 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %173, i64 %194
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %174, i64 %195
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 -1
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to <2 x i64>*
  %200 = load <2 x i64>, <2 x i64>* %199, align 8, !alias.scope !5
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 -2
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %201, i64 -1
  %203 = bitcast %"class.v8::internal::compiler::Node"** %202 to <2 x i64>*
  %204 = load <2 x i64>, <2 x i64>* %203, align 8, !alias.scope !5
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -1
  %206 = bitcast %"class.v8::internal::compiler::Node"** %205 to <2 x i64>*
  store <2 x i64> %200, <2 x i64>* %206, align 8, !alias.scope !8, !noalias !5
  %207 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -2
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, i64 -1
  %209 = bitcast %"class.v8::internal::compiler::Node"** %208 to <2 x i64>*
  store <2 x i64> %204, <2 x i64>* %209, align 8, !alias.scope !8, !noalias !5
  %210 = add i64 %176, 8
  %211 = add i64 %177, -2
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %213, label %175, !llvm.loop !10

213:                                              ; preds = %175, %158
  %214 = phi i64 [ 0, %158 ], [ %210, %175 ]
  %215 = icmp eq i64 %167, 0
  br i1 %215, label %235, label %216

216:                                              ; preds = %213
  %217 = sub i64 0, %214
  %218 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 -1
  %219 = sub i64 0, %214
  %220 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %135, i64 -1
  %221 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %218, i64 %217
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %220, i64 %219
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %222, i64 -1
  %224 = bitcast %"class.v8::internal::compiler::Node"** %223 to <2 x i64>*
  %225 = load <2 x i64>, <2 x i64>* %224, align 8, !alias.scope !5
  %226 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %222, i64 -2
  %227 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %226, i64 -1
  %228 = bitcast %"class.v8::internal::compiler::Node"** %227 to <2 x i64>*
  %229 = load <2 x i64>, <2 x i64>* %228, align 8, !alias.scope !5
  %230 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 -1
  %231 = bitcast %"class.v8::internal::compiler::Node"** %230 to <2 x i64>*
  store <2 x i64> %225, <2 x i64>* %231, align 8, !alias.scope !8, !noalias !5
  %232 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %221, i64 -2
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %232, i64 -1
  %234 = bitcast %"class.v8::internal::compiler::Node"** %233 to <2 x i64>*
  store <2 x i64> %229, <2 x i64>* %234, align 8, !alias.scope !8, !noalias !5
  br label %235

235:                                              ; preds = %213, %216
  %236 = icmp eq i64 %142, %159
  br i1 %236, label %307, label %237

237:                                              ; preds = %235, %144, %137
  %238 = phi %"class.v8::internal::compiler::Node"** [ %126, %144 ], [ %126, %137 ], [ %161, %235 ]
  %239 = phi %"class.v8::internal::compiler::Node"** [ %135, %144 ], [ %135, %137 ], [ %163, %235 ]
  %240 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %239, i64 -1
  %241 = ptrtoint %"class.v8::internal::compiler::Node"** %240 to i64
  %242 = sub i64 %241, %134
  %243 = lshr i64 %242, 3
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 7
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %258, label %247

247:                                              ; preds = %237, %247
  %248 = phi %"class.v8::internal::compiler::Node"** [ %251, %247 ], [ %238, %237 ]
  %249 = phi %"class.v8::internal::compiler::Node"** [ %252, %247 ], [ %239, %237 ]
  %250 = phi i64 [ %256, %247 ], [ %245, %237 ]
  %251 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %248, i64 -1
  %252 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %249, i64 -1
  %253 = bitcast %"class.v8::internal::compiler::Node"** %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = bitcast %"class.v8::internal::compiler::Node"** %251 to i64*
  store i64 %254, i64* %255, align 8
  %256 = add i64 %250, -1
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %258, label %247, !llvm.loop !12

258:                                              ; preds = %247, %237
  %259 = phi %"class.v8::internal::compiler::Node"** [ undef, %237 ], [ %251, %247 ]
  %260 = phi %"class.v8::internal::compiler::Node"** [ %238, %237 ], [ %251, %247 ]
  %261 = phi %"class.v8::internal::compiler::Node"** [ %239, %237 ], [ %252, %247 ]
  %262 = icmp ult i64 %242, 56
  br i1 %262, label %307, label %263

263:                                              ; preds = %258, %263
  %264 = phi %"class.v8::internal::compiler::Node"** [ %301, %263 ], [ %260, %258 ]
  %265 = phi %"class.v8::internal::compiler::Node"** [ %302, %263 ], [ %261, %258 ]
  %266 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %264, i64 -1
  %267 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %265, i64 -1
  %268 = bitcast %"class.v8::internal::compiler::Node"** %267 to i64*
  %269 = load i64, i64* %268, align 8
  %270 = bitcast %"class.v8::internal::compiler::Node"** %266 to i64*
  store i64 %269, i64* %270, align 8
  %271 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %264, i64 -2
  %272 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %265, i64 -2
  %273 = bitcast %"class.v8::internal::compiler::Node"** %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = bitcast %"class.v8::internal::compiler::Node"** %271 to i64*
  store i64 %274, i64* %275, align 8
  %276 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %264, i64 -3
  %277 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %265, i64 -3
  %278 = bitcast %"class.v8::internal::compiler::Node"** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = bitcast %"class.v8::internal::compiler::Node"** %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %264, i64 -4
  %282 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %265, i64 -4
  %283 = bitcast %"class.v8::internal::compiler::Node"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = bitcast %"class.v8::internal::compiler::Node"** %281 to i64*
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %264, i64 -5
  %287 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %265, i64 -5
  %288 = bitcast %"class.v8::internal::compiler::Node"** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"class.v8::internal::compiler::Node"** %286 to i64*
  store i64 %289, i64* %290, align 8
  %291 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %264, i64 -6
  %292 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %265, i64 -6
  %293 = bitcast %"class.v8::internal::compiler::Node"** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %"class.v8::internal::compiler::Node"** %291 to i64*
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %264, i64 -7
  %297 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %265, i64 -7
  %298 = bitcast %"class.v8::internal::compiler::Node"** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"class.v8::internal::compiler::Node"** %296 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %264, i64 -8
  %302 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %265, i64 -8
  %303 = bitcast %"class.v8::internal::compiler::Node"** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"class.v8::internal::compiler::Node"** %301 to i64*
  store i64 %304, i64* %305, align 8
  %306 = icmp eq %"class.v8::internal::compiler::Node"** %302, %133
  br i1 %306, label %307, label %263, !llvm.loop !14

307:                                              ; preds = %258, %263, %235, %123
  %308 = phi %"class.v8::internal::compiler::Node"** [ %126, %123 ], [ %161, %235 ], [ %259, %258 ], [ %301, %263 ]
  %309 = ptrtoint %"class.v8::internal::compiler::Node"** %308 to i64
  store i64 %309, i64* %87, align 8
  store i64 %131, i64* %86, align 8
  store i64 %128, i64* %96, align 8
  br label %310

310:                                              ; preds = %79, %307
  %311 = load i32, i32* %25, align 8
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %320

313:                                              ; preds = %562, %310
  br i1 %13, label %315, label %314

314:                                              ; preds = %313
  store <2 x i8*> %58, <2 x i8*>* %27, align 8
  store i64 %56, i64* %17, align 8
  store i64 %57, i64* %18, align 8
  br label %315

315:                                              ; preds = %313, %314
  store i64 %41, i64* %12, align 8
  %316 = inttoptr i64 %33 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = inttoptr i64 %317 to %"struct.std::__1::__hash_node_base"*
  %319 = icmp eq %"struct.std::__1::__hash_node_base"* %318, %5
  br i1 %319, label %28, label %32

320:                                              ; preds = %310, %562
  %321 = phi i32 [ %563, %562 ], [ 0, %310 ]
  %322 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph9CloneNodeEPKNS1_4NodeE(%"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Node"* %39) #5
  %323 = ptrtoint %"class.v8::internal::compiler::Node"* %322 to i64
  %324 = load %"class.std::__1::vector.44"*, %"class.std::__1::vector.44"** %23, align 8
  %325 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %324, i64 0, i32 0, i32 1
  %326 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %325, align 8
  %327 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %324, i64 0, i32 0, i32 2, i32 0, i32 0
  %328 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %327, align 8
  %329 = icmp eq %"class.v8::internal::compiler::Node"** %326, %328
  %330 = ptrtoint %"class.v8::internal::compiler::Node"** %328 to i64
  br i1 %329, label %336, label %331

331:                                              ; preds = %320
  %332 = bitcast %"class.v8::internal::compiler::Node"** %326 to i64*
  store i64 %323, i64* %332, align 8
  %333 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %326, i64 1
  %334 = ptrtoint %"class.v8::internal::compiler::Node"** %333 to i64
  %335 = bitcast %"class.v8::internal::compiler::Node"*** %325 to i64*
  store i64 %334, i64* %335, align 8
  br label %562

336:                                              ; preds = %320
  %337 = ptrtoint %"class.v8::internal::compiler::Node"** %326 to i64
  %338 = bitcast %"class.v8::internal::compiler::Node"*** %325 to i64*
  %339 = bitcast %"class.std::__1::vector.44"* %324 to i64*
  %340 = load i64, i64* %339, align 8
  %341 = sub i64 %337, %340
  %342 = ashr exact i64 %341, 3
  %343 = add nsw i64 %342, 1
  %344 = icmp ugt i64 %343, 268435455
  br i1 %344, label %345, label %347

345:                                              ; preds = %336
  %346 = bitcast %"class.std::__1::vector.44"* %324 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %346) #6
  unreachable

347:                                              ; preds = %336
  %348 = bitcast %"class.v8::internal::compiler::Node"*** %327 to i64*
  %349 = sub i64 %330, %340
  %350 = ashr exact i64 %349, 3
  %351 = icmp ult i64 %350, 134217727
  br i1 %351, label %352, label %357

352:                                              ; preds = %347
  %353 = ashr exact i64 %349, 2
  %354 = icmp ult i64 %353, %343
  %355 = select i1 %354, i64 %343, i64 %353
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %375, label %357

357:                                              ; preds = %352, %347
  %358 = phi i64 [ %355, %352 ], [ 268435455, %347 ]
  %359 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %324, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %360 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %359, align 8
  %361 = shl i64 %358, 3
  %362 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %360, i64 0, i32 2
  %363 = load i64, i64* %362, align 8
  %364 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %360, i64 0, i32 3
  %365 = load i64, i64* %364, align 8
  %366 = sub i64 %365, %363
  %367 = icmp ugt i64 %361, %366
  br i1 %367, label %368, label %370, !prof !3

368:                                              ; preds = %357
  %369 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %360, i64 %361) #5
  br label %372

370:                                              ; preds = %357
  %371 = add i64 %363, %361
  store i64 %371, i64* %362, align 8
  br label %372

372:                                              ; preds = %370, %368
  %373 = phi i64 [ %369, %368 ], [ %363, %370 ]
  %374 = inttoptr i64 %373 to %"class.v8::internal::compiler::Node"**
  br label %375

375:                                              ; preds = %372, %352
  %376 = phi i64 [ %358, %372 ], [ 0, %352 ]
  %377 = phi %"class.v8::internal::compiler::Node"** [ %374, %372 ], [ null, %352 ]
  %378 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %377, i64 %342
  %379 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %377, i64 %376
  %380 = ptrtoint %"class.v8::internal::compiler::Node"** %379 to i64
  %381 = bitcast %"class.v8::internal::compiler::Node"** %378 to i64*
  store i64 %323, i64* %381, align 8
  %382 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %378, i64 1
  %383 = ptrtoint %"class.v8::internal::compiler::Node"** %382 to i64
  %384 = getelementptr inbounds %"class.std::__1::vector.44", %"class.std::__1::vector.44"* %324, i64 0, i32 0, i32 0
  %385 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %384, align 8
  %386 = ptrtoint %"class.v8::internal::compiler::Node"** %385 to i64
  %387 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %325, align 8
  %388 = icmp eq %"class.v8::internal::compiler::Node"** %387, %385
  br i1 %388, label %559, label %389

389:                                              ; preds = %375
  %390 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %387, i64 -1
  %391 = ptrtoint %"class.v8::internal::compiler::Node"** %390 to i64
  %392 = sub i64 %391, %386
  %393 = lshr i64 %392, 3
  %394 = add nuw nsw i64 %393, 1
  %395 = icmp ult i64 %394, 4
  br i1 %395, label %489, label %396

396:                                              ; preds = %389
  %397 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %377, i64 -1
  %398 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %387, i64 -1
  %399 = ptrtoint %"class.v8::internal::compiler::Node"** %398 to i64
  %400 = sub i64 %399, %386
  %401 = lshr i64 %400, 3
  %402 = sub nsw i64 %342, %401
  %403 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %397, i64 %402
  %404 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %387, i64 -1
  %405 = sub nsw i64 0, %401
  %406 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 %405
  %407 = icmp ult %"class.v8::internal::compiler::Node"** %403, %387
  %408 = icmp ult %"class.v8::internal::compiler::Node"** %406, %378
  %409 = and i1 %407, %408
  br i1 %409, label %489, label %410

410:                                              ; preds = %396
  %411 = and i64 %394, 4611686018427387900
  %412 = sub nsw i64 0, %411
  %413 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %378, i64 %412
  %414 = sub nsw i64 0, %411
  %415 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %387, i64 %414
  %416 = add nsw i64 %411, -4
  %417 = lshr exact i64 %416, 2
  %418 = add nuw nsw i64 %417, 1
  %419 = and i64 %418, 1
  %420 = icmp eq i64 %416, 0
  br i1 %420, label %465, label %421

421:                                              ; preds = %410
  %422 = sub nuw nsw i64 %418, %419
  %423 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %378, i64 -1
  %424 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %387, i64 -1
  %425 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %378, i64 -1
  %426 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %387, i64 -1
  br label %427

427:                                              ; preds = %427, %421
  %428 = phi i64 [ 0, %421 ], [ %462, %427 ]
  %429 = phi i64 [ %422, %421 ], [ %463, %427 ]
  %430 = sub i64 0, %428
  %431 = sub i64 0, %428
  %432 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %423, i64 %430
  %433 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %424, i64 %431
  %434 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %433, i64 -1
  %435 = bitcast %"class.v8::internal::compiler::Node"** %434 to <2 x i64>*
  %436 = load <2 x i64>, <2 x i64>* %435, align 8, !alias.scope !15
  %437 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %433, i64 -2
  %438 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %437, i64 -1
  %439 = bitcast %"class.v8::internal::compiler::Node"** %438 to <2 x i64>*
  %440 = load <2 x i64>, <2 x i64>* %439, align 8, !alias.scope !15
  %441 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %432, i64 -1
  %442 = bitcast %"class.v8::internal::compiler::Node"** %441 to <2 x i64>*
  store <2 x i64> %436, <2 x i64>* %442, align 8, !alias.scope !18, !noalias !15
  %443 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %432, i64 -2
  %444 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %443, i64 -1
  %445 = bitcast %"class.v8::internal::compiler::Node"** %444 to <2 x i64>*
  store <2 x i64> %440, <2 x i64>* %445, align 8, !alias.scope !18, !noalias !15
  %446 = sub nuw nsw i64 -4, %428
  %447 = sub nuw nsw i64 -4, %428
  %448 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %425, i64 %446
  %449 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %426, i64 %447
  %450 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %449, i64 -1
  %451 = bitcast %"class.v8::internal::compiler::Node"** %450 to <2 x i64>*
  %452 = load <2 x i64>, <2 x i64>* %451, align 8, !alias.scope !15
  %453 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %449, i64 -2
  %454 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %453, i64 -1
  %455 = bitcast %"class.v8::internal::compiler::Node"** %454 to <2 x i64>*
  %456 = load <2 x i64>, <2 x i64>* %455, align 8, !alias.scope !15
  %457 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %448, i64 -1
  %458 = bitcast %"class.v8::internal::compiler::Node"** %457 to <2 x i64>*
  store <2 x i64> %452, <2 x i64>* %458, align 8, !alias.scope !18, !noalias !15
  %459 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %448, i64 -2
  %460 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 -1
  %461 = bitcast %"class.v8::internal::compiler::Node"** %460 to <2 x i64>*
  store <2 x i64> %456, <2 x i64>* %461, align 8, !alias.scope !18, !noalias !15
  %462 = add i64 %428, 8
  %463 = add i64 %429, -2
  %464 = icmp eq i64 %463, 0
  br i1 %464, label %465, label %427, !llvm.loop !20

465:                                              ; preds = %427, %410
  %466 = phi i64 [ 0, %410 ], [ %462, %427 ]
  %467 = icmp eq i64 %419, 0
  br i1 %467, label %487, label %468

468:                                              ; preds = %465
  %469 = sub i64 0, %466
  %470 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %378, i64 -1
  %471 = sub i64 0, %466
  %472 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %387, i64 -1
  %473 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %470, i64 %469
  %474 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %472, i64 %471
  %475 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %474, i64 -1
  %476 = bitcast %"class.v8::internal::compiler::Node"** %475 to <2 x i64>*
  %477 = load <2 x i64>, <2 x i64>* %476, align 8, !alias.scope !15
  %478 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %474, i64 -2
  %479 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %478, i64 -1
  %480 = bitcast %"class.v8::internal::compiler::Node"** %479 to <2 x i64>*
  %481 = load <2 x i64>, <2 x i64>* %480, align 8, !alias.scope !15
  %482 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %473, i64 -1
  %483 = bitcast %"class.v8::internal::compiler::Node"** %482 to <2 x i64>*
  store <2 x i64> %477, <2 x i64>* %483, align 8, !alias.scope !18, !noalias !15
  %484 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %473, i64 -2
  %485 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %484, i64 -1
  %486 = bitcast %"class.v8::internal::compiler::Node"** %485 to <2 x i64>*
  store <2 x i64> %481, <2 x i64>* %486, align 8, !alias.scope !18, !noalias !15
  br label %487

487:                                              ; preds = %465, %468
  %488 = icmp eq i64 %394, %411
  br i1 %488, label %559, label %489

489:                                              ; preds = %487, %396, %389
  %490 = phi %"class.v8::internal::compiler::Node"** [ %378, %396 ], [ %378, %389 ], [ %413, %487 ]
  %491 = phi %"class.v8::internal::compiler::Node"** [ %387, %396 ], [ %387, %389 ], [ %415, %487 ]
  %492 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %491, i64 -1
  %493 = ptrtoint %"class.v8::internal::compiler::Node"** %492 to i64
  %494 = sub i64 %493, %386
  %495 = lshr i64 %494, 3
  %496 = add nuw nsw i64 %495, 1
  %497 = and i64 %496, 7
  %498 = icmp eq i64 %497, 0
  br i1 %498, label %510, label %499

499:                                              ; preds = %489, %499
  %500 = phi %"class.v8::internal::compiler::Node"** [ %503, %499 ], [ %490, %489 ]
  %501 = phi %"class.v8::internal::compiler::Node"** [ %504, %499 ], [ %491, %489 ]
  %502 = phi i64 [ %508, %499 ], [ %497, %489 ]
  %503 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %500, i64 -1
  %504 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %501, i64 -1
  %505 = bitcast %"class.v8::internal::compiler::Node"** %504 to i64*
  %506 = load i64, i64* %505, align 8
  %507 = bitcast %"class.v8::internal::compiler::Node"** %503 to i64*
  store i64 %506, i64* %507, align 8
  %508 = add i64 %502, -1
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %510, label %499, !llvm.loop !21

510:                                              ; preds = %499, %489
  %511 = phi %"class.v8::internal::compiler::Node"** [ undef, %489 ], [ %503, %499 ]
  %512 = phi %"class.v8::internal::compiler::Node"** [ %490, %489 ], [ %503, %499 ]
  %513 = phi %"class.v8::internal::compiler::Node"** [ %491, %489 ], [ %504, %499 ]
  %514 = icmp ult i64 %494, 56
  br i1 %514, label %559, label %515

515:                                              ; preds = %510, %515
  %516 = phi %"class.v8::internal::compiler::Node"** [ %553, %515 ], [ %512, %510 ]
  %517 = phi %"class.v8::internal::compiler::Node"** [ %554, %515 ], [ %513, %510 ]
  %518 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %516, i64 -1
  %519 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %517, i64 -1
  %520 = bitcast %"class.v8::internal::compiler::Node"** %519 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = bitcast %"class.v8::internal::compiler::Node"** %518 to i64*
  store i64 %521, i64* %522, align 8
  %523 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %516, i64 -2
  %524 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %517, i64 -2
  %525 = bitcast %"class.v8::internal::compiler::Node"** %524 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = bitcast %"class.v8::internal::compiler::Node"** %523 to i64*
  store i64 %526, i64* %527, align 8
  %528 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %516, i64 -3
  %529 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %517, i64 -3
  %530 = bitcast %"class.v8::internal::compiler::Node"** %529 to i64*
  %531 = load i64, i64* %530, align 8
  %532 = bitcast %"class.v8::internal::compiler::Node"** %528 to i64*
  store i64 %531, i64* %532, align 8
  %533 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %516, i64 -4
  %534 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %517, i64 -4
  %535 = bitcast %"class.v8::internal::compiler::Node"** %534 to i64*
  %536 = load i64, i64* %535, align 8
  %537 = bitcast %"class.v8::internal::compiler::Node"** %533 to i64*
  store i64 %536, i64* %537, align 8
  %538 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %516, i64 -5
  %539 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %517, i64 -5
  %540 = bitcast %"class.v8::internal::compiler::Node"** %539 to i64*
  %541 = load i64, i64* %540, align 8
  %542 = bitcast %"class.v8::internal::compiler::Node"** %538 to i64*
  store i64 %541, i64* %542, align 8
  %543 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %516, i64 -6
  %544 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %517, i64 -6
  %545 = bitcast %"class.v8::internal::compiler::Node"** %544 to i64*
  %546 = load i64, i64* %545, align 8
  %547 = bitcast %"class.v8::internal::compiler::Node"** %543 to i64*
  store i64 %546, i64* %547, align 8
  %548 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %516, i64 -7
  %549 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %517, i64 -7
  %550 = bitcast %"class.v8::internal::compiler::Node"** %549 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = bitcast %"class.v8::internal::compiler::Node"** %548 to i64*
  store i64 %551, i64* %552, align 8
  %553 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %516, i64 -8
  %554 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %517, i64 -8
  %555 = bitcast %"class.v8::internal::compiler::Node"** %554 to i64*
  %556 = load i64, i64* %555, align 8
  %557 = bitcast %"class.v8::internal::compiler::Node"** %553 to i64*
  store i64 %556, i64* %557, align 8
  %558 = icmp eq %"class.v8::internal::compiler::Node"** %554, %385
  br i1 %558, label %559, label %515, !llvm.loop !22

559:                                              ; preds = %510, %515, %487, %375
  %560 = phi %"class.v8::internal::compiler::Node"** [ %378, %375 ], [ %413, %487 ], [ %511, %510 ], [ %553, %515 ]
  %561 = ptrtoint %"class.v8::internal::compiler::Node"** %560 to i64
  store i64 %561, i64* %339, align 8
  store i64 %383, i64* %338, align 8
  store i64 %380, i64* %348, align 8
  br label %562

562:                                              ; preds = %331, %559
  %563 = add nuw i32 %321, 1
  %564 = load i32, i32* %25, align 8
  %565 = icmp ult i32 %563, %564
  br i1 %565, label %320, label %313

566:                                              ; preds = %579, %8, %28
  ret void

567:                                              ; preds = %29, %579
  %568 = phi i32 [ %31, %29 ], [ %580, %579 ]
  %569 = phi i64 [ %9, %29 ], [ %582, %579 ]
  %570 = inttoptr i64 %569 to %"struct.std::__1::__hash_node"*
  %571 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %570, i64 0, i32 2
  %572 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %571, align 8
  %573 = icmp eq i32 %568, 0
  br i1 %573, label %579, label %574

574:                                              ; preds = %567
  %575 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %572, i64 0, i32 3
  %576 = ptrtoint %"class.v8::internal::compiler::Node"* %572 to i64
  %577 = add i64 %576, 32
  %578 = inttoptr i64 %577 to i64*
  br label %585

579:                                              ; preds = %611, %567
  %580 = phi i32 [ 0, %567 ], [ %613, %611 ]
  %581 = inttoptr i64 %569 to i64*
  %582 = load i64, i64* %581, align 8
  %583 = inttoptr i64 %582 to %"struct.std::__1::__hash_node_base"*
  %584 = icmp eq %"struct.std::__1::__hash_node_base"* %583, %5
  br i1 %584, label %566, label %567

585:                                              ; preds = %574, %611
  %586 = phi i32 [ 0, %574 ], [ %612, %611 ]
  %587 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* %0, %"class.v8::internal::compiler::Node"* %572, i32 %586) #5
  %588 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %587, i64 0, i32 3
  %589 = ptrtoint %"class.v8::internal::compiler::Node"* %587 to i64
  %590 = add i64 %589, 32
  %591 = inttoptr i64 %590 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %592 = inttoptr i64 %590 to i64*
  %593 = bitcast %"class.v8::internal::compiler::Node"* %587 to %"struct.v8::internal::compiler::Node::Use"*
  %594 = inttoptr i64 %590 to %"struct.v8::internal::compiler::Node::Use"**
  br label %595

595:                                              ; preds = %652, %585
  %596 = phi i64 [ %653, %652 ], [ 0, %585 ]
  %597 = load i32, i32* %588, align 4
  %598 = and i32 %597, 251658240
  %599 = icmp eq i32 %598, 251658240
  br i1 %599, label %603, label %600

600:                                              ; preds = %595
  %601 = lshr i32 %597, 24
  %602 = and i32 %601, 15
  br label %607

603:                                              ; preds = %595
  %604 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %591, align 8
  %605 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %604, i64 0, i32 1
  %606 = load i32, i32* %605, align 8
  br label %607

607:                                              ; preds = %600, %603
  %608 = phi i32 [ %602, %600 ], [ %606, %603 ]
  %609 = sext i32 %608 to i64
  %610 = icmp slt i64 %596, %609
  br i1 %610, label %615, label %611

611:                                              ; preds = %607
  %612 = add nuw i32 %586, 1
  %613 = load i32, i32* %30, align 8
  %614 = icmp ult i32 %612, %613
  br i1 %614, label %585, label %579

615:                                              ; preds = %607
  %616 = load i32, i32* %575, align 4
  %617 = and i32 %616, 251658240
  %618 = icmp eq i32 %617, 251658240
  br i1 %618, label %619, label %622

619:                                              ; preds = %615
  %620 = load i64, i64* %578, align 8
  %621 = add i64 %620, 16
  br label %622

622:                                              ; preds = %615, %619
  %623 = phi i64 [ %621, %619 ], [ %577, %615 ]
  %624 = inttoptr i64 %623 to %"class.v8::internal::compiler::Node"**
  %625 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %624, i64 %596
  %626 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %625, align 8
  %627 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"* %0, %"class.v8::internal::compiler::Node"* %626, i32 %586) #5
  %628 = load i32, i32* %588, align 4
  %629 = and i32 %628, 251658240
  %630 = icmp eq i32 %629, 251658240
  br i1 %630, label %631, label %634

631:                                              ; preds = %622
  %632 = load i64, i64* %592, align 8
  %633 = add i64 %632, 16
  br label %634

634:                                              ; preds = %622, %631
  %635 = phi i64 [ %633, %631 ], [ %590, %622 ]
  %636 = inttoptr i64 %635 to %"class.v8::internal::compiler::Node"**
  %637 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %636, i64 %596
  %638 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %637, align 8
  %639 = icmp eq %"class.v8::internal::compiler::Node"* %638, %627
  br i1 %639, label %652, label %640

640:                                              ; preds = %634
  br i1 %630, label %641, label %643

641:                                              ; preds = %640
  %642 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %594, align 8
  br label %643

643:                                              ; preds = %640, %641
  %644 = phi %"struct.v8::internal::compiler::Node::Use"* [ %642, %641 ], [ %593, %640 ]
  %645 = xor i64 %596, -1
  %646 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %644, i64 %645
  %647 = icmp eq %"class.v8::internal::compiler::Node"* %638, null
  br i1 %647, label %649, label %648

648:                                              ; preds = %643
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %638, %"struct.v8::internal::compiler::Node::Use"* %646) #5
  br label %649

649:                                              ; preds = %648, %643
  store %"class.v8::internal::compiler::Node"* %627, %"class.v8::internal::compiler::Node"** %637, align 8
  %650 = icmp eq %"class.v8::internal::compiler::Node"* %627, null
  br i1 %650, label %652, label %651

651:                                              ; preds = %649
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %627, %"struct.v8::internal::compiler::Node::Use"* %646) #5
  br label %652

652:                                              ; preds = %634, %649, %651
  %653 = add nuw nsw i64 %596, 1
  br label %595
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler10NodeCopier3mapEPNS1_4NodeEj(%"class.v8::internal::compiler::NodeCopier"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder13Int32ConstantEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal8compiler4Node11ReplaceUsesEPS2_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i1 zeroext) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5MergeEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9EffectPhiEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext, i32) local_unnamed_addr #2

declare zeroext i8 @_ZN2v88internal8compiler29LoopExitValueRepresentationOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler4Node11RemoveInputEi(%"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder16ResizeMergeOrPhiEPKNS1_8OperatorEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::Operator"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"*, %"class.v8::internal::compiler::Graph"*, i32) unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZNK2v88internal8compiler19SourcePositionTable17GetSourcePositionEPNS1_4NodeE(%"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph9CloneNodeEPKNS1_4NodeE(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

declare i64 @_ZN2v84base10hash_valueEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i64 0, i64 65}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !11}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !13}
!22 = distinct !{!22, !11}
