; ModuleID = '../../media/base/bit_reader_core.cc'
source_filename = "../../media/base/bit_reader_core.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.media::BitReaderCore::ByteStreamProvider" = type { i32 (...)** }
%"class.media::BitReaderCore" = type { %"class.media::BitReaderCore::ByteStreamProvider"*, i32, i32, i64, i32, i64 }

@_ZTVN5media13BitReaderCore18ByteStreamProviderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::BitReaderCore::ByteStreamProvider"*)* @_ZN5media13BitReaderCore18ByteStreamProviderD2Ev to i8*), i8* bitcast (void (%"class.media::BitReaderCore::ByteStreamProvider"*)* @_ZN5media13BitReaderCore18ByteStreamProviderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5media13BitReaderCore18ByteStreamProviderD1Ev = hidden unnamed_addr alias void (%"class.media::BitReaderCore::ByteStreamProvider"*), void (%"class.media::BitReaderCore::ByteStreamProvider"*)* @_ZN5media13BitReaderCore18ByteStreamProviderD2Ev
@_ZN5media13BitReaderCoreC1EPNS0_18ByteStreamProviderE = hidden unnamed_addr alias void (%"class.media::BitReaderCore"*, %"class.media::BitReaderCore::ByteStreamProvider"*), void (%"class.media::BitReaderCore"*, %"class.media::BitReaderCore::ByteStreamProvider"*)* @_ZN5media13BitReaderCoreC2EPNS0_18ByteStreamProviderE
@_ZN5media13BitReaderCoreD1Ev = hidden unnamed_addr alias void (%"class.media::BitReaderCore"*), void (%"class.media::BitReaderCore"*)* @_ZN5media13BitReaderCoreD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media13BitReaderCore18ByteStreamProviderC2Ev(%"class.media::BitReaderCore::ByteStreamProvider"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::BitReaderCore::ByteStreamProvider", %"class.media::BitReaderCore::ByteStreamProvider"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media13BitReaderCore18ByteStreamProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media13BitReaderCore18ByteStreamProviderD2Ev(%"class.media::BitReaderCore::ByteStreamProvider"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5media13BitReaderCore18ByteStreamProviderD0Ev(%"class.media::BitReaderCore::ByteStreamProvider"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media13BitReaderCoreC2EPNS0_18ByteStreamProviderE(%"class.media::BitReaderCore"* nocapture, %"class.media::BitReaderCore::ByteStreamProvider"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 0
  store %"class.media::BitReaderCore::ByteStreamProvider"* %1, %"class.media::BitReaderCore::ByteStreamProvider"** %3, align 8
  %4 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 5
  store i64 0, i64* %5, align 8
  %6 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media13BitReaderCoreD2Ev(%"class.media::BitReaderCore"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media13BitReaderCore8ReadFlagEPb(%"class.media::BitReaderCore"* nocapture, i8* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5media13BitReaderCore6RefillEi(%"class.media::BitReaderCore"* %0, i32 1)
  br i1 %7, label %8, label %20

8:                                                ; preds = %6, %2
  %9 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = lshr i64 %10, 63
  %12 = trunc i64 %11 to i8
  store i8 %12, i8* %1, align 1
  %13 = load i64, i64* %9, align 8
  %14 = shl i64 %13, 1
  store i64 %14, i64* %9, align 8
  %15 = load i32, i32* %3, align 4
  %16 = add nsw i32 %15, -1
  store i32 %16, i32* %3, align 4
  %17 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %17, align 8
  br label %20

20:                                               ; preds = %6, %8
  %21 = phi i1 [ true, %8 ], [ false, %6 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media13BitReaderCore6RefillEi(%"class.media::BitReaderCore"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 64
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 5
  %13 = load i64, i64* %12, align 8
  %14 = zext i32 %5 to i64
  %15 = lshr i64 %13, %14
  %16 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = or i64 %17, %15
  store i64 %18, i64* %16, align 8
  %19 = sub nsw i32 64, %5
  %20 = icmp sgt i32 %9, %19
  br i1 %20, label %23, label %21

21:                                               ; preds = %11
  %22 = add nsw i32 %9, %5
  store i32 %22, i32* %4, align 4
  store i64 0, i64* %12, align 8
  br label %27

23:                                               ; preds = %11
  store i32 64, i32* %4, align 4
  %24 = zext i32 %19 to i64
  %25 = shl i64 %13, %24
  store i64 %25, i64* %12, align 8
  %26 = sub nsw i32 %9, %19
  br label %27

27:                                               ; preds = %23, %21
  %28 = phi i32 [ 64, %23 ], [ %22, %21 ]
  %29 = phi i32 [ %26, %23 ], [ 0, %21 ]
  store i32 %29, i32* %8, align 8
  br label %30

30:                                               ; preds = %2, %7, %27
  %31 = phi i32 [ 64, %2 ], [ %5, %7 ], [ %28, %27 ]
  %32 = icmp slt i32 %31, %1
  br i1 %32, label %33, label %76

33:                                               ; preds = %30
  %34 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %35 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 0
  %36 = load %"class.media::BitReaderCore::ByteStreamProvider"*, %"class.media::BitReaderCore::ByteStreamProvider"** %35, align 8
  %37 = bitcast %"class.media::BitReaderCore::ByteStreamProvider"* %36 to i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)***
  %38 = load i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)**, i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)*, i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)** %38, i64 2
  %40 = load i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)*, i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)** %39, align 8
  %41 = call i32 %40(%"class.media::BitReaderCore::ByteStreamProvider"* %36, i32 8, i8** nonnull %3) #10
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %74, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 5
  store i64 0, i64* %44, align 8
  %45 = bitcast i64* %44 to i8*
  %46 = load i8*, i8** %3, align 8
  %47 = sext i32 %41 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 1 %46, i64 %47, i1 false)
  %48 = load i64, i64* %44, align 8
  %49 = call i64 @llvm.bswap.i64(i64 %48) #10
  store i64 %49, i64* %44, align 8
  %50 = shl nsw i32 %41, 3
  %51 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 4
  store i32 %50, i32* %51, align 8
  %52 = load i32, i32* %4, align 4
  %53 = icmp eq i32 %52, 64
  br i1 %53, label %71, label %54

54:                                               ; preds = %43
  %55 = zext i32 %52 to i64
  %56 = lshr i64 %49, %55
  %57 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  %58 = load i64, i64* %57, align 8
  %59 = or i64 %58, %56
  store i64 %59, i64* %57, align 8
  %60 = sub nsw i32 64, %52
  %61 = icmp sgt i32 %50, %60
  br i1 %61, label %64, label %62

62:                                               ; preds = %54
  %63 = add nsw i32 %52, %50
  store i32 %63, i32* %4, align 4
  store i64 0, i64* %44, align 8
  br label %68

64:                                               ; preds = %54
  store i32 64, i32* %4, align 4
  %65 = zext i32 %60 to i64
  %66 = shl i64 %49, %65
  store i64 %66, i64* %44, align 8
  %67 = sub nsw i32 %50, %60
  br label %68

68:                                               ; preds = %64, %62
  %69 = phi i32 [ 64, %64 ], [ %63, %62 ]
  %70 = phi i32 [ %67, %64 ], [ 0, %62 ]
  store i32 %70, i32* %51, align 8
  br label %71

71:                                               ; preds = %43, %68
  %72 = phi i32 [ 64, %43 ], [ %69, %68 ]
  %73 = icmp sge i32 %72, %1
  br label %74

74:                                               ; preds = %33, %71
  %75 = phi i1 [ %73, %71 ], [ false, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #10
  br label %76

76:                                               ; preds = %30, %74
  %77 = phi i1 [ %75, %74 ], [ true, %30 ]
  ret i1 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media13BitReaderCore18PeekBitsMsbAlignedEiPm(%"class.media::BitReaderCore"* nocapture, i32, i64* nocapture) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %1
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN5media13BitReaderCore6RefillEi(%"class.media::BitReaderCore"* %0, i32 %1)
  br label %9

9:                                                ; preds = %7, %3
  %10 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %2, align 8
  %12 = load i32, i32* %4, align 4
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media13BitReaderCore13SkipBitsSmallEi(%"class.media::BitReaderCore"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = icmp sgt i32 %1, 63
  br i1 %3, label %4, label %21

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  %8 = load i32, i32* %5, align 4
  %9 = icmp slt i32 %8, 64
  br label %10

10:                                               ; preds = %4, %16
  %11 = phi i1 [ %9, %4 ], [ true, %16 ]
  %12 = phi i32 [ %1, %4 ], [ %19, %16 ]
  br i1 %11, label %13, label %16

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @_ZN5media13BitReaderCore6RefillEi(%"class.media::BitReaderCore"* %0, i32 64) #10
  br i1 %14, label %16, label %15

15:                                               ; preds = %13
  store i32 0, i32* %5, align 4
  store i64 0, i64* %7, align 8
  br label %44

16:                                               ; preds = %10, %13
  %17 = load i32, i32* %6, align 8
  %18 = add nsw i32 %17, 64
  store i32 %18, i32* %6, align 8
  store i64 0, i64* %7, align 8
  store i32 0, i32* %5, align 4
  %19 = add nsw i32 %12, -64
  %20 = icmp sgt i32 %19, 63
  br i1 %20, label %10, label %21

21:                                               ; preds = %16, %2
  %22 = phi i32 [ %1, %2 ], [ %19, %16 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %44, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, %22
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = tail call zeroext i1 @_ZN5media13BitReaderCore6RefillEi(%"class.media::BitReaderCore"* %0, i32 %22) #10
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = load i32, i32* %25, align 4
  br label %34

32:                                               ; preds = %28
  store i32 0, i32* %25, align 4
  %33 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  store i64 0, i64* %33, align 8
  br label %44

34:                                               ; preds = %30, %24
  %35 = phi i32 [ %31, %30 ], [ %26, %24 ]
  %36 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = add nsw i32 %37, %22
  store i32 %38, i32* %36, align 8
  %39 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  %40 = load i64, i64* %39, align 8
  %41 = zext i32 %22 to i64
  %42 = shl i64 %40, %41
  store i64 %42, i64* %39, align 8
  %43 = sub nsw i32 %35, %22
  store i32 %43, i32* %25, align 4
  br label %44

44:                                               ; preds = %34, %32, %21, %15
  %45 = phi i1 [ false, %15 ], [ true, %34 ], [ false, %32 ], [ true, %21 ]
  ret i1 %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media13BitReaderCore16ReadBitsInternalEiPm(%"class.media::BitReaderCore"* nocapture, i32, i64* nocapture) local_unnamed_addr #4 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store i64 0, i64* %2, align 8
  br label %31

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, %1
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = tail call zeroext i1 @_ZN5media13BitReaderCore6RefillEi(%"class.media::BitReaderCore"* %0, i32 %1)
  br i1 %11, label %14, label %12

12:                                               ; preds = %10
  store i32 0, i32* %7, align 4
  %13 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  store i64 0, i64* %13, align 8
  store i64 0, i64* %2, align 8
  br label %31

14:                                               ; preds = %10, %6
  %15 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, %1
  store i32 %17, i32* %15, align 8
  %18 = icmp eq i32 %1, 64
  %19 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  %20 = load i64, i64* %19, align 8
  br i1 %18, label %21, label %22

21:                                               ; preds = %14
  store i64 %20, i64* %2, align 8
  store i64 0, i64* %19, align 8
  store i32 0, i32* %7, align 4
  br label %31

22:                                               ; preds = %14
  %23 = sub nsw i32 64, %1
  %24 = zext i32 %23 to i64
  %25 = lshr i64 %20, %24
  store i64 %25, i64* %2, align 8
  %26 = load i64, i64* %19, align 8
  %27 = zext i32 %1 to i64
  %28 = shl i64 %26, %27
  store i64 %28, i64* %19, align 8
  %29 = load i32, i32* %7, align 4
  %30 = sub nsw i32 %29, %1
  store i32 %30, i32* %7, align 4
  br label %31

31:                                               ; preds = %22, %21, %12, %5
  %32 = phi i1 [ true, %5 ], [ true, %21 ], [ true, %22 ], [ false, %12 ]
  ret i1 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media13BitReaderCore8SkipBitsEi(%"class.media::BitReaderCore"*, i32) local_unnamed_addr #4 align 2 {
  %3 = alloca i8*, align 8
  %4 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = add nsw i32 %7, %5
  %9 = icmp slt i32 %8, %1
  br i1 %9, label %49, label %10

10:                                               ; preds = %2
  %11 = icmp sgt i32 %1, 63
  br i1 %11, label %12, label %27

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 1
  %14 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  %15 = icmp slt i32 %5, 64
  br label %16

16:                                               ; preds = %22, %12
  %17 = phi i1 [ %15, %12 ], [ true, %22 ]
  %18 = phi i32 [ %1, %12 ], [ %25, %22 ]
  br i1 %17, label %19, label %22

19:                                               ; preds = %16
  %20 = tail call zeroext i1 @_ZN5media13BitReaderCore6RefillEi(%"class.media::BitReaderCore"* %0, i32 64) #10
  br i1 %20, label %22, label %21

21:                                               ; preds = %19
  store i32 0, i32* %4, align 4
  store i64 0, i64* %14, align 8
  br label %117

22:                                               ; preds = %19, %16
  %23 = load i32, i32* %13, align 8
  %24 = add nsw i32 %23, 64
  store i32 %24, i32* %13, align 8
  store i64 0, i64* %14, align 8
  store i32 0, i32* %4, align 4
  %25 = add nsw i32 %18, -64
  %26 = icmp sgt i32 %25, 63
  br i1 %26, label %16, label %27

27:                                               ; preds = %22, %10
  %28 = phi i32 [ %5, %10 ], [ 0, %22 ]
  %29 = phi i32 [ %1, %10 ], [ %25, %22 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %117, label %31

31:                                               ; preds = %27
  %32 = icmp slt i32 %28, %29
  br i1 %32, label %33, label %39

33:                                               ; preds = %31
  %34 = tail call zeroext i1 @_ZN5media13BitReaderCore6RefillEi(%"class.media::BitReaderCore"* %0, i32 %29) #10
  br i1 %34, label %35, label %37

35:                                               ; preds = %33
  %36 = load i32, i32* %4, align 4
  br label %39

37:                                               ; preds = %33
  store i32 0, i32* %4, align 4
  %38 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  store i64 0, i64* %38, align 8
  br label %117

39:                                               ; preds = %35, %31
  %40 = phi i32 [ %36, %35 ], [ %28, %31 ]
  %41 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = add nsw i32 %42, %29
  store i32 %43, i32* %41, align 8
  %44 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  %45 = load i64, i64* %44, align 8
  %46 = zext i32 %29 to i64
  %47 = shl i64 %45, %46
  store i64 %47, i64* %44, align 8
  %48 = sub nsw i32 %40, %29
  store i32 %48, i32* %4, align 4
  br label %117

49:                                               ; preds = %2
  %50 = sub nsw i32 %1, %8
  %51 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = add nsw i32 %52, %8
  store i32 %53, i32* %51, align 8
  %54 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  %55 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 5
  store i64 0, i64* %55, align 8
  %56 = sdiv i32 %50, 8
  %57 = icmp sgt i32 %50, 7
  %58 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 16, i1 false)
  br i1 %57, label %59, label %96

59:                                               ; preds = %49
  %60 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %61 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 0
  %62 = load %"class.media::BitReaderCore::ByteStreamProvider"*, %"class.media::BitReaderCore::ByteStreamProvider"** %61, align 8
  %63 = bitcast %"class.media::BitReaderCore::ByteStreamProvider"* %62 to i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)***
  %64 = load i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)**, i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)*** %63, align 8
  %65 = getelementptr inbounds i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)*, i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)** %64, i64 2
  %66 = load i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)*, i32 (%"class.media::BitReaderCore::ByteStreamProvider"*, i32, i8**)** %65, align 8
  %67 = call i32 %66(%"class.media::BitReaderCore::ByteStreamProvider"* %62, i32 %56, i8** nonnull %3) #10
  %68 = icmp slt i32 %67, %56
  br i1 %68, label %69, label %73

69:                                               ; preds = %59
  %70 = shl i32 %67, 3
  %71 = load i32, i32* %51, align 8
  %72 = add nsw i32 %71, %70
  store i32 %72, i32* %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #10
  br label %117

73:                                               ; preds = %59
  %74 = shl nsw i32 %56, 3
  %75 = sub nsw i32 %50, %74
  %76 = load i32, i32* %51, align 8
  %77 = add nsw i32 %76, %74
  store i32 %77, i32* %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #10
  %78 = icmp sgt i32 %75, 63
  br i1 %78, label %79, label %96

79:                                               ; preds = %73
  %80 = load i32, i32* %4, align 4
  %81 = icmp slt i32 %80, 64
  br label %82

82:                                               ; preds = %91, %79
  %83 = phi i32 [ %77, %79 ], [ %93, %91 ]
  %84 = phi i1 [ %81, %79 ], [ true, %91 ]
  %85 = phi i32 [ %75, %79 ], [ %94, %91 ]
  br i1 %84, label %86, label %91

86:                                               ; preds = %82
  %87 = call zeroext i1 @_ZN5media13BitReaderCore6RefillEi(%"class.media::BitReaderCore"* %0, i32 64) #10
  br i1 %87, label %88, label %90

88:                                               ; preds = %86
  %89 = load i32, i32* %51, align 8
  br label %91

90:                                               ; preds = %86
  store i32 0, i32* %4, align 4
  store i64 0, i64* %54, align 8
  br label %117

91:                                               ; preds = %88, %82
  %92 = phi i32 [ %89, %88 ], [ %83, %82 ]
  %93 = add nsw i32 %92, 64
  store i32 %93, i32* %51, align 8
  store i64 0, i64* %54, align 8
  store i32 0, i32* %4, align 4
  %94 = add nsw i32 %85, -64
  %95 = icmp sgt i32 %94, 63
  br i1 %95, label %82, label %96

96:                                               ; preds = %91, %49, %73
  %97 = phi i32 [ %77, %73 ], [ %53, %49 ], [ %93, %91 ]
  %98 = phi i32 [ %75, %73 ], [ %50, %49 ], [ %94, %91 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %117, label %100

100:                                              ; preds = %96
  %101 = load i32, i32* %4, align 4
  %102 = icmp slt i32 %101, %98
  br i1 %102, label %103, label %109

103:                                              ; preds = %100
  %104 = call zeroext i1 @_ZN5media13BitReaderCore6RefillEi(%"class.media::BitReaderCore"* %0, i32 %98) #10
  br i1 %104, label %105, label %108

105:                                              ; preds = %103
  %106 = load i32, i32* %4, align 4
  %107 = load i32, i32* %51, align 8
  br label %109

108:                                              ; preds = %103
  store i32 0, i32* %4, align 4
  store i64 0, i64* %54, align 8
  br label %117

109:                                              ; preds = %105, %100
  %110 = phi i32 [ %107, %105 ], [ %97, %100 ]
  %111 = phi i32 [ %106, %105 ], [ %101, %100 ]
  %112 = add nsw i32 %110, %98
  store i32 %112, i32* %51, align 8
  %113 = load i64, i64* %54, align 8
  %114 = zext i32 %98 to i64
  %115 = shl i64 %113, %114
  store i64 %115, i64* %54, align 8
  %116 = sub nsw i32 %111, %98
  store i32 %116, i32* %4, align 4
  br label %117

117:                                              ; preds = %109, %108, %96, %90, %69, %39, %37, %27, %21
  %118 = phi i1 [ false, %69 ], [ false, %21 ], [ true, %39 ], [ false, %37 ], [ true, %27 ], [ false, %90 ], [ true, %109 ], [ false, %108 ], [ true, %96 ]
  ret i1 %118
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5media13BitReaderCore9bits_readEv(%"class.media::BitReaderCore"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media13BitReaderCore21RefillCurrentRegisterEv(%"class.media::BitReaderCore"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 64
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %27, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = zext i32 %3 to i64
  %13 = lshr i64 %11, %12
  %14 = getelementptr inbounds %"class.media::BitReaderCore", %"class.media::BitReaderCore"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = or i64 %15, %13
  store i64 %16, i64* %14, align 8
  %17 = sub nsw i32 64, %3
  %18 = icmp sgt i32 %7, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %9
  %20 = add nsw i32 %7, %3
  store i32 %20, i32* %2, align 4
  store i64 0, i64* %10, align 8
  br label %25

21:                                               ; preds = %9
  store i32 64, i32* %2, align 4
  %22 = zext i32 %17 to i64
  %23 = shl i64 %11, %22
  store i64 %23, i64* %10, align 8
  %24 = sub nsw i32 %7, %17
  br label %25

25:                                               ; preds = %21, %19
  %26 = phi i32 [ %24, %21 ], [ 0, %19 ]
  store i32 %26, i32* %6, align 8
  br label %27

27:                                               ; preds = %1, %5, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
