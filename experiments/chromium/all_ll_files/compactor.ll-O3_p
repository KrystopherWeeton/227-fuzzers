; ModuleID = '../../v8/src/heap/cppgc/compactor.cc'
source_filename = "../../v8/src/heap/cppgc/compactor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cppgc::internal::Compactor" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.11", %"class.std::__1::unique_ptr.18", i8, i8, [6 x i8] }>
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"**, %"class.std::__1::__compressed_pair.13" }
%"class.cppgc::internal::NormalPageSpace" = type { %"class.cppgc::internal::BaseSpace.base", %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer", %"class.cppgc::internal::FreeList" }
%"class.cppgc::internal::BaseSpace.base" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8 }>
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"**, %"class.std::__1::__compressed_pair.2" }
%"class.cppgc::internal::BasePage" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8, [7 x i8] }>
%"class.cppgc::internal::HeapBase" = type <{ i32 (...)**, %"class.cppgc::internal::RawHeap", %"class.std::__1::shared_ptr", %"class.cppgc::internal::CagedHeap", %"class.std::__1::unique_ptr.43", %"class.cppgc::internal::HeapRegistry::Subscription", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.cppgc::internal::Compactor", %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::Sweeper", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl", i64, i64, i8, [3 x i8], i32, %"class.std::__1::unique_ptr.151", i64, i8, [7 x i8] }>
%"class.cppgc::internal::RawHeap" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BaseSpace"* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::shared_ptr" = type { %"class.cppgc::Platform"*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::Platform" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.cppgc::internal::CagedHeap" = type { %"class.cppgc::internal::VirtualMemory", %"class.std::__1::unique_ptr.25" }
%"class.cppgc::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, i8*, i64 }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.36" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i64 }
%"class.std::__1::set.36" = type { %"class.std::__1::__tree.37" }
%"class.std::__1::__tree.37" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.cppgc::internal::PageBackend"* }
%"class.cppgc::internal::PageBackend" = type opaque
%"class.cppgc::internal::HeapRegistry::Subscription" = type { %"class.cppgc::internal::HeapBase"* }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::StatsCollector" = type { i64, %"class.v8::base::TimeTicks", i64, i64, i64, i64, %"class.std::__1::vector.52", i8, %"struct.cppgc::internal::StatsCollector::Event", %"struct.cppgc::internal::StatsCollector::Event", %"class.std::__1::unique_ptr.59", %"class.cppgc::Platform"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.std::__1::__compressed_pair.54" }
%"class.cppgc::internal::StatsCollector::AllocationObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"** }
%"struct.cppgc::internal::StatsCollector::Event" = type { [6 x %"class.v8::base::TimeDelta"], [2 x i32], i64, i8, i8, i64, i64, i64 }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.cppgc::internal::MetricRecorder"* }
%"class.cppgc::internal::MetricRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.heap::base::Stack"* }
%"class.heap::base::Stack" = type { i8* }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.cppgc::internal::PreFinalizerHandler"* }
%"class.cppgc::internal::PreFinalizerHandler" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.cppgc::internal::MarkerBase"* }
%"class.cppgc::internal::MarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"struct.cppgc::internal::MarkerBase::MarkingConfig", [4 x i8], %"class.cppgc::Platform"*, %"class.std::__1::shared_ptr.83", %"struct.cppgc::internal::SingleThreadedHandle", %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MutatorMarkingState", i8, [7 x i8], %"class.cppgc::internal::IncrementalMarkingSchedule", %"class.std::__1::unique_ptr.122", i8, [7 x i8] }>
%"struct.cppgc::internal::MarkerBase::MarkingConfig" = type <{ i8, [3 x i8], i32, i8, i8, [2 x i8] }>
%"class.std::__1::shared_ptr.83" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"struct.cppgc::internal::SingleThreadedHandle" = type { %"class.std::__1::shared_ptr.84" }
%"class.std::__1::shared_ptr.84" = type { i8*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::internal::MarkingWorklists" = type { %"class.heap::base::Worklist.85", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.104", %"class.heap::base::Worklist.105", %"class.heap::base::Worklist.106", %"class.heap::base::Worklist.107", %"class.heap::base::Worklist.108", %"class.heap::base::Worklist.108", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.104" }
%"class.heap::base::Worklist.85" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, [512 x %"struct.cppgc::TraceDescriptor"] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"struct.cppgc::TraceDescriptor" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)* }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.heap::base::Worklist.105" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, [64 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::HeapObjectHeader" = type { i32, i16, i16 }
%"class.heap::base::Worklist.106" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem"] }
%"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem" = type { void (%"class.cppgc::LivenessBroker"*, i8*)*, i8* }
%"class.cppgc::LivenessBroker" = type { i8 }
%"class.heap::base::Worklist.107" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem"] }
%"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64 }
%"class.heap::base::Worklist.108" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem"] }
%"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem" = type { i8*, i8*, %"struct.cppgc::TraceDescriptor" }
%"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist" = type { %"class.v8::base::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.86", %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.101", [4 x i8] }>
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88", %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { float }
%"class.heap::base::Worklist.104" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, [16 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::MutatorMarkingState" = type { %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" }
%"class.cppgc::internal::MarkingStateBase" = type { %"class.cppgc::internal::HeapBase"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.std::__1::unique_ptr.109", i64 }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local" = type { %"class.heap::base::Worklist.85"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local" = type { %"class.heap::base::Worklist.106"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local" = type { %"class.heap::base::Worklist.105"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local" = type { %"class.heap::base::Worklist.107"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local" = type { %"class.heap::base::Worklist.108"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local" = type { %"class.heap::base::Worklist.104"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.heap::base::Worklist<const void **, 256>::Local"* }
%"class.heap::base::Worklist<const void **, 256>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<const void **, 256>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<const void **, 256>::Segment"*, [256 x i8**] }
%"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.115", i64 }
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { %"class.cppgc::internal::HeapObjectHeader"**, %"class.cppgc::internal::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.cppgc::internal::HeapObjectHeader"** }
%"class.cppgc::internal::IncrementalMarkingSchedule" = type { %"class.v8::base::TimeTicks", i64, %"struct.std::__1::atomic", double, i64, double }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.cppgc::internal::ConcurrentMarkerBase"* }
%"class.cppgc::internal::ConcurrentMarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MarkingWorklists"*, %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::Platform"*, %"class.std::__1::unique_ptr.125", i64, %"class.v8::base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.cppgc::internal::ObjectAllocator" = type { %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::Sweeper" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::unique_ptr.137" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.cppgc::internal::Sweeper::SweeperImpl"* }
%"class.cppgc::internal::Sweeper::SweeperImpl" = type opaque
%"class.cppgc::internal::PersistentRegion" = type { %"class.std::__1::vector.143", %"class.cppgc::internal::PersistentNode"*, i64 }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"class.std::__1::unique_ptr.145"*, %"class.std::__1::unique_ptr.145"*, %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::unique_ptr.145" = type opaque
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.std::__1::unique_ptr.145"* }
%"class.cppgc::internal::PersistentNode" = type { %union.anon, void (%"class.cppgc::Visitor"*, i8*)* }
%union.anon = type { i8* }
%"class.cppgc::internal::CrossThreadPersistentRegion" = type { %"class.cppgc::internal::PersistentRegion" }
%"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver", i64 }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { i32* }
%"class.cppgc::internal::BaseSpace" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cppgc::internal::BasePage"** }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer" = type { i8*, i64 }
%"class.cppgc::internal::FreeList" = type { %"struct.std::__1::array", %"struct.std::__1::array", i64 }
%"struct.std::__1::array" = type { [17 x %"class.cppgc::internal::FreeList::Entry"*] }
%"class.cppgc::internal::FreeList::Entry" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.cppgc::internal::NormalPageSpace"** }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.cppgc::internal::CompactionWorklists"* }
%"class.cppgc::internal::CompactionWorklists" = type { %"class.heap::base::Worklist" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.cppgc::internal::(anonymous namespace)::CompactionState" = type { %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::(anonymous namespace)::MovableReferences"*, %"class.cppgc::internal::NormalPage"*, i64, %"class.std::__1::vector.211" }
%"class.cppgc::internal::(anonymous namespace)::MovableReferences" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::unordered_map", %"class.std::__1::map" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.157" }
%"class.std::__1::__hash_table.157" = type <{ %"class.std::__1::unique_ptr.158", %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.177", [4 x i8] }>
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160", %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::__hash_node_base.161"** }
%"struct.std::__1::__hash_node_base.161" = type { %"struct.std::__1::__hash_node_base.161"* }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::__bucket_list_deallocator.163" }
%"class.std::__1::__bucket_list_deallocator.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base.161" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.182" }
%"class.std::__1::__tree.182" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.183", %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.cppgc::internal::NormalPage" = type { %"class.cppgc::internal::BasePage.base", i64, %"class.cppgc::internal::PlatformAwareObjectStartBitmap" }
%"class.cppgc::internal::BasePage.base" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8 }>
%"class.cppgc::internal::PlatformAwareObjectStartBitmap" = type { %"class.cppgc::internal::ObjectStartBitmap" }
%"class.cppgc::internal::ObjectStartBitmap" = type { i8*, %"struct.std::__1::array.195" }
%"struct.std::__1::array.195" = type { [2048 x i8] }
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %"class.cppgc::internal::NormalPage"**, %"class.cppgc::internal::NormalPage"**, %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.cppgc::internal::NormalPage"** }
%"class.cppgc::internal::StatsCollector::InternalScope" = type <{ %"class.cppgc::internal::StatsCollector"*, %"class.v8::base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.204" }
%"struct.std::__1::pair.204" = type { i8**, i8* }
%"class.cppgc::internal::LargePage" = type { %"class.cppgc::internal::BasePage.base", i64 }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::TracingController" = type { i32 (...)** }

$_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EEC2IJEEEPS1_NS1_7ScopeIdEDpT_ = comdat any

$_ZN4heap4base8WorklistIPPKvLt256EE5LocalD2Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS3_JRS3_RS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN5cppgc8internal14StatsCollector12GetScopeNameENS1_7ScopeIdENS0_10MarkerBase13MarkingConfig14CollectionTypeE = comdat any

$_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEv = comdat any

$_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE14StartTraceImplEvE28trace_event_unique_atomic398 = comdat any

$_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEvE28trace_event_unique_atomic432 = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"(slot_page) != nullptr\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"(value_page) != nullptr\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"value_header.IsMarked()\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"slot == reference_it->second\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"interior_movable_references_.end() == interior_movable_references_.find(slot)\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"IsEmpty()\00", align 1
@_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE14StartTraceImplEvE28trace_event_unique_atomic398 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.8 = private unnamed_addr constant [6 x i8] c"cppgc\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"CppGC.AtomicMark\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"CppGC.AtomicMark.Minor\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"CppGC.AtomicWeak\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"CppGC.AtomicWeak.Minor\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"CppGC.AtomicCompact\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"CppGC.AtomicCompact.Minor\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"CppGC.AtomicSweep\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"CppGC.AtomicSweep.Minor\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"CppGC.IncrementalMark\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"CppGC.IncrementalMark.Minor\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"CppGC.IncrementalSweep\00", align 1
@.str.20 = private unnamed_addr constant [29 x i8] c"CppGC.IncrementalSweep.Minor\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"CppGC.MarkIncrementalStart\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"CppGC.MarkIncrementalStart.Minor\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"CppGC.MarkIncrementalFinalize\00", align 1
@.str.24 = private unnamed_addr constant [36 x i8] c"CppGC.MarkIncrementalFinalize.Minor\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"CppGC.MarkAtomicPrologue\00", align 1
@.str.26 = private unnamed_addr constant [31 x i8] c"CppGC.MarkAtomicPrologue.Minor\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"CppGC.MarkAtomicEpilogue\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"CppGC.MarkAtomicEpilogue.Minor\00", align 1
@.str.29 = private unnamed_addr constant [28 x i8] c"CppGC.MarkTransitiveClosure\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"CppGC.MarkTransitiveClosure.Minor\00", align 1
@.str.31 = private unnamed_addr constant [40 x i8] c"CppGC.MarkTransitiveClosureWithDeadline\00", align 1
@.str.32 = private unnamed_addr constant [46 x i8] c"CppGC.MarkTransitiveClosureWithDeadline.Minor\00", align 1
@.str.33 = private unnamed_addr constant [26 x i8] c"CppGC.MarkFlushEphemerons\00", align 1
@.str.34 = private unnamed_addr constant [32 x i8] c"CppGC.MarkFlushEphemerons.Minor\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"CppGC.MarkOnAllocation\00", align 1
@.str.36 = private unnamed_addr constant [29 x i8] c"CppGC.MarkOnAllocation.Minor\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"CppGC.MarkProcessBailOutObjects\00", align 1
@.str.38 = private unnamed_addr constant [38 x i8] c"CppGC.MarkProcessBailOutObjects.Minor\00", align 1
@.str.39 = private unnamed_addr constant [33 x i8] c"CppGC.MarkProcessMarkingWorklist\00", align 1
@.str.40 = private unnamed_addr constant [39 x i8] c"CppGC.MarkProcessMarkingWorklist.Minor\00", align 1
@.str.41 = private unnamed_addr constant [38 x i8] c"CppGC.MarkProcessWriteBarrierWorklist\00", align 1
@.str.42 = private unnamed_addr constant [44 x i8] c"CppGC.MarkProcessWriteBarrierWorklist.Minor\00", align 1
@.str.43 = private unnamed_addr constant [45 x i8] c"CppGC.MarkProcessNotFullyconstructedWorklist\00", align 1
@.str.44 = private unnamed_addr constant [51 x i8] c"CppGC.MarkProcessNotFullyconstructedWorklist.Minor\00", align 1
@.str.45 = private unnamed_addr constant [28 x i8] c"CppGC.MarkProcessEphemerons\00", align 1
@.str.46 = private unnamed_addr constant [34 x i8] c"CppGC.MarkProcessEphemerons.Minor\00", align 1
@.str.47 = private unnamed_addr constant [21 x i8] c"CppGC.MarkVisitRoots\00", align 1
@.str.48 = private unnamed_addr constant [27 x i8] c"CppGC.MarkVisitRoots.Minor\00", align 1
@.str.49 = private unnamed_addr constant [42 x i8] c"CppGC.MarkVisitNotFullyConstructedObjects\00", align 1
@.str.50 = private unnamed_addr constant [48 x i8] c"CppGC.MarkVisitNotFullyConstructedObjects.Minor\00", align 1
@.str.51 = private unnamed_addr constant [27 x i8] c"CppGC.MarkVisitPersistents\00", align 1
@.str.52 = private unnamed_addr constant [33 x i8] c"CppGC.MarkVisitPersistents.Minor\00", align 1
@.str.53 = private unnamed_addr constant [38 x i8] c"CppGC.MarkVisitCrossThreadPersistents\00", align 1
@.str.54 = private unnamed_addr constant [44 x i8] c"CppGC.MarkVisitCrossThreadPersistents.Minor\00", align 1
@.str.55 = private unnamed_addr constant [21 x i8] c"CppGC.MarkVisitStack\00", align 1
@.str.56 = private unnamed_addr constant [27 x i8] c"CppGC.MarkVisitStack.Minor\00", align 1
@.str.57 = private unnamed_addr constant [30 x i8] c"CppGC.MarkVisitRememberedSets\00", align 1
@.str.58 = private unnamed_addr constant [36 x i8] c"CppGC.MarkVisitRememberedSets.Minor\00", align 1
@.str.59 = private unnamed_addr constant [31 x i8] c"CppGC.SweepInvokePreFinalizers\00", align 1
@.str.60 = private unnamed_addr constant [37 x i8] c"CppGC.SweepInvokePreFinalizers.Minor\00", align 1
@.str.61 = private unnamed_addr constant [20 x i8] c"CppGC.SweepIdleStep\00", align 1
@.str.62 = private unnamed_addr constant [26 x i8] c"CppGC.SweepIdleStep.Minor\00", align 1
@.str.63 = private unnamed_addr constant [18 x i8] c"CppGC.SweepInTask\00", align 1
@.str.64 = private unnamed_addr constant [24 x i8] c"CppGC.SweepInTask.Minor\00", align 1
@.str.65 = private unnamed_addr constant [24 x i8] c"CppGC.SweepOnAllocation\00", align 1
@.str.66 = private unnamed_addr constant [30 x i8] c"CppGC.SweepOnAllocation.Minor\00", align 1
@.str.67 = private unnamed_addr constant [20 x i8] c"CppGC.SweepFinalize\00", align 1
@.str.68 = private unnamed_addr constant [26 x i8] c"CppGC.SweepFinalize.Minor\00", align 1
@_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEvE28trace_event_unique_atomic432 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.69 = private unnamed_addr constant [6 x i8] c"epoch\00", align 1
@.str.70 = private unnamed_addr constant [7 x i8] c"forced\00", align 1
@.str.71 = private unnamed_addr constant [47 x i8] c"push_segment_ implies push_segment_->IsEmpty()\00", align 1
@.str.72 = private unnamed_addr constant [45 x i8] c"pop_segment_ implies pop_segment_->IsEmpty()\00", align 1

@_ZN5cppgc8internal9CompactorC1ERNS0_7RawHeapE = hidden unnamed_addr alias void (%"class.cppgc::internal::Compactor"*, %"class.cppgc::internal::RawHeap"*), void (%"class.cppgc::internal::Compactor"*, %"class.cppgc::internal::RawHeap"*)* @_ZN5cppgc8internal9CompactorC2ERNS0_7RawHeapE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal9CompactorC2ERNS0_7RawHeapE(%"class.cppgc::internal::Compactor"*, %"class.cppgc::internal::RawHeap"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 0
  store %"class.cppgc::internal::RawHeap"* %1, %"class.cppgc::internal::RawHeap"** %3, align 8
  %4 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.11"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 34, i1 false)
  %7 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %5, align 8
  %8 = getelementptr inbounds %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %1, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr"* %7, %9
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.cppgc::internal::NormalPageSpace"*** %12 to i64*
  %15 = bitcast %"class.std::__1::vector.11"* %4 to i64*
  %16 = bitcast %"class.cppgc::internal::NormalPageSpace"*** %13 to i64*
  %17 = getelementptr inbounds %"class.std::__1::vector.11", %"class.std::__1::vector.11"* %4, i64 0, i32 0, i32 0
  br label %19

18:                                               ; preds = %89, %2
  ret void

19:                                               ; preds = %11, %89
  %20 = phi %"class.std::__1::unique_ptr"* [ %7, %11 ], [ %90, %89 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BaseSpace"** %21, align 8
  %23 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %22, i64 0, i32 5
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %89, label %26

26:                                               ; preds = %19
  %27 = ptrtoint %"class.cppgc::internal::BaseSpace"* %22 to i64
  %28 = load %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"*** %12, align 8
  %29 = load %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"*** %13, align 8
  %30 = icmp ult %"class.cppgc::internal::NormalPageSpace"** %28, %29
  %31 = ptrtoint %"class.cppgc::internal::NormalPageSpace"** %29 to i64
  br i1 %30, label %32, label %36

32:                                               ; preds = %26
  %33 = bitcast %"class.cppgc::internal::NormalPageSpace"** %28 to i64*
  store i64 %27, i64* %33, align 8
  %34 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %28, i64 1
  %35 = ptrtoint %"class.cppgc::internal::NormalPageSpace"** %34 to i64
  store i64 %35, i64* %14, align 8
  br label %89

36:                                               ; preds = %26
  %37 = ptrtoint %"class.cppgc::internal::NormalPageSpace"** %28 to i64
  %38 = load i64, i64* %15, align 8
  %39 = sub i64 %37, %38
  %40 = ashr exact i64 %39, 3
  %41 = add nsw i64 %40, 1
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %45

43:                                               ; preds = %36
  %44 = bitcast %"class.std::__1::vector.11"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %44) #11
  unreachable

45:                                               ; preds = %36
  %46 = sub i64 %31, %38
  %47 = ashr exact i64 %46, 3
  %48 = icmp ult i64 %47, 1152921504606846975
  br i1 %48, label %49, label %57

49:                                               ; preds = %45
  %50 = ashr exact i64 %46, 2
  %51 = icmp ult i64 %50, %41
  %52 = select i1 %51, i64 %41, i64 %50
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %62, label %54

54:                                               ; preds = %49
  %55 = icmp ugt i64 %52, 2305843009213693951
  br i1 %55, label %56, label %57

56:                                               ; preds = %54
  tail call void @abort() #11
  unreachable

57:                                               ; preds = %54, %45
  %58 = phi i64 [ %52, %54 ], [ 2305843009213693951, %45 ]
  %59 = shl i64 %58, 3
  %60 = tail call i8* @_Znwm(i64 %59) #12
  %61 = bitcast i8* %60 to %"class.cppgc::internal::NormalPageSpace"**
  br label %62

62:                                               ; preds = %57, %49
  %63 = phi i64 [ %58, %57 ], [ 0, %49 ]
  %64 = phi %"class.cppgc::internal::NormalPageSpace"** [ %61, %57 ], [ null, %49 ]
  %65 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %64, i64 %40
  %66 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %64, i64 %63
  %67 = ptrtoint %"class.cppgc::internal::NormalPageSpace"** %66 to i64
  %68 = bitcast %"class.cppgc::internal::NormalPageSpace"** %65 to i64*
  store i64 %27, i64* %68, align 8
  %69 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %65, i64 1
  %70 = ptrtoint %"class.cppgc::internal::NormalPageSpace"** %69 to i64
  %71 = load %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"*** %17, align 8
  %72 = load i64, i64* %14, align 8
  %73 = ptrtoint %"class.cppgc::internal::NormalPageSpace"** %71 to i64
  %74 = sub i64 %72, %73
  %75 = ashr exact i64 %74, 3
  %76 = sub nsw i64 0, %75
  %77 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %65, i64 %76
  %78 = ptrtoint %"class.cppgc::internal::NormalPageSpace"** %77 to i64
  %79 = icmp sgt i64 %74, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %62
  %81 = bitcast %"class.cppgc::internal::NormalPageSpace"** %77 to i8*
  %82 = bitcast %"class.cppgc::internal::NormalPageSpace"** %71 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 %74, i1 false) #13
  %83 = load %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"*** %17, align 8
  br label %84

84:                                               ; preds = %80, %62
  %85 = phi %"class.cppgc::internal::NormalPageSpace"** [ %71, %62 ], [ %83, %80 ]
  store i64 %78, i64* %15, align 8
  store i64 %70, i64* %14, align 8
  store i64 %67, i64* %16, align 8
  %86 = icmp eq %"class.cppgc::internal::NormalPageSpace"** %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %84
  %88 = bitcast %"class.cppgc::internal::NormalPageSpace"** %85 to i8*
  tail call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %19, %87, %84, %32
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 1
  %91 = icmp eq %"class.std::__1::unique_ptr"* %90, %9
  br i1 %91, label %18, label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5cppgc8internal9Compactor13ShouldCompactENS_4Heap11MarkingTypeENS_18EmbedderStackStateE(%"class.cppgc::internal::Compactor"* nocapture readonly, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"*** %4, align 8
  %6 = getelementptr %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"*** %6, align 8
  %8 = icmp eq %"class.cppgc::internal::NormalPageSpace"** %5, %7
  br i1 %8, label %40, label %9

9:                                                ; preds = %3
  %10 = icmp eq i8 %1, 0
  %11 = icmp eq i32 %2, 0
  %12 = and i1 %10, %11
  br i1 %12, label %40, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 4
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %40

17:                                               ; preds = %13, %33
  %18 = phi i64 [ %34, %33 ], [ 0, %13 ]
  %19 = phi %"class.cppgc::internal::NormalPageSpace"** [ %35, %33 ], [ %5, %13 ]
  %20 = and i64 %18, 4294967295
  %21 = load %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %19, align 8
  %22 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %21, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %21, i64 0, i32 0, i32 1, i32 0, i32 1
  %24 = bitcast %"class.cppgc::internal::BasePage"*** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.0"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %21, i64 0, i32 2
  %31 = tail call i64 @_ZNK5cppgc8internal8FreeList4SizeEv(%"class.cppgc::internal::FreeList"* %30) #13
  %32 = add i64 %31, %20
  br label %33

33:                                               ; preds = %29, %17
  %34 = phi i64 [ %32, %29 ], [ %20, %17 ]
  %35 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %19, i64 1
  %36 = icmp eq %"class.cppgc::internal::NormalPageSpace"** %35, %7
  br i1 %36, label %37, label %17

37:                                               ; preds = %33
  %38 = and i64 %34, 4294967295
  %39 = icmp ugt i64 %38, 524288
  br label %40

40:                                               ; preds = %13, %3, %9, %37
  %41 = phi i1 [ %39, %37 ], [ false, %9 ], [ false, %3 ], [ true, %13 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5cppgc8internal9Compactor25InitializeIfShouldCompactENS_4Heap11MarkingTypeENS_18EmbedderStackStateE(%"class.cppgc::internal::Compactor"* nocapture, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"*** %4, align 8
  %6 = getelementptr %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 1, i32 0, i32 1
  %7 = load %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"*** %6, align 8
  %8 = icmp eq %"class.cppgc::internal::NormalPageSpace"** %5, %7
  br i1 %8, label %61, label %9

9:                                                ; preds = %3
  %10 = icmp eq i8 %1, 0
  %11 = icmp eq i32 %2, 0
  %12 = and i1 %10, %11
  br i1 %12, label %61, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 4
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %40

17:                                               ; preds = %13, %33
  %18 = phi i64 [ %34, %33 ], [ 0, %13 ]
  %19 = phi %"class.cppgc::internal::NormalPageSpace"** [ %35, %33 ], [ %5, %13 ]
  %20 = and i64 %18, 4294967295
  %21 = load %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %19, align 8
  %22 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %21, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %21, i64 0, i32 0, i32 1, i32 0, i32 1
  %24 = bitcast %"class.cppgc::internal::BasePage"*** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.0"* %22 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %33, label %29

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %21, i64 0, i32 2
  %31 = tail call i64 @_ZNK5cppgc8internal8FreeList4SizeEv(%"class.cppgc::internal::FreeList"* %30) #13
  %32 = add i64 %31, %20
  br label %33

33:                                               ; preds = %29, %17
  %34 = phi i64 [ %32, %29 ], [ %20, %17 ]
  %35 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %19, i64 1
  %36 = icmp eq %"class.cppgc::internal::NormalPageSpace"** %35, %7
  br i1 %36, label %37, label %17

37:                                               ; preds = %33
  %38 = and i64 %34, 4294967295
  %39 = icmp ugt i64 %38, 524288
  br i1 %39, label %40, label %61

40:                                               ; preds = %13, %37
  %41 = tail call i8* @_Znwm(i64 56) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %41, i8 0, i64 56, i1 false) #13
  %42 = bitcast i8* %41 to %"class.v8::base::Mutex"*
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* nonnull %42) #13
  %43 = getelementptr inbounds i8, i8* %41, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #13
  %44 = ptrtoint i8* %41 to i64
  %45 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 2
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.cppgc::internal::CompactionWorklists"*, %"class.cppgc::internal::CompactionWorklists"** %46, align 8
  %48 = bitcast %"class.std::__1::unique_ptr.18"* %45 to i64*
  store i64 %44, i64* %48, align 8
  %49 = icmp eq %"class.cppgc::internal::CompactionWorklists"* %47, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.cppgc::internal::CompactionWorklists", %"class.cppgc::internal::CompactionWorklists"* %47, i64 0, i32 0, i32 1
  %52 = bitcast %"class.heap::base::Worklist<const void **, 256>::Segment"** %51 to i64*
  %53 = load atomic i64, i64* %52 monotonic, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %56, label %55, !prof !3

55:                                               ; preds = %50
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)) #11
  unreachable

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.cppgc::internal::CompactionWorklists", %"class.cppgc::internal::CompactionWorklists"* %47, i64 0, i32 0, i32 0
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %57) #13
  %58 = bitcast %"class.cppgc::internal::CompactionWorklists"* %47 to i8*
  tail call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %56, %40
  %60 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 3
  store i8 1, i8* %60, align 8
  br label %61

61:                                               ; preds = %3, %9, %37, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5cppgc8internal9Compactor24CancelIfShouldNotCompactENS_4Heap11MarkingTypeENS_18EmbedderStackStateE(%"class.cppgc::internal::Compactor"* nocapture, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %72, label %7

7:                                                ; preds = %3
  %8 = getelementptr %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"*** %8, align 8
  %10 = getelementptr %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"*** %10, align 8
  %12 = icmp eq %"class.cppgc::internal::NormalPageSpace"** %9, %11
  br i1 %12, label %44, label %13

13:                                               ; preds = %7
  %14 = icmp eq i8 %1, 0
  %15 = icmp eq i32 %2, 0
  %16 = and i1 %14, %15
  br i1 %16, label %44, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 4
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %72

21:                                               ; preds = %17, %37
  %22 = phi i64 [ %38, %37 ], [ 0, %17 ]
  %23 = phi %"class.cppgc::internal::NormalPageSpace"** [ %39, %37 ], [ %9, %17 ]
  %24 = and i64 %22, 4294967295
  %25 = load %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %23, align 8
  %26 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %25, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %25, i64 0, i32 0, i32 1, i32 0, i32 1
  %28 = bitcast %"class.cppgc::internal::BasePage"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::vector.0"* %26 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %29, %31
  br i1 %32, label %37, label %33

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %25, i64 0, i32 2
  %35 = tail call i64 @_ZNK5cppgc8internal8FreeList4SizeEv(%"class.cppgc::internal::FreeList"* %34) #13
  %36 = add i64 %35, %24
  br label %37

37:                                               ; preds = %33, %21
  %38 = phi i64 [ %36, %33 ], [ %24, %21 ]
  %39 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %23, i64 1
  %40 = icmp eq %"class.cppgc::internal::NormalPageSpace"** %39, %11
  br i1 %40, label %41, label %21

41:                                               ; preds = %37
  %42 = and i64 %38, 4294967295
  %43 = icmp ugt i64 %42, 524288
  br i1 %43, label %72, label %44

44:                                               ; preds = %7, %13, %41
  %45 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %46 = load %"class.cppgc::internal::CompactionWorklists"*, %"class.cppgc::internal::CompactionWorklists"** %45, align 8
  %47 = getelementptr inbounds %"class.cppgc::internal::CompactionWorklists", %"class.cppgc::internal::CompactionWorklists"* %46, i64 0, i32 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %47) #13
  %48 = getelementptr inbounds %"class.cppgc::internal::CompactionWorklists", %"class.cppgc::internal::CompactionWorklists"* %46, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %48 monotonic, align 8
  %49 = getelementptr inbounds %"class.cppgc::internal::CompactionWorklists", %"class.cppgc::internal::CompactionWorklists"* %46, i64 0, i32 0, i32 1
  %50 = load %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"class.heap::base::Worklist<const void **, 256>::Segment"** %49, align 8
  %51 = icmp eq %"class.heap::base::Worklist<const void **, 256>::Segment"* %50, null
  br i1 %51, label %58, label %52

52:                                               ; preds = %44, %52
  %53 = phi %"class.heap::base::Worklist<const void **, 256>::Segment"* [ %56, %52 ], [ %50, %44 ]
  %54 = bitcast %"class.heap::base::Worklist<const void **, 256>::Segment"* %53 to i8*
  %55 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Segment", %"class.heap::base::Worklist<const void **, 256>::Segment"* %53, i64 0, i32 1
  %56 = load %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"class.heap::base::Worklist<const void **, 256>::Segment"** %55, align 8
  tail call void @_ZdlPv(i8* %54) #12
  %57 = icmp eq %"class.heap::base::Worklist<const void **, 256>::Segment"* %56, null
  br i1 %57, label %58, label %52

58:                                               ; preds = %52, %44
  %59 = bitcast %"class.heap::base::Worklist<const void **, 256>::Segment"** %49 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %47) #13
  %60 = load %"class.cppgc::internal::CompactionWorklists"*, %"class.cppgc::internal::CompactionWorklists"** %45, align 8
  store %"class.cppgc::internal::CompactionWorklists"* null, %"class.cppgc::internal::CompactionWorklists"** %45, align 8
  %61 = icmp eq %"class.cppgc::internal::CompactionWorklists"* %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.cppgc::internal::CompactionWorklists", %"class.cppgc::internal::CompactionWorklists"* %60, i64 0, i32 0, i32 1
  %64 = bitcast %"class.heap::base::Worklist<const void **, 256>::Segment"** %63 to i64*
  %65 = load atomic i64, i64* %64 monotonic, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %68, label %67, !prof !3

67:                                               ; preds = %62
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)) #11
  unreachable

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.cppgc::internal::CompactionWorklists", %"class.cppgc::internal::CompactionWorklists"* %60, i64 0, i32 0, i32 0
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %69) #13
  %70 = bitcast %"class.cppgc::internal::CompactionWorklists"* %60 to i8*
  tail call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %58, %68
  store i8 0, i8* %4, align 8
  br label %72

72:                                               ; preds = %17, %41, %3, %71
  %73 = phi i1 [ true, %71 ], [ false, %3 ], [ false, %41 ], [ false, %17 ]
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5cppgc8internal9Compactor22CompactSpacesIfEnabledEv(%"class.cppgc::internal::Compactor"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i8**, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %"class.std::__1::vector.0", align 8
  %6 = alloca %"class.cppgc::internal::(anonymous namespace)::CompactionState", align 8
  %7 = alloca %"class.cppgc::internal::StatsCollector::InternalScope", align 8
  %8 = alloca %"class.cppgc::internal::(anonymous namespace)::MovableReferences", align 8
  %9 = alloca %"class.heap::base::Worklist<const void **, 256>::Local", align 8
  %10 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 3
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %937, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.cppgc::internal::StatsCollector::InternalScope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 0
  %16 = load %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::RawHeap"** %15, align 8
  %17 = getelementptr inbounds %"class.cppgc::internal::RawHeap", %"class.cppgc::internal::RawHeap"* %16, i64 0, i32 0
  %18 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %17, align 8
  %19 = getelementptr inbounds %"class.cppgc::internal::HeapBase", %"class.cppgc::internal::HeapBase"* %18, i64 0, i32 6, i32 0, i32 0, i32 0
  %20 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %19, align 8
  call void @_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EEC2IJEEEPS1_NS1_7ScopeIdEDpT_(%"class.cppgc::internal::StatsCollector::InternalScope"* nonnull %7, %"class.cppgc::internal::StatsCollector"* %20, i32 2)
  %21 = bitcast %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #13
  %22 = bitcast %"class.cppgc::internal::Compactor"* %0 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, i64 0, i32 0
  %26 = bitcast %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, i64 0, i32 1
  %28 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, i64 0, i32 1, i32 0, i32 3
  %29 = bitcast %"class.std::__1::__compressed_pair.177"* %28 to i32*
  %30 = bitcast %"class.std::__1::unordered_map"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %29, align 8
  %31 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %33 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, i64 0, i32 2, i32 0, i32 0
  %34 = bitcast %"class.std::__1::__tree_node_base"** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %32, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = bitcast %"class.heap::base::Worklist<const void **, 256>::Local"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #13
  %36 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.cppgc::internal::CompactionWorklists"*, %"class.cppgc::internal::CompactionWorklists"** %36, align 8
  %38 = getelementptr inbounds %"class.cppgc::internal::CompactionWorklists", %"class.cppgc::internal::CompactionWorklists"* %37, i64 0, i32 0
  %39 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Local", %"class.heap::base::Worklist<const void **, 256>::Local"* %9, i64 0, i32 0
  store %"class.heap::base::Worklist"* %38, %"class.heap::base::Worklist"** %39, align 8
  %40 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Local", %"class.heap::base::Worklist<const void **, 256>::Local"* %9, i64 0, i32 1
  %41 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  store %"class.heap::base::internal::SegmentBase"* %41, %"class.heap::base::internal::SegmentBase"** %40, align 8
  %42 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Local", %"class.heap::base::Worklist<const void **, 256>::Local"* %9, i64 0, i32 2
  %43 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  store %"class.heap::base::internal::SegmentBase"* %43, %"class.heap::base::internal::SegmentBase"** %42, align 8
  %44 = bitcast %"class.heap::base::internal::SegmentBase"** %40 to i64*
  %45 = bitcast %"class.heap::base::internal::SegmentBase"** %42 to i64*
  %46 = bitcast i8*** %2 to i8*
  %47 = bitcast i8** %3 to i8*
  %48 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, i64 0, i32 1, i32 0
  %49 = bitcast i8** %3 to i64*
  %50 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, i64 0, i32 2
  %53 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %32, i64 0, i32 0
  %55 = bitcast i8*** %2 to i64*
  %56 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %52, i64 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::map"* %52 to i64*
  %58 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  br label %59

59:                                               ; preds = %419, %13
  %60 = phi %"class.heap::base::internal::SegmentBase"* [ %420, %419 ], [ %43, %13 ]
  %61 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %60, i64 0, i32 1
  %62 = load i16, i16* %61, align 2
  %63 = icmp eq i16 %62, 0
  %64 = ptrtoint %"class.heap::base::internal::SegmentBase"* %60 to i64
  %65 = bitcast %"class.heap::base::internal::SegmentBase"* %60 to %"class.heap::base::Worklist<const void **, 256>::Segment"*
  br i1 %63, label %66, label %100

66:                                               ; preds = %59
  %67 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %40, align 8
  %68 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %67, i64 0, i32 1
  %69 = load i16, i16* %68, align 2
  %70 = icmp eq i16 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = ptrtoint %"class.heap::base::internal::SegmentBase"* %67 to i64
  store i64 %64, i64* %44, align 8
  store i64 %72, i64* %45, align 8
  %73 = bitcast %"class.heap::base::internal::SegmentBase"* %67 to %"class.heap::base::Worklist<const void **, 256>::Segment"*
  br label %100

74:                                               ; preds = %66
  %75 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %39, align 8
  %76 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %75, i64 0, i32 1
  %77 = bitcast %"class.heap::base::Worklist<const void **, 256>::Segment"** %76 to i64*
  %78 = load atomic i64, i64* %77 monotonic, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %421, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %75, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %81) #13
  %82 = load %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"class.heap::base::Worklist<const void **, 256>::Segment"** %76, align 8
  %83 = icmp eq %"class.heap::base::Worklist<const void **, 256>::Segment"* %82, null
  br i1 %83, label %84, label %85

84:                                               ; preds = %80
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %81) #13
  br label %421

85:                                               ; preds = %80
  %86 = ptrtoint %"class.heap::base::Worklist<const void **, 256>::Segment"* %82 to i64
  %87 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw sub i64* %87, i64 1 monotonic
  %89 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Segment", %"class.heap::base::Worklist<const void **, 256>::Segment"* %82, i64 0, i32 1
  %90 = bitcast %"class.heap::base::Worklist<const void **, 256>::Segment"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  store atomic i64 %91, i64* %77 monotonic, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %81) #13
  %92 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %42, align 8
  %93 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %94 = icmp eq %"class.heap::base::internal::SegmentBase"* %93, %92
  %95 = icmp eq %"class.heap::base::internal::SegmentBase"* %92, null
  %96 = or i1 %95, %94
  br i1 %96, label %99, label %97

97:                                               ; preds = %85
  %98 = bitcast %"class.heap::base::internal::SegmentBase"* %92 to i8*
  call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %97, %85
  store i64 %86, i64* %45, align 8
  br label %100

100:                                              ; preds = %59, %71, %99
  %101 = phi %"class.heap::base::Worklist<const void **, 256>::Segment"* [ %82, %99 ], [ %73, %71 ], [ %65, %59 ]
  %102 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Segment", %"class.heap::base::Worklist<const void **, 256>::Segment"* %101, i64 0, i32 0, i32 1
  %103 = load i16, i16* %102, align 2
  %104 = add i16 %103, -1
  store i16 %104, i16* %102, align 2
  %105 = zext i16 %104 to i64
  %106 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Segment", %"class.heap::base::Worklist<const void **, 256>::Segment"* %101, i64 0, i32 2, i64 %105
  %107 = bitcast i8*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = inttoptr i64 %108 to i8**
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  store i8** %109, i8*** %2, align 8
  %110 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %25, align 8
  %111 = inttoptr i64 %108 to i8*
  %112 = call %"class.cppgc::internal::BasePage"* @_ZN5cppgc8internal8BasePage16FromInnerAddressEPKNS0_8HeapBaseEPv(%"class.cppgc::internal::HeapBase"* %110, i8* %111) #13
  %113 = icmp eq %"class.cppgc::internal::BasePage"* %112, null
  br i1 %113, label %114, label %115, !prof !4

114:                                              ; preds = %100
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

115:                                              ; preds = %100
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  %116 = load i8*, i8** %109, align 8
  store i8* %116, i8** %3, align 8
  %117 = icmp eq i8* %116, null
  %118 = ptrtoint i8* %116 to i64
  br i1 %117, label %419, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %112, i64 0, i32 2
  %121 = load i8, i8* %120, align 8
  %122 = icmp eq i8 %121, 1
  br i1 %122, label %123, label %126

123:                                              ; preds = %119
  %124 = bitcast %"class.cppgc::internal::BasePage"* %112 to %"class.cppgc::internal::LargePage"*
  %125 = call %"class.cppgc::internal::HeapObjectHeader"* @_ZNK5cppgc8internal9LargePage12ObjectHeaderEv(%"class.cppgc::internal::LargePage"* nonnull %124) #13
  br label %171

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %112, i64 1, i32 1
  %128 = bitcast %"class.cppgc::internal::BaseSpace"** %127 to %"class.cppgc::internal::ObjectStartBitmap"*
  %129 = bitcast %"class.cppgc::internal::BaseSpace"** %127 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = sub i64 %108, %130
  %132 = lshr i64 %131, 3
  %133 = lshr i64 %131, 6
  %134 = getelementptr inbounds %"class.cppgc::internal::ObjectStartBitmap", %"class.cppgc::internal::ObjectStartBitmap"* %128, i64 0, i32 1, i32 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = trunc i64 %132 to i32
  %137 = and i32 %136, 7
  %138 = shl i32 2, %137
  %139 = trunc i32 %138 to i8
  %140 = add i8 %139, -1
  %141 = and i8 %140, %135
  %142 = icmp eq i8 %141, 0
  %143 = icmp ne i64 %133, 0
  %144 = and i1 %143, %142
  %145 = inttoptr i64 %130 to i8*
  br i1 %144, label %146, label %154

146:                                              ; preds = %126, %146
  %147 = phi i64 [ %148, %146 ], [ %133, %126 ]
  %148 = add nsw i64 %147, -1
  %149 = getelementptr inbounds %"class.cppgc::internal::ObjectStartBitmap", %"class.cppgc::internal::ObjectStartBitmap"* %128, i64 0, i32 1, i32 0, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = icmp eq i8 %150, 0
  %152 = icmp ne i64 %148, 0
  %153 = and i1 %152, %151
  br i1 %153, label %146, label %154

154:                                              ; preds = %146, %126
  %155 = phi i64 [ %133, %126 ], [ %148, %146 ]
  %156 = phi i8 [ %141, %126 ], [ %150, %146 ]
  %157 = phi i1 [ %142, %126 ], [ %151, %146 ]
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = zext i8 %156 to i32
  %160 = call i32 @llvm.ctlz.i32(i32 %159, i1 true) #13, !range !5
  %161 = add nsw i32 %160, -24
  %162 = sext i32 %161 to i64
  br label %163

163:                                              ; preds = %158, %154
  %164 = phi i64 [ %162, %158 ], [ 8, %154 ]
  %165 = shl i64 %155, 3
  %166 = or i64 %165, 7
  %167 = sub i64 %166, %164
  %168 = shl i64 %167, 3
  %169 = getelementptr inbounds i8, i8* %145, i64 %168
  %170 = bitcast i8* %169 to %"class.cppgc::internal::HeapObjectHeader"*
  br label %171

171:                                              ; preds = %163, %123
  %172 = phi %"class.cppgc::internal::HeapObjectHeader"* [ %125, %123 ], [ %170, %163 ]
  %173 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %172, i64 0, i32 2
  %174 = load i16, i16* %173, align 2
  %175 = and i16 %174, 1
  %176 = icmp eq i16 %175, 0
  br i1 %176, label %419, label %177

177:                                              ; preds = %171
  %178 = load %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::HeapBase"** %25, align 8
  %179 = call %"class.cppgc::internal::BasePage"* @_ZN5cppgc8internal8BasePage16FromInnerAddressEPKNS0_8HeapBaseEPKv(%"class.cppgc::internal::HeapBase"* %178, i8* nonnull %116) #13
  %180 = icmp eq %"class.cppgc::internal::BasePage"* %179, null
  br i1 %180, label %181, label %182, !prof !4

181:                                              ; preds = %177
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %179, i64 0, i32 2
  %184 = load i8, i8* %183, align 8
  %185 = icmp eq i8 %184, 1
  br i1 %185, label %419, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %179, i64 0, i32 1
  %188 = load %"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BaseSpace"** %187, align 8
  %189 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %188, i64 0, i32 5
  %190 = load i8, i8* %189, align 4, !range !2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %419, label %192

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %179, i64 1, i32 1
  %194 = bitcast %"class.cppgc::internal::BaseSpace"** %193 to %"class.cppgc::internal::ObjectStartBitmap"*
  %195 = bitcast %"class.cppgc::internal::BaseSpace"** %193 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = sub i64 %118, %196
  %198 = lshr i64 %197, 3
  %199 = lshr i64 %197, 6
  %200 = getelementptr inbounds %"class.cppgc::internal::ObjectStartBitmap", %"class.cppgc::internal::ObjectStartBitmap"* %194, i64 0, i32 1, i32 0, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = trunc i64 %198 to i32
  %203 = and i32 %202, 7
  %204 = shl i32 2, %203
  %205 = trunc i32 %204 to i8
  %206 = add i8 %205, -1
  %207 = and i8 %206, %201
  %208 = icmp eq i8 %207, 0
  %209 = icmp ne i64 %199, 0
  %210 = and i1 %209, %208
  %211 = inttoptr i64 %196 to i8*
  br i1 %210, label %212, label %220

212:                                              ; preds = %192, %212
  %213 = phi i64 [ %214, %212 ], [ %199, %192 ]
  %214 = add nsw i64 %213, -1
  %215 = getelementptr inbounds %"class.cppgc::internal::ObjectStartBitmap", %"class.cppgc::internal::ObjectStartBitmap"* %194, i64 0, i32 1, i32 0, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = icmp eq i8 %216, 0
  %218 = icmp ne i64 %214, 0
  %219 = and i1 %218, %217
  br i1 %219, label %212, label %220

220:                                              ; preds = %212, %192
  %221 = phi i64 [ %199, %192 ], [ %214, %212 ]
  %222 = phi i8 [ %207, %192 ], [ %216, %212 ]
  %223 = phi i1 [ %208, %192 ], [ %217, %212 ]
  br i1 %223, label %229, label %224

224:                                              ; preds = %220
  %225 = zext i8 %222 to i32
  %226 = call i32 @llvm.ctlz.i32(i32 %225, i1 true) #13, !range !5
  %227 = add nsw i32 %226, -24
  %228 = sext i32 %227 to i64
  br label %229

229:                                              ; preds = %224, %220
  %230 = phi i64 [ %228, %224 ], [ 8, %220 ]
  %231 = shl i64 %221, 3
  %232 = or i64 %231, 7
  %233 = sub i64 %232, %230
  %234 = shl i64 %233, 3
  %235 = getelementptr inbounds i8, i8* %211, i64 6
  %236 = getelementptr inbounds i8, i8* %235, i64 %234
  %237 = bitcast i8* %236 to i16*
  %238 = load i16, i16* %237, align 2
  %239 = and i16 %238, 1
  %240 = icmp eq i16 %239, 0
  br i1 %240, label %241, label %242, !prof !4

241:                                              ; preds = %229
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

242:                                              ; preds = %229
  %243 = load i64, i64* %49, align 8
  %244 = lshr i64 %243, 32
  %245 = shl i64 %243, 3
  %246 = and i64 %245, 4294967288
  %247 = add nuw nsw i64 %246, 8
  %248 = xor i64 %247, %244
  %249 = mul i64 %248, -7070675565921424023
  %250 = lshr i64 %249, 47
  %251 = xor i64 %249, %244
  %252 = xor i64 %251, %250
  %253 = mul i64 %252, -7070675565921424023
  %254 = lshr i64 %253, 47
  %255 = xor i64 %254, %253
  %256 = mul i64 %255, -7070675565921424023
  %257 = load i64, i64* %50, align 8
  %258 = icmp eq i64 %257, 0
  %259 = inttoptr i64 %243 to i8*
  br i1 %258, label %329, label %260

260:                                              ; preds = %242
  %261 = call i64 @llvm.ctpop.i64(i64 %257) #13, !range !6
  %262 = icmp ugt i64 %261, 1
  br i1 %262, label %266, label %263

263:                                              ; preds = %260
  %264 = add i64 %257, -1
  %265 = and i64 %256, %264
  br label %270

266:                                              ; preds = %260
  %267 = icmp ult i64 %256, %257
  br i1 %267, label %270, label %268

268:                                              ; preds = %266
  %269 = urem i64 %256, %257
  br label %270

270:                                              ; preds = %268, %266, %263
  %271 = phi i64 [ %265, %263 ], [ %269, %268 ], [ %256, %266 ]
  %272 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %51, align 8
  %273 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %272, i64 %271
  %274 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %273, align 8
  %275 = icmp eq %"struct.std::__1::__hash_node_base.161"* %274, null
  br i1 %275, label %329, label %276

276:                                              ; preds = %270
  %277 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %274, i64 0, i32 0
  %278 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %277, align 8
  %279 = icmp eq %"struct.std::__1::__hash_node_base.161"* %278, null
  br i1 %279, label %329, label %280

280:                                              ; preds = %276
  %281 = add i64 %257, -1
  br i1 %262, label %282, label %304

282:                                              ; preds = %280, %300
  %283 = phi %"struct.std::__1::__hash_node_base.161"* [ %302, %300 ], [ %278, %280 ]
  %284 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %283, i64 1
  %285 = bitcast %"struct.std::__1::__hash_node_base.161"* %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = icmp eq i64 %286, %256
  br i1 %287, label %295, label %288

288:                                              ; preds = %282
  %289 = icmp ult i64 %286, %257
  br i1 %289, label %292, label %290

290:                                              ; preds = %288
  %291 = urem i64 %286, %257
  br label %292

292:                                              ; preds = %290, %288
  %293 = phi i64 [ %291, %290 ], [ %286, %288 ]
  %294 = icmp eq i64 %293, %271
  br i1 %294, label %300, label %329

295:                                              ; preds = %282
  %296 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %283, i64 2
  %297 = bitcast %"struct.std::__1::__hash_node_base.161"* %296 to i8**
  %298 = load i8*, i8** %297, align 8
  %299 = icmp eq i8* %298, %259
  br i1 %299, label %322, label %300

300:                                              ; preds = %295, %292
  %301 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %283, i64 0, i32 0
  %302 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %301, align 8
  %303 = icmp eq %"struct.std::__1::__hash_node_base.161"* %302, null
  br i1 %303, label %329, label %282

304:                                              ; preds = %280, %318
  %305 = phi %"struct.std::__1::__hash_node_base.161"* [ %320, %318 ], [ %278, %280 ]
  %306 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %305, i64 1
  %307 = bitcast %"struct.std::__1::__hash_node_base.161"* %306 to i64*
  %308 = load i64, i64* %307, align 8
  %309 = icmp eq i64 %308, %256
  br i1 %309, label %313, label %310

310:                                              ; preds = %304
  %311 = and i64 %308, %281
  %312 = icmp eq i64 %311, %271
  br i1 %312, label %318, label %329

313:                                              ; preds = %304
  %314 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %305, i64 2
  %315 = bitcast %"struct.std::__1::__hash_node_base.161"* %314 to i8**
  %316 = load i8*, i8** %315, align 8
  %317 = icmp eq i8* %316, %259
  br i1 %317, label %322, label %318

318:                                              ; preds = %313, %310
  %319 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %305, i64 0, i32 0
  %320 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %319, align 8
  %321 = icmp eq %"struct.std::__1::__hash_node_base.161"* %320, null
  br i1 %321, label %329, label %304

322:                                              ; preds = %313, %295
  %323 = phi %"struct.std::__1::__hash_node_base.161"* [ %283, %295 ], [ %305, %313 ]
  %324 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %323, i64 3
  %325 = bitcast %"struct.std::__1::__hash_node_base.161"* %324 to i8***
  %326 = load i8**, i8*** %325, align 8
  %327 = icmp eq i8** %326, %109
  br i1 %327, label %419, label %328, !prof !3

328:                                              ; preds = %322
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0)) #11
  unreachable

329:                                              ; preds = %318, %310, %300, %292, %270, %242, %276
  %330 = call { %"struct.std::__1::__hash_node_base.161"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS3_JRS3_RS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.157"* %48, i8** nonnull dereferenceable(8) %3, i8** nonnull dereferenceable(8) %3, i8*** nonnull dereferenceable(8) %2) #13
  %331 = getelementptr inbounds %"class.cppgc::internal::BasePage", %"class.cppgc::internal::BasePage"* %112, i64 0, i32 1
  %332 = load %"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BaseSpace"** %331, align 8
  %333 = getelementptr inbounds %"class.cppgc::internal::BaseSpace", %"class.cppgc::internal::BaseSpace"* %332, i64 0, i32 5
  %334 = load i8, i8* %333, align 4, !range !2
  %335 = icmp eq i8 %334, 0
  br i1 %335, label %419, label %336, !prof !3

336:                                              ; preds = %329
  %337 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %338 = icmp eq %"class.std::__1::__tree_node"* %337, null
  br i1 %338, label %390, label %339

339:                                              ; preds = %336
  %340 = load i8**, i8*** %2, align 8
  br label %341

341:                                              ; preds = %341, %339
  %342 = phi %"class.std::__1::__tree_end_node"* [ %32, %339 ], [ %352, %341 ]
  %343 = phi %"class.std::__1::__tree_node"* [ %337, %339 ], [ %353, %341 ]
  %344 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %343, i64 0, i32 1, i32 0, i32 0
  %345 = load i8**, i8*** %344, align 8
  %346 = icmp ult i8** %345, %340
  %347 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %343, i64 0, i32 0, i32 1
  %348 = bitcast %"class.std::__1::__tree_node_base"** %347 to %"class.std::__1::__tree_node"**
  %349 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %343, i64 0, i32 0, i32 0
  %350 = bitcast %"class.std::__1::__tree_node"* %343 to %"class.std::__1::__tree_node"**
  %351 = select i1 %346, %"class.std::__1::__tree_node"** %348, %"class.std::__1::__tree_node"** %350
  %352 = select i1 %346, %"class.std::__1::__tree_end_node"* %342, %"class.std::__1::__tree_end_node"* %349
  %353 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %351, align 8
  %354 = icmp eq %"class.std::__1::__tree_node"* %353, null
  br i1 %354, label %355, label %341

355:                                              ; preds = %341
  %356 = icmp eq %"class.std::__1::__tree_end_node"* %352, %32
  br i1 %356, label %357, label %358

357:                                              ; preds = %358, %355
  br label %364

358:                                              ; preds = %355
  %359 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %352, i64 4
  %360 = bitcast %"class.std::__1::__tree_end_node"* %359 to i8***
  %361 = load i8**, i8*** %360, align 8
  %362 = icmp ult i8** %340, %361
  br i1 %362, label %357, label %363, !prof !7

363:                                              ; preds = %358
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0)) #11
  unreachable

364:                                              ; preds = %357, %386
  %365 = phi %"class.std::__1::__tree_node"* [ %389, %386 ], [ %337, %357 ]
  %366 = phi %"class.std::__1::__tree_node_base"** [ %388, %386 ], [ %31, %357 ]
  %367 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %365, i64 0, i32 1, i32 0, i32 0
  %368 = load i8**, i8*** %367, align 8
  %369 = icmp ult i8** %340, %368
  br i1 %369, label %370, label %376

370:                                              ; preds = %364
  %371 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %365, i64 0, i32 0, i32 0, i32 0
  %372 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %371, align 8
  %373 = icmp eq %"class.std::__1::__tree_node_base"* %372, null
  br i1 %373, label %374, label %386

374:                                              ; preds = %370
  %375 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %365, i64 0, i32 0, i32 0
  br label %390

376:                                              ; preds = %364
  %377 = icmp ult i8** %368, %340
  br i1 %377, label %378, label %384

378:                                              ; preds = %376
  %379 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %365, i64 0, i32 0, i32 1
  %380 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %379, align 8
  %381 = icmp eq %"class.std::__1::__tree_node_base"* %380, null
  br i1 %381, label %382, label %386

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %365, i64 0, i32 0, i32 0
  br label %390

384:                                              ; preds = %376
  %385 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %365, i64 0, i32 0, i32 0
  br label %390

386:                                              ; preds = %378, %370
  %387 = phi %"class.std::__1::__tree_node_base"* [ %372, %370 ], [ %380, %378 ]
  %388 = phi %"class.std::__1::__tree_node_base"** [ %371, %370 ], [ %379, %378 ]
  %389 = bitcast %"class.std::__1::__tree_node_base"* %387 to %"class.std::__1::__tree_node"*
  br label %364

390:                                              ; preds = %336, %384, %382, %374
  %391 = phi %"class.std::__1::__tree_end_node"* [ %375, %374 ], [ %383, %382 ], [ %385, %384 ], [ %32, %336 ]
  %392 = phi %"class.std::__1::__tree_node_base"** [ %371, %374 ], [ %379, %382 ], [ %366, %384 ], [ %54, %336 ]
  %393 = bitcast %"class.std::__1::__tree_node_base"** %392 to %"class.std::__1::__tree_node"**
  %394 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %393, align 8
  %395 = icmp eq %"class.std::__1::__tree_node"* %394, null
  br i1 %395, label %396, label %419

396:                                              ; preds = %390
  %397 = call i8* @_Znwm(i64 48) #12, !noalias !8
  %398 = getelementptr inbounds i8, i8* %397, i64 32
  %399 = load i64, i64* %55, align 8, !noalias !8
  %400 = bitcast i8* %398 to i64*
  store i64 %399, i64* %400, align 8, !noalias !8
  %401 = getelementptr inbounds i8, i8* %397, i64 40
  %402 = bitcast i8* %401 to i8**
  store i8* null, i8** %402, align 8, !noalias !8
  %403 = bitcast i8* %397 to %"class.std::__1::__tree_node_base"*
  %404 = getelementptr inbounds i8, i8* %397, i64 16
  %405 = bitcast i8* %404 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %397, i8 0, i64 16, i1 false) #13
  store %"class.std::__1::__tree_end_node"* %391, %"class.std::__1::__tree_end_node"** %405, align 8
  %406 = bitcast %"class.std::__1::__tree_node_base"** %392 to i8**
  store i8* %397, i8** %406, align 8
  %407 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %408 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %407, i64 0, i32 0
  %409 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %408, align 8
  %410 = icmp eq %"class.std::__1::__tree_node_base"* %409, null
  br i1 %410, label %414, label %411

411:                                              ; preds = %396
  %412 = ptrtoint %"class.std::__1::__tree_node_base"* %409 to i64
  store i64 %412, i64* %57, align 8
  %413 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %392, align 8
  br label %414

414:                                              ; preds = %411, %396
  %415 = phi %"class.std::__1::__tree_node_base"* [ %403, %396 ], [ %413, %411 ]
  %416 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %416, %"class.std::__1::__tree_node_base"* %415) #13
  %417 = load i64, i64* %58, align 8
  %418 = add i64 %417, 1
  store i64 %418, i64* %58, align 8
  br label %419

419:                                              ; preds = %115, %171, %182, %186, %322, %329, %390, %414
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  %420 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %42, align 8
  br label %59

421:                                              ; preds = %74, %84
  %422 = load %"class.cppgc::internal::CompactionWorklists"*, %"class.cppgc::internal::CompactionWorklists"** %36, align 8
  store %"class.cppgc::internal::CompactionWorklists"* null, %"class.cppgc::internal::CompactionWorklists"** %36, align 8
  %423 = icmp eq %"class.cppgc::internal::CompactionWorklists"* %422, null
  br i1 %423, label %433, label %424

424:                                              ; preds = %421
  %425 = getelementptr inbounds %"class.cppgc::internal::CompactionWorklists", %"class.cppgc::internal::CompactionWorklists"* %422, i64 0, i32 0, i32 1
  %426 = bitcast %"class.heap::base::Worklist<const void **, 256>::Segment"** %425 to i64*
  %427 = load atomic i64, i64* %426 monotonic, align 8
  %428 = icmp eq i64 %427, 0
  br i1 %428, label %430, label %429, !prof !3

429:                                              ; preds = %424
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)) #11
  unreachable

430:                                              ; preds = %424
  %431 = getelementptr inbounds %"class.cppgc::internal::CompactionWorklists", %"class.cppgc::internal::CompactionWorklists"* %422, i64 0, i32 0, i32 0
  call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %431) #13
  %432 = bitcast %"class.cppgc::internal::CompactionWorklists"* %422 to i8*
  call void @_ZdlPv(i8* %432) #12
  br label %433

433:                                              ; preds = %421, %430
  %434 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 1, i32 0, i32 0
  %435 = load %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"*** %434, align 8
  %436 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 1, i32 0, i32 1
  %437 = load %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"*** %436, align 8
  %438 = icmp eq %"class.cppgc::internal::NormalPageSpace"** %435, %437
  br i1 %438, label %461, label %439

439:                                              ; preds = %433
  %440 = bitcast %"class.std::__1::vector.0"* %5 to i8*
  %441 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %5, i64 0, i32 0, i32 0
  %442 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %5, i64 0, i32 0, i32 1
  %443 = bitcast %"class.cppgc::internal::(anonymous namespace)::CompactionState"* %6 to i8*
  %444 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::CompactionState", %"class.cppgc::internal::(anonymous namespace)::CompactionState"* %6, i64 0, i32 0
  %445 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::CompactionState", %"class.cppgc::internal::(anonymous namespace)::CompactionState"* %6, i64 0, i32 1
  %446 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::CompactionState", %"class.cppgc::internal::(anonymous namespace)::CompactionState"* %6, i64 0, i32 2
  %447 = bitcast %"class.cppgc::internal::NormalPage"** %446 to i8*
  %448 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::CompactionState", %"class.cppgc::internal::(anonymous namespace)::CompactionState"* %6, i64 0, i32 4
  %449 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::CompactionState", %"class.cppgc::internal::(anonymous namespace)::CompactionState"* %6, i64 0, i32 4, i32 0, i32 1
  %450 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::CompactionState", %"class.cppgc::internal::(anonymous namespace)::CompactionState"* %6, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %451 = bitcast %"class.cppgc::internal::NormalPage"*** %449 to i64*
  %452 = bitcast %"class.std::__1::vector.211"* %448 to i64*
  %453 = bitcast %"class.cppgc::internal::NormalPage"*** %450 to i64*
  %454 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::CompactionState", %"class.cppgc::internal::(anonymous namespace)::CompactionState"* %6, i64 0, i32 3
  %455 = bitcast %"class.cppgc::internal::NormalPage"** %446 to i64*
  %456 = bitcast i8** %4 to i8*
  %457 = bitcast %"class.cppgc::internal::(anonymous namespace)::CompactionState"* %6 to %"class.cppgc::internal::BaseSpace"**
  %458 = bitcast %"class.cppgc::internal::NormalPage"** %446 to %"class.cppgc::internal::BasePage"**
  %459 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::CompactionState", %"class.cppgc::internal::(anonymous namespace)::CompactionState"* %6, i64 0, i32 4, i32 0, i32 0
  %460 = bitcast %"class.cppgc::internal::BasePage"*** %442 to i64*
  br label %503

461:                                              ; preds = %934, %433
  %462 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 4
  store i8 0, i8* %462, align 1
  store i8 0, i8* %10, align 8
  call void @_ZN4heap4base8WorklistIPPKvLt256EE5LocalD2Ev(%"class.heap::base::Worklist<const void **, 256>::Local"* nonnull %9) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #13
  %463 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, i64 0, i32 2, i32 0
  %464 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.182"* %463, %"class.std::__1::__tree_node"* %464) #13
  %465 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %466 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %465, align 8
  %467 = icmp eq %"struct.std::__1::__hash_node_base.161"* %466, null
  br i1 %467, label %474, label %468

468:                                              ; preds = %461, %468
  %469 = phi %"struct.std::__1::__hash_node_base.161"* [ %471, %468 ], [ %466, %461 ]
  %470 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %469, i64 0, i32 0
  %471 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %470, align 8
  %472 = bitcast %"struct.std::__1::__hash_node_base.161"* %469 to i8*
  call void @_ZdlPv(i8* %472) #12
  %473 = icmp eq %"struct.std::__1::__hash_node_base.161"* %471, null
  br i1 %473, label %474, label %468

474:                                              ; preds = %468, %461
  %475 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %476 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %475, align 8
  store %"struct.std::__1::__hash_node_base.161"** null, %"struct.std::__1::__hash_node_base.161"*** %475, align 8
  %477 = icmp eq %"struct.std::__1::__hash_node_base.161"** %476, null
  br i1 %477, label %480, label %478

478:                                              ; preds = %474
  %479 = bitcast %"struct.std::__1::__hash_node_base.161"** %476 to i8*
  call void @_ZdlPv(i8* %479) #12
  br label %480

480:                                              ; preds = %474, %478
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #13
  call void @_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEv(%"class.cppgc::internal::StatsCollector::InternalScope"* nonnull %7) #13
  %481 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %7, i64 0, i32 2
  %482 = load i32, i32* %481, align 8
  %483 = icmp sgt i32 %482, 5
  br i1 %483, label %502, label %484

484:                                              ; preds = %480
  %485 = call i64 @_ZN2v84base9TimeTicks3NowEv() #13
  %486 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %7, i64 0, i32 1, i32 0, i32 0
  %487 = load i64, i64* %486, align 8
  %488 = sub nsw i64 %485, %487
  %489 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %7, i64 0, i32 0
  %490 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %489, align 8
  %491 = load i32, i32* %481, align 8
  %492 = zext i32 %491 to i64
  %493 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %490, i64 0, i32 8, i32 0, i64 %492, i32 0
  %494 = load i64, i64* %493, align 8
  %495 = add nsw i64 %494, %488
  store i64 %495, i64* %493, align 8
  %496 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %489, align 8
  %497 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %496, i64 0, i32 10, i32 0, i32 0, i32 0
  %498 = load %"class.cppgc::internal::MetricRecorder"*, %"class.cppgc::internal::MetricRecorder"** %497, align 8
  %499 = icmp eq %"class.cppgc::internal::MetricRecorder"* %498, null
  br i1 %499, label %502, label %500

500:                                              ; preds = %484
  %501 = load i32, i32* %481, align 8
  call void @_ZN5cppgc8internal14StatsCollector21RecordHistogramSampleENS1_7ScopeIdEN2v84base9TimeDeltaE(%"class.cppgc::internal::StatsCollector"* %496, i32 %501, i64 %488) #13
  br label %502

502:                                              ; preds = %480, %484, %500
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #13
  br label %937

503:                                              ; preds = %439, %934
  %504 = phi %"class.cppgc::internal::NormalPageSpace"** [ %435, %439 ], [ %935, %934 ]
  %505 = load %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %504, align 8
  %506 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %505, i64 0, i32 2
  call void @_ZN5cppgc8internal8FreeList5ClearEv(%"class.cppgc::internal::FreeList"* %506) #13
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %440) #13
  %507 = bitcast %"class.cppgc::internal::NormalPageSpace"* %505 to %"class.cppgc::internal::BaseSpace"*
  call void @_ZN5cppgc8internal9BaseSpace14RemoveAllPagesEv(%"class.std::__1::vector.0"* nonnull sret %5, %"class.cppgc::internal::BaseSpace"* %507) #13
  %508 = load %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"*** %441, align 8
  %509 = load %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"*** %442, align 8
  %510 = icmp eq %"class.cppgc::internal::BasePage"** %508, %509
  br i1 %510, label %928, label %511

511:                                              ; preds = %503
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %443) #13
  store %"class.cppgc::internal::NormalPageSpace"* %505, %"class.cppgc::internal::NormalPageSpace"** %444, align 8
  store %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %8, %"class.cppgc::internal::(anonymous namespace)::MovableReferences"** %445, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %447, i8 0, i64 40, i1 false) #13
  br label %622

512:                                              ; preds = %923
  %513 = load i64, i64* %454, align 8
  %514 = icmp eq i64 %513, 0
  br i1 %514, label %515, label %570

515:                                              ; preds = %512
  %516 = load %"class.cppgc::internal::NormalPage"**, %"class.cppgc::internal::NormalPage"*** %449, align 8
  %517 = load %"class.cppgc::internal::NormalPage"**, %"class.cppgc::internal::NormalPage"*** %450, align 8
  %518 = icmp eq %"class.cppgc::internal::NormalPage"** %516, %517
  %519 = ptrtoint %"class.cppgc::internal::NormalPage"** %517 to i64
  br i1 %518, label %525, label %520

520:                                              ; preds = %515
  %521 = load i64, i64* %455, align 8
  %522 = bitcast %"class.cppgc::internal::NormalPage"** %516 to i64*
  store i64 %521, i64* %522, align 8
  %523 = getelementptr inbounds %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %516, i64 1
  %524 = ptrtoint %"class.cppgc::internal::NormalPage"** %523 to i64
  store i64 %524, i64* %451, align 8
  br label %601

525:                                              ; preds = %515
  %526 = ptrtoint %"class.cppgc::internal::NormalPage"** %516 to i64
  %527 = load i64, i64* %452, align 8
  %528 = sub i64 %526, %527
  %529 = ashr exact i64 %528, 3
  %530 = add nsw i64 %529, 1
  %531 = icmp ugt i64 %530, 2305843009213693951
  br i1 %531, label %532, label %534

532:                                              ; preds = %525
  %533 = bitcast %"class.std::__1::vector.211"* %448 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %533) #11
  unreachable

534:                                              ; preds = %525
  %535 = sub i64 %519, %527
  %536 = ashr exact i64 %535, 3
  %537 = icmp ult i64 %536, 1152921504606846975
  br i1 %537, label %538, label %546

538:                                              ; preds = %534
  %539 = ashr exact i64 %535, 2
  %540 = icmp ult i64 %539, %530
  %541 = select i1 %540, i64 %530, i64 %539
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %551, label %543

543:                                              ; preds = %538
  %544 = icmp ugt i64 %541, 2305843009213693951
  br i1 %544, label %545, label %546

545:                                              ; preds = %543
  call void @abort() #11
  unreachable

546:                                              ; preds = %543, %534
  %547 = phi i64 [ %541, %543 ], [ 2305843009213693951, %534 ]
  %548 = shl i64 %547, 3
  %549 = call i8* @_Znwm(i64 %548) #12
  %550 = bitcast i8* %549 to %"class.cppgc::internal::NormalPage"**
  br label %551

551:                                              ; preds = %546, %538
  %552 = phi i64 [ %547, %546 ], [ 0, %538 ]
  %553 = phi i8* [ %549, %546 ], [ null, %538 ]
  %554 = phi %"class.cppgc::internal::NormalPage"** [ %550, %546 ], [ null, %538 ]
  %555 = getelementptr inbounds %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %554, i64 %529
  %556 = getelementptr inbounds %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %554, i64 %552
  %557 = ptrtoint %"class.cppgc::internal::NormalPage"** %556 to i64
  %558 = load i64, i64* %455, align 8
  %559 = bitcast %"class.cppgc::internal::NormalPage"** %555 to i64*
  store i64 %558, i64* %559, align 8
  %560 = getelementptr inbounds %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %555, i64 1
  %561 = ptrtoint %"class.cppgc::internal::NormalPage"** %560 to i64
  %562 = ptrtoint %"class.cppgc::internal::NormalPage"** %554 to i64
  %563 = icmp sgt i64 %528, 0
  br i1 %563, label %564, label %566

564:                                              ; preds = %551
  %565 = inttoptr i64 %527 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %553, i8* align 8 %565, i64 %528, i1 false) #13
  br label %566

566:                                              ; preds = %564, %551
  store i64 %562, i64* %452, align 8
  store i64 %561, i64* %451, align 8
  store i64 %557, i64* %453, align 8
  %567 = icmp eq i64 %527, 0
  br i1 %567, label %601, label %568

568:                                              ; preds = %566
  %569 = inttoptr i64 %527 to i8*
  call void @_ZdlPv(i8* %569) #12
  br label %601

570:                                              ; preds = %512
  %571 = load %"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BaseSpace"** %457, align 8
  %572 = load %"class.cppgc::internal::BasePage"*, %"class.cppgc::internal::BasePage"** %458, align 8
  call void @_ZN5cppgc8internal9BaseSpace7AddPageEPNS0_8BasePageE(%"class.cppgc::internal::BaseSpace"* %571, %"class.cppgc::internal::BasePage"* %572) #13
  %573 = load i64, i64* %454, align 8
  %574 = call i64 @_ZN5cppgc8internal10NormalPage11PayloadSizeEv() #13
  %575 = icmp eq i64 %573, %574
  br i1 %575, label %601, label %576

576:                                              ; preds = %570
  %577 = call i64 @_ZN5cppgc8internal10NormalPage11PayloadSizeEv() #13
  %578 = load i64, i64* %454, align 8
  %579 = sub i64 %577, %578
  %580 = load %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %446, align 8
  %581 = call i8* @_ZN5cppgc8internal10NormalPage12PayloadStartEv(%"class.cppgc::internal::NormalPage"* %580) #13
  %582 = load i64, i64* %454, align 8
  %583 = getelementptr inbounds i8, i8* %581, i64 %582
  call void @llvm.memset.p0i8.i64(i8* align 1 %583, i8 0, i64 %579, i1 false) #13
  %584 = load %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %444, align 8
  %585 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %584, i64 0, i32 2
  call void @_ZN5cppgc8internal8FreeList3AddENS1_5BlockE(%"class.cppgc::internal::FreeList"* %585, i8* %583, i64 %579) #13
  %586 = load %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %446, align 8
  %587 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %586, i64 0, i32 2
  %588 = bitcast %"class.cppgc::internal::PlatformAwareObjectStartBitmap"* %587 to i64*
  %589 = load i64, i64* %588, align 8
  %590 = ptrtoint i8* %583 to i64
  %591 = sub i64 %590, %589
  %592 = lshr i64 %591, 3
  %593 = lshr i64 %591, 6
  %594 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %586, i64 0, i32 2, i32 0, i32 1, i32 0, i64 %593
  %595 = load i8, i8* %594, align 1
  %596 = trunc i64 %592 to i32
  %597 = and i32 %596, 7
  %598 = shl i32 1, %597
  %599 = trunc i32 %598 to i8
  %600 = or i8 %595, %599
  store i8 %600, i8* %594, align 1
  br label %601

601:                                              ; preds = %576, %570, %568, %566, %520
  %602 = load %"class.cppgc::internal::NormalPage"**, %"class.cppgc::internal::NormalPage"*** %459, align 8
  %603 = load %"class.cppgc::internal::NormalPage"**, %"class.cppgc::internal::NormalPage"*** %449, align 8
  %604 = icmp eq %"class.cppgc::internal::NormalPage"** %602, %603
  br i1 %604, label %614, label %605

605:                                              ; preds = %601, %605
  %606 = phi %"class.cppgc::internal::NormalPage"** [ %610, %605 ], [ %602, %601 ]
  %607 = load %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %606, align 8
  %608 = call i8* @_ZN5cppgc8internal10NormalPage12PayloadStartEv(%"class.cppgc::internal::NormalPage"* %607) #13
  %609 = call i64 @_ZN5cppgc8internal10NormalPage11PayloadSizeEv() #13
  call void @llvm.memset.p0i8.i64(i8* align 1 %608, i8 0, i64 %609, i1 false) #13
  call void @_ZN5cppgc8internal10NormalPage7DestroyEPS1_(%"class.cppgc::internal::NormalPage"* %607) #13
  %610 = getelementptr inbounds %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %606, i64 1
  %611 = icmp eq %"class.cppgc::internal::NormalPage"** %610, %603
  br i1 %611, label %612, label %605

612:                                              ; preds = %605
  %613 = load %"class.cppgc::internal::NormalPage"**, %"class.cppgc::internal::NormalPage"*** %459, align 8
  br label %614

614:                                              ; preds = %612, %601
  %615 = phi %"class.cppgc::internal::NormalPage"** [ %613, %612 ], [ %602, %601 ]
  %616 = icmp eq %"class.cppgc::internal::NormalPage"** %615, null
  br i1 %616, label %620, label %617

617:                                              ; preds = %614
  %618 = ptrtoint %"class.cppgc::internal::NormalPage"** %615 to i64
  store i64 %618, i64* %451, align 8
  %619 = bitcast %"class.cppgc::internal::NormalPage"** %615 to i8*
  call void @_ZdlPv(i8* %619) #12
  br label %620

620:                                              ; preds = %617, %614
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %443) #13
  %621 = load %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"*** %441, align 8
  br label %928

622:                                              ; preds = %926, %511
  %623 = phi %"class.cppgc::internal::NormalPage"* [ null, %511 ], [ %927, %926 ]
  %624 = phi %"class.cppgc::internal::BasePage"** [ %508, %511 ], [ %924, %926 ]
  %625 = bitcast %"class.cppgc::internal::BasePage"** %624 to %"class.cppgc::internal::NormalPage"**
  %626 = load %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %625, align 8
  %627 = ptrtoint %"class.cppgc::internal::NormalPage"* %626 to i64
  %628 = icmp eq %"class.cppgc::internal::NormalPage"* %623, null
  br i1 %628, label %629, label %630

629:                                              ; preds = %622
  store %"class.cppgc::internal::NormalPage"* %626, %"class.cppgc::internal::NormalPage"** %446, align 8
  br label %683

630:                                              ; preds = %622
  %631 = load %"class.cppgc::internal::NormalPage"**, %"class.cppgc::internal::NormalPage"*** %449, align 8
  %632 = load %"class.cppgc::internal::NormalPage"**, %"class.cppgc::internal::NormalPage"*** %450, align 8
  %633 = icmp eq %"class.cppgc::internal::NormalPage"** %631, %632
  %634 = ptrtoint %"class.cppgc::internal::NormalPage"** %632 to i64
  br i1 %633, label %639, label %635

635:                                              ; preds = %630
  %636 = bitcast %"class.cppgc::internal::NormalPage"** %631 to i64*
  store i64 %627, i64* %636, align 8
  %637 = getelementptr inbounds %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %631, i64 1
  %638 = ptrtoint %"class.cppgc::internal::NormalPage"** %637 to i64
  store i64 %638, i64* %451, align 8
  br label %683

639:                                              ; preds = %630
  %640 = ptrtoint %"class.cppgc::internal::NormalPage"** %631 to i64
  %641 = load i64, i64* %452, align 8
  %642 = sub i64 %640, %641
  %643 = ashr exact i64 %642, 3
  %644 = add nsw i64 %643, 1
  %645 = icmp ugt i64 %644, 2305843009213693951
  br i1 %645, label %646, label %648

646:                                              ; preds = %639
  %647 = bitcast %"class.std::__1::vector.211"* %448 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %647) #11
  unreachable

648:                                              ; preds = %639
  %649 = sub i64 %634, %641
  %650 = ashr exact i64 %649, 3
  %651 = icmp ult i64 %650, 1152921504606846975
  br i1 %651, label %652, label %660

652:                                              ; preds = %648
  %653 = ashr exact i64 %649, 2
  %654 = icmp ult i64 %653, %644
  %655 = select i1 %654, i64 %644, i64 %653
  %656 = icmp eq i64 %655, 0
  br i1 %656, label %665, label %657

657:                                              ; preds = %652
  %658 = icmp ugt i64 %655, 2305843009213693951
  br i1 %658, label %659, label %660

659:                                              ; preds = %657
  call void @abort() #11
  unreachable

660:                                              ; preds = %657, %648
  %661 = phi i64 [ %655, %657 ], [ 2305843009213693951, %648 ]
  %662 = shl i64 %661, 3
  %663 = call i8* @_Znwm(i64 %662) #12
  %664 = bitcast i8* %663 to %"class.cppgc::internal::NormalPage"**
  br label %665

665:                                              ; preds = %660, %652
  %666 = phi i64 [ %661, %660 ], [ 0, %652 ]
  %667 = phi i8* [ %663, %660 ], [ null, %652 ]
  %668 = phi %"class.cppgc::internal::NormalPage"** [ %664, %660 ], [ null, %652 ]
  %669 = getelementptr inbounds %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %668, i64 %643
  %670 = getelementptr inbounds %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %668, i64 %666
  %671 = ptrtoint %"class.cppgc::internal::NormalPage"** %670 to i64
  %672 = bitcast %"class.cppgc::internal::NormalPage"** %669 to i64*
  store i64 %627, i64* %672, align 8
  %673 = getelementptr inbounds %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %669, i64 1
  %674 = ptrtoint %"class.cppgc::internal::NormalPage"** %673 to i64
  %675 = ptrtoint %"class.cppgc::internal::NormalPage"** %668 to i64
  %676 = icmp sgt i64 %642, 0
  br i1 %676, label %677, label %679

677:                                              ; preds = %665
  %678 = inttoptr i64 %641 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %667, i8* align 8 %678, i64 %642, i1 false) #13
  br label %679

679:                                              ; preds = %677, %665
  store i64 %675, i64* %452, align 8
  store i64 %674, i64* %451, align 8
  store i64 %671, i64* %453, align 8
  %680 = icmp eq i64 %641, 0
  br i1 %680, label %683, label %681

681:                                              ; preds = %679
  %682 = inttoptr i64 %641 to i8*
  call void @_ZdlPv(i8* %682) #12
  br label %683

683:                                              ; preds = %681, %679, %635, %629
  %684 = getelementptr %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %626, i64 0, i32 2, i32 0, i32 1, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %684, i8 0, i64 2048, i1 false) #13
  %685 = call i8* @_ZN5cppgc8internal10NormalPage12PayloadStartEv(%"class.cppgc::internal::NormalPage"* %626) #13
  %686 = call i8* @_ZN5cppgc8internal10NormalPage10PayloadEndEv(%"class.cppgc::internal::NormalPage"* %626) #13
  %687 = icmp ult i8* %685, %686
  br i1 %687, label %688, label %923

688:                                              ; preds = %683, %919
  %689 = phi i8* [ %920, %919 ], [ %685, %683 ]
  %690 = bitcast i8* %689 to %"class.cppgc::internal::HeapObjectHeader"*
  %691 = getelementptr inbounds i8, i8* %689, i64 6
  %692 = bitcast i8* %691 to i16*
  %693 = load i16, i16* %692, align 2
  %694 = lshr i16 %693, 1
  %695 = zext i16 %694 to i64
  %696 = shl nuw nsw i64 %695, 3
  %697 = getelementptr inbounds i8, i8* %689, i64 4
  %698 = bitcast i8* %697 to i16*
  %699 = load i16, i16* %698, align 2
  %700 = icmp ult i16 %699, 4
  br i1 %700, label %919, label %701

701:                                              ; preds = %688
  %702 = and i16 %693, 1
  %703 = icmp eq i16 %702, 0
  br i1 %703, label %704, label %705

704:                                              ; preds = %701
  call void @_ZN5cppgc8internal16HeapObjectHeader8FinalizeEv(%"class.cppgc::internal::HeapObjectHeader"* %690) #13
  br label %919

705:                                              ; preds = %701
  %706 = and i16 %693, -2
  store i16 %706, i16* %692, align 2
  %707 = load %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %446, align 8
  %708 = call i8* @_ZN5cppgc8internal10NormalPage12PayloadStartEv(%"class.cppgc::internal::NormalPage"* %707) #13
  %709 = load i64, i64* %454, align 8
  %710 = getelementptr inbounds i8, i8* %708, i64 %709
  %711 = getelementptr inbounds i8, i8* %710, i64 %696
  %712 = load %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %446, align 8
  %713 = call i8* @_ZN5cppgc8internal10NormalPage10PayloadEndEv(%"class.cppgc::internal::NormalPage"* %712) #13
  %714 = icmp ugt i8* %711, %713
  br i1 %714, label %715, label %753

715:                                              ; preds = %705
  %716 = load %"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BaseSpace"** %457, align 8
  %717 = load %"class.cppgc::internal::BasePage"*, %"class.cppgc::internal::BasePage"** %458, align 8
  call void @_ZN5cppgc8internal9BaseSpace7AddPageEPNS0_8BasePageE(%"class.cppgc::internal::BaseSpace"* %716, %"class.cppgc::internal::BasePage"* %717) #13
  %718 = load i64, i64* %454, align 8
  %719 = call i64 @_ZN5cppgc8internal10NormalPage11PayloadSizeEv() #13
  %720 = icmp eq i64 %718, %719
  br i1 %720, label %746, label %721

721:                                              ; preds = %715
  %722 = call i64 @_ZN5cppgc8internal10NormalPage11PayloadSizeEv() #13
  %723 = load i64, i64* %454, align 8
  %724 = sub i64 %722, %723
  %725 = load %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %446, align 8
  %726 = call i8* @_ZN5cppgc8internal10NormalPage12PayloadStartEv(%"class.cppgc::internal::NormalPage"* %725) #13
  %727 = load i64, i64* %454, align 8
  %728 = getelementptr inbounds i8, i8* %726, i64 %727
  call void @llvm.memset.p0i8.i64(i8* align 1 %728, i8 0, i64 %724, i1 false) #13
  %729 = load %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %444, align 8
  %730 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace", %"class.cppgc::internal::NormalPageSpace"* %729, i64 0, i32 2
  call void @_ZN5cppgc8internal8FreeList3AddENS1_5BlockE(%"class.cppgc::internal::FreeList"* %730, i8* %728, i64 %724) #13
  %731 = load %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %446, align 8
  %732 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %731, i64 0, i32 2
  %733 = bitcast %"class.cppgc::internal::PlatformAwareObjectStartBitmap"* %732 to i64*
  %734 = load i64, i64* %733, align 8
  %735 = ptrtoint i8* %728 to i64
  %736 = sub i64 %735, %734
  %737 = lshr i64 %736, 3
  %738 = lshr i64 %736, 6
  %739 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %731, i64 0, i32 2, i32 0, i32 1, i32 0, i64 %738
  %740 = load i8, i8* %739, align 1
  %741 = trunc i64 %737 to i32
  %742 = and i32 %741, 7
  %743 = shl i32 1, %742
  %744 = trunc i32 %743 to i8
  %745 = or i8 %740, %744
  store i8 %745, i8* %739, align 1
  br label %746

746:                                              ; preds = %721, %715
  %747 = load %"class.cppgc::internal::NormalPage"**, %"class.cppgc::internal::NormalPage"*** %449, align 8
  %748 = getelementptr inbounds %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %747, i64 -1
  %749 = bitcast %"class.cppgc::internal::NormalPage"** %748 to i64*
  %750 = load i64, i64* %749, align 8
  store i64 %750, i64* %455, align 8
  store %"class.cppgc::internal::NormalPage"** %748, %"class.cppgc::internal::NormalPage"*** %449, align 8
  store i64 0, i64* %454, align 8
  %751 = inttoptr i64 %750 to %"class.cppgc::internal::NormalPage"*
  %752 = call i8* @_ZN5cppgc8internal10NormalPage12PayloadStartEv(%"class.cppgc::internal::NormalPage"* %751) #13
  br label %753

753:                                              ; preds = %746, %705
  %754 = phi i8* [ %752, %746 ], [ %710, %705 ]
  %755 = icmp eq i8* %754, %689
  br i1 %755, label %901, label %756, !prof !4

756:                                              ; preds = %753
  %757 = load %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %446, align 8
  %758 = icmp eq %"class.cppgc::internal::NormalPage"* %757, %626
  br i1 %758, label %759, label %760

759:                                              ; preds = %756
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %754, i8* align 1 %689, i64 %696, i1 false) #13
  br label %761

760:                                              ; preds = %756
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %754, i8* align 1 %689, i64 %696, i1 false) #13
  br label %761

761:                                              ; preds = %760, %759
  %762 = load %"class.cppgc::internal::(anonymous namespace)::MovableReferences"*, %"class.cppgc::internal::(anonymous namespace)::MovableReferences"** %445, align 8
  %763 = getelementptr inbounds i8, i8* %689, i64 8
  %764 = getelementptr inbounds i8, i8* %754, i64 8
  %765 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %762, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %766 = load i64, i64* %765, align 8
  %767 = icmp eq i64 %766, 0
  br i1 %767, label %854, label %768

768:                                              ; preds = %761
  %769 = getelementptr inbounds i8, i8* %754, i64 6
  %770 = bitcast i8* %769 to i16*
  %771 = load i16, i16* %770, align 2
  %772 = lshr i16 %771, 1
  %773 = zext i16 %772 to i64
  %774 = shl nuw nsw i64 %773, 3
  %775 = add nsw i64 %774, -8
  %776 = bitcast i8* %763 to i8**
  %777 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %762, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %778 = bitcast %"class.std::__1::__tree_end_node"* %777 to %"class.std::__1::__tree_node"**
  %779 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %778, align 8
  %780 = icmp eq %"class.std::__1::__tree_node"* %779, null
  br i1 %780, label %854, label %781

781:                                              ; preds = %768, %781
  %782 = phi %"class.std::__1::__tree_end_node"* [ %792, %781 ], [ %777, %768 ]
  %783 = phi %"class.std::__1::__tree_node"* [ %793, %781 ], [ %779, %768 ]
  %784 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %783, i64 0, i32 1, i32 0, i32 0
  %785 = load i8**, i8*** %784, align 8
  %786 = icmp ult i8** %785, %776
  %787 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %783, i64 0, i32 0, i32 1
  %788 = bitcast %"class.std::__1::__tree_node_base"** %787 to %"class.std::__1::__tree_node"**
  %789 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %783, i64 0, i32 0, i32 0
  %790 = bitcast %"class.std::__1::__tree_node"* %783 to %"class.std::__1::__tree_node"**
  %791 = select i1 %786, %"class.std::__1::__tree_node"** %788, %"class.std::__1::__tree_node"** %790
  %792 = select i1 %786, %"class.std::__1::__tree_end_node"* %782, %"class.std::__1::__tree_end_node"* %789
  %793 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %791, align 8
  %794 = icmp eq %"class.std::__1::__tree_node"* %793, null
  br i1 %794, label %795, label %781

795:                                              ; preds = %781
  %796 = icmp eq %"class.std::__1::__tree_end_node"* %792, %777
  br i1 %796, label %854, label %797

797:                                              ; preds = %795
  %798 = ptrtoint i8* %763 to i64
  %799 = getelementptr inbounds i8, i8* %689, i64 %774
  br label %800

800:                                              ; preds = %851, %797
  %801 = phi %"class.std::__1::__tree_end_node"* [ %792, %797 ], [ %852, %851 ]
  %802 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %801, i64 4
  %803 = bitcast %"class.std::__1::__tree_end_node"* %802 to i64*
  %804 = load i64, i64* %803, align 8
  %805 = sub i64 %804, %798
  %806 = icmp ult i64 %805, %775
  br i1 %806, label %807, label %854

807:                                              ; preds = %800
  %808 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %801, i64 5
  %809 = bitcast %"class.std::__1::__tree_end_node"* %808 to i8**
  %810 = load i8*, i8** %809, align 8
  %811 = icmp eq i8* %810, null
  br i1 %811, label %812, label %823

812:                                              ; preds = %807
  %813 = getelementptr inbounds i8, i8* %764, i64 %805
  store i8* %813, i8** %809, align 8
  %814 = bitcast i8* %813 to i8**
  %815 = load i8*, i8** %814, align 8
  %816 = icmp ugt i8* %815, %763
  %817 = icmp ult i8* %815, %799
  %818 = and i1 %816, %817
  br i1 %818, label %819, label %823

819:                                              ; preds = %812
  %820 = ptrtoint i8* %815 to i64
  %821 = sub i64 %820, %798
  %822 = getelementptr inbounds i8, i8* %764, i64 %821
  store i8* %822, i8** %814, align 8
  br label %823

823:                                              ; preds = %819, %812, %807
  %824 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %801, i64 1, i32 0
  %825 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %824, align 8
  %826 = icmp eq %"class.std::__1::__tree_node_base"* %825, null
  br i1 %826, label %827, label %835

827:                                              ; preds = %823
  %828 = bitcast %"class.std::__1::__tree_end_node"* %801 to %"class.std::__1::__tree_node_base"*
  %829 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %801, i64 2
  %830 = bitcast %"class.std::__1::__tree_end_node"* %829 to %"class.std::__1::__tree_end_node"**
  %831 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %830, align 8
  %832 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %831, i64 0, i32 0
  %833 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %832, align 8
  %834 = icmp eq %"class.std::__1::__tree_node_base"* %833, %828
  br i1 %834, label %851, label %842

835:                                              ; preds = %823, %835
  %836 = phi %"class.std::__1::__tree_node_base"* [ %838, %835 ], [ %825, %823 ]
  %837 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %836, i64 0, i32 0, i32 0
  %838 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %837, align 8
  %839 = icmp eq %"class.std::__1::__tree_node_base"* %838, null
  br i1 %839, label %840, label %835

840:                                              ; preds = %835
  %841 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %836, i64 0, i32 0
  br label %851

842:                                              ; preds = %827, %842
  %843 = phi %"class.std::__1::__tree_end_node"** [ %846, %842 ], [ %830, %827 ]
  %844 = bitcast %"class.std::__1::__tree_end_node"** %843 to %"class.std::__1::__tree_node_base"**
  %845 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %844, align 8
  %846 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %845, i64 0, i32 2
  %847 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %846, align 8
  %848 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %847, i64 0, i32 0
  %849 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %848, align 8
  %850 = icmp eq %"class.std::__1::__tree_node_base"* %849, %845
  br i1 %850, label %851, label %842

851:                                              ; preds = %842, %840, %827
  %852 = phi %"class.std::__1::__tree_end_node"* [ %841, %840 ], [ %831, %827 ], [ %847, %842 ]
  %853 = icmp eq %"class.std::__1::__tree_end_node"* %852, %777
  br i1 %853, label %854, label %800

854:                                              ; preds = %851, %800, %795, %768, %761
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %456) #13
  store i8* %763, i8** %4, align 8
  %855 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %762, i64 0, i32 1, i32 0
  %856 = call %"struct.std::__1::__hash_node_base.161"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.157"* %855, i8** nonnull dereferenceable(8) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %456) #13
  %857 = icmp eq %"struct.std::__1::__hash_node_base.161"* %856, null
  br i1 %857, label %901, label %858

858:                                              ; preds = %854
  %859 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %856, i64 3
  %860 = bitcast %"struct.std::__1::__hash_node_base.161"* %859 to i64*
  %861 = load i64, i64* %860, align 8
  %862 = getelementptr inbounds %"class.cppgc::internal::(anonymous namespace)::MovableReferences", %"class.cppgc::internal::(anonymous namespace)::MovableReferences"* %762, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %863 = bitcast %"class.std::__1::__tree_end_node"* %862 to %"class.std::__1::__tree_node"**
  %864 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %863, align 8
  %865 = icmp eq %"class.std::__1::__tree_node"* %864, null
  br i1 %865, label %898, label %866

866:                                              ; preds = %858
  %867 = inttoptr i64 %861 to i8**
  br label %868

868:                                              ; preds = %868, %866
  %869 = phi %"class.std::__1::__tree_end_node"* [ %862, %866 ], [ %879, %868 ]
  %870 = phi %"class.std::__1::__tree_node"* [ %864, %866 ], [ %880, %868 ]
  %871 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %870, i64 0, i32 1, i32 0, i32 0
  %872 = load i8**, i8*** %871, align 8
  %873 = icmp ult i8** %872, %867
  %874 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %870, i64 0, i32 0, i32 1
  %875 = bitcast %"class.std::__1::__tree_node_base"** %874 to %"class.std::__1::__tree_node"**
  %876 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %870, i64 0, i32 0, i32 0
  %877 = bitcast %"class.std::__1::__tree_node"* %870 to %"class.std::__1::__tree_node"**
  %878 = select i1 %873, %"class.std::__1::__tree_node"** %875, %"class.std::__1::__tree_node"** %877
  %879 = select i1 %873, %"class.std::__1::__tree_end_node"* %869, %"class.std::__1::__tree_end_node"* %876
  %880 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %878, align 8
  %881 = icmp eq %"class.std::__1::__tree_node"* %880, null
  br i1 %881, label %882, label %868

882:                                              ; preds = %868
  %883 = icmp eq %"class.std::__1::__tree_end_node"* %879, %862
  br i1 %883, label %898, label %884

884:                                              ; preds = %882
  %885 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %879, i64 4
  %886 = bitcast %"class.std::__1::__tree_end_node"* %885 to i8***
  %887 = load i8**, i8*** %886, align 8
  %888 = icmp ugt i8** %887, %867
  br i1 %888, label %898, label %889

889:                                              ; preds = %884
  %890 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %879, i64 5
  %891 = bitcast %"class.std::__1::__tree_end_node"* %890 to i8***
  %892 = load i8**, i8*** %891, align 8
  %893 = icmp eq i8** %892, null
  br i1 %893, label %894, label %896

894:                                              ; preds = %889
  %895 = bitcast %"class.std::__1::__tree_end_node"* %890 to i8**
  store i8* %764, i8** %895, align 8
  br label %898

896:                                              ; preds = %889
  %897 = ptrtoint i8** %892 to i64
  br label %898

898:                                              ; preds = %896, %894, %884, %882, %858
  %899 = phi i64 [ %861, %894 ], [ %897, %896 ], [ %861, %858 ], [ %861, %882 ], [ %861, %884 ]
  %900 = inttoptr i64 %899 to i8**
  store i8* %764, i8** %900, align 8
  br label %901

901:                                              ; preds = %898, %854, %753
  %902 = load %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %446, align 8
  %903 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %902, i64 0, i32 2
  %904 = bitcast %"class.cppgc::internal::PlatformAwareObjectStartBitmap"* %903 to i64*
  %905 = load i64, i64* %904, align 8
  %906 = ptrtoint i8* %754 to i64
  %907 = sub i64 %906, %905
  %908 = lshr i64 %907, 3
  %909 = lshr i64 %907, 6
  %910 = getelementptr inbounds %"class.cppgc::internal::NormalPage", %"class.cppgc::internal::NormalPage"* %902, i64 0, i32 2, i32 0, i32 1, i32 0, i64 %909
  %911 = load i8, i8* %910, align 1
  %912 = trunc i64 %908 to i32
  %913 = and i32 %912, 7
  %914 = shl i32 1, %913
  %915 = trunc i32 %914 to i8
  %916 = or i8 %911, %915
  store i8 %916, i8* %910, align 1
  %917 = load i64, i64* %454, align 8
  %918 = add i64 %917, %696
  store i64 %918, i64* %454, align 8
  br label %919

919:                                              ; preds = %901, %704, %688
  %920 = getelementptr inbounds i8, i8* %689, i64 %696
  %921 = call i8* @_ZN5cppgc8internal10NormalPage10PayloadEndEv(%"class.cppgc::internal::NormalPage"* %626) #13
  %922 = icmp ult i8* %920, %921
  br i1 %922, label %688, label %923

923:                                              ; preds = %919, %683
  %924 = getelementptr inbounds %"class.cppgc::internal::BasePage"*, %"class.cppgc::internal::BasePage"** %624, i64 1
  %925 = icmp eq %"class.cppgc::internal::BasePage"** %924, %509
  br i1 %925, label %512, label %926

926:                                              ; preds = %923
  %927 = load %"class.cppgc::internal::NormalPage"*, %"class.cppgc::internal::NormalPage"** %446, align 8
  br label %622

928:                                              ; preds = %620, %503
  %929 = phi %"class.cppgc::internal::BasePage"** [ %508, %503 ], [ %621, %620 ]
  %930 = icmp eq %"class.cppgc::internal::BasePage"** %929, null
  br i1 %930, label %934, label %931

931:                                              ; preds = %928
  %932 = ptrtoint %"class.cppgc::internal::BasePage"** %929 to i64
  store i64 %932, i64* %460, align 8
  %933 = bitcast %"class.cppgc::internal::BasePage"** %929 to i8*
  call void @_ZdlPv(i8* %933) #12
  br label %934

934:                                              ; preds = %928, %931
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %440) #13
  %935 = getelementptr inbounds %"class.cppgc::internal::NormalPageSpace"*, %"class.cppgc::internal::NormalPageSpace"** %504, i64 1
  %936 = icmp eq %"class.cppgc::internal::NormalPageSpace"** %935, %437
  br i1 %936, label %461, label %503

937:                                              ; preds = %1, %502
  %938 = phi i32 [ 1, %502 ], [ 0, %1 ]
  ret i32 %938
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EEC2IJEEEPS1_NS1_7ScopeIdEDpT_(%"class.cppgc::internal::StatsCollector::InternalScope"*, %"class.cppgc::internal::StatsCollector"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.244"], align 16
  %5 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 0
  store %"class.cppgc::internal::StatsCollector"* %1, %"class.cppgc::internal::StatsCollector"** %5, align 8
  %6 = tail call i64 @_ZN2v84base9TimeTicks3NowEv() #13
  %7 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 1, i32 0, i32 0
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 2
  store i32 %2, i32* %8, align 8
  %9 = load atomic i64, i64* @_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE14StartTraceImplEvE28trace_event_unique_atomic398 monotonic, align 8
  %10 = inttoptr i64 %9 to i8*
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %3
  %13 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %14 = bitcast %"class.v8::TracingController"* %13 to i8* (%"class.v8::TracingController"*, i8*)***
  %15 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %14, align 8
  %16 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %15, i64 2
  %17 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %16, align 8
  %18 = tail call i8* %17(%"class.v8::TracingController"* %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)) #13
  %19 = ptrtoint i8* %18 to i64
  store atomic volatile i64 %19, i64* @_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE14StartTraceImplEvE28trace_event_unique_atomic398 monotonic, align 8
  br label %20

20:                                               ; preds = %12, %3
  %21 = phi i8* [ %10, %3 ], [ %18, %12 ]
  %22 = load atomic i8, i8* %21 monotonic, align 1
  %23 = and i8 %22, 5
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %20
  %26 = load i32, i32* %8, align 8
  %27 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %5, align 8
  %28 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %27, i64 0, i32 8, i32 3
  %29 = load i8, i8* %28, align 8
  %30 = tail call i8* @_ZN5cppgc8internal14StatsCollector12GetScopeNameENS1_7ScopeIdENS0_10MarkerBase13MarkingConfig14CollectionTypeE(i32 %26, i8 zeroext %29) #13
  %31 = bitcast [2 x %"class.std::__1::unique_ptr.244"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #13
  %32 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.244"], [2 x %"class.std::__1::unique_ptr.244"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 0, i64 16, i1 false) #13
  %33 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %34 = bitcast %"class.v8::TracingController"* %33 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)***
  %35 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)*** %34, align 8
  %36 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)** %35, i64 3
  %37 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)** %36, align 8
  %38 = call i64 %37(%"class.v8::TracingController"* %33, i8 signext 66, i8* %21, i8* %30, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.244"* nonnull %32, i32 0) #13
  %39 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.244"], [2 x %"class.std::__1::unique_ptr.244"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %40 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %39, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.v8::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %25
  %43 = bitcast %"class.v8::ConvertableToTraceFormat"* %40 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.v8::ConvertableToTraceFormat"* nonnull %40) #13
  br label %47

47:                                               ; preds = %42, %25
  %48 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.244"], [2 x %"class.std::__1::unique_ptr.244"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %48, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %48, align 16
  %50 = icmp eq %"class.v8::ConvertableToTraceFormat"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.v8::ConvertableToTraceFormat"* %49 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %53 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %53, i64 1
  %55 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %54, align 8
  call void %55(%"class.v8::ConvertableToTraceFormat"* nonnull %49) #13
  br label %56

56:                                               ; preds = %51, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #13
  br label %57

57:                                               ; preds = %20, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4heap4base8WorklistIPPKvLt256EE5LocalD2Ev(%"class.heap::base::Worklist<const void **, 256>::Local"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Local", %"class.heap::base::Worklist<const void **, 256>::Local"* %0, i64 0, i32 1
  %3 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %2, align 8
  %4 = icmp eq %"class.heap::base::internal::SegmentBase"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %3, i64 0, i32 1
  %7 = load i16, i16* %6, align 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.71, i64 0, i64 0)) #11
  unreachable

10:                                               ; preds = %5, %1
  %11 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Local", %"class.heap::base::Worklist<const void **, 256>::Local"* %0, i64 0, i32 2
  %12 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %13 = icmp eq %"class.heap::base::internal::SegmentBase"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %12, i64 0, i32 1
  %16 = load i16, i16* %15, align 2
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %19, label %18, !prof !3

18:                                               ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.72, i64 0, i64 0)) #11
  unreachable

19:                                               ; preds = %14, %10
  %20 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %21 = icmp eq %"class.heap::base::internal::SegmentBase"* %20, %3
  %22 = or i1 %4, %21
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.heap::base::internal::SegmentBase"* %3 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %19, %23
  %26 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %11, align 8
  %27 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #13
  %28 = icmp eq %"class.heap::base::internal::SegmentBase"* %27, %26
  %29 = icmp eq %"class.heap::base::internal::SegmentBase"* %26, null
  %30 = or i1 %29, %28
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.heap::base::internal::SegmentBase"* %26 to i8*
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %25, %31
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5cppgc8internal9Compactor25EnableForNextGCForTestingEv(%"class.cppgc::internal::Compactor"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.cppgc::internal::Compactor", %"class.cppgc::internal::Compactor"* %0, i64 0, i32 4
  store i8 1, i8* %2, align 1
  ret void
}

declare i64 @_ZNK5cppgc8internal8FreeList4SizeEv(%"class.cppgc::internal::FreeList"*) local_unnamed_addr #3

declare %"class.cppgc::internal::BasePage"* @_ZN5cppgc8internal8BasePage16FromInnerAddressEPKNS0_8HeapBaseEPv(%"class.cppgc::internal::HeapBase"*, i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

declare %"class.cppgc::internal::BasePage"* @_ZN5cppgc8internal8BasePage16FromInnerAddressEPKNS0_8HeapBaseEPKv(%"class.cppgc::internal::HeapBase"*, i8*) local_unnamed_addr #3

declare %"class.cppgc::internal::HeapObjectHeader"* @_ZNK5cppgc8internal9LargePage12ObjectHeaderEv(%"class.cppgc::internal::LargePage"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.161"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE4findIS3_EENS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEERKT_(%"class.std::__1::__hash_table.157"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8** %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  %21 = inttoptr i64 %4 to i8*
  br i1 %20, label %85, label %22

22:                                               ; preds = %2
  %23 = tail call i64 @llvm.ctpop.i64(i64 %19) #13, !range !6
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %19, -1
  %27 = and i64 %17, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %17, %19
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %17, %19
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %17, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.161"* %37, null
  br i1 %38, label %85, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.161"* %41, null
  br i1 %42, label %85, label %43

43:                                               ; preds = %39
  %44 = add i64 %19, -1
  br i1 %24, label %45, label %67

45:                                               ; preds = %43, %63
  %46 = phi %"struct.std::__1::__hash_node_base.161"* [ %65, %63 ], [ %41, %43 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.161"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %17
  br i1 %50, label %58, label %51

51:                                               ; preds = %45
  %52 = icmp ult i64 %49, %19
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %19
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %63, label %85

58:                                               ; preds = %45
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %46, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base.161"* %59 to i8**
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, %21
  br i1 %62, label %85, label %63

63:                                               ; preds = %58, %55
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %46, i64 0, i32 0
  %65 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %64, align 8
  %66 = icmp eq %"struct.std::__1::__hash_node_base.161"* %65, null
  br i1 %66, label %85, label %45

67:                                               ; preds = %43, %81
  %68 = phi %"struct.std::__1::__hash_node_base.161"* [ %83, %81 ], [ %41, %43 ]
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %68, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base.161"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %17
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = and i64 %71, %44
  %75 = icmp eq i64 %74, %33
  br i1 %75, label %81, label %85

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %68, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.161"* %77 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = icmp eq i8* %79, %21
  br i1 %80, label %85, label %81

81:                                               ; preds = %73, %76
  %82 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %68, i64 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.161"* %83, null
  br i1 %84, label %85, label %67

85:                                               ; preds = %76, %81, %73, %58, %63, %55, %39, %2, %32
  %86 = phi %"struct.std::__1::__hash_node_base.161"* [ null, %32 ], [ null, %2 ], [ null, %39 ], [ %46, %58 ], [ null, %63 ], [ null, %55 ], [ %68, %76 ], [ null, %81 ], [ null, %73 ]
  ret %"struct.std::__1::__hash_node_base.161"* %86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.161"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS3_JRS3_RS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.157"*, i8** dereferenceable(8), i8** dereferenceable(8), i8*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast i8** %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 32
  %8 = shl i64 %6, 3
  %9 = and i64 %8, 4294967288
  %10 = add nuw nsw i64 %9, 8
  %11 = xor i64 %10, %7
  %12 = mul i64 %11, -7070675565921424023
  %13 = lshr i64 %12, 47
  %14 = xor i64 %12, %7
  %15 = xor i64 %14, %13
  %16 = mul i64 %15, -7070675565921424023
  %17 = lshr i64 %16, 47
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  %23 = inttoptr i64 %6 to i8*
  br i1 %22, label %83, label %24

24:                                               ; preds = %4
  %25 = tail call i64 @llvm.ctpop.i64(i64 %21) #13, !range !6
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %21, -1
  %29 = and i64 %19, %28
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %19, %21
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %19, %21
  br label %34

34:                                               ; preds = %27, %30, %32
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %19, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.161"* %39, null
  br i1 %40, label %83, label %41

41:                                               ; preds = %34
  %42 = add i64 %21, -1
  br i1 %26, label %43, label %65

43:                                               ; preds = %41, %60
  %44 = phi %"struct.std::__1::__hash_node_base.161"* [ %46, %60 ], [ %39, %41 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.161"* %46, null
  br i1 %47, label %83, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %46, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.161"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %19
  br i1 %52, label %60, label %53

53:                                               ; preds = %48
  %54 = icmp ult i64 %51, %21
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %51, %21
  br label %57

57:                                               ; preds = %55, %53
  %58 = phi i64 [ %56, %55 ], [ %51, %53 ]
  %59 = icmp eq i64 %58, %35
  br i1 %59, label %60, label %83

60:                                               ; preds = %57, %48
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %46, i64 2
  %62 = bitcast %"struct.std::__1::__hash_node_base.161"* %61 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, %23
  br i1 %64, label %175, label %43

65:                                               ; preds = %41, %78
  %66 = phi %"struct.std::__1::__hash_node_base.161"* [ %68, %78 ], [ %39, %41 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.161"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %68, i64 1
  %72 = bitcast %"struct.std::__1::__hash_node_base.161"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = icmp eq i64 %73, %19
  %75 = and i64 %73, %42
  %76 = icmp eq i64 %75, %35
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %83

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %68, i64 2
  %80 = bitcast %"struct.std::__1::__hash_node_base.161"* %79 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = icmp eq i8* %81, %23
  br i1 %82, label %175, label %65

83:                                               ; preds = %70, %65, %57, %43, %34, %4
  %84 = phi i64 [ %35, %34 ], [ undef, %4 ], [ %35, %43 ], [ %35, %57 ], [ %35, %65 ], [ %35, %70 ]
  %85 = tail call i8* @_Znwm(i64 32) #12, !noalias !11
  %86 = getelementptr inbounds i8, i8* %85, i64 16
  %87 = bitcast i8** %2 to i64*
  %88 = load i64, i64* %87, align 8, !noalias !11
  %89 = bitcast i8* %86 to i64*
  store i64 %88, i64* %89, align 8, !noalias !11
  %90 = getelementptr inbounds i8, i8* %85, i64 24
  %91 = bitcast i8*** %3 to i64*
  %92 = load i64, i64* %91, align 8, !noalias !11
  %93 = bitcast i8* %90 to i64*
  store i64 %92, i64* %93, align 8, !noalias !11
  %94 = getelementptr inbounds i8, i8* %85, i64 8
  %95 = bitcast i8* %94 to i64*
  store i64 %19, i64* %95, align 8, !noalias !11
  %96 = bitcast i8* %85 to %"struct.std::__1::__hash_node_base.161"**
  store %"struct.std::__1::__hash_node_base.161"* null, %"struct.std::__1::__hash_node_base.161"** %96, align 8, !noalias !11
  %97 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 2, i32 0, i32 0
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  %100 = uitofp i64 %99 to float
  %101 = uitofp i64 %21 to float
  %102 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load float, float* %102, align 4
  %104 = fmul float %103, %101
  %105 = fcmp olt float %104, %100
  %106 = or i1 %22, %105
  br i1 %106, label %107, label %130

107:                                              ; preds = %83
  %108 = shl i64 %21, 1
  %109 = icmp ult i64 %21, 3
  %110 = tail call i64 @llvm.ctpop.i64(i64 %21) #13, !range !6
  %111 = icmp ugt i64 %110, 1
  %112 = or i1 %109, %111
  %113 = zext i1 %112 to i64
  %114 = or i64 %108, %113
  %115 = fdiv float %100, %103
  %116 = tail call float @llvm.ceil.f32(float %115) #13
  %117 = fptoui float %116 to i64
  %118 = icmp ult i64 %114, %117
  %119 = select i1 %118, i64 %117, i64 %114
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.157"* %0, i64 %119)
  %120 = load i64, i64* %20, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %120) #13, !range !6
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %107
  %124 = add i64 %120, -1
  %125 = and i64 %124, %19
  br label %130

126:                                              ; preds = %107
  %127 = icmp ult i64 %19, %120
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %19, %120
  br label %130

130:                                              ; preds = %128, %126, %123, %83
  %131 = phi i64 [ %21, %83 ], [ %120, %123 ], [ %120, %126 ], [ %120, %128 ]
  %132 = phi i64 [ %84, %83 ], [ %125, %123 ], [ %19, %126 ], [ %129, %128 ]
  %133 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %133, align 8
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %134, i64 %132
  %136 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.161"* %136, null
  br i1 %137, label %138, label %164

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 1, i32 0, i32 0
  %140 = bitcast %"struct.std::__1::__hash_node_base.161"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast i8* %85 to i64*
  store i64 %141, i64* %142, align 8
  %143 = bitcast %"struct.std::__1::__hash_node_base.161"* %139 to i8**
  store i8* %85, i8** %143, align 8
  store %"struct.std::__1::__hash_node_base.161"* %139, %"struct.std::__1::__hash_node_base.161"** %135, align 8
  %144 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %96, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base.161"* %144, null
  br i1 %145, label %171, label %146

146:                                              ; preds = %138
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %144, i64 1
  %148 = bitcast %"struct.std::__1::__hash_node_base.161"* %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = tail call i64 @llvm.ctpop.i64(i64 %131) #13, !range !6
  %151 = icmp ugt i64 %150, 1
  br i1 %151, label %155, label %152

152:                                              ; preds = %146
  %153 = add i64 %131, -1
  %154 = and i64 %149, %153
  br label %159

155:                                              ; preds = %146
  %156 = icmp ult i64 %149, %131
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = urem i64 %149, %131
  br label %159

159:                                              ; preds = %152, %155, %157
  %160 = phi i64 [ %154, %152 ], [ %158, %157 ], [ %149, %155 ]
  %161 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %133, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %161, i64 %160
  %163 = bitcast %"struct.std::__1::__hash_node_base.161"** %162 to i8**
  br label %169

164:                                              ; preds = %130
  %165 = bitcast %"struct.std::__1::__hash_node_base.161"* %136 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast i8* %85 to i64*
  store i64 %166, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::__hash_node_base.161"* %136 to i8**
  br label %169

169:                                              ; preds = %159, %164
  %170 = phi i8** [ %168, %164 ], [ %163, %159 ]
  store i8* %85, i8** %170, align 8
  br label %171

171:                                              ; preds = %169, %138
  %172 = bitcast i8* %85 to %"struct.std::__1::__hash_node_base.161"*
  %173 = load i64, i64* %97, align 8
  %174 = add i64 %173, 1
  store i64 %174, i64* %97, align 8
  br label %175

175:                                              ; preds = %78, %60, %171
  %176 = phi i8 [ 1, %171 ], [ 0, %60 ], [ 0, %78 ]
  %177 = phi %"struct.std::__1::__hash_node_base.161"* [ %172, %171 ], [ %46, %60 ], [ %68, %78 ]
  %178 = insertvalue { %"struct.std::__1::__hash_node_base.161"*, i8 } undef, %"struct.std::__1::__hash_node_base.161"* %177, 0
  %179 = insertvalue { %"struct.std::__1::__hash_node_base.161"*, i8 } %178, i8 %176, 1
  ret { %"struct.std::__1::__hash_node_base.161"*, i8 } %179
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.157"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !6
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.157"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !6
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !6
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.157"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.157"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #11
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.157"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.161"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.161"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.163", %"class.std::__1::__bucket_list_deallocator.163"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.161"* null, %"struct.std::__1::__hash_node_base.161"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !14

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.161"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.161"* null, %"struct.std::__1::__hash_node_base.161"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.161"* null, %"struct.std::__1::__hash_node_base.161"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.161"* null, %"struct.std::__1::__hash_node_base.161"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.161"* null, %"struct.std::__1::__hash_node_base.161"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.161"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !6
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.161"* %36, %"struct.std::__1::__hash_node_base.161"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.161"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.161"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.161"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.161"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.161"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.161"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.161"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.161"* %103 to i8**
  %105 = load i8*, i8** %130, align 8
  %106 = load i8*, i8** %104, align 8
  %107 = icmp eq i8* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.161"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.161"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.161"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.161"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.161"* %80, %"struct.std::__1::__hash_node_base.161"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.161"* %82, %"struct.std::__1::__hash_node_base.161"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.161"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.161"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.161"* %129 to i8**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.161"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.161"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.161"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.161"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.161"* %146 to i8**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.161"* %134, %"struct.std::__1::__hash_node_base.161"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.161"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.161"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.161"* %155 to i8**
  %157 = load i8*, i8** %147, align 8
  %158 = load i8*, i8** %156, align 8
  %159 = icmp eq i8* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.161"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.161"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.161"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.161"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.161"* %132, %"struct.std::__1::__hash_node_base.161"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.161"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.161", %"struct.std::__1::__hash_node_base.161"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.161"*, %"struct.std::__1::__hash_node_base.161"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.161"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.157", %"class.std::__1::__hash_table.157"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.161"**, %"struct.std::__1::__hash_node_base.161"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.161"** null, %"struct.std::__1::__hash_node_base.161"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.161"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.161"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.163", %"class.std::__1::__bucket_list_deallocator.163"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN5cppgc8internal8FreeList5ClearEv(%"class.cppgc::internal::FreeList"*) local_unnamed_addr #3

declare void @_ZN5cppgc8internal9BaseSpace14RemoveAllPagesEv(%"class.std::__1::vector.0"* sret, %"class.cppgc::internal::BaseSpace"*) local_unnamed_addr #3

declare i8* @_ZN5cppgc8internal10NormalPage12PayloadStartEv(%"class.cppgc::internal::NormalPage"*) local_unnamed_addr #3

declare i8* @_ZN5cppgc8internal10NormalPage10PayloadEndEv(%"class.cppgc::internal::NormalPage"*) local_unnamed_addr #3

declare void @_ZN5cppgc8internal16HeapObjectHeader8FinalizeEv(%"class.cppgc::internal::HeapObjectHeader"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN5cppgc8internal9BaseSpace7AddPageEPNS0_8BasePageE(%"class.cppgc::internal::BaseSpace"*, %"class.cppgc::internal::BasePage"*) local_unnamed_addr #3

declare i64 @_ZN5cppgc8internal10NormalPage11PayloadSizeEv() local_unnamed_addr #3

declare void @_ZN5cppgc8internal8FreeList3AddENS1_5BlockE(%"class.cppgc::internal::FreeList"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5cppgc8internal10NormalPage7DestroyEPS1_(%"class.cppgc::internal::NormalPage"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.182"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.182"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.182"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #3

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"*) unnamed_addr #9

declare i64 @_ZN2v84base9TimeTicks3NowEv() local_unnamed_addr #3

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5cppgc8internal14StatsCollector12GetScopeNameENS1_7ScopeIdENS0_10MarkerBase13MarkingConfig14CollectionTypeE(i32, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  switch i32 %0, label %93 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
    i32 4, label %15
    i32 5, label %18
    i32 7, label %21
    i32 8, label %24
    i32 9, label %27
    i32 10, label %30
    i32 11, label %33
    i32 12, label %36
    i32 13, label %39
    i32 14, label %42
    i32 15, label %45
    i32 16, label %48
    i32 17, label %51
    i32 18, label %54
    i32 19, label %57
    i32 20, label %60
    i32 21, label %63
    i32 22, label %66
    i32 23, label %69
    i32 24, label %72
    i32 25, label %75
    i32 26, label %78
    i32 27, label %81
    i32 28, label %84
    i32 29, label %87
    i32 30, label %90
  ]

3:                                                ; preds = %2
  %4 = icmp eq i8 %1, 1
  %5 = select i1 %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0)
  br label %93

6:                                                ; preds = %2
  %7 = icmp eq i8 %1, 1
  %8 = select i1 %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0)
  br label %93

9:                                                ; preds = %2
  %10 = icmp eq i8 %1, 1
  %11 = select i1 %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0)
  br label %93

12:                                               ; preds = %2
  %13 = icmp eq i8 %1, 1
  %14 = select i1 %13, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0)
  br label %93

15:                                               ; preds = %2
  %16 = icmp eq i8 %1, 1
  %17 = select i1 %16, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0)
  br label %93

18:                                               ; preds = %2
  %19 = icmp eq i8 %1, 1
  %20 = select i1 %19, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.20, i64 0, i64 0)
  br label %93

21:                                               ; preds = %2
  %22 = icmp eq i8 %1, 1
  %23 = select i1 %22, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0)
  br label %93

24:                                               ; preds = %2
  %25 = icmp eq i8 %1, 1
  %26 = select i1 %25, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.24, i64 0, i64 0)
  br label %93

27:                                               ; preds = %2
  %28 = icmp eq i8 %1, 1
  %29 = select i1 %28, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.26, i64 0, i64 0)
  br label %93

30:                                               ; preds = %2
  %31 = icmp eq i8 %1, 1
  %32 = select i1 %31, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i64 0, i64 0)
  br label %93

33:                                               ; preds = %2
  %34 = icmp eq i8 %1, 1
  %35 = select i1 %34, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0)
  br label %93

36:                                               ; preds = %2
  %37 = icmp eq i8 %1, 1
  %38 = select i1 %37, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.32, i64 0, i64 0)
  br label %93

39:                                               ; preds = %2
  %40 = icmp eq i8 %1, 1
  %41 = select i1 %40, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0)
  br label %93

42:                                               ; preds = %2
  %43 = icmp eq i8 %1, 1
  %44 = select i1 %43, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i64 0, i64 0)
  br label %93

45:                                               ; preds = %2
  %46 = icmp eq i8 %1, 1
  %47 = select i1 %46, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.38, i64 0, i64 0)
  br label %93

48:                                               ; preds = %2
  %49 = icmp eq i8 %1, 1
  %50 = select i1 %49, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.40, i64 0, i64 0)
  br label %93

51:                                               ; preds = %2
  %52 = icmp eq i8 %1, 1
  %53 = select i1 %52, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.42, i64 0, i64 0)
  br label %93

54:                                               ; preds = %2
  %55 = icmp eq i8 %1, 1
  %56 = select i1 %55, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.44, i64 0, i64 0)
  br label %93

57:                                               ; preds = %2
  %58 = icmp eq i8 %1, 1
  %59 = select i1 %58, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.46, i64 0, i64 0)
  br label %93

60:                                               ; preds = %2
  %61 = icmp eq i8 %1, 1
  %62 = select i1 %61, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.48, i64 0, i64 0)
  br label %93

63:                                               ; preds = %2
  %64 = icmp eq i8 %1, 1
  %65 = select i1 %64, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.50, i64 0, i64 0)
  br label %93

66:                                               ; preds = %2
  %67 = icmp eq i8 %1, 1
  %68 = select i1 %67, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52, i64 0, i64 0)
  br label %93

69:                                               ; preds = %2
  %70 = icmp eq i8 %1, 1
  %71 = select i1 %70, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.54, i64 0, i64 0)
  br label %93

72:                                               ; preds = %2
  %73 = icmp eq i8 %1, 1
  %74 = select i1 %73, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i64 0, i64 0)
  br label %93

75:                                               ; preds = %2
  %76 = icmp eq i8 %1, 1
  %77 = select i1 %76, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.58, i64 0, i64 0)
  br label %93

78:                                               ; preds = %2
  %79 = icmp eq i8 %1, 1
  %80 = select i1 %79, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.60, i64 0, i64 0)
  br label %93

81:                                               ; preds = %2
  %82 = icmp eq i8 %1, 1
  %83 = select i1 %82, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.62, i64 0, i64 0)
  br label %93

84:                                               ; preds = %2
  %85 = icmp eq i8 %1, 1
  %86 = select i1 %85, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.64, i64 0, i64 0)
  br label %93

87:                                               ; preds = %2
  %88 = icmp eq i8 %1, 1
  %89 = select i1 %88, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.66, i64 0, i64 0)
  br label %93

90:                                               ; preds = %2
  %91 = icmp eq i8 %1, 1
  %92 = select i1 %91, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.68, i64 0, i64 0)
  br label %93

93:                                               ; preds = %2, %90, %87, %84, %81, %78, %75, %72, %69, %66, %63, %60, %57, %54, %51, %48, %45, %42, %39, %36, %33, %30, %27, %24, %21, %18, %15, %12, %9, %6, %3
  %94 = phi i8* [ %92, %90 ], [ %89, %87 ], [ %86, %84 ], [ %83, %81 ], [ %80, %78 ], [ %77, %75 ], [ %74, %72 ], [ %71, %69 ], [ %68, %66 ], [ %65, %63 ], [ %62, %60 ], [ %59, %57 ], [ %56, %54 ], [ %53, %51 ], [ %50, %48 ], [ %47, %45 ], [ %44, %42 ], [ %41, %39 ], [ %38, %36 ], [ %35, %33 ], [ %32, %30 ], [ %29, %27 ], [ %26, %24 ], [ %23, %21 ], [ %20, %18 ], [ %17, %15 ], [ %14, %12 ], [ %11, %9 ], [ %8, %6 ], [ %5, %3 ], [ null, %2 ]
  ret i8* %94
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEv(%"class.cppgc::internal::StatsCollector::InternalScope"*) local_unnamed_addr #10 comdat align 2 {
  %2 = alloca [2 x %"class.std::__1::unique_ptr.244"], align 16
  %3 = alloca <2 x i8*>, align 16
  %4 = alloca [2 x i8], align 1
  %5 = alloca [2 x i64], align 16
  %6 = load atomic i64, i64* @_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEvE28trace_event_unique_atomic432 monotonic, align 8
  %7 = inttoptr i64 %6 to i8*
  %8 = icmp eq i64 %6, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %1
  %10 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %11 = bitcast %"class.v8::TracingController"* %10 to i8* (%"class.v8::TracingController"*, i8*)***
  %12 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %12, i64 2
  %14 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %13, align 8
  %15 = tail call i8* %14(%"class.v8::TracingController"* %10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0)) #13
  %16 = ptrtoint i8* %15 to i64
  store atomic volatile i64 %16, i64* @_ZZN5cppgc8internal14StatsCollector13InternalScopeILNS1_13TraceCategoryE0ELNS1_12ScopeContextE0EE13StopTraceImplEvE28trace_event_unique_atomic432 monotonic, align 8
  br label %17

17:                                               ; preds = %1, %9
  %18 = phi i8* [ %7, %1 ], [ %15, %9 ]
  %19 = load atomic i8, i8* %18 monotonic, align 1
  %20 = and i8 %19, 5
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %70, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %"class.cppgc::internal::StatsCollector::InternalScope", %"class.cppgc::internal::StatsCollector::InternalScope"* %0, i64 0, i32 0
  %26 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %25, align 8
  %27 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %26, i64 0, i32 8, i32 3
  %28 = load i8, i8* %27, align 8
  %29 = tail call i8* @_ZN5cppgc8internal14StatsCollector12GetScopeNameENS1_7ScopeIdENS0_10MarkerBase13MarkingConfig14CollectionTypeE(i32 %24, i8 zeroext %28)
  %30 = load %"class.cppgc::internal::StatsCollector"*, %"class.cppgc::internal::StatsCollector"** %25, align 8
  %31 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %30, i64 0, i32 8, i32 2
  %32 = getelementptr inbounds %"class.cppgc::internal::StatsCollector", %"class.cppgc::internal::StatsCollector"* %30, i64 0, i32 8, i32 4
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 1
  %35 = load i64, i64* %31, align 8
  %36 = bitcast <2 x i8*>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #13
  %37 = getelementptr inbounds <2 x i8*>, <2 x i8*>* %3, i64 0, i64 0
  store <2 x i8*> <i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.70, i64 0, i64 0)>, <2 x i8*>* %3, align 16
  %38 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %38) #13
  %39 = bitcast [2 x i64]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #13
  %40 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 0
  store i8 2, i8* %38, align 1
  store i64 %35, i64* %40, align 16
  %41 = getelementptr inbounds [2 x i8], [2 x i8]* %4, i64 0, i64 1
  %42 = getelementptr inbounds [2 x i64], [2 x i64]* %5, i64 0, i64 1
  store i8 1, i8* %41, align 1
  %43 = zext i1 %34 to i64
  store i64 %43, i64* %42, align 8
  %44 = bitcast [2 x %"class.std::__1::unique_ptr.244"]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.244"], [2 x %"class.std::__1::unique_ptr.244"]* %2, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %44, i8 0, i64 16, i1 false) #13
  %46 = tail call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #13
  %47 = bitcast %"class.v8::TracingController"* %46 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)***
  %48 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)*** %47, align 8
  %49 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)** %48, i64 3
  %50 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.244"*, i32)** %49, align 8
  %51 = call i64 %50(%"class.v8::TracingController"* %46, i8 signext 69, i8* %18, i8* %29, i8* null, i64 0, i64 0, i32 2, i8** nonnull %37, i8* nonnull %38, i64* nonnull %40, %"class.std::__1::unique_ptr.244"* nonnull %45, i32 0) #13
  %52 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.244"], [2 x %"class.std::__1::unique_ptr.244"]* %2, i64 0, i64 1, i32 0, i32 0, i32 0
  %53 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %52, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %52, align 8
  %54 = icmp eq %"class.v8::ConvertableToTraceFormat"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %22
  %56 = bitcast %"class.v8::ConvertableToTraceFormat"* %53 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %57 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %57, i64 1
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, align 8
  call void %59(%"class.v8::ConvertableToTraceFormat"* nonnull %53) #13
  br label %60

60:                                               ; preds = %55, %22
  %61 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.244"], [2 x %"class.std::__1::unique_ptr.244"]* %2, i64 0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %61, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %61, align 16
  %63 = icmp eq %"class.v8::ConvertableToTraceFormat"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.v8::ConvertableToTraceFormat"* %62 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %66 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %66, i64 1
  %68 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %67, align 8
  call void %68(%"class.v8::ConvertableToTraceFormat"* nonnull %62) #13
  br label %69

69:                                               ; preds = %60, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %38) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #13
  br label %70

70:                                               ; preds = %17, %69
  ret void
}

declare void @_ZN5cppgc8internal14StatsCollector21RecordHistogramSampleENS1_7ScopeIdEN2v84base9TimeDeltaE(%"class.cppgc::internal::StatsCollector"*, i32, i64) local_unnamed_addr #3

declare %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{i32 24, i32 33}
!6 = !{i64 0, i64 65}
!7 = !{!"branch_weights", i32 4001, i32 1}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRS4_DnEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISJ_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeINS_12__value_typeIPPKvPhEENS_19__map_value_compareIS4_S6_NS_4lessIS4_EELb1EEENS_9allocatorIS6_EEE16__construct_nodeIJRS4_DnEEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINSB_ISJ_EEEEEEDpOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashIRS3_JRS4_EEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPKvPS3_EENS_22__unordered_map_hasherIS3_S5_NS_4hashIS3_EENS_8equal_toIS3_EELb1EEENS_21__unordered_map_equalIS3_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashIRS3_JRS4_EEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.unroll.disable"}
