; ModuleID = '../../services/network/public/cpp/parsed_headers.cc'
source_filename = "../../services/network/public/cpp/parsed_headers.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.10" }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.13", %"class.mojo::StructPtr.65", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.78", %"class.base::TimeDelta", %"class.absl::optional.78", i32, [4 x i8], %"class.std::__1::vector.90", %"class.mojo::StructPtr.104", i8, [7 x i8] }>
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.mojo::StructPtr.15"*, %"class.mojo::StructPtr.15"*, %"class.std::__1::__compressed_pair.60" }
%"class.mojo::StructPtr.15" = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.19", %"class.base::flat_map", %"class.base::flat_map.33", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.std::__1::vector.43", i32, %"class.mojo::StructPtr.50", %"class.std::__1::vector.43" }
%"class.mojo::StructPtr.19" = type { %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.26" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.28" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.33" = type { %"class.base::internal::flat_tree.34" }
%"class.base::internal::flat_tree.34" = type { %"class.std::__1::vector.35" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.std::__1::pair.37"*, %"struct.std::__1::pair.37"*, %"class.std::__1::__compressed_pair.38" }
%"struct.std::__1::pair.37" = type opaque
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::pair.37"* }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.50" = type { %"class.std::__1::unique_ptr.51" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.43", i8, i8, [6 x i8] }>
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.mojo::StructPtr.15"* }
%"class.mojo::StructPtr.65" = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.69 }
%union.anon.69 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.73", i32, %"class.absl::optional.73" }
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, %union.anon.77 }
%union.anon.77 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.73", i32, %"class.absl::optional.73" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.78" = type { %"class.absl::optional_internal::optional_data.79" }
%"class.absl::optional_internal::optional_data.79" = type { %"class.absl::optional_internal::optional_data_base.80" }
%"class.absl::optional_internal::optional_data_base.80" = type { %"class.absl::optional_internal::optional_data_dtor_base.81" }
%"class.absl::optional_internal::optional_data_dtor_base.81" = type { i8, %union.anon.82 }
%union.anon.82 = type { %"class.std::__1::vector.83" }
%"class.std::__1::vector.83" = type { %"class.std::__1::__vector_base.84" }
%"class.std::__1::__vector_base.84" = type { i32*, i32*, %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { i32* }
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { %"class.mojo::StructPtr.92"*, %"class.mojo::StructPtr.92"*, %"class.std::__1::__compressed_pair.99" }
%"class.mojo::StructPtr.92" = type { %"class.std::__1::unique_ptr.93" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.73" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GURL* }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.mojo::StructPtr.92"* }
%"class.mojo::StructPtr.104" = type { %"class.std::__1::unique_ptr.105" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.43"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::vector", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [21 x i8] c"Origin-Agent-Cluster\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"Accept-CH\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"Accept-CH-Lifetime\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"Critical-CH\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Timing-Allow-Origin\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"BFCache-Opt-In\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network21PopulateParsedHeadersEPKN3net19HttpResponseHeadersERK4GURL(%"class.mojo::StructPtr"* noalias nocapture sret, %"class.net::HttpResponseHeaders"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %4 = alloca %"class.mojo::StructPtr.65", align 8
  %5 = alloca %"struct.network::CrossOriginEmbedderPolicy", align 8
  %6 = alloca %"struct.network::CrossOriginOpenerPolicy", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.absl::optional.78", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.absl::optional.78", align 8
  %13 = alloca %"class.std::__1::vector.90", align 16
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.mojo::StructPtr.104", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = tail call i8* @_Znwm(i64 320) #6, !noalias !2
  %19 = bitcast i8* %18 to %"class.network::mojom::ParsedHeaders"*
  tail call void @_ZN7network5mojom13ParsedHeadersC1Ev(%"class.network::mojom::ParsedHeaders"* nonnull %19) #7, !noalias !2
  %20 = ptrtoint i8* %18 to i64
  %21 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %20, i64* %21, align 8, !alias.scope !2
  %22 = icmp eq %"class.net::HttpResponseHeaders"* %1, null
  br i1 %22, label %347, label %23

23:                                               ; preds = %3
  %24 = bitcast i8* %18 to %"class.std::__1::vector.13"*
  tail call void @_ZN7network35AddContentSecurityPolicyFromHeadersERKN3net19HttpResponseHeadersERK4GURLPNSt3__16vectorIN4mojo9StructPtrINS_5mojom21ContentSecurityPolicyEEENS7_9allocatorISD_EEEE(%"class.net::HttpResponseHeaders"* nonnull dereferenceable(64) %1, %class.GURL* dereferenceable(120) %2, %"class.std::__1::vector.13"* nonnull %24) #7
  %25 = bitcast %"class.mojo::StructPtr.65"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #7
  call void @_ZN7network23ParseAllowCSPFromHeaderERKN3net19HttpResponseHeadersE(%"class.mojo::StructPtr.65"* nonnull sret %4, %"class.net::HttpResponseHeaders"* nonnull dereferenceable(64) %1) #7
  %26 = getelementptr inbounds i8, i8* %18, i64 24
  %27 = bitcast i8* %26 to %"class.network::mojom::AllowCSPFromHeaderValue"**
  %28 = load %"class.network::mojom::AllowCSPFromHeaderValue"*, %"class.network::mojom::AllowCSPFromHeaderValue"** %27, align 8
  store %"class.network::mojom::AllowCSPFromHeaderValue"* null, %"class.network::mojom::AllowCSPFromHeaderValue"** %27, align 8
  %29 = icmp eq %"class.network::mojom::AllowCSPFromHeaderValue"* %28, null
  br i1 %29, label %30, label %35

30:                                               ; preds = %23
  %31 = bitcast i8* %26 to i64*
  %32 = bitcast %"class.mojo::StructPtr.65"* %4 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %31, align 8
  %34 = getelementptr inbounds %"class.mojo::StructPtr.65", %"class.mojo::StructPtr.65"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::AllowCSPFromHeaderValue"* null, %"class.network::mojom::AllowCSPFromHeaderValue"** %34, align 8
  br label %46

35:                                               ; preds = %23
  call void @_ZN7network5mojom23AllowCSPFromHeaderValueD1Ev(%"class.network::mojom::AllowCSPFromHeaderValue"* nonnull %28) #7
  %36 = bitcast %"class.network::mojom::AllowCSPFromHeaderValue"* %28 to i8*
  call void @_ZdlPv(i8* %36) #6
  %37 = bitcast i8* %26 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.mojo::StructPtr.65"* %4 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %37, align 8
  %41 = getelementptr inbounds %"class.mojo::StructPtr.65", %"class.mojo::StructPtr.65"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::AllowCSPFromHeaderValue"* null, %"class.network::mojom::AllowCSPFromHeaderValue"** %41, align 8
  %42 = icmp eq i64 %38, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %35
  %44 = inttoptr i64 %38 to %"class.network::mojom::AllowCSPFromHeaderValue"*
  call void @_ZN7network5mojom23AllowCSPFromHeaderValueD1Ev(%"class.network::mojom::AllowCSPFromHeaderValue"* nonnull %44) #7
  %45 = inttoptr i64 %38 to i8*
  call void @_ZdlPv(i8* %45) #6
  br label %46

46:                                               ; preds = %30, %35, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #7
  %47 = bitcast %"struct.network::CrossOriginEmbedderPolicy"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %47) #7
  call void @_ZN7network30ParseCrossOriginEmbedderPolicyERKN3net19HttpResponseHeadersE(%"struct.network::CrossOriginEmbedderPolicy"* nonnull sret %5, %"class.net::HttpResponseHeaders"* nonnull dereferenceable(64) %1) #7
  %48 = getelementptr inbounds i8, i8* %18, i64 32
  %49 = bitcast i8* %48 to %"struct.network::CrossOriginEmbedderPolicy"*
  %50 = call dereferenceable(80) %"struct.network::CrossOriginEmbedderPolicy"* @_ZN7network25CrossOriginEmbedderPolicyaSEOS0_(%"struct.network::CrossOriginEmbedderPolicy"* %49, %"struct.network::CrossOriginEmbedderPolicy"* nonnull dereferenceable(80) %5) #7
  call void @_ZN7network25CrossOriginEmbedderPolicyD1Ev(%"struct.network::CrossOriginEmbedderPolicy"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %47) #7
  %51 = bitcast %"struct.network::CrossOriginOpenerPolicy"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %51) #7
  call void @_ZN7network28ParseCrossOriginOpenerPolicyERKN3net19HttpResponseHeadersERKNS_25CrossOriginEmbedderPolicyE(%"struct.network::CrossOriginOpenerPolicy"* nonnull sret %6, %"class.net::HttpResponseHeaders"* nonnull dereferenceable(64) %1, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80) %49) #7
  %52 = getelementptr inbounds i8, i8* %18, i64 112
  %53 = bitcast i8* %52 to %"struct.network::CrossOriginOpenerPolicy"*
  %54 = call dereferenceable(80) %"struct.network::CrossOriginOpenerPolicy"* @_ZN7network23CrossOriginOpenerPolicyaSEOS0_(%"struct.network::CrossOriginOpenerPolicy"* %53, %"struct.network::CrossOriginOpenerPolicy"* nonnull dereferenceable(80) %6) #7
  call void @_ZN7network23CrossOriginOpenerPolicyD1Ev(%"struct.network::CrossOriginOpenerPolicy"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %51) #7
  %55 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #7
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 24, i1 false) #7
  %57 = call zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 20, %"class.std::__1::basic_string"* nonnull %7) #7
  br i1 %57, label %58, label %62

58:                                               ; preds = %46
  %59 = call zeroext i1 @_ZN7network23ParseOriginAgentClusterERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #7
  %60 = getelementptr inbounds i8, i8* %18, i64 192
  %61 = zext i1 %59 to i8
  store i8 %61, i8* %60, align 8
  br label %62

62:                                               ; preds = %58, %46
  %63 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #7
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 24, i1 false) #7
  %65 = call zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i64 9, %"class.std::__1::basic_string"* nonnull %8) #7
  br i1 %65, label %66, label %133

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #7
  call void @_ZN7network22ParseClientHintsHeaderERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.absl::optional.78"* nonnull sret %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #7
  %68 = getelementptr inbounds i8, i8* %18, i64 200
  %69 = load i8, i8* %67, align 8, !range !5
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %105, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %73 = load i8, i8* %68, align 8, !range !5
  %74 = icmp eq i8 %73, 0
  %75 = getelementptr inbounds i8, i8* %18, i64 208
  br i1 %74, label %95, label %76

76:                                               ; preds = %71
  %77 = bitcast i8* %75 to i32**
  %78 = load i32*, i32** %77, align 8
  %79 = icmp eq i32* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = ptrtoint i32* %78 to i64
  %82 = getelementptr inbounds i8, i8* %18, i64 216
  %83 = bitcast i8* %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = bitcast i32* %78 to i8*
  call void @_ZdlPv(i8* %84) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #7
  br label %85

85:                                               ; preds = %76, %80
  %86 = bitcast %"class.std::__1::vector.83"* %72 to <2 x i64>*
  %87 = load <2 x i64>, <2 x i64>* %86, align 8
  %88 = bitcast i8* %75 to <2 x i64>*
  store <2 x i64> %87, <2 x i64>* %88, align 8
  %89 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %90 = bitcast i32** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds i8, i8* %18, i64 224
  %93 = bitcast i8* %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = bitcast %"class.std::__1::vector.83"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #7
  br label %119

95:                                               ; preds = %71
  %96 = bitcast %"class.std::__1::vector.83"* %72 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8
  %98 = bitcast i8* %75 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %98, align 8
  %99 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %100 = bitcast i32** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds i8, i8* %18, i64 224
  %103 = bitcast i8* %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast %"class.std::__1::vector.83"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 24, i1 false) #7
  store i8 1, i8* %68, align 8
  br label %119

105:                                              ; preds = %66
  %106 = load i8, i8* %68, align 8, !range !5
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %132, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds i8, i8* %18, i64 208
  %110 = bitcast i8* %109 to i32**
  %111 = load i32*, i32** %110, align 8
  %112 = icmp eq i32* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %108
  %114 = ptrtoint i32* %111 to i64
  %115 = getelementptr inbounds i8, i8* %18, i64 216
  %116 = bitcast i8* %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = bitcast i32* %111 to i8*
  call void @_ZdlPv(i8* %117) #6
  br label %118

118:                                              ; preds = %113, %108
  store i8 0, i8* %68, align 8
  br label %119

119:                                              ; preds = %85, %95, %118
  %120 = load i8, i8* %67, align 8
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %132, label %122

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %124 = load i32*, i32** %123, align 8
  %125 = icmp eq i32* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %122
  %127 = ptrtoint i32* %124 to i64
  %128 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %129 = bitcast i32** %128 to i64*
  store i64 %127, i64* %129, align 8
  %130 = bitcast i32* %124 to i8*
  call void @_ZdlPv(i8* %130) #6
  br label %131

131:                                              ; preds = %126, %122
  store i8 0, i8* %67, align 8
  br label %132

132:                                              ; preds = %105, %119, %131
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #7
  br label %133

133:                                              ; preds = %132, %62
  %134 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #7
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 0, i64 24, i1 false) #7
  %136 = call zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i64 18, %"class.std::__1::basic_string"* nonnull %10) #7
  br i1 %136, label %137, label %141

137:                                              ; preds = %133
  %138 = call i64 @_ZN7network21ParseAcceptCHLifetimeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #7
  %139 = load %"class.network::mojom::ParsedHeaders"*, %"class.network::mojom::ParsedHeaders"** %17, align 8
  %140 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %139, i64 0, i32 7, i32 0
  store i64 %138, i64* %140, align 8
  br label %141

141:                                              ; preds = %137, %133
  %142 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #7
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 0, i64 24, i1 false) #7
  %144 = call zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i64 11, %"class.std::__1::basic_string"* nonnull %11) #7
  br i1 %144, label %147, label %145

145:                                              ; preds = %141
  %146 = load %"class.network::mojom::ParsedHeaders"*, %"class.network::mojom::ParsedHeaders"** %17, align 8
  br label %217

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %148) #7
  call void @_ZN7network22ParseClientHintsHeaderERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.absl::optional.78"* nonnull sret %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #7
  %149 = load %"class.network::mojom::ParsedHeaders"*, %"class.network::mojom::ParsedHeaders"** %17, align 8
  %150 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %149, i64 0, i32 8
  %151 = load i8, i8* %148, align 8, !range !5
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %189, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %155 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %150, i64 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i8, i8* %155, align 8, !range !5
  %157 = icmp eq i8 %156, 0
  %158 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %149, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %157, label %179, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.std::__1::vector.83", %"class.std::__1::vector.83"* %158, i64 0, i32 0, i32 0
  %161 = load i32*, i32** %160, align 8
  %162 = icmp eq i32* %161, null
  br i1 %162, label %169, label %163

163:                                              ; preds = %159
  %164 = ptrtoint i32* %161 to i64
  %165 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %149, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %166 = bitcast i32** %165 to i64*
  store i64 %164, i64* %166, align 8
  %167 = bitcast i32* %161 to i8*
  call void @_ZdlPv(i8* %167) #6
  %168 = bitcast %"class.std::__1::vector.83"* %158 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 24, i1 false) #7
  br label %169

169:                                              ; preds = %159, %163
  %170 = bitcast %"class.std::__1::vector.83"* %154 to <2 x i64>*
  %171 = load <2 x i64>, <2 x i64>* %170, align 8
  %172 = bitcast %"class.std::__1::vector.83"* %158 to <2 x i64>*
  store <2 x i64> %171, <2 x i64>* %172, align 8
  %173 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %174 = bitcast i32** %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %149, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %177 = bitcast i32** %176 to i64*
  store i64 %175, i64* %177, align 8
  %178 = bitcast %"class.std::__1::vector.83"* %154 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 24, i1 false) #7
  br label %203

179:                                              ; preds = %153
  %180 = bitcast %"class.std::__1::vector.83"* %154 to <2 x i64>*
  %181 = load <2 x i64>, <2 x i64>* %180, align 8
  %182 = bitcast %"class.std::__1::vector.83"* %158 to <2 x i64>*
  store <2 x i64> %181, <2 x i64>* %182, align 8
  %183 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %184 = bitcast i32** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %149, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %187 = bitcast i32** %186 to i64*
  store i64 %185, i64* %187, align 8
  %188 = bitcast %"class.std::__1::vector.83"* %154 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 24, i1 false) #7
  store i8 1, i8* %155, align 8
  br label %203

189:                                              ; preds = %147
  %190 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %150, i64 0, i32 0, i32 0, i32 0, i32 0
  %191 = load i8, i8* %190, align 8, !range !5
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %203, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %149, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %195 = load i32*, i32** %194, align 8
  %196 = icmp eq i32* %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %193
  %198 = ptrtoint i32* %195 to i64
  %199 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %149, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %200 = bitcast i32** %199 to i64*
  store i64 %198, i64* %200, align 8
  %201 = bitcast i32* %195 to i8*
  call void @_ZdlPv(i8* %201) #6
  br label %202

202:                                              ; preds = %197, %193
  store i8 0, i8* %190, align 8
  br label %203

203:                                              ; preds = %169, %179, %189, %202
  %204 = load i8, i8* %148, align 8, !range !5
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %216, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %208 = load i32*, i32** %207, align 8
  %209 = icmp eq i32* %208, null
  br i1 %209, label %215, label %210

210:                                              ; preds = %206
  %211 = ptrtoint i32* %208 to i64
  %212 = getelementptr inbounds %"class.absl::optional.78", %"class.absl::optional.78"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %213 = bitcast i32** %212 to i64*
  store i64 %211, i64* %213, align 8
  %214 = bitcast i32* %208 to i8*
  call void @_ZdlPv(i8* %214) #6
  br label %215

215:                                              ; preds = %210, %206
  store i8 0, i8* %148, align 8
  br label %216

216:                                              ; preds = %203, %215
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %148) #7
  br label %217

217:                                              ; preds = %145, %216
  %218 = phi %"class.network::mojom::ParsedHeaders"* [ %146, %145 ], [ %149, %216 ]
  %219 = call i32 @_ZN7network18ParseXFrameOptionsERKN3net19HttpResponseHeadersE(%"class.net::HttpResponseHeaders"* nonnull dereferenceable(64) %1) #7
  %220 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %218, i64 0, i32 9
  store i32 %219, i32* %220, align 8
  %221 = bitcast %"class.std::__1::vector.90"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #7
  call void @_ZN7network16ParseLinkHeadersERKN3net19HttpResponseHeadersERK4GURL(%"class.std::__1::vector.90"* nonnull sret %13, %"class.net::HttpResponseHeaders"* nonnull dereferenceable(64) %1, %class.GURL* dereferenceable(120) %2) #7
  %222 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %218, i64 0, i32 11
  %223 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.mojo::StructPtr.92"*, %"class.mojo::StructPtr.92"** %223, align 8
  %225 = icmp eq %"class.mojo::StructPtr.92"* %224, null
  br i1 %225, label %247, label %226

226:                                              ; preds = %217
  %227 = bitcast %"class.mojo::StructPtr.92"* %224 to i8*
  %228 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %218, i64 0, i32 11, i32 0, i32 1
  %229 = load %"class.mojo::StructPtr.92"*, %"class.mojo::StructPtr.92"** %228, align 8
  %230 = icmp eq %"class.mojo::StructPtr.92"* %229, %224
  br i1 %230, label %244, label %231

231:                                              ; preds = %226, %239
  %232 = phi %"class.mojo::StructPtr.92"* [ %233, %239 ], [ %229, %226 ]
  %233 = getelementptr inbounds %"class.mojo::StructPtr.92", %"class.mojo::StructPtr.92"* %232, i64 -1
  %234 = getelementptr inbounds %"class.mojo::StructPtr.92", %"class.mojo::StructPtr.92"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %235 = load %"class.network::mojom::LinkHeader"*, %"class.network::mojom::LinkHeader"** %234, align 8
  store %"class.network::mojom::LinkHeader"* null, %"class.network::mojom::LinkHeader"** %234, align 8
  %236 = icmp eq %"class.network::mojom::LinkHeader"* %235, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %231
  call void @_ZN7network5mojom10LinkHeaderD1Ev(%"class.network::mojom::LinkHeader"* nonnull %235) #7
  %238 = bitcast %"class.network::mojom::LinkHeader"* %235 to i8*
  call void @_ZdlPv(i8* %238) #6
  br label %239

239:                                              ; preds = %237, %231
  %240 = icmp eq %"class.mojo::StructPtr.92"* %233, %224
  br i1 %240, label %241, label %231

241:                                              ; preds = %239
  %242 = bitcast %"class.std::__1::vector.90"* %222 to i8**
  %243 = load i8*, i8** %242, align 8
  br label %244

244:                                              ; preds = %241, %226
  %245 = phi i8* [ %243, %241 ], [ %227, %226 ]
  store %"class.mojo::StructPtr.92"* %224, %"class.mojo::StructPtr.92"** %228, align 8
  call void @_ZdlPv(i8* %245) #6
  %246 = bitcast %"class.std::__1::vector.90"* %222 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %246, i8 0, i64 24, i1 false) #7
  br label %247

247:                                              ; preds = %244, %217
  %248 = bitcast %"class.std::__1::vector.90"* %13 to <2 x i64>*
  %249 = load <2 x i64>, <2 x i64>* %248, align 16
  %250 = bitcast %"class.std::__1::vector.90"* %222 to <2 x i64>*
  store <2 x i64> %249, <2 x i64>* %250, align 8
  %251 = getelementptr inbounds %"class.std::__1::vector.90", %"class.std::__1::vector.90"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %252 = bitcast %"class.mojo::StructPtr.92"** %251 to i64*
  %253 = load i64, i64* %252, align 16
  %254 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %218, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %255 = bitcast %"class.mojo::StructPtr.92"** %254 to i64*
  store i64 %253, i64* %255, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #7
  %256 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %256) #7
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %256, i8 0, i64 24, i1 false) #7
  %258 = call zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i64 19, %"class.std::__1::basic_string"* nonnull %14) #7
  br i1 %258, label %259, label %283

259:                                              ; preds = %247
  %260 = bitcast %"class.mojo::StructPtr.104"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #7
  call void @_ZN7network22ParseTimingAllowOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.mojo::StructPtr.104"* nonnull sret %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #7
  %261 = load %"class.network::mojom::ParsedHeaders"*, %"class.network::mojom::ParsedHeaders"** %17, align 8
  %262 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %261, i64 0, i32 12
  %263 = getelementptr inbounds %"class.mojo::StructPtr.104", %"class.mojo::StructPtr.104"* %262, i64 0, i32 0, i32 0, i32 0, i32 0
  %264 = load %"class.network::mojom::TimingAllowOrigin"*, %"class.network::mojom::TimingAllowOrigin"** %263, align 8
  store %"class.network::mojom::TimingAllowOrigin"* null, %"class.network::mojom::TimingAllowOrigin"** %263, align 8
  %265 = icmp eq %"class.network::mojom::TimingAllowOrigin"* %264, null
  br i1 %265, label %266, label %271

266:                                              ; preds = %259
  %267 = bitcast %"class.mojo::StructPtr.104"* %262 to i64*
  %268 = bitcast %"class.mojo::StructPtr.104"* %15 to i64*
  %269 = load i64, i64* %268, align 8
  store i64 %269, i64* %267, align 8
  %270 = getelementptr inbounds %"class.mojo::StructPtr.104", %"class.mojo::StructPtr.104"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TimingAllowOrigin"* null, %"class.network::mojom::TimingAllowOrigin"** %270, align 8
  br label %282

271:                                              ; preds = %259
  call void @_ZN7network5mojom17TimingAllowOriginD1Ev(%"class.network::mojom::TimingAllowOrigin"* nonnull %264) #7
  %272 = bitcast %"class.network::mojom::TimingAllowOrigin"* %264 to i8*
  call void @_ZdlPv(i8* %272) #6
  %273 = bitcast %"class.mojo::StructPtr.104"* %262 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = bitcast %"class.mojo::StructPtr.104"* %15 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %273, align 8
  %277 = getelementptr inbounds %"class.mojo::StructPtr.104", %"class.mojo::StructPtr.104"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TimingAllowOrigin"* null, %"class.network::mojom::TimingAllowOrigin"** %277, align 8
  %278 = icmp eq i64 %274, 0
  br i1 %278, label %282, label %279

279:                                              ; preds = %271
  %280 = inttoptr i64 %274 to %"class.network::mojom::TimingAllowOrigin"*
  call void @_ZN7network5mojom17TimingAllowOriginD1Ev(%"class.network::mojom::TimingAllowOrigin"* nonnull %280) #7
  %281 = inttoptr i64 %274 to i8*
  call void @_ZdlPv(i8* %281) #6
  br label %282

282:                                              ; preds = %266, %271, %279
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #7
  br label %283

283:                                              ; preds = %282, %247
  %284 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %284) #7
  %285 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %284, i8 0, i64 24, i1 false) #7
  %286 = call zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 14, %"class.std::__1::basic_string"* nonnull %16) #7
  br i1 %286, label %289, label %287

287:                                              ; preds = %283
  %288 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %304

289:                                              ; preds = %283
  %290 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %291 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %292 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %291, i64 0, i32 1, i32 0
  %293 = load i8, i8* %292, align 1
  %294 = icmp slt i8 %293, 0
  %295 = load i8*, i8** %285, align 8
  %296 = select i1 %294, i8* %295, i8* %284
  %297 = load i64, i64* %290, align 8
  %298 = zext i8 %293 to i64
  %299 = select i1 %294, i64 %297, i64 %298
  %300 = call zeroext i1 @_ZN7network23ParseBFCacheOptInUnloadEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %296, i64 %299) #7
  %301 = load %"class.network::mojom::ParsedHeaders"*, %"class.network::mojom::ParsedHeaders"** %17, align 8
  %302 = getelementptr inbounds %"class.network::mojom::ParsedHeaders", %"class.network::mojom::ParsedHeaders"* %301, i64 0, i32 13
  %303 = zext i1 %300 to i8
  store i8 %303, i8* %302, align 8
  br label %304

304:                                              ; preds = %287, %289
  %305 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %288, %287 ], [ %291, %289 ]
  %306 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %305, i64 0, i32 1, i32 0
  %307 = load i8, i8* %306, align 1
  %308 = icmp slt i8 %307, 0
  br i1 %308, label %309, label %311

309:                                              ; preds = %304
  %310 = load i8*, i8** %285, align 8
  call void @_ZdlPv(i8* %310) #6
  br label %311

311:                                              ; preds = %304, %309
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %284) #7
  %312 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %313 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %312, i64 0, i32 1, i32 0
  %314 = load i8, i8* %313, align 1
  %315 = icmp slt i8 %314, 0
  br i1 %315, label %316, label %318

316:                                              ; preds = %311
  %317 = load i8*, i8** %257, align 8
  call void @_ZdlPv(i8* %317) #6
  br label %318

318:                                              ; preds = %311, %316
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %256) #7
  %319 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %320 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %319, i64 0, i32 1, i32 0
  %321 = load i8, i8* %320, align 1
  %322 = icmp slt i8 %321, 0
  br i1 %322, label %323, label %325

323:                                              ; preds = %318
  %324 = load i8*, i8** %143, align 8
  call void @_ZdlPv(i8* %324) #6
  br label %325

325:                                              ; preds = %318, %323
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #7
  %326 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %327 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %326, i64 0, i32 1, i32 0
  %328 = load i8, i8* %327, align 1
  %329 = icmp slt i8 %328, 0
  br i1 %329, label %330, label %332

330:                                              ; preds = %325
  %331 = load i8*, i8** %135, align 8
  call void @_ZdlPv(i8* %331) #6
  br label %332

332:                                              ; preds = %325, %330
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #7
  %333 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %334 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %333, i64 0, i32 1, i32 0
  %335 = load i8, i8* %334, align 1
  %336 = icmp slt i8 %335, 0
  br i1 %336, label %337, label %339

337:                                              ; preds = %332
  %338 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %338) #6
  br label %339

339:                                              ; preds = %332, %337
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #7
  %340 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %341 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %340, i64 0, i32 1, i32 0
  %342 = load i8, i8* %341, align 1
  %343 = icmp slt i8 %342, 0
  br i1 %343, label %344, label %346

344:                                              ; preds = %339
  %345 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %345) #6
  br label %346

346:                                              ; preds = %339, %344
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #7
  br label %347

347:                                              ; preds = %346, %3
  ret void
}

declare void @_ZN7network35AddContentSecurityPolicyFromHeadersERKN3net19HttpResponseHeadersERK4GURLPNSt3__16vectorIN4mojo9StructPtrINS_5mojom21ContentSecurityPolicyEEENS7_9allocatorISD_EEEE(%"class.net::HttpResponseHeaders"* dereferenceable(64), %class.GURL* dereferenceable(120), %"class.std::__1::vector.13"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7network23ParseAllowCSPFromHeaderERKN3net19HttpResponseHeadersE(%"class.mojo::StructPtr.65"* sret, %"class.net::HttpResponseHeaders"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7network30ParseCrossOriginEmbedderPolicyERKN3net19HttpResponseHeadersE(%"struct.network::CrossOriginEmbedderPolicy"* sret, %"class.net::HttpResponseHeaders"* dereferenceable(64)) local_unnamed_addr #1

declare dereferenceable(80) %"struct.network::CrossOriginEmbedderPolicy"* @_ZN7network25CrossOriginEmbedderPolicyaSEOS0_(%"struct.network::CrossOriginEmbedderPolicy"*, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network25CrossOriginEmbedderPolicyD1Ev(%"struct.network::CrossOriginEmbedderPolicy"*) unnamed_addr #3

declare void @_ZN7network28ParseCrossOriginOpenerPolicyERKN3net19HttpResponseHeadersERKNS_25CrossOriginEmbedderPolicyE(%"struct.network::CrossOriginOpenerPolicy"* sret, %"class.net::HttpResponseHeaders"* dereferenceable(64), %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80)) local_unnamed_addr #1

declare dereferenceable(80) %"struct.network::CrossOriginOpenerPolicy"* @_ZN7network23CrossOriginOpenerPolicyaSEOS0_(%"struct.network::CrossOriginOpenerPolicy"*, %"struct.network::CrossOriginOpenerPolicy"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network23CrossOriginOpenerPolicyD1Ev(%"struct.network::CrossOriginOpenerPolicy"*) unnamed_addr #3

declare zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare zeroext i1 @_ZN7network23ParseOriginAgentClusterERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN7network22ParseClientHintsHeaderERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.absl::optional.78"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare i64 @_ZN7network21ParseAcceptCHLifetimeERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare i32 @_ZN7network18ParseXFrameOptionsERKN3net19HttpResponseHeadersE(%"class.net::HttpResponseHeaders"* dereferenceable(64)) local_unnamed_addr #1

declare void @_ZN7network16ParseLinkHeadersERKN3net19HttpResponseHeadersERK4GURL(%"class.std::__1::vector.90"* sret, %"class.net::HttpResponseHeaders"* dereferenceable(64), %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZN7network22ParseTimingAllowOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.mojo::StructPtr.104"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZN7network23ParseBFCacheOptInUnloadEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network5mojom23AllowCSPFromHeaderValueD1Ev(%"class.network::mojom::AllowCSPFromHeaderValue"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom17TimingAllowOriginD1Ev(%"class.network::mojom::TimingAllowOrigin"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN7network5mojom13ParsedHeadersC1Ev(%"class.network::mojom::ParsedHeaders"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network5mojom10LinkHeaderD1Ev(%"class.network::mojom::LinkHeader"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN7network5mojom13ParsedHeaders3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN7network5mojom13ParsedHeaders3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!5 = !{i8 0, i8 2}
