; ModuleID = '../../third_party/blink/renderer/modules/accessibility/ax_selection.cc'
source_filename = "../../third_party/blink/renderer/modules/accessibility/ax_selection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.82", i32, [4 x i8], %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.214", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.230", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.254", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.194", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::Worklist.125"* }
%"class.blink::Worklist.125" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::Worklist.132"* }
%"class.blink::Worklist.132" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::Worklist.139"* }
%"class.blink::Worklist.139" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::Worklist.146"* }
%"class.blink::Worklist.146" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::Worklist.153"* }
%"class.blink::Worklist.153" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::Worklist.160"* }
%"class.blink::Worklist.160" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::Worklist.167"* }
%"class.blink::Worklist.167" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.174", %"class.std::__1::__compressed_pair.181", %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.188", [4 x i8] }>
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176", %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { i64 }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { float }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.197", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.206" }
%"class.WTF::Vector.206" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.223" }
%"class.WTF::VectorBufferBase.223" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.236" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.125"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.132"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.139"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.146"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.153"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.258" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.254" = type { %"struct.std::__1::__atomic_base.255" }
%"struct.std::__1::__atomic_base.255" = type { %"struct.std::__1::__cxx_atomic_impl.256" }
%"struct.std::__1::__cxx_atomic_impl.256" = type { %"struct.std::__1::__cxx_atomic_base_impl.257" }
%"struct.std::__1::__cxx_atomic_base_impl.257" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.286" }
%"struct.std::__1::atomic.286" = type { %"struct.std::__1::__atomic_base.287" }
%"struct.std::__1::__atomic_base.287" = type { %"struct.std::__1::__atomic_base.288" }
%"struct.std::__1::__atomic_base.288" = type { %"struct.std::__1::__cxx_atomic_impl.289" }
%"struct.std::__1::__cxx_atomic_impl.289" = type { %"struct.std::__1::__cxx_atomic_base_impl.290" }
%"struct.std::__1::__cxx_atomic_base_impl.290" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.285 }
%class.scoped_refptr.285 = type { %"class.WTF::StringImpl"* }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::AXSelection" = type { %"class.blink::AXPosition", %"class.blink::AXPosition" }
%"class.blink::AXPosition" = type { %"class.blink::WeakPersistent", i32, i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::AXObject"*, %"class.blink::PersistentNodePtr" }
%"class.blink::AXObject" = type { i32 (...)**, i32, %"class.blink::Member", %"class.blink::HeapVector", i8, i32, %"class.blink::LayoutRect", i32, i32, i8, %"class.blink::Member", i32, i32, %"class.blink::FloatRect", %"class.blink::Member.2" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::AXObject"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::AXObjectCacheImpl"* }
%"class.blink::AXObjectCacheImpl" = type { %"class.blink::AXObjectCacheBase", %"class.blink::mojom::blink::PermissionObserver", %"class.blink::Member.6", %"class.ui::AXMode", [4 x i8], %"class.blink::HeapHashMap", %"class.blink::HeapHashMap.11", %"class.WTF::HashMap.18", %"class.blink::HeapHashMap.22", %"class.WTF::HashMap.29", i32, [4 x i8], %"class.WTF::HashSet", i32, %"class.blink::WeakMember", %"class.std::__1::unique_ptr", %"class.blink::HeapVector.38", i32, %"class.blink::HeapMojoRemote", %"class.blink::HeapMojoReceiver", %"class.blink::HeapHashSet", %"class.blink::HeapVector.56", %"class.blink::HeapHashSet.64", i32, i8, [3 x i8], %"class.WTF::HashMap.72", %"class.WTF::HashSet", %"class.WTF::HashSet", i32, i32, %"class.WTF::HashCountedSet", i8, [7 x i8], %"class.WTF::HashSet" }
%"class.blink::AXObjectCacheBase" = type { %"class.blink::AXObjectCache" }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::mojom::blink::PermissionObserver" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.382", %"class.WTF::Vector.382", i8, i32, %"class.blink::Member.393", %"class.blink::Member.395", %"class.blink::Member.397", %"class.blink::Member.399", %"class.blink::Member.401", %"class.blink::Member.403", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.411", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.417", %"class.blink::Member.419", %"class.blink::Member.338", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.422", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.314", %"class.blink::Member.295", %"class.blink::Member.452", %"class.blink::Member.295", %"class.blink::Member.295", %"class.blink::Member.295", %"class.blink::UserActionElementSet", %"class.blink::Member.461", double, double, i64, i64, %"class.blink::HeapHashSet.463", %"class.blink::HeapHashSet.470", i16, i8, %"class.blink::Member.477", %"class.blink::Member.479", %"class.blink::Member.481", %"class.blink::Member.483", %"class.blink::TextLinkColors", %"class.blink::Member.485", i8, [7 x i8], %"class.blink::HeapHashMap.487", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.295", %"class.WTF::Vector.494", %"class.blink::Member.499", %"class.blink::Member.501", i8, %"class.blink::Member.295", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.503", %"class.blink::HeapVector.505", %"class.std::__1::unique_ptr.513", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.519", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.532", %"class.WTF::Vector.534", i8, i8, %"class.std::__1::unique_ptr.539", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.314", %"class.blink::HeapVector.545", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.553", i8, i32, %"class.blink::Member.555", %"class.blink::Member.557", %"class.blink::Member.559", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.561", %"class.WTF::HashMap.563", %"class.blink::Member.568", %"class.blink::Member.570", %"class.blink::Member.572", %"class.blink::Member.574", %"class.blink::Member.6", %"class.blink::Member.6", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.576", i8, i32, %"class.blink::Member.583", %"class.blink::Member.585", i32, %"class.blink::Member.587", %"class.blink::Member.589", %"class.blink::Member.591", %"class.std::__1::unique_ptr.593", i64, %"class.std::__1::unique_ptr.599", i32, i32, %"class.blink::Member.605", %"class.blink::Member.607", %"class.blink::Member.609", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.611", %"class.WTF::Vector.613", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.618", %"class.blink::Member.625", %"class.std::__1::unique_ptr.627", %"class.blink::Member.633", i8, i8, %"class.WTF::String", %"class.blink::Member.635", i8, [7 x i8], %"class.blink::HeapHashMap.637", %"class.blink::HeapObserverSet", %"class.blink::Member.651", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.653", i32, i8, i8, %"class.blink::WeakMember.70", %"class.blink::Member.655" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.265", %"class.blink::Member.265" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.265", %"class.blink::Member.266", %"class.blink::Member.265", %"class.blink::Member.265", %"class.blink::Member.268" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.265" = type { %"class.blink::MemberBase.71" }
%"class.blink::MemberBase.71" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.272", %"class.blink::Member.6", %"class.blink::Member.266", %"class.blink::Member.274", %"class.blink::Member.274", %"class.blink::Member.321", %"class.blink::Member.323", %"class.blink::Member.325", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.330", %"class.blink::HeapVector.332" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.278" }
%"class.blink::HeapHashMap.278" = type { %"class.WTF::HashMap.281" }
%"class.WTF::HashMap.281" = type { %"class.WTF::HashTable.282" }
%"class.WTF::HashTable.282" = type <{ %"struct.WTF::KeyValuePair.284"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.284" = type { %"class.WTF::AtomicString", %"class.blink::Member.291" }
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.295", i32, %"class.blink::HeapVector.314" }
%"class.blink::Member.321" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.327" }
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::HeapHashMap.329"* }
%"class.blink::HeapHashMap.329" = type opaque
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.332" = type { %"class.WTF::Vector.335" }
%"class.WTF::Vector.335" = type { %"class.WTF::VectorBuffer.336" }
%"class.WTF::VectorBuffer.336" = type { %"class.WTF::VectorBufferBase.337" }
%"class.WTF::VectorBufferBase.337" = type { %"class.blink::Member.338"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.375" }
%"class.blink::HeapHashMap.375" = type { %"class.WTF::HashMap.378" }
%"class.WTF::HashMap.378" = type { %"class.WTF::HashTable.379" }
%"class.WTF::HashTable.379" = type <{ %"struct.WTF::KeyValuePair.381"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.381" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.382" = type { %"class.WTF::VectorBuffer.383" }
%"class.WTF::VectorBuffer.383" = type { %"class.WTF::VectorBufferBase.384" }
%"class.WTF::VectorBufferBase.384" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.385 }
%class.scoped_refptr.385 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.386" }
%"struct.std::__1::atomic.386" = type { %"struct.std::__1::__atomic_base.387" }
%"struct.std::__1::__atomic_base.387" = type { %"struct.std::__1::__atomic_base.388" }
%"struct.std::__1::__atomic_base.388" = type { %"struct.std::__1::__cxx_atomic_impl.389" }
%"struct.std::__1::__cxx_atomic_impl.389" = type { %"struct.std::__1::__cxx_atomic_base_impl.390" }
%"struct.std::__1::__cxx_atomic_base_impl.390" = type { i32 }
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.668", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.736", i32, i8, [3 x i8], %"class.blink::HeapVector.738", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.746", %"class.blink::Member.748", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.757", %"class.blink::Member.885", %"class.blink::Member.887", i8, [7 x i8] }>
%"class.blink::Supplementable.668" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.669" }
%"class.blink::HeapHashMap.669" = type { %"class.WTF::HashMap.672" }
%"class.WTF::HashMap.672" = type { %"class.WTF::HashTable.673" }
%"class.WTF::HashTable.673" = type <{ %"struct.WTF::KeyValuePair.675"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.675" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.684" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.676" }
%"class.blink::HeapObserverSet.676" = type { i32, [4 x i8], %"class.blink::HeapHashSet.677" }
%"class.blink::HeapHashSet.677" = type { %"class.WTF::HashSet.680" }
%"class.WTF::HashSet.680" = type { %"class.WTF::HashTable.681" }
%"class.WTF::HashTable.681" = type <{ %"class.blink::WeakMember.683"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.683" = type opaque
%"class.blink::Supplementable.684" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.685" }
%"class.blink::HeapHashMap.685" = type { %"class.WTF::HashMap.688" }
%"class.WTF::HashMap.688" = type { %"class.WTF::HashTable.689" }
%"class.WTF::HashTable.689" = type <{ %"struct.WTF::KeyValuePair.691"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.691" = type { i8*, %"class.blink::Member.1495" }
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1497" }
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.692, %"class.std::__1::unique_ptr.696", %"class.std::__1::unique_ptr.696", %"class.std::__1::unique_ptr.726", %"class.std::__1::unique_ptr.726", %"class.blink::Member.395", i32, [4 x i8], %"class.WTF::HashSet.732", i32, i32 }
%class.scoped_refptr.692 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.693", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.695 }
%"class.WTF::RefCounted.693" = type { %"class.base::RefCounted.694" }
%"class.base::RefCounted.694" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.695 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.713", %"class.std::__1::map.722"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.701 }
%union.anon.701 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.705", %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"class.std::__1::map.713" = type { %"class.std::__1::__tree.714" }
%"class.std::__1::__tree.714" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.715", %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"class.std::__1::map.722" = type opaque
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.732" = type { %"class.WTF::HashTable.733" }
%"class.WTF::HashTable.733" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.736" = type { %"class.blink::MemberBase.737" }
%"class.blink::MemberBase.737" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.738" = type { %"class.WTF::Vector.741" }
%"class.WTF::Vector.741" = type { %"class.WTF::VectorBuffer.742" }
%"class.WTF::VectorBuffer.742" = type { %"class.WTF::VectorBufferBase.743" }
%"class.WTF::VectorBufferBase.743" = type { %"class.blink::Member.744"*, i32, i32 }
%"class.blink::Member.744" = type opaque
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.748" = type { %"class.blink::MemberBase.749" }
%"class.blink::MemberBase.749" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.750", i32, i32 }
%"class.blink::HeapHashMap.750" = type { %"class.WTF::HashMap.753" }
%"class.WTF::HashMap.753" = type { %"class.WTF::HashTable.754" }
%"class.WTF::HashTable.754" = type <{ %"struct.WTF::KeyValuePair.756"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.756" = type opaque
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.760" }
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.763" }
%"class.WTF::Vector.763" = type { %"class.WTF::VectorBuffer.764" }
%"class.WTF::VectorBuffer.764" = type { %"class.WTF::VectorBufferBase.765" }
%"class.WTF::VectorBufferBase.765" = type { %"class.mojo::StructPtr.766"*, i32, i32 }
%"class.mojo::StructPtr.766" = type { %"class.std::__1::unique_ptr.767" }
%"class.std::__1::unique_ptr.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.770", %"class.WTF::HashMap.777", %"class.WTF::HashMap.782", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.787", i32, %"class.mojo::StructPtr.792", %"class.WTF::Vector.787" }
%"class.mojo::StructPtr.770" = type { %"class.std::__1::unique_ptr.771" }
%"class.std::__1::unique_ptr.771" = type { %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.777" = type { %"class.WTF::HashTable.778" }
%"class.WTF::HashTable.778" = type <{ %"struct.WTF::KeyValuePair.781"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.781" = type opaque
%"class.WTF::HashMap.782" = type { %"class.WTF::HashTable.783" }
%"class.WTF::HashTable.783" = type <{ %"struct.WTF::KeyValuePair.786"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.786" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.792" = type { %"class.std::__1::unique_ptr.793" }
%"class.std::__1::unique_ptr.793" = type { %"class.std::__1::__compressed_pair.794" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.787", i8, i8, [6 x i8] }>
%"class.WTF::Vector.787" = type { %"class.WTF::VectorBuffer.788" }
%"class.WTF::VectorBuffer.788" = type { %"class.WTF::VectorBufferBase.789" }
%"class.WTF::VectorBufferBase.789" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.876" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.807", i32 }>
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.810", %"class.absl::optional.811", %"class.absl::optional.816", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.829", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.851", %"class.std::__1::map.862", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.871", i8, %class.scoped_refptr.821, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.872" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.810" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.811" = type { %"class.absl::optional_internal::optional_data.812" }
%"class.absl::optional_internal::optional_data.812" = type { %"class.absl::optional_internal::optional_data_base.813" }
%"class.absl::optional_internal::optional_data_base.813" = type { %"class.absl::optional_internal::optional_data_dtor_base.814" }
%"class.absl::optional_internal::optional_data_dtor_base.814" = type { i8, %union.anon.815 }
%union.anon.815 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.816" = type { %"class.absl::optional_internal::optional_data.817" }
%"class.absl::optional_internal::optional_data.817" = type { %"class.absl::optional_internal::optional_data_base.818" }
%"class.absl::optional_internal::optional_data_base.818" = type { %"class.absl::optional_internal::optional_data_dtor_base.819" }
%"class.absl::optional_internal::optional_data_dtor_base.819" = type { i8, %union.anon.820 }
%union.anon.820 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.821, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.822" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.822" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.445 }
%class.scoped_refptr.445 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.446", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.446" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.447" }
%"struct.std::__1::atomic.447" = type { %"struct.std::__1::__atomic_base.448" }
%"struct.std::__1::__atomic_base.448" = type { %"struct.std::__1::__atomic_base.449" }
%"struct.std::__1::__atomic_base.449" = type { %"struct.std::__1::__cxx_atomic_impl.450" }
%"struct.std::__1::__cxx_atomic_impl.450" = type { %"struct.std::__1::__cxx_atomic_base_impl.451" }
%"struct.std::__1::__cxx_atomic_base_impl.451" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.827 }
%class.scoped_refptr.827 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.889", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.821, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.286", [4 x i8] }>
%"class.base::RefCountedThreadSafe.889" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.828 }
%class.scoped_refptr.828 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.832", %class.scoped_refptr.833 }
%"class.base::RepeatingCallback.832" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.833 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.834", [4 x i8] }>
%"class.base::RefCountedThreadSafe.834" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.838", %"class.std::__1::unique_ptr.844", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.850" }
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.850" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.851" = type { %"class.std::__1::__tree.852" }
%"class.std::__1::__tree.852" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.853", %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"class.std::__1::map.862" = type { %"class.std::__1::__tree.863" }
%"class.std::__1::__tree.863" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.864", %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"class.base::OnceCallback.871" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.821 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.444" }>
%"class.base::RefCountedThreadSafe.444" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.872" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.885" = type { %"class.blink::MemberBase.886" }
%"class.blink::MemberBase.886" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.887" = type { %"class.blink::MemberBase.888" }
%"class.blink::MemberBase.888" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.405" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.blink::KURL"* }
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.340", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.342, %"class.WTF::Vector.343", %"class.WTF::Vector.343", %"class.blink::Member.265", %"class.blink::Member.348", %"class.blink::HeapHashSet.352", %"class.blink::Member.6", %"class.WTF::HashSet.359", %"class.WTF::TextPosition", %"class.blink::Member.363", %"class.blink::HeapVector.365", %"class.blink::Member.372" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.342 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.343" = type { %"class.WTF::VectorBuffer.344" }
%"class.WTF::VectorBuffer.344" = type { %"class.WTF::VectorBufferBase.345" }
%"class.WTF::VectorBufferBase.345" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.350" }
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.352" = type { %"class.WTF::HashSet.355" }
%"class.WTF::HashSet.355" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"class.blink::WeakMember.358"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.358" = type { %"class.blink::MemberBase.267" }
%"class.WTF::HashSet.359" = type { %"class.WTF::HashTable.360" }
%"class.WTF::HashTable.360" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.363" = type { %"class.blink::MemberBase.364" }
%"class.blink::MemberBase.364" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.348"*, i32, i32 }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.421 }
%class.scoped_refptr.421 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.422" = type { %"class.WTF::VectorBuffer.423" }
%"class.WTF::VectorBuffer.423" = type { %"class.WTF::VectorBufferBase.424" }
%"class.WTF::VectorBufferBase.424" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.425 }
%class.scoped_refptr.425 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.426", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.426" = type { %"class.base::RefCounted.427" }
%"class.base::RefCounted.427" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.428" }
%"class.blink::PersistentBase.428" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.440" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.431" }
%"class.blink::HeapHashMap.431" = type { %"class.WTF::HashMap.434" }
%"class.WTF::HashMap.434" = type { %"class.WTF::HashTable.435" }
%"class.WTF::HashTable.435" = type <{ %"struct.WTF::KeyValuePair.437"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.437" = type { %"class.blink::WeakMember.438", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.440" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.6", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.265", %"class.blink::Member.265", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.454" }
%"class.blink::HeapHashMap.454" = type { %"class.WTF::HashMap.457" }
%"class.WTF::HashMap.457" = type { %"class.WTF::HashTable.458" }
%"class.WTF::HashTable.458" = type <{ %"struct.WTF::KeyValuePair.460"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.460" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.463" = type { %"class.WTF::HashSet.466" }
%"class.WTF::HashSet.466" = type { %"class.WTF::HashTable.467" }
%"class.WTF::HashTable.467" = type <{ %"class.blink::WeakMember.469"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.469" = type opaque
%"class.blink::HeapHashSet.470" = type { %"class.WTF::HashSet.473" }
%"class.WTF::HashSet.473" = type { %"class.WTF::HashTable.474" }
%"class.WTF::HashTable.474" = type <{ %"class.blink::WeakMember.476"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.476" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.266", %"class.blink::HeapVector.332" }
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.487" = type { %"class.WTF::HashMap.490" }
%"class.WTF::HashMap.490" = type { %"class.WTF::HashTable.491" }
%"class.WTF::HashTable.491" = type <{ %"struct.WTF::KeyValuePair.493"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.493" = type opaque
%"class.WTF::Vector.494" = type { %"class.WTF::VectorBuffer.495" }
%"class.WTF::VectorBuffer.495" = type { %"class.WTF::VectorBufferBase.496" }
%"class.WTF::VectorBufferBase.496" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::AXObjectCache"* }
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.295" = type { %"class.blink::MemberBase.296" }
%"class.blink::MemberBase.296" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.298" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.297 }
%class.scoped_refptr.297 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.302", %"class.blink::Member.304", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.302" = type { %"class.WTF::SingleThreadedBitField.303" }
%"class.WTF::SingleThreadedBitField.303" = type { i32 }
%"class.blink::Member.304" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.306 }
%class.scoped_refptr.306 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.307", %"class.WTF::AtomicString", %"class.WTF::Vector.309" }
%"class.WTF::RefCounted.307" = type { %"class.base::RefCounted.308" }
%"class.base::RefCounted.308" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.309" = type { %"class.WTF::VectorBuffer.310" }
%"class.WTF::VectorBuffer.310" = type { %"class.WTF::VectorBufferBase.311", [32 x i8] }
%"class.WTF::VectorBufferBase.311" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.505" = type { %"class.WTF::Vector.508" }
%"class.WTF::Vector.508" = type { %"class.WTF::VectorBuffer.509" }
%"class.WTF::VectorBuffer.509" = type { %"class.WTF::VectorBufferBase.510" }
%"class.WTF::VectorBufferBase.510" = type { %"class.blink::Member.511"*, i32, i32 }
%"class.blink::Member.511" = type opaque
%"class.std::__1::unique_ptr.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.519" = type { %"class.WTF::HashSet.522" }
%"class.WTF::HashSet.522" = type { %"class.WTF::HashTable.523" }
%"class.WTF::HashTable.523" = type <{ %"class.blink::WeakMember.525"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.525" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.526", i32, [4 x i8] }>
%"class.WTF::Vector.526" = type { %"class.WTF::VectorBuffer.527" }
%"class.WTF::VectorBuffer.527" = type { %"class.WTF::VectorBufferBase.528" }
%"class.WTF::VectorBufferBase.528" = type { %"struct.std::__1::pair.529"*, i32, i32 }
%"struct.std::__1::pair.529" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.534" = type { %"class.WTF::VectorBuffer.535" }
%"class.WTF::VectorBuffer.535" = type { %"class.WTF::VectorBufferBase.536" }
%"class.WTF::VectorBufferBase.536" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.314" = type { %"class.WTF::Vector.317" }
%"class.WTF::Vector.317" = type { %"class.WTF::VectorBuffer.318" }
%"class.WTF::VectorBuffer.318" = type { %"class.WTF::VectorBufferBase.319" }
%"class.WTF::VectorBufferBase.319" = type { %"class.blink::Member.295"*, i32, i32 }
%"class.blink::HeapVector.545" = type { %"class.WTF::Vector.548" }
%"class.WTF::Vector.548" = type { %"class.WTF::VectorBuffer.549" }
%"class.WTF::VectorBuffer.549" = type { %"class.WTF::VectorBufferBase.550" }
%"class.WTF::VectorBufferBase.550" = type { %"class.blink::Member.551"*, i32, i32 }
%"class.blink::Member.551" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.6" }
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.563" = type { %"class.WTF::HashTable.564" }
%"class.WTF::HashTable.564" = type <{ %"struct.WTF::KeyValuePair.567"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.567" = type opaque
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.55", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.443, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.443 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.55" = type { %"class.blink::MemberBase.7" }
%"class.blink::HeapHashSet.576" = type { %"class.WTF::HashSet.579" }
%"class.WTF::HashSet.579" = type { %"class.WTF::HashTable.580" }
%"class.WTF::HashTable.580" = type <{ %"class.blink::Member.582"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.582" = type opaque
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.585" = type { %"class.blink::MemberBase.586" }
%"class.blink::MemberBase.586" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.589" = type { %"class.blink::MemberBase.590" }
%"class.blink::MemberBase.590" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.599" = type { %"class.std::__1::__compressed_pair.600" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.605" = type { %"class.blink::MemberBase.606" }
%"class.blink::MemberBase.606" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.607" = type { %"class.blink::MemberBase.608" }
%"class.blink::MemberBase.608" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.609" = type { %"class.blink::MemberBase.610" }
%"class.blink::MemberBase.610" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.613" = type { %"class.WTF::VectorBuffer.614" }
%"class.WTF::VectorBuffer.614" = type { %"class.WTF::VectorBufferBase.615" }
%"class.WTF::VectorBufferBase.615" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.618" = type { %"class.WTF::HashMap.621" }
%"class.WTF::HashMap.621" = type { %"class.WTF::HashTable.622" }
%"class.WTF::HashTable.622" = type <{ %"struct.WTF::KeyValuePair.624"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.624" = type opaque
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.627" = type { %"class.std::__1::__compressed_pair.628" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.629" }
%"struct.std::__1::__compressed_pair_elem.629" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.633" = type { %"class.blink::MemberBase.634" }
%"class.blink::MemberBase.634" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.637" = type { %"class.WTF::HashMap.640" }
%"class.WTF::HashMap.640" = type { %"class.WTF::HashTable.641" }
%"class.WTF::HashTable.641" = type <{ %"struct.WTF::KeyValuePair.643"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.643" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.644" }
%"class.blink::HeapHashSet.644" = type { %"class.WTF::HashSet.647" }
%"class.WTF::HashSet.647" = type { %"class.WTF::HashTable.648" }
%"class.WTF::HashTable.648" = type <{ %"class.blink::WeakMember.650"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.650" = type opaque
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.6", %"class.blink::HeapHashSet.659", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.666", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.659" = type { %"class.WTF::HashSet.662" }
%"class.WTF::HashSet.662" = type { %"class.WTF::HashTable.663" }
%"class.WTF::HashTable.663" = type <{ %"class.blink::Member.665"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.665" = type opaque
%"class.blink::HeapTaskRunnerTimer.666" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.667", { i64, i64 } }
%"class.blink::WeakMember.667" = type { %"class.blink::MemberBase.654" }
%"class.blink::WeakMember.70" = type { %"class.blink::MemberBase.71" }
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.ui::AXMode" = type { i32 }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.blink::Member" }
%"class.blink::HeapHashMap.11" = type { %"class.WTF::HashMap.14" }
%"class.WTF::HashMap.14" = type { %"class.WTF::HashTable.15" }
%"class.WTF::HashTable.15" = type <{ %"struct.WTF::KeyValuePair.17"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.17" = type opaque
%"class.WTF::HashMap.18" = type { %"class.WTF::HashTable.19" }
%"class.WTF::HashTable.19" = type <{ %"struct.WTF::KeyValuePair.21"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.21" = type opaque
%"class.blink::HeapHashMap.22" = type { %"class.WTF::HashMap.25" }
%"class.WTF::HashMap.25" = type { %"class.WTF::HashTable.26" }
%"class.WTF::HashTable.26" = type <{ %"struct.WTF::KeyValuePair.28"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.28" = type opaque
%"class.WTF::HashMap.29" = type { %"class.WTF::HashTable.30" }
%"class.WTF::HashTable.30" = type <{ %"struct.WTF::KeyValuePair.33"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.33" = type opaque
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::AXRelationCache"* }
%"class.blink::AXRelationCache" = type opaque
%"class.blink::HeapVector.38" = type { %"class.WTF::Vector.41" }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"class.blink::Member.44"*, i32, i32 }
%"class.blink::Member.44" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.46" }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.52" }
%"class.WTF::HashSet.52" = type { %"class.WTF::HashTable.53" }
%"class.WTF::HashTable.53" = type <{ %"class.blink::WeakMember.55"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.56" = type { %"class.WTF::Vector.59" }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { %"class.blink::Member.62"*, i32, i32 }
%"class.blink::Member.62" = type opaque
%"class.blink::HeapHashSet.64" = type { %"class.WTF::HashSet.67" }
%"class.WTF::HashSet.67" = type { %"class.WTF::HashTable.68" }
%"class.WTF::HashTable.68" = type <{ %"class.blink::WeakMember.70"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.72" = type { %"class.WTF::HashTable.73" }
%"class.WTF::HashTable.73" = type <{ %"struct.WTF::KeyValuePair.76"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.76" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.77" }
%"class.WTF::HashMap.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"struct.WTF::KeyValuePair.81"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.81" = type { %"class.blink::BlinkAXEventIntent", i32, [4 x i8] }
%"class.blink::BlinkAXEventIntent" = type <{ i32 (...)**, %"struct.ui::AXEventIntent", i8, i8, [6 x i8] }>
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.34" }
%"class.WTF::HashTable.34" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::AXSelection::Builder" = type { %"class.blink::AXSelection" }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.265", i32, i32 }
%"class.blink::SelectionTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1061", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1069", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1083", %"class.blink::FrameLoader", %"class.blink::Member.1104", %"class.blink::Member.295", %"class.blink::Member.1106", %"class.blink::Member.1108", %"class.blink::Member.1124", %"class.blink::Member.1126", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1128", %class.scoped_refptr.1130, %"class.blink::Member.1131", %"class.blink::Member.1133", %"class.blink::Member.1135", %"class.blink::Member.1137", %"class.blink::Member.1139", %"class.blink::Member.1141", %"class.blink::Member.1143", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1145", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1148", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1154", %"class.std::__1::unique_ptr.1155", %"class.absl::optional.1049", i32, [4 x i8], %"class.std::__1::unique_ptr.1161", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1169", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1174", %"class.blink::HeapMojoReceiver.1177", %"class.blink::HeapMojoAssociatedReceiver.1180", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1183", %"class.blink::Member.1185", %"class.blink::Member.1187", %"class.blink::Member.1189", %"class.mojo::StructPtr.1192", %"class.blink::Member.1201", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1203", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.894", %"class.blink::Member.896", %"class.blink::Member.898", i8, i32, i8, i32, %"class.blink::Member.1030", %"class.blink::Member.921", %"class.blink::FrameLifecycle", %"class.blink::Member.892", %"class.blink::Member.892", %"class.blink::Member.892", %"class.blink::Member.892", %"class.blink::Member.892", %"class.blink::Member.892", %"class.blink::Member.1032", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1042", i8, %"class.base::UnguessableToken", %"class.absl::optional.1044", %"class.absl::optional.1049", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.892", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.896" = type { %"class.blink::MemberBase.897" }
%"class.blink::MemberBase.897" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.892", %"class.blink::Member.921", %"class.blink::Member.923", %"class.blink::Member.925", i8, %"class.WTF::Vector.927" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.914" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.902" }
%"class.blink::HeapVector.902" = type { %"class.WTF::Vector.905" }
%"class.WTF::Vector.905" = type { %"class.WTF::VectorBuffer.906" }
%"class.WTF::VectorBuffer.906" = type { %"class.WTF::VectorBufferBase.907", [32 x i8] }
%"class.WTF::VectorBufferBase.907" = type { %"struct.std::__1::pair.908"*, i32, i32 }
%"struct.std::__1::pair.908" = type { %"class.WTF::AtomicString", %"class.blink::Member.909" }
%"class.blink::Member.909" = type { %"class.blink::MemberBase.910" }
%"class.blink::MemberBase.910" = type { %"class.blink::HeapVector.911"* }
%"class.blink::HeapVector.911" = type opaque
%"class.std::__1::unique_ptr.914" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.WTF::Vector.917"* }
%"class.WTF::Vector.917" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.927" = type { %"class.WTF::VectorBuffer.928" }
%"class.WTF::VectorBuffer.928" = type { %"class.WTF::VectorBufferBase.929" }
%"class.WTF::VectorBufferBase.929" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1022" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.930, %"class.std::__1::unique_ptr.807", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.821, i32 }>
%class.scoped_refptr.930 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.821, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.988", %"class.absl::optional.993", %"class.absl::optional.947", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1013", i8, [7 x i8], %class.scoped_refptr.821, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.834" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.821, %"class.std::__1::unique_ptr.931", %"class.absl::optional.941", %"struct.std::__1::atomic.254", i8, i8, i8, i8, i32, i32, %"class.absl::optional.947", %"class.std::__1::unique_ptr.952", i8, i64, %class.scoped_refptr.985, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.987" }
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.821, i8, %"class.mojo::ScopedHandleBase.934", %class.scoped_refptr.935, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.936", i8*, %"class.base::WeakPtrFactory.937" }
%"class.mojo::ScopedHandleBase.934" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.935 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.936" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.937" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.941" = type { %"class.absl::optional_internal::optional_data.942" }
%"class.absl::optional_internal::optional_data.942" = type { %"class.absl::optional_internal::optional_data_base.943" }
%"class.absl::optional_internal::optional_data_base.943" = type { %"class.absl::optional_internal::optional_data_dtor_base.944" }
%"class.absl::optional_internal::optional_data_dtor_base.944" = type { i8, %union.anon.945 }
%union.anon.945 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.946", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.946" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.952" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.955", i8, i64, %class.scoped_refptr.956, %class.scoped_refptr.981 }
%"class.base::RepeatingCallback.955" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.956 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.957", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.959", %"class.std::__1::map.970", i8, [7 x i8] }>
%"class.base::RefCounted.957" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.958 }
%class.scoped_refptr.958 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.959" = type { %"class.std::__1::__tree.960" }
%"class.std::__1::__tree.960" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.961", %"class.std::__1::__compressed_pair.965" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"class.std::__1::map.970" = type { %"class.std::__1::__tree.971" }
%"class.std::__1::__tree.971" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.972", %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%class.scoped_refptr.981 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.985 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.986 }
%class.scoped_refptr.986 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.987" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.988" = type { %"class.absl::optional_internal::optional_data.989" }
%"class.absl::optional_internal::optional_data.989" = type { %"class.absl::optional_internal::optional_data_base.990" }
%"class.absl::optional_internal::optional_data_base.990" = type { %"class.absl::optional_internal::optional_data_dtor_base.991" }
%"class.absl::optional_internal::optional_data_dtor_base.991" = type { i8, %union.anon.992 }
%union.anon.992 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.993" = type { %"class.absl::optional_internal::optional_data.994" }
%"class.absl::optional_internal::optional_data.994" = type { %"class.absl::optional_internal::optional_data_base.995" }
%"class.absl::optional_internal::optional_data_base.995" = type { %"class.absl::optional_internal::optional_data_dtor_base.996" }
%"class.absl::optional_internal::optional_data_dtor_base.996" = type { i8, [7 x i8], %union.anon.997 }
%union.anon.997 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.947" = type { %"class.absl::optional_internal::optional_data.948" }
%"class.absl::optional_internal::optional_data.948" = type { %"class.absl::optional_internal::optional_data_base.949" }
%"class.absl::optional_internal::optional_data_base.949" = type { %"class.absl::optional_internal::optional_data_dtor_base.950" }
%"class.absl::optional_internal::optional_data_dtor_base.950" = type { i8, %union.anon.951 }
%union.anon.951 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.998 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.998 = type { %"class.std::__1::map.1001" }
%"class.std::__1::map.1001" = type { %"class.std::__1::__tree.1002" }
%"class.std::__1::__tree.1002" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1003", %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1012"*, i64 }
%"class.std::__1::unique_ptr.1012" = type opaque
%"class.std::__1::map.1013" = type { %"class.std::__1::__tree.1014" }
%"class.std::__1::__tree.1014" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1015", %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::Frame"* }
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.892", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1034" }
%"class.std::__1::vector.1034" = type { %"class.std::__1::__vector_base.1035" }
%"class.std::__1::__vector_base.1035" = type { %"struct.std::__1::pair.1036"*, %"struct.std::__1::pair.1036"*, %"class.std::__1::__compressed_pair.1037" }
%"struct.std::__1::pair.1036" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"struct.std::__1::pair.1036"* }
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1044" = type { %"class.absl::optional_internal::optional_data.1045" }
%"class.absl::optional_internal::optional_data.1045" = type { %"class.absl::optional_internal::optional_data_base.1046" }
%"class.absl::optional_internal::optional_data_base.1046" = type { %"class.absl::optional_internal::optional_data_dtor_base.1047" }
%"class.absl::optional_internal::optional_data_dtor_base.1047" = type { i8, %union.anon.1048 }
%union.anon.1048 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1054" }
%"class.blink::HeapHashSet.1054" = type { %"class.WTF::HashSet.1057" }
%"class.WTF::HashSet.1057" = type { %"class.WTF::HashTable.1058" }
%"class.WTF::HashTable.1058" = type <{ %"class.blink::WeakMember.1060"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1060" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1061" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1062" }
%"class.blink::HeapHashMap.1062" = type { %"class.WTF::HashMap.1065" }
%"class.WTF::HashMap.1065" = type { %"class.WTF::HashTable.1066" }
%"class.WTF::HashTable.1066" = type <{ %"struct.WTF::KeyValuePair.1068"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1068" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1069" = type { %"class.std::__1::__compressed_pair.1070" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1072", %"class.base::WeakPtrFactory.1077" }
%"class.WTF::HashMap.1072" = type { %"class.WTF::HashTable.1073" }
%"class.WTF::HashTable.1073" = type <{ %"struct.WTF::KeyValuePair.1076"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1076" = type opaque
%"class.base::WeakPtrFactory.1077" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1081" }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1501" }
%"class.blink::WeakMember.1501" = type { %"class.blink::MemberBase.1502" }
%"class.blink::MemberBase.1502" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1503", i64, %"class.std::__1::map.1504", i8*, i64, %"class.base::WeakPtrFactory.1513" }
%"class.base::RepeatingCallback.1503" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1504" = type { %"class.std::__1::__tree.1505" }
%"class.std::__1::__tree.1505" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1506", %"class.std::__1::__compressed_pair.1510" }
%"class.std::__1::__compressed_pair.1506" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"class.std::__1::__compressed_pair.1510" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"class.base::WeakPtrFactory.1513" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1083" = type { %"class.WTF::HashSet.1086" }
%"class.WTF::HashSet.1086" = type { %"class.WTF::HashTable.1087" }
%"class.WTF::HashTable.1087" = type <{ %"class.blink::WeakMember.1089"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1089" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1032", %"class.blink::Member.1090", %"class.blink::Member.1092", %"class.std::__1::unique_ptr.1094", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1100" }
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1094" = type { %"class.std::__1::__compressed_pair.1095" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1096" }
%"struct.std::__1::__compressed_pair_elem.1096" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.285 }
%"class.WTF::HashSet.1100" = type { %"class.WTF::HashTable.1101" }
%"class.WTF::HashTable.1101" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1210", %"class.blink::Member.1032", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1215", i8, i32, %"class.blink::Color", %"class.absl::optional.1217", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1222", %"class.blink::Member.1224", %"class.blink::Member.1224", %"class.std::__1::unique_ptr.1227", i32, [4 x i8], %"class.WTF::HashSet.1230", %"class.blink::Member.1237", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1239", %"class.blink::HeapHashSet.1246", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1254", i8, %"class.blink::Member.1260", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1272", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1286", i8, %"class.std::__1::unique_ptr.1292", %"class.std::__1::unique_ptr.1409", %"class.WTF::Vector.1415", i32, %class.scoped_refptr.1420, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1421", %"class.blink::Member.1423", %"class.blink::Member.1425", %"class.blink::HeapHashSet.1427", %"class.blink::HeapHashSet.1434", %"class.std::__1::unique_ptr.1441", %"class.std::__1::unique_ptr.1448", %"class.WTF::Vector.382" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1210" = type { %"class.WTF::HashTable.1211" }
%"class.WTF::HashTable.1211" = type <{ %class.scoped_refptr.1214*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1214 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1215" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1216", { i64, i64 } }
%"class.blink::WeakMember.1216" = type { %"class.blink::MemberBase.1105" }
%"class.absl::optional.1217" = type { %"class.absl::optional_internal::optional_data.1218" }
%"class.absl::optional_internal::optional_data.1218" = type { %"class.absl::optional_internal::optional_data_base.1219" }
%"class.absl::optional_internal::optional_data_base.1219" = type { %"class.absl::optional_internal::optional_data_dtor_base.1220" }
%"class.absl::optional_internal::optional_data_dtor_base.1220" = type { i8, %union.anon.1221 }
%union.anon.1221 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1222" = type { %"class.blink::MemberBase.1223" }
%"class.blink::MemberBase.1223" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1224" = type { %"class.blink::MemberBase.1225" }
%"class.blink::MemberBase.1225" = type { %"class.blink::HeapHashSet.1226"* }
%"class.blink::HeapHashSet.1226" = type opaque
%"class.std::__1::unique_ptr.1227" = type { %"class.std::__1::__compressed_pair.1228" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"class.WTF::HashSet.1230"* }
%"class.WTF::HashSet.1230" = type { %"class.WTF::HashTable.1231" }
%"class.WTF::HashTable.1231" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1237" = type { %"class.blink::MemberBase.1238" }
%"class.blink::MemberBase.1238" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1239" = type { %"class.WTF::HashSet.1242" }
%"class.WTF::HashSet.1242" = type { %"class.WTF::HashTable.1243" }
%"class.WTF::HashTable.1243" = type <{ %"class.blink::Member.1245"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1245" = type opaque
%"class.blink::HeapHashSet.1246" = type { %"class.WTF::HashSet.1249" }
%"class.WTF::HashSet.1249" = type { %"class.WTF::HashTable.1250" }
%"class.WTF::HashTable.1250" = type <{ %"class.blink::Member.1252"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1252" = type { %"class.blink::MemberBase.1253" }
%"class.blink::MemberBase.1253" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1254" = type { %"class.std::__1::__compressed_pair.1255" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.1256" }
%"struct.std::__1::__compressed_pair_elem.1256" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1264", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1264" = type { %"class.WTF::HashTable.1265" }
%"class.WTF::HashTable.1265" = type <{ %"struct.WTF::KeyValuePair.1267"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1267" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1268", i32, i32 }
%"class.WTF::Vector.1268" = type { %"class.WTF::VectorBuffer.1269" }
%"class.WTF::VectorBuffer.1269" = type { %"class.WTF::VectorBufferBase.1270" }
%"class.WTF::VectorBufferBase.1270" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1272" = type { %"class.WTF::LinkedHashSet.1275" }
%"class.WTF::LinkedHashSet.1275" = type { %"class.WTF::HashMap.1276", %"class.WTF::VectorBackedLinkedList.1280" }
%"class.WTF::HashMap.1276" = type { %"class.WTF::HashTable.1277" }
%"class.WTF::HashTable.1277" = type <{ %"struct.WTF::KeyValuePair.1279"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1279" = type opaque
%"class.WTF::VectorBackedLinkedList.1280" = type { %"class.WTF::Vector.1281", i32, i32 }
%"class.WTF::Vector.1281" = type { %"class.WTF::VectorBuffer.1282" }
%"class.WTF::VectorBuffer.1282" = type { %"class.WTF::VectorBufferBase.1283" }
%"class.WTF::VectorBufferBase.1283" = type { %"class.WTF::VectorBackedLinkedListNode.1284"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1284" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1286" = type { %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.1288" }
%"struct.std::__1::__compressed_pair_elem.1288" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1292" = type { %"class.std::__1::__compressed_pair.1293" }
%"class.std::__1::__compressed_pair.1293" = type { %"struct.std::__1::__compressed_pair_elem.1294" }
%"struct.std::__1::__compressed_pair_elem.1294" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1295, %class.scoped_refptr.1295, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1386", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1391", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1295 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1296", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1303" }
%"class.WTF::RefCounted.1296" = type { %"class.base::RefCounted.1297" }
%"class.base::RefCounted.1297" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1298", i32, [4 x i8] }>
%"class.WTF::Vector.1298" = type { %"class.WTF::VectorBuffer.1299" }
%"class.WTF::VectorBuffer.1299" = type { %"class.WTF::VectorBufferBase.1300" }
%"class.WTF::VectorBufferBase.1300" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1303" = type { %"class.WTF::VectorBuffer.1304" }
%"class.WTF::VectorBuffer.1304" = type { %"class.WTF::VectorBufferBase.1305" }
%"class.WTF::VectorBufferBase.1305" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1309", %"class.std::__1::unique_ptr.1358", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1306, %class.scoped_refptr.1307, %class.scoped_refptr.1308 }
%class.scoped_refptr.1306 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1322", i8, i8, %class.scoped_refptr.1306, i32, i32 }
%"class.WTF::RefCounted.1322" = type { %"class.base::RefCounted.1323" }
%"class.base::RefCounted.1323" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1307 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1477" }
%"class.blink::PaintPropertyNode.1477" = type { %"class.WTF::RefCounted.1478", i8, i8, %class.scoped_refptr.1307, i32, i32 }
%"class.WTF::RefCounted.1478" = type { %"class.base::RefCounted.1479" }
%"class.base::RefCounted.1479" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1308 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1474" }
%"class.blink::PaintPropertyNode.1474" = type { %"class.WTF::RefCounted.1475", i8, i8, %class.scoped_refptr.1308, i32, i32 }
%"class.WTF::RefCounted.1475" = type { %"class.base::RefCounted.1476" }
%"class.base::RefCounted.1476" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1309" = type { %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1312", %"class.WTF::Vector.1317", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1317" = type { %"class.WTF::VectorBuffer.1318" }
%"class.WTF::VectorBuffer.1318" = type { %"class.WTF::VectorBufferBase.1319" }
%"class.WTF::VectorBufferBase.1319" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1337" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1330, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1331", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1324" }
%"class.std::__1::unique_ptr.1324" = type { %"class.std::__1::__compressed_pair.1325" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1330 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1459", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1459" = type { %"class.WTF::RefCounted.1460", i8, i8, %class.scoped_refptr.1330, i32, i32 }
%"class.WTF::RefCounted.1460" = type { %"class.base::RefCounted.1461" }
%"class.base::RefCounted.1461" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1462" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1462" = type { %"class.absl::optional_internal::optional_data.1463" }
%"class.absl::optional_internal::optional_data.1463" = type { %"class.absl::optional_internal::optional_data_base.1464" }
%"class.absl::optional_internal::optional_data_base.1464" = type { %"class.absl::optional_internal::optional_data_dtor_base.1465" }
%"class.absl::optional_internal::optional_data_dtor_base.1465" = type { i8, %union.anon.1466 }
%union.anon.1466 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1467", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1467" = type { %"class.std::__1::__vector_base.1468" }
%"class.std::__1::__vector_base.1468" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1469" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1469" = type { %"struct.std::__1::__compressed_pair_elem.1470" }
%"struct.std::__1::__compressed_pair_elem.1470" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1331" = type { %"class.std::__1::__compressed_pair.1332" }
%"class.std::__1::__compressed_pair.1332" = type { %"struct.std::__1::__compressed_pair_elem.1333" }
%"struct.std::__1::__compressed_pair_elem.1333" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1337" = type { %"class.std::__1::__compressed_pair.1338" }
%"class.std::__1::__compressed_pair.1338" = type { %"struct.std::__1::__compressed_pair_elem.1339" }
%"struct.std::__1::__compressed_pair_elem.1339" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1340", %"class.std::__1::unique_ptr.1346", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1340" = type { %"class.std::__1::__compressed_pair.1341" }
%"class.std::__1::__compressed_pair.1341" = type { %"struct.std::__1::__compressed_pair_elem.1342" }
%"struct.std::__1::__compressed_pair_elem.1342" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1346" = type { %"class.std::__1::__compressed_pair.1347" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.1348" }
%"struct.std::__1::__compressed_pair_elem.1348" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1358" = type { %"class.std::__1::__compressed_pair.1359" }
%"class.std::__1::__compressed_pair.1359" = type { %"struct.std::__1::__compressed_pair_elem.1360" }
%"struct.std::__1::__compressed_pair_elem.1360" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1361", %"class.absl::optional.1361" }
%"class.absl::optional.1361" = type { %"class.absl::optional_internal::optional_data.1362" }
%"class.absl::optional_internal::optional_data.1362" = type { %"class.absl::optional_internal::optional_data_base.1363" }
%"class.absl::optional_internal::optional_data_base.1363" = type { %"class.absl::optional_internal::optional_data_dtor_base.1364" }
%"class.absl::optional_internal::optional_data_dtor_base.1364" = type { i8, [3 x i8], %union.anon.1365 }
%union.anon.1365 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1303"*, %"class.absl::optional.1371", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1371" = type { %"class.absl::optional_internal::optional_data.1372" }
%"class.absl::optional_internal::optional_data.1372" = type { %"class.absl::optional_internal::optional_data_base.1373" }
%"class.absl::optional_internal::optional_data_base.1373" = type { %"class.absl::optional_internal::optional_data_dtor_base.1374" }
%"class.absl::optional_internal::optional_data_dtor_base.1374" = type { i8, %union.anon.1375 }
%union.anon.1375 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1376", %"class.WTF::Vector.1381" }
%"class.WTF::Vector.1376" = type { %"class.WTF::VectorBuffer.1377" }
%"class.WTF::VectorBuffer.1377" = type { %"class.WTF::VectorBufferBase.1378", [128 x i8] }
%"class.WTF::VectorBufferBase.1378" = type { i32*, i32, i32 }
%"class.WTF::Vector.1381" = type { %"class.WTF::VectorBuffer.1382" }
%"class.WTF::VectorBuffer.1382" = type { %"class.WTF::VectorBufferBase.1383", [128 x i8] }
%"class.WTF::VectorBufferBase.1383" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1386" = type { %"class.WTF::VectorBuffer.1387" }
%"class.WTF::VectorBuffer.1387" = type { %"class.WTF::VectorBufferBase.1388" }
%"class.WTF::VectorBufferBase.1388" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1391" = type { %"class.WTF::HashTable.1392" }
%"class.WTF::HashTable.1392" = type <{ %"struct.WTF::KeyValuePair.1395"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1395" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1396", %"class.WTF::Vector.1401" }
%"class.WTF::HashMap.1396" = type { %"class.WTF::HashTable.1397" }
%"class.WTF::HashTable.1397" = type <{ %"struct.WTF::KeyValuePair.1400"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1400" = type opaque
%"class.WTF::Vector.1401" = type { %"class.WTF::VectorBuffer.1402" }
%"class.WTF::VectorBuffer.1402" = type { %"class.WTF::VectorBufferBase.1403" }
%"class.WTF::VectorBufferBase.1403" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1409" = type { %"class.std::__1::__compressed_pair.1410" }
%"class.std::__1::__compressed_pair.1410" = type { %"struct.std::__1::__compressed_pair_elem.1411" }
%"struct.std::__1::__compressed_pair_elem.1411" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1415" = type { %"class.WTF::VectorBuffer.1416" }
%"class.WTF::VectorBuffer.1416" = type { %"class.WTF::VectorBufferBase.1417" }
%"class.WTF::VectorBufferBase.1417" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1420 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.1422" }
%"class.blink::MemberBase.1422" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1423" = type { %"class.blink::MemberBase.1424" }
%"class.blink::MemberBase.1424" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1427" = type { %"class.WTF::HashSet.1430" }
%"class.WTF::HashSet.1430" = type { %"class.WTF::HashTable.1431" }
%"class.WTF::HashTable.1431" = type <{ %"class.blink::WeakMember.1433"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1433" = type opaque
%"class.blink::HeapHashSet.1434" = type { %"class.WTF::HashSet.1437" }
%"class.WTF::HashSet.1437" = type { %"class.WTF::HashTable.1438" }
%"class.WTF::HashTable.1438" = type <{ %"class.blink::WeakMember.1440"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1440" = type opaque
%"class.std::__1::unique_ptr.1441" = type { %"class.std::__1::__compressed_pair.1442" }
%"class.std::__1::__compressed_pair.1442" = type { %"struct.std::__1::__compressed_pair_elem.1443" }
%"struct.std::__1::__compressed_pair_elem.1443" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1444" }
%"class.base::time_internal::TimeBase.1444" = type { i64 }
%"class.std::__1::unique_ptr.1448" = type { %"class.std::__1::__compressed_pair.1449" }
%"class.std::__1::__compressed_pair.1449" = type { %"struct.std::__1::__compressed_pair_elem.1450" }
%"struct.std::__1::__compressed_pair_elem.1450" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1451", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1451" = type { %"class.absl::optional_internal::optional_data.1452" }
%"class.absl::optional_internal::optional_data.1452" = type { %"class.absl::optional_internal::optional_data_base.1453" }
%"class.absl::optional_internal::optional_data_base.1453" = type { %"class.absl::optional_internal::optional_data_dtor_base.1454" }
%"class.absl::optional_internal::optional_data_dtor_base.1454" = type { i8, %union.anon.1455 }
%union.anon.1455 = type { %"class.base::Time" }
%"class.blink::Member.1106" = type { %"class.blink::MemberBase.1107" }
%"class.blink::MemberBase.1107" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1032", %"class.blink::Member.1112", %"class.blink::Member.1114", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1116", %"class.blink::Member.1122" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.55" }
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.1116" = type { %"class.std::__1::__compressed_pair.1117" }
%"class.std::__1::__compressed_pair.1117" = type { %"struct.std::__1::__compressed_pair_elem.1118" }
%"struct.std::__1::__compressed_pair_elem.1118" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.1122" = type { %"class.blink::MemberBase.1123" }
%"class.blink::MemberBase.1123" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.1124" = type { %"class.blink::MemberBase.1125" }
%"class.blink::MemberBase.1125" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1126" = type { %"class.blink::MemberBase.1127" }
%"class.blink::MemberBase.1127" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1130 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1143" = type { %"class.blink::MemberBase.1144" }
%"class.blink::MemberBase.1144" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1145" = type { %"class.blink::Member.1146" }
%"class.blink::Member.1146" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1516" }
%"class.mojo::Remote.1516" = type { %"class.mojo::internal::InterfacePtrState.1517" }
%"class.mojo::internal::InterfacePtrState.1517" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1518" }
%"class.std::__1::unique_ptr.1518" = type { %"class.std::__1::__compressed_pair.1519" }
%"class.std::__1::__compressed_pair.1519" = type { %"struct.std::__1::__compressed_pair_elem.1520" }
%"struct.std::__1::__compressed_pair_elem.1520" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1148" = type { %"class.std::__1::__compressed_pair.1149" }
%"class.std::__1::__compressed_pair.1149" = type { %"struct.std::__1::__compressed_pair_elem.1150" }
%"struct.std::__1::__compressed_pair_elem.1150" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1154" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1155" = type { %"class.std::__1::__compressed_pair.1156" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1049" = type { %"class.absl::optional_internal::optional_data.1050" }
%"class.absl::optional_internal::optional_data.1050" = type { %"class.absl::optional_internal::optional_data_base.1051" }
%"class.absl::optional_internal::optional_data_base.1051" = type { %"class.absl::optional_internal::optional_data_dtor_base.1052" }
%"class.absl::optional_internal::optional_data_dtor_base.1052" = type { i8, %union.anon.1053 }
%union.anon.1053 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1161" = type { %"class.std::__1::__compressed_pair.1162" }
%"class.std::__1::__compressed_pair.1162" = type { %"struct.std::__1::__compressed_pair_elem.1163" }
%"struct.std::__1::__compressed_pair_elem.1163" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1167" }
%"class.blink::Member.1167" = type { %"class.blink::MemberBase.1168" }
%"class.blink::MemberBase.1168" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1526" }
%"class.mojo::AssociatedRemote.1526" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1527" }
%"class.mojo::internal::AssociatedInterfacePtrState.1527" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1528" }
%"class.std::__1::unique_ptr.1528" = type { %"class.std::__1::__compressed_pair.1529" }
%"class.std::__1::__compressed_pair.1529" = type { %"struct.std::__1::__compressed_pair_elem.1530" }
%"struct.std::__1::__compressed_pair_elem.1530" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1169" = type { %"class.blink::Member.1170" }
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1536" }
%"class.mojo::AssociatedRemote.1536" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1537" }
%"class.mojo::internal::AssociatedInterfacePtrState.1537" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1538" }
%"class.std::__1::unique_ptr.1538" = type { %"class.std::__1::__compressed_pair.1539" }
%"class.std::__1::__compressed_pair.1539" = type { %"struct.std::__1::__compressed_pair_elem.1540" }
%"struct.std::__1::__compressed_pair_elem.1540" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1172" }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1032", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1546" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.807" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1546" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1174" = type { %"class.blink::Member.1175" }
%"class.blink::Member.1175" = type { %"class.blink::MemberBase.1176" }
%"class.blink::MemberBase.1176" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1549", %"class.blink::Member.1032", %"class.mojo::AssociatedReceiver.1550" }
%"class.blink::ThreadState::PrefinalizerRegistration.1549" = type { i8 }
%"class.mojo::AssociatedReceiver.1550" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1551" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1551" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver.1177" = type { %"class.blink::Member.1178" }
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1554", %"class.blink::Member.1032", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1554" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.930, %"class.std::__1::unique_ptr.807", %"class.base::WeakPtrFactory.1555" }
%"class.base::WeakPtrFactory.1555" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1180" = type { %"class.blink::Member.1181" }
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1558", %"class.blink::Member.1032", %"class.mojo::AssociatedReceiver.1559" }
%"class.blink::ThreadState::PrefinalizerRegistration.1558" = type { i8 }
%"class.mojo::AssociatedReceiver.1559" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1560" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1560" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1183" = type { %"class.blink::MemberBase.1184" }
%"class.blink::MemberBase.1184" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1185" = type { %"class.blink::MemberBase.1186" }
%"class.blink::MemberBase.1186" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::HeapHashMap.1191"* }
%"class.blink::HeapHashMap.1191" = type opaque
%"class.mojo::StructPtr.1192" = type { %"class.std::__1::unique_ptr.1193" }
%"class.std::__1::unique_ptr.1193" = type { %"class.std::__1::__compressed_pair.1194" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1196", %"class.mojo::InlinedStructPtr.1197" }
%"class.mojo::InlinedStructPtr.1196" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1197" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1201" = type { %"class.blink::MemberBase.1202" }
%"class.blink::MemberBase.1202" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1203" = type { %"class.absl::optional_internal::optional_data.1204" }
%"class.absl::optional_internal::optional_data.1204" = type { %"class.absl::optional_internal::optional_data_base.1205" }
%"class.absl::optional_internal::optional_data_base.1205" = type { %"class.absl::optional_internal::optional_data_dtor_base.1206" }
%"class.absl::optional_internal::optional_data_dtor_base.1206" = type { i8, %union.anon.1207 }
%union.anon.1207 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.1486", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.1480", %"class.blink::Member.1482", %"class.blink::Member.1484", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.1482" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.1486" = type { %"class.blink::MemberBase.1487" }
%"class.blink::MemberBase.1487" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder" = type { %"class.blink::SelectionTemplate" }
%"class.blink::SetSelectionOptions::Builder" = type { %"class.blink::SetSelectionOptions" }
%"class.blink::SetSelectionOptions" = type <{ i32, i8, i8, [2 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1567", %"class.blink::Member.1567", %"class.blink::Member.1569", %"class.blink::Member.1571", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1562" }
%"class.absl::optional.1562" = type { %"class.absl::optional_internal::optional_data.1563" }
%"class.absl::optional_internal::optional_data.1563" = type { %"class.absl::optional_internal::optional_data_base.1564" }
%"class.absl::optional_internal::optional_data_base.1564" = type { %"class.absl::optional_internal::optional_data_dtor_base.1565" }
%"class.absl::optional_internal::optional_data_dtor_base.1565" = type { i8, %union.anon.1566 }
%union.anon.1566 = type { i64 }
%"class.blink::Member.1567" = type { %"class.blink::MemberBase.1568" }
%"class.blink::MemberBase.1568" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1569" = type { %"class.blink::MemberBase.1570" }
%"class.blink::MemberBase.1570" = type { %"class.blink::Event"* }
%"class.blink::Member.1571" = type { %"class.blink::MemberBase.1572" }
%"class.blink::MemberBase.1572" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1493", %"class.WTF::String" }
%"class.WTF::StringAppend.1493" = type { %"class.WTF::StringAppend.1494", i8* }
%"class.WTF::StringAppend.1494" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringTypeAdapter.1588" = type { %"class.WTF::StringTypeAdapter.1589" }
%"class.WTF::StringTypeAdapter.1589" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.1591" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN5blink10AXPositionaSERKS0_ = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10AXPositionC2ERKS0_ = comdat any

$_ZN5blink11AXSelectionD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [9 x i8] c"backward\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"Invalid AXSelection\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"AXSelection from \00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c" to \00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink16event_type_names7kSelectE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink16event_type_names12kSelectstartE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.7 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.8 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

@_ZN5blink11AXSelectionC1Ev = hidden unnamed_addr alias void (%"class.blink::AXSelection"*), void (%"class.blink::AXSelection"*)* @_ZN5blink11AXSelectionC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.blink::AXSelection::Builder"* @_ZN5blink11AXSelection7Builder7SetBaseERKNS_10AXPositionE(%"class.blink::AXSelection::Builder"* returned, %"class.blink::AXPosition"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %0, i64 0, i32 0, i32 0
  %4 = tail call dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"* %3, %"class.blink::AXPosition"* dereferenceable(24) %1)
  ret %"class.blink::AXSelection::Builder"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"*, %"class.blink::AXPosition"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::AXObject"* %5, %"class.blink::AXObject"** %6, align 8
  %7 = ptrtoint %"class.blink::AXObject"* %5 to i64
  switch i64 %7, label %8 [
    i64 0, label %38
    i64 -1, label %38
  ]

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %10 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %9, align 8
  %11 = icmp eq %"class.blink::PersistentNode"* %10, null
  br i1 %11, label %12, label %61

12:                                               ; preds = %8
  %13 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %14 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %13, i64 0, i32 1
  %15 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %14) #8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %17, label %19, !prof !2

17:                                               ; preds = %12
  %18 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %14, i8* %18) #8
  br label %19

19:                                               ; preds = %17, %12
  %20 = phi i8* [ %18, %17 ], [ %15, %12 ]
  %21 = bitcast i8* %20 to %"class.blink::ThreadState"**
  %22 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %22, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %28, label %31, !prof !2

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %24, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %29) #8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  br label %31

31:                                               ; preds = %28, %19
  %32 = phi %"class.blink::PersistentNode"* [ %30, %28 ], [ %26, %19 ]
  %33 = bitcast %"class.blink::PersistentNode"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::PersistentRegion"* %24 to i64*
  store i64 %34, i64* %35, align 8
  %36 = bitcast %"class.blink::PersistentNode"* %32 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %3, %"class.blink::PersistentBase"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %32, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %32, %"class.blink::PersistentNode"** %9, align 8
  br label %61

38:                                               ; preds = %2, %2
  %39 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %40 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %39, align 8
  %41 = icmp eq %"class.blink::PersistentNode"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %38
  %43 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %44 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %43, i64 0, i32 1
  %45 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %44) #8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %49, !prof !2

47:                                               ; preds = %42
  %48 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %44, i8* %48) #8
  br label %49

49:                                               ; preds = %47, %42
  %50 = phi i8* [ %48, %47 ], [ %45, %42 ]
  %51 = bitcast i8* %50 to %"class.blink::ThreadState"**
  %52 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %52, i64 0, i32 4, i32 0, i32 0, i32 0
  %54 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %53, align 8
  %55 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %39, align 8
  %56 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %54, i64 0, i32 0, i32 0
  %57 = bitcast %"class.blink::PersistentRegion"* %54 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.blink::PersistentNode"* %55 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %55, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %60, align 8
  store %"class.blink::PersistentNode"* %55, %"class.blink::PersistentNode"** %56, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %39, align 8
  br label %61

61:                                               ; preds = %49, %38, %31, %8
  %62 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %0, i64 0, i32 1
  %63 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %1, i64 0, i32 1
  %64 = bitcast i32* %63 to i64*
  %65 = bitcast i32* %62 to i64*
  %66 = load i64, i64* %64, align 8
  store i64 %66, i64* %65, align 8
  ret %"class.blink::AXPosition"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.blink::AXSelection::Builder"* @_ZN5blink11AXSelection7Builder7SetBaseERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::AXSelection::Builder"* returned, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AXPosition", align 8
  %4 = bitcast %"class.blink::AXPosition"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %3, i64 0, i32 0, i32 0, i32 1, i32 0
  %6 = bitcast %"class.blink::AXPosition"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZN5blink10AXPosition12FromPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %3, %"class.blink::PositionTemplate"* dereferenceable(16) %1, i32 1, i32 1) #8
  %7 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %0, i64 0, i32 0, i32 0
  %8 = call dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"* %7, %"class.blink::AXPosition"* nonnull dereferenceable(24) %3)
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %2
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %11
  %17 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #8
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %5, align 8
  br label %30

30:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret %"class.blink::AXSelection::Builder"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN5blink10AXPosition12FromPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.blink::AXSelection::Builder"* @_ZN5blink11AXSelection7Builder9SetExtentERKNS_10AXPositionE(%"class.blink::AXSelection::Builder"* returned, %"class.blink::AXPosition"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %0, i64 0, i32 0, i32 1
  %4 = tail call dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"* %3, %"class.blink::AXPosition"* dereferenceable(24) %1)
  ret %"class.blink::AXSelection::Builder"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.blink::AXSelection::Builder"* @_ZN5blink11AXSelection7Builder9SetExtentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::AXSelection::Builder"* returned, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AXPosition", align 8
  %4 = bitcast %"class.blink::AXPosition"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %3, i64 0, i32 0, i32 0, i32 1, i32 0
  %6 = bitcast %"class.blink::AXPosition"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZN5blink10AXPosition12FromPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %3, %"class.blink::PositionTemplate"* dereferenceable(16) %1, i32 1, i32 1) #8
  %7 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %0, i64 0, i32 0, i32 1
  %8 = call dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"* %7, %"class.blink::AXPosition"* nonnull dereferenceable(24) %3)
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %2
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %11
  %17 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #8
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %5, align 8
  br label %30

30:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret %"class.blink::AXSelection::Builder"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.blink::AXSelection::Builder"* @_ZN5blink11AXSelection7Builder12SetSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::AXSelection::Builder"* returned, %"class.blink::SelectionTemplate"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AXPosition", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::AXPosition", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = getelementptr inbounds %"class.blink::SelectionTemplate", %"class.blink::SelectionTemplate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %65, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::AXPosition"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE4BaseEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::SelectionTemplate"* %1) #8
  call void @_ZN5blink10AXPosition12FromPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %3, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, i32 1, i32 1) #8
  %13 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %0, i64 0, i32 0, i32 0
  %14 = call dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"* %13, %"class.blink::AXPosition"* nonnull dereferenceable(24) %3)
  %15 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %3, i64 0, i32 0, i32 0, i32 1, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %10
  %19 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %20 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %19, i64 0, i32 1
  %21 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %20) #8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %25, !prof !2

23:                                               ; preds = %18
  %24 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %20, i8* %24) #8
  br label %25

25:                                               ; preds = %23, %18
  %26 = phi i8* [ %24, %23 ], [ %21, %18 ]
  %27 = bitcast i8* %26 to %"class.blink::ThreadState"**
  %28 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %28, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %29, align 8
  %31 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %30, i64 0, i32 0, i32 0
  %33 = bitcast %"class.blink::PersistentRegion"* %30 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::PersistentNode"* %31 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %31, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %36, align 8
  store %"class.blink::PersistentNode"* %31, %"class.blink::PersistentNode"** %32, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  br label %37

37:                                               ; preds = %10, %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  %38 = bitcast %"class.blink::AXPosition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #8
  %39 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #8
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE6ExtentEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::SelectionTemplate"* %1) #8
  call void @_ZN5blink10AXPosition12FromPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i32 1, i32 1) #8
  %40 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %0, i64 0, i32 0, i32 1
  %41 = call dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"* %40, %"class.blink::AXPosition"* nonnull dereferenceable(24) %5)
  %42 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0, i32 1, i32 0
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %42, align 8
  %44 = icmp eq %"class.blink::PersistentNode"* %43, null
  br i1 %44, label %64, label %45

45:                                               ; preds = %37
  %46 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %47 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %46, i64 0, i32 1
  %48 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %47) #8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %52, !prof !2

50:                                               ; preds = %45
  %51 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %47, i8* %51) #8
  br label %52

52:                                               ; preds = %50, %45
  %53 = phi i8* [ %51, %50 ], [ %48, %45 ]
  %54 = bitcast i8* %53 to %"class.blink::ThreadState"**
  %55 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %55, i64 0, i32 4, i32 0, i32 0, i32 0
  %57 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %56, align 8
  %58 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %42, align 8
  %59 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %57, i64 0, i32 0, i32 0
  %60 = bitcast %"class.blink::PersistentRegion"* %57 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.blink::PersistentNode"* %58 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %58, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %63, align 8
  store %"class.blink::PersistentNode"* %58, %"class.blink::PersistentNode"** %59, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %42, align 8
  br label %64

64:                                               ; preds = %37, %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #8
  br label %65

65:                                               ; preds = %2, %64
  ret %"class.blink::AXSelection::Builder"* %0
}

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE4BaseEv(%"class.blink::PositionTemplate"* sret, %"class.blink::SelectionTemplate"*) local_unnamed_addr #2

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE6ExtentEv(%"class.blink::PositionTemplate"* sret, %"class.blink::SelectionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11AXSelection7Builder5BuildEv(%"class.blink::AXSelection"* noalias sret, %"class.blink::AXSelection::Builder"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AXPosition", align 8
  %4 = alloca %"class.blink::AXPosition", align 8
  %5 = alloca %"class.blink::AXPosition", align 8
  %6 = alloca %"class.blink::AXPosition", align 8
  %7 = bitcast %"class.blink::AXPosition"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %1, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %3, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::AXSelection::Builder"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::AXPosition"* %3 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %3, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %13, align 8
  switch i64 %11, label %14 [
    i64 0, label %40
    i64 -1, label %40
  ]

14:                                               ; preds = %2
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #8
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %30, label %33, !prof !2

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %31) #8
  %32 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  br label %33

33:                                               ; preds = %30, %21
  %34 = phi %"class.blink::PersistentNode"* [ %32, %30 ], [ %28, %21 ]
  %35 = bitcast %"class.blink::PersistentNode"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  store i64 %36, i64* %37, align 8
  %38 = bitcast %"class.blink::PersistentNode"* %34 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %9, %"class.blink::PersistentBase"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %34, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %39, align 8
  store %"class.blink::PersistentNode"* %34, %"class.blink::PersistentNode"** %13, align 8
  br label %40

40:                                               ; preds = %2, %2, %33
  %41 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %3, i64 0, i32 1
  %42 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %1, i64 0, i32 0, i32 0, i32 1
  %43 = bitcast i32* %42 to i64*
  %44 = bitcast i32* %41 to i64*
  %45 = load i64, i64* %43, align 8
  store i64 %45, i64* %44, align 8
  %46 = call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* nonnull %3, %"class.WTF::String"* null) #8
  br i1 %46, label %47, label %111

47:                                               ; preds = %40
  %48 = bitcast %"class.blink::AXPosition"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #8
  %49 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %1, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %4, i64 0, i32 0, i32 0
  %51 = bitcast %"class.blink::AXPosition"* %49 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.blink::AXPosition"* %4 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %4, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %54, align 8
  switch i64 %52, label %55 [
    i64 0, label %81
    i64 -1, label %81
  ]

55:                                               ; preds = %47
  %56 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %57 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %56, i64 0, i32 1
  %58 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %57) #8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %62, !prof !2

60:                                               ; preds = %55
  %61 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %57, i8* %61) #8
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i8* [ %61, %60 ], [ %58, %55 ]
  %64 = bitcast i8* %63 to %"class.blink::ThreadState"**
  %65 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %67 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %67, i64 0, i32 0, i32 0
  %69 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %68, align 8
  %70 = icmp eq %"class.blink::PersistentNode"* %69, null
  br i1 %70, label %71, label %74, !prof !2

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %67, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %72) #8
  %73 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %68, align 8
  br label %74

74:                                               ; preds = %71, %62
  %75 = phi %"class.blink::PersistentNode"* [ %73, %71 ], [ %69, %62 ]
  %76 = bitcast %"class.blink::PersistentNode"* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.blink::PersistentRegion"* %67 to i64*
  store i64 %77, i64* %78, align 8
  %79 = bitcast %"class.blink::PersistentNode"* %75 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %50, %"class.blink::PersistentBase"** %79, align 8
  %80 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %75, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %80, align 8
  store %"class.blink::PersistentNode"* %75, %"class.blink::PersistentNode"** %54, align 8
  br label %81

81:                                               ; preds = %74, %47, %47
  %82 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %4, i64 0, i32 1
  %83 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %1, i64 0, i32 0, i32 1, i32 1
  %84 = bitcast i32* %83 to i64*
  %85 = bitcast i32* %82 to i64*
  %86 = load i64, i64* %84, align 8
  store i64 %86, i64* %85, align 8
  %87 = call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* nonnull %4, %"class.WTF::String"* null) #8
  %88 = xor i1 %87, true
  %89 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %54, align 8
  %90 = icmp eq %"class.blink::PersistentNode"* %89, null
  br i1 %90, label %110, label %91

91:                                               ; preds = %81
  %92 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %93 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %92, i64 0, i32 1
  %94 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %93) #8
  %95 = icmp eq i8* %94, null
  br i1 %95, label %96, label %98, !prof !2

96:                                               ; preds = %91
  %97 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %93, i8* %97) #8
  br label %98

98:                                               ; preds = %96, %91
  %99 = phi i8* [ %97, %96 ], [ %94, %91 ]
  %100 = bitcast i8* %99 to %"class.blink::ThreadState"**
  %101 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %101, i64 0, i32 4, i32 0, i32 0, i32 0
  %103 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %102, align 8
  %104 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %54, align 8
  %105 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %103, i64 0, i32 0, i32 0
  %106 = bitcast %"class.blink::PersistentRegion"* %103 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.blink::PersistentNode"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %104, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %109, align 8
  store %"class.blink::PersistentNode"* %104, %"class.blink::PersistentNode"** %105, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %54, align 8
  br label %110

110:                                              ; preds = %81, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #8
  br label %111

111:                                              ; preds = %40, %110
  %112 = phi i1 [ %88, %110 ], [ true, %40 ]
  %113 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %13, align 8
  %114 = icmp eq %"class.blink::PersistentNode"* %113, null
  br i1 %114, label %134, label %115

115:                                              ; preds = %111
  %116 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %117 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %116, i64 0, i32 1
  %118 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %117) #8
  %119 = icmp eq i8* %118, null
  br i1 %119, label %120, label %122, !prof !2

120:                                              ; preds = %115
  %121 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %117, i8* %121) #8
  br label %122

122:                                              ; preds = %120, %115
  %123 = phi i8* [ %121, %120 ], [ %118, %115 ]
  %124 = bitcast i8* %123 to %"class.blink::ThreadState"**
  %125 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %125, i64 0, i32 4, i32 0, i32 0, i32 0
  %127 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %126, align 8
  %128 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %13, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %127, i64 0, i32 0, i32 0
  %130 = bitcast %"class.blink::PersistentRegion"* %127 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.blink::PersistentNode"* %128 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %128, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %133, align 8
  store %"class.blink::PersistentNode"* %128, %"class.blink::PersistentNode"** %129, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %13, align 8
  br label %134

134:                                              ; preds = %111, %122
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  br i1 %112, label %135, label %138

135:                                              ; preds = %134
  %136 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0
  call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %136) #8
  %137 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %137) #8
  br label %281

138:                                              ; preds = %134
  %139 = bitcast %"class.blink::AXPosition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #8
  %140 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0
  %141 = load i64, i64* %10, align 8
  %142 = bitcast %"class.blink::AXPosition"* %5 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %143, align 8
  %144 = inttoptr i64 %141 to %"class.blink::AXObject"*
  switch i64 %141, label %145 [
    i64 0, label %173
    i64 -1, label %173
  ]

145:                                              ; preds = %138
  %146 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %147 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %146, i64 0, i32 1
  %148 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %147) #8
  %149 = icmp eq i8* %148, null
  br i1 %149, label %150, label %152, !prof !2

150:                                              ; preds = %145
  %151 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %147, i8* %151) #8
  br label %152

152:                                              ; preds = %150, %145
  %153 = phi i8* [ %151, %150 ], [ %148, %145 ]
  %154 = bitcast i8* %153 to %"class.blink::ThreadState"**
  %155 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %155, i64 0, i32 4, i32 0, i32 0, i32 0
  %157 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %157, i64 0, i32 0, i32 0
  %159 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %158, align 8
  %160 = icmp eq %"class.blink::PersistentNode"* %159, null
  br i1 %160, label %161, label %164, !prof !2

161:                                              ; preds = %152
  %162 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %157, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %162) #8
  %163 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %158, align 8
  br label %164

164:                                              ; preds = %161, %152
  %165 = phi %"class.blink::PersistentNode"* [ %163, %161 ], [ %159, %152 ]
  %166 = bitcast %"class.blink::PersistentNode"* %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.blink::PersistentRegion"* %157 to i64*
  store i64 %167, i64* %168, align 8
  %169 = bitcast %"class.blink::PersistentNode"* %165 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %140, %"class.blink::PersistentBase"** %169, align 8
  %170 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %165, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %170, align 8
  store %"class.blink::PersistentNode"* %165, %"class.blink::PersistentNode"** %143, align 8
  %171 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0, i32 0
  %172 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %171, align 8
  br label %173

173:                                              ; preds = %138, %138, %164
  %174 = phi %"class.blink::AXObject"* [ %144, %138 ], [ %144, %138 ], [ %172, %164 ]
  %175 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 1
  %176 = bitcast i32* %175 to i64*
  %177 = load i64, i64* %43, align 8
  store i64 %177, i64* %176, align 8
  %178 = bitcast %"class.blink::AXObject"* %174 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %179 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %178, align 8
  %180 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %179, i64 126
  %181 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %180, align 8
  %182 = call %"class.blink::Document"* %181(%"class.blink::AXObject"* %174) #8
  %183 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %143, align 8
  %184 = icmp eq %"class.blink::PersistentNode"* %183, null
  br i1 %184, label %204, label %185

185:                                              ; preds = %173
  %186 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %187 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %186, i64 0, i32 1
  %188 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %187) #8
  %189 = icmp eq i8* %188, null
  br i1 %189, label %190, label %192, !prof !2

190:                                              ; preds = %185
  %191 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %187, i8* %191) #8
  br label %192

192:                                              ; preds = %190, %185
  %193 = phi i8* [ %191, %190 ], [ %188, %185 ]
  %194 = bitcast i8* %193 to %"class.blink::ThreadState"**
  %195 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %194, align 8
  %196 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %195, i64 0, i32 4, i32 0, i32 0, i32 0
  %197 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %196, align 8
  %198 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %143, align 8
  %199 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %197, i64 0, i32 0, i32 0
  %200 = bitcast %"class.blink::PersistentRegion"* %197 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.blink::PersistentNode"* %198 to i64*
  store i64 %201, i64* %202, align 8
  %203 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %198, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %203, align 8
  store %"class.blink::PersistentNode"* %198, %"class.blink::PersistentNode"** %199, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %143, align 8
  br label %204

204:                                              ; preds = %173, %192
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #8
  %205 = bitcast %"class.blink::AXPosition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205) #8
  %206 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %1, i64 0, i32 0, i32 1
  %207 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 0, i32 0
  %208 = bitcast %"class.blink::AXPosition"* %206 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = bitcast %"class.blink::AXPosition"* %6 to i64*
  store i64 %209, i64* %210, align 8
  %211 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %211, align 8
  %212 = inttoptr i64 %209 to %"class.blink::AXObject"*
  switch i64 %209, label %213 [
    i64 0, label %241
    i64 -1, label %241
  ]

213:                                              ; preds = %204
  %214 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %215 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %214, i64 0, i32 1
  %216 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %215) #8
  %217 = icmp eq i8* %216, null
  br i1 %217, label %218, label %220, !prof !2

218:                                              ; preds = %213
  %219 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %215, i8* %219) #8
  br label %220

220:                                              ; preds = %218, %213
  %221 = phi i8* [ %219, %218 ], [ %216, %213 ]
  %222 = bitcast i8* %221 to %"class.blink::ThreadState"**
  %223 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %222, align 8
  %224 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %223, i64 0, i32 4, i32 0, i32 0, i32 0
  %225 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %224, align 8
  %226 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %225, i64 0, i32 0, i32 0
  %227 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %226, align 8
  %228 = icmp eq %"class.blink::PersistentNode"* %227, null
  br i1 %228, label %229, label %232, !prof !2

229:                                              ; preds = %220
  %230 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %225, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %230) #8
  %231 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %226, align 8
  br label %232

232:                                              ; preds = %229, %220
  %233 = phi %"class.blink::PersistentNode"* [ %231, %229 ], [ %227, %220 ]
  %234 = bitcast %"class.blink::PersistentNode"* %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.blink::PersistentRegion"* %225 to i64*
  store i64 %235, i64* %236, align 8
  %237 = bitcast %"class.blink::PersistentNode"* %233 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %207, %"class.blink::PersistentBase"** %237, align 8
  %238 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %233, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %238, align 8
  store %"class.blink::PersistentNode"* %233, %"class.blink::PersistentNode"** %211, align 8
  %239 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 0, i32 0, i32 0
  %240 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %239, align 8
  br label %241

241:                                              ; preds = %204, %204, %232
  %242 = phi %"class.blink::AXObject"* [ %212, %204 ], [ %212, %204 ], [ %240, %232 ]
  %243 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 1
  %244 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %1, i64 0, i32 0, i32 1, i32 1
  %245 = bitcast i32* %244 to i64*
  %246 = bitcast i32* %243 to i64*
  %247 = load i64, i64* %245, align 8
  store i64 %247, i64* %246, align 8
  %248 = bitcast %"class.blink::AXObject"* %242 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %249 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %248, align 8
  %250 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %249, i64 126
  %251 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %250, align 8
  %252 = call %"class.blink::Document"* %251(%"class.blink::AXObject"* %242) #8
  %253 = icmp eq %"class.blink::Document"* %252, %182
  %254 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %211, align 8
  %255 = icmp eq %"class.blink::PersistentNode"* %254, null
  br i1 %255, label %275, label %256

256:                                              ; preds = %241
  %257 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %258 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %257, i64 0, i32 1
  %259 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %258) #8
  %260 = icmp eq i8* %259, null
  br i1 %260, label %261, label %263, !prof !2

261:                                              ; preds = %256
  %262 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %258, i8* %262) #8
  br label %263

263:                                              ; preds = %261, %256
  %264 = phi i8* [ %262, %261 ], [ %259, %256 ]
  %265 = bitcast i8* %264 to %"class.blink::ThreadState"**
  %266 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %265, align 8
  %267 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %266, i64 0, i32 4, i32 0, i32 0, i32 0
  %268 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %267, align 8
  %269 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %211, align 8
  %270 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %268, i64 0, i32 0, i32 0
  %271 = bitcast %"class.blink::PersistentRegion"* %268 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = bitcast %"class.blink::PersistentNode"* %269 to i64*
  store i64 %272, i64* %273, align 8
  %274 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %269, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %274, align 8
  store %"class.blink::PersistentNode"* %269, %"class.blink::PersistentNode"** %270, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %211, align 8
  br label %275

275:                                              ; preds = %241, %263
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #8
  %276 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0
  br i1 %253, label %279, label %277

277:                                              ; preds = %275
  call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %276) #8
  %278 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %278) #8
  br label %281

279:                                              ; preds = %275
  call void @_ZN5blink10AXPositionC2ERKS0_(%"class.blink::AXPosition"* %276, %"class.blink::AXPosition"* dereferenceable(24) %8) #8
  %280 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  call void @_ZN5blink10AXPositionC2ERKS0_(%"class.blink::AXPosition"* %280, %"class.blink::AXPosition"* dereferenceable(24) %206) #8
  br label %281

281:                                              ; preds = %277, %279, %135
  ret void
}

declare zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"*, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11AXSelection21ClearCurrentSelectionERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %0) #8
  %3 = icmp eq %"class.blink::LocalFrame"* %2, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %2, i64 0, i32 14, i32 0, i32 0
  %6 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %5, align 8
  %7 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %6) #8
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @_ZN5blink14FrameSelection5ClearEv(%"class.blink::FrameSelection"* %6) #8
  br label %9

9:                                                ; preds = %8, %4, %1
  ret void
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"*) local_unnamed_addr #2

declare void @_ZN5blink14FrameSelection5ClearEv(%"class.blink::FrameSelection"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11AXSelection20FromCurrentSelectionERKNS_8DocumentENS_19AXSelectionBehaviorE(%"class.blink::AXSelection"* noalias sret, %"class.blink::Document"* dereferenceable(2848), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::SelectionTemplate", align 8
  %5 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1) #8
  %6 = icmp eq %"class.blink::LocalFrame"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0
  tail call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %8) #8
  %9 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  tail call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %9) #8
  br label %19

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %5, i64 0, i32 14, i32 0, i32 0
  %12 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %11, align 8
  %13 = tail call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %12) #8
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0
  tail call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %15) #8
  %16 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  tail call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %16) #8
  br label %19

17:                                               ; preds = %10
  %18 = bitcast %"class.blink::SelectionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #8
  call void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* nonnull sret %4, %"class.blink::FrameSelection"* %12) #8
  call void @_ZN5blink11AXSelection13FromSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_19AXSelectionBehaviorE(%"class.blink::AXSelection"* sret %0, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %4, i32 %2)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #8
  br label %19

19:                                               ; preds = %14, %17, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11AXSelection13FromSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_19AXSelectionBehaviorE(%"class.blink::AXSelection"* noalias sret, %"class.blink::SelectionTemplate"* dereferenceable(40), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::AXPosition", align 8
  %7 = alloca %"class.blink::AXPosition", align 8
  %8 = alloca %"class.blink::AXSelection::Builder", align 8
  %9 = getelementptr inbounds %"class.blink::SelectionTemplate", %"class.blink::SelectionTemplate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0
  tail call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %13) #8
  %14 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  tail call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %14) #8
  br label %101

15:                                               ; preds = %3
  %16 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8
  %17 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE4BaseEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::SelectionTemplate"* %1) #8
  %18 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  %19 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE6ExtentEv(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::SelectionTemplate"* %1) #8
  %20 = getelementptr inbounds %"class.blink::SelectionTemplate", %"class.blink::SelectionTemplate"* %1, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = call zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsCaretEv(%"class.blink::SelectionTemplate"* %1) #8
  %23 = select i1 %22, i32 %21, i32 1
  %24 = call zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsCaretEv(%"class.blink::SelectionTemplate"* %1) #8
  br i1 %24, label %32, label %25

25:                                               ; preds = %15
  switch i32 %2, label %32 [
    i32 0, label %26
    i32 1, label %29
  ]

26:                                               ; preds = %25
  %27 = call zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsBaseFirstEv(%"class.blink::SelectionTemplate"* %1) #8
  %28 = xor i1 %27, true
  br label %32

29:                                               ; preds = %25
  %30 = call zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsBaseFirstEv(%"class.blink::SelectionTemplate"* %1) #8
  %31 = xor i1 %30, true
  br label %32

32:                                               ; preds = %29, %26, %25, %15
  %33 = phi i1 [ true, %15 ], [ true, %25 ], [ %27, %26 ], [ %31, %29 ]
  %34 = phi i1 [ true, %15 ], [ true, %25 ], [ %28, %26 ], [ %30, %29 ]
  %35 = zext i1 %34 to i32
  %36 = zext i1 %33 to i32
  %37 = bitcast %"class.blink::AXPosition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #8
  %38 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  %39 = bitcast %"class.blink::AXPosition"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  call void @_ZN5blink10AXPosition12FromPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, i32 %23, i32 %36) #8
  %40 = bitcast %"class.blink::AXPosition"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #8
  %41 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %7, i64 0, i32 0, i32 0, i32 1, i32 0
  %42 = bitcast %"class.blink::AXPosition"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 24, i1 false)
  call void @_ZN5blink10AXPosition12FromPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, i32 %21, i32 %35) #8
  %43 = call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* nonnull %6, %"class.WTF::String"* null) #8
  br i1 %43, label %44, label %46

44:                                               ; preds = %32
  %45 = call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* nonnull %7, %"class.WTF::String"* null) #8
  br i1 %45, label %49, label %46

46:                                               ; preds = %44, %32
  %47 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0
  call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %47) #8
  %48 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %48) #8
  br label %56

49:                                               ; preds = %44
  %50 = bitcast %"class.blink::AXSelection::Builder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %50) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 48, i1 false)
  %51 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %8, i64 0, i32 0, i32 0
  call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* nonnull %51) #8
  %52 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %8, i64 0, i32 0, i32 1
  call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %52) #8
  %53 = call dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"* nonnull %51, %"class.blink::AXPosition"* nonnull dereferenceable(24) %6) #8
  %54 = call dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"* %52, %"class.blink::AXPosition"* nonnull dereferenceable(24) %7) #8
  call void @_ZN5blink11AXSelection7Builder5BuildEv(%"class.blink::AXSelection"* sret %0, %"class.blink::AXSelection::Builder"* nonnull %8)
  %55 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %8, i64 0, i32 0
  call void @_ZN5blink11AXSelectionD2Ev(%"class.blink::AXSelection"* nonnull %55) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %50) #8
  br label %56

56:                                               ; preds = %49, %46
  %57 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %41, align 8
  %58 = icmp eq %"class.blink::PersistentNode"* %57, null
  br i1 %58, label %78, label %59

59:                                               ; preds = %56
  %60 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %61 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %60, i64 0, i32 1
  %62 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %61) #8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %64, label %66, !prof !2

64:                                               ; preds = %59
  %65 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %61, i8* %65) #8
  br label %66

66:                                               ; preds = %64, %59
  %67 = phi i8* [ %65, %64 ], [ %62, %59 ]
  %68 = bitcast i8* %67 to %"class.blink::ThreadState"**
  %69 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %69, i64 0, i32 4, i32 0, i32 0, i32 0
  %71 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %70, align 8
  %72 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %41, align 8
  %73 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %71, i64 0, i32 0, i32 0
  %74 = bitcast %"class.blink::PersistentRegion"* %71 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::PersistentNode"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %72, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %77, align 8
  store %"class.blink::PersistentNode"* %72, %"class.blink::PersistentNode"** %73, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %41, align 8
  br label %78

78:                                               ; preds = %56, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #8
  %79 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %38, align 8
  %80 = icmp eq %"class.blink::PersistentNode"* %79, null
  br i1 %80, label %100, label %81

81:                                               ; preds = %78
  %82 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %83 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %82, i64 0, i32 1
  %84 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %83) #8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %86, label %88, !prof !2

86:                                               ; preds = %81
  %87 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %83, i8* %87) #8
  br label %88

88:                                               ; preds = %86, %81
  %89 = phi i8* [ %87, %86 ], [ %84, %81 ]
  %90 = bitcast i8* %89 to %"class.blink::ThreadState"**
  %91 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %91, i64 0, i32 4, i32 0, i32 0, i32 0
  %93 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %92, align 8
  %94 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %38, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %93, i64 0, i32 0, i32 0
  %96 = bitcast %"class.blink::PersistentRegion"* %93 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.blink::PersistentNode"* %94 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %94, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %99, align 8
  store %"class.blink::PersistentNode"* %94, %"class.blink::PersistentNode"** %95, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %38, align 8
  br label %100

100:                                              ; preds = %78, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8
  br label %101

101:                                              ; preds = %100, %12
  ret void
}

declare void @_ZNK5blink14FrameSelection21GetSelectionInDOMTreeEv(%"class.blink::SelectionTemplate"* sret, %"class.blink::FrameSelection"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11AXSelection20FromCurrentSelectionERKNS_18TextControlElementE(%"class.blink::AXSelection"* noalias sret, %"class.blink::TextControlElement"* dereferenceable(248)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::SelectionTemplate", align 8
  %6 = alloca %"class.blink::AXPosition", align 8
  %7 = alloca %"class.blink::AXPosition", align 8
  %8 = alloca %"class.blink::AXSelection::Builder", align 8
  %9 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = tail call %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"* %12) #8
  %14 = icmp eq %"class.blink::AXObjectCache"* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0
  tail call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %16) #8
  %17 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  tail call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %17) #8
  br label %131

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.blink::AXObjectCache"* %13 to %"class.blink::AXObjectCacheImpl"*
  %21 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"* nonnull %20, %"class.blink::Node"* %19) #8
  %22 = bitcast %"class.blink::SelectionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #8
  call void @_ZNK5blink18TextControlElement9SelectionEv(%"class.blink::SelectionTemplate"* nonnull sret %5, %"class.blink::TextControlElement"* %1) #8
  %23 = getelementptr inbounds %"class.blink::SelectionTemplate", %"class.blink::SelectionTemplate"* %5, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #8
  %25 = call i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"* %1) #8
  %26 = call i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"* %1) #8
  %27 = icmp eq i32 %25, %26
  %28 = select i1 %27, i32 %24, i32 1
  %29 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink18TextControlElement18selectionDirectionEv(%"class.blink::TextControlElement"* %1) #8
  %30 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %29, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %38

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %35, align 8
  %36 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %37 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %36, i64* %37, align 8
  br label %46

38:                                               ; preds = %18
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %44, align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %46

46:                                               ; preds = %38, %34
  %47 = phi i64 [ %45, %38 ], [ %36, %34 ]
  %48 = phi i32 [ %41, %38 ], [ 0, %34 ]
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %48, i32* %49, align 8
  %50 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #8
  %51 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %47, i64* %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8** %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 8, i32* %53, align 8
  %54 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8
  %55 = bitcast %"class.blink::AXPosition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #8
  %56 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  %57 = bitcast %"class.blink::AXPosition"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 24, i1 false)
  br i1 %54, label %58, label %60

58:                                               ; preds = %46
  %59 = call i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"* %1) #8
  br label %62

60:                                               ; preds = %46
  %61 = call i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"* %1) #8
  br label %62

62:                                               ; preds = %60, %58
  %63 = phi i32 [ %59, %58 ], [ %61, %60 ]
  call void @_ZN5blink10AXPosition26CreatePositionInTextObjectERKNS_8AXObjectEiNS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %6, %"class.blink::AXObject"* dereferenceable(120) %21, i32 %63, i32 %28, i32 1) #8
  %64 = bitcast %"class.blink::AXPosition"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #8
  %65 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %7, i64 0, i32 0, i32 0, i32 1, i32 0
  %66 = bitcast %"class.blink::AXPosition"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 24, i1 false)
  br i1 %54, label %67, label %69

67:                                               ; preds = %62
  %68 = call i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"* %1) #8
  br label %71

69:                                               ; preds = %62
  %70 = call i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"* %1) #8
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi i32 [ %68, %67 ], [ %70, %69 ]
  call void @_ZN5blink10AXPosition26CreatePositionInTextObjectERKNS_8AXObjectEiNS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %7, %"class.blink::AXObject"* dereferenceable(120) %21, i32 %72, i32 %24, i32 1) #8
  %73 = call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* nonnull %6, %"class.WTF::String"* null) #8
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* nonnull %7, %"class.WTF::String"* null) #8
  br i1 %75, label %79, label %76

76:                                               ; preds = %74, %71
  %77 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0
  call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %77) #8
  %78 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %78) #8
  br label %86

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::AXSelection::Builder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %80) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 48, i1 false)
  %81 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %8, i64 0, i32 0, i32 0
  call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* nonnull %81) #8
  %82 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %8, i64 0, i32 0, i32 1
  call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %82) #8
  %83 = call dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"* nonnull %81, %"class.blink::AXPosition"* nonnull dereferenceable(24) %6) #8
  %84 = call dereferenceable(24) %"class.blink::AXPosition"* @_ZN5blink10AXPositionaSERKS0_(%"class.blink::AXPosition"* %82, %"class.blink::AXPosition"* nonnull dereferenceable(24) %7) #8
  call void @_ZN5blink11AXSelection7Builder5BuildEv(%"class.blink::AXSelection"* sret %0, %"class.blink::AXSelection::Builder"* nonnull %8)
  %85 = getelementptr inbounds %"class.blink::AXSelection::Builder", %"class.blink::AXSelection::Builder"* %8, i64 0, i32 0
  call void @_ZN5blink11AXSelectionD2Ev(%"class.blink::AXSelection"* nonnull %85) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %80) #8
  br label %86

86:                                               ; preds = %79, %76
  %87 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %65, align 8
  %88 = icmp eq %"class.blink::PersistentNode"* %87, null
  br i1 %88, label %108, label %89

89:                                               ; preds = %86
  %90 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %91 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %90, i64 0, i32 1
  %92 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %91) #8
  %93 = icmp eq i8* %92, null
  br i1 %93, label %94, label %96, !prof !2

94:                                               ; preds = %89
  %95 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %91, i8* %95) #8
  br label %96

96:                                               ; preds = %94, %89
  %97 = phi i8* [ %95, %94 ], [ %92, %89 ]
  %98 = bitcast i8* %97 to %"class.blink::ThreadState"**
  %99 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %99, i64 0, i32 4, i32 0, i32 0, i32 0
  %101 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %100, align 8
  %102 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %65, align 8
  %103 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %101, i64 0, i32 0, i32 0
  %104 = bitcast %"class.blink::PersistentRegion"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.blink::PersistentNode"* %102 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %102, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %107, align 8
  store %"class.blink::PersistentNode"* %102, %"class.blink::PersistentNode"** %103, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %65, align 8
  br label %108

108:                                              ; preds = %86, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #8
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %56, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %108
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #8
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !2

116:                                              ; preds = %111
  %117 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #8
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 4, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %56, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %56, align 8
  br label %130

130:                                              ; preds = %108, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #8
  br label %131

131:                                              ; preds = %130, %15
  ret void
}

declare %"class.blink::AXObjectCache"* @_ZNK5blink8Document21ExistingAXObjectCacheEv(%"class.blink::Document"*) local_unnamed_addr #2

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPKNS_4NodeE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZNK5blink18TextControlElement9SelectionEv(%"class.blink::SelectionTemplate"* sret, %"class.blink::TextControlElement"*) local_unnamed_addr #2

declare i32 @_ZNK5blink18TextControlElement14selectionStartEv(%"class.blink::TextControlElement"*) local_unnamed_addr #2

declare i32 @_ZNK5blink18TextControlElement12selectionEndEv(%"class.blink::TextControlElement"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink18TextControlElement18selectionDirectionEv(%"class.blink::TextControlElement"*) local_unnamed_addr #2

declare void @_ZN5blink10AXPosition26CreatePositionInTextObjectERKNS_8AXObjectEiNS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* sret, %"class.blink::AXObject"* dereferenceable(120), i32, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsCaretEv(%"class.blink::SelectionTemplate"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsBaseFirstEv(%"class.blink::SelectionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11AXSelectionC2Ev(%"class.blink::AXSelection"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0
  tail call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %2) #8
  %3 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  tail call void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"* %3) #8
  ret void
}

declare void @_ZN5blink10AXPositionC1Ev(%"class.blink::AXPosition"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11AXSelection7IsValidEv(%"class.blink::AXSelection"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* %2, %"class.WTF::String"* null) #8
  br i1 %3, label %4, label %52

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  %6 = tail call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* %5, %"class.WTF::String"* null) #8
  br i1 %6, label %7, label %52

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %8, align 8
  %10 = bitcast %"class.blink::AXObject"* %9 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %11 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %11, i64 126
  %13 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %12, align 8
  %14 = tail call %"class.blink::Document"* %13(%"class.blink::AXObject"* %9) #8
  %15 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %15, align 8
  %17 = bitcast %"class.blink::AXObject"* %16 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %18 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %18, i64 126
  %20 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %19, align 8
  %21 = tail call %"class.blink::Document"* %20(%"class.blink::AXObject"* %16) #8
  %22 = icmp eq %"class.blink::Document"* %14, %21
  br i1 %22, label %23, label %52

23:                                               ; preds = %7
  %24 = tail call zeroext i1 @_ZNK5blink10AXPosition14IsTextPositionEv(%"class.blink::AXPosition"* %2) #8
  br i1 %24, label %25, label %37

25:                                               ; preds = %23
  %26 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %8, align 8
  %27 = tail call zeroext i1 @_ZNK5blink8AXObject17IsAtomicTextFieldEv(%"class.blink::AXObject"* %26) #8
  br i1 %27, label %28, label %37

28:                                               ; preds = %25
  %29 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %8, align 8
  %30 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %15, align 8
  %31 = icmp eq %"class.blink::AXObject"* %29, %30
  br i1 %31, label %32, label %52

32:                                               ; preds = %28
  %33 = tail call zeroext i1 @_ZNK5blink10AXPosition14IsTextPositionEv(%"class.blink::AXPosition"* %5) #8
  br i1 %33, label %34, label %52

34:                                               ; preds = %32
  %35 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %15, align 8
  %36 = tail call zeroext i1 @_ZNK5blink8AXObject17IsAtomicTextFieldEv(%"class.blink::AXObject"* %35) #8
  br i1 %36, label %37, label %52

37:                                               ; preds = %34, %25, %23
  %38 = tail call zeroext i1 @_ZNK5blink10AXPosition14IsTextPositionEv(%"class.blink::AXPosition"* %5) #8
  br i1 %38, label %39, label %51

39:                                               ; preds = %37
  %40 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %15, align 8
  %41 = tail call zeroext i1 @_ZNK5blink8AXObject17IsAtomicTextFieldEv(%"class.blink::AXObject"* %40) #8
  br i1 %41, label %42, label %51

42:                                               ; preds = %39
  %43 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %8, align 8
  %44 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %15, align 8
  %45 = icmp eq %"class.blink::AXObject"* %43, %44
  br i1 %45, label %46, label %52

46:                                               ; preds = %42
  %47 = tail call zeroext i1 @_ZNK5blink10AXPosition14IsTextPositionEv(%"class.blink::AXPosition"* %2) #8
  br i1 %47, label %48, label %52

48:                                               ; preds = %46
  %49 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %8, align 8
  %50 = tail call zeroext i1 @_ZNK5blink8AXObject17IsAtomicTextFieldEv(%"class.blink::AXObject"* %49) #8
  br i1 %50, label %51, label %52

51:                                               ; preds = %48, %39, %37
  br label %52

52:                                               ; preds = %42, %46, %48, %28, %32, %34, %7, %1, %4, %51
  %53 = phi i1 [ true, %51 ], [ false, %4 ], [ false, %1 ], [ false, %7 ], [ false, %34 ], [ false, %32 ], [ false, %28 ], [ false, %48 ], [ false, %46 ], [ false, %42 ]
  ret i1 %53
}

declare zeroext i1 @_ZNK5blink10AXPosition14IsTextPositionEv(%"class.blink::AXPosition"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink8AXObject17IsAtomicTextFieldEv(%"class.blink::AXObject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11AXSelection11AsSelectionENS_19AXSelectionBehaviorE(%"class.blink::SelectionTemplate"* noalias sret, %"class.blink::AXSelection"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PositionWithAffinityTemplate", align 8
  %5 = alloca %"class.blink::PositionWithAffinityTemplate", align 8
  %6 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %7 = tail call zeroext i1 @_ZNK5blink11AXSelection7IsValidEv(%"class.blink::AXSelection"* %1)
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  tail call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::SelectionTemplate"* %0) #8
  br label %42

9:                                                ; preds = %3
  switch i32 %2, label %24 [
    i32 0, label %10
    i32 1, label %17
  ]

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %1, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %1, i64 0, i32 1
  %13 = tail call zeroext i1 @_ZN5blinkltERKNS_10AXPositionES2_(%"class.blink::AXPosition"* dereferenceable(24) %11, %"class.blink::AXPosition"* dereferenceable(24) %12) #8
  br i1 %13, label %24, label %14

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZN5blinkgtERKNS_10AXPositionES2_(%"class.blink::AXPosition"* dereferenceable(24) %11, %"class.blink::AXPosition"* dereferenceable(24) %12) #8
  %16 = zext i1 %15 to i32
  br label %24

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %1, i64 0, i32 0
  %19 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %1, i64 0, i32 1
  %20 = tail call zeroext i1 @_ZN5blinkltERKNS_10AXPositionES2_(%"class.blink::AXPosition"* dereferenceable(24) %18, %"class.blink::AXPosition"* dereferenceable(24) %19) #8
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = tail call zeroext i1 @_ZN5blinkgtERKNS_10AXPositionES2_(%"class.blink::AXPosition"* dereferenceable(24) %18, %"class.blink::AXPosition"* dereferenceable(24) %19) #8
  %23 = zext i1 %22 to i32
  br label %24

24:                                               ; preds = %21, %14, %17, %10, %9
  %25 = phi i32 [ 0, %9 ], [ 1, %10 ], [ 0, %14 ], [ 0, %17 ], [ %23, %21 ]
  %26 = phi i32 [ 0, %9 ], [ 0, %10 ], [ %16, %14 ], [ 1, %17 ], [ 0, %21 ]
  %27 = bitcast %"class.blink::PositionWithAffinityTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %1, i64 0, i32 0
  %29 = bitcast %"class.blink::PositionWithAffinityTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink10AXPosition22ToPositionWithAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::PositionWithAffinityTemplate"* nonnull sret %4, %"class.blink::AXPosition"* %28, i32 %25) #8
  %30 = bitcast %"class.blink::PositionWithAffinityTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %1, i64 0, i32 1
  %32 = bitcast %"class.blink::PositionWithAffinityTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink10AXPosition22ToPositionWithAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::PositionWithAffinityTemplate"* nonnull sret %5, %"class.blink::AXPosition"* %31, i32 %26) #8
  %33 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 40, i1 false)
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %6) #8
  %34 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %4, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %5, i64 0, i32 0
  %36 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder16SetBaseAndExtentERKNS_16PositionTemplateIS3_EES9_(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %34, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %35) #8
  %37 = call zeroext i1 @_ZNK5blink10AXPosition14IsTextPositionEv(%"class.blink::AXPosition"* %31) #8
  br i1 %37, label %38, label %41

38:                                               ; preds = %24
  %39 = call i32 @_ZNK5blink10AXPosition8AffinityEv(%"class.blink::AXPosition"* %31) #8
  %40 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder11SetAffinityENS_12TextAffinityE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %6, i32 %39) #8
  br label %41

41:                                               ; preds = %38, %24
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* sret %0, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #8
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #8
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8
  br label %42

42:                                               ; preds = %41, %8
  ret void
}

declare void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::SelectionTemplate"*) unnamed_addr #2

declare zeroext i1 @_ZN5blinkltERKNS_10AXPositionES2_(%"class.blink::AXPosition"* dereferenceable(24), %"class.blink::AXPosition"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blinkgtERKNS_10AXPositionES2_(%"class.blink::AXPosition"* dereferenceable(24), %"class.blink::AXPosition"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK5blink10AXPosition22ToPositionWithAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::AXPosition"*, i32) local_unnamed_addr #2

declare void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) unnamed_addr #2

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder16SetBaseAndExtentERKNS_16PositionTemplateIS3_EES9_(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder11SetAffinityENS_12TextAffinityE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink10AXPosition8AffinityEv(%"class.blink::AXPosition"*) local_unnamed_addr #2

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* sret, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11AXSelection26UpdateSelectionIfNecessaryEv(%"class.blink::AXSelection"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %2, align 8
  %4 = bitcast %"class.blink::AXObject"* %3 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %5 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %5, i64 126
  %7 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %6, align 8
  %8 = tail call %"class.blink::Document"* %7(%"class.blink::AXObject"* %3) #8
  %9 = icmp eq %"class.blink::Document"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* nonnull %8) #8
  %12 = icmp eq %"class.blink::LocalFrameView"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @_ZNK5blink14LocalFrameView13LayoutPendingEv(%"class.blink::LocalFrameView"* nonnull %11) #8
  br i1 %14, label %15, label %16

15:                                               ; preds = %13
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* nonnull %8, i32 21) #8
  br label %16

16:                                               ; preds = %15, %10, %13, %1
  ret void
}

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14LocalFrameView13LayoutPendingEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #2

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11AXSelection6SelectENS_19AXSelectionBehaviorE(%"class.blink::AXSelection"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::SelectionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::SelectionTemplate", align 8
  %7 = alloca %"class.blink::SetSelectionOptions::Builder", align 4
  %8 = alloca %"class.blink::SetSelectionOptions", align 4
  %9 = tail call zeroext i1 @_ZNK5blink11AXSelection7IsValidEv(%"class.blink::AXSelection"* %0)
  br i1 %9, label %10, label %112

10:                                               ; preds = %2
  %11 = tail call { i64, i64 } @_ZNK5blink11AXSelection22AsTextControlSelectionEv(%"class.blink::AXSelection"* %0)
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = trunc i64 %12 to i8
  %14 = extractvalue { i64, i64 } %11, 1
  %15 = icmp eq i8 %13, 0
  br i1 %15, label %46, label %16

16:                                               ; preds = %10
  %17 = lshr i64 %12, 32
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %19, align 8
  %21 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26GetAtomicTextFieldAncestorEi(%"class.blink::AXObject"* %20, i32 3) #8
  %22 = bitcast %"class.blink::AXObject"* %21 to %"class.blink::Node"* (%"class.blink::AXObject"*)***
  %23 = load %"class.blink::Node"* (%"class.blink::AXObject"*)**, %"class.blink::Node"* (%"class.blink::AXObject"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %23, i64 124
  %25 = load %"class.blink::Node"* (%"class.blink::AXObject"*)*, %"class.blink::Node"* (%"class.blink::AXObject"*)** %24, align 8
  %26 = tail call %"class.blink::Node"* %25(%"class.blink::AXObject"* %21) #8
  %27 = bitcast %"class.blink::Node"* %26 to %"class.blink::TextControlElement"*
  %28 = trunc i64 %14 to i32
  %29 = lshr i64 %14, 32
  %30 = trunc i64 %29 to i32
  %31 = tail call zeroext i1 @_ZN5blink18TextControlElement17SetSelectionRangeEjjNS_27TextFieldSelectionDirectionE(%"class.blink::TextControlElement"* %27, i32 %18, i32 %28, i32 %30) #8
  br i1 %31, label %32, label %112

32:                                               ; preds = %16
  %33 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kSelectE, align 8
  %34 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #8
  %35 = bitcast i8* %34 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %35, %"class.WTF::AtomicString"* dereferenceable(8) %33, i32 0, i32 1, i32 1) #8
  %36 = getelementptr inbounds i8, i8* %34, i64 -4
  %37 = bitcast i8* %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = or i16 %38, 1
  store atomic i16 %39, i16* %37 release, align 2
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 0
  tail call void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"* %35, %"class.blink::EventTarget"* %40) #8
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  tail call void @_ZN5blink8Document26EnqueueAnimationFrameEventEPNS_5EventE(%"class.blink::Document"* %44, %"class.blink::Event"* %35) #8
  %45 = bitcast %"class.blink::Node"* %26 to %"class.blink::Element"*
  tail call void @_ZN5blink7Element5focusEv(%"class.blink::Element"* %45) #8
  br label %112

46:                                               ; preds = %10
  %47 = bitcast %"class.blink::SelectionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 40, i1 false)
  call void @_ZNK5blink11AXSelection11AsSelectionENS_19AXSelectionBehaviorE(%"class.blink::SelectionTemplate"* nonnull sret %3, %"class.blink::AXSelection"* %0, i32 %1)
  %48 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #8
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE4BaseEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::SelectionTemplate"* nonnull %3) #8
  %49 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  %51 = icmp eq %"class.blink::Node"* %50, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #8
  br label %110

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %55, i64 0, i32 2, i32 0, i32 0
  %57 = load %"class.blink::Document"*, %"class.blink::Document"** %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #8
  %58 = icmp eq %"class.blink::Document"* %57, null
  br i1 %58, label %110, label %59

59:                                               ; preds = %53
  %60 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %57) #8
  %61 = icmp eq %"class.blink::LocalFrame"* %60, null
  br i1 %61, label %110, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %60, i64 0, i32 14, i32 0, i32 0
  %64 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %63, align 8
  %65 = call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %64) #8
  br i1 %65, label %66, label %110

66:                                               ; preds = %62
  %67 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #8
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE4BaseEv(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::SelectionTemplate"* nonnull %3) #8
  %68 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %5) #8
  %69 = icmp eq %"class.blink::Node"* %68, null
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #8
  br label %82

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 0, i32 0
  %73 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kSelectstartE, align 8
  %74 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #8
  %75 = bitcast i8* %74 to %"class.blink::Event"*
  call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %75, %"class.WTF::AtomicString"* dereferenceable(8) %73, i32 0, i32 0, i32 1) #8
  %76 = getelementptr inbounds i8, i8* %74, i64 -4
  %77 = bitcast i8* %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = or i16 %78, 1
  store atomic i16 %79, i16* %77 release, align 2
  %80 = call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %72, %"class.blink::Event"* dereferenceable(104) %75) #8
  %81 = icmp eq i32 %80, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #8
  br i1 %81, label %82, label %110

82:                                               ; preds = %70, %71
  %83 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %83, align 8
  %85 = bitcast %"class.blink::AXObject"* %84 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %86 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %85, align 8
  %87 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %86, i64 126
  %88 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %87, align 8
  %89 = call %"class.blink::Document"* %88(%"class.blink::AXObject"* %84) #8
  %90 = icmp eq %"class.blink::Document"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %82
  %92 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* nonnull %89) #8
  %93 = icmp eq %"class.blink::LocalFrameView"* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %91
  %95 = call zeroext i1 @_ZNK5blink14LocalFrameView13LayoutPendingEv(%"class.blink::LocalFrameView"* nonnull %92) #8
  br i1 %95, label %96, label %97

96:                                               ; preds = %94
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* nonnull %89, i32 21) #8
  br label %97

97:                                               ; preds = %82, %91, %94, %96
  %98 = call zeroext i1 @_ZNK5blink11AXSelection7IsValidEv(%"class.blink::AXSelection"* %0)
  br i1 %98, label %99, label %110

99:                                               ; preds = %97
  %100 = call zeroext i1 @_ZNK5blink14FrameSelection11IsAvailableEv(%"class.blink::FrameSelection"* %64) #8
  br i1 %100, label %101, label %110

101:                                              ; preds = %99
  %102 = bitcast %"class.blink::SelectionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %102) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 -86, i64 40, i1 false)
  call void @_ZNK5blink11AXSelection11AsSelectionENS_19AXSelectionBehaviorE(%"class.blink::SelectionTemplate"* nonnull sret %6, %"class.blink::AXSelection"* %0, i32 %1)
  %103 = bitcast %"class.blink::SetSelectionOptions::Builder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #8
  %104 = bitcast %"class.blink::SetSelectionOptions::Builder"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %104, i8 -86, i64 24, i1 false)
  call void @_ZN5blink19SetSelectionOptions7BuilderC1Ev(%"class.blink::SetSelectionOptions::Builder"* nonnull %7) #8
  %105 = call dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder16SetIsDirectionalEb(%"class.blink::SetSelectionOptions::Builder"* nonnull %7, i1 zeroext true) #8
  %106 = call dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder20SetShouldCloseTypingEb(%"class.blink::SetSelectionOptions::Builder"* %105, i1 zeroext true) #8
  %107 = call dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder25SetShouldClearTypingStyleEb(%"class.blink::SetSelectionOptions::Builder"* %106, i1 zeroext true) #8
  %108 = call dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder17SetSetSelectionByENS_14SetSelectionByE(%"class.blink::SetSelectionOptions::Builder"* %107, i32 1) #8
  %109 = bitcast %"class.blink::SetSelectionOptions"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #8
  call void @_ZNK5blink19SetSelectionOptions7Builder5BuildEv(%"class.blink::SetSelectionOptions"* nonnull sret %8, %"class.blink::SetSelectionOptions::Builder"* nonnull %7) #8
  call void @_ZN5blink14FrameSelection28SetSelectionForAccessibilityERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_19SetSelectionOptionsE(%"class.blink::FrameSelection"* %64, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %6, %"class.blink::SetSelectionOptions"* nonnull dereferenceable(24) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %102) #8
  br label %110

110:                                              ; preds = %52, %59, %99, %97, %71, %62, %101, %53
  %111 = phi i1 [ false, %53 ], [ false, %59 ], [ true, %101 ], [ false, %62 ], [ false, %71 ], [ false, %97 ], [ false, %99 ], [ false, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #8
  br label %112

112:                                              ; preds = %110, %16, %32, %2
  %113 = phi i1 [ false, %2 ], [ %111, %110 ], [ true, %32 ], [ false, %16 ]
  ret i1 %113
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink11AXSelection22AsTextControlSelectionEv(%"class.blink::AXSelection"*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink11AXSelection7IsValidEv(%"class.blink::AXSelection"* %0)
  br i1 %2, label %3, label %26

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5blink10AXPosition14IsTextPositionEv(%"class.blink::AXPosition"* %4) #8
  br i1 %5, label %6, label %26

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  %8 = tail call zeroext i1 @_ZNK5blink10AXPosition14IsTextPositionEv(%"class.blink::AXPosition"* %7) #8
  br i1 %8, label %9, label %26

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %7, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %12, align 8
  %14 = icmp eq %"class.blink::AXObject"* %11, %13
  br i1 %14, label %15, label %26

15:                                               ; preds = %9
  %16 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject26GetAtomicTextFieldAncestorEi(%"class.blink::AXObject"* %11, i32 3) #8
  %17 = icmp eq %"class.blink::AXObject"* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %15
  %19 = tail call zeroext i1 @_ZN5blinkleERKNS_10AXPositionES2_(%"class.blink::AXPosition"* dereferenceable(24) %4, %"class.blink::AXPosition"* dereferenceable(24) %7) #8
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = tail call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* %4) #8
  %22 = tail call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* %7) #8
  br label %26

23:                                               ; preds = %18
  %24 = tail call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* %7) #8
  %25 = tail call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* %4) #8
  br label %26

26:                                               ; preds = %15, %1, %3, %6, %9, %20, %23
  %27 = phi i64 [ 1, %20 ], [ 1, %23 ], [ 0, %9 ], [ 0, %6 ], [ 0, %3 ], [ 0, %1 ], [ 0, %15 ]
  %28 = phi i32 [ %21, %20 ], [ %24, %23 ], [ undef, %9 ], [ undef, %6 ], [ undef, %3 ], [ undef, %1 ], [ undef, %15 ]
  %29 = phi i32 [ %22, %20 ], [ %25, %23 ], [ undef, %9 ], [ undef, %6 ], [ undef, %3 ], [ undef, %1 ], [ undef, %15 ]
  %30 = phi i64 [ 4294967296, %20 ], [ 8589934592, %23 ], [ 0, %9 ], [ 0, %6 ], [ 0, %3 ], [ 0, %1 ], [ 0, %15 ]
  %31 = zext i32 %28 to i64
  %32 = shl nuw i64 %31, 32
  %33 = or i64 %32, %27
  %34 = insertvalue { i64, i64 } undef, i64 %33, 0
  %35 = zext i32 %29 to i64
  %36 = or i64 %30, %35
  %37 = insertvalue { i64, i64 } %34, i64 %36, 1
  ret { i64, i64 } %37
}

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject26GetAtomicTextFieldAncestorEi(%"class.blink::AXObject"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink18TextControlElement17SetSelectionRangeEjjNS_27TextFieldSelectionDirectionE(%"class.blink::TextControlElement"*, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN5blink7Element5focusEv(%"class.blink::Element"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink19SetSelectionOptions7BuilderC1Ev(%"class.blink::SetSelectionOptions::Builder"*) unnamed_addr #2

declare dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder16SetIsDirectionalEb(%"class.blink::SetSelectionOptions::Builder"*, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder20SetShouldCloseTypingEb(%"class.blink::SetSelectionOptions::Builder"*, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder25SetShouldClearTypingStyleEb(%"class.blink::SetSelectionOptions::Builder"*, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::SetSelectionOptions::Builder"* @_ZN5blink19SetSelectionOptions7Builder17SetSetSelectionByENS_14SetSelectionByE(%"class.blink::SetSelectionOptions::Builder"*, i32) local_unnamed_addr #2

declare void @_ZN5blink14FrameSelection28SetSelectionForAccessibilityERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_19SetSelectionOptionsE(%"class.blink::FrameSelection"*, %"class.blink::SelectionTemplate"* dereferenceable(40), %"class.blink::SetSelectionOptions"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK5blink19SetSelectionOptions7Builder5BuildEv(%"class.blink::SetSelectionOptions"* sret, %"class.blink::SetSelectionOptions::Builder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink11AXSelection8ToStringEv(%"class.blink::AXSelection"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = alloca %"class.WTF::StringAppend.1493", align 8
  %5 = alloca %"class.blink::AXPosition", align 8
  %6 = alloca %"class.blink::AXPosition", align 8
  %7 = tail call zeroext i1 @_ZNK5blink11AXSelection7IsValidEv(%"class.blink::AXSelection"* %0)
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i64 19) #8
  br label %307

9:                                                ; preds = %1
  %10 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  %11 = bitcast %"class.WTF::StringAppend.1493"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8
  %12 = bitcast %"class.blink::AXPosition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8
  %13 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0
  %14 = bitcast %"class.blink::AXSelection"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::AXPosition"* %5 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %17, align 8
  switch i64 %15, label %18 [
    i64 0, label %44
    i64 -1, label %44
  ]

18:                                               ; preds = %9
  %19 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %20 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %19, i64 0, i32 1
  %21 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %20) #8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %25, !prof !2

23:                                               ; preds = %18
  %24 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %20, i8* %24) #8
  br label %25

25:                                               ; preds = %23, %18
  %26 = phi i8* [ %24, %23 ], [ %21, %18 ]
  %27 = bitcast i8* %26 to %"class.blink::ThreadState"**
  %28 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %28, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8
  %33 = icmp eq %"class.blink::PersistentNode"* %32, null
  br i1 %33, label %34, label %37, !prof !2

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %30, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %35) #8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8
  br label %37

37:                                               ; preds = %34, %25
  %38 = phi %"class.blink::PersistentNode"* [ %36, %34 ], [ %32, %25 ]
  %39 = bitcast %"class.blink::PersistentNode"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.blink::PersistentRegion"* %30 to i64*
  store i64 %40, i64* %41, align 8
  %42 = bitcast %"class.blink::PersistentNode"* %38 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %13, %"class.blink::PersistentBase"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %38, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %43, align 8
  store %"class.blink::PersistentNode"* %38, %"class.blink::PersistentNode"** %17, align 8
  br label %44

44:                                               ; preds = %9, %9, %37
  %45 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 1
  %46 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0, i32 1
  %47 = bitcast i32* %46 to i64*
  %48 = bitcast i32* %45 to i64*
  %49 = load i64, i64* %47, align 8
  store i64 %49, i64* %48, align 8
  %50 = call %"class.WTF::StringImpl"* @_ZNK5blink10AXPosition8ToStringEv(%"class.blink::AXPosition"* nonnull %5) #8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %127, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #8
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %59
  call void @llvm.trap() #8
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %67, %52
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = load atomic i32, i32* %53 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %84

74:                                               ; preds = %69
  %75 = zext i32 %70 to i33
  %76 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #8
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !2

81:                                               ; preds = %74
  call void @llvm.trap() #8
  unreachable

82:                                               ; preds = %74
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %57, align 4
  br label %84

84:                                               ; preds = %82, %69
  %85 = phi i32 [ %83, %82 ], [ %70, %69 ]
  %86 = load atomic i32, i32* %53 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %84
  %90 = add i32 %85, -1
  store i32 %90, i32* %57, align 4
  br label %91

91:                                               ; preds = %89, %84
  %92 = phi i32 [ %90, %89 ], [ %85, %84 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #8
  br label %95

95:                                               ; preds = %91, %94
  %96 = load atomic i32, i32* %53 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %110

99:                                               ; preds = %95
  %100 = load i32, i32* %57, align 4
  %101 = zext i32 %100 to i33
  %102 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %101, i33 1) #8
  %103 = extractvalue { i33, i1 } %102, 1
  %104 = extractvalue { i33, i1 } %102, 0
  %105 = icmp slt i33 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %108, !prof !2

107:                                              ; preds = %99
  call void @llvm.trap() #8
  unreachable

108:                                              ; preds = %99
  %109 = trunc i33 %104 to i32
  store i32 %109, i32* %57, align 4
  br label %110

110:                                              ; preds = %95, %108
  %111 = bitcast %"class.WTF::StringAppend.1493"* %4 to i64*
  store i64 ptrtoint ([18 x i8]* @.str.2 to i64), i64* %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %112, align 8
  %113 = load atomic i32, i32* %53 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %131

116:                                              ; preds = %110
  %117 = load i32, i32* %57, align 4
  %118 = zext i32 %117 to i33
  %119 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %118, i33 1) #8
  %120 = extractvalue { i33, i1 } %119, 1
  %121 = extractvalue { i33, i1 } %119, 0
  %122 = icmp slt i33 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %125, !prof !2

124:                                              ; preds = %116
  call void @llvm.trap() #8
  unreachable

125:                                              ; preds = %116
  %126 = trunc i33 %121 to i32
  store i32 %126, i32* %57, align 4
  br label %131

127:                                              ; preds = %44
  %128 = bitcast %"class.WTF::StringAppend.1493"* %4 to i64*
  store i64 ptrtoint ([18 x i8]* @.str.2 to i64), i64* %128, align 8
  %129 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %129, align 8
  %130 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %130, align 8
  br label %143

131:                                              ; preds = %125, %110
  %132 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %132, align 8
  %133 = load atomic i32, i32* %53 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = load i32, i32* %57, align 4
  br i1 %135, label %137, label %139

137:                                              ; preds = %131
  %138 = add i32 %136, -1
  store i32 %138, i32* %57, align 4
  br label %139

139:                                              ; preds = %137, %131
  %140 = phi i32 [ %138, %137 ], [ %136, %131 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #8
  br label %143

143:                                              ; preds = %127, %139, %142
  %144 = phi %"class.WTF::StringImpl"** [ %129, %127 ], [ %112, %139 ], [ %112, %142 ]
  %145 = bitcast %"class.blink::AXPosition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #8
  %146 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  %147 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 0, i32 0
  %148 = bitcast %"class.blink::AXPosition"* %146 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.blink::AXPosition"* %6 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %151, align 8
  switch i64 %149, label %152 [
    i64 0, label %178
    i64 -1, label %178
  ]

152:                                              ; preds = %143
  %153 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %154 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %153, i64 0, i32 1
  %155 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %154) #8
  %156 = icmp eq i8* %155, null
  br i1 %156, label %157, label %159, !prof !2

157:                                              ; preds = %152
  %158 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %154, i8* %158) #8
  br label %159

159:                                              ; preds = %157, %152
  %160 = phi i8* [ %158, %157 ], [ %155, %152 ]
  %161 = bitcast i8* %160 to %"class.blink::ThreadState"**
  %162 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %162, i64 0, i32 4, i32 0, i32 0, i32 0
  %164 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %164, i64 0, i32 0, i32 0
  %166 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %165, align 8
  %167 = icmp eq %"class.blink::PersistentNode"* %166, null
  br i1 %167, label %168, label %171, !prof !2

168:                                              ; preds = %159
  %169 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %164, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %169) #8
  %170 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %165, align 8
  br label %171

171:                                              ; preds = %168, %159
  %172 = phi %"class.blink::PersistentNode"* [ %170, %168 ], [ %166, %159 ]
  %173 = bitcast %"class.blink::PersistentNode"* %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.blink::PersistentRegion"* %164 to i64*
  store i64 %174, i64* %175, align 8
  %176 = bitcast %"class.blink::PersistentNode"* %172 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %147, %"class.blink::PersistentBase"** %176, align 8
  %177 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %172, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %177, align 8
  store %"class.blink::PersistentNode"* %172, %"class.blink::PersistentNode"** %151, align 8
  br label %178

178:                                              ; preds = %143, %143, %171
  %179 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 1
  %180 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1, i32 1
  %181 = bitcast i32* %180 to i64*
  %182 = bitcast i32* %179 to i64*
  %183 = load i64, i64* %181, align 8
  store i64 %183, i64* %182, align 8
  %184 = call %"class.WTF::StringImpl"* @_ZNK5blink10AXPosition8ToStringEv(%"class.blink::AXPosition"* nonnull %6) #8
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %3, %"class.WTF::StringAppend.1493"* nonnull dereferenceable(24) %4, %"class.WTF::StringImpl"* %184)
  %185 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %3)
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %186, align 8
  %187 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %178
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #8
  br label %203

203:                                              ; preds = %202, %199, %178
  %204 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #8
  br label %220

220:                                              ; preds = %203, %216, %219
  %221 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %151, align 8
  %222 = icmp eq %"class.blink::PersistentNode"* %221, null
  br i1 %222, label %242, label %223

223:                                              ; preds = %220
  %224 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %225 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %224, i64 0, i32 1
  %226 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %225) #8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %228, label %230, !prof !2

228:                                              ; preds = %223
  %229 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %225, i8* %229) #8
  br label %230

230:                                              ; preds = %228, %223
  %231 = phi i8* [ %229, %228 ], [ %226, %223 ]
  %232 = bitcast i8* %231 to %"class.blink::ThreadState"**
  %233 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %232, align 8
  %234 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %233, i64 0, i32 4, i32 0, i32 0, i32 0
  %235 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %234, align 8
  %236 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %151, align 8
  %237 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %235, i64 0, i32 0, i32 0
  %238 = bitcast %"class.blink::PersistentRegion"* %235 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = bitcast %"class.blink::PersistentNode"* %236 to i64*
  store i64 %239, i64* %240, align 8
  %241 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %236, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %241, align 8
  store %"class.blink::PersistentNode"* %236, %"class.blink::PersistentNode"** %237, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %151, align 8
  br label %242

242:                                              ; preds = %220, %230
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #8
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %242
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #8
  br label %258

258:                                              ; preds = %242, %254, %257
  br i1 %51, label %284, label %259

259:                                              ; preds = %258
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  br i1 %263, label %266, label %268

266:                                              ; preds = %259
  %267 = add i32 %265, -1
  store i32 %267, i32* %264, align 4
  br label %268

268:                                              ; preds = %266, %259
  %269 = phi i32 [ %267, %266 ], [ %265, %259 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %273

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #8
  %272 = load i32, i32* %264, align 4
  br label %273

273:                                              ; preds = %268, %271
  %274 = phi i32 [ %269, %268 ], [ %272, %271 ]
  %275 = load atomic i32, i32* %260 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %280

278:                                              ; preds = %273
  %279 = add i32 %274, -1
  store i32 %279, i32* %264, align 4
  br label %280

280:                                              ; preds = %278, %273
  %281 = phi i32 [ %279, %278 ], [ %274, %273 ]
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #8
  br label %284

284:                                              ; preds = %258, %280, %283
  %285 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %286 = icmp eq %"class.blink::PersistentNode"* %285, null
  br i1 %286, label %306, label %287

287:                                              ; preds = %284
  %288 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %289 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %288, i64 0, i32 1
  %290 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %289) #8
  %291 = icmp eq i8* %290, null
  br i1 %291, label %292, label %294, !prof !2

292:                                              ; preds = %287
  %293 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %289, i8* %293) #8
  br label %294

294:                                              ; preds = %292, %287
  %295 = phi i8* [ %293, %292 ], [ %290, %287 ]
  %296 = bitcast i8* %295 to %"class.blink::ThreadState"**
  %297 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %296, align 8
  %298 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %297, i64 0, i32 4, i32 0, i32 0, i32 0
  %299 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %298, align 8
  %300 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %301 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %299, i64 0, i32 0, i32 0
  %302 = bitcast %"class.blink::PersistentRegion"* %299 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = bitcast %"class.blink::PersistentNode"* %300 to i64*
  store i64 %303, i64* %304, align 8
  %305 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %300, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %305, align 8
  store %"class.blink::PersistentNode"* %300, %"class.blink::PersistentNode"** %301, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %17, align 8
  br label %306

306:                                              ; preds = %284, %294
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  br label %307

307:                                              ; preds = %306, %8
  %308 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %308, align 8
  ret %"class.WTF::StringImpl"* %309
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.1493"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.1493", align 8
  %5 = bitcast %"class.WTF::StringAppend.1493"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.1493"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #8
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #8
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #8
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #8
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringAppend.1493"* nonnull byval(%"class.WTF::StringAppend.1493") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringAppend.1493"* nonnull byval(%"class.WTF::StringAppend.1493") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink10AXPosition8ToStringEv(%"class.blink::AXPosition"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1588", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1588", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1591", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1591", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %11 = bitcast %"class.WTF::StringTypeAdapter.1591"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %13 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1591"* nonnull %5, i8* %13) #8
  %14 = bitcast %"class.WTF::StringTypeAdapter.1591"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #8
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1591"* nonnull %4, i8* %16) #8
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %21 = select i1 %19, %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %18
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  br i1 %25, label %92, label %26

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %9, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %9
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %92, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #8
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter.1588"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1588", %"class.WTF::StringTypeAdapter.1588"* %3, i64 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1588", %"class.WTF::StringTypeAdapter.1588"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false) #8
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %33
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %52

46:                                               ; preds = %33
  %47 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %51 = bitcast %"class.WTF::StringImpl"* %50 to i8*
  br label %52

52:                                               ; preds = %44, %46
  %53 = phi i8* [ null, %44 ], [ %51, %46 ]
  %54 = phi i64 [ %45, %44 ], [ %47, %46 ]
  %55 = phi i32 [ 0, %44 ], [ %49, %46 ]
  %56 = bitcast %"class.WTF::StringTypeAdapter.1588"* %3 to i64*
  store i64 %54, i64* %56, align 8
  store i8* %53, i8** %40, align 8
  store i32 %55, i32* %41, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1493"* %38, i8* %37) #8
  %57 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1588", %"class.WTF::StringTypeAdapter.1588"* %3, i64 0, i32 0
  %58 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1493"* %38) #8
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %37, i64 %59
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1589"* nonnull %57, i8* %60) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #8
  %61 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %61, label %151, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %79

69:                                               ; preds = %62
  %70 = zext i32 %68 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #8
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %69
  call void @llvm.trap() #8
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %67, align 4
  br label %79

79:                                               ; preds = %62, %77
  %80 = phi i32 [ %78, %77 ], [ %68, %62 ]
  %81 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %82 = load atomic i32, i32* %63 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %87 = add i32 %80, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %79
  %89 = phi i32 [ %87, %85 ], [ %80, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %151

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #8
  br label %151

92:                                               ; preds = %26, %1
  %93 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %94 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %95 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %94, i16** nonnull dereferenceable(8) %7) #8
  %96 = load i16*, i16** %7, align 8
  %97 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %98 = bitcast %"class.WTF::StringTypeAdapter.1588"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #8
  %99 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1588", %"class.WTF::StringTypeAdapter.1588"* %2, i64 0, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1588", %"class.WTF::StringTypeAdapter.1588"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 24, i1 false) #8
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %92
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %111

105:                                              ; preds = %92
  %106 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  %110 = bitcast %"class.WTF::StringImpl"* %109 to i8*
  br label %111

111:                                              ; preds = %103, %105
  %112 = phi i8* [ null, %103 ], [ %110, %105 ]
  %113 = phi i64 [ %104, %103 ], [ %106, %105 ]
  %114 = phi i32 [ 0, %103 ], [ %108, %105 ]
  %115 = bitcast %"class.WTF::StringTypeAdapter.1588"* %2 to i64*
  store i64 %113, i64* %115, align 8
  store i8* %112, i8** %99, align 8
  store i32 %114, i32* %100, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1493"* %97, i16* %96) #8
  %116 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1588", %"class.WTF::StringTypeAdapter.1588"* %2, i64 0, i32 0
  %117 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1493"* %97) #8
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i16, i16* %96, i64 %118
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1589"* nonnull %116, i16* %119) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #8
  %120 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %120, label %151, label %121

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %138

128:                                              ; preds = %121
  %129 = zext i32 %127 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #8
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %128
  call void @llvm.trap() #8
  unreachable

136:                                              ; preds = %128
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %126, align 4
  br label %138

138:                                              ; preds = %121, %136
  %139 = phi i32 [ %137, %136 ], [ %127, %121 ]
  %140 = ptrtoint %"class.WTF::StringImpl"* %95 to i64
  %141 = load atomic i32, i32* %122 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %146 = add i32 %139, -1
  store i32 %146, i32* %145, align 4
  br label %147

147:                                              ; preds = %144, %138
  %148 = phi i32 [ %146, %144 ], [ %139, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #8
  br label %151

151:                                              ; preds = %150, %147, %111, %91, %88, %52
  %152 = phi i8* [ %34, %52 ], [ %34, %88 ], [ %34, %91 ], [ %93, %111 ], [ %93, %147 ], [ %93, %150 ]
  %153 = phi i64 [ 0, %52 ], [ %81, %88 ], [ %81, %91 ], [ 0, %111 ], [ %140, %147 ], [ %140, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #8
  %154 = inttoptr i64 %153 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %154
}

declare zeroext i1 @_ZN5blinkleERKNS_10AXPositionES2_(%"class.blink::AXPosition"* dereferenceable(24), %"class.blink::AXPosition"* dereferenceable(24)) local_unnamed_addr #2

declare i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blinkeqERKNS_11AXSelectionES2_(%"class.blink::AXSelection"* nocapture readonly dereferenceable(48), %"class.blink::AXSelection"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 {
  %3 = alloca %"class.blink::AXPosition", align 8
  %4 = alloca %"class.blink::AXPosition", align 8
  %5 = alloca %"class.blink::AXPosition", align 8
  %6 = alloca %"class.blink::AXPosition", align 8
  %7 = bitcast %"class.blink::AXPosition"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %3, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::AXSelection"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::AXPosition"* %3 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %3, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %12, align 8
  switch i64 %10, label %13 [
    i64 0, label %39
    i64 -1, label %39
  ]

13:                                               ; preds = %2
  %14 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %15 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %14, i64 0, i32 1
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %13
  %19 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %15, i8* %19) #8
  br label %20

20:                                               ; preds = %18, %13
  %21 = phi i8* [ %19, %18 ], [ %16, %13 ]
  %22 = bitcast i8* %21 to %"class.blink::ThreadState"**
  %23 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %23, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %25, i64 0, i32 0, i32 0
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %26, align 8
  %28 = icmp eq %"class.blink::PersistentNode"* %27, null
  br i1 %28, label %29, label %32, !prof !2

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %25, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %30) #8
  %31 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %26, align 8
  br label %32

32:                                               ; preds = %29, %20
  %33 = phi %"class.blink::PersistentNode"* [ %31, %29 ], [ %27, %20 ]
  %34 = bitcast %"class.blink::PersistentNode"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.blink::PersistentRegion"* %25 to i64*
  store i64 %35, i64* %36, align 8
  %37 = bitcast %"class.blink::PersistentNode"* %33 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %8, %"class.blink::PersistentBase"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %33, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %38, align 8
  store %"class.blink::PersistentNode"* %33, %"class.blink::PersistentNode"** %12, align 8
  br label %39

39:                                               ; preds = %2, %2, %32
  %40 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %3, i64 0, i32 1
  %41 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0, i32 1
  %42 = bitcast i32* %41 to i64*
  %43 = bitcast i32* %40 to i64*
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  %45 = bitcast %"class.blink::AXPosition"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %4, i64 0, i32 0, i32 0
  %47 = bitcast %"class.blink::AXSelection"* %1 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.blink::AXPosition"* %4 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %4, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %50, align 8
  switch i64 %48, label %51 [
    i64 0, label %77
    i64 -1, label %77
  ]

51:                                               ; preds = %39
  %52 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %53 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %52, i64 0, i32 1
  %54 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %53) #8
  %55 = icmp eq i8* %54, null
  br i1 %55, label %56, label %58, !prof !2

56:                                               ; preds = %51
  %57 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %53, i8* %57) #8
  br label %58

58:                                               ; preds = %56, %51
  %59 = phi i8* [ %57, %56 ], [ %54, %51 ]
  %60 = bitcast i8* %59 to %"class.blink::ThreadState"**
  %61 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %61, i64 0, i32 4, i32 0, i32 0, i32 0
  %63 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %64, align 8
  %66 = icmp eq %"class.blink::PersistentNode"* %65, null
  br i1 %66, label %67, label %70, !prof !2

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %63, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %68) #8
  %69 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %64, align 8
  br label %70

70:                                               ; preds = %67, %58
  %71 = phi %"class.blink::PersistentNode"* [ %69, %67 ], [ %65, %58 ]
  %72 = bitcast %"class.blink::PersistentNode"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.blink::PersistentRegion"* %63 to i64*
  store i64 %73, i64* %74, align 8
  %75 = bitcast %"class.blink::PersistentNode"* %71 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %46, %"class.blink::PersistentBase"** %75, align 8
  %76 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %71, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %76, align 8
  store %"class.blink::PersistentNode"* %71, %"class.blink::PersistentNode"** %50, align 8
  br label %77

77:                                               ; preds = %39, %39, %70
  %78 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %4, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %1, i64 0, i32 0, i32 1
  %80 = bitcast i32* %79 to i64*
  %81 = bitcast i32* %78 to i64*
  %82 = load i64, i64* %80, align 8
  store i64 %82, i64* %81, align 8
  %83 = call zeroext i1 @_ZN5blinkeqERKNS_10AXPositionES2_(%"class.blink::AXPosition"* nonnull dereferenceable(24) %3, %"class.blink::AXPosition"* nonnull dereferenceable(24) %4) #8
  br i1 %83, label %84, label %208

84:                                               ; preds = %77
  %85 = bitcast %"class.blink::AXPosition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #8
  %86 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1
  %87 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0
  %88 = bitcast %"class.blink::AXPosition"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::AXPosition"* %5 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %91, align 8
  switch i64 %89, label %92 [
    i64 0, label %118
    i64 -1, label %118
  ]

92:                                               ; preds = %84
  %93 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %94 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %93, i64 0, i32 1
  %95 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %94) #8
  %96 = icmp eq i8* %95, null
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %92
  %98 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %94, i8* %98) #8
  br label %99

99:                                               ; preds = %97, %92
  %100 = phi i8* [ %98, %97 ], [ %95, %92 ]
  %101 = bitcast i8* %100 to %"class.blink::ThreadState"**
  %102 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %102, i64 0, i32 4, i32 0, i32 0, i32 0
  %104 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %105, align 8
  %107 = icmp eq %"class.blink::PersistentNode"* %106, null
  br i1 %107, label %108, label %111, !prof !2

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %104, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %109) #8
  %110 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %105, align 8
  br label %111

111:                                              ; preds = %108, %99
  %112 = phi %"class.blink::PersistentNode"* [ %110, %108 ], [ %106, %99 ]
  %113 = bitcast %"class.blink::PersistentNode"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.blink::PersistentRegion"* %104 to i64*
  store i64 %114, i64* %115, align 8
  %116 = bitcast %"class.blink::PersistentNode"* %112 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %87, %"class.blink::PersistentBase"** %116, align 8
  %117 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %112, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %117, align 8
  store %"class.blink::PersistentNode"* %112, %"class.blink::PersistentNode"** %91, align 8
  br label %118

118:                                              ; preds = %84, %84, %111
  %119 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %5, i64 0, i32 1
  %120 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1, i32 1
  %121 = bitcast i32* %120 to i64*
  %122 = bitcast i32* %119 to i64*
  %123 = load i64, i64* %121, align 8
  store i64 %123, i64* %122, align 8
  %124 = bitcast %"class.blink::AXPosition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #8
  %125 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %1, i64 0, i32 1
  %126 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 0, i32 0
  %127 = bitcast %"class.blink::AXPosition"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.blink::AXPosition"* %6 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %130, align 8
  switch i64 %128, label %131 [
    i64 0, label %157
    i64 -1, label %157
  ]

131:                                              ; preds = %118
  %132 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %133 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %132, i64 0, i32 1
  %134 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %133) #8
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %138, !prof !2

136:                                              ; preds = %131
  %137 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %133, i8* %137) #8
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i8* [ %137, %136 ], [ %134, %131 ]
  %140 = bitcast i8* %139 to %"class.blink::ThreadState"**
  %141 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 4, i32 0, i32 0, i32 0
  %143 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %144, align 8
  %146 = icmp eq %"class.blink::PersistentNode"* %145, null
  br i1 %146, label %147, label %150, !prof !2

147:                                              ; preds = %138
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %143, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %148) #8
  %149 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %144, align 8
  br label %150

150:                                              ; preds = %147, %138
  %151 = phi %"class.blink::PersistentNode"* [ %149, %147 ], [ %145, %138 ]
  %152 = bitcast %"class.blink::PersistentNode"* %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.blink::PersistentRegion"* %143 to i64*
  store i64 %153, i64* %154, align 8
  %155 = bitcast %"class.blink::PersistentNode"* %151 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %126, %"class.blink::PersistentBase"** %155, align 8
  %156 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %151, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %156, align 8
  store %"class.blink::PersistentNode"* %151, %"class.blink::PersistentNode"** %130, align 8
  br label %157

157:                                              ; preds = %150, %118, %118
  %158 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %6, i64 0, i32 1
  %159 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %1, i64 0, i32 1, i32 1
  %160 = bitcast i32* %159 to i64*
  %161 = bitcast i32* %158 to i64*
  %162 = load i64, i64* %160, align 8
  store i64 %162, i64* %161, align 8
  %163 = call zeroext i1 @_ZN5blinkeqERKNS_10AXPositionES2_(%"class.blink::AXPosition"* nonnull dereferenceable(24) %5, %"class.blink::AXPosition"* nonnull dereferenceable(24) %6) #8
  %164 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %130, align 8
  %165 = icmp eq %"class.blink::PersistentNode"* %164, null
  br i1 %165, label %185, label %166

166:                                              ; preds = %157
  %167 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %168 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %167, i64 0, i32 1
  %169 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %168) #8
  %170 = icmp eq i8* %169, null
  br i1 %170, label %171, label %173, !prof !2

171:                                              ; preds = %166
  %172 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %168, i8* %172) #8
  br label %173

173:                                              ; preds = %171, %166
  %174 = phi i8* [ %172, %171 ], [ %169, %166 ]
  %175 = bitcast i8* %174 to %"class.blink::ThreadState"**
  %176 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %176, i64 0, i32 4, i32 0, i32 0, i32 0
  %178 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %177, align 8
  %179 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %130, align 8
  %180 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %178, i64 0, i32 0, i32 0
  %181 = bitcast %"class.blink::PersistentRegion"* %178 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = bitcast %"class.blink::PersistentNode"* %179 to i64*
  store i64 %182, i64* %183, align 8
  %184 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %179, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %184, align 8
  store %"class.blink::PersistentNode"* %179, %"class.blink::PersistentNode"** %180, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %130, align 8
  br label %185

185:                                              ; preds = %157, %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #8
  %186 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %91, align 8
  %187 = icmp eq %"class.blink::PersistentNode"* %186, null
  br i1 %187, label %207, label %188

188:                                              ; preds = %185
  %189 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %190 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %189, i64 0, i32 1
  %191 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %190) #8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %193, label %195, !prof !2

193:                                              ; preds = %188
  %194 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %190, i8* %194) #8
  br label %195

195:                                              ; preds = %193, %188
  %196 = phi i8* [ %194, %193 ], [ %191, %188 ]
  %197 = bitcast i8* %196 to %"class.blink::ThreadState"**
  %198 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %198, i64 0, i32 4, i32 0, i32 0, i32 0
  %200 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %199, align 8
  %201 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %91, align 8
  %202 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %200, i64 0, i32 0, i32 0
  %203 = bitcast %"class.blink::PersistentRegion"* %200 to i64*
  %204 = load i64, i64* %203, align 8
  %205 = bitcast %"class.blink::PersistentNode"* %201 to i64*
  store i64 %204, i64* %205, align 8
  %206 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %201, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %206, align 8
  store %"class.blink::PersistentNode"* %201, %"class.blink::PersistentNode"** %202, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %91, align 8
  br label %207

207:                                              ; preds = %185, %195
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #8
  br label %208

208:                                              ; preds = %77, %207
  %209 = phi i1 [ %163, %207 ], [ false, %77 ]
  %210 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %50, align 8
  %211 = icmp eq %"class.blink::PersistentNode"* %210, null
  br i1 %211, label %231, label %212

212:                                              ; preds = %208
  %213 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %214 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %213, i64 0, i32 1
  %215 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %214) #8
  %216 = icmp eq i8* %215, null
  br i1 %216, label %217, label %219, !prof !2

217:                                              ; preds = %212
  %218 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %214, i8* %218) #8
  br label %219

219:                                              ; preds = %217, %212
  %220 = phi i8* [ %218, %217 ], [ %215, %212 ]
  %221 = bitcast i8* %220 to %"class.blink::ThreadState"**
  %222 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %221, align 8
  %223 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %222, i64 0, i32 4, i32 0, i32 0, i32 0
  %224 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %223, align 8
  %225 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %50, align 8
  %226 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %224, i64 0, i32 0, i32 0
  %227 = bitcast %"class.blink::PersistentRegion"* %224 to i64*
  %228 = load i64, i64* %227, align 8
  %229 = bitcast %"class.blink::PersistentNode"* %225 to i64*
  store i64 %228, i64* %229, align 8
  %230 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %225, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %230, align 8
  store %"class.blink::PersistentNode"* %225, %"class.blink::PersistentNode"** %226, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %50, align 8
  br label %231

231:                                              ; preds = %208, %219
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #8
  %232 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %12, align 8
  %233 = icmp eq %"class.blink::PersistentNode"* %232, null
  br i1 %233, label %253, label %234

234:                                              ; preds = %231
  %235 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %236 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %235, i64 0, i32 1
  %237 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %236) #8
  %238 = icmp eq i8* %237, null
  br i1 %238, label %239, label %241, !prof !2

239:                                              ; preds = %234
  %240 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %236, i8* %240) #8
  br label %241

241:                                              ; preds = %239, %234
  %242 = phi i8* [ %240, %239 ], [ %237, %234 ]
  %243 = bitcast i8* %242 to %"class.blink::ThreadState"**
  %244 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %243, align 8
  %245 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %244, i64 0, i32 4, i32 0, i32 0, i32 0
  %246 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %245, align 8
  %247 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %12, align 8
  %248 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %246, i64 0, i32 0, i32 0
  %249 = bitcast %"class.blink::PersistentRegion"* %246 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.blink::PersistentNode"* %247 to i64*
  store i64 %250, i64* %251, align 8
  %252 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %247, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %252, align 8
  store %"class.blink::PersistentNode"* %247, %"class.blink::PersistentNode"** %248, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %12, align 8
  br label %253

253:                                              ; preds = %231, %241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret i1 %209
}

declare zeroext i1 @_ZN5blinkeqERKNS_10AXPositionES2_(%"class.blink::AXPosition"* dereferenceable(24), %"class.blink::AXPosition"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blinkneERKNS_11AXSelectionES2_(%"class.blink::AXSelection"* nocapture readonly dereferenceable(48), %"class.blink::AXSelection"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_ZN5blinkeqERKNS_11AXSelectionES2_(%"class.blink::AXSelection"* dereferenceable(48) %0, %"class.blink::AXSelection"* dereferenceable(48) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_11AXSelectionE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::AXSelection"* dereferenceable(48)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink11AXSelection8ToStringEv(%"class.blink::AXSelection"* %1)
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* nonnull %4, i32 0) #8
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %11 to i64
  %18 = select i1 %12, i8* %14, i8* %5
  %19 = select i1 %12, i64 %16, i64 %17
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %18, i64 %19) #8
  %21 = load i8, i8* %10, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %2, %23
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #8
  br label %41

41:                                               ; preds = %25, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  ret %"class.std::__1::basic_ostream"* %20
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"**
  %4 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3, align 8
  %5 = icmp eq %"class.blink::AXObject"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #8
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 -1, i32 14
  %20 = bitcast %"class.blink::Member.2"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #8
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10AXPositionC2ERKS0_(%"class.blink::AXPosition"*, %"class.blink::AXPosition"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %0, i64 0, i32 0, i32 0
  %4 = bitcast %"class.blink::AXPosition"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.blink::AXPosition"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %7, align 8
  switch i64 %5, label %8 [
    i64 0, label %34
    i64 -1, label %34
  ]

8:                                                ; preds = %2
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #8
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  %23 = icmp eq %"class.blink::PersistentNode"* %22, null
  br i1 %23, label %24, label %27, !prof !2

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %25) #8
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %21, align 8
  br label %27

27:                                               ; preds = %24, %15
  %28 = phi %"class.blink::PersistentNode"* [ %26, %24 ], [ %22, %15 ]
  %29 = bitcast %"class.blink::PersistentNode"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  store i64 %30, i64* %31, align 8
  %32 = bitcast %"class.blink::PersistentNode"* %28 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %3, %"class.blink::PersistentBase"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %28, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %33, align 8
  store %"class.blink::PersistentNode"* %28, %"class.blink::PersistentNode"** %7, align 8
  br label %34

34:                                               ; preds = %2, %2, %27
  %35 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %1, i64 0, i32 1
  %37 = bitcast i32* %36 to i64*
  %38 = bitcast i32* %35 to i64*
  %39 = load i64, i64* %37, align 8
  store i64 %39, i64* %38, align 8
  ret void
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11AXSelectionD2Ev(%"class.blink::AXSelection"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #8
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::AXSelection", %"class.blink::AXSelection"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !2

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #8
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  ret void
}

declare void @_ZN5blink5Event9SetTargetEPNS_11EventTargetE(%"class.blink::Event"*, %"class.blink::EventTarget"*) local_unnamed_addr #2

declare void @_ZN5blink8Document26EnqueueAnimationFrameEventEPNS_5EventE(%"class.blink::Document"*, %"class.blink::Event"*) local_unnamed_addr #2

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.286"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.286"*)) #8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #8
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %40, i8* %41) #8
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #8
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.286"*) local_unnamed_addr #2

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.1493"* byval(%"class.WTF::StringAppend.1493") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.1493"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #8
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #8
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #8
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #8
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1493"* %8) #8
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1493"* %8) #8
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* %26, i8* %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.8, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #8
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.8, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  ret i32 %18
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1591"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.1493"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1591", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1591"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1591", %"class.WTF::StringTypeAdapter.1591"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1591"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1591"* nonnull %4, i8* %14) #8
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1494"* %9) #8
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1494"* %9) #8
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* %25, i8* %26) #8
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.8, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.8, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1494"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1591", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.1591"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1591", %"class.WTF::StringTypeAdapter.1591"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.1494", %"class.WTF::StringAppend.1494"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.1591"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1591"* nonnull %4, i8* %13) #8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.1494", %"class.WTF::StringAppend.1494"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* %30, i8* %31) #8
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.8, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* %45, i8* %46) #8
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.8, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #8
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1589"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.1493"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1591", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1588", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1591", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1591"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1591"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1591"* nonnull %5, i8* %10) #8
  %11 = bitcast %"class.WTF::StringTypeAdapter.1591"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1591", %"class.WTF::StringTypeAdapter.1591"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1591"* nonnull %3, i8* %14) #8
  %15 = bitcast %"class.WTF::StringTypeAdapter.1588"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1588", %"class.WTF::StringTypeAdapter.1588"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1588", %"class.WTF::StringTypeAdapter.1588"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1588"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1591"* nonnull %3, i8* %1) #8
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1588", %"class.WTF::StringTypeAdapter.1588"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1589"* nonnull %34, i8* %37) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1494"* %6) #8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1591"* nonnull %5, i8* %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1591"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1589"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.1493"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1591", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1588", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1591", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1591"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1591"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1591"* nonnull %5, i8* %10) #8
  %11 = bitcast %"class.WTF::StringTypeAdapter.1591"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1591", %"class.WTF::StringTypeAdapter.1591"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #8
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1591"* nonnull %3, i8* %14) #8
  %15 = bitcast %"class.WTF::StringTypeAdapter.1588"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1588", %"class.WTF::StringTypeAdapter.1588"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1588", %"class.WTF::StringTypeAdapter.1588"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.1493", %"class.WTF::StringAppend.1493"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1588"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1591"* nonnull %3, i16* %1) #8
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1588", %"class.WTF::StringTypeAdapter.1588"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1589"* nonnull %34, i16* %37) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #8
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.1494"* %6) #8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1591"* nonnull %5, i16* %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1591"*, i16*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
