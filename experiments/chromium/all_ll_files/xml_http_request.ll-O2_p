; ModuleID = '../../third_party/blink/renderer/core/xmlhttprequest/xml_http_request.cc'
source_filename = "../../third_party/blink/renderer/core/xmlhttprequest/xml_http_request.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.166", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.166" = type { %"class.base::RefCounted.167" }
%"class.base::RefCounted.167" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.172" }
%"class.WTF::HashMap.172" = type { %"class.WTF::HashTable.173" }
%"class.WTF::HashTable.173" = type <{ %"struct.WTF::KeyValuePair.175"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.175" = type { %"class.blink::WeakMember.176", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.176" = type { %"class.blink::MemberBase.177" }
%"class.blink::MemberBase.177" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.178", i32, [4 x i8], %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.316", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.327", %"class.std::__1::unique_ptr.333", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.345", %"class.std::__1::unique_ptr.351", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.358", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.264", %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.296", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.214" = type { %"struct.std::__1::__atomic_base.215" }
%"struct.std::__1::__atomic_base.215" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__cxx_atomic_impl.217" }
%"struct.std::__1::__cxx_atomic_impl.217" = type { %"struct.std::__1::__cxx_atomic_base_impl.218" }
%"struct.std::__1::__cxx_atomic_base_impl.218" = type { i64 }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::Worklist.225"* }
%"class.blink::Worklist.225" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::Worklist.232"* }
%"class.blink::Worklist.232" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::Worklist.239"* }
%"class.blink::Worklist.239" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::Worklist.246"* }
%"class.blink::Worklist.246" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.blink::Worklist.253"* }
%"class.blink::Worklist.253" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::Worklist.260"* }
%"class.blink::Worklist.260" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::Worklist.267"* }
%"class.blink::Worklist.267" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.214" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.274", %"class.std::__1::__compressed_pair.283", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.290", [4 x i8] }>
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276", %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { i64 }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { float }
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.299", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.308" }
%"class.WTF::Vector.308" = type { %"class.WTF::VectorBuffer.309" }
%"class.WTF::VectorBuffer.309" = type { %"class.WTF::VectorBufferBase.310" }
%"class.WTF::VectorBufferBase.310" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.324" }
%"class.WTF::VectorBuffer.324" = type { %"class.WTF::VectorBufferBase.325" }
%"class.WTF::VectorBufferBase.325" = type { %"struct.std::__1::pair.326"*, i32, i32 }
%"struct.std::__1::pair.326" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.339" }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.225"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.232"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.239"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.246"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.253"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.538" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.357 }
%class.scoped_refptr.357 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.358" = type { %"struct.std::__1::__atomic_base.359" }
%"struct.std::__1::__atomic_base.359" = type { %"struct.std::__1::__cxx_atomic_impl.360" }
%"struct.std::__1::__cxx_atomic_impl.360" = type { %"struct.std::__1::__cxx_atomic_base_impl.361" }
%"struct.std::__1::__cxx_atomic_base_impl.361" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.155" }
%"class.base::time_internal::TimeBase.155" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.48" }
%"struct.std::__1::atomic.48" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__cxx_atomic_impl.51" }
%"struct.std::__1::__cxx_atomic_impl.51" = type { %"struct.std::__1::__cxx_atomic_base_impl.52" }
%"struct.std::__1::__cxx_atomic_base_impl.52" = type { i32 }
%"class.blink::XMLHttpRequest" = type { %"class.blink::XMLHttpRequestEventTarget", %"class.blink::ThreadableLoaderClient", %"class.blink::DocumentParserClient", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.13", %"class.blink::KURL", %"class.mojo::PendingRemote", %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.mojo::StructPtr", %"class.blink::Member.43", %"class.WTF::AtomicString", %"class.base::TimeDelta", %"class.blink::Member.45", %"class.blink::TaskHandle", %"class.blink::Member.55", i32, %"class.blink::ResourceResponse", %"class.std::__1::unique_ptr.103", %"class.blink::TraceWrapperV8String", %"class.blink::Member.129", %"class.blink::Member.131", %class.scoped_refptr.142, i64, i64, i64, %"class.blink::Member.149", i64, i32, %"class.blink::Member.151", i32, %"class.v8::Isolate"*, %class.scoped_refptr.165, %class.scoped_refptr.32, %"class.blink::Member.362", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::probe::AsyncTaskId" }
%"class.blink::XMLHttpRequestEventTarget" = type { %"class.blink::EventTargetWithInlineData" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::ThreadableLoaderClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::DocumentParserClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.12"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.12" = type opaque
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::XMLHttpRequestUpload"* }
%"class.blink::XMLHttpRequestUpload" = type { %"class.blink::XMLHttpRequestEventTarget", %"class.blink::Member.15", i64, i64 }
%"class.blink::Member.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::XMLHttpRequest"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.17" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::KURL"* }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.23" }
%"class.WTF::HashTable.23" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.26" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.network::mojom::blink::TrustTokenParams"* }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.29", %"class.WTF::Vector.35", %"class.WTF::String" }
%"class.WTF::Vector.29" = type { %"class.WTF::VectorBuffer.30" }
%"class.WTF::VectorBuffer.30" = type { %"class.WTF::VectorBufferBase.31" }
%"class.WTF::VectorBufferBase.31" = type { %class.scoped_refptr.32*, i32, i32 }
%"class.WTF::Vector.35" = type { %"class.WTF::VectorBuffer.36" }
%"class.WTF::VectorBuffer.36" = type { %"class.WTF::VectorBufferBase.37" }
%"class.WTF::VectorBufferBase.37" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::Blob"* }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.47 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.47 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.53", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.48" }
%"class.mojo::PendingRemote.53" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::ThreadableLoader"* }
%"class.blink::ThreadableLoader" = type <{ %"class.blink::RawResourceClient.base", [7 x i8], %"class.blink::Member.2223", %"class.blink::Member.734", %"class.blink::Member.1012", %"struct.blink::ResourceLoaderOptions", i32, [4 x i8], %"class.base::TimeDelta", %"class.blink::HeapTaskRunnerTimer.2225", %"class.base::TimeTicks", %"class.blink::RawResourceClientStateChecker", [4 x i8] }>
%"class.blink::RawResourceClient.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2124", [7 x i8], %"class.blink::Member.2125", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration.2124" = type { i8 }
%"class.blink::Member.2125" = type { %"class.blink::MemberBase.2126" }
%"class.blink::MemberBase.2126" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.2129", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.2149", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.2195", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.2212", %"class.blink::ResourceResponse", %class.scoped_refptr.142, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.2129" = type { %"class.absl::optional_internal::optional_data.2130" }
%"class.absl::optional_internal::optional_data.2130" = type { %"class.absl::optional_internal::optional_data_base.2131" }
%"class.absl::optional_internal::optional_data_base.2131" = type { %"class.absl::optional_internal::optional_data_dtor_base.2132" }
%"class.absl::optional_internal::optional_data_dtor_base.2132" = type { i8, %union.anon.2133 }
%union.anon.2133 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.2134", i8, %"class.absl::optional.2139", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.2134" = type { %"class.absl::optional_internal::optional_data.2135" }
%"class.absl::optional_internal::optional_data.2135" = type { %"class.absl::optional_internal::optional_data_base.2136" }
%"class.absl::optional_internal::optional_data_base.2136" = type { %"class.absl::optional_internal::optional_data_dtor_base.2137" }
%"class.absl::optional_internal::optional_data_dtor_base.2137" = type { i8, [7 x i8], %union.anon.2138 }
%union.anon.2138 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.96 }
%union.anon.96 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.2139" = type { %"class.absl::optional_internal::optional_data.2140" }
%"class.absl::optional_internal::optional_data.2140" = type { %"class.absl::optional_internal::optional_data_base.2141" }
%"class.absl::optional_internal::optional_data_base.2141" = type { %"class.absl::optional_internal::optional_data_dtor_base.2142" }
%"class.absl::optional_internal::optional_data_dtor_base.2142" = type { i8, %union.anon.2143 }
%union.anon.2143 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.2144", %"class.WTF::Vector.35" }
%"class.WTF::Vector.2144" = type { %"class.WTF::VectorBuffer.2145" }
%"class.WTF::VectorBuffer.2145" = type { %"class.WTF::VectorBufferBase.2146" }
%"class.WTF::VectorBufferBase.2146" = type { i32*, i32, i32 }
%"class.WTF::Vector.2149" = type { %"class.WTF::VectorBuffer.2150" }
%"class.WTF::VectorBuffer.2150" = type { %"class.WTF::VectorBufferBase.2151" }
%"class.WTF::VectorBufferBase.2151" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2191" }
%"class.WTF::HashMap.2191" = type { %"class.WTF::HashTable.2192" }
%"class.WTF::HashTable.2192" = type <{ %"struct.WTF::KeyValuePair.2194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2194" = type <{ %"class.blink::WeakMember.2466", i32, [4 x i8] }>
%"class.blink::WeakMember.2466" = type { %"class.blink::MemberBase.2467" }
%"class.blink::MemberBase.2467" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2124", [7 x i8], %"class.blink::Member.2125", i8, [7 x i8] }>
%"class.blink::HeapHashSet.2195" = type { %"class.WTF::HashSet.2198" }
%"class.WTF::HashSet.2198" = type { %"class.WTF::HashTable.2199" }
%"class.WTF::HashTable.2199" = type <{ %"class.blink::WeakMember.2201"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2201" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.32, %class.scoped_refptr.32, %class.scoped_refptr.32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.2152, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.2164", %"class.absl::optional.2169", %"class.absl::optional.2174", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.84", %"class.absl::optional.2174", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.2174", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.84", %"class.absl::optional.2179", i8, %class.scoped_refptr.2185 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.98" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.98" = type { %"class.absl::optional_internal::optional_data.99" }
%"class.absl::optional_internal::optional_data.99" = type { %"class.absl::optional_internal::optional_data_base.100" }
%"class.absl::optional_internal::optional_data_base.100" = type { %"class.absl::optional_internal::optional_data_dtor_base.101" }
%"class.absl::optional_internal::optional_data_dtor_base.101" = type { i8, %union.anon.102 }
%union.anon.102 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.2152 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.2153", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.2162, i8, %"class.url::Origin" }
%"class.base::RefCounted.2153" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2154" }
%"class.std::__1::vector.2154" = type { %"class.std::__1::__vector_base.2155" }
%"class.std::__1::__vector_base.2155" = type { %"class.std::__1::unique_ptr.2156"*, %"class.std::__1::unique_ptr.2156"*, %"class.std::__1::__compressed_pair.2157" }
%"class.std::__1::unique_ptr.2156" = type { %"class.std::__1::__compressed_pair.2370" }
%"class.std::__1::__compressed_pair.2370" = type { %"struct.std::__1::__compressed_pair_elem.2371" }
%"struct.std::__1::__compressed_pair_elem.2371" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2157" = type { %"struct.std::__1::__compressed_pair_elem.2158" }
%"struct.std::__1::__compressed_pair_elem.2158" = type { %"class.std::__1::unique_ptr.2156"* }
%class.scoped_refptr.2162 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2163", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2163" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.2164" = type { %"class.absl::optional_internal::optional_data.2165" }
%"class.absl::optional_internal::optional_data.2165" = type { %"class.absl::optional_internal::optional_data_base.2166" }
%"class.absl::optional_internal::optional_data_base.2166" = type { %"class.absl::optional_internal::optional_data_dtor_base.2167" }
%"class.absl::optional_internal::optional_data_dtor_base.2167" = type { i8, %union.anon.2168 }
%union.anon.2168 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.2169" = type { %"class.absl::optional_internal::optional_data.2170" }
%"class.absl::optional_internal::optional_data.2170" = type { %"class.absl::optional_internal::optional_data_base.2171" }
%"class.absl::optional_internal::optional_data_base.2171" = type { %"class.absl::optional_internal::optional_data_dtor_base.2172" }
%"class.absl::optional_internal::optional_data_dtor_base.2172" = type { i8, %union.anon.2173 }
%union.anon.2173 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.69", %"class.absl::optional.69" }
%"class.absl::optional.69" = type { %"class.absl::optional_internal::optional_data.70" }
%"class.absl::optional_internal::optional_data.70" = type { %"class.absl::optional_internal::optional_data_base.71" }
%"class.absl::optional_internal::optional_data_base.71" = type { %"class.absl::optional_internal::optional_data_dtor_base.72" }
%"class.absl::optional_internal::optional_data_dtor_base.72" = type { i8, %union.anon.73 }
%union.anon.73 = type { %"class.base::TimeDelta" }
%"class.absl::optional.2174" = type { %"class.absl::optional_internal::optional_data.2175" }
%"class.absl::optional_internal::optional_data.2175" = type { %"class.absl::optional_internal::optional_data_base.2176" }
%"class.absl::optional_internal::optional_data_base.2176" = type { %"class.absl::optional_internal::optional_data_dtor_base.2177" }
%"class.absl::optional_internal::optional_data_dtor_base.2177" = type { i8, %union.anon.2178 }
%union.anon.2178 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.84" = type { %"class.absl::optional_internal::optional_data.85" }
%"class.absl::optional_internal::optional_data.85" = type { %"class.absl::optional_internal::optional_data_base.86" }
%"class.absl::optional_internal::optional_data_base.86" = type { %"class.absl::optional_internal::optional_data_dtor_base.87" }
%"class.absl::optional_internal::optional_data_dtor_base.87" = type { i8, %union.anon.88 }
%union.anon.88 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.2179" = type { %"class.absl::optional_internal::optional_data.2180" }
%"class.absl::optional_internal::optional_data.2180" = type { %"class.absl::optional_internal::optional_data_base.2181" }
%"class.absl::optional_internal::optional_data_base.2181" = type { %"class.absl::optional_internal::optional_data_dtor_base.2182" }
%"class.absl::optional_internal::optional_data_dtor_base.2182" = type { i8, %union.anon.2183 }
%union.anon.2183 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.2184" }
%"class.mojo::PendingRemote.2184" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.2185 = type { %"class.base::RefCountedData.2186"* }
%"class.base::RefCountedData.2186" = type { %"class.base::RefCountedThreadSafe.2375", %"class.base::internal::flat_tree.2376" }
%"class.base::RefCountedThreadSafe.2375" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2376" = type { %"class.std::__1::vector.2377" }
%"class.std::__1::vector.2377" = type { %"class.std::__1::__vector_base.2378" }
%"class.std::__1::__vector_base.2378" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2379" }
%"class.std::__1::__compressed_pair.2379" = type { %"struct.std::__1::__compressed_pair_elem.2380" }
%"struct.std::__1::__compressed_pair_elem.2380" = type { i32* }
%"class.blink::Member.2212" = type { %"class.blink::MemberBase.2213" }
%"class.blink::MemberBase.2213" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.2214" }
%"class.std::__1::__tree.2214" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2215", %"class.std::__1::__compressed_pair.2219" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2215" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2219" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"class.blink::Member.2223" = type { %"class.blink::MemberBase.2224" }
%"class.blink::MemberBase.2224" = type { %"class.blink::ThreadableLoaderClient"* }
%"class.blink::Member.734" = type { %"class.blink::MemberBase.735" }
%"class.blink::MemberBase.735" = type { %"class.blink::ExecutionContext"* }
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.2202", %"class.WTF::String", %"class.WTF::HashSet.2203", i8, i8, %class.scoped_refptr.165, %class.scoped_refptr.2208, %class.scoped_refptr.2210 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.2202" = type { i8 }
%"class.WTF::HashSet.2203" = type { %"class.WTF::HashTable.2204" }
%"class.WTF::HashTable.2204" = type <{ %"struct.std::__1::pair.2207"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.2207" = type opaque
%class.scoped_refptr.2208 = type { %"class.base::RefCountedData.2209"* }
%"class.base::RefCountedData.2209" = type { %"class.base::RefCountedThreadSafe.2472", %"class.mojo::PendingRemote" }
%"class.base::RefCountedThreadSafe.2472" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.2210 = type { %"class.base::RefCountedData.2211"* }
%"class.base::RefCountedData.2211" = type opaque
%"class.blink::HeapTaskRunnerTimer.2225" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2226", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.156, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.156 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.157" }>
%"class.base::RefCountedThreadSafe.157" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.158 }
%class.scoped_refptr.158 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.159", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.159" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.160" }
%"struct.std::__1::atomic.160" = type { %"struct.std::__1::__atomic_base.161" }
%"struct.std::__1::__atomic_base.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i8 }
%"class.blink::WeakMember.2226" = type { %"class.blink::MemberBase.56" }
%"class.blink::RawResourceClientStateChecker" = type { i32 }
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional", %class.scoped_refptr.67, %class.scoped_refptr.68, %"struct.blink::CacheControlHeader", %"class.absl::optional.69", %"class.absl::optional.74", %"class.absl::optional.74", %"class.absl::optional.74", i64, %"class.blink::KURL", %"class.WTF::Vector.79", %"class.WTF::String", %"class.WTF::Vector.35", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.84", %"class.WTF::Vector.35", %"class.blink::KURL", %"class.absl::optional.89" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.35", %"class.WTF::String", i64, i64, %"class.WTF::Vector.57", %"class.WTF::Vector.62" }
%"class.WTF::Vector.57" = type { %"class.WTF::VectorBuffer.58" }
%"class.WTF::VectorBuffer.58" = type { %"class.WTF::VectorBufferBase.59" }
%"class.WTF::VectorBufferBase.59" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.62" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase.64" }
%"class.WTF::VectorBufferBase.64" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.67 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.68 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { %"class.base::Time" }
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81" }
%"class.WTF::VectorBufferBase.81" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, %union.anon.93 }
%union.anon.93 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.106", i32, %"class.WTF::Vector.112", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.117" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.WTF::Vector.112" = type { %"class.WTF::VectorBuffer.113" }
%"class.WTF::VectorBuffer.113" = type { %"class.WTF::VectorBufferBase.114" }
%"class.WTF::VectorBufferBase.114" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::TraceWrapperV8String" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.126" }
%"class.blink::TraceWrapperV8Reference.126" = type { %"class.v8::TracedReference.127" }
%"class.v8::TracedReference.127" = type { %"class.v8::BasicTracedReference.128" }
%"class.v8::BasicTracedReference.128" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.656", %"class.WTF::Vector.656", i8, i32, %"class.blink::Member.661", %"class.blink::Member.734", %"class.blink::Member.1012", %"class.blink::Member.131", %"class.blink::Member.1014", %"class.blink::Member.1016", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1018", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1024", %"class.blink::Member.1026", %"class.blink::Member.612", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1028", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.588", %"class.blink::Member.568", %"class.blink::Member.987", %"class.blink::Member.568", %"class.blink::Member.568", %"class.blink::Member.568", %"class.blink::UserActionElementSet", %"class.blink::Member.1041", double, double, i64, i64, %"class.blink::HeapHashSet.1043", %"class.blink::HeapHashSet.1050", i16, i8, %"class.blink::Member.1057", %"class.blink::Member.1059", %"class.blink::Member.1061", %"class.blink::Member.1063", %"class.blink::TextLinkColors", %"class.blink::Member.1065", i8, [7 x i8], %"class.blink::HeapHashMap.1067", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.568", %"class.WTF::Vector.1074", %"class.blink::Member.1079", %"class.blink::Member.1083", i8, %"class.blink::Member.568", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1085", %"class.blink::HeapVector.1087", %"class.std::__1::unique_ptr.1095", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1101", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1114", %"class.WTF::Vector.1116", i8, i8, %"class.std::__1::unique_ptr.1121", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.588", %"class.blink::HeapVector.1127", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1135", i8, i32, %"class.blink::Member.1137", %"class.blink::Member.1139", %"class.blink::Member.1141", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1143", %"class.WTF::HashMap.1145", %"class.blink::Member.1150", %"class.blink::Member.1152", %"class.blink::Member.1154", %"class.blink::Member.1156", %"class.blink::Member.129", %"class.blink::Member.129", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1158", i8, i32, %"class.blink::Member.1165", %"class.blink::Member.1167", i32, %"class.blink::Member.1169", %"class.blink::Member.1171", %"class.blink::Member.1173", %"class.std::__1::unique_ptr.1175", i64, %"class.std::__1::unique_ptr.1181", i32, i32, %"class.blink::Member.1187", %"class.blink::Member.1189", %"class.blink::Member.1191", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1193", %"class.WTF::Vector.998", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1195", %"class.blink::Member.1202", %"class.std::__1::unique_ptr.1204", %"class.blink::Member.1210", i8, i8, %"class.WTF::String", %"class.blink::Member.1212", i8, [7 x i8], %"class.blink::HeapHashMap.1214", %"class.blink::HeapObserverSet.1221", %"class.blink::Member.1229", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1231", i32, i8, i8, %"class.blink::WeakMember.1233", %"class.blink::Member.1234" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.543", %"class.blink::Member.543" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.543", %"class.blink::Member.545", %"class.blink::Member.543", %"class.blink::Member.543", %"class.blink::Member.547" }
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.551", %"class.blink::Member.129", %"class.blink::Member.545", %"class.blink::Member.553", %"class.blink::Member.553", %"class.blink::Member.595", %"class.blink::Member.597", %"class.blink::Member.599", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.604", %"class.blink::HeapVector.606" }
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.557" }
%"class.blink::HeapHashMap.557" = type { %"class.WTF::HashMap.560" }
%"class.WTF::HashMap.560" = type { %"class.WTF::HashTable.561" }
%"class.WTF::HashTable.561" = type <{ %"struct.WTF::KeyValuePair.563"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.563" = type { %"class.WTF::AtomicString", %"class.blink::Member.564" }
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.568", i32, %"class.blink::HeapVector.588" }
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.599" = type { %"class.blink::MemberBase.600" }
%"class.blink::MemberBase.600" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.601" }
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::HeapHashMap.603"* }
%"class.blink::HeapHashMap.603" = type opaque
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.606" = type { %"class.WTF::Vector.609" }
%"class.WTF::Vector.609" = type { %"class.WTF::VectorBuffer.610" }
%"class.WTF::VectorBuffer.610" = type { %"class.WTF::VectorBufferBase.611" }
%"class.WTF::VectorBufferBase.611" = type { %"class.blink::Member.612"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.649" }
%"class.blink::HeapHashMap.649" = type { %"class.WTF::HashMap.652" }
%"class.WTF::HashMap.652" = type { %"class.WTF::HashTable.653" }
%"class.WTF::HashTable.653" = type <{ %"struct.WTF::KeyValuePair.655"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.655" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.656" = type { %"class.WTF::VectorBuffer.657" }
%"class.WTF::VectorBuffer.657" = type { %"class.WTF::VectorBufferBase.658" }
%"class.WTF::VectorBufferBase.658" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.380 }
%class.scoped_refptr.380 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.381", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.381" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.843", %"class.blink::ThreadState::PrefinalizerRegistration.851", %"class.blink::Member.852", %"class.blink::Member.129", %"class.blink::Member.854", i8, %"class.blink::Member.856", %"class.blink::Member.858", %"class.blink::Member.860", %"class.blink::Member.860", %"class.blink::Member.860", %"class.blink::Member.860", %"class.blink::Member.860", %"class.blink::Member.860", %"class.blink::Member.862", %"class.blink::Member.864", %"class.blink::Member.866", %"class.blink::Member.868", %"class.blink::Member.870", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.35", %"class.blink::Member.872", %class.scoped_refptr.874, %"class.blink::HeapHashSet.938", %"class.blink::Member.945", %"class.blink::HeapHashMap.953", %"class.std::__1::unique_ptr.960", %"class.blink::Member.972", %"class.blink::Member.991", %"class.blink::Member.993", %"class.blink::Member.995", %"class.WTF::Vector.998", %"class.util::TokenType", %"class.WTF::HashSet.1003", %"class.WTF::Deque.1007" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.663", %"class.blink::Member.665", %"class.blink::Member.667", %"class.blink::Member.669", i8, %"class.WTF::Vector.671" }
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1259", %"class.blink::Member.1261", %"class.blink::Member.1263", i8, i32, i8, i32, %"class.blink::Member.1265", %"class.blink::Member.665", %"class.blink::FrameLifecycle", %"class.blink::Member.663", %"class.blink::Member.663", %"class.blink::Member.663", %"class.blink::Member.663", %"class.blink::Member.663", %"class.blink::Member.663", %"class.blink::Member.976", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1275", i8, %"class.base::UnguessableToken", %"class.absl::optional.1277", %"class.absl::optional.84", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.663", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1259" = type { %"class.blink::MemberBase.1260" }
%"class.blink::MemberBase.1260" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.1996", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.663", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2022", %"class.blink::Member.2026", %"class.blink::Member.2028", %"class.blink::Member.2032", %"class.blink::Member.2034", %"class.blink::Member.2036", %"class.blink::Member.2038", %"class.blink::Member.2040", %"class.blink::HeapObserverSet.2042", %"class.blink::Member.2050", %"class.blink::Member.2052", %"class.blink::Member.2054", %"class.blink::Member.2056", %"class.blink::Member.2058", %"class.blink::Member.2060", %"class.blink::Member.2062", %"class.blink::Member.2064", %"class.blink::Member.2066", %"class.blink::Member.2068", %"class.blink::Member.2070", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2095", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2102", %"class.blink::Member.1259", %"class.blink::Member.1259", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2110", %"class.std::__1::unique_ptr.2116", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.1996" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1997" }
%"class.blink::HeapHashMap.1997" = type { %"class.WTF::HashMap.2000" }
%"class.WTF::HashMap.2000" = type { %"class.WTF::HashTable.2001" }
%"class.WTF::HashTable.2001" = type <{ %"struct.WTF::KeyValuePair.2003"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2003" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2004" }
%"class.std::__1::unique_ptr.2004" = type { %"class.std::__1::__compressed_pair.2005" }
%"class.std::__1::__compressed_pair.2005" = type { %"struct.std::__1::__compressed_pair_elem.2006" }
%"struct.std::__1::__compressed_pair_elem.2006" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2007", %"class.WTF::HashMap.2007", %"class.WTF::HashMap.2007", %"class.WTF::HashMap.2007", %"class.WTF::HashMap.2007", %"class.WTF::HashMap.2007", %"class.WTF::HashMap.2007", %"class.std::__1::unique_ptr.2012" }
%"class.WTF::HashMap.2007" = type { %"class.WTF::HashTable.2008" }
%"class.WTF::HashTable.2008" = type <{ %"struct.WTF::KeyValuePair.2011"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2011" = type opaque
%"class.std::__1::unique_ptr.2012" = type { %"class.std::__1::__compressed_pair.2013" }
%"class.std::__1::__compressed_pair.2013" = type { %"struct.std::__1::__compressed_pair_elem.2014" }
%"struct.std::__1::__compressed_pair_elem.2014" = type { %"class.WTF::Vector.2015"* }
%"class.WTF::Vector.2015" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2022" = type { %"class.blink::MemberBase.2023" }
%"class.blink::MemberBase.2023" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.1259", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.2026" = type { %"class.blink::MemberBase.2027" }
%"class.blink::MemberBase.2027" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2028" = type { %"class.blink::MemberBase.2029" }
%"class.blink::MemberBase.2029" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1233", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::Member.2032" = type { %"class.blink::MemberBase.2033" }
%"class.blink::MemberBase.2033" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2034" = type { %"class.blink::MemberBase.2035" }
%"class.blink::MemberBase.2035" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2036" = type { %"class.blink::MemberBase.2037" }
%"class.blink::MemberBase.2037" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2038" = type { %"class.blink::MemberBase.2039" }
%"class.blink::MemberBase.2039" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2040" = type { %"class.blink::MemberBase.2041" }
%"class.blink::MemberBase.2041" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2042" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2043" }
%"class.blink::HeapHashSet.2043" = type { %"class.WTF::HashSet.2046" }
%"class.WTF::HashSet.2046" = type { %"class.WTF::HashTable.2047" }
%"class.WTF::HashTable.2047" = type <{ %"class.blink::WeakMember.2049"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2049" = type opaque
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2054" = type { %"class.blink::MemberBase.2055" }
%"class.blink::MemberBase.2055" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2056" = type { %"class.blink::MemberBase.2057" }
%"class.blink::MemberBase.2057" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2058" = type { %"class.blink::MemberBase.2059" }
%"class.blink::MemberBase.2059" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2060" = type { %"class.blink::MemberBase.2061" }
%"class.blink::MemberBase.2061" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2062" = type { %"class.blink::MemberBase.2063" }
%"class.blink::MemberBase.2063" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2064" = type { %"class.blink::MemberBase.2065" }
%"class.blink::MemberBase.2065" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2066" = type { %"class.blink::MemberBase.2067" }
%"class.blink::MemberBase.2067" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2068" = type { %"class.blink::MemberBase.2069" }
%"class.blink::MemberBase.2069" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2070" = type { %"class.blink::MemberBase.2071" }
%"class.blink::MemberBase.2071" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2072" }
%"class.WTF::Deque.2072" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2075" }
%"class.WTF::VectorBuffer.2075" = type { %"class.WTF::VectorBufferBase.2076" }
%"class.WTF::VectorBufferBase.2076" = type { %"class.std::__1::unique_ptr.2077"*, i32, i32 }
%"class.std::__1::unique_ptr.2077" = type { %"class.std::__1::__compressed_pair.2078" }
%"class.std::__1::__compressed_pair.2078" = type { %"struct.std::__1::__compressed_pair_elem.2079" }
%"struct.std::__1::__compressed_pair_elem.2079" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2083", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2083" = type { %"class.std::__1::__bitset.2084" }
%"class.std::__1::__bitset.2084" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2085" }
%"class.absl::optional.2085" = type { %"class.absl::optional_internal::optional_data.2086" }
%"class.absl::optional_internal::optional_data.2086" = type { %"class.absl::optional_internal::optional_data_base.2087" }
%"class.absl::optional_internal::optional_data_base.2087" = type { %"class.absl::optional_internal::optional_data_dtor_base.2088" }
%"class.absl::optional_internal::optional_data_dtor_base.2088" = type { i8, %union.anon.2089 }
%union.anon.2089 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2090", i64, %"class.absl::optional.69", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2090" = type { %"class.absl::optional_internal::optional_data.2091" }
%"class.absl::optional_internal::optional_data.2091" = type { %"class.absl::optional_internal::optional_data_base.2092" }
%"class.absl::optional_internal::optional_data_base.2092" = type { %"class.absl::optional_internal::optional_data_dtor_base.2093" }
%"class.absl::optional_internal::optional_data_dtor_base.2093" = type { i8, %union.anon.2094 }
%union.anon.2094 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2095" = type { %"class.std::__1::unique_ptr.2096" }
%"class.std::__1::unique_ptr.2096" = type { %"class.std::__1::__compressed_pair.2097" }
%"class.std::__1::__compressed_pair.2097" = type { %"struct.std::__1::__compressed_pair_elem.2098" }
%"struct.std::__1::__compressed_pair_elem.2098" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2102" = type { %"class.WTF::HashSet.2105" }
%"class.WTF::HashSet.2105" = type { %"class.WTF::HashTable.2106" }
%"class.WTF::HashTable.2106" = type <{ %"class.blink::WeakMember.2108"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2108" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2109" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2109" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.451 }
%class.scoped_refptr.451 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.2110" = type { %"class.std::__1::__compressed_pair.2111" }
%"class.std::__1::__compressed_pair.2111" = type { %"struct.std::__1::__compressed_pair_elem.2112" }
%"struct.std::__1::__compressed_pair_elem.2112" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2116" = type { %"class.std::__1::__compressed_pair.2117" }
%"class.std::__1::__compressed_pair.2117" = type { %"struct.std::__1::__compressed_pair_elem.2118" }
%"struct.std::__1::__compressed_pair_elem.2118" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.1262" }
%"class.blink::MemberBase.1262" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1263" = type { %"class.blink::MemberBase.1264" }
%"class.blink::MemberBase.1264" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1289", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1297", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1305", %"class.blink::FrameLoader", %"class.blink::Member.1322", %"class.blink::Member.568", %"class.blink::Member.1324", %"class.blink::Member.1326", %"class.blink::Member.1328", %"class.blink::Member.1330", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1332", %class.scoped_refptr.1552, %"class.blink::Member.1553", %"class.blink::Member.1555", %"class.blink::Member.1566", %"class.blink::Member.1568", %"class.blink::Member.1570", %"class.blink::Member.1574", %"class.blink::Member.1576", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1578", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1581", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1587", %"class.std::__1::unique_ptr.1588", %"class.absl::optional.84", i32, [4 x i8], %"class.std::__1::unique_ptr.1594", %"class.blink::HeapMojoAssociatedRemote.1600", %"class.blink::HeapMojoAssociatedRemote.1603", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1608", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1613", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1616", %"class.blink::Member.1618", %"class.blink::Member.1620", %"class.blink::Member.1622", %"class.mojo::StructPtr.1625", %"class.blink::Member.1634", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1636", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1289" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1290" }
%"class.blink::HeapHashMap.1290" = type { %"class.WTF::HashMap.1293" }
%"class.WTF::HashMap.1293" = type { %"class.WTF::HashTable.1294" }
%"class.WTF::HashTable.1294" = type <{ %"struct.WTF::KeyValuePair.1296"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1296" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1297" = type { %"class.std::__1::__compressed_pair.1298" }
%"class.std::__1::__compressed_pair.1298" = type { %"struct.std::__1::__compressed_pair_elem.1299" }
%"struct.std::__1::__compressed_pair_elem.1299" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.963", %"class.base::WeakPtrFactory.968" }
%"class.WTF::HashMap.963" = type { %"class.WTF::HashTable.964" }
%"class.WTF::HashTable.964" = type <{ %"struct.WTF::KeyValuePair.967"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.967" = type opaque
%"class.base::WeakPtrFactory.968" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1303" }
%"class.blink::Member.1303" = type { %"class.blink::MemberBase.1304" }
%"class.blink::MemberBase.1304" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.490", %"class.base::RepeatingCallback.2406", i64, %"class.std::__1::map.2407", i8*, i64, %"class.base::WeakPtrFactory.2416" }
%"class.base::RepeatingCallback.490" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.2406" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2407" = type { %"class.std::__1::__tree.2408" }
%"class.std::__1::__tree.2408" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2409", %"class.std::__1::__compressed_pair.2413" }
%"class.std::__1::__compressed_pair.2409" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"class.std::__1::__compressed_pair.2413" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"class.base::WeakPtrFactory.2416" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1305" = type { %"class.WTF::HashSet.1308" }
%"class.WTF::HashSet.1308" = type { %"class.WTF::HashTable.1309" }
%"class.WTF::HashTable.1309" = type <{ %"class.blink::WeakMember.1311"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1311" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.976", %"class.blink::Member.1312", %"class.blink::Member.1314", %"class.std::__1::unique_ptr.1316", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.759" }
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1315" }
%"class.blink::MemberBase.1315" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1316" = type { %"class.std::__1::__compressed_pair.1317" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.1318" }
%"struct.std::__1::__compressed_pair_elem.1318" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.759" = type { %"class.WTF::HashTable.760" }
%"class.WTF::HashTable.760" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1715", %"class.blink::Member.976", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1720", i8, i32, %"class.blink::Color", %"class.absl::optional.1722", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1727", %"class.blink::Member.1729", %"class.blink::Member.1729", %"class.std::__1::unique_ptr.1732", i32, [4 x i8], %"class.WTF::HashSet.1735", %"class.blink::Member.1742", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1744", %"class.blink::HeapHashSet.1751", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1759", i8, %"class.blink::Member.1765", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1777", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1791", i8, %"class.std::__1::unique_ptr.1797", %"class.std::__1::unique_ptr.1914", %"class.WTF::Vector.1920", i32, %class.scoped_refptr.1925, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1926", %"class.blink::Member.1928", %"class.blink::Member.1930", %"class.blink::HeapHashSet.1932", %"class.blink::HeapHashSet.1939", %"class.std::__1::unique_ptr.1946", %"class.std::__1::unique_ptr.1952", %"class.WTF::Vector.656" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1715" = type { %"class.WTF::HashTable.1716" }
%"class.WTF::HashTable.1716" = type <{ %class.scoped_refptr.1719*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1719 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1720" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1721", { i64, i64 } }
%"class.blink::WeakMember.1721" = type { %"class.blink::MemberBase.1323" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1722" = type { %"class.absl::optional_internal::optional_data.1723" }
%"class.absl::optional_internal::optional_data.1723" = type { %"class.absl::optional_internal::optional_data_base.1724" }
%"class.absl::optional_internal::optional_data_base.1724" = type { %"class.absl::optional_internal::optional_data_dtor_base.1725" }
%"class.absl::optional_internal::optional_data_dtor_base.1725" = type { i8, %union.anon.1726 }
%union.anon.1726 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::HeapHashSet.1731"* }
%"class.blink::HeapHashSet.1731" = type opaque
%"class.std::__1::unique_ptr.1732" = type { %"class.std::__1::__compressed_pair.1733" }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.1734" }
%"struct.std::__1::__compressed_pair_elem.1734" = type { %"class.WTF::HashSet.1735"* }
%"class.WTF::HashSet.1735" = type { %"class.WTF::HashTable.1736" }
%"class.WTF::HashTable.1736" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1744" = type { %"class.WTF::HashSet.1747" }
%"class.WTF::HashSet.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"class.blink::Member.1750"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1750" = type opaque
%"class.blink::HeapHashSet.1751" = type { %"class.WTF::HashSet.1754" }
%"class.WTF::HashSet.1754" = type { %"class.WTF::HashTable.1755" }
%"class.WTF::HashTable.1755" = type <{ %"class.blink::Member.1757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1981", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1992", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.568" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1981" = type { %"class.blink::MemberBase.1982" }
%"class.blink::MemberBase.1982" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1983", %"class.blink::Member.1984", %"class.blink::Member.1986", %"class.blink::Member.1988", %"class.blink::Member.1990", %"class.WTF::Vector.656", i16, %class.scoped_refptr.156 }
%"class.blink::ThreadState::PrefinalizerRegistration.1983" = type { i8 }
%"class.blink::Member.1984" = type { %"class.blink::MemberBase.1985" }
%"class.blink::MemberBase.1985" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1986" = type { %"class.blink::MemberBase.1987" }
%"class.blink::MemberBase.1987" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1988" = type { %"class.blink::MemberBase.1989" }
%"class.blink::MemberBase.1989" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1990" = type { %"class.blink::MemberBase.1991" }
%"class.blink::MemberBase.1991" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1992" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1993", { i64, i64 } }
%"class.blink::WeakMember.1993" = type { %"class.blink::MemberBase.1758" }
%"class.std::__1::unique_ptr.1759" = type { %"class.std::__1::__compressed_pair.1760" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.1761" }
%"struct.std::__1::__compressed_pair_elem.1761" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1769", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1769" = type { %"class.WTF::HashTable.1770" }
%"class.WTF::HashTable.1770" = type <{ %"struct.WTF::KeyValuePair.1772"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1772" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1773", i32, i32 }
%"class.WTF::Vector.1773" = type { %"class.WTF::VectorBuffer.1774" }
%"class.WTF::VectorBuffer.1774" = type { %"class.WTF::VectorBufferBase.1775" }
%"class.WTF::VectorBufferBase.1775" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1777" = type { %"class.WTF::LinkedHashSet.1780" }
%"class.WTF::LinkedHashSet.1780" = type { %"class.WTF::HashMap.1781", %"class.WTF::VectorBackedLinkedList.1785" }
%"class.WTF::HashMap.1781" = type { %"class.WTF::HashTable.1782" }
%"class.WTF::HashTable.1782" = type <{ %"struct.WTF::KeyValuePair.1784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1784" = type opaque
%"class.WTF::VectorBackedLinkedList.1785" = type { %"class.WTF::Vector.1786", i32, i32 }
%"class.WTF::Vector.1786" = type { %"class.WTF::VectorBuffer.1787" }
%"class.WTF::VectorBuffer.1787" = type { %"class.WTF::VectorBufferBase.1788" }
%"class.WTF::VectorBufferBase.1788" = type { %"class.WTF::VectorBackedLinkedListNode.1789"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1789" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1791" = type { %"class.std::__1::__compressed_pair.1792" }
%"class.std::__1::__compressed_pair.1792" = type { %"struct.std::__1::__compressed_pair_elem.1793" }
%"struct.std::__1::__compressed_pair_elem.1793" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1800, %class.scoped_refptr.1800, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1891", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1896", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1800 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1801", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1808" }
%"class.WTF::RefCounted.1801" = type { %"class.base::RefCounted.1802" }
%"class.base::RefCounted.1802" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1803", i32, [4 x i8] }>
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1808" = type { %"class.WTF::VectorBuffer.1809" }
%"class.WTF::VectorBuffer.1809" = type { %"class.WTF::VectorBufferBase.1810" }
%"class.WTF::VectorBufferBase.1810" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1814", %"class.std::__1::unique_ptr.1863", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1811, %class.scoped_refptr.1812, %class.scoped_refptr.1813 }
%class.scoped_refptr.1811 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1827", i8, i8, %class.scoped_refptr.1811, i32, i32 }
%"class.WTF::RefCounted.1827" = type { %"class.base::RefCounted.1828" }
%"class.base::RefCounted.1828" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1812 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1976" }
%"class.blink::PaintPropertyNode.1976" = type { %"class.WTF::RefCounted.1977", i8, i8, %class.scoped_refptr.1812, i32, i32 }
%"class.WTF::RefCounted.1977" = type { %"class.base::RefCounted.1978" }
%"class.base::RefCounted.1978" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1973" }
%"class.blink::PaintPropertyNode.1973" = type { %"class.WTF::RefCounted.1974", i8, i8, %class.scoped_refptr.1813, i32, i32 }
%"class.WTF::RefCounted.1974" = type { %"class.base::RefCounted.1975" }
%"class.base::RefCounted.1975" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1814" = type { %"class.std::__1::__compressed_pair.1815" }
%"class.std::__1::__compressed_pair.1815" = type { %"struct.std::__1::__compressed_pair_elem.1816" }
%"struct.std::__1::__compressed_pair_elem.1816" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1817", %"class.WTF::Vector.1822", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1817" = type { %"class.WTF::VectorBuffer.1818" }
%"class.WTF::VectorBuffer.1818" = type { %"class.WTF::VectorBufferBase.1819" }
%"class.WTF::VectorBufferBase.1819" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1822" = type { %"class.WTF::VectorBuffer.1823" }
%"class.WTF::VectorBuffer.1823" = type { %"class.WTF::VectorBufferBase.1824" }
%"class.WTF::VectorBufferBase.1824" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1842" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1835, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1836", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1829" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1835 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1958", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1958" = type { %"class.WTF::RefCounted.1959", i8, i8, %class.scoped_refptr.1835, i32, i32 }
%"class.WTF::RefCounted.1959" = type { %"class.base::RefCounted.1960" }
%"class.base::RefCounted.1960" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1961" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1961" = type { %"class.absl::optional_internal::optional_data.1962" }
%"class.absl::optional_internal::optional_data.1962" = type { %"class.absl::optional_internal::optional_data_base.1963" }
%"class.absl::optional_internal::optional_data_base.1963" = type { %"class.absl::optional_internal::optional_data_dtor_base.1964" }
%"class.absl::optional_internal::optional_data_dtor_base.1964" = type { i8, %union.anon.1965 }
%union.anon.1965 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1966", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1966" = type { %"class.std::__1::__vector_base.1967" }
%"class.std::__1::__vector_base.1967" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1968" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1968" = type { %"struct.std::__1::__compressed_pair_elem.1969" }
%"struct.std::__1::__compressed_pair_elem.1969" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1836" = type { %"class.std::__1::__compressed_pair.1837" }
%"class.std::__1::__compressed_pair.1837" = type { %"struct.std::__1::__compressed_pair_elem.1838" }
%"struct.std::__1::__compressed_pair_elem.1838" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1842" = type { %"class.std::__1::__compressed_pair.1843" }
%"class.std::__1::__compressed_pair.1843" = type { %"struct.std::__1::__compressed_pair_elem.1844" }
%"struct.std::__1::__compressed_pair_elem.1844" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1845", %"class.std::__1::unique_ptr.1851", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1845" = type { %"class.std::__1::__compressed_pair.1846" }
%"class.std::__1::__compressed_pair.1846" = type { %"struct.std::__1::__compressed_pair_elem.1847" }
%"struct.std::__1::__compressed_pair_elem.1847" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1851" = type { %"class.std::__1::__compressed_pair.1852" }
%"class.std::__1::__compressed_pair.1852" = type { %"struct.std::__1::__compressed_pair_elem.1853" }
%"struct.std::__1::__compressed_pair_elem.1853" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1863" = type { %"class.std::__1::__compressed_pair.1864" }
%"class.std::__1::__compressed_pair.1864" = type { %"struct.std::__1::__compressed_pair_elem.1865" }
%"struct.std::__1::__compressed_pair_elem.1865" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1866", %"class.absl::optional.1866" }
%"class.absl::optional.1866" = type { %"class.absl::optional_internal::optional_data.1867" }
%"class.absl::optional_internal::optional_data.1867" = type { %"class.absl::optional_internal::optional_data_base.1868" }
%"class.absl::optional_internal::optional_data_base.1868" = type { %"class.absl::optional_internal::optional_data_dtor_base.1869" }
%"class.absl::optional_internal::optional_data_dtor_base.1869" = type { i8, [3 x i8], %union.anon.1870 }
%union.anon.1870 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1808"*, %"class.absl::optional.1876", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1876" = type { %"class.absl::optional_internal::optional_data.1877" }
%"class.absl::optional_internal::optional_data.1877" = type { %"class.absl::optional_internal::optional_data_base.1878" }
%"class.absl::optional_internal::optional_data_base.1878" = type { %"class.absl::optional_internal::optional_data_dtor_base.1879" }
%"class.absl::optional_internal::optional_data_dtor_base.1879" = type { i8, %union.anon.1880 }
%union.anon.1880 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1881", %"class.WTF::Vector.1886" }
%"class.WTF::Vector.1881" = type { %"class.WTF::VectorBuffer.1882" }
%"class.WTF::VectorBuffer.1882" = type { %"class.WTF::VectorBufferBase.1883", [128 x i8] }
%"class.WTF::VectorBufferBase.1883" = type { i32*, i32, i32 }
%"class.WTF::Vector.1886" = type { %"class.WTF::VectorBuffer.1887" }
%"class.WTF::VectorBuffer.1887" = type { %"class.WTF::VectorBufferBase.1888", [128 x i8] }
%"class.WTF::VectorBufferBase.1888" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1891" = type { %"class.WTF::VectorBuffer.1892" }
%"class.WTF::VectorBuffer.1892" = type { %"class.WTF::VectorBufferBase.1893" }
%"class.WTF::VectorBufferBase.1893" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1896" = type { %"class.WTF::HashTable.1897" }
%"class.WTF::HashTable.1897" = type <{ %"struct.WTF::KeyValuePair.1900"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1900" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1901", %"class.WTF::Vector.1906" }
%"class.WTF::HashMap.1901" = type { %"class.WTF::HashTable.1902" }
%"class.WTF::HashTable.1902" = type <{ %"struct.WTF::KeyValuePair.1905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1905" = type opaque
%"class.WTF::Vector.1906" = type { %"class.WTF::VectorBuffer.1907" }
%"class.WTF::VectorBuffer.1907" = type { %"class.WTF::VectorBufferBase.1908" }
%"class.WTF::VectorBufferBase.1908" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1914" = type { %"class.std::__1::__compressed_pair.1915" }
%"class.std::__1::__compressed_pair.1915" = type { %"struct.std::__1::__compressed_pair_elem.1916" }
%"struct.std::__1::__compressed_pair_elem.1916" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1920" = type { %"class.WTF::VectorBuffer.1921" }
%"class.WTF::VectorBuffer.1921" = type { %"class.WTF::VectorBufferBase.1922" }
%"class.WTF::VectorBufferBase.1922" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1925 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1926" = type { %"class.blink::MemberBase.1927" }
%"class.blink::MemberBase.1927" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1928" = type { %"class.blink::MemberBase.1929" }
%"class.blink::MemberBase.1929" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1930" = type { %"class.blink::MemberBase.1931" }
%"class.blink::MemberBase.1931" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1932" = type { %"class.WTF::HashSet.1935" }
%"class.WTF::HashSet.1935" = type { %"class.WTF::HashTable.1936" }
%"class.WTF::HashTable.1936" = type <{ %"class.blink::WeakMember.1938"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1938" = type opaque
%"class.blink::HeapHashSet.1939" = type { %"class.WTF::HashSet.1942" }
%"class.WTF::HashSet.1942" = type { %"class.WTF::HashTable.1943" }
%"class.WTF::HashTable.1943" = type <{ %"class.blink::WeakMember.1945"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1945" = type opaque
%"class.std::__1::unique_ptr.1946" = type { %"class.std::__1::__compressed_pair.1947" }
%"class.std::__1::__compressed_pair.1947" = type { %"struct.std::__1::__compressed_pair_elem.1948" }
%"struct.std::__1::__compressed_pair_elem.1948" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1952" = type { %"class.std::__1::__compressed_pair.1953" }
%"class.std::__1::__compressed_pair.1953" = type { %"struct.std::__1::__compressed_pair_elem.1954" }
%"struct.std::__1::__compressed_pair_elem.1954" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.74", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1324" = type { %"class.blink::MemberBase.1325" }
%"class.blink::MemberBase.1325" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1326" = type { %"class.blink::MemberBase.1327" }
%"class.blink::MemberBase.1327" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1328" = type { %"class.blink::MemberBase.1329" }
%"class.blink::MemberBase.1329" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1332" = type { %"class.blink::MemberBase.1333" }
%"class.blink::MemberBase.1333" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1343", %"class.blink::HeapListHashSet.1354", %"class.blink::HeapListHashSet.1365", %"class.blink::HeapListHashSet.1376", %"class.blink::HeapListHashSet.1387", %"class.blink::HeapListHashSet.1398", %"class.blink::HeapListHashSet.1409", %"class.blink::HeapListHashSet.1420", %"class.blink::HeapListHashSet.1431", %"class.blink::HeapListHashSet.1442", %"class.blink::HeapListHashSet.1453", %"class.blink::HeapListHashSet.1464", %"class.blink::HeapListHashSet.1475", %"class.blink::HeapListHashSet.1486", %"class.blink::HeapListHashSet.1497", %"class.blink::HeapListHashSet.1508", %"class.blink::HeapListHashSet.1519", %"class.blink::HeapListHashSet.1530", %"class.blink::HeapListHashSet.1541" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1339", %"class.blink::Member.1341", %"class.blink::Member.1341", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1339" = type <{ %"class.blink::Member.1341"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1341" = type { %"class.blink::MemberBase.1342" }
%"class.blink::MemberBase.1342" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1555", %"class.blink::Member.1341", %"class.blink::Member.1341" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1343" = type { %"class.WTF::ListHashSet.base.1353", [7 x i8] }
%"class.WTF::ListHashSet.base.1353" = type <{ %"class.WTF::HashTable.1348", %"class.blink::Member.1350", %"class.blink::Member.1350", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1348" = type <{ %"class.blink::Member.1350"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1350" = type { %"class.blink::MemberBase.1351" }
%"class.blink::MemberBase.1351" = type { %"class.blink::HeapListHashSetNode.1352"* }
%"class.blink::HeapListHashSetNode.1352" = type { %"class.blink::Member.1709", %"class.blink::Member.1350", %"class.blink::Member.1350" }
%"class.blink::Member.1709" = type { %"class.blink::MemberBase.1710" }
%"class.blink::MemberBase.1710" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1354" = type { %"class.WTF::ListHashSet.base.1364", [7 x i8] }
%"class.WTF::ListHashSet.base.1364" = type <{ %"class.WTF::HashTable.1359", %"class.blink::Member.1361", %"class.blink::Member.1361", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1359" = type <{ %"class.blink::Member.1361"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1361" = type { %"class.blink::MemberBase.1362" }
%"class.blink::MemberBase.1362" = type { %"class.blink::HeapListHashSetNode.1363"* }
%"class.blink::HeapListHashSetNode.1363" = type { %"class.blink::Member.1705", %"class.blink::Member.1361", %"class.blink::Member.1361" }
%"class.blink::Member.1705" = type { %"class.blink::MemberBase.1706" }
%"class.blink::MemberBase.1706" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1365" = type { %"class.WTF::ListHashSet.base.1375", [7 x i8] }
%"class.WTF::ListHashSet.base.1375" = type <{ %"class.WTF::HashTable.1370", %"class.blink::Member.1372", %"class.blink::Member.1372", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1370" = type <{ %"class.blink::Member.1372"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1372" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::HeapListHashSetNode.1374"* }
%"class.blink::HeapListHashSetNode.1374" = type { %"class.blink::Member.1701", %"class.blink::Member.1372", %"class.blink::Member.1372" }
%"class.blink::Member.1701" = type { %"class.blink::MemberBase.1702" }
%"class.blink::MemberBase.1702" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1376" = type { %"class.WTF::ListHashSet.base.1386", [7 x i8] }
%"class.WTF::ListHashSet.base.1386" = type <{ %"class.WTF::HashTable.1381", %"class.blink::Member.1383", %"class.blink::Member.1383", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1381" = type <{ %"class.blink::Member.1383"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::HeapListHashSetNode.1385"* }
%"class.blink::HeapListHashSetNode.1385" = type { %"class.blink::Member.1697", %"class.blink::Member.1383", %"class.blink::Member.1383" }
%"class.blink::Member.1697" = type { %"class.blink::MemberBase.1698" }
%"class.blink::MemberBase.1698" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1387" = type { %"class.WTF::ListHashSet.base.1397", [7 x i8] }
%"class.WTF::ListHashSet.base.1397" = type <{ %"class.WTF::HashTable.1392", %"class.blink::Member.1394", %"class.blink::Member.1394", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1392" = type <{ %"class.blink::Member.1394"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::HeapListHashSetNode.1396"* }
%"class.blink::HeapListHashSetNode.1396" = type { %"class.blink::Member.1693", %"class.blink::Member.1394", %"class.blink::Member.1394" }
%"class.blink::Member.1693" = type { %"class.blink::MemberBase.1694" }
%"class.blink::MemberBase.1694" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1398" = type { %"class.WTF::ListHashSet.base.1408", [7 x i8] }
%"class.WTF::ListHashSet.base.1408" = type <{ %"class.WTF::HashTable.1403", %"class.blink::Member.1405", %"class.blink::Member.1405", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1403" = type <{ %"class.blink::Member.1405"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::HeapListHashSetNode.1407"* }
%"class.blink::HeapListHashSetNode.1407" = type { %"class.blink::Member.1689", %"class.blink::Member.1405", %"class.blink::Member.1405" }
%"class.blink::Member.1689" = type { %"class.blink::MemberBase.1690" }
%"class.blink::MemberBase.1690" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1409" = type { %"class.WTF::ListHashSet.base.1419", [7 x i8] }
%"class.WTF::ListHashSet.base.1419" = type <{ %"class.WTF::HashTable.1414", %"class.blink::Member.1416", %"class.blink::Member.1416", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1414" = type <{ %"class.blink::Member.1416"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::HeapListHashSetNode.1418"* }
%"class.blink::HeapListHashSetNode.1418" = type { %"class.blink::Member.1685", %"class.blink::Member.1416", %"class.blink::Member.1416" }
%"class.blink::Member.1685" = type { %"class.blink::MemberBase.1686" }
%"class.blink::MemberBase.1686" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1420" = type { %"class.WTF::ListHashSet.base.1430", [7 x i8] }
%"class.WTF::ListHashSet.base.1430" = type <{ %"class.WTF::HashTable.1425", %"class.blink::Member.1427", %"class.blink::Member.1427", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1425" = type <{ %"class.blink::Member.1427"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::HeapListHashSetNode.1429"* }
%"class.blink::HeapListHashSetNode.1429" = type { %"class.blink::Member.1681", %"class.blink::Member.1427", %"class.blink::Member.1427" }
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1431" = type { %"class.WTF::ListHashSet.base.1441", [7 x i8] }
%"class.WTF::ListHashSet.base.1441" = type <{ %"class.WTF::HashTable.1436", %"class.blink::Member.1438", %"class.blink::Member.1438", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1436" = type <{ %"class.blink::Member.1438"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1438" = type { %"class.blink::MemberBase.1439" }
%"class.blink::MemberBase.1439" = type { %"class.blink::HeapListHashSetNode.1440"* }
%"class.blink::HeapListHashSetNode.1440" = type { %"class.blink::Member.1677", %"class.blink::Member.1438", %"class.blink::Member.1438" }
%"class.blink::Member.1677" = type { %"class.blink::MemberBase.1678" }
%"class.blink::MemberBase.1678" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1442" = type { %"class.WTF::ListHashSet.base.1452", [7 x i8] }
%"class.WTF::ListHashSet.base.1452" = type <{ %"class.WTF::HashTable.1447", %"class.blink::Member.1449", %"class.blink::Member.1449", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1447" = type <{ %"class.blink::Member.1449"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::HeapListHashSetNode.1451"* }
%"class.blink::HeapListHashSetNode.1451" = type { %"class.blink::Member.1568", %"class.blink::Member.1449", %"class.blink::Member.1449" }
%"class.blink::HeapListHashSet.1453" = type { %"class.WTF::ListHashSet.base.1463", [7 x i8] }
%"class.WTF::ListHashSet.base.1463" = type <{ %"class.WTF::HashTable.1458", %"class.blink::Member.1460", %"class.blink::Member.1460", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1458" = type <{ %"class.blink::Member.1460"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1460" = type { %"class.blink::MemberBase.1461" }
%"class.blink::MemberBase.1461" = type { %"class.blink::HeapListHashSetNode.1462"* }
%"class.blink::HeapListHashSetNode.1462" = type { %"class.blink::Member.1671", %"class.blink::Member.1460", %"class.blink::Member.1460" }
%"class.blink::Member.1671" = type { %"class.blink::MemberBase.1672" }
%"class.blink::MemberBase.1672" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1464" = type { %"class.WTF::ListHashSet.base.1474", [7 x i8] }
%"class.WTF::ListHashSet.base.1474" = type <{ %"class.WTF::HashTable.1469", %"class.blink::Member.1471", %"class.blink::Member.1471", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1469" = type <{ %"class.blink::Member.1471"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::HeapListHashSetNode.1473"* }
%"class.blink::HeapListHashSetNode.1473" = type { %"class.blink::Member.1667", %"class.blink::Member.1471", %"class.blink::Member.1471" }
%"class.blink::Member.1667" = type { %"class.blink::MemberBase.1668" }
%"class.blink::MemberBase.1668" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1475" = type { %"class.WTF::ListHashSet.base.1485", [7 x i8] }
%"class.WTF::ListHashSet.base.1485" = type <{ %"class.WTF::HashTable.1480", %"class.blink::Member.1482", %"class.blink::Member.1482", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1480" = type <{ %"class.blink::Member.1482"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1482" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::HeapListHashSetNode.1484"* }
%"class.blink::HeapListHashSetNode.1484" = type { %"class.blink::Member.1663", %"class.blink::Member.1482", %"class.blink::Member.1482" }
%"class.blink::Member.1663" = type { %"class.blink::MemberBase.1664" }
%"class.blink::MemberBase.1664" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1486" = type { %"class.WTF::ListHashSet.base.1496", [7 x i8] }
%"class.WTF::ListHashSet.base.1496" = type <{ %"class.WTF::HashTable.1491", %"class.blink::Member.1493", %"class.blink::Member.1493", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1491" = type <{ %"class.blink::Member.1493"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::HeapListHashSetNode.1495"* }
%"class.blink::HeapListHashSetNode.1495" = type { %"class.blink::Member.1659", %"class.blink::Member.1493", %"class.blink::Member.1493" }
%"class.blink::Member.1659" = type { %"class.blink::MemberBase.1660" }
%"class.blink::MemberBase.1660" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1497" = type { %"class.WTF::ListHashSet.base.1507", [7 x i8] }
%"class.WTF::ListHashSet.base.1507" = type <{ %"class.WTF::HashTable.1502", %"class.blink::Member.1504", %"class.blink::Member.1504", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1502" = type <{ %"class.blink::Member.1504"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1504" = type { %"class.blink::MemberBase.1505" }
%"class.blink::MemberBase.1505" = type { %"class.blink::HeapListHashSetNode.1506"* }
%"class.blink::HeapListHashSetNode.1506" = type { %"class.blink::Member.1655", %"class.blink::Member.1504", %"class.blink::Member.1504" }
%"class.blink::Member.1655" = type { %"class.blink::MemberBase.1656" }
%"class.blink::MemberBase.1656" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1508" = type { %"class.WTF::ListHashSet.base.1518", [7 x i8] }
%"class.WTF::ListHashSet.base.1518" = type <{ %"class.WTF::HashTable.1513", %"class.blink::Member.1515", %"class.blink::Member.1515", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1513" = type <{ %"class.blink::Member.1515"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::HeapListHashSetNode.1517"* }
%"class.blink::HeapListHashSetNode.1517" = type { %"class.blink::Member.1651", %"class.blink::Member.1515", %"class.blink::Member.1515" }
%"class.blink::Member.1651" = type { %"class.blink::MemberBase.1652" }
%"class.blink::MemberBase.1652" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1519" = type { %"class.WTF::ListHashSet.base.1529", [7 x i8] }
%"class.WTF::ListHashSet.base.1529" = type <{ %"class.WTF::HashTable.1524", %"class.blink::Member.1526", %"class.blink::Member.1526", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1524" = type <{ %"class.blink::Member.1526"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1526" = type { %"class.blink::MemberBase.1527" }
%"class.blink::MemberBase.1527" = type { %"class.blink::HeapListHashSetNode.1528"* }
%"class.blink::HeapListHashSetNode.1528" = type { %"class.blink::Member.1647", %"class.blink::Member.1526", %"class.blink::Member.1526" }
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1530" = type { %"class.WTF::ListHashSet.base.1540", [7 x i8] }
%"class.WTF::ListHashSet.base.1540" = type <{ %"class.WTF::HashTable.1535", %"class.blink::Member.1537", %"class.blink::Member.1537", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1535" = type <{ %"class.blink::Member.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1537" = type { %"class.blink::MemberBase.1538" }
%"class.blink::MemberBase.1538" = type { %"class.blink::HeapListHashSetNode.1539"* }
%"class.blink::HeapListHashSetNode.1539" = type { %"class.blink::Member.1570", %"class.blink::Member.1537", %"class.blink::Member.1537" }
%"class.blink::HeapListHashSet.1541" = type { %"class.WTF::ListHashSet.base.1551", [7 x i8] }
%"class.WTF::ListHashSet.base.1551" = type <{ %"class.WTF::HashTable.1546", %"class.blink::Member.1548", %"class.blink::Member.1548", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1546" = type <{ %"class.blink::Member.1548"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1548" = type { %"class.blink::MemberBase.1549" }
%"class.blink::MemberBase.1549" = type { %"class.blink::HeapListHashSetNode.1550"* }
%"class.blink::HeapListHashSetNode.1550" = type { %"class.blink::Member.1553", %"class.blink::Member.1548", %"class.blink::Member.1548" }
%class.scoped_refptr.1552 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.976", %"class.WTF::Vector.998", i32, [4 x i8], %"class.blink::HeapHashMap.1559", i32, i8, [3 x i8] }>
%"class.blink::HeapHashMap.1559" = type { %"class.WTF::HashMap.1562" }
%"class.WTF::HashMap.1562" = type { %"class.WTF::HashTable.1563" }
%"class.WTF::HashTable.1563" = type <{ %"struct.WTF::KeyValuePair.1565"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1565" = type opaque
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1568" = type { %"class.blink::MemberBase.1569" }
%"class.blink::MemberBase.1569" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1570" = type { %"class.blink::MemberBase.1571" }
%"class.blink::MemberBase.1571" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.1574" = type { %"class.blink::MemberBase.1575" }
%"class.blink::MemberBase.1575" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1576" = type { %"class.blink::MemberBase.1577" }
%"class.blink::MemberBase.1577" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1578" = type { %"class.blink::Member.1579" }
%"class.blink::Member.1579" = type { %"class.blink::MemberBase.1580" }
%"class.blink::MemberBase.1580" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2419" }
%"class.mojo::Remote.2419" = type { %"class.mojo::internal::InterfacePtrState.2420" }
%"class.mojo::internal::InterfacePtrState.2420" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2421" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.383, %"class.std::__1::unique_ptr.487", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.377, i32 }>
%class.scoped_refptr.383 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.377, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.453", %"class.absl::optional.458", %"class.absl::optional.414", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.478", i8, [7 x i8], %class.scoped_refptr.377, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.384" }>
%"class.base::RefCountedThreadSafe.384" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.385", %"class.std::__1::unique_ptr.391", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.397" }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.397" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.377, %"class.std::__1::unique_ptr.398", %"class.absl::optional.404", %"struct.std::__1::atomic.358", i8, i8, i8, i8, i32, i32, %"class.absl::optional.414", %"class.std::__1::unique_ptr.419", i8, i64, %class.scoped_refptr.449, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.452" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.377, i8, %"class.mojo::ScopedHandleBase.378", %class.scoped_refptr.379, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.382" }
%"class.mojo::ScopedHandleBase.378" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.379 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.382" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.404" = type { %"class.absl::optional_internal::optional_data.405" }
%"class.absl::optional_internal::optional_data.405" = type { %"class.absl::optional_internal::optional_data_base.406" }
%"class.absl::optional_internal::optional_data_base.406" = type { %"class.absl::optional_internal::optional_data_dtor_base.407" }
%"class.absl::optional_internal::optional_data_dtor_base.407" = type { i8, %union.anon.408 }
%union.anon.408 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.409", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.409" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.422", i8, i64, %class.scoped_refptr.423, %class.scoped_refptr.445 }
%"class.base::RepeatingCallback.422" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.423 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.424", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.434", i8, [7 x i8] }>
%"class.base::RefCounted.424" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.425 }
%class.scoped_refptr.425 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.426", %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"class.std::__1::map.434" = type { %"class.std::__1::__tree.435" }
%"class.std::__1::__tree.435" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.436", %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%class.scoped_refptr.445 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.449 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.450 }
%class.scoped_refptr.450 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.537", [4 x i8], %"class.base::RepeatingCallback.490", %class.scoped_refptr.377, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.537" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.452" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.453" = type { %"class.absl::optional_internal::optional_data.454" }
%"class.absl::optional_internal::optional_data.454" = type { %"class.absl::optional_internal::optional_data_base.455" }
%"class.absl::optional_internal::optional_data_base.455" = type { %"class.absl::optional_internal::optional_data_dtor_base.456" }
%"class.absl::optional_internal::optional_data_dtor_base.456" = type { i8, %union.anon.457 }
%union.anon.457 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.458" = type { %"class.absl::optional_internal::optional_data.459" }
%"class.absl::optional_internal::optional_data.459" = type { %"class.absl::optional_internal::optional_data_base.460" }
%"class.absl::optional_internal::optional_data_base.460" = type { %"class.absl::optional_internal::optional_data_dtor_base.461" }
%"class.absl::optional_internal::optional_data_dtor_base.461" = type { i8, [7 x i8], %union.anon.462 }
%union.anon.462 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.414" = type { %"class.absl::optional_internal::optional_data.415" }
%"class.absl::optional_internal::optional_data.415" = type { %"class.absl::optional_internal::optional_data_base.416" }
%"class.absl::optional_internal::optional_data_base.416" = type { %"class.absl::optional_internal::optional_data_dtor_base.417" }
%"class.absl::optional_internal::optional_data_dtor_base.417" = type { i8, %union.anon.418 }
%union.anon.418 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.463 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.463 = type { %"class.std::__1::map.466" }
%"class.std::__1::map.466" = type { %"class.std::__1::__tree.467" }
%"class.std::__1::__tree.467" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.468", %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.477"*, i64 }
%"class.std::__1::unique_ptr.477" = type opaque
%"class.std::__1::map.478" = type { %"class.std::__1::__tree.479" }
%"class.std::__1::__tree.479" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.480", %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.490", %"class.base::OnceCallback.491", %"class.absl::optional.69", %"class.absl::optional.492", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.499", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.507", %"class.std::__1::map.518", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.527", i8, %class.scoped_refptr.377, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.528" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.491" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.492" = type { %"class.absl::optional_internal::optional_data.493" }
%"class.absl::optional_internal::optional_data.493" = type { %"class.absl::optional_internal::optional_data_base.494" }
%"class.absl::optional_internal::optional_data_base.494" = type { %"class.absl::optional_internal::optional_data_dtor_base.495" }
%"class.absl::optional_internal::optional_data_dtor_base.495" = type { i8, %union.anon.496 }
%union.anon.496 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.377, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.497" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::WeakPtrFactory.497" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.498 }
%class.scoped_refptr.498 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.502", %class.scoped_refptr.503 }
%"class.base::RepeatingCallback.502" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.503 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.384", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.507" = type { %"class.std::__1::__tree.508" }
%"class.std::__1::__tree.508" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.509", %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"class.std::__1::map.518" = type { %"class.std::__1::__tree.519" }
%"class.std::__1::__tree.519" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"class.base::OnceCallback.527" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.528" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.377 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.2421" = type { %"class.std::__1::__compressed_pair.2422" }
%"class.std::__1::__compressed_pair.2422" = type { %"struct.std::__1::__compressed_pair_elem.2423" }
%"struct.std::__1::__compressed_pair_elem.2423" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1581" = type { %"class.std::__1::__compressed_pair.1582" }
%"class.std::__1::__compressed_pair.1582" = type { %"struct.std::__1::__compressed_pair_elem.1583" }
%"struct.std::__1::__compressed_pair_elem.1583" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1587" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1588" = type { %"class.std::__1::__compressed_pair.1589" }
%"class.std::__1::__compressed_pair.1589" = type { %"struct.std::__1::__compressed_pair_elem.1590" }
%"struct.std::__1::__compressed_pair_elem.1590" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1594" = type { %"class.std::__1::__compressed_pair.1595" }
%"class.std::__1::__compressed_pair.1595" = type { %"struct.std::__1::__compressed_pair_elem.1596" }
%"struct.std::__1::__compressed_pair_elem.1596" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote.1600" = type { %"class.blink::Member.1601" }
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2429" }
%"class.mojo::AssociatedRemote.2429" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2430" }
%"class.mojo::internal::AssociatedInterfacePtrState.2430" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2431" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.487", i32 }>
%"class.std::__1::unique_ptr.2431" = type { %"class.std::__1::__compressed_pair.2432" }
%"class.std::__1::__compressed_pair.2432" = type { %"struct.std::__1::__compressed_pair_elem.2433" }
%"struct.std::__1::__compressed_pair_elem.2433" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1603" = type { %"class.blink::Member.1604" }
%"class.blink::Member.1604" = type { %"class.blink::MemberBase.1605" }
%"class.blink::MemberBase.1605" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2439" }
%"class.mojo::AssociatedRemote.2439" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2440" }
%"class.mojo::internal::AssociatedInterfacePtrState.2440" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2441" }
%"class.std::__1::unique_ptr.2441" = type { %"class.std::__1::__compressed_pair.2442" }
%"class.std::__1::__compressed_pair.2442" = type { %"struct.std::__1::__compressed_pair_elem.2443" }
%"struct.std::__1::__compressed_pair_elem.2443" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1606" }
%"class.blink::Member.1606" = type { %"class.blink::MemberBase.1607" }
%"class.blink::MemberBase.1607" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2449", %"class.blink::Member.976", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2449" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2450" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.487" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2450" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1608" = type { %"class.blink::Member.1609" }
%"class.blink::Member.1609" = type { %"class.blink::MemberBase.1610" }
%"class.blink::MemberBase.1610" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2453", %"class.blink::Member.976", %"class.mojo::AssociatedReceiver.2454" }
%"class.blink::ThreadState::PrefinalizerRegistration.2453" = type { i8 }
%"class.mojo::AssociatedReceiver.2454" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2455" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2455" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1611" }
%"class.blink::Member.1611" = type { %"class.blink::MemberBase.1612" }
%"class.blink::MemberBase.1612" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2458", %"class.blink::Member.976", %"class.mojo::Receiver.2459" }
%"class.blink::ThreadState::PrefinalizerRegistration.2458" = type { i8 }
%"class.mojo::Receiver.2459" = type { %"class.mojo::internal::BindingState.2460" }
%"class.mojo::internal::BindingState.2460" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.383, %"class.std::__1::unique_ptr.487", %"class.base::WeakPtrFactory.532" }
%"class.base::WeakPtrFactory.532" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1613" = type { %"class.blink::Member.1614" }
%"class.blink::Member.1614" = type { %"class.blink::MemberBase.1615" }
%"class.blink::MemberBase.1615" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2463", %"class.blink::Member.976", %"class.mojo::AssociatedReceiver.2464" }
%"class.blink::ThreadState::PrefinalizerRegistration.2463" = type { i8 }
%"class.mojo::AssociatedReceiver.2464" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2465" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2465" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1622" = type { %"class.blink::MemberBase.1623" }
%"class.blink::MemberBase.1623" = type { %"class.blink::HeapHashMap.1624"* }
%"class.blink::HeapHashMap.1624" = type opaque
%"class.mojo::StructPtr.1625" = type { %"class.std::__1::unique_ptr.1626" }
%"class.std::__1::unique_ptr.1626" = type { %"class.std::__1::__compressed_pair.1627" }
%"class.std::__1::__compressed_pair.1627" = type { %"struct.std::__1::__compressed_pair_elem.1628" }
%"struct.std::__1::__compressed_pair_elem.1628" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1629", %"class.mojo::InlinedStructPtr.1630" }
%"class.mojo::InlinedStructPtr.1629" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1630" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1636" = type { %"class.absl::optional_internal::optional_data.1637" }
%"class.absl::optional_internal::optional_data.1637" = type { %"class.absl::optional_internal::optional_data_base.1638" }
%"class.absl::optional_internal::optional_data_base.1638" = type { %"class.absl::optional_internal::optional_data_dtor_base.1639" }
%"class.absl::optional_internal::optional_data_dtor_base.1639" = type { i8, %union.anon.1640 }
%union.anon.1640 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.663", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1267" }
%"class.std::__1::vector.1267" = type { %"class.std::__1::__vector_base.1268" }
%"class.std::__1::__vector_base.1268" = type { %"struct.std::__1::pair.1269"*, %"struct.std::__1::pair.1269"*, %"class.std::__1::__compressed_pair.1270" }
%"struct.std::__1::pair.1269" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1270" = type { %"struct.std::__1::__compressed_pair_elem.1271" }
%"struct.std::__1::__compressed_pair_elem.1271" = type { %"struct.std::__1::pair.1269"* }
%"class.blink::Member.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1277" = type { %"class.absl::optional_internal::optional_data.1278" }
%"class.absl::optional_internal::optional_data.1278" = type { %"class.absl::optional_internal::optional_data_base.1279" }
%"class.absl::optional_internal::optional_data_base.1279" = type { %"class.absl::optional_internal::optional_data_dtor_base.1280" }
%"class.absl::optional_internal::optional_data_dtor_base.1280" = type { i8, %union.anon.1281 }
%union.anon.1281 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1282" }
%"class.blink::HeapHashSet.1282" = type { %"class.WTF::HashSet.1285" }
%"class.WTF::HashSet.1285" = type { %"class.WTF::HashTable.1286" }
%"class.WTF::HashTable.1286" = type <{ %"class.blink::WeakMember.1288"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1288" = type opaque
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.671" = type { %"class.WTF::VectorBuffer.672" }
%"class.WTF::VectorBuffer.672" = type { %"class.WTF::VectorBufferBase.673" }
%"class.WTF::VectorBufferBase.673" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.674" }
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.682", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.740", i32, i8, [3 x i8], %"class.blink::HeapVector.742", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.750", %"class.blink::Member.765", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.774", %"class.blink::Member.829", %"class.blink::Member.831", i8 }>
%"class.blink::Supplementable.682" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.683" }
%"class.blink::HeapHashMap.683" = type { %"class.WTF::HashMap.686" }
%"class.WTF::HashMap.686" = type { %"class.WTF::HashTable.687" }
%"class.WTF::HashTable.687" = type <{ %"struct.WTF::KeyValuePair.689"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.689" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.690" }
%"class.blink::Supplementable.690" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.691" }
%"class.blink::HeapHashMap.691" = type { %"class.WTF::HashMap.694" }
%"class.WTF::HashMap.694" = type { %"class.WTF::HashTable.695" }
%"class.WTF::HashTable.695" = type <{ %"struct.WTF::KeyValuePair.697"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.697" = type { i8*, %"class.blink::Member.2384" }
%"class.blink::Member.2384" = type { %"class.blink::MemberBase.2385" }
%"class.blink::MemberBase.2385" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2386" }
%"class.blink::Member.2386" = type { %"class.blink::MemberBase.2387" }
%"class.blink::MemberBase.2387" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.698, %"class.std::__1::unique_ptr.701", %"class.std::__1::unique_ptr.701", %"class.std::__1::unique_ptr.728", %"class.std::__1::unique_ptr.728", %"class.blink::Member.734", i32, [4 x i8], %"class.WTF::HashSet.736", i32, i32 }
%class.scoped_refptr.698 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.699", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.98", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.32 }
%"class.WTF::RefCounted.699" = type { %"class.base::RefCounted.700" }
%"class.base::RefCounted.700" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.704", %"class.std::__1::map.715", %"class.std::__1::map.724"* }
%"class.std::__1::map.704" = type { %"class.std::__1::__tree.705" }
%"class.std::__1::__tree.705" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.706", %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"class.std::__1::map.715" = type { %"class.std::__1::__tree.716" }
%"class.std::__1::__tree.716" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.717", %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"class.std::__1::map.724" = type opaque
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.736" = type { %"class.WTF::HashTable.737" }
%"class.WTF::HashTable.737" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.740" = type { %"class.blink::MemberBase.741" }
%"class.blink::MemberBase.741" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.742" = type { %"class.WTF::Vector.745" }
%"class.WTF::Vector.745" = type { %"class.WTF::VectorBuffer.746" }
%"class.WTF::VectorBuffer.746" = type { %"class.WTF::VectorBufferBase.747" }
%"class.WTF::VectorBufferBase.747" = type { %"class.blink::Member.748"*, i32, i32 }
%"class.blink::Member.748" = type opaque
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type { %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.WTF::HashMap.754", %"class.WTF::HashSet.759", i8, %"class.blink::HeapMojoAssociatedRemote" }
%"class.WTF::HashMap.754" = type { %"class.WTF::HashTable.755" }
%"class.WTF::HashTable.755" = type <{ %"struct.WTF::KeyValuePair.758"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.758" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.763" }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BlobURLStore, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BlobURLStore, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2390" }
%"class.mojo::AssociatedRemote.2390" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2391" }
%"class.mojo::internal::AssociatedInterfacePtrState.2391" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2392" }
%"class.std::__1::unique_ptr.2392" = type { %"class.std::__1::__compressed_pair.2393" }
%"class.std::__1::__compressed_pair.2393" = type { %"struct.std::__1::__compressed_pair_elem.2394" }
%"struct.std::__1::__compressed_pair_elem.2394" = type { %"class.blink::mojom::blink::BlobURLStoreProxy"* }
%"class.blink::mojom::blink::BlobURLStoreProxy" = type { %"class.blink::mojom::blink::BlobURLStore", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BlobURLStore" = type { i32 (...)** }
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.767", i32, i32 }
%"class.blink::HeapHashMap.767" = type { %"class.WTF::HashMap.770" }
%"class.WTF::HashMap.770" = type { %"class.WTF::HashTable.771" }
%"class.WTF::HashTable.771" = type <{ %"struct.WTF::KeyValuePair.773"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.773" = type opaque
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.777", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.777" = type { %"class.std::__1::unique_ptr.778" }
%"class.std::__1::unique_ptr.778" = type { %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.781" }
%"class.WTF::Vector.781" = type { %"class.WTF::VectorBuffer.782" }
%"class.WTF::VectorBuffer.782" = type { %"class.WTF::VectorBufferBase.783" }
%"class.WTF::VectorBufferBase.783" = type { %"class.mojo::StructPtr.784"*, i32, i32 }
%"class.mojo::StructPtr.784" = type { %"class.std::__1::unique_ptr.785" }
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.788", %"class.WTF::HashMap.795", %"class.WTF::HashMap.800", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.35", i32, %"class.mojo::StructPtr.805", %"class.WTF::Vector.35" }
%"class.mojo::StructPtr.788" = type { %"class.std::__1::unique_ptr.789" }
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.795" = type { %"class.WTF::HashTable.796" }
%"class.WTF::HashTable.796" = type <{ %"struct.WTF::KeyValuePair.799"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.799" = type opaque
%"class.WTF::HashMap.800" = type { %"class.WTF::HashTable.801" }
%"class.WTF::HashTable.801" = type <{ %"struct.WTF::KeyValuePair.804"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.804" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.805" = type { %"class.std::__1::unique_ptr.806" }
%"class.std::__1::unique_ptr.806" = type { %"class.std::__1::__compressed_pair.807" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.35", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.820" }
%"class.std::__1::unique_ptr.820" = type { %"class.std::__1::__compressed_pair.821" }
%"class.std::__1::__compressed_pair.821" = type { %"struct.std::__1::__compressed_pair_elem.822" }
%"struct.std::__1::__compressed_pair_elem.822" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.829" = type { %"class.blink::MemberBase.830" }
%"class.blink::MemberBase.830" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.831" = type { %"class.blink::MemberBase.832" }
%"class.blink::MemberBase.832" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.765", i8, [7 x i8], %"class.WTF::Vector.781", %"class.blink::HeapVector.835", i8, [7 x i8], %"class.WTF::HashSet.736", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.835" = type { %"class.WTF::Vector.838" }
%"class.WTF::Vector.838" = type { %"class.WTF::VectorBuffer.839" }
%"class.WTF::VectorBuffer.839" = type { %"class.WTF::VectorBufferBase.840" }
%"class.WTF::VectorBufferBase.840" = type { %"class.blink::Member.841"*, i32, i32 }
%"class.blink::Member.841" = type opaque
%"class.blink::Supplementable.843" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.844" }
%"class.blink::HeapHashMap.844" = type { %"class.WTF::HashMap.847" }
%"class.WTF::HashMap.847" = type { %"class.WTF::HashTable.848" }
%"class.WTF::HashTable.848" = type <{ %"struct.WTF::KeyValuePair.850"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.850" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.851" = type { i8 }
%"class.blink::Member.852" = type { %"class.blink::MemberBase.853" }
%"class.blink::MemberBase.853" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.854" = type { %"class.blink::MemberBase.855" }
%"class.blink::MemberBase.855" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.858" = type { %"class.blink::MemberBase.859" }
%"class.blink::MemberBase.859" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.860" = type { %"class.blink::MemberBase.861" }
%"class.blink::MemberBase.861" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.864" = type { %"class.blink::MemberBase.865" }
%"class.blink::MemberBase.865" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.868" = type { %"class.blink::MemberBase.869" }
%"class.blink::MemberBase.869" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.874 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.875", [4 x i8], %"class.std::__1::unique_ptr.877", i64, %"class.WTF::Vector.881", %"class.WTF::Vector.886", %"class.WTF::Vector.892", %"class.WTF::Vector.910", %class.scoped_refptr.698, %"class.WTF::HashMap.916", %"class.WTF::Vector.921", %"class.WTF::Vector.881", %"class.WTF::Vector.927", %"class.WTF::HashMap.933", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.875" = type { %"class.base::RefCountedThreadSafe.876" }
%"class.base::RefCountedThreadSafe.876" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { i8* }
%"class.WTF::Vector.886" = type { %"class.WTF::VectorBuffer.887" }
%"class.WTF::VectorBuffer.887" = type { %"class.WTF::VectorBufferBase.888", [8 x i8] }
%"class.WTF::VectorBufferBase.888" = type { %class.scoped_refptr.889*, i32, i32 }
%class.scoped_refptr.889 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.892" = type { %"class.WTF::VectorBuffer.893" }
%"class.WTF::VectorBuffer.893" = type { %"class.WTF::VectorBufferBase.894" }
%"class.WTF::VectorBufferBase.894" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.896", %"class.std::__1::unique_ptr.902" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.895 }
%class.scoped_refptr.895 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.910" = type { %"class.WTF::VectorBuffer.911" }
%"class.WTF::VectorBuffer.911" = type { %"class.WTF::VectorBufferBase.912" }
%"class.WTF::VectorBufferBase.912" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.913", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.913" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.916" = type { %"class.WTF::HashTable.917" }
%"class.WTF::HashTable.917" = type <{ %"struct.WTF::KeyValuePair.920"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.920" = type opaque
%"class.WTF::Vector.921" = type { %"class.WTF::VectorBuffer.922" }
%"class.WTF::VectorBuffer.922" = type { %"class.WTF::VectorBufferBase.923" }
%"class.WTF::VectorBufferBase.923" = type { %"class.mojo::ScopedHandleBase.924"*, i32, i32 }
%"class.mojo::ScopedHandleBase.924" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.881" = type { %"class.WTF::VectorBuffer.882" }
%"class.WTF::VectorBuffer.882" = type { %"class.WTF::VectorBufferBase.883", [16 x i8] }
%"class.WTF::VectorBufferBase.883" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.927" = type { %"class.WTF::VectorBuffer.928" }
%"class.WTF::VectorBuffer.928" = type { %"class.WTF::VectorBufferBase.929" }
%"class.WTF::VectorBufferBase.929" = type { %"class.mojo::PendingRemote.930"*, i32, i32 }
%"class.mojo::PendingRemote.930" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.933" = type { %"class.WTF::HashTable.934" }
%"class.WTF::HashTable.934" = type <{ %"struct.WTF::KeyValuePair.937"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.937" = type { i8**, %"class.std::__1::unique_ptr.2398" }
%"class.std::__1::unique_ptr.2398" = type { %"class.std::__1::__compressed_pair.2399" }
%"class.std::__1::__compressed_pair.2399" = type { %"struct.std::__1::__compressed_pair_elem.2400" }
%"struct.std::__1::__compressed_pair_elem.2400" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.938" = type { %"class.WTF::HashSet.941" }
%"class.WTF::HashSet.941" = type { %"class.WTF::HashTable.942" }
%"class.WTF::HashTable.942" = type <{ %"class.blink::WeakMember.944"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.944" = type opaque
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.947", %"class.blink::Member.947", %"class.blink::Member.949", %"class.blink::Member.951", %"class.base::TimeTicks" }
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.949" = type { %"class.blink::MemberBase.950" }
%"class.blink::MemberBase.950" = type { %"class.blink::Event"* }
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.953" = type { %"class.WTF::HashMap.956" }
%"class.WTF::HashMap.956" = type { %"class.WTF::HashTable.957" }
%"class.WTF::HashTable.957" = type <{ %"struct.WTF::KeyValuePair.959"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.959" = type opaque
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.972" = type { %"class.blink::MemberBase.973" }
%"class.blink::MemberBase.973" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.976", %"class.blink::CachedTextInputInfo", %"class.blink::Member.987", %"class.blink::Member.989", i8, i32 }
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.978", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.980", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.980" = type { %"class.WTF::HashMap.983" }
%"class.WTF::HashMap.983" = type { %"class.WTF::HashTable.984" }
%"class.WTF::HashTable.984" = type <{ %"struct.WTF::KeyValuePair.986"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.986" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.543", i32, i32 }
%"class.blink::Member.989" = type { %"class.blink::MemberBase.990" }
%"class.blink::MemberBase.990" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.661", %"class.blink::Member.1253", %"class.blink::Member.1255" }
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.1254" }
%"class.blink::MemberBase.1254" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.993" = type { %"class.blink::MemberBase.994" }
%"class.blink::MemberBase.994" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.661", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1249" }
%"class.blink::Member.1249" = type { %"class.blink::MemberBase.1250" }
%"class.blink::MemberBase.1250" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.995" = type { %"class.blink::MemberBase.996" }
%"class.blink::MemberBase.996" = type { %"class.blink::HeapHashMap.997"* }
%"class.blink::HeapHashMap.997" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1003" = type { %"class.WTF::HashTable.1004" }
%"class.WTF::HashTable.1004" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1007" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1010" }
%"class.WTF::VectorBuffer.1010" = type { %"class.WTF::VectorBufferBase.1011" }
%"class.WTF::VectorBufferBase.1011" = type { i64*, i32, i32 }
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1024" = type { %"class.blink::MemberBase.1025" }
%"class.blink::MemberBase.1025" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1026" = type { %"class.blink::MemberBase.1027" }
%"class.blink::MemberBase.1027" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.614", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.616, %"class.WTF::Vector.617", %"class.WTF::Vector.617", %"class.blink::Member.543", %"class.blink::Member.622", %"class.blink::HeapHashSet.626", %"class.blink::Member.129", %"class.WTF::HashSet.633", %"class.WTF::TextPosition", %"class.blink::Member.637", %"class.blink::HeapVector.639", %"class.blink::Member.646" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.616 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.617" = type { %"class.WTF::VectorBuffer.618" }
%"class.WTF::VectorBuffer.618" = type { %"class.WTF::VectorBufferBase.619" }
%"class.WTF::VectorBufferBase.619" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.622" = type { %"class.blink::MemberBase.623" }
%"class.blink::MemberBase.623" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.624" }
%"class.blink::Member.624" = type { %"class.blink::MemberBase.625" }
%"class.blink::MemberBase.625" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.626" = type { %"class.WTF::HashSet.629" }
%"class.WTF::HashSet.629" = type { %"class.WTF::HashTable.630" }
%"class.WTF::HashTable.630" = type <{ %"class.blink::WeakMember.632"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.632" = type { %"class.blink::MemberBase.546" }
%"class.WTF::HashSet.633" = type { %"class.WTF::HashTable.634" }
%"class.WTF::HashTable.634" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.637" = type { %"class.blink::MemberBase.638" }
%"class.blink::MemberBase.638" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.639" = type { %"class.WTF::Vector.642" }
%"class.WTF::Vector.642" = type { %"class.WTF::VectorBuffer.643" }
%"class.WTF::VectorBuffer.643" = type { %"class.WTF::VectorBufferBase.644" }
%"class.WTF::VectorBufferBase.644" = type { %"class.blink::Member.622"*, i32, i32 }
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1028" = type { %"class.WTF::VectorBuffer.1029" }
%"class.WTF::VectorBuffer.1029" = type { %"class.WTF::VectorBufferBase.1030" }
%"class.WTF::VectorBufferBase.1030" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.165 }
%"class.blink::Member.987" = type { %"class.blink::MemberBase.988" }
%"class.blink::MemberBase.988" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.129", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.543", %"class.blink::Member.543", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1034" }
%"class.blink::HeapHashMap.1034" = type { %"class.WTF::HashMap.1037" }
%"class.WTF::HashMap.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"struct.WTF::KeyValuePair.1040"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1040" = type opaque
%"class.blink::Member.1041" = type { %"class.blink::MemberBase.1042" }
%"class.blink::MemberBase.1042" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1043" = type { %"class.WTF::HashSet.1046" }
%"class.WTF::HashSet.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"class.blink::WeakMember.1049"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1049" = type opaque
%"class.blink::HeapHashSet.1050" = type { %"class.WTF::HashSet.1053" }
%"class.WTF::HashSet.1053" = type { %"class.WTF::HashTable.1054" }
%"class.WTF::HashTable.1054" = type <{ %"class.blink::WeakMember.1056"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1056" = type opaque
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.1058" }
%"class.blink::MemberBase.1058" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1061" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.545", %"class.blink::HeapVector.606" }
%"class.blink::Member.1063" = type { %"class.blink::MemberBase.1064" }
%"class.blink::MemberBase.1064" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1067" = type { %"class.WTF::HashMap.1070" }
%"class.WTF::HashMap.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"struct.WTF::KeyValuePair.1073"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1073" = type opaque
%"class.WTF::Vector.1074" = type { %"class.WTF::VectorBuffer.1075" }
%"class.WTF::VectorBuffer.1075" = type { %"class.WTF::VectorBufferBase.1076" }
%"class.WTF::VectorBufferBase.1076" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.568" = type { %"class.blink::MemberBase.569" }
%"class.blink::MemberBase.569" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.573" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.570 }
%class.scoped_refptr.570 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.571", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.571" = type { %"class.base::RefCounted.572" }
%"class.base::RefCounted.572" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.577", %"class.blink::Member.579", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.577" = type { %"class.WTF::SingleThreadedBitField.578" }
%"class.WTF::SingleThreadedBitField.578" = type { i32 }
%"class.blink::Member.579" = type { %"class.blink::MemberBase.580" }
%"class.blink::MemberBase.580" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.581 }
%class.scoped_refptr.581 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.582", %"class.WTF::AtomicString", %"class.WTF::Vector.584" }
%"class.WTF::RefCounted.582" = type { %"class.base::RefCounted.583" }
%"class.base::RefCounted.583" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.59", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1085" = type { %"class.blink::MemberBase.1086" }
%"class.blink::MemberBase.1086" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1087" = type { %"class.WTF::Vector.1090" }
%"class.WTF::Vector.1090" = type { %"class.WTF::VectorBuffer.1091" }
%"class.WTF::VectorBuffer.1091" = type { %"class.WTF::VectorBufferBase.1092" }
%"class.WTF::VectorBufferBase.1092" = type { %"class.blink::Member.1093"*, i32, i32 }
%"class.blink::Member.1093" = type opaque
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1101" = type { %"class.WTF::HashSet.1104" }
%"class.WTF::HashSet.1104" = type { %"class.WTF::HashTable.1105" }
%"class.WTF::HashTable.1105" = type <{ %"class.blink::WeakMember.1107"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1107" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1108", i32, [4 x i8] }>
%"class.WTF::Vector.1108" = type { %"class.WTF::VectorBuffer.1109" }
%"class.WTF::VectorBuffer.1109" = type { %"class.WTF::VectorBufferBase.1110" }
%"class.WTF::VectorBufferBase.1110" = type { %"struct.std::__1::pair.1111"*, i32, i32 }
%"struct.std::__1::pair.1111" = type opaque
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1116" = type { %"class.WTF::VectorBuffer.1117" }
%"class.WTF::VectorBuffer.1117" = type { %"class.WTF::VectorBufferBase.1118" }
%"class.WTF::VectorBufferBase.1118" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1121" = type { %"class.std::__1::__compressed_pair.1122" }
%"class.std::__1::__compressed_pair.1122" = type { %"struct.std::__1::__compressed_pair_elem.1123" }
%"struct.std::__1::__compressed_pair_elem.1123" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.588" = type { %"class.WTF::Vector.591" }
%"class.WTF::Vector.591" = type { %"class.WTF::VectorBuffer.592" }
%"class.WTF::VectorBuffer.592" = type { %"class.WTF::VectorBufferBase.593" }
%"class.WTF::VectorBufferBase.593" = type { %"class.blink::Member.568"*, i32, i32 }
%"class.blink::HeapVector.1127" = type { %"class.WTF::Vector.1130" }
%"class.WTF::Vector.1130" = type { %"class.WTF::VectorBuffer.1131" }
%"class.WTF::VectorBuffer.1131" = type { %"class.WTF::VectorBufferBase.1132" }
%"class.WTF::VectorBufferBase.1132" = type { %"class.blink::Member.1133"*, i32, i32 }
%"class.blink::Member.1133" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.129" }
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1143" = type { %"class.blink::MemberBase.1144" }
%"class.blink::MemberBase.1144" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1145" = type { %"class.WTF::HashTable.1146" }
%"class.WTF::HashTable.1146" = type <{ %"struct.WTF::KeyValuePair.1149"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1149" = type opaque
%"class.blink::Member.1150" = type { %"class.blink::MemberBase.1151" }
%"class.blink::MemberBase.1151" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1152" = type { %"class.blink::MemberBase.1153" }
%"class.blink::MemberBase.1153" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1154" = type { %"class.blink::MemberBase.1155" }
%"class.blink::MemberBase.1155" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1156" = type { %"class.blink::MemberBase.1157" }
%"class.blink::MemberBase.1157" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1033", { i64, i64 } }
%"class.blink::WeakMember.1033" = type { %"class.blink::MemberBase.130" }
%"class.blink::HeapHashSet.1158" = type { %"class.WTF::HashSet.1161" }
%"class.WTF::HashSet.1161" = type { %"class.WTF::HashTable.1162" }
%"class.WTF::HashTable.1162" = type <{ %"class.blink::Member.1164"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1164" = type opaque
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1167" = type { %"class.blink::MemberBase.1168" }
%"class.blink::MemberBase.1168" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1169" = type { %"class.blink::MemberBase.1170" }
%"class.blink::MemberBase.1170" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1175" = type { %"class.std::__1::__compressed_pair.1176" }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.1177" }
%"struct.std::__1::__compressed_pair_elem.1177" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1181" = type { %"class.std::__1::__compressed_pair.1182" }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.998" = type { %"class.WTF::VectorBuffer.999" }
%"class.WTF::VectorBuffer.999" = type { %"class.WTF::VectorBufferBase.1000" }
%"class.WTF::VectorBufferBase.1000" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1195" = type { %"class.WTF::HashMap.1198" }
%"class.WTF::HashMap.1198" = type { %"class.WTF::HashTable.1199" }
%"class.WTF::HashTable.1199" = type <{ %"struct.WTF::KeyValuePair.1201"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1201" = type opaque
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1204" = type { %"class.std::__1::__compressed_pair.1205" }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.1206" }
%"struct.std::__1::__compressed_pair_elem.1206" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1210" = type { %"class.blink::MemberBase.1211" }
%"class.blink::MemberBase.1211" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1212" = type { %"class.blink::MemberBase.1213" }
%"class.blink::MemberBase.1213" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1214" = type { %"class.WTF::HashMap.1217" }
%"class.WTF::HashMap.1217" = type { %"class.WTF::HashTable.1218" }
%"class.WTF::HashTable.1218" = type <{ %"struct.WTF::KeyValuePair.1220"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1220" = type opaque
%"class.blink::HeapObserverSet.1221" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1222" }
%"class.blink::HeapHashSet.1222" = type { %"class.WTF::HashSet.1225" }
%"class.WTF::HashSet.1225" = type { %"class.WTF::HashTable.1226" }
%"class.WTF::HashTable.1226" = type <{ %"class.blink::WeakMember.1228"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1228" = type opaque
%"class.blink::Member.1229" = type { %"class.blink::MemberBase.1230" }
%"class.blink::MemberBase.1230" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.129", %"class.blink::HeapHashSet.1238", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1245", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1238" = type { %"class.WTF::HashSet.1241" }
%"class.WTF::HashSet.1241" = type { %"class.WTF::HashTable.1242" }
%"class.WTF::HashTable.1242" = type <{ %"class.blink::Member.1244"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1244" = type opaque
%"class.blink::HeapTaskRunnerTimer.1245" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1246", { i64, i64 } }
%"class.blink::WeakMember.1246" = type { %"class.blink::MemberBase.1232" }
%"class.blink::WeakMember.1233" = type { %"class.blink::MemberBase.544" }
%"class.blink::Member.1234" = type { %"class.blink::MemberBase.1235" }
%"class.blink::MemberBase.1235" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.131" = type { %"class.blink::MemberBase.132" }
%"class.blink::MemberBase.132" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type { %"class.blink::NameClient", i32, i8, %"class.blink::Member.129", %"class.blink::HeapHashSet.135" }
%"class.blink::HeapHashSet.135" = type { %"class.WTF::HashSet.138" }
%"class.WTF::HashSet.138" = type { %"class.WTF::HashTable.139" }
%"class.WTF::HashTable.139" = type <{ %"class.blink::WeakMember.141"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.141" = type opaque
%class.scoped_refptr.142 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector.112", %"class.WTF::Vector.143" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.143" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"class.std::__1::unique_ptr.146"*, i32, i32 }
%"class.std::__1::unique_ptr.146" = type opaque
%"class.blink::Member.149" = type { %"class.blink::MemberBase.150" }
%"class.blink::MemberBase.150" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::XMLHttpRequestProgressEventThrottle"* }
%"class.blink::XMLHttpRequestProgressEventThrottle" = type <{ %"class.blink::TimerBase", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.15", %"class.blink::XMLHttpRequestProgressEventThrottle::DeferredEvent", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::XMLHttpRequestProgressEventThrottle::DeferredEvent" = type <{ i64, i64, i8, i8, [6 x i8] }>
%class.scoped_refptr.165 = type { %"class.blink::DOMWrapperWorld"* }
%class.scoped_refptr.32 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::XMLHttpRequest::BlobLoader"* }
%"class.blink::XMLHttpRequest::BlobLoader" = type { %"class.blink::FileReaderLoaderClient", %"class.blink::Member.15", %"class.std::__1::unique_ptr.366" }
%"class.blink::FileReaderLoaderClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.blink::FileReaderLoader"* }
%"class.blink::FileReaderLoader" = type { %"class.blink::mojom::blink::BlobReaderClient", i32, %"class.blink::FileReaderLoaderClient"*, %"class.WTF::TextEncoding", %"class.WTF::String", %"class.blink::ArrayBufferContents", i8, %"class.blink::Persistent.369", %"class.WTF::String", %"class.std::__1::unique_ptr.103", i8, i64, %"class.absl::optional.371", i32, i32, %"class.mojo::ScopedHandleBase.376", %"class.mojo::SimpleWatcher", %"class.mojo::Receiver", i8, i8, %class.scoped_refptr.156, %"class.base::WeakPtrFactory.533" }
%"class.blink::mojom::blink::BlobReaderClient" = type { i32 (...)** }
%"class.blink::Persistent.369" = type { %"class.blink::PersistentBase.370" }
%"class.blink::PersistentBase.370" = type { %"class.blink::DOMArrayBuffer"*, %"class.blink::PersistentNodePtr" }
%"class.absl::optional.371" = type { %"class.absl::optional_internal::optional_data.372" }
%"class.absl::optional_internal::optional_data.372" = type { %"class.absl::optional_internal::optional_data_base.373" }
%"class.absl::optional_internal::optional_data_base.373" = type { %"class.absl::optional_internal::optional_data_dtor_base.374" }
%"class.absl::optional_internal::optional_data_dtor_base.374" = type { i8, %union.anon.375 }
%union.anon.375 = type { i64 }
%"class.mojo::ScopedHandleBase.376" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::BlobReaderClientStub" }
%"class.blink::mojom::blink::BlobReaderClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::BlobReaderClient"* }
%"class.base::WeakPtrFactory.533" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.371" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.682", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.740", i32, i8, [3 x i8], %"class.blink::HeapVector.742", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.750", %"class.blink::Member.765", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.774", %"class.blink::Member.829", %"class.blink::Member.831", i8, [7 x i8] }>
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2229, %"class.blink::Member.2230", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2234" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.2229 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2230" = type { %"class.blink::MemberBase.2231" }
%"class.blink::MemberBase.2231" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2232" }
%"class.blink::Persistent.2232" = type { %"class.blink::PersistentBase.2233" }
%"class.blink::PersistentBase.2233" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.2234" = type { %"class.base::StrongAlias.2235" }
%"class.base::StrongAlias.2235" = type { %"class.base::UnguessableToken" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.v8::String" = type { i8 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2236" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2236" = type { %"class.v8::TracedReference.2237" }
%"class.v8::TracedReference.2237" = type { %"class.v8::BasicTracedReference.2238" }
%"class.v8::BasicTracedReference.2238" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.2239", i8* }
%"class.WTF::StringAppend.2239" = type { i8*, %"class.WTF::String" }
%"class.v8::internal::Isolate" = type opaque
%"class.WTF::StringTypeAdapter.2553" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::DocumentInit" = type <{ i32, i8, i8, [2 x i8], %"class.WTF::String", %"class.blink::LocalDOMWindow"*, %"class.blink::ExecutionContext"*, %"class.blink::KURL", %"class.blink::Document"*, i8, [7 x i8], %"class.blink::KURL", i64, i8, [7 x i8] }>
%"class.blink::HTMLDocument" = type { %"class.blink::Document", %"class.WTF::HashCountedSet.2240" }
%"class.WTF::HashCountedSet.2240" = type { %"class.WTF::HashMap.2241" }
%"class.WTF::HashMap.2241" = type { %"class.WTF::HashTable.2242" }
%"class.WTF::HashTable.2242" = type <{ %"struct.WTF::KeyValuePair.2245"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2245" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::XMLDocument" = type { %"class.blink::Document" }
%"class.WTF::SharedBuffer::Iterator" = type { i32, %"class.base::span", %"class.WTF::SharedBuffer"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::BlobData" = type { %"class.WTF::String", i32, %"class.WTF::Vector.2249", i64, %"class.blink::BlobBytesProvider"* }
%"class.WTF::Vector.2249" = type { %"class.WTF::VectorBuffer.2250" }
%"class.WTF::VectorBuffer.2250" = type { %"class.WTF::VectorBufferBase.2251" }
%"class.WTF::VectorBufferBase.2251" = type { %"class.mojo::StructPtr.2252"*, i32, i32 }
%"class.mojo::StructPtr.2252" = type opaque
%"class.blink::BlobBytesProvider" = type opaque
%"class.blink::probe::AsyncTask" = type { %"class.blink::ThreadDebugger"*, %"class.blink::probe::AsyncTaskId"*, i8, i8, %"class.blink::Persistent.2326" }
%"class.blink::ThreadDebugger" = type opaque
%"class.blink::Persistent.2326" = type { %"class.blink::PersistentBase.2327" }
%"class.blink::PersistentBase.2327" = type { %"class.blink::AdTracker"*, %"class.blink::PersistentNodePtr" }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2569" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2569" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2562", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2562" = type { %"class.std::__1::__vector_base.2563" }
%"class.std::__1::__vector_base.2563" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2564" }
%"class.std::__1::__compressed_pair.2564" = type { %"struct.std::__1::__compressed_pair_elem.2565" }
%"struct.std::__1::__compressed_pair_elem.2565" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2351", i64, i64 }
%"class.std::__1::unique_ptr.2351" = type { %"class.std::__1::__compressed_pair.2352" }
%"class.std::__1::__compressed_pair.2352" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.WTF::StringAppend.2330" = type { %"class.WTF::StringAppend.2331", i8* }
%"class.WTF::StringAppend.2331" = type { i8*, %"class.WTF::AtomicString" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2314, i32, i8, i8, [2 x i8] }>
%union.anon.2314 = type { %"class.WTF::Vector.2315" }
%"class.WTF::Vector.2315" = type { %"class.WTF::VectorBuffer.2316" }
%"class.WTF::VectorBuffer.2316" = type { %"class.WTF::VectorBufferBase.2317", [16 x i8] }
%"class.WTF::VectorBufferBase.2317" = type { i8*, i32, i32 }
%"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.149", %"class.blink::NotShared", %"class.blink::Member.45", %"class.blink::Member.129", %"class.blink::Member.2265", %"class.blink::Member.2275", %"class.WTF::String" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::NotShared" = type { %"class.blink::Member.2261" }
%"class.blink::Member.2261" = type { %"class.blink::MemberBase.2262" }
%"class.blink::MemberBase.2262" = type { %"class.blink::DOMArrayBufferView"* }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.2263" }
%"class.blink::Member.2263" = type { %"class.blink::MemberBase.2264" }
%"class.blink::MemberBase.2264" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::Member.2265" = type { %"class.blink::MemberBase.2266" }
%"class.blink::MemberBase.2266" = type { %"class.blink::FormData"* }
%"class.blink::FormData" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::TextEncoding", %"class.blink::HeapVector.2267", i8, [7 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapVector.2267" = type { %"class.WTF::Vector.2270" }
%"class.WTF::Vector.2270" = type { %"class.WTF::VectorBuffer.2271" }
%"class.WTF::VectorBuffer.2271" = type { %"class.WTF::VectorBufferBase.2272" }
%"class.WTF::VectorBufferBase.2272" = type { %"class.blink::Member.2273"*, i32, i32 }
%"class.blink::Member.2273" = type opaque
%"class.blink::Member.2275" = type { %"class.blink::MemberBase.2276" }
%"class.blink::MemberBase.2276" = type { %"class.blink::URLSearchParams"* }
%"class.blink::URLSearchParams" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable.2277", %"class.WTF::Vector.2279", %"class.blink::WeakMember.2285" }
%"class.blink::PairIterable.2277" = type { %"class.blink::Iterable.2278" }
%"class.blink::Iterable.2278" = type { i32 (...)** }
%"class.WTF::Vector.2279" = type { %"class.WTF::VectorBuffer.2280" }
%"class.WTF::VectorBuffer.2280" = type { %"class.WTF::VectorBufferBase.2281" }
%"class.WTF::VectorBufferBase.2281" = type { %"struct.std::__1::pair.2282"*, i32, i32 }
%"struct.std::__1::pair.2282" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::WeakMember.2285" = type { %"class.blink::MemberBase.2286" }
%"class.blink::MemberBase.2286" = type { %"class.blink::DOMURL"* }
%"class.blink::DOMURL" = type opaque
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.2288", [4 x i8], %"class.WTF::Vector.2290", i64, %"class.WTF::Vector.112", i8, [7 x i8] }>
%"class.WTF::RefCounted.2288" = type { %"class.base::RefCounted.2289" }
%"class.base::RefCounted.2289" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2290" = type { %"class.WTF::VectorBuffer.2291" }
%"class.WTF::VectorBuffer.2291" = type { %"class.WTF::VectorBufferBase.2292" }
%"class.WTF::VectorBufferBase.2292" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.112", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.47, i64, i64, %"class.absl::optional.74", %class.scoped_refptr.2293 }
%class.scoped_refptr.2293 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::ParsedContentType" = type { %"class.WTF::String", %"class.absl::optional.2303" }
%"class.absl::optional.2303" = type { %"class.absl::optional_internal::optional_data.2304" }
%"class.absl::optional_internal::optional_data.2304" = type { %"class.absl::optional_internal::optional_data_base.2305" }
%"class.absl::optional_internal::optional_data_base.2305" = type { %"class.absl::optional_internal::optional_data_dtor_base.2306" }
%"class.absl::optional_internal::optional_data_dtor_base.2306" = type { i8, %union.anon.2307 }
%union.anon.2307 = type { %"class.blink::ParsedContentHeaderFieldParameters" }
%"class.blink::ParsedContentHeaderFieldParameters" = type { %"class.WTF::Vector.2308" }
%"class.WTF::Vector.2308" = type { %"class.WTF::VectorBuffer.2309" }
%"class.WTF::VectorBuffer.2309" = type { %"class.WTF::VectorBufferBase.2310" }
%"class.WTF::VectorBufferBase.2310" = type { %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"*, i32, i32 }
%"struct.blink::ParsedContentHeaderFieldParameters::NameValue" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::File" = type { %"class.blink::Blob", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.absl::optional.371", %"class.absl::optional.74", %"class.WTF::String" }
%"class.blink::HeapHashSet.2296" = type { %"class.WTF::HashSet.2299" }
%"class.WTF::HashSet.2299" = type { %"class.WTF::HashTable.2300" }
%"class.WTF::HashTable.2300" = type <{ %"class.blink::Member.2302"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2302" = type { %"class.blink::MemberBase.2469" }
%"class.blink::MemberBase.2469" = type { %"class.blink::ShadowRoot"* }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1061", %"class.blink::Member.2470", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.2470" = type { %"class.blink::MemberBase.2471" }
%"class.blink::MemberBase.2471" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.WTF::StringAppend.2313" = type { %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.2287, %"class.mojo::PendingRemote.2325" }
%class.scoped_refptr.2287 = type { %"class.blink::EncodedFormData"* }
%"class.mojo::PendingRemote.2325" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2504", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.2516", %"class.WTF::Vector.2517" }
%"class.std::__1::unique_ptr.2504" = type { %"class.std::__1::__compressed_pair.2505" }
%"class.std::__1::__compressed_pair.2505" = type { %"struct.std::__1::__compressed_pair_elem.2506" }
%"struct.std::__1::__compressed_pair_elem.2506" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2507", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2507" = type { %"class.std::__1::__compressed_pair.2508" }
%"class.std::__1::__compressed_pair.2508" = type { %"struct.std::__1::__compressed_pair_elem.2509" }
%"struct.std::__1::__compressed_pair_elem.2509" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.2516" = type { %"class.blink::MemberBase.977" }
%"class.WTF::Vector.2517" = type { %"class.WTF::VectorBuffer.2518" }
%"class.WTF::VectorBuffer.2518" = type { %"class.WTF::VectorBufferBase.1883" }
%"class.blink::ProgressEvent" = type { %"class.blink::Event", i8, i64, i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::StringAppend.2332" = type { %"class.WTF::StringAppend.2333", %"class.WTF::AtomicString" }
%"class.WTF::StringAppend.2333" = type { %"class.WTF::AtomicString", i8* }
%"class.blink::Persistent.2328" = type { %"class.blink::PersistentBase.2329" }
%"class.blink::PersistentBase.2329" = type { %"class.blink::XMLHttpRequest"*, %"class.blink::PersistentNodePtr" }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.2594", %"class.std::__1::__tuple_leaf.2595" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.2328" }
%"class.std::__1::__tuple_leaf.2594" = type { i32 }
%"class.std::__1::__tuple_leaf.2595" = type { %"class.WTF::AtomicString" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.157", [4 x i8] }>
%"class.blink::TrustToken" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, %"class.WTF::Vector.35", %"class.WTF::String", i8, %"class.WTF::Vector.35", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.std::__1::set.2336" = type { %"class.std::__1::__tree.2337" }
%"class.std::__1::__tree.2337" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2338", %"class.std::__1::__compressed_pair.2342" }
%"class.std::__1::__compressed_pair.2338" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"class.std::__1::__compressed_pair.2342" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::pair.2344" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.v8::Value" = type { i8 }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2349", i8, [7 x i8] }>
%"class.blink::Member.2349" = type { %"class.blink::MemberBase.2350" }
%"class.blink::MemberBase.2350" = type { %"class.blink::EventListener"* }
%"class.blink::BytesConsumer" = type opaque
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2351", i64, %"class.absl::optional.2356" }
%"class.absl::optional.2356" = type { %"class.absl::optional_internal::optional_data.2357" }
%"class.absl::optional_internal::optional_data.2357" = type { %"class.absl::optional_internal::optional_data_base.2358" }
%"class.absl::optional_internal::optional_data_base.2358" = type { %"class.absl::optional_internal::optional_data_dtor_base.2359" }
%"class.absl::optional_internal::optional_data_dtor_base.2359" = type { i8, %union.anon.2360 }
%union.anon.2360 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2361", %"class.std::__1::unique_ptr.2362" }
%"class.mojo::ScopedHandleBase.2361" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2362" = type { %"class.std::__1::__compressed_pair.2363" }
%"class.std::__1::__compressed_pair.2363" = type { %"struct.std::__1::__compressed_pair_elem.2364" }
%"struct.std::__1::__compressed_pair_elem.2364" = type { i8* }
%"class.base::CheckedContiguousIterator" = type { i8*, i8*, i8* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.2320" = type { %"class.WTF::VectorBuffer.2321" }
%"class.WTF::VectorBuffer.2321" = type { %"class.WTF::VectorBufferBase.2322", [16 x i8] }
%"class.WTF::VectorBufferBase.2322" = type { i16*, i32, i32 }
%"class.WTF::StringHasher" = type { i32, i8, i16 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.WTF::StringTypeAdapter.2554" = type { %"class.WTF::StringTypeAdapter.2555" }
%"class.WTF::StringTypeAdapter.2555" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.2557" = type { %"class.WTF::StringTypeAdapter.2555" }

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN5blink14DOMArrayBuffer6CreateEPKvm = comdat any

$_ZN5blink17ParsedContentTypeD2Ev = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendINS_12AtomicStringET_EERKS3_S4_ = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv = comdat any

$_ZN3WTFplINS_12AtomicStringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink20DocumentParserClient5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink14XMLHttpRequest18NameInHeapSnapshotEv = comdat any

$_ZNK5blink14XMLHttpRequest18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZN5blink22ThreadableLoaderClient18WillFollowRedirectERKNS_4KURLERKNS_16ResourceResponseE = comdat any

$_ZN5blink22ThreadableLoaderClient27DidStartLoadingResponseBodyERNS_13BytesConsumerE = comdat any

$_ZN5blink22ThreadableLoaderClient24DidReceiveCachedMetadataEN9mojo_base9BigBufferE = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_14XMLHttpRequestEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_14XMLHttpRequestEE26DispatchHasPendingActivityEv = comdat any

$_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink25XMLHttpRequestEventTargetD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink25XMLHttpRequestEventTarget18GetWrapperTypeInfoEv = comdat any

$_ZN5blink25EventTargetWithInlineDataD2Ev = comdat any

$_ZN5blink25EventTargetWithInlineDataD0Ev = comdat any

$_ZNK5blink11EventTarget18GetWrapperTypeInfoEv = comdat any

$_ZN5blink22ThreadableLoaderClient11DidSendDataEmm = comdat any

$_ZN5blink22ThreadableLoaderClient18DidReceiveResponseEmRKNS_16ResourceResponseE = comdat any

$_ZN5blink22ThreadableLoaderClient14DidReceiveDataEPKcj = comdat any

$_ZN5blink22ThreadableLoaderClient16DidFinishLoadingEm = comdat any

$_ZN5blink22ThreadableLoaderClient7DidFailERKNS_13ResourceErrorE = comdat any

$_ZN5blink22ThreadableLoaderClient20DidFailRedirectCheckEv = comdat any

$_ZN5blink22ThreadableLoaderClient15DidDownloadDataEm = comdat any

$_ZN5blink22ThreadableLoaderClient17DidDownloadToBlobE13scoped_refptrINS_14BlobDataHandleEE = comdat any

$_ZN5blink22ThreadableLoaderClientD2Ev = comdat any

$_ZN5blink22ThreadableLoaderClientD0Ev = comdat any

$_ZN5blink25ActiveScriptWrappableBaseD2Ev = comdat any

$_ZN5blink21ActiveScriptWrappableINS_14XMLHttpRequestEED0Ev = comdat any

$_ZNK5blink20TraceWrapperV8String18NameInHeapSnapshotEv = comdat any

$_ZNK5blink20TraceWrapperV8String5TraceEPNS_7VisitorE = comdat any

$_ZNK3WTF12SharedBuffer8IteratoreqERKS1_ = comdat any

$_ZNSt3__15equalIN4base25CheckedContiguousIteratorIKcEES4_EEbT_S5_T0_S6_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKcEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKcEppEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink18DOMArrayBufferBaseD2Ev = comdat any

$_ZN5blink18DOMArrayBufferBaseD0Ev = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEEaSERKS7_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN7network5mojom5blink16TrustTokenParamsC2ERKS2_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_35XMLHttpRequestProgressEventThrottleEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_35XMLHttpRequestProgressEventThrottleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_35XMLHttpRequestProgressEventThrottleEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_35XMLHttpRequestProgressEventThrottleEE7GetNameEPKv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12HTMLDocumentEE4CallIJRNS_12DocumentInitEEEEPS1_DpOT_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_11XMLDocumentEE4CallIJRNS_12DocumentInitEEEEPS1_DpOT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN3WTF12StringAppendINS_12AtomicStringENS_6StringEEC2ES1_S2_ = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringENS_6StringEEcvS2_Ev = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringENS_6StringEE6lengthEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16ThreadableLoaderEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16ThreadableLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16ThreadableLoaderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16ThreadableLoaderEE7GetNameEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14XMLHttpRequestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_14XMLHttpRequestEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14XMLHttpRequestEFvNS3_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS3_10PersistentIS4_EES5_S7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink14XMLHttpRequestEFvNS2_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS2_10PersistentIS3_EES4_S6_EEC2ISA_JSC_S4_S8_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink14XMLHttpRequestEFvNS2_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS2_10PersistentIS3_EES4_S6_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink14XMLHttpRequestEFvNS2_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS2_10PersistentIS3_EES4_S6_EED2Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EcvNS_6StringEEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN5blink17CompareIgnoreCaseENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN5blink17CompareIgnoreCaseENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_ = comdat any

$_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS_12AtomicStringES8_EEEEvOT_ = comdat any

$_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14XMLHttpRequest10BlobLoaderEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14XMLHttpRequest10BlobLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14XMLHttpRequest10BlobLoaderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14XMLHttpRequest10BlobLoaderEE7GetNameEPKv = comdat any

$_ZN5blink14XMLHttpRequest10BlobLoaderD2Ev = comdat any

$_ZN5blink14XMLHttpRequest10BlobLoaderD0Ev = comdat any

$_ZN5blink14XMLHttpRequest10BlobLoader15DidStartLoadingEv = comdat any

$_ZN5blink22FileReaderLoaderClient14DidReceiveDataEv = comdat any

$_ZN5blink14XMLHttpRequest10BlobLoader23DidReceiveDataForClientEPKcj = comdat any

$_ZN5blink14XMLHttpRequest10BlobLoader16DidFinishLoadingEv = comdat any

$_ZN5blink14XMLHttpRequest10BlobLoader7DidFailENS_13FileErrorCodeE = comdat any

$_ZN5blink10TraceTraitINS_4BlobEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14DocumentParserEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14DOMArrayBufferEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20XMLHttpRequestUploadEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_12DOMExceptionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink25XMLHttpRequestEventTargetE = comdat any

$_ZTVN5blink25EventTargetWithInlineDataE = comdat any

$_ZTVN5blink22ThreadableLoaderClientE = comdat any

$_ZTVN5blink20DocumentParserClientE = comdat any

$_ZTVN5blink21ActiveScriptWrappableINS_14XMLHttpRequestEEE = comdat any

$_ZTVN5blink20TraceWrapperV8StringE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink18DOMArrayBufferBaseE = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_35XMLHttpRequestProgressEventThrottleEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_35XMLHttpRequestProgressEventThrottleEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14XMLHttpRequest10BlobLoaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14XMLHttpRequest10BlobLoaderEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink14XMLHttpRequest10BlobLoaderE = comdat any

@.str = private unnamed_addr constant [73 x i8] c"../../third_party/blink/renderer/core/xmlhttprequest/xml_http_request.cc\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"isolate\00", align 1
@_ZTVN5blink14XMLHttpRequestE = hidden unnamed_addr constant { [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] } { [39 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::XMLHttpRequest"*)* @_ZNK5blink14XMLHttpRequest18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZN5blink14XMLHttpRequestD2Ev to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZN5blink14XMLHttpRequestD0Ev to i8*), i8* bitcast (i1 (%"class.blink::XMLHttpRequest"*)* @_ZNK5blink14XMLHttpRequest18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, %"class.blink::Visitor"*)* @_ZNK5blink14XMLHttpRequest5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::XMLHttpRequest"*)* @_ZNK5blink14XMLHttpRequest18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::XMLHttpRequest"*)* @_ZNK5blink14XMLHttpRequest13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::XMLHttpRequest"*)* @_ZNK5blink14XMLHttpRequest19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZN5blink14XMLHttpRequest16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, i64, i64)* @_ZN5blink14XMLHttpRequest11DidSendDataEmm to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, i64, %"class.blink::ResourceResponse"*)* @_ZN5blink14XMLHttpRequest18DidReceiveResponseEmRKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, i8*, i32)* @_ZN5blink14XMLHttpRequest14DidReceiveDataEPKcj to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, i64)* @_ZN5blink14XMLHttpRequest15DidDownloadDataEm to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, %"class.blink::BlobDataHandle"*)* @_ZN5blink14XMLHttpRequest17DidDownloadToBlobE13scoped_refptrINS_14BlobDataHandleEE to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, i64)* @_ZN5blink14XMLHttpRequest16DidFinishLoadingEm to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, %"class.blink::ResourceError"*)* @_ZN5blink14XMLHttpRequest7DidFailERKNS_13ResourceErrorE to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZN5blink14XMLHttpRequest20DidFailRedirectCheckEv to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZN5blink14XMLHttpRequest19NotifyParserStoppedEv to i8*)], [16 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::XMLHttpRequest"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink14XMLHttpRequest5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, i64, i64)* @_ZThn72_N5blink14XMLHttpRequest11DidSendDataEmm to i8*), i8* bitcast (i1 (%"class.blink::ThreadableLoaderClient"*, %"class.blink::KURL"*, %"class.blink::ResourceResponse"*)* @_ZN5blink22ThreadableLoaderClient18WillFollowRedirectERKNS_4KURLERKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, i64, %"class.blink::ResourceResponse"*)* @_ZThn72_N5blink14XMLHttpRequest18DidReceiveResponseEmRKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, %"class.blink::BytesConsumer"*)* @_ZN5blink22ThreadableLoaderClient27DidStartLoadingResponseBodyERNS_13BytesConsumerE to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, i8*, i32)* @_ZThn72_N5blink14XMLHttpRequest14DidReceiveDataEPKcj to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, %"class.mojo_base::BigBuffer"*)* @_ZN5blink22ThreadableLoaderClient24DidReceiveCachedMetadataEN9mojo_base9BigBufferE to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, i64)* @_ZThn72_N5blink14XMLHttpRequest16DidFinishLoadingEm to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, %"class.blink::ResourceError"*)* @_ZThn72_N5blink14XMLHttpRequest7DidFailERKNS_13ResourceErrorE to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZThn72_N5blink14XMLHttpRequest20DidFailRedirectCheckEv to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, i64)* @_ZThn72_N5blink14XMLHttpRequest15DidDownloadDataEm to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*, %"class.blink::BlobDataHandle"*)* @_ZThn72_N5blink14XMLHttpRequest17DidDownloadToBlobE13scoped_refptrINS_14BlobDataHandleEE to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZThn72_N5blink14XMLHttpRequestD1Ev to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZThn72_N5blink14XMLHttpRequestD0Ev to i8*)], [4 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::XMLHttpRequest"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink14XMLHttpRequest5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZThn80_N5blink14XMLHttpRequest19NotifyParserStoppedEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.blink::XMLHttpRequest"*, %"class.blink::Visitor"*)* @_ZThn88_NK5blink14XMLHttpRequest5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZThn88_N5blink14XMLHttpRequestD1Ev to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZThn88_N5blink14XMLHttpRequestD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_14XMLHttpRequestEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_14XMLHttpRequestEE26DispatchHasPendingActivityEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -96 to i8*), i8* null, i8* bitcast (void (%"class.blink::XMLHttpRequest"*, %"class.blink::Visitor"*)* @_ZThn96_NK5blink14XMLHttpRequest5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZThn96_N5blink14XMLHttpRequestD1Ev to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZThn96_N5blink14XMLHttpRequestD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContextLifecycleObserver"*)* @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest"*)* @_ZThn96_N5blink14XMLHttpRequest16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.3 = private unnamed_addr constant [72 x i8] c"../../third_party/blink/renderer/core/xmlhttprequest/xml_http_request.h\00", section "llvm.metadata"
@.str.4 = private unnamed_addr constant [83 x i8] c"The value is only accessible if the object's 'responseType' is '' or 'text' (was '\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"').\00", align 1
@.str.6 = private unnamed_addr constant [87 x i8] c"The value is only accessible if the object's 'responseType' is '' or 'document' (was '\00", align 1
@_ZN5blink10http_names13kLastModifiedE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.7 = private unnamed_addr constant [70 x i8] c"Timeouts cannot be set for synchronous requests made from a document.\00", align 1
@.str.8 = private unnamed_addr constant [74 x i8] c"The response type cannot be set if the object's state is LOADING or DONE.\00", align 1
@.str.9 = private unnamed_addr constant [83 x i8] c"The response type cannot be changed for synchronous requests made from a document.\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"json\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"document\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"blob\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"arraybuffer\00", align 1
@_ZN5blink16event_type_names9kProgressE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.16 = private unnamed_addr constant [20 x i8] c"XHRReadyStateChange\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN5blink16event_type_names17kReadystatechangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.18 = private unnamed_addr constant [8 x i8] c"XHRLoad\00", align 1
@_ZN5blink16event_type_names5kLoadE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names8kLoadendE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.19 = private unnamed_addr constant [69 x i8] c"The value may only be set if the object's state is UNSENT or OPENED.\00", align 1
@.str.20 = private unnamed_addr constant [49 x i8] c"Synchronous requests are disabled for this page.\00", align 1
@.str.21 = private unnamed_addr constant [67 x i8] c"Synchronous requests from a document must not set a response type.\00", align 1
@.str.22 = private unnamed_addr constant [45 x i8] c"Synchronous requests must not set a timeout.\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"Document is already detached.\00", align 1
@.str.24 = private unnamed_addr constant [35 x i8] c"The object's state must be OPENED.\00", align 1
@.str.25 = private unnamed_addr constant [57 x i8] c"Synchronous requests are disabled by permissions policy.\00", align 1
@.str.26 = private unnamed_addr constant [54 x i8] c"Synchronous requests are disabled by document policy.\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN5blink10http_names4kGETE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10http_names5kHEADE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.27 = private unnamed_addr constant [24 x i8] c"text/html;charset=UTF-8\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"application/xml;charset=UTF-8\00", align 1
@.str.30 = private unnamed_addr constant [25 x i8] c"text/plain;charset=UTF-8\00", align 1
@_ZN5blink10http_names12kContentTypeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.31 = private unnamed_addr constant [31 x i8] c"multipart/form-data; boundary=\00", align 1
@.str.32 = private unnamed_addr constant [48 x i8] c"application/x-www-form-urlencoded;charset=UTF-8\00", align 1
@.str.33 = private unnamed_addr constant [43 x i8] c"IsDOMExceptionCode(exception_state.Code())\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"Failed to load '\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.36 = private unnamed_addr constant [51 x i8] c"'GET' is the only method allowed for 'blob:' URLs.\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"ftp\00", align 1
@.str.38 = private unnamed_addr constant [22 x i8] c"FTP is not supported.\00", align 1
@.str.39 = private unnamed_addr constant [48 x i8] c"Making a request to a FTP URL is not supported.\00", align 1
@.str.40 = private unnamed_addr constant [20 x i8] c"XMLHttpRequest.send\00", align 1
@_ZN5blink16event_type_names10kLoadstartE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink26fetch_initiator_type_names15kXmlhttprequestE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.41 = private unnamed_addr constant [9 x i8] c"!loader_\00", align 1
@.str.42 = private unnamed_addr constant [111 x i8] c"Synchronous XHR in page dismissal. See https://www.chromestatus.com/feature/4664843055398912 for more details.\00", align 1
@.str.43 = private unnamed_addr constant [33 x i8] c"XHR.Sync.BlockingTime.MainThread\00", align 1
@.str.44 = private unnamed_addr constant [35 x i8] c"XHR.Sync.BlockingTime.WorkerThread\00", align 1
@_ZN5blink16event_type_names6kAbortE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.45 = private unnamed_addr constant [9 x i8] c"progress\00", align 1
@_ZN5blink16event_type_names6kErrorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.46 = private unnamed_addr constant [16 x i8] c"HandleDidCancel\00", align 1
@.str.47 = private unnamed_addr constant [65 x i8] c"MimeType cannot be overridden when the state is LOADING or DONE.\00", align 1
@.str.48 = private unnamed_addr constant [25 x i8] c"application/octet-stream\00", align 1
@.str.49 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.50 = private unnamed_addr constant [41 x i8] c"' is not a valid HTTP header field name.\00", align 1
@.str.51 = private unnamed_addr constant [42 x i8] c"' is not a valid HTTP header field value.\00", align 1
@.str.52 = private unnamed_addr constant [31 x i8] c"Refused to set unsafe header \22\00", align 1
@.str.53 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.55 = private unnamed_addr constant [99 x i8] c"Trust Tokens redemption and signing require the trust-token-redemption Permissions Policy feature.\00", align 1
@.str.56 = private unnamed_addr constant [96 x i8] c"Trust Tokens issuance is disabled except in contexts with the TrustTokens Origin Trial enabled.\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.57 = private unnamed_addr constant [31 x i8] c"Refused to get unsafe header \22\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"text/xml\00", align 1
@.str.59 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"&response\00", align 1
@_ZN5blink16event_type_names8kTimeoutE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink18event_target_names15kXMLHttpRequestE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.61 = private unnamed_addr constant [16 x i8] c"XMLHttpRequest \00", align 1
@_ZTVN5blink25XMLHttpRequestEventTargetE = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD2Ev to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequestEventTarget"*)* @_ZN5blink25XMLHttpRequestEventTargetD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*)* @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::XMLHttpRequestEventTarget"*)* @_ZNK5blink25XMLHttpRequestEventTarget18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)] }, comdat, align 8
@_ZTVN5blink25EventTargetWithInlineDataE = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD2Ev to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*)* @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)] }, comdat, align 8
@.str.62 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11EventTarget18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink25XMLHttpRequestEventTarget18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZTVN5blink22ThreadableLoaderClientE = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)* @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, i64, i64)* @_ZN5blink22ThreadableLoaderClient11DidSendDataEmm to i8*), i8* bitcast (i1 (%"class.blink::ThreadableLoaderClient"*, %"class.blink::KURL"*, %"class.blink::ResourceResponse"*)* @_ZN5blink22ThreadableLoaderClient18WillFollowRedirectERKNS_4KURLERKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, i64, %"class.blink::ResourceResponse"*)* @_ZN5blink22ThreadableLoaderClient18DidReceiveResponseEmRKNS_16ResourceResponseE to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, %"class.blink::BytesConsumer"*)* @_ZN5blink22ThreadableLoaderClient27DidStartLoadingResponseBodyERNS_13BytesConsumerE to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, i8*, i32)* @_ZN5blink22ThreadableLoaderClient14DidReceiveDataEPKcj to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, %"class.mojo_base::BigBuffer"*)* @_ZN5blink22ThreadableLoaderClient24DidReceiveCachedMetadataEN9mojo_base9BigBufferE to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, i64)* @_ZN5blink22ThreadableLoaderClient16DidFinishLoadingEm to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, %"class.blink::ResourceError"*)* @_ZN5blink22ThreadableLoaderClient7DidFailERKNS_13ResourceErrorE to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*)* @_ZN5blink22ThreadableLoaderClient20DidFailRedirectCheckEv to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, i64)* @_ZN5blink22ThreadableLoaderClient15DidDownloadDataEm to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*, %"class.blink::BlobDataHandle"*)* @_ZN5blink22ThreadableLoaderClient17DidDownloadToBlobE13scoped_refptrINS_14BlobDataHandleEE to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*)* @_ZN5blink22ThreadableLoaderClientD2Ev to i8*), i8* bitcast (void (%"class.blink::ThreadableLoaderClient"*)* @_ZN5blink22ThreadableLoaderClientD0Ev to i8*)] }, comdat, align 8
@_ZTVN5blink20DocumentParserClientE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DocumentParserClient"*, %"class.blink::Visitor"*)* @_ZNK5blink20DocumentParserClient5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink21ActiveScriptWrappableINS_14XMLHttpRequestEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*)* @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappableBase"*)* @_ZN5blink25ActiveScriptWrappableBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::ActiveScriptWrappable"*)* @_ZN5blink21ActiveScriptWrappableINS_14XMLHttpRequestEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_14XMLHttpRequestEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_14XMLHttpRequestEE26DispatchHasPendingActivityEv to i8*)] }, comdat, align 8
@_ZTVN5blink20TraceWrapperV8StringE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::TraceWrapperV8String"*)* @_ZNK5blink20TraceWrapperV8String18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::TraceWrapperV8String"*, %"class.blink::Visitor"*)* @_ZNK5blink20TraceWrapperV8String5TraceEPNS_7VisitorE to i8*)] }, comdat, align 8
@.str.63 = private unnamed_addr constant [21 x i8] c"TraceWrapperV8String\00", align 1
@.str.64 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.65 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.66 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.67 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.68 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.69 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.70 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.71 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink14DOMArrayBufferE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink18DOMArrayBufferBaseE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*)* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@.str.72 = private unnamed_addr constant [30 x i8] c"' is not a valid HTTP method.\00", align 1
@.str.73 = private unnamed_addr constant [30 x i8] c"' HTTP method is unsupported.\00", align 1
@.str.74 = private unnamed_addr constant [12 x i8] c"Invalid URL\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink13CoreProbeSink16s_existingAgentsE = external local_unnamed_addr global %"struct.std::__1::atomic", align 4
@.str.75 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.76 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@.str.77 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.78 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.80 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.81 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.82 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14SecurityOriginEEEEPKcv = private unnamed_addr constant [90 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::SecurityOrigin>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.83 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.84 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::AtomicString, WTF::AtomicString>]\00", align 1
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@.str.85 = private unnamed_addr constant [8 x i8] c"charset\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase42is_force_synchronous_html_parsing_enabled_E = external local_unnamed_addr global i8, align 1
@.str.86 = private unnamed_addr constant [15 x i8] c"XMLHttpRequest\00", align 1
@_ZN5blink14XMLHttpRequest18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.88 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.89 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.90 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink35XMLHttpRequestProgressEventThrottleEEEPKcv = private unnamed_addr constant [90 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::XMLHttpRequestProgressEventThrottle]\00", align 1
@_ZZN5blink11GCInfoTraitINS_35XMLHttpRequestProgressEventThrottleEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_35XMLHttpRequestProgressEventThrottleEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_35XMLHttpRequestProgressEventThrottleEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_35XMLHttpRequestProgressEventThrottleEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_35XMLHttpRequestProgressEventThrottleEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16ThreadableLoaderEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadableLoader]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16ThreadableLoaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16ThreadableLoaderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16ThreadableLoaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<WTF::String, WTF::String>]\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14XMLHttpRequest10BlobLoaderEEEPKcv = private unnamed_addr constant [81 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::XMLHttpRequest::BlobLoader]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14XMLHttpRequest10BlobLoaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14XMLHttpRequest10BlobLoaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14XMLHttpRequest10BlobLoaderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14XMLHttpRequest10BlobLoaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14XMLHttpRequest10BlobLoaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink14XMLHttpRequest10BlobLoaderE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::XMLHttpRequest::BlobLoader"*)* @_ZN5blink14XMLHttpRequest10BlobLoaderD2Ev to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest::BlobLoader"*)* @_ZN5blink14XMLHttpRequest10BlobLoaderD0Ev to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest::BlobLoader"*)* @_ZN5blink14XMLHttpRequest10BlobLoader15DidStartLoadingEv to i8*), i8* bitcast (void (%"class.blink::FileReaderLoaderClient"*)* @_ZN5blink22FileReaderLoaderClient14DidReceiveDataEv to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest::BlobLoader"*, i8*, i32)* @_ZN5blink14XMLHttpRequest10BlobLoader23DidReceiveDataForClientEPKcj to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest::BlobLoader"*)* @_ZN5blink14XMLHttpRequest10BlobLoader16DidFinishLoadingEv to i8*), i8* bitcast (void (%"class.blink::XMLHttpRequest::BlobLoader"*, i32)* @_ZN5blink14XMLHttpRequest10BlobLoader7DidFailENS_13FileErrorCodeE to i8*)] }, comdat, align 8
@_ZZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink14XMLHttpRequestC1EPNS_16ExecutionContextEPN2v87IsolateE13scoped_refptrIKNS_15DOMWrapperWorldEE = hidden unnamed_addr alias void (%"class.blink::XMLHttpRequest"*, %"class.blink::ExecutionContext"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*), void (%"class.blink::XMLHttpRequest"*, %"class.blink::ExecutionContext"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*)* @_ZN5blink14XMLHttpRequestC2EPNS_16ExecutionContextEPN2v87IsolateE13scoped_refptrIKNS_15DOMWrapperWorldEE
@_ZN5blink14XMLHttpRequestD1Ev = hidden unnamed_addr alias void (%"class.blink::XMLHttpRequest"*), void (%"class.blink::XMLHttpRequest"*)* @_ZN5blink14XMLHttpRequestD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XMLHttpRequest"* @_ZN5blink14XMLHttpRequest6CreateEPNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %0) #4
  %3 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 2, i32 0
  %6 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 1600) #4
  %8 = bitcast i8* %7 to %"class.blink::XMLHttpRequest"*
  %9 = icmp eq %"class.blink::DOMWrapperWorld"* %6, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %6, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %11) #4
  br label %12

12:                                               ; preds = %1, %10
  tail call void @_ZN5blink14XMLHttpRequestC2EPNS_16ExecutionContextEPN2v87IsolateE13scoped_refptrIKNS_15DOMWrapperWorldEE(%"class.blink::XMLHttpRequest"* %8, %"class.blink::ExecutionContext"* %2, %"class.v8::Isolate"* %4, %"class.blink::DOMWrapperWorld"* %6) #4
  %13 = getelementptr inbounds i8, i8* %7, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = getelementptr inbounds i8, i8* %7, i64 88
  %18 = bitcast i8* %17 to %"class.blink::ActiveScriptWrappableBase"*
  tail call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %18) #4
  ret %"class.blink::XMLHttpRequest"* %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XMLHttpRequest"* @_ZN5blink14XMLHttpRequest6CreateEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %0, i64 0, i32 5
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = icmp eq %"class.v8::Isolate"* %4, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 279, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0)) #4
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4
  br label %9

9:                                                ; preds = %1, %6
  %10 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 1600) #4
  %11 = bitcast i8* %10 to %"class.blink::XMLHttpRequest"*
  call void @_ZN5blink14XMLHttpRequestC2EPNS_16ExecutionContextEPN2v87IsolateE13scoped_refptrIKNS_15DOMWrapperWorldEE(%"class.blink::XMLHttpRequest"* %11, %"class.blink::ExecutionContext"* %0, %"class.v8::Isolate"* %4, %"class.blink::DOMWrapperWorld"* null) #4
  %12 = getelementptr inbounds i8, i8* %10, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = getelementptr inbounds i8, i8* %10, i64 88
  %17 = bitcast i8* %16 to %"class.blink::ActiveScriptWrappableBase"*
  call void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"* %17) #4
  ret %"class.blink::XMLHttpRequest"* %11
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequestC2EPNS_16ExecutionContextEPN2v87IsolateE13scoped_refptrIKNS_15DOMWrapperWorldEE(%"class.blink::XMLHttpRequest"*, %"class.blink::ExecutionContext"*, %"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.blink::DOMWrapperWorld"* %3 to i64
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"* %6) #4
  %7 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.blink::EventTargetData"* %8 to i8*
  %10 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.62, i64 0, i64 0), i32 261) #4
  %11 = bitcast i8* %10 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"* %11) #4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25XMLHttpRequestEventTargetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %12 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = bitcast i32 (...)*** %12 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink22ThreadableLoaderClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink20DocumentParserClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %13, align 8
  %14 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink21ActiveScriptWrappableINS_14XMLHttpRequestEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %16 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %15 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZN5blink33ExecutionContextLifecycleObserverC2EPNS_16ExecutionContextENS0_4TypeE(%"class.blink::ExecutionContextLifecycleObserver"* %16, %"class.blink::ExecutionContext"* %1, i32 0) #4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }, { [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink14XMLHttpRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %17 = bitcast i32 (...)*** %12 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }, { [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink14XMLHttpRequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }, { [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink14XMLHttpRequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %17, align 8
  %18 = bitcast i32 (...)*** %14 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }, { [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink14XMLHttpRequestE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }, { [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink14XMLHttpRequestE, i64 0, inrange i32 4, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %18, align 8
  %19 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::XMLHttpRequestUpload"* null, %"class.blink::XMLHttpRequestUpload"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %20) #4
  %21 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* %21) #4
  %22 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9
  tail call void @_ZN5blink13HTTPHeaderMapC1Ev(%"class.blink::HTTPHeaderMap"* %23) #4
  %24 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 10
  %25 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 15
  %26 = bitcast %"class.mojo::StructPtr"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 40, i1 false)
  tail call void @_ZN5blink10TaskHandleC1Ev(%"class.blink::TaskHandle"* %25) #4
  %27 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 16, i32 0, i32 0
  store %"class.blink::ThreadableLoader"* null, %"class.blink::ThreadableLoader"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  tail call void @_ZN5blink16ResourceResponseC1Ev(%"class.blink::ResourceResponse"* %29) #4
  %30 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 19
  %31 = bitcast %"class.std::__1::unique_ptr.103"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 20
  %33 = bitcast %"class.blink::TraceWrapperV8String"* %32 to i8*
  %34 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %33, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 320)
  %35 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink20TraceWrapperV8StringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = bitcast i8* %36 to i64**
  store i64* null, i64** %37, align 8
  %38 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 21, i32 0, i32 0
  %39 = bitcast %"class.blink::Document"** %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 68, i1 false)
  %40 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_35XMLHttpRequestProgressEventThrottleEEEPhm(i64 128) #4
  %41 = bitcast i8* %40 to %"class.blink::XMLHttpRequestProgressEventThrottle"*
  tail call void @_ZN5blink35XMLHttpRequestProgressEventThrottleC1EPNS_14XMLHttpRequestE(%"class.blink::XMLHttpRequestProgressEventThrottle"* %41, %"class.blink::XMLHttpRequest"* %0) #4
  %42 = getelementptr inbounds i8, i8* %40, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  %46 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 30, i32 0, i32 0
  %47 = bitcast %"class.blink::XMLHttpRequestProgressEventThrottle"** %46 to i8**
  store i8* %40, i8** %47, align 8
  %48 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  store i32 0, i32* %48, align 8
  %49 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 32
  store %"class.v8::Isolate"* %2, %"class.v8::Isolate"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 33
  %51 = bitcast %class.scoped_refptr.165* %50 to i64*
  store i64 %5, i64* %51, align 8
  %52 = icmp eq %"class.blink::DOMWrapperWorld"* %3, null
  br i1 %52, label %61, label %53

53:                                               ; preds = %4
  %54 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %3, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, -1
  %57 = icmp ult i32 %56, 2
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = tail call dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink16ExecutionContext17GetAgentClusterIDEv(%"class.blink::ExecutionContext"* %1) #4
  %60 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink15DOMWrapperWorld27IsolatedWorldSecurityOriginERKN4base16UnguessableTokenE(%"class.blink::DOMWrapperWorld"* nonnull %3, %"class.base::UnguessableToken"* dereferenceable(16) %59) #4
  br label %61

61:                                               ; preds = %53, %4, %58
  %62 = phi %"class.blink::SecurityOrigin"* [ %60, %58 ], [ null, %4 ], [ null, %53 ]
  %63 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 34, i32 0
  store %"class.blink::SecurityOrigin"* %62, %"class.blink::SecurityOrigin"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 35, i32 0, i32 0
  store %"class.blink::XMLHttpRequest::BlobLoader"* null, %"class.blink::XMLHttpRequest::BlobLoader"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  store i8 1, i8* %66, align 4
  %67 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 38
  store i8 0, i8* %67, align 1
  %68 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 39
  store i8 0, i8* %68, align 2
  %69 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 41
  store i8 1, i8* %70, align 8
  %71 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 42
  %72 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 47, i32 0
  store i8 0, i8* %72, align 8
  %73 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 47, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %73, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %71, i8 0, i64 5, i1 false)
  ret void
}

declare void @_ZN5blink33ExecutionContextLifecycleObserverC2EPNS_16ExecutionContextENS0_4TypeE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*, i32) unnamed_addr #2

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

declare void @_ZN5blink13HTTPHeaderMapC1Ev(%"class.blink::HTTPHeaderMap"*) unnamed_addr #2

declare void @_ZN5blink10TaskHandleC1Ev(%"class.blink::TaskHandle"*) unnamed_addr #2

declare void @_ZN5blink16ResourceResponseC1Ev(%"class.blink::ResourceResponse"*) unnamed_addr #2

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #4

declare %"class.blink::SecurityOrigin"* @_ZNK5blink15DOMWrapperWorld27IsolatedWorldSecurityOriginERKN4base16UnguessableTokenE(%"class.blink::DOMWrapperWorld"*, %"class.base::UnguessableToken"* dereferenceable(16)) local_unnamed_addr #2

declare dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK5blink16ExecutionContext17GetAgentClusterIDEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequestD2Ev(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }, { [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink14XMLHttpRequestE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }, { [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink14XMLHttpRequestE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }, { [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink14XMLHttpRequestE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = bitcast i32 (...)*** %5 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }, { [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink14XMLHttpRequestE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }, { [39 x i8*], [16 x i8*], [4 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink14XMLHttpRequestE, i64 0, inrange i32 4, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 23
  %8 = bitcast %class.scoped_refptr.142* %7 to i64*
  %9 = getelementptr inbounds %class.scoped_refptr.142, %class.scoped_refptr.142* %7, i64 0, i32 0
  %10 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %9, align 8
  store i64 0, i64* %8, align 8
  %11 = icmp eq %"class.WTF::SharedBuffer"* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %10, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %13) #4
  %14 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %10) #4
  %18 = bitcast %"class.WTF::SharedBuffer"* %10 to i8*
  tail call void @free(i8* %18) #4
  br label %19

19:                                               ; preds = %1, %12, %17
  %20 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 25
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 23, i32 0
  %22 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %21, align 8
  %23 = icmp eq %"class.WTF::SharedBuffer"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %22, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  br label %27

27:                                               ; preds = %24, %19
  %28 = phi i64 [ %26, %24 ], [ 0, %19 ]
  %29 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 24
  %30 = load i64, i64* %29, align 8
  %31 = sub nsw i64 %28, %30
  store i64 %28, i64* %29, align 8
  %32 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 26
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  store i64 0, i64* %32, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %40, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 32
  %38 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %37, align 8
  %39 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %38, i64 %34) #4
  br label %40

40:                                               ; preds = %27, %36
  %41 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 34, i32 0
  %42 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %41, align 8
  %43 = icmp eq %"class.blink::SecurityOrigin"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #4
  %46 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %42) #4
  %50 = bitcast %"class.blink::SecurityOrigin"* %42 to i8*
  tail call void @free(i8* %50) #4
  br label %51

51:                                               ; preds = %40, %44, %49
  %52 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 33, i32 0
  %53 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %52, align 8
  %54 = icmp eq %"class.blink::DOMWrapperWorld"* %53, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %53, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %56) #4
  %57 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %53, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %53) #4
  %61 = bitcast %"class.blink::DOMWrapperWorld"* %53 to i8*
  tail call void @free(i8* %61) #4
  br label %62

62:                                               ; preds = %51, %55, %60
  %63 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %9, align 8
  %64 = icmp eq %"class.WTF::SharedBuffer"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #4
  %67 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %63) #4
  %71 = bitcast %"class.WTF::SharedBuffer"* %63 to i8*
  tail call void @free(i8* %71) #4
  br label %72

72:                                               ; preds = %62, %65, %70
  %73 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %74 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %73, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %73, align 8
  %75 = icmp eq %"class.blink::TextResourceDecoder"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %72
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %74) #4
  %77 = bitcast %"class.blink::TextResourceDecoder"* %74 to i8*
  tail call void @free(i8* %77) #4
  br label %78

78:                                               ; preds = %72, %76
  %79 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  tail call void @_ZN5blink16ResourceResponseD1Ev(%"class.blink::ResourceResponse"* %79) #4
  %80 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 15
  tail call void @_ZN5blink10TaskHandleD1Ev(%"class.blink::TaskHandle"* %80) #4
  %81 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #4
  br label %97

97:                                               ; preds = %78, %93, %96
  %98 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %99 = load %"class.network::mojom::blink::TrustTokenParams"*, %"class.network::mojom::blink::TrustTokenParams"** %98, align 8
  store %"class.network::mojom::blink::TrustTokenParams"* null, %"class.network::mojom::blink::TrustTokenParams"** %98, align 8
  %100 = icmp eq %"class.network::mojom::blink::TrustTokenParams"* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  tail call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* nonnull %99) #4
  %102 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %99 to i8*
  tail call void @_ZdlPv(i8* %102) #16
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9
  tail call void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"* %104) #4
  %105 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #4
  br label %121

121:                                              ; preds = %103, %117, %120
  %122 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %122) #4
  %123 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %123) #4
  %124 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %124) #4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %125 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 0, i32 0, i32 1
  %126 = bitcast %"class.blink::EventTargetData"* %125 to i8*
  %127 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %126, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.62, i64 0, i64 0), i32 261) #4
  %128 = bitcast i8* %127 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %128) #4
  %129 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %129) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest21ReportMemoryUsageToV8Ev(%"class.blink::XMLHttpRequest"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 23, i32 0
  %3 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %2, align 8
  %4 = icmp eq %"class.WTF::SharedBuffer"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %3, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 0, %1 ]
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 24
  %11 = load i64, i64* %10, align 8
  %12 = sub nsw i64 %9, %11
  store i64 %9, i64* %10, align 8
  %13 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 25
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 26
  %16 = load i64, i64* %15, align 8
  %17 = sub nsw i64 %14, %16
  %18 = add nsw i64 %17, %12
  store i64 %14, i64* %15, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 32
  %22 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %21, align 8
  %23 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %22, i64 %18) #4
  br label %24

24:                                               ; preds = %8, %20
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink16ResourceResponseD1Ev(%"class.blink::ResourceResponse"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink10TaskHandleD1Ev(%"class.blink::TaskHandle"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink13HTTPHeaderMapD1Ev(%"class.blink::HTTPHeaderMap"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink14XMLHttpRequestD1Ev(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 32
  %3 = bitcast %"class.v8::Isolate"** %2 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZN5blink14XMLHttpRequestD2Ev(%"class.blink::XMLHttpRequest"* %3) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N5blink14XMLHttpRequestD1Ev(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 30
  %3 = bitcast %"class.blink::Member.151"* %2 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZN5blink14XMLHttpRequestD2Ev(%"class.blink::XMLHttpRequest"* %3) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn96_N5blink14XMLHttpRequestD1Ev(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 29
  %3 = bitcast i32* %2 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZN5blink14XMLHttpRequestD2Ev(%"class.blink::XMLHttpRequest"* %3) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequestD0Ev(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14XMLHttpRequestD2Ev(%"class.blink::XMLHttpRequest"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink14XMLHttpRequestD0Ev(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 32
  %3 = bitcast %"class.v8::Isolate"** %2 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZN5blink14XMLHttpRequestD2Ev(%"class.blink::XMLHttpRequest"* %3) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N5blink14XMLHttpRequestD0Ev(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 30
  %3 = bitcast %"class.blink::Member.151"* %2 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZN5blink14XMLHttpRequestD2Ev(%"class.blink::XMLHttpRequest"* %3) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn96_N5blink14XMLHttpRequestD0Ev(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 29
  %3 = bitcast i32* %2 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZN5blink14XMLHttpRequestD2Ev(%"class.blink::XMLHttpRequest"* %3) #4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink14XMLHttpRequest10readyStateEv(%"class.blink::XMLHttpRequest"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZN5blink14XMLHttpRequest12responseTextERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  %6 = load i32, i32* %5, align 8
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %169, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #4
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink14XMLHttpRequest12responseTypeEv(%"class.blink::XMLHttpRequest"* %0)
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %88, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %30

20:                                               ; preds = %13
  %21 = zext i32 %19 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #4
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %20
  tail call void @llvm.trap() #4
  unreachable

28:                                               ; preds = %20
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %18, align 4
  br label %30

30:                                               ; preds = %28, %13
  %31 = phi i32 [ %29, %28 ], [ %19, %13 ]
  %32 = load atomic i32, i32* %14 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %30
  %36 = zext i32 %31 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #4
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %35
  tail call void @llvm.trap() #4
  unreachable

43:                                               ; preds = %35
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %18, align 4
  br label %45

45:                                               ; preds = %43, %30
  %46 = phi i32 [ %44, %43 ], [ %31, %30 ]
  %47 = load atomic i32, i32* %14 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = add i32 %46, -1
  store i32 %51, i32* %18, align 4
  br label %52

52:                                               ; preds = %50, %45
  %53 = phi i32 [ %51, %50 ], [ %46, %45 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #4
  br label %56

56:                                               ; preds = %52, %55
  %57 = load atomic i32, i32* %14 monotonic, align 4, !noalias !3
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = load i32, i32* %18, align 4
  br i1 %59, label %61, label %71

61:                                               ; preds = %56
  %62 = zext i32 %60 to i33
  %63 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #4
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !2

68:                                               ; preds = %61
  tail call void @llvm.trap() #4, !noalias !3
  unreachable

69:                                               ; preds = %61
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %18, align 4, !noalias !3
  br label %71

71:                                               ; preds = %56, %69
  %72 = phi i32 [ %70, %69 ], [ %60, %56 ]
  %73 = bitcast %"class.WTF::StringAppend"* %4 to i64*
  store i64 ptrtoint ([83 x i8]* @.str.4 to i64), i64* %73, align 8, !alias.scope !3
  %74 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %74, align 8, !alias.scope !3
  %75 = load atomic i32, i32* %14 monotonic, align 4, !noalias !3
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %92

78:                                               ; preds = %71
  %79 = zext i32 %72 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #4
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !2

85:                                               ; preds = %78
  tail call void @llvm.trap() #4, !noalias !3
  unreachable

86:                                               ; preds = %78
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %18, align 4, !noalias !3
  br label %92

88:                                               ; preds = %8
  %89 = bitcast %"class.WTF::StringAppend"* %4 to i64*
  store i64 ptrtoint ([83 x i8]* @.str.4 to i64), i64* %89, align 8, !alias.scope !3
  %90 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %90, align 8, !alias.scope !3
  %91 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** %91, align 8, !alias.scope !3
  br label %104

92:                                               ; preds = %86, %71
  %93 = phi i32 [ %87, %86 ], [ %72, %71 ]
  %94 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** %94, align 8, !alias.scope !3
  %95 = load atomic i32, i32* %14 monotonic, align 4, !noalias !3
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = add i32 %93, -1
  store i32 %99, i32* %18, align 4, !noalias !3
  br label %100

100:                                              ; preds = %98, %92
  %101 = phi i32 [ %99, %98 ], [ %93, %92 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #4, !noalias !3
  br label %104

104:                                              ; preds = %88, %100, %103
  %105 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %4)
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %108 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %107, align 8
  %109 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %108, align 8
  call void %109(%"class.blink::ExceptionState"* %1, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %3) #4
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #4
  br label %125

125:                                              ; preds = %104, %121, %124
  %126 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #4
  br label %142

142:                                              ; preds = %125, %138, %141
  br i1 %12, label %168, label %143

143:                                              ; preds = %142
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #4
  %156 = load i32, i32* %148, align 4
  br label %157

157:                                              ; preds = %152, %155
  %158 = phi i32 [ %153, %152 ], [ %156, %155 ]
  %159 = load atomic i32, i32* %144 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %164

162:                                              ; preds = %157
  %163 = add i32 %158, -1
  store i32 %163, i32* %148, align 4
  br label %164

164:                                              ; preds = %162, %157
  %165 = phi i32 [ %163, %162 ], [ %158, %157 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #4
  br label %168

168:                                              ; preds = %142, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  br label %194

169:                                              ; preds = %2
  %170 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %171 = load i8, i8* %170, align 1, !range !6
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %173, label %194

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %175 = load i32, i32* %174, align 8
  %176 = add i32 %175, -3
  %177 = icmp ult i32 %176, 2
  br i1 %177, label %178, label %194

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 20
  %180 = bitcast %"class.blink::TraceWrapperV8String"* %179 to i8*
  %181 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %180, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 320)
  %182 = getelementptr inbounds i8, i8* %181, i64 8
  %183 = bitcast i8* %182 to %"class.v8::String"**
  %184 = load %"class.v8::String"*, %"class.v8::String"** %183, align 8
  %185 = icmp eq %"class.v8::String"* %184, null
  br i1 %185, label %194, label %186

186:                                              ; preds = %178
  %187 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 32
  %188 = bitcast %"class.v8::Isolate"** %187 to %"class.v8::internal::Isolate"**
  %189 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %188, align 8
  %190 = bitcast %"class.v8::String"* %184 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %189, i64 %191) #4
  %193 = bitcast i64* %192 to %"class.v8::String"*
  br label %194

194:                                              ; preds = %186, %178, %169, %173, %168
  %195 = phi %"class.v8::String"* [ null, %168 ], [ null, %173 ], [ null, %169 ], [ %193, %186 ], [ null, %178 ]
  ret %"class.v8::String"* %195
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14XMLHttpRequest12responseTypeEv(%"class.blink::XMLHttpRequest"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %11 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
  ]

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i64 0) #4
  br label %12

6:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i64 4) #4
  br label %12

7:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i64 4) #4
  br label %12

8:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i64 8) #4
  br label %12

9:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i64 4) #4
  br label %12

10:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i64 11) #4
  br label %12

11:                                               ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i64 0) #4
  br label %12

12:                                               ; preds = %11, %10, %9, %8, %7, %6, %5
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  ret %"class.WTF::StringImpl"* %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2553"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #4
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #4
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %3, i8* %8) #4
  %9 = bitcast %"class.WTF::StringTypeAdapter.2553"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #4
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #4
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %2, i8* %11) #4
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #4
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #4
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #4
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #4
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #4
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #4
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #4
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #4
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #4
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #4
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #4
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZN5blink14XMLHttpRequest18ResponseJSONSourceEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %3 = load i8, i8* %2, align 1, !range !6
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %25

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %9, label %25

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 20
  %11 = bitcast %"class.blink::TraceWrapperV8String"* %10 to i8*
  %12 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 320)
  %13 = getelementptr inbounds i8, i8* %12, i64 8
  %14 = bitcast i8* %13 to %"class.v8::String"**
  %15 = load %"class.v8::String"*, %"class.v8::String"** %14, align 8
  %16 = icmp eq %"class.v8::String"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 32
  %19 = bitcast %"class.v8::Isolate"** %18 to %"class.v8::internal::Isolate"**
  %20 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %19, align 8
  %21 = bitcast %"class.v8::String"* %15 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %22) #4
  %24 = bitcast i64* %23 to %"class.v8::String"*
  br label %25

25:                                               ; preds = %17, %9, %1, %5
  %26 = phi %"class.v8::String"* [ null, %5 ], [ null, %1 ], [ %24, %17 ], [ null, %9 ]
  ret %"class.v8::String"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest20InitResponseDocumentEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.blink::DocumentInit", align 8
  %5 = alloca %"class.blink::DocumentInit", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #4
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14XMLHttpRequest21FinalResponseMIMETypeEv(%"class.blink::XMLHttpRequest"* %0) #4
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %17

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 0, i32* %15, align 8
  %16 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [10 x i8]* nonnull dereferenceable(10) @.str.59) #4
  br label %38

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %23 = bitcast i8** %22 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %20, i32* %24, align 8
  %25 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [10 x i8]* nonnull dereferenceable(10) @.str.59) #4
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %17
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %17
  %35 = phi i32 [ %33, %32 ], [ %31, %17 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #4
  br label %38

38:                                               ; preds = %11, %34, %37
  %39 = phi i1 [ %16, %11 ], [ %25, %34 ], [ %25, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #4
  %40 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  %41 = call zeroext i1 @_ZNK5blink16ResourceResponse6IsHTTPEv(%"class.blink::ResourceResponse"* %40) #4
  br i1 %41, label %42, label %45

42:                                               ; preds = %38
  %43 = call zeroext i1 @_ZNK5blink14XMLHttpRequest13ResponseIsXMLEv(%"class.blink::XMLHttpRequest"* %0)
  %44 = or i1 %39, %43
  br i1 %44, label %45, label %62

45:                                               ; preds = %42, %38
  br i1 %39, label %46, label %50

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %62, label %50

50:                                               ; preds = %46, %45
  %51 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %52 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %51 to %"class.blink::ExecutionContextLifecycleObserver"*
  %53 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %52) #4
  %54 = icmp eq %"class.blink::ExecutionContext"* %53, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %50
  %56 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %52) #4
  %57 = bitcast %"class.blink::ExecutionContext"* %56 to i1 (%"class.blink::ExecutionContext"*)***
  %58 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %58, i64 3
  %60 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %59, align 8
  %61 = call zeroext i1 %60(%"class.blink::ExecutionContext"* %56) #4
  br i1 %61, label %62, label %65

62:                                               ; preds = %42, %50, %55, %46
  %63 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 21
  %64 = bitcast %"class.blink::Member.129"* %63 to i64*
  store atomic i64 0, i64* %64 monotonic, align 8
  br label %155

65:                                               ; preds = %55
  %66 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %52) #4
  %67 = icmp eq %"class.blink::ExecutionContext"* %66, null
  %68 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %66, i64 -1, i32 8
  %69 = bitcast i32* %68 to %"class.blink::LocalDOMWindow"*
  %70 = select i1 %67, %"class.blink::LocalDOMWindow"* null, %"class.blink::LocalDOMWindow"* %69
  %71 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* %70) #4
  %72 = bitcast %"class.blink::DocumentInit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %72) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 288, i1 false)
  %73 = bitcast %"class.blink::DocumentInit"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %73) #4
  call void @_ZN5blink12DocumentInit6CreateEv(%"class.blink::DocumentInit"* nonnull sret %5) #4
  %74 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %52) #4
  %75 = call dereferenceable(288) %"class.blink::DocumentInit"* @_ZN5blink12DocumentInit20WithExecutionContextEPNS_16ExecutionContextE(%"class.blink::DocumentInit"* nonnull %5, %"class.blink::ExecutionContext"* %74) #4
  %76 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %76) #4
  call void @_ZNK5blink16ResourceResponse11ResponseUrlEv(%"class.blink::KURL"* nonnull sret %6, %"class.blink::ResourceResponse"* %40) #4
  %77 = call dereferenceable(288) %"class.blink::DocumentInit"* @_ZN5blink12DocumentInit7WithURLERKNS_4KURLE(%"class.blink::DocumentInit"* %75, %"class.blink::KURL"* nonnull dereferenceable(112) %6) #4
  call void @_ZN5blink12DocumentInitC1ERKS0_(%"class.blink::DocumentInit"* nonnull %4, %"class.blink::DocumentInit"* dereferenceable(288) %77) #4
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %76) #4
  call void @_ZN5blink12DocumentInitD1Ev(%"class.blink::DocumentInit"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %73) #4
  br i1 %39, label %78, label %93

78:                                               ; preds = %65
  %79 = call %"class.blink::HTMLDocument"* @_ZN5blink25MakeGarbageCollectedTraitINS_12HTMLDocumentEE4CallIJRNS_12DocumentInitEEEEPS1_DpOT_(%"class.blink::DocumentInit"* nonnull dereferenceable(288) %4) #4
  %80 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 21
  %81 = ptrtoint %"class.blink::HTMLDocument"* %79 to i64
  %82 = bitcast %"class.blink::Member.129"* %80 to i64*
  store atomic i64 %81, i64* %82 monotonic, align 8
  %83 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.blink::HTMLDocument", %"class.blink::HTMLDocument"* %79, i64 0, i32 0
  br i1 %84, label %91, label %86

86:                                               ; preds = %78
  %87 = bitcast %"class.blink::HTMLDocument"* %79 to i8*
  %88 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %87) #4
  %89 = getelementptr inbounds %"class.blink::Member.129", %"class.blink::Member.129"* %80, i64 0, i32 0, i32 0
  %90 = load %"class.blink::Document"*, %"class.blink::Document"** %89, align 8
  br label %91

91:                                               ; preds = %78, %86
  %92 = phi %"class.blink::Document"* [ %85, %78 ], [ %90, %86 ]
  call void @_ZN5blink8Document30setAllowDeclarativeShadowRootsEb(%"class.blink::Document"* %92, i1 zeroext false) #4
  br label %103

93:                                               ; preds = %65
  %94 = call %"class.blink::XMLDocument"* @_ZN5blink25MakeGarbageCollectedTraitINS_11XMLDocumentEE4CallIJRNS_12DocumentInitEEEEPS1_DpOT_(%"class.blink::DocumentInit"* nonnull dereferenceable(288) %4) #4
  %95 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 21
  %96 = ptrtoint %"class.blink::XMLDocument"* %94 to i64
  %97 = bitcast %"class.blink::Member.129"* %95 to i64*
  store atomic i64 %96, i64* %97 monotonic, align 8
  %98 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %93
  %101 = bitcast %"class.blink::XMLDocument"* %94 to i8*
  %102 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #4
  br label %103

103:                                              ; preds = %100, %93, %91
  %104 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 21, i32 0, i32 0
  %105 = load %"class.blink::Document"*, %"class.blink::Document"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %71, i64 0, i32 16, i32 0, i32 0
  %107 = load %"class.blink::ContextFeatures"*, %"class.blink::ContextFeatures"** %106, align 8
  call void @_ZN5blink8Document18SetContextFeaturesERNS_15ContextFeaturesE(%"class.blink::Document"* %105, %"class.blink::ContextFeatures"* %107) #4
  %108 = load %"class.blink::Document"*, %"class.blink::Document"** %104, align 8
  %109 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #4
  %110 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110)
  %111 = call %"class.WTF::StringImpl"* @_ZNK5blink14XMLHttpRequest21FinalResponseMIMETypeEv(%"class.blink::XMLHttpRequest"* %0) #4
  %112 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %113 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %113, label %114, label %115

114:                                              ; preds = %103
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i64 8) #4
  br label %134

115:                                              ; preds = %103
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %115
  %120 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  store i64 %112, i64* %120, align 8
  br label %134

121:                                              ; preds = %115
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i64 8) #4
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #4
  br label %134

134:                                              ; preds = %114, %119, %130, %133
  %135 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %136 = load i64, i64* %135, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110)
  %137 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %138 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  store i64 %136, i64* %138, align 8
  call void @_ZN5blink8Document11SetMimeTypeERKN3WTF12AtomicStringE(%"class.blink::Document"* %108, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #4
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %134
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #4
  br label %154

154:                                              ; preds = %134, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #4
  call void @_ZN5blink12DocumentInitD1Ev(%"class.blink::DocumentInit"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %72) #4
  br label %155

155:                                              ; preds = %154, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14XMLHttpRequest14ResponseIsHTMLEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #4
  %4 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14XMLHttpRequest21FinalResponseMIMETypeEv(%"class.blink::XMLHttpRequest"* %0)
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %6, label %12

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %7, align 8
  %8 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %9 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 0, i32* %10, align 8
  %11 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [10 x i8]* nonnull dereferenceable(10) @.str.59)
  br label %33

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %4, %"class.WTF::StringImpl"** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %15, i32* %19, align 8
  %20 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [10 x i8]* nonnull dereferenceable(10) @.str.59)
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %12
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %12
  %30 = phi i32 [ %28, %27 ], [ %26, %12 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #4
  br label %33

33:                                               ; preds = %6, %29, %32
  %34 = phi i1 [ %11, %6 ], [ %20, %29 ], [ %20, %32 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #4
  ret i1 %34
}

declare zeroext i1 @_ZNK5blink16ResourceResponse6IsHTTPEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14XMLHttpRequest13ResponseIsXMLEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #4
  %5 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5)
  %6 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14XMLHttpRequest21FinalResponseMIMETypeEv(%"class.blink::XMLHttpRequest"* %0) #4
  %7 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i64 8) #4
  br label %29

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  store i64 %7, i64* %15, align 8
  br label %29

16:                                               ; preds = %10
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i64 8) #4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #4
  br label %29

29:                                               ; preds = %9, %14, %25, %28
  %30 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %31 = load i64, i64* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5)
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  %35 = call zeroext i1 @_ZN5blink16MIMETypeRegistry13IsXMLMIMETypeERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %34) #4
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #4
  br label %51

51:                                               ; preds = %29, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #4
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ExecutionContext"* @_ZNK5blink14XMLHttpRequest19GetExecutionContextEv(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %3) #4
  ret %"class.blink::ExecutionContext"* %4
}

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink12DocumentInit6CreateEv(%"class.blink::DocumentInit"* sret) local_unnamed_addr #2

declare dereferenceable(288) %"class.blink::DocumentInit"* @_ZN5blink12DocumentInit20WithExecutionContextEPNS_16ExecutionContextE(%"class.blink::DocumentInit"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare dereferenceable(288) %"class.blink::DocumentInit"* @_ZN5blink12DocumentInit7WithURLERKNS_4KURLE(%"class.blink::DocumentInit"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare void @_ZNK5blink16ResourceResponse11ResponseUrlEv(%"class.blink::KURL"* sret, %"class.blink::ResourceResponse"*) local_unnamed_addr #2

declare void @_ZN5blink12DocumentInitC1ERKS0_(%"class.blink::DocumentInit"*, %"class.blink::DocumentInit"* dereferenceable(288)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink12DocumentInitD1Ev(%"class.blink::DocumentInit"*) unnamed_addr #3

declare void @_ZN5blink8Document30setAllowDeclarativeShadowRootsEb(%"class.blink::Document"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink8Document18SetContextFeaturesERNS_15ContextFeaturesE(%"class.blink::Document"*, %"class.blink::ContextFeatures"*) local_unnamed_addr #2

declare void @_ZN5blink8Document11SetMimeTypeERKN3WTF12AtomicStringE(%"class.blink::Document"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14XMLHttpRequest33FinalResponseMIMETypeWithFallbackEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14XMLHttpRequest21FinalResponseMIMETypeEv(%"class.blink::XMLHttpRequest"* %0)
  %4 = ptrtoint %"class.WTF::StringImpl"* %3 to i64
  %5 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %1
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i64 8) #4
  br label %26

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  store i64 %4, i64* %12, align 8
  br label %26

13:                                               ; preds = %7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i64 8) #4
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #4
  br label %26

26:                                               ; preds = %6, %11, %22, %25
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  ret %"class.WTF::StringImpl"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Document"* @_ZN5blink14XMLHttpRequest11responseXMLERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %8 [
    i32 0, label %169
    i32 3, label %169
  ]

8:                                                ; preds = %2
  %9 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #4
  %11 = tail call %"class.WTF::StringImpl"* @_ZN5blink14XMLHttpRequest12responseTypeEv(%"class.blink::XMLHttpRequest"* %0)
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %88, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %30

20:                                               ; preds = %13
  %21 = zext i32 %19 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #4
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %20
  tail call void @llvm.trap() #4
  unreachable

28:                                               ; preds = %20
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %18, align 4
  br label %30

30:                                               ; preds = %28, %13
  %31 = phi i32 [ %29, %28 ], [ %19, %13 ]
  %32 = load atomic i32, i32* %14 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %30
  %36 = zext i32 %31 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #4
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %35
  tail call void @llvm.trap() #4
  unreachable

43:                                               ; preds = %35
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %18, align 4
  br label %45

45:                                               ; preds = %43, %30
  %46 = phi i32 [ %44, %43 ], [ %31, %30 ]
  %47 = load atomic i32, i32* %14 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = add i32 %46, -1
  store i32 %51, i32* %18, align 4
  br label %52

52:                                               ; preds = %50, %45
  %53 = phi i32 [ %51, %50 ], [ %46, %45 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #4
  br label %56

56:                                               ; preds = %52, %55
  %57 = load atomic i32, i32* %14 monotonic, align 4, !noalias !7
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = load i32, i32* %18, align 4
  br i1 %59, label %61, label %71

61:                                               ; preds = %56
  %62 = zext i32 %60 to i33
  %63 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #4
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !2

68:                                               ; preds = %61
  tail call void @llvm.trap() #4, !noalias !7
  unreachable

69:                                               ; preds = %61
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %18, align 4, !noalias !7
  br label %71

71:                                               ; preds = %56, %69
  %72 = phi i32 [ %70, %69 ], [ %60, %56 ]
  %73 = bitcast %"class.WTF::StringAppend"* %4 to i64*
  store i64 ptrtoint ([87 x i8]* @.str.6 to i64), i64* %73, align 8, !alias.scope !7
  %74 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %74, align 8, !alias.scope !7
  %75 = load atomic i32, i32* %14 monotonic, align 4, !noalias !7
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %92

78:                                               ; preds = %71
  %79 = zext i32 %72 to i33
  %80 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #4
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !2

85:                                               ; preds = %78
  tail call void @llvm.trap() #4, !noalias !7
  unreachable

86:                                               ; preds = %78
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %18, align 4, !noalias !7
  br label %92

88:                                               ; preds = %8
  %89 = bitcast %"class.WTF::StringAppend"* %4 to i64*
  store i64 ptrtoint ([87 x i8]* @.str.6 to i64), i64* %89, align 8, !alias.scope !7
  %90 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %90, align 8, !alias.scope !7
  %91 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** %91, align 8, !alias.scope !7
  br label %104

92:                                               ; preds = %86, %71
  %93 = phi i32 [ %87, %86 ], [ %72, %71 ]
  %94 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** %94, align 8, !alias.scope !7
  %95 = load atomic i32, i32* %14 monotonic, align 4, !noalias !7
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %92
  %99 = add i32 %93, -1
  store i32 %99, i32* %18, align 4, !noalias !7
  br label %100

100:                                              ; preds = %98, %92
  %101 = phi i32 [ %99, %98 ], [ %93, %92 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #4, !noalias !7
  br label %104

104:                                              ; preds = %88, %100, %103
  %105 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %4)
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %108 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %107, align 8
  %109 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %108, align 8
  call void %109(%"class.blink::ExceptionState"* %1, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %3) #4
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #4
  br label %125

125:                                              ; preds = %104, %121, %124
  %126 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #4
  br label %142

142:                                              ; preds = %125, %138, %141
  br i1 %12, label %168, label %143

143:                                              ; preds = %142
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #4
  %156 = load i32, i32* %148, align 4
  br label %157

157:                                              ; preds = %152, %155
  %158 = phi i32 [ %153, %152 ], [ %156, %155 ]
  %159 = load atomic i32, i32* %144 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %164

162:                                              ; preds = %157
  %163 = add i32 %158, -1
  store i32 %163, i32* %148, align 4
  br label %164

164:                                              ; preds = %162, %157
  %165 = phi i32 [ %163, %162 ], [ %158, %157 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #4
  br label %168

168:                                              ; preds = %142, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  br label %266

169:                                              ; preds = %2, %2
  %170 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %171 = load i8, i8* %170, align 1, !range !6
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %173, label %266

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %175 = load i32, i32* %174, align 8
  %176 = icmp eq i32 %175, 4
  br i1 %176, label %177, label %266

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 39
  %179 = load i8, i8* %178, align 2, !range !6
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %263

181:                                              ; preds = %177
  tail call void @_ZN5blink14XMLHttpRequest20InitResponseDocumentEv(%"class.blink::XMLHttpRequest"* %0)
  %182 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 21
  %183 = getelementptr inbounds %"class.blink::Member.129", %"class.blink::Member.129"* %182, i64 0, i32 0, i32 0
  %184 = load %"class.blink::Document"*, %"class.blink::Document"** %183, align 8
  %185 = icmp eq %"class.blink::Document"* %184, null
  br i1 %185, label %266, label %186

186:                                              ; preds = %181
  %187 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187) #4
  %188 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 20
  %189 = bitcast %"class.blink::TraceWrapperV8String"* %188 to i8*
  %190 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %189, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 320)
  %191 = bitcast i8* %190 to %"class.blink::TraceWrapperV8String"*
  %192 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 32
  %193 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %192, align 8
  %194 = tail call %"class.WTF::StringImpl"* @_ZNK5blink20TraceWrapperV8String7FlattenEPN2v87IsolateE(%"class.blink::TraceWrapperV8String"* %191, %"class.v8::Isolate"* %193) #4
  %195 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %194, %"class.WTF::StringImpl"** %195, align 8
  call void @_ZN5blink8Document10SetContentERKN3WTF6StringE(%"class.blink::Document"* nonnull %184, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %186
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #4
  br label %211

211:                                              ; preds = %186, %207, %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187) #4
  %212 = load %"class.blink::Document"*, %"class.blink::Document"** %183, align 8
  %213 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %212, i64 0, i32 18
  %214 = load i8, i8* %213, align 8, !range !6
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %216, label %218

216:                                              ; preds = %211
  %217 = bitcast %"class.blink::Member.129"* %182 to i64*
  store atomic i64 0, i64* %217 monotonic, align 8
  br label %262

218:                                              ; preds = %211
  %219 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  %220 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names13kLastModifiedE, align 8
  %221 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %219, %"class.WTF::AtomicString"* dereferenceable(8) %220) #4
  %222 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %212, i64 0, i32 166
  %223 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %221, i64 0, i32 0, i32 0, i32 0
  %224 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %223, align 8
  %225 = icmp eq %"class.WTF::StringImpl"* %224, null
  br i1 %225, label %243, label %226

226:                                              ; preds = %218
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = load atomic i32, i32* %227 monotonic, align 4
  %229 = and i32 %228, 2
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %243

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %224, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  %234 = zext i32 %233 to i33
  %235 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %234, i33 1) #4
  %236 = extractvalue { i33, i1 } %235, 1
  %237 = extractvalue { i33, i1 } %235, 0
  %238 = icmp slt i33 %237, 0
  %239 = or i1 %236, %238
  br i1 %239, label %240, label %241, !prof !2

240:                                              ; preds = %231
  call void @llvm.trap() #4
  unreachable

241:                                              ; preds = %231
  %242 = trunc i33 %237 to i32
  store i32 %242, i32* %232, align 4
  br label %243

243:                                              ; preds = %241, %226, %218
  %244 = ptrtoint %"class.WTF::StringImpl"* %224 to i64
  %245 = bitcast %"class.WTF::AtomicString"* %222 to i64*
  %246 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %222, i64 0, i32 0, i32 0, i32 0
  %247 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  store i64 %244, i64* %245, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %247, null
  br i1 %248, label %262, label %249

249:                                              ; preds = %243
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %247, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %249
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %249
  %259 = phi i32 [ %257, %256 ], [ %255, %249 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %247) #4
  br label %262

262:                                              ; preds = %261, %258, %243, %216
  store i8 1, i8* %178, align 2
  br label %263

263:                                              ; preds = %177, %262
  %264 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 21, i32 0, i32 0
  %265 = load %"class.blink::Document"*, %"class.blink::Document"** %264, align 8
  br label %266

266:                                              ; preds = %181, %169, %173, %263, %168
  %267 = phi %"class.blink::Document"* [ null, %168 ], [ %265, %263 ], [ null, %173 ], [ null, %169 ], [ null, %181 ]
  ret %"class.blink::Document"* %267
}

declare void @_ZN5blink8Document10SetContentERKN3WTF6StringE(%"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink20TraceWrapperV8String7FlattenEPN2v87IsolateE(%"class.blink::TraceWrapperV8String"*, %"class.v8::Isolate"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Blob"* @_ZN5blink14XMLHttpRequest12ResponseBlobEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::SharedBuffer::Iterator", align 8
  %6 = alloca %"class.WTF::SharedBuffer::Iterator", align 8
  %7 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %8 = load i8, i8* %7, align 1, !range !6
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %162

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %14, label %162

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 14
  %16 = getelementptr inbounds %"class.blink::Member.45", %"class.blink::Member.45"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::Blob"*, %"class.blink::Blob"** %16, align 8
  %18 = icmp eq %"class.blink::Blob"* %17, null
  br i1 %18, label %19, label %162

19:                                               ; preds = %14
  %20 = tail call noalias i8* @malloc(i64 48) #4
  %21 = bitcast i8* %20 to %"class.blink::BlobData"*
  tail call void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"* %21, i32 1) #4
  %22 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #4
  %23 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4
  %24 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14XMLHttpRequest21FinalResponseMIMETypeEv(%"class.blink::XMLHttpRequest"* %0) #4
  %26 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  %27 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %19
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i64 8) #4
  br label %48

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  store i64 %26, i64* %34, align 8
  br label %48

35:                                               ; preds = %29
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i64 8) #4
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #4
  br label %48

48:                                               ; preds = %28, %33, %44, %47
  %49 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %50 = load i64, i64* %49, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  store i64 %50, i64* %52, align 8
  %53 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* nonnull %4) #4
  %54 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0
  call void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"* %21, %"class.WTF::String"* nonnull dereferenceable(8) %55) #4
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #4
  br label %71

71:                                               ; preds = %48, %67, %70
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #4
  br label %87

87:                                               ; preds = %71, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #4
  %88 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 23
  %89 = getelementptr inbounds %class.scoped_refptr.142, %class.scoped_refptr.142* %88, i64 0, i32 0
  %90 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %89, align 8
  %91 = icmp eq %"class.WTF::SharedBuffer"* %90, null
  br i1 %91, label %144, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %90, i64 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %144, label %96

96:                                               ; preds = %92
  %97 = bitcast %"class.WTF::SharedBuffer::Iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %97) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 -86, i64 32, i1 false)
  call void @_ZNK3WTF12SharedBuffer5beginEv(%"class.WTF::SharedBuffer::Iterator"* nonnull sret %5, %"class.WTF::SharedBuffer"* nonnull %90) #4
  %98 = bitcast %"class.WTF::SharedBuffer::Iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %98) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 32, i1 false)
  call void @_ZNK3WTF12SharedBuffer3endEv(%"class.WTF::SharedBuffer::Iterator"* nonnull sret %6, %"class.WTF::SharedBuffer"* nonnull %90) #4
  %99 = call zeroext i1 @_ZNK3WTF12SharedBuffer8IteratoreqERKS1_(%"class.WTF::SharedBuffer::Iterator"* nonnull %5, %"class.WTF::SharedBuffer::Iterator"* nonnull dereferenceable(32) %6) #4
  br i1 %99, label %103, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %5, i64 0, i32 1, i32 1
  %102 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %5, i64 0, i32 1, i32 0, i32 0
  br label %139

103:                                              ; preds = %139, %96
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %98) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %97) #4
  %104 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %89, align 8
  %105 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %104, i64 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %class.scoped_refptr.142* %88 to i64*
  store i64 0, i64* %107, align 8
  %108 = icmp eq %"class.WTF::SharedBuffer"* %104, null
  br i1 %108, label %116, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %104, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %110) #4
  %111 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %104, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %109
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %104) #4
  %115 = bitcast %"class.WTF::SharedBuffer"* %104 to i8*
  call void @free(i8* %115) #4
  br label %116

116:                                              ; preds = %103, %109, %114
  %117 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 23, i32 0
  %118 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %117, align 8
  %119 = icmp eq %"class.WTF::SharedBuffer"* %118, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %118, i64 0, i32 1
  %122 = load i64, i64* %121, align 8
  br label %123

123:                                              ; preds = %120, %116
  %124 = phi i64 [ %122, %120 ], [ 0, %116 ]
  %125 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 24
  %126 = load i64, i64* %125, align 8
  %127 = sub nsw i64 %124, %126
  store i64 %124, i64* %125, align 8
  %128 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 25
  %129 = load i64, i64* %128, align 8
  %130 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 26
  %131 = load i64, i64* %130, align 8
  %132 = sub nsw i64 %129, %131
  %133 = add nsw i64 %132, %127
  store i64 %129, i64* %130, align 8
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %144, label %135

135:                                              ; preds = %123
  %136 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 32
  %137 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %136, align 8
  %138 = call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %137, i64 %133) #4
  br label %144

139:                                              ; preds = %100, %139
  %140 = load i8*, i8** %101, align 8
  %141 = load i64, i64* %102, align 8
  call void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"* %21, i8* %140, i64 %141) #4
  %142 = call dereferenceable(32) %"class.WTF::SharedBuffer::Iterator"* @_ZN3WTF12SharedBuffer8IteratorppEv(%"class.WTF::SharedBuffer::Iterator"* nonnull %5) #4
  %143 = call zeroext i1 @_ZNK3WTF12SharedBuffer8IteratoreqERKS1_(%"class.WTF::SharedBuffer::Iterator"* nonnull %5, %"class.WTF::SharedBuffer::Iterator"* nonnull dereferenceable(32) %6) #4
  br i1 %143, label %103, label %139

144:                                              ; preds = %87, %135, %123, %92
  %145 = phi i64 [ 0, %92 ], [ 0, %87 ], [ %106, %123 ], [ %106, %135 ]
  %146 = call noalias i8* @malloc(i64 88) #4
  %147 = bitcast i8* %146 to %"class.blink::BlobDataHandle"*
  call void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"* %147, %"class.blink::BlobData"* %21, i64 %145) #4
  %148 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #4
  %149 = bitcast i8* %148 to %"class.blink::Blob"*
  call void @_ZN5blink4BlobC1E13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::Blob"* %149, %"class.blink::BlobDataHandle"* %147) #4
  %150 = getelementptr inbounds i8, i8* %148, i64 -4
  %151 = bitcast i8* %150 to i16*
  %152 = load atomic i16, i16* %151 monotonic, align 2
  %153 = or i16 %152, 1
  store atomic i16 %153, i16* %151 release, align 2
  %154 = ptrtoint i8* %148 to i64
  %155 = bitcast %"class.blink::Member.45"* %15 to i64*
  store atomic i64 %154, i64* %155 monotonic, align 8
  %156 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %157 = icmp eq i32 %156, 0
  %158 = bitcast i8* %148 to %"class.blink::Blob"*
  br i1 %157, label %162, label %159

159:                                              ; preds = %144
  %160 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %148) #4
  %161 = load %"class.blink::Blob"*, %"class.blink::Blob"** %16, align 8
  br label %162

162:                                              ; preds = %144, %159, %14, %1, %10
  %163 = phi %"class.blink::Blob"* [ null, %10 ], [ null, %1 ], [ %17, %14 ], [ %161, %159 ], [ %158, %144 ]
  ret %"class.blink::Blob"* %163
}

declare void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK3WTF12SharedBuffer5beginEv(%"class.WTF::SharedBuffer::Iterator"* sret, %"class.WTF::SharedBuffer"*) local_unnamed_addr #2

declare void @_ZNK3WTF12SharedBuffer3endEv(%"class.WTF::SharedBuffer::Iterator"* sret, %"class.WTF::SharedBuffer"*) local_unnamed_addr #2

declare void @_ZN5blink8BlobData11AppendBytesEPKvm(%"class.blink::BlobData"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(32) %"class.WTF::SharedBuffer::Iterator"* @_ZN3WTF12SharedBuffer8IteratorppEv(%"class.WTF::SharedBuffer::Iterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMArrayBuffer"* @_ZN5blink14XMLHttpRequest19ResponseArrayBufferEv(%"class.blink::XMLHttpRequest"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %3 = load i8, i8* %2, align 1, !range !6
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %100

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 4
  br i1 %8, label %9, label %100

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 27
  %11 = getelementptr inbounds %"class.blink::Member.149", %"class.blink::Member.149"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %11, align 8
  %13 = icmp eq %"class.blink::DOMArrayBuffer"* %12, null
  br i1 %13, label %14, label %98

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 46
  %16 = load i8, i8* %15, align 1, !range !6
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %98

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 23
  %20 = getelementptr inbounds %class.scoped_refptr.142, %class.scoped_refptr.142* %19, i64 0, i32 0
  %21 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %20, align 8
  %22 = icmp eq %"class.WTF::SharedBuffer"* %21, null
  br i1 %22, label %89, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %21, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %89, label %27

27:                                               ; preds = %23
  %28 = tail call %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer25CreateUninitializedOrNullEmm(i64 %25, i64 1) #4
  %29 = icmp ne %"class.blink::DOMArrayBuffer"* %28, null
  br i1 %29, label %30, label %52

30:                                               ; preds = %27
  %31 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %20, align 8
  %32 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %28, i64 0, i32 0, i32 1, i32 0, i32 0
  %33 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %32, align 8
  %34 = icmp eq %"class.v8::BackingStore"* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %33) #4
  %37 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %32, align 8
  %38 = icmp eq %"class.v8::BackingStore"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  %40 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %37) #4
  br label %41

41:                                               ; preds = %30, %35, %39
  %42 = phi i8* [ %36, %39 ], [ %36, %35 ], [ null, %30 ]
  %43 = phi i64 [ %40, %39 ], [ 0, %35 ], [ 0, %30 ]
  %44 = tail call zeroext i1 @_ZNK3WTF12SharedBuffer16GetBytesInternalEPvm(%"class.WTF::SharedBuffer"* %31, i8* %42, i64 %43) #4
  %45 = ptrtoint %"class.blink::DOMArrayBuffer"* %28 to i64
  %46 = bitcast %"class.blink::Member.149"* %10 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = bitcast %"class.blink::DOMArrayBuffer"* %28 to i8*
  %51 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %50) #4
  br label %52

52:                                               ; preds = %49, %41, %27
  %53 = bitcast %class.scoped_refptr.142* %19 to i64*
  %54 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %20, align 8
  store i64 0, i64* %53, align 8
  %55 = icmp eq %"class.WTF::SharedBuffer"* %54, null
  br i1 %55, label %63, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %54, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %57) #4
  %58 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %54) #4
  %62 = bitcast %"class.WTF::SharedBuffer"* %54 to i8*
  tail call void @free(i8* %62) #4
  br label %63

63:                                               ; preds = %52, %56, %61
  %64 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 23, i32 0
  %65 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %64, align 8
  %66 = icmp eq %"class.WTF::SharedBuffer"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %65, i64 0, i32 1
  %69 = load i64, i64* %68, align 8
  br label %70

70:                                               ; preds = %67, %63
  %71 = phi i64 [ %69, %67 ], [ 0, %63 ]
  %72 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 24
  %73 = load i64, i64* %72, align 8
  %74 = sub nsw i64 %71, %73
  store i64 %71, i64* %72, align 8
  %75 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 25
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 26
  %78 = load i64, i64* %77, align 8
  %79 = sub nsw i64 %76, %78
  %80 = add nsw i64 %79, %74
  store i64 %76, i64* %77, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %86, label %82

82:                                               ; preds = %70
  %83 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 32
  %84 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %83, align 8
  %85 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %84, i64 %80) #4
  br label %86

86:                                               ; preds = %70, %82
  %87 = xor i1 %29, true
  %88 = zext i1 %87 to i8
  store i8 %88, i8* %15, align 1
  br label %98

89:                                               ; preds = %18, %23
  %90 = tail call %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateEPKvm(i8* null, i64 0)
  %91 = ptrtoint %"class.blink::DOMArrayBuffer"* %90 to i64
  %92 = bitcast %"class.blink::Member.149"* %10 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.blink::DOMArrayBuffer"* %90 to i8*
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #4
  br label %98

98:                                               ; preds = %9, %95, %89, %14, %86
  %99 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %11, align 8
  br label %100

100:                                              ; preds = %1, %5, %98
  %101 = phi %"class.blink::DOMArrayBuffer"* [ %99, %98 ], [ null, %5 ], [ null, %1 ]
  ret %"class.blink::DOMArrayBuffer"* %101
}

declare %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer25CreateUninitializedOrNullEmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateEPKvm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::ArrayBufferContents", align 8
  %4 = alloca %"class.blink::ArrayBufferContents", align 8
  %5 = alloca %"class.blink::ArrayBufferContents", align 8
  %6 = alloca %"class.blink::ArrayBufferContents", align 8
  %7 = bitcast %"class.blink::ArrayBufferContents"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %5, i64 0, i32 0, i32 1
  %10 = bitcast %"class.blink::ArrayBufferContents"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZN5blink19ArrayBufferContentsC1EmmNS0_11SharingTypeENS0_20InitializationPolicyE(%"class.blink::ArrayBufferContents"* nonnull %5, i64 %1, i64 1, i32 0, i32 1) #4
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %11) #4
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17, !prof !2

16:                                               ; preds = %2, %13
  notail call fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64 %1) #17
  unreachable

17:                                               ; preds = %13
  %18 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  %19 = icmp eq %"class.v8::BackingStore"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %18) #4
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i8* [ %21, %20 ], [ null, %17 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %0, i64 %1, i1 false)
  %24 = bitcast %"class.blink::ArrayBufferContents"* %5 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::ArrayBufferContents"* %6 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %6, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::__shared_weak_count"** %9 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::__shared_weak_count"** %27 to i64*
  store i64 %29, i64* %30, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #4
  %31 = bitcast %"class.blink::ArrayBufferContents"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #4
  %32 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #4
  %33 = bitcast i8* %32 to %"class.blink::DOMArrayBuffer"*
  %34 = bitcast %"class.blink::ArrayBufferContents"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #4
  %35 = bitcast %"class.blink::ArrayBufferContents"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 16, i1 false) #4
  %36 = bitcast i8* %32 to i32 (...)***
  %37 = getelementptr inbounds i8, i8* %32, i64 8
  %38 = bitcast i8* %37 to i64**
  store i64* null, i64** %38, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 16
  %40 = bitcast i8* %39 to i64*
  store i64 %25, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %32, i64 24
  %42 = bitcast i8* %41 to i64*
  store i64 %29, i64* %42, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #4
  %43 = getelementptr inbounds i8, i8* %32, i64 32
  store i8 0, i8* %43, align 8
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %3) #4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink14DOMArrayBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #4
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %4) #4
  %44 = getelementptr inbounds i8, i8* %32, i64 -4
  %45 = bitcast i8* %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = or i16 %46, 1
  store atomic i16 %47, i16* %45 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #4
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %6) #4
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  ret %"class.blink::DOMArrayBuffer"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest10setTimeoutEjRNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %5 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %4 to %"class.blink::ExecutionContextLifecycleObserver"*
  %6 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %5) #4
  %7 = icmp eq %"class.blink::ExecutionContext"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %3
  %9 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %5) #4
  %10 = bitcast %"class.blink::ExecutionContext"* %9 to i1 (%"class.blink::ExecutionContext"*)***
  %11 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %11, i64 1
  %13 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::ExecutionContext"* %9) #4
  br i1 %14, label %15, label %20

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  %17 = load i8, i8* %16, align 4, !range !6
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 15, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.7, i64 0, i64 0)) #4
  br label %29

20:                                               ; preds = %15, %3, %8
  %21 = zext i32 %1 to i64
  %22 = mul nuw nsw i64 %21, 1000
  %23 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 13, i32 0
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 16, i32 0, i32 0
  %25 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %24, align 8
  %26 = icmp eq %"class.blink::ThreadableLoader"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 13
  tail call void @_ZN5blink16ThreadableLoader10SetTimeoutERKN4base9TimeDeltaE(%"class.blink::ThreadableLoader"* nonnull %25, %"class.base::TimeDelta"* dereferenceable(8) %28) #4
  br label %29

29:                                               ; preds = %20, %19, %27
  ret void
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #2

declare void @_ZN5blink16ThreadableLoader10SetTimeoutERKN4base9TimeDeltaE(%"class.blink::ThreadableLoader"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest15setResponseTypeERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %17 = load i32, i32* %16, align 8
  %18 = icmp sgt i32 %17, 2
  br i1 %18, label %19, label %20

19:                                               ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0)) #4
  br label %200

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %22 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %21 to %"class.blink::ExecutionContextLifecycleObserver"*
  %23 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %22) #4
  %24 = icmp eq %"class.blink::ExecutionContext"* %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %20
  %26 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %22) #4
  %27 = bitcast %"class.blink::ExecutionContext"* %26 to i1 (%"class.blink::ExecutionContext"*)***
  %28 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %28, i64 1
  %30 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::ExecutionContext"* %26) #4
  br i1 %31, label %32, label %37

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  %34 = load i8, i8* %33, align 4, !range !6
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 15, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.9, i64 0, i64 0)) #4
  br label %200

37:                                               ; preds = %32, %20, %25
  %38 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #4
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %43, align 8
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %45 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %44, i64* %45, align 8
  br label %54

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 1
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %52 = bitcast i8** %51 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %52, align 8
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %54

54:                                               ; preds = %46, %42
  %55 = phi i64 [ %53, %46 ], [ %44, %42 ]
  %56 = phi i32 [ %49, %46 ], [ 0, %42 ]
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %56, i32* %57, align 8
  %58 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #4
  %59 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %55, i64* %59, align 8
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i8** %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 0, i32* %61, align 8
  %62 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #4
  br i1 %62, label %63, label %65

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  store i32 0, i32* %64, align 8
  br label %200

65:                                               ; preds = %54
  %66 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #4
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %70, align 8
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %72 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %71, i64* %72, align 8
  br label %81

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 1
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %79 = bitcast i8** %78 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %79, align 8
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %81

81:                                               ; preds = %73, %69
  %82 = phi i64 [ %80, %73 ], [ %71, %69 ]
  %83 = phi i32 [ %76, %73 ], [ 0, %69 ]
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %83, i32* %84, align 8
  %85 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #4
  %86 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %82, i64* %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i8** %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 4, i32* %88, align 8
  %89 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #4
  br i1 %89, label %90, label %92

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  store i32 1, i32* %91, align 8
  br label %200

92:                                               ; preds = %81
  %93 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #4
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %96, label %100

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %97, align 8
  %98 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %99 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %98, i64* %99, align 8
  br label %108

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %101, align 8
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 1
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %106 = bitcast i8** %105 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %106, align 8
  %107 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %108

108:                                              ; preds = %100, %96
  %109 = phi i64 [ %107, %100 ], [ %98, %96 ]
  %110 = phi i32 [ %103, %100 ], [ 0, %96 ]
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %110, i32* %111, align 8
  %112 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #4
  %113 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %109, i64* %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8** %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 4, i32* %115, align 8
  %116 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #4
  br i1 %116, label %117, label %119

117:                                              ; preds = %108
  %118 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  store i32 2, i32* %118, align 8
  br label %200

119:                                              ; preds = %108
  %120 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #4
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %123, label %127

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %124, align 8
  %125 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %126 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %125, i64* %126, align 8
  br label %135

127:                                              ; preds = %119
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %128, align 8
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 1
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %133 = bitcast i8** %132 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %131, %"class.WTF::StringImpl"** %133, align 8
  %134 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %135

135:                                              ; preds = %127, %123
  %136 = phi i64 [ %134, %127 ], [ %125, %123 ]
  %137 = phi i32 [ %130, %127 ], [ 0, %123 ]
  %138 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %137, i32* %138, align 8
  %139 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #4
  %140 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %136, i64* %140, align 8
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i8** %141, align 8
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 8, i32* %142, align 8
  %143 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #4
  br i1 %143, label %144, label %146

144:                                              ; preds = %135
  %145 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  store i32 3, i32* %145, align 8
  br label %200

146:                                              ; preds = %135
  %147 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #4
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %150, label %154

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %151, align 8
  %152 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %153 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %152, i64* %153, align 8
  br label %162

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %148, %"class.WTF::StringImpl"** %155, align 8
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 1
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %160 = bitcast i8** %159 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %160, align 8
  %161 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %162

162:                                              ; preds = %154, %150
  %163 = phi i64 [ %161, %154 ], [ %152, %150 ]
  %164 = phi i32 [ %157, %154 ], [ 0, %150 ]
  %165 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %164, i32* %165, align 8
  %166 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %166) #4
  %167 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %163, i64* %167, align 8
  %168 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8** %168, align 8
  %169 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 4, i32* %169, align 8
  %170 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %166) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #4
  br i1 %170, label %171, label %173

171:                                              ; preds = %162
  %172 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  store i32 4, i32* %172, align 8
  br label %200

173:                                              ; preds = %162
  %174 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %174) #4
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %177, label %181

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %178, align 8
  %179 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %180 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %179, i64* %180, align 8
  br label %189

181:                                              ; preds = %173
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %175, %"class.WTF::StringImpl"** %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 1
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %187 = bitcast i8** %186 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %187, align 8
  %188 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %189

189:                                              ; preds = %181, %177
  %190 = phi i64 [ %188, %181 ], [ %179, %177 ]
  %191 = phi i32 [ %184, %181 ], [ 0, %177 ]
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %191, i32* %192, align 8
  %193 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %193) #4
  %194 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %190, i64* %194, align 8
  %195 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i8** %195, align 8
  %196 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 11, i32* %196, align 8
  %197 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %174) #4
  br i1 %197, label %198, label %200

198:                                              ; preds = %189
  %199 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  store i32 5, i32* %199, align 8
  br label %200

200:                                              ; preds = %90, %144, %198, %189, %171, %117, %19, %36, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14XMLHttpRequest11responseURLEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %3) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 112, i1 false)
  %4 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  call void @_ZNK5blink16ResourceResponse11ResponseUrlEv(%"class.blink::KURL"* nonnull sret %2, %"class.blink::ResourceResponse"* %4) #4
  %5 = call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* nonnull %2) #4
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %2) #4
  br label %7

7:                                                ; preds = %6, %1
  %8 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 4, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #4
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  call void @llvm.trap() #4
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %7, %11, %26
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %3) #4
  ret %"class.WTF::StringImpl"* %9
}

declare zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::XMLHttpRequestUpload"* @_ZN5blink14XMLHttpRequest6uploadEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.blink::Member.13", %"class.blink::Member.13"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::XMLHttpRequestUpload"*, %"class.blink::XMLHttpRequestUpload"** %3, align 8
  %5 = icmp eq %"class.blink::XMLHttpRequestUpload"* %4, null
  br i1 %5, label %6, label %21

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #4
  %8 = bitcast i8* %7 to %"class.blink::XMLHttpRequestUpload"*
  tail call void @_ZN5blink20XMLHttpRequestUploadC1EPNS_14XMLHttpRequestE(%"class.blink::XMLHttpRequestUpload"* %8, %"class.blink::XMLHttpRequest"* %0) #4
  %9 = getelementptr inbounds i8, i8* %7, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = ptrtoint i8* %7 to i64
  %14 = bitcast %"class.blink::Member.13"* %2 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  %17 = bitcast i8* %7 to %"class.blink::XMLHttpRequestUpload"*
  br i1 %16, label %21, label %18

18:                                               ; preds = %6
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %7) #4
  %20 = load %"class.blink::XMLHttpRequestUpload"*, %"class.blink::XMLHttpRequestUpload"** %3, align 8
  br label %21

21:                                               ; preds = %1, %18, %6
  %22 = phi %"class.blink::XMLHttpRequestUpload"* [ %4, %1 ], [ %20, %18 ], [ %17, %6 ]
  ret %"class.blink::XMLHttpRequestUpload"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest13TrackProgressEm(%"class.blink::XMLHttpRequest"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::probe::AsyncTask", align 8
  %4 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 28
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %1
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %11, label %10

10:                                               ; preds = %2
  store i32 3, i32* %7, align 8
  tail call void @_ZN5blink14XMLHttpRequest29DispatchReadyStateChangeEventEv(%"class.blink::XMLHttpRequest"* %0) #4
  br label %11

11:                                               ; preds = %2, %10
  %12 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  %13 = load i8, i8* %12, align 4, !range !6
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %42, label %15

15:                                               ; preds = %11
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names9kProgressE, align 8
  %17 = load i64, i64* %4, align 8
  %18 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  %19 = tail call i64 @_ZNK5blink16ResourceResponse21ExpectedContentLengthEv(%"class.blink::ResourceResponse"* %18) #4
  %20 = icmp sgt i64 %19, 0
  %21 = icmp sle i64 %17, %19
  %22 = and i1 %20, %21
  %23 = icmp sgt i64 %17, 0
  %24 = select i1 %23, i64 %17, i64 0
  %25 = select i1 %22, i64 %19, i64 0
  %26 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %27 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %26 to %"class.blink::ExecutionContextLifecycleObserver"*
  %28 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %27) #4
  %29 = bitcast %"class.blink::probe::AsyncTask"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %29) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 40, i1 false) #4
  %30 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 47
  %31 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kLoadendE, align 8
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %33, %35
  %37 = select i1 %36, i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i64 0, i64 0)
  %38 = load i8, i8* %12, align 4, !range !6
  %39 = icmp ne i8 %38, 0
  call void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"* nonnull %3, %"class.blink::ExecutionContext"* %28, %"class.blink::probe::AsyncTaskId"* %30, i8* %37, i1 zeroext %39, i32 1) #4
  %40 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 30, i32 0, i32 0
  %41 = load %"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::XMLHttpRequestProgressEventThrottle"** %40, align 8
  call void @_ZN5blink35XMLHttpRequestProgressEventThrottle21DispatchProgressEventERKN3WTF12AtomicStringEbmm(%"class.blink::XMLHttpRequestProgressEventThrottle"* %41, %"class.WTF::AtomicString"* dereferenceable(8) %16, i1 zeroext %22, i64 %24, i64 %25) #4
  call void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %29) #4
  br label %42

42:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest11ChangeStateENS0_5StateE(%"class.blink::XMLHttpRequest"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  tail call void @_ZN5blink14XMLHttpRequest29DispatchReadyStateChangeEventEv(%"class.blink::XMLHttpRequest"* %0)
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest33DispatchProgressEventFromSnapshotERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::probe::AsyncTask", align 8
  %4 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 28
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  %7 = tail call i64 @_ZNK5blink16ResourceResponse21ExpectedContentLengthEv(%"class.blink::ResourceResponse"* %6) #4
  %8 = icmp sgt i64 %7, 0
  %9 = icmp sle i64 %5, %7
  %10 = and i1 %8, %9
  %11 = icmp sgt i64 %5, 0
  %12 = select i1 %11, i64 %5, i64 0
  %13 = select i1 %10, i64 %7, i64 0
  %14 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %14 to %"class.blink::ExecutionContextLifecycleObserver"*
  %16 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %15) #4
  %17 = bitcast %"class.blink::probe::AsyncTask"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 40, i1 false) #4
  %18 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 47
  %19 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kLoadendE, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  %25 = select i1 %24, i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i64 0, i64 0)
  %26 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  %27 = load i8, i8* %26, align 4, !range !6
  %28 = icmp ne i8 %27, 0
  call void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"* nonnull %3, %"class.blink::ExecutionContext"* %16, %"class.blink::probe::AsyncTaskId"* %18, i8* %25, i1 zeroext %28, i32 1) #4
  %29 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 30, i32 0, i32 0
  %30 = load %"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::XMLHttpRequestProgressEventThrottle"** %29, align 8
  call void @_ZN5blink35XMLHttpRequestProgressEventThrottle21DispatchProgressEventERKN3WTF12AtomicStringEbmm(%"class.blink::XMLHttpRequestProgressEventThrottle"* %30, %"class.WTF::AtomicString"* dereferenceable(8) %1, i1 zeroext %10, i64 %12, i64 %13) #4
  call void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest29DispatchReadyStateChangeEventEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::probe::AsyncTask", align 8
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.base::trace_event::TraceArguments", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.base::trace_event::TraceArguments", align 8
  %10 = alloca %"class.base::TimeTicks", align 8
  %11 = alloca %"class.blink::probe::AsyncTask", align 8
  %12 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %13 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %12 to %"class.blink::ExecutionContextLifecycleObserver"*
  %14 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %13) #4
  %15 = icmp eq %"class.blink::ExecutionContext"* %14, null
  br i1 %15, label %257, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  %21 = load i8, i8* %20, align 4, !range !6
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 2
  %27 = icmp eq i32 %25, 4
  %28 = or i1 %26, %27
  br i1 %28, label %29, label %128

29:                                               ; preds = %16, %23
  %30 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 43, i32 0), align 16
  %31 = and i8 %30, 25
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %100, label %33, !prof !10

33:                                               ; preds = %29
  %34 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #4
  %35 = bitcast %"class.base::TimeTicks"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #4
  %36 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %10, i64 0, i32 0, i32 0
  %37 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #4
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %38) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 40, i1 false) #4
  store i8 1, i8* %38, align 8
  %39 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %9, i64 0, i32 1, i64 0
  store i8 9, i8* %39, align 1
  %40 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %9, i64 0, i32 2, i64 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i8** %40, align 8
  %41 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %9, i64 0, i32 3, i64 0
  %42 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #4
  %43 = tail call i8* @_Znwm(i64 192) #16
  %44 = bitcast i8* %43 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %44, i64 4096, i64 4096) #4
  %45 = getelementptr inbounds i8, i8* %43, i64 80
  %46 = bitcast i8* %45 to %"class.protozero::ScatteredStreamWriter"*
  %47 = bitcast i8* %43 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %46, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %47) #4
  %48 = getelementptr inbounds i8, i8* %43, i64 120
  %49 = getelementptr inbounds i8, i8* %43, i64 168
  %50 = bitcast i8* %49 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %50) #4
  %51 = bitcast i8* %48 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %51, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %50) #4
  %52 = getelementptr inbounds i8, i8* %43, i64 24
  %53 = bitcast i8* %52 to i8**
  store i8* %45, i8** %53, align 8
  %54 = bitcast i8* %49 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %54, i64 1) #4
  %55 = bitcast i8* %49 to %"struct.std::__1::__list_node"**
  %56 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %56, i64 0, i32 1, i32 1
  store i32 0, i32* %57, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %51, %"class.protozero::ScatteredStreamWriter"* %46, %"class.protozero::MessageArena"* %50) #4
  %58 = bitcast %"union.base::trace_event::TraceValue"* %41 to i8**
  store i8* %43, i8** %58, align 8
  %59 = bitcast i8* %48 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %8, %"class.perfetto::protos::pbzero::DebugAnnotation"* %59) #4
  %60 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* nonnull align 8 %42, i64 16, i1 false) #4
  %61 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %13) #4
  call void @_ZN5blink38inspector_xhr_ready_state_change_event4DataEN8perfetto11TracedValueEPNS_16ExecutionContextEPNS_14XMLHttpRequestE(%"class.perfetto::TracedValue"* nonnull %7, %"class.blink::ExecutionContext"* %61, %"class.blink::XMLHttpRequest"* %0) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #4
  %62 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 43, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %34, %"class.base::TimeTicks"* nonnull dereferenceable(8) %10, %"class.base::trace_event::TraceArguments"* nonnull %9, i32 0) #4
  %63 = load i8, i8* %38, align 8
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %99, label %65

65:                                               ; preds = %33, %94
  %66 = phi i64 [ %95, %94 ], [ 0, %33 ]
  %67 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %9, i64 0, i32 1, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %81

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %9, i64 0, i32 3, i64 %66
  %72 = bitcast %"union.base::trace_event::TraceValue"* %71 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %73 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %72, align 8
  %74 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %73, null
  br i1 %74, label %94, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %73 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %77 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %77, i64 1
  %79 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %78, align 8
  call void %79(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %73) #4
  %80 = load i8, i8* %67, align 1
  br label %81

81:                                               ; preds = %75, %65
  %82 = phi i8 [ %68, %65 ], [ %80, %75 ]
  %83 = icmp eq i8 %82, 9
  br i1 %83, label %84, label %94

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %9, i64 0, i32 3, i64 %66
  %86 = bitcast %"union.base::trace_event::TraceValue"* %85 to %"class.protozero::HeapBuffered"**
  %87 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %86, align 8
  %88 = icmp eq %"class.protozero::HeapBuffered"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %87, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %90) #4
  %91 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %87, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %91) #4
  %92 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %87, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %92) #4
  %93 = bitcast %"class.protozero::HeapBuffered"* %87 to i8*
  call void @_ZdlPv(i8* %93) #16
  br label %94

94:                                               ; preds = %89, %84, %81, %70
  %95 = add nuw nsw i64 %66, 1
  %96 = load i8, i8* %38, align 8
  %97 = zext i8 %96 to i64
  %98 = icmp ult i64 %95, %97
  br i1 %98, label %65, label %99

99:                                               ; preds = %94, %33
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %38) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  br label %100

100:                                              ; preds = %29, %99
  %101 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %29 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), %99 ]
  %102 = phi i8* [ null, %29 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 43, i32 0), %99 ]
  %103 = phi i64 [ -6148914691236517206, %29 ], [ %62, %99 ]
  %104 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 4
  br i1 %106, label %107, label %112

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %109 = load i8, i8* %108, align 1, !range !6
  %110 = icmp eq i8 %109, 0
  %111 = select i1 %110, i32 2, i32 1
  br label %112

112:                                              ; preds = %107, %100
  %113 = phi i32 [ 0, %100 ], [ %111, %107 ]
  %114 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 30, i32 0, i32 0
  %115 = load %"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::XMLHttpRequestProgressEventThrottle"** %114, align 8
  %116 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names17kReadystatechangeE, align 8
  %117 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #4
  %118 = bitcast i8* %117 to %"class.blink::Event"*
  call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %118, %"class.WTF::AtomicString"* dereferenceable(8) %116, i32 1, i32 1, i32 1) #4
  %119 = getelementptr inbounds i8, i8* %117, i64 -4
  %120 = bitcast i8* %119 to i16*
  %121 = load atomic i16, i16* %120 monotonic, align 2
  %122 = or i16 %121, 1
  store atomic i16 %122, i16* %120 release, align 2
  call void @_ZN5blink35XMLHttpRequestProgressEventThrottle29DispatchReadyStateChangeEventEPNS_5EventENS0_19DeferredEventActionE(%"class.blink::XMLHttpRequestProgressEventThrottle"* %115, %"class.blink::Event"* %118, i32 %113) #4
  %123 = icmp eq i8* %102, null
  br i1 %123, label %128, label %124

124:                                              ; preds = %112
  %125 = load i8, i8* %102, align 1
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %128, label %127

127:                                              ; preds = %124
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %102, i8* %101, i64 %103) #4
  br label %128

128:                                              ; preds = %127, %124, %112, %23
  %129 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %130, 4
  br i1 %131, label %132, label %254

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %134 = load i8, i8* %133, align 1, !range !6
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %254

136:                                              ; preds = %132
  %137 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 43, i32 0), align 16
  %138 = and i8 %137, 25
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %207, label %140, !prof !10

140:                                              ; preds = %136
  %141 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #4
  %142 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #4
  %143 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %144 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #4
  store i64 %144, i64* %143, align 8
  %145 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %145) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 -86, i64 40, i1 false) #4
  store i8 1, i8* %145, align 8
  %146 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 1, i64 0
  store i8 9, i8* %146, align 1
  %147 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 2, i64 0
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i8** %147, align 8
  %148 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 3, i64 0
  %149 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %149) #4
  %150 = call i8* @_Znwm(i64 192) #16
  %151 = bitcast i8* %150 to %"class.protozero::ScatteredHeapBuffer"*
  call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %151, i64 4096, i64 4096) #4
  %152 = getelementptr inbounds i8, i8* %150, i64 80
  %153 = bitcast i8* %152 to %"class.protozero::ScatteredStreamWriter"*
  %154 = bitcast i8* %150 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %153, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %154) #4
  %155 = getelementptr inbounds i8, i8* %150, i64 120
  %156 = getelementptr inbounds i8, i8* %150, i64 168
  %157 = bitcast i8* %156 to %"class.protozero::MessageArena"*
  call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %157) #4
  %158 = bitcast i8* %155 to %"class.protozero::Message"*
  call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %158, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %157) #4
  %159 = getelementptr inbounds i8, i8* %150, i64 24
  %160 = bitcast i8* %159 to i8**
  store i8* %152, i8** %160, align 8
  %161 = bitcast i8* %156 to %"class.std::__1::list"*
  call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %161, i64 1) #4
  %162 = bitcast i8* %156 to %"struct.std::__1::__list_node"**
  %163 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %162, align 8
  %164 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %163, i64 0, i32 1, i32 1
  store i32 0, i32* %164, align 8
  call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %158, %"class.protozero::ScatteredStreamWriter"* %153, %"class.protozero::MessageArena"* %157) #4
  %165 = bitcast %"union.base::trace_event::TraceValue"* %148 to i8**
  store i8* %150, i8** %165, align 8
  %166 = bitcast i8* %155 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %4, %"class.perfetto::protos::pbzero::DebugAnnotation"* %166) #4
  %167 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %167) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %167, i8* nonnull align 8 %149, i64 16, i1 false) #4
  %168 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %13) #4
  call void @_ZN5blink24inspector_xhr_load_event4DataEN8perfetto11TracedValueEPNS_16ExecutionContextEPNS_14XMLHttpRequestE(%"class.perfetto::TracedValue"* nonnull %3, %"class.blink::ExecutionContext"* %168, %"class.blink::XMLHttpRequest"* %0) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %167) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %149) #4
  %169 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 43, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %141, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %5, i32 0) #4
  %170 = load i8, i8* %145, align 8
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %206, label %172

172:                                              ; preds = %140, %201
  %173 = phi i64 [ %202, %201 ], [ 0, %140 ]
  %174 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 1, i64 %173
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %188

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 3, i64 %173
  %179 = bitcast %"union.base::trace_event::TraceValue"* %178 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %180 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %179, align 8
  %181 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %180, null
  br i1 %181, label %201, label %182

182:                                              ; preds = %177
  %183 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %180 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %184 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %184, i64 1
  %186 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %185, align 8
  call void %186(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %180) #4
  %187 = load i8, i8* %174, align 1
  br label %188

188:                                              ; preds = %182, %172
  %189 = phi i8 [ %175, %172 ], [ %187, %182 ]
  %190 = icmp eq i8 %189, 9
  br i1 %190, label %191, label %201

191:                                              ; preds = %188
  %192 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %5, i64 0, i32 3, i64 %173
  %193 = bitcast %"union.base::trace_event::TraceValue"* %192 to %"class.protozero::HeapBuffered"**
  %194 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %193, align 8
  %195 = icmp eq %"class.protozero::HeapBuffered"* %194, null
  br i1 %195, label %201, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %194, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %197) #4
  %198 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %194, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %198) #4
  %199 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %194, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %199) #4
  %200 = bitcast %"class.protozero::HeapBuffered"* %194 to i8*
  call void @_ZdlPv(i8* %200) #16
  br label %201

201:                                              ; preds = %196, %191, %188, %177
  %202 = add nuw nsw i64 %173, 1
  %203 = load i8, i8* %145, align 8
  %204 = zext i8 %203 to i64
  %205 = icmp ult i64 %202, %204
  br i1 %205, label %172, label %206

206:                                              ; preds = %201, %140
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %145) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #4
  br label %207

207:                                              ; preds = %136, %206
  %208 = phi i64 [ -6148914691236517206, %136 ], [ %169, %206 ]
  %209 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %136 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), %206 ]
  %210 = phi i8* [ null, %136 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 43, i32 0), %206 ]
  %211 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kLoadE, align 8
  %212 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 28
  %213 = load i64, i64* %212, align 8
  %214 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  %215 = call i64 @_ZNK5blink16ResourceResponse21ExpectedContentLengthEv(%"class.blink::ResourceResponse"* %214) #4
  %216 = icmp sgt i64 %215, 0
  %217 = icmp sle i64 %213, %215
  %218 = and i1 %216, %217
  %219 = icmp sgt i64 %213, 0
  %220 = select i1 %219, i64 %213, i64 0
  %221 = select i1 %218, i64 %215, i64 0
  %222 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %13) #4
  %223 = bitcast %"class.blink::probe::AsyncTask"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %223) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %223, i8 -86, i64 40, i1 false) #4
  %224 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 47
  %225 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kLoadendE, align 8
  %226 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %211, i64 0, i32 0, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %228 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %225, i64 0, i32 0, i32 0, i32 0
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %228, align 8
  %230 = icmp eq %"class.WTF::StringImpl"* %227, %229
  %231 = select i1 %230, i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i64 0, i64 0)
  %232 = load i8, i8* %20, align 4, !range !6
  %233 = icmp ne i8 %232, 0
  call void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"* nonnull %2, %"class.blink::ExecutionContext"* %222, %"class.blink::probe::AsyncTaskId"* %224, i8* %231, i1 zeroext %233, i32 1) #4
  %234 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 30, i32 0, i32 0
  %235 = load %"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::XMLHttpRequestProgressEventThrottle"** %234, align 8
  call void @_ZN5blink35XMLHttpRequestProgressEventThrottle21DispatchProgressEventERKN3WTF12AtomicStringEbmm(%"class.blink::XMLHttpRequestProgressEventThrottle"* %235, %"class.WTF::AtomicString"* dereferenceable(8) %211, i1 zeroext %218, i64 %220, i64 %221) #4
  call void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %223) #4
  %236 = load i64, i64* %212, align 8
  %237 = call i64 @_ZNK5blink16ResourceResponse21ExpectedContentLengthEv(%"class.blink::ResourceResponse"* %214) #4
  %238 = icmp sgt i64 %237, 0
  %239 = icmp sle i64 %236, %237
  %240 = and i1 %238, %239
  %241 = icmp sgt i64 %236, 0
  %242 = select i1 %241, i64 %236, i64 0
  %243 = select i1 %240, i64 %237, i64 0
  %244 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %13) #4
  %245 = bitcast %"class.blink::probe::AsyncTask"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %245) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %245, i8 -86, i64 40, i1 false) #4
  %246 = load i8, i8* %20, align 4, !range !6
  %247 = icmp ne i8 %246, 0
  call void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"* nonnull %11, %"class.blink::ExecutionContext"* %244, %"class.blink::probe::AsyncTaskId"* %224, i8* null, i1 zeroext %247, i32 1) #4
  %248 = load %"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::XMLHttpRequestProgressEventThrottle"** %234, align 8
  call void @_ZN5blink35XMLHttpRequestProgressEventThrottle21DispatchProgressEventERKN3WTF12AtomicStringEbmm(%"class.blink::XMLHttpRequestProgressEventThrottle"* %248, %"class.WTF::AtomicString"* dereferenceable(8) %225, i1 zeroext %240, i64 %242, i64 %243) #4
  call void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"* nonnull %11) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %245) #4
  %249 = icmp eq i8* %210, null
  br i1 %249, label %254, label %250

250:                                              ; preds = %207
  %251 = load i8, i8* %210, align 1
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %254, label %253

253:                                              ; preds = %250
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %210, i8* %209, i64 %208) #4
  br label %254

254:                                              ; preds = %253, %250, %207, %132, %128
  %255 = load i32, i32* %17, align 4
  %256 = add nsw i32 %255, -1
  store i32 %256, i32* %17, align 4
  br label %257

257:                                              ; preds = %1, %254
  ret void
}

declare void @_ZN5blink35XMLHttpRequestProgressEventThrottle29DispatchReadyStateChangeEventEPNS_5EventENS0_19DeferredEventActionE(%"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::Event"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest18setWithCredentialsEbRNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* nocapture, i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = zext i1 %1 to i8
  %5 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 1
  br i1 %7, label %12, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 45
  %10 = load i8, i8* %9, align 4, !range !6
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %8, %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.19, i64 0, i64 0)) #4
  br label %15

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 38
  store i8 %4, i8* %14, align 1
  br label %15

15:                                               ; preds = %13, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest4openERKN3WTF12AtomicStringERKNS1_6StringERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::KURL", align 8
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %7 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %6 to %"class.blink::ExecutionContextLifecycleObserver"*
  %8 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %7) #4
  %9 = icmp eq %"class.blink::ExecutionContext"* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 112, i1 false)
  %12 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %7) #4
  %13 = bitcast %"class.blink::ExecutionContext"* %12 to void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)**, void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)*, void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)** %14, i64 20
  %16 = load void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)*, void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)** %15, align 8
  call void %16(%"class.blink::KURL"* nonnull sret %5, %"class.blink::ExecutionContext"* %12, %"class.WTF::String"* dereferenceable(8) %2) #4
  %17 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121ValidateOpenArgumentsERKN3WTF12AtomicStringERKNS_4KURLERNS_14ExceptionStateE(%"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::KURL"* nonnull dereferenceable(112) %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  call void @_ZN5blink14XMLHttpRequest4openERKN3WTF12AtomicStringERKNS_4KURLEbRNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::KURL"* nonnull dereferenceable(112) %5, i1 zeroext true, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %19

19:                                               ; preds = %10, %18
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #4
  br label %20

20:                                               ; preds = %4, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121ValidateOpenArgumentsERKN3WTF12AtomicStringERKNS_4KURLERNS_14ExceptionStateE(%"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend.2330", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend.2330", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZN5blink16IsValidHTTPTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %9) #4
  br i1 %10, label %161, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #4
  %13 = bitcast %"class.WTF::StringAppend.2330"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #4
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %92, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %34

24:                                               ; preds = %17
  %25 = zext i32 %23 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #4
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !2

31:                                               ; preds = %24
  tail call void @llvm.trap() #4
  unreachable

32:                                               ; preds = %24
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %22, align 4
  br label %34

34:                                               ; preds = %32, %17
  %35 = phi i32 [ %33, %32 ], [ %23, %17 ]
  %36 = load atomic i32, i32* %18 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %49

39:                                               ; preds = %34
  %40 = zext i32 %35 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #4
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %39
  tail call void @llvm.trap() #4
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %22, align 4
  br label %49

49:                                               ; preds = %47, %34
  %50 = phi i32 [ %48, %47 ], [ %35, %34 ]
  %51 = load atomic i32, i32* %18 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  %55 = add i32 %50, -1
  store i32 %55, i32* %22, align 4
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i32 [ %55, %54 ], [ %50, %49 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #4
  br label %60

60:                                               ; preds = %56, %59
  %61 = load atomic i32, i32* %18 monotonic, align 4, !noalias !11
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = load i32, i32* %22, align 4
  br i1 %63, label %65, label %75

65:                                               ; preds = %60
  %66 = zext i32 %64 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #4
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !2

72:                                               ; preds = %65
  tail call void @llvm.trap() #4, !noalias !11
  unreachable

73:                                               ; preds = %65
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %22, align 4, !noalias !11
  br label %75

75:                                               ; preds = %60, %73
  %76 = phi i32 [ %74, %73 ], [ %64, %60 ]
  %77 = bitcast %"class.WTF::StringAppend.2330"* %5 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.49 to i64), i64* %77, align 8, !alias.scope !11
  %78 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %78, align 8, !alias.scope !11
  %79 = load atomic i32, i32* %18 monotonic, align 4, !noalias !11
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %96

82:                                               ; preds = %75
  %83 = zext i32 %76 to i33
  %84 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #4
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %82
  tail call void @llvm.trap() #4, !noalias !11
  unreachable

90:                                               ; preds = %82
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %22, align 4, !noalias !11
  br label %96

92:                                               ; preds = %11
  %93 = bitcast %"class.WTF::StringAppend.2330"* %5 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.49 to i64), i64* %93, align 8, !alias.scope !11
  %94 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %94, align 8, !alias.scope !11
  %95 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.72, i64 0, i64 0), i8** %95, align 8, !alias.scope !11
  br label %108

96:                                               ; preds = %90, %75
  %97 = phi i32 [ %91, %90 ], [ %76, %75 ]
  %98 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.72, i64 0, i64 0), i8** %98, align 8, !alias.scope !11
  %99 = load atomic i32, i32* %18 monotonic, align 4, !noalias !11
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %104

102:                                              ; preds = %96
  %103 = add i32 %97, -1
  store i32 %103, i32* %22, align 4, !noalias !11
  br label %104

104:                                              ; preds = %102, %96
  %105 = phi i32 [ %103, %102 ], [ %97, %96 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #4, !noalias !11
  br label %108

108:                                              ; preds = %92, %104, %107
  %109 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend.2330"* nonnull %5)
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %109, %"class.WTF::StringImpl"** %110, align 8
  %111 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %112 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %111, align 8
  %113 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %112, align 8
  call void %113(%"class.blink::ExceptionState"* %2, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #4
  br label %129

129:                                              ; preds = %108, %125, %128
  %130 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #4
  br label %146

146:                                              ; preds = %129, %142, %145
  br i1 %16, label %160, label %147

147:                                              ; preds = %146
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #4
  br label %160

160:                                              ; preds = %146, %156, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #4
  br label %335

161:                                              ; preds = %3
  %162 = tail call zeroext i1 @_ZN5blink10FetchUtils17IsForbiddenMethodERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %9) #4
  br i1 %162, label %163, label %332

163:                                              ; preds = %161
  %164 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164) #4
  %165 = bitcast %"class.WTF::StringAppend.2330"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #4
  %166 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %244, label %169

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %186

176:                                              ; preds = %169
  %177 = zext i32 %175 to i33
  %178 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %177, i33 1) #4
  %179 = extractvalue { i33, i1 } %178, 1
  %180 = extractvalue { i33, i1 } %178, 0
  %181 = icmp slt i33 %180, 0
  %182 = or i1 %179, %181
  br i1 %182, label %183, label %184, !prof !2

183:                                              ; preds = %176
  tail call void @llvm.trap() #4
  unreachable

184:                                              ; preds = %176
  %185 = trunc i33 %180 to i32
  store i32 %185, i32* %174, align 4
  br label %186

186:                                              ; preds = %184, %169
  %187 = phi i32 [ %185, %184 ], [ %175, %169 ]
  %188 = load atomic i32, i32* %170 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %201

191:                                              ; preds = %186
  %192 = zext i32 %187 to i33
  %193 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %192, i33 1) #4
  %194 = extractvalue { i33, i1 } %193, 1
  %195 = extractvalue { i33, i1 } %193, 0
  %196 = icmp slt i33 %195, 0
  %197 = or i1 %194, %196
  br i1 %197, label %198, label %199, !prof !2

198:                                              ; preds = %191
  tail call void @llvm.trap() #4
  unreachable

199:                                              ; preds = %191
  %200 = trunc i33 %195 to i32
  store i32 %200, i32* %174, align 4
  br label %201

201:                                              ; preds = %199, %186
  %202 = phi i32 [ %200, %199 ], [ %187, %186 ]
  %203 = load atomic i32, i32* %170 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %208

206:                                              ; preds = %201
  %207 = add i32 %202, -1
  store i32 %207, i32* %174, align 4
  br label %208

208:                                              ; preds = %206, %201
  %209 = phi i32 [ %207, %206 ], [ %202, %201 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #4
  br label %212

212:                                              ; preds = %208, %211
  %213 = load atomic i32, i32* %170 monotonic, align 4, !noalias !14
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = load i32, i32* %174, align 4
  br i1 %215, label %217, label %227

217:                                              ; preds = %212
  %218 = zext i32 %216 to i33
  %219 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %218, i33 1) #4
  %220 = extractvalue { i33, i1 } %219, 1
  %221 = extractvalue { i33, i1 } %219, 0
  %222 = icmp slt i33 %221, 0
  %223 = or i1 %220, %222
  br i1 %223, label %224, label %225, !prof !2

224:                                              ; preds = %217
  tail call void @llvm.trap() #4, !noalias !14
  unreachable

225:                                              ; preds = %217
  %226 = trunc i33 %221 to i32
  store i32 %226, i32* %174, align 4, !noalias !14
  br label %227

227:                                              ; preds = %212, %225
  %228 = phi i32 [ %226, %225 ], [ %216, %212 ]
  %229 = bitcast %"class.WTF::StringAppend.2330"* %7 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.49 to i64), i64* %229, align 8, !alias.scope !14
  %230 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %230, align 8, !alias.scope !14
  %231 = load atomic i32, i32* %170 monotonic, align 4, !noalias !14
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %248

234:                                              ; preds = %227
  %235 = zext i32 %228 to i33
  %236 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %235, i33 1) #4
  %237 = extractvalue { i33, i1 } %236, 1
  %238 = extractvalue { i33, i1 } %236, 0
  %239 = icmp slt i33 %238, 0
  %240 = or i1 %237, %239
  br i1 %240, label %241, label %242, !prof !2

241:                                              ; preds = %234
  tail call void @llvm.trap() #4, !noalias !14
  unreachable

242:                                              ; preds = %234
  %243 = trunc i33 %238 to i32
  store i32 %243, i32* %174, align 4, !noalias !14
  br label %248

244:                                              ; preds = %163
  %245 = bitcast %"class.WTF::StringAppend.2330"* %7 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.49 to i64), i64* %245, align 8, !alias.scope !14
  %246 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %246, align 8, !alias.scope !14
  %247 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.73, i64 0, i64 0), i8** %247, align 8, !alias.scope !14
  br label %260

248:                                              ; preds = %242, %227
  %249 = phi i32 [ %243, %242 ], [ %228, %227 ]
  %250 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.73, i64 0, i64 0), i8** %250, align 8, !alias.scope !14
  %251 = load atomic i32, i32* %170 monotonic, align 4, !noalias !14
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %256

254:                                              ; preds = %248
  %255 = add i32 %249, -1
  store i32 %255, i32* %174, align 4, !noalias !14
  br label %256

256:                                              ; preds = %254, %248
  %257 = phi i32 [ %255, %254 ], [ %249, %248 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #4, !noalias !14
  br label %260

260:                                              ; preds = %244, %256, %259
  %261 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend.2330"* nonnull %7)
  %262 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %261, %"class.WTF::StringImpl"** %262, align 8
  %263 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #4
  %264 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %264, align 8
  %265 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)***
  %266 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)*** %265, align 8
  %267 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)** %266, i64 1
  %268 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*, %"class.WTF::String"*)** %267, align 8
  call void %268(%"class.blink::ExceptionState"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %8) #4
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %284, label %271

271:                                              ; preds = %260
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  br i1 %275, label %278, label %280

278:                                              ; preds = %271
  %279 = add i32 %277, -1
  store i32 %279, i32* %276, align 4
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i32 [ %279, %278 ], [ %277, %271 ]
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #4
  br label %284

284:                                              ; preds = %260, %280, %283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #4
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %284
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #4
  br label %300

300:                                              ; preds = %284, %296, %299
  %301 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #4
  br label %317

317:                                              ; preds = %300, %313, %316
  br i1 %168, label %331, label %318

318:                                              ; preds = %317
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = and i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %324 = load i32, i32* %323, align 4
  br i1 %322, label %325, label %327

325:                                              ; preds = %318
  %326 = add i32 %324, -1
  store i32 %326, i32* %323, align 4
  br label %327

327:                                              ; preds = %325, %318
  %328 = phi i32 [ %326, %325 ], [ %324, %318 ]
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #4
  br label %331

331:                                              ; preds = %317, %327, %330
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164) #4
  br label %335

332:                                              ; preds = %161
  %333 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %1) #4
  br i1 %333, label %335, label %334

334:                                              ; preds = %332
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.74, i64 0, i64 0)) #4
  br label %335

335:                                              ; preds = %332, %334, %331, %160
  %336 = phi i1 [ false, %331 ], [ false, %334 ], [ false, %160 ], [ true, %332 ]
  ret i1 %336
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest4openERKN3WTF12AtomicStringERKNS_4KURLEbRNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i1 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::ScopedHandleBase", align 4
  %7 = alloca %"class.mojo::MessagePipeHandle", align 4
  %8 = alloca %"class.mojo::MessagePipeHandle", align 4
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.mojo::PendingReceiver", align 8
  %11 = zext i1 %3 to i8
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0)
  %12 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %13 = load i32, i32* %12, align 8
  store i32 0, i32* %12, align 8
  %14 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 42
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %17 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %16 to %"class.blink::ExecutionContextLifecycleObserver"*
  %18 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %17) #4
  %19 = icmp eq %"class.blink::ExecutionContext"* %18, null
  br i1 %19, label %63, label %20

20:                                               ; preds = %5
  %21 = bitcast %"class.blink::ExecutionContext"* %18 to i1 (%"class.blink::ExecutionContext"*)***
  %22 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %22, i64 1
  %24 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::ExecutionContext"* nonnull %18) #4
  br i1 %25, label %26, label %63

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %18, i64 -1, i32 8
  %28 = bitcast i32* %27 to %"class.blink::LocalDOMWindow"*
  %29 = xor i1 %3, true
  %30 = icmp ne i32* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %63

32:                                               ; preds = %26
  %33 = getelementptr inbounds i32, i32* %27, i64 18
  %34 = bitcast i32* %33 to %"class.blink::LocalFrame"**
  %35 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %34, align 8
  %36 = icmp eq %"class.blink::LocalFrame"* %35, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %35, i64 0, i32 0
  %39 = tail call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %38) #4
  %40 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %39, i64 0, i32 71
  %41 = bitcast [14 x i8]* %40 to i112*
  %42 = load i112, i112* %41, align 8
  %43 = and i112 %42, 1237940039285380274899124224
  %44 = icmp eq i112 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 15, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.20, i64 0, i64 0)) #4
  br label %125

46:                                               ; preds = %37, %32
  %47 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 15, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.21, i64 0, i64 0)) #4
  br label %125

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 13, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %56, label %55

55:                                               ; preds = %51
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 15, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.22, i64 0, i64 0)) #4
  br label %125

56:                                               ; preds = %51
  %57 = tail call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %28) #4
  %58 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %57, i64 0, i32 85
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 3
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %17) #4
  tail call void @_ZN5blink11Deprecation16CountDeprecationEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"* %62, i32 581) #4
  br label %63

63:                                               ; preds = %5, %20, %56, %61, %26
  %64 = tail call %"class.WTF::StringImpl"* @_ZN5blink10FetchUtils15NormalizeMethodERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %1) #4
  %65 = ptrtoint %"class.WTF::StringImpl"* %64 to i64
  %66 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8
  %67 = bitcast %"class.WTF::AtomicString"* %66 to i64*
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %66, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %65, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %63
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #4
  br label %84

84:                                               ; preds = %83, %80, %63
  %85 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  %86 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %85, %"class.blink::KURL"* dereferenceable(112) %2) #4
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %88 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8** %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 4, i32* %90, align 8
  %91 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %85, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %9) #4
  br i1 %91, label %92, label %116

92:                                               ; preds = %84
  %93 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %17) #4
  %94 = tail call dereferenceable(88) %"class.blink::PublicURLManager"* @_ZN5blink16ExecutionContext19GetPublicURLManagerEv(%"class.blink::ExecutionContext"* %93) #4
  %95 = bitcast %"class.mojo::MessagePipeHandle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %95) #4, !noalias !17
  %96 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %96, align 4, !noalias !17
  %97 = bitcast %"class.mojo::MessagePipeHandle"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #4, !noalias !17
  %98 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %8, i64 0, i32 0, i32 0
  store i32 0, i32* %98, align 4, !noalias !17
  %99 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %96, i32* nonnull %98) #4, !noalias !17
  %100 = load i32, i32* %96, align 4, !noalias !17
  %101 = load i32, i32* %98, align 4, !noalias !17
  %102 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #4, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %95) #4, !noalias !17
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %92
  %106 = call i32 @MojoClose(i32 %103) #4
  br label %107

107:                                              ; preds = %105, %92
  store i32 %100, i32* %102, align 4, !noalias !17
  %108 = bitcast %"class.mojo::ScopedHandleBase"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108) #4, !noalias !17
  %109 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %10, i64 0, i32 0
  %110 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 %101, i32* %110, align 4, !alias.scope !20, !noalias !17
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* nonnull %109, %"class.mojo::ScopedHandleBase"* nonnull %6) #4
  %111 = load i32, i32* %110, align 4, !noalias !17
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %107
  %114 = call i32 @MojoClose(i32 %111) #4
  br label %115

115:                                              ; preds = %107, %113
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108) #4, !noalias !17
  call void @_ZN5blink16PublicURLManager7ResolveERKNS_4KURLEN4mojo15PendingReceiverIN7network5mojom5blink16URLLoaderFactoryEEE(%"class.blink::PublicURLManager"* %94, %"class.blink::KURL"* dereferenceable(112) %85, %"class.mojo::PendingReceiver"* nonnull %10) #4
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %109) #4
  br label %116

116:                                              ; preds = %115, %84
  %117 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  store i8 %11, i8* %117, align 4
  %118 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 45
  store i8 0, i8* %118, align 4
  %119 = icmp eq i32 %13, 1
  br i1 %119, label %124, label %120

120:                                              ; preds = %116
  %121 = load i32, i32* %12, align 8
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  store i32 1, i32* %12, align 8
  call void @_ZN5blink14XMLHttpRequest29DispatchReadyStateChangeEventEv(%"class.blink::XMLHttpRequest"* %0) #4
  br label %125

124:                                              ; preds = %116
  store i32 1, i32* %12, align 8
  br label %125

125:                                              ; preds = %123, %120, %124, %55, %50, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest4openERKN3WTF12AtomicStringERKNS1_6StringEbS7_S7_RNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i1 zeroext, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.blink::KURL", align 8
  %9 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %10 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %9 to %"class.blink::ExecutionContextLifecycleObserver"*
  %11 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %10) #4
  %12 = icmp eq %"class.blink::ExecutionContext"* %11, null
  br i1 %12, label %33, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %14) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 112, i1 false)
  %15 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %10) #4
  %16 = bitcast %"class.blink::ExecutionContext"* %15 to void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)***
  %17 = load void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)**, void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)*, void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)** %17, i64 20
  %19 = load void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)*, void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)** %18, align 8
  call void %19(%"class.blink::KURL"* nonnull sret %8, %"class.blink::ExecutionContext"* %15, %"class.WTF::String"* dereferenceable(8) %2) #4
  %20 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_121ValidateOpenArgumentsERKN3WTF12AtomicStringERKNS_4KURLERNS_14ExceptionStateE(%"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::KURL"* nonnull dereferenceable(112) %8, %"class.blink::ExceptionState"* dereferenceable(72) %6)
  br i1 %20, label %21, label %32

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  call void @_ZN5blink4KURL7SetUserERKN3WTF6StringE(%"class.blink::KURL"* nonnull %8, %"class.WTF::String"* dereferenceable(8) %4) #4
  br label %26

26:                                               ; preds = %25, %21
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  call void @_ZN5blink4KURL7SetPassERKN3WTF6StringE(%"class.blink::KURL"* nonnull %8, %"class.WTF::String"* dereferenceable(8) %5) #4
  br label %31

31:                                               ; preds = %30, %26
  call void @_ZN5blink14XMLHttpRequest4openERKN3WTF12AtomicStringERKNS_4KURLEbRNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::KURL"* nonnull dereferenceable(112) %8, i1 zeroext %3, %"class.blink::ExceptionState"* dereferenceable(72) %6)
  br label %32

32:                                               ; preds = %13, %31
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %14) #4
  br label %33

33:                                               ; preds = %7, %32
  ret void
}

declare void @_ZN5blink4KURL7SetUserERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink4KURL7SetPassERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 15
  tail call void @_ZN5blink10TaskHandle6CancelEv(%"class.blink::TaskHandle"* %2) #4
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %4 = load i8, i8* %3, align 1, !range !6
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 16, i32 0, i32 0
  %8 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %7, align 8
  %9 = icmp eq %"class.blink::ThreadableLoader"* %8, null
  br i1 %9, label %68, label %10

10:                                               ; preds = %6, %1
  store i8 1, i8* %3, align 1
  %11 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 22, i32 0, i32 0
  %12 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %11, align 8
  %13 = icmp eq %"class.blink::DocumentParser"* %12, null
  br i1 %13, label %23, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::DocumentParser", %"class.blink::DocumentParser"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %16, 1
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::DocumentParser"* %12 to void (%"class.blink::DocumentParser"*)***
  %20 = load void (%"class.blink::DocumentParser"*)**, void (%"class.blink::DocumentParser"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %20, i64 15
  %22 = load void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %21, align 8
  tail call void %22(%"class.blink::DocumentParser"* nonnull %12) #4
  br label %23

23:                                               ; preds = %10, %18, %14
  %24 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 35
  %25 = getelementptr inbounds %"class.blink::Member.362", %"class.blink::Member.362"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::XMLHttpRequest::BlobLoader"*, %"class.blink::XMLHttpRequest::BlobLoader"** %25, align 8
  %27 = icmp eq %"class.blink::XMLHttpRequest::BlobLoader"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::XMLHttpRequest::BlobLoader", %"class.blink::XMLHttpRequest::BlobLoader"* %26, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %29, align 8
  tail call void @_ZN5blink16FileReaderLoader6CancelEv(%"class.blink::FileReaderLoader"* %30) #4
  %31 = bitcast %"class.blink::Member.362"* %24 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  br label %32

32:                                               ; preds = %28, %23
  %33 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %34 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %33, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %33, align 8
  %35 = icmp eq %"class.blink::TextResourceDecoder"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %34) #4
  %37 = bitcast %"class.blink::TextResourceDecoder"* %34 to i8*
  tail call void @free(i8* %37) #4
  br label %38

38:                                               ; preds = %36, %32
  %39 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 22
  %40 = getelementptr inbounds %"class.blink::Member.131", %"class.blink::Member.131"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %40, align 8
  %42 = icmp eq %"class.blink::DocumentParser"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 2
  tail call void @_ZN5blink14DocumentParser12RemoveClientEPNS_20DocumentParserClientE(%"class.blink::DocumentParser"* nonnull %41, %"class.blink::DocumentParserClient"* %44) #4
  %45 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %40, align 8
  %46 = bitcast %"class.blink::DocumentParser"* %45 to void (%"class.blink::DocumentParser"*)***
  %47 = load void (%"class.blink::DocumentParser"*)**, void (%"class.blink::DocumentParser"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %47, i64 16
  %49 = load void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %48, align 8
  tail call void %49(%"class.blink::DocumentParser"* %45) #4
  %50 = bitcast %"class.blink::Member.131"* %39 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  br label %51

51:                                               ; preds = %38, %43
  tail call void @_ZN5blink14XMLHttpRequest13ClearResponseEv(%"class.blink::XMLHttpRequest"* %0)
  %52 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9
  %53 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %53, align 8
  %55 = icmp eq %"struct.WTF::KeyValuePair"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %54, i32 %58) #4
  %59 = bitcast %"class.blink::HTTPHeaderMap"* %52 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store i32 0, i32* %57, align 8
  %60 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  store i32 0, i32* %60, align 4
  br label %61

61:                                               ; preds = %51, %56
  %62 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 16, i32 0
  %63 = getelementptr inbounds %"class.blink::MemberBase.56", %"class.blink::MemberBase.56"* %62, i64 0, i32 0
  %64 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %63, align 8
  %65 = icmp eq %"class.blink::ThreadableLoader"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %61
  %67 = bitcast %"class.blink::MemberBase.56"* %62 to i64*
  store atomic i64 0, i64* %67 monotonic, align 8
  tail call void @_ZN5blink16ThreadableLoader6CancelEv(%"class.blink::ThreadableLoader"* nonnull %64) #4
  br label %68

68:                                               ; preds = %61, %6, %66
  ret void
}

declare %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare void @_ZN5blink11Deprecation16CountDeprecationEPNS_16ExecutionContextENS_5mojom10WebFeatureE(%"class.blink::ExecutionContext"*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink10FetchUtils15NormalizeMethodERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #2

declare dereferenceable(88) %"class.blink::PublicURLManager"* @_ZN5blink16ExecutionContext19GetPublicURLManagerEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink16PublicURLManager7ResolveERKNS_4KURLEN4mojo15PendingReceiverIN7network5mojom5blink16URLLoaderFactoryEEE(%"class.blink::PublicURLManager"*, %"class.blink::KURL"* dereferenceable(112), %"class.mojo::PendingReceiver"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14XMLHttpRequest8InitSendERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %8 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %7 to %"class.blink::ExecutionContextLifecycleObserver"*
  %9 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %8) #4
  %10 = icmp eq %"class.blink::ExecutionContext"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %8) #4
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %12, i64 0, i32 13
  %14 = load i8, i8* %13, align 4, !range !6
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %11, %2
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0) #4
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  tail call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %0, i32 19, %"class.WTF::AtomicString"* dereferenceable(8) %17) #4
  %18 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i64 0, i64 0), i64 29) #4
  call void @_ZN5blink14XMLHttpRequest27ThrowForLoadFailureIfNeededERNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %1, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #4
  br label %35

35:                                               ; preds = %16, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  br label %121

36:                                               ; preds = %11
  %37 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 45
  %42 = load i8, i8* %41, align 4, !range !6
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %40, %36
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 11, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i64 0, i64 0)) #4
  br label %121

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  %47 = load i8, i8* %46, align 4, !range !6
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %119

49:                                               ; preds = %45
  %50 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %8) #4
  %51 = bitcast %"class.blink::ExecutionContext"* %50 to i1 (%"class.blink::ExecutionContext"*)***
  %52 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %52, i64 1
  %54 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::ExecutionContext"* %50) #4
  br i1 %55, label %56, label %103

56:                                               ; preds = %49
  %57 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %8) #4
  %58 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.25, i64 0, i64 0), i64 56) #4
  %59 = call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureENS_13ReportOptionsERKN3WTF6StringE(%"class.blink::ExecutionContext"* %57, i32 13, i32 0, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #4
  br label %76

76:                                               ; preds = %56, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #4
  %77 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %8) #4
  %78 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.26, i64 0, i64 0), i64 53) #4
  %79 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %80 = call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"* %77, i32 12, i32 0, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %79) #4
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #4
  br label %97

97:                                               ; preds = %76, %93, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #4
  %98 = and i1 %59, %80
  br i1 %98, label %103, label %99

99:                                               ; preds = %97
  call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0) #4
  %100 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %0, i32 19, %"class.WTF::AtomicString"* dereferenceable(8) %100) #4
  %101 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #4
  %102 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %102, align 8
  call void @_ZN5blink14XMLHttpRequest27ThrowForLoadFailureIfNeededERNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %1, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #4
  br label %121

103:                                              ; preds = %97, %49
  %104 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #4
  %105 = icmp eq %"class.v8::Isolate"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %103
  %107 = call zeroext i1 @_ZN2v815MicrotasksScope19IsRunningMicrotasksEPNS_7IsolateE(%"class.v8::Isolate"* nonnull %104) #4
  br i1 %107, label %108, label %119

108:                                              ; preds = %106
  %109 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %8) #4
  %110 = icmp eq %"class.blink::ExecutionContext"* %109, null
  %111 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %109, i64 0, i32 3
  %112 = icmp eq %"class.blink::UseCounter"* %111, null
  %113 = or i1 %110, %112
  br i1 %113, label %119, label %114

114:                                              ; preds = %108
  %115 = bitcast %"class.blink::UseCounter"* %111 to void (%"class.blink::UseCounter"*, i32)***
  %116 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %116, i64 3
  %118 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %117, align 8
  call void %118(%"class.blink::UseCounter"* nonnull %111, i32 1338) #4
  br label %119

119:                                              ; preds = %114, %108, %106, %103, %45
  %120 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  store i8 0, i8* %120, align 1
  br label %121

121:                                              ; preds = %99, %119, %44, %35
  %122 = phi i1 [ false, %35 ], [ false, %44 ], [ true, %119 ], [ false, %99 ]
  ret i1 %122
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest18HandleNetworkErrorEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0)
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  tail call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %0, i32 19, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest27ThrowForLoadFailureIfNeededERNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::XMLHttpRequest"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %11 = load i8, i8* %10, align 1, !range !6
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 29
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %12, label %18, label %16

16:                                               ; preds = %3
  br i1 %15, label %17, label %19

17:                                               ; preds = %16
  store i32 19, i32* %13, align 8
  br label %19

18:                                               ; preds = %3
  br i1 %15, label %130, label %19

19:                                               ; preds = %16, %17, %18
  %20 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 29
  %21 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 48, i1 false)
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %24 = bitcast %union.anon.2314* %23 to i8*
  store i8 0, i8* %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  store i8 1, i8* %26, align 4
  %27 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  store i8 0, i8* %27, align 1
  %28 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #4
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %30 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0), i8** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 16, i32* %32, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #4
  %33 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #4
  %34 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  %35 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"* %34) #4
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %42

37:                                               ; preds = %19
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %38, align 8
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 0, i32* %41, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %62

42:                                               ; preds = %19
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %48 = bitcast i8** %47 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %45, i32* %49, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %42
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %42
  %59 = phi i32 [ %57, %56 ], [ %55, %42 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #4
  br label %62

62:                                               ; preds = %37, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #4
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %4, i8 zeroext 39) #4
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %66, label %67

66:                                               ; preds = %62
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %4, i8 zeroext 46) #4
  br label %90

67:                                               ; preds = %62
  %68 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #4
  %69 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %70 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i8** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 2, i32* %72, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #4
  %73 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #4
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %76, label %80

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %77, align 8
  %78 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %79 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %78, i64* %79, align 8
  br label %87

80:                                               ; preds = %67
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 1
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %86 = bitcast i8** %85 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %86, align 8
  br label %87

87:                                               ; preds = %76, %80
  %88 = phi i32 [ %83, %80 ], [ 0, %76 ]
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %88, i32* %89, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #4
  br label %90

90:                                               ; preds = %87, %66
  %91 = load i32, i32* %20, align 8
  %92 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #4
  %93 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %4) #4
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %94, align 8
  %95 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %96 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %95, align 8
  %97 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %96, align 8
  call void %97(%"class.blink::ExceptionState"* %1, i32 %91, %"class.WTF::String"* nonnull dereferenceable(8) %9) #4
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %90
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #4
  br label %113

113:                                              ; preds = %90, %109, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #4
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #4
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #4
  br label %129

129:                                              ; preds = %113, %125, %128
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #4
  br label %130

130:                                              ; preds = %18, %129
  ret void
}

declare zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureENS_13ReportOptionsERKN3WTF6StringE(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom21DocumentPolicyFeatureENS_13ReportOptionsERKN3WTF6StringES7_(%"class.blink::ExecutionContext"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #2

declare zeroext i1 @_ZN2v815MicrotasksScope19IsRunningMicrotasksEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest4sendEPKNS_89V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVStringERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %6 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %5 to %"class.blink::ExecutionContextLifecycleObserver"*
  %7 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %6) #4
  %8 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %10 = trunc i32 %9 to i8
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6, i32 4
  tail call void @_ZN5blink5probe40WillSendXMLHttpOrFetchNetworkRequestImplEPNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %7, %"class.WTF::String"* dereferenceable(8) %13) #4
  br label %14

14:                                               ; preds = %3, %12
  %15 = icmp eq %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString"* %1, null
  br i1 %15, label %16, label %35

16:                                               ; preds = %14
  %17 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  call void @_ZN5blink14XMLHttpRequest4sendERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #4
  br label %34

34:                                               ; preds = %16, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %93

35:                                               ; preds = %14
  %36 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString", %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString"* %1, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  switch i32 %37, label %93 [
    i32 0, label %38
    i32 1, label %41
    i32 2, label %79
    i32 3, label %82
    i32 4, label %85
    i32 5, label %88
    i32 6, label %91
  ]

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString", %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString"* %1, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %39, align 8
  tail call void @_ZN5blink14XMLHttpRequest4sendEPNS_14DOMArrayBufferERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::DOMArrayBuffer"* %40, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %93

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString", %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %42, align 8, !noalias !23
  %44 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %43, i64 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %45, i64 0, i32 2
  %47 = load i8, i8* %46, align 8, !range !6
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %43, i64 0, i32 1
  %51 = load i8*, i8** %50, align 8
  br label %52

52:                                               ; preds = %49, %41
  %53 = phi i8* [ %51, %49 ], [ null, %41 ]
  %54 = bitcast %"class.blink::DOMArrayBufferView"* %43 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %55 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %54, align 8
  %56 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %55, i64 10
  %57 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %56, align 8
  %58 = tail call i64 %57(%"class.blink::DOMArrayBufferView"* %43) #4
  %59 = tail call zeroext i1 @_ZN5blink14XMLHttpRequest8InitSendERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2) #4
  br i1 %59, label %60, label %93

60:                                               ; preds = %52
  %61 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  %62 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %61, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %63, %65
  br i1 %66, label %77, label %67

67:                                               ; preds = %60
  %68 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kHEADE, align 8
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %63, %70
  br i1 %71, label %77, label %72

72:                                               ; preds = %67
  %73 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %8) #4
  br i1 %73, label %74, label %77

74:                                               ; preds = %72
  %75 = trunc i64 %58 to i32
  %76 = tail call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8* %53, i32 %75) #4
  br label %77

77:                                               ; preds = %74, %72, %67, %60
  %78 = phi %"class.blink::EncodedFormData"* [ %76, %74 ], [ null, %72 ], [ null, %67 ], [ null, %60 ]
  tail call void @_ZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::EncodedFormData"* %78, %"class.blink::ExceptionState"* dereferenceable(72) %2) #4
  br label %93

79:                                               ; preds = %35
  %80 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString", %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString"* %1, i64 0, i32 4, i32 0, i32 0
  %81 = load %"class.blink::Blob"*, %"class.blink::Blob"** %80, align 8
  tail call void @_ZN5blink14XMLHttpRequest4sendEPNS_4BlobERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::Blob"* %81, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %93

82:                                               ; preds = %35
  %83 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString", %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString"* %1, i64 0, i32 5, i32 0, i32 0
  %84 = load %"class.blink::Document"*, %"class.blink::Document"** %83, align 8
  tail call void @_ZN5blink14XMLHttpRequest4sendEPNS_8DocumentERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::Document"* %84, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %93

85:                                               ; preds = %35
  %86 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString", %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString"* %1, i64 0, i32 6, i32 0, i32 0
  %87 = load %"class.blink::FormData"*, %"class.blink::FormData"** %86, align 8
  tail call void @_ZN5blink14XMLHttpRequest4sendEPNS_8FormDataERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::FormData"* %87, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %93

88:                                               ; preds = %35
  %89 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString", %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString"* %1, i64 0, i32 7, i32 0, i32 0
  %90 = load %"class.blink::URLSearchParams"*, %"class.blink::URLSearchParams"** %89, align 8
  tail call void @_ZN5blink14XMLHttpRequest4sendEPNS_15URLSearchParamsERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::URLSearchParams"* %90, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %93

91:                                               ; preds = %35
  %92 = getelementptr inbounds %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString", %"class.blink::V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString"* %1, i64 0, i32 8
  tail call void @_ZN5blink14XMLHttpRequest4sendERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.WTF::String"* dereferenceable(8) %92, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %93

93:                                               ; preds = %77, %52, %34, %38, %79, %82, %85, %88, %91, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest4sendERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call zeroext i1 @_ZN5blink14XMLHttpRequest8InitSendERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br i1 %7, label %8, label %85

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %83, label %12

12:                                               ; preds = %8
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  %14 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %15, %17
  br i1 %18, label %83, label %19

19:                                               ; preds = %12
  %20 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kHEADE, align 8
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %15, %22
  br i1 %23, label %83, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  %26 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %25) #4
  br i1 %26, label %27, label %83

27:                                               ; preds = %24
  %28 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #4
  %29 = tail call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #4
  call void @_ZNK3WTF12TextEncoding6EncodeERKNS_6StringENS_19UnencodableHandlingE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::TextEncoding"* %29, %"class.WTF::String"* dereferenceable(8) %1, i32 3) #4
  %30 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %28
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i64 %38, i64 %39
  %41 = call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEN4base4spanIKcLm18446744073709551615EEE(i64 %40, i8* %36) #4
  %42 = load i8, i8* %31, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %27
  %45 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %45) #16
  br label %46

46:                                               ; preds = %27, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #4
  %47 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #4
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0), i64 24) #4
  %48 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i64 5) #4
  call void @_ZN5blink14XMLHttpRequest27UpdateContentTypeAndCharsetERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::XMLHttpRequest"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6)
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #4
  br label %65

65:                                               ; preds = %46, %61, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #4
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #4
  br label %82

82:                                               ; preds = %65, %78, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #4
  br label %83

83:                                               ; preds = %12, %19, %8, %24, %82
  %84 = phi %"class.blink::EncodedFormData"* [ null, %8 ], [ %41, %82 ], [ null, %24 ], [ null, %19 ], [ null, %12 ]
  call void @_ZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::EncodedFormData"* %84, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %85

85:                                               ; preds = %3, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest4sendEPNS_14DOMArrayBufferERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::DOMArrayBuffer"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %4, align 8
  %6 = icmp eq %"class.v8::BackingStore"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %5) #4
  %9 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %4, align 8
  %10 = icmp eq %"class.v8::BackingStore"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %9) #4
  %13 = trunc i64 %12 to i32
  br label %14

14:                                               ; preds = %3, %7, %11
  %15 = phi i8* [ %8, %11 ], [ %8, %7 ], [ null, %3 ]
  %16 = phi i32 [ %13, %11 ], [ 0, %7 ], [ 0, %3 ]
  %17 = tail call zeroext i1 @_ZN5blink14XMLHttpRequest8InitSendERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2) #4
  br i1 %17, label %18, label %37

18:                                               ; preds = %14
  %19 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  %20 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %35, label %25

25:                                               ; preds = %18
  %26 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kHEADE, align 8
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %21, %28
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  %32 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %31) #4
  br i1 %32, label %33, label %35

33:                                               ; preds = %30
  %34 = tail call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8* %15, i32 %16) #4
  br label %35

35:                                               ; preds = %33, %30, %25, %18
  %36 = phi %"class.blink::EncodedFormData"* [ %34, %33 ], [ null, %30 ], [ null, %25 ], [ null, %18 ]
  tail call void @_ZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::EncodedFormData"* %36, %"class.blink::ExceptionState"* dereferenceable(72) %2) #4
  br label %37

37:                                               ; preds = %14, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest4sendEPNS_18DOMArrayBufferViewERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::DOMArrayBufferView"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %1, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %5, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %1, i64 0, i32 1
  %11 = load i8*, i8** %10, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi i8* [ %11, %9 ], [ null, %3 ]
  %14 = bitcast %"class.blink::DOMArrayBufferView"* %1 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %15 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %15, i64 10
  %17 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %16, align 8
  %18 = tail call i64 %17(%"class.blink::DOMArrayBufferView"* %1) #4
  %19 = tail call zeroext i1 @_ZN5blink14XMLHttpRequest8InitSendERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2) #4
  br i1 %19, label %20, label %40

20:                                               ; preds = %12
  %21 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  %22 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %21, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  br i1 %26, label %38, label %27

27:                                               ; preds = %20
  %28 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kHEADE, align 8
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %23, %30
  br i1 %31, label %38, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  %34 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %33) #4
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = trunc i64 %18 to i32
  %37 = tail call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8* %13, i32 %36) #4
  br label %38

38:                                               ; preds = %35, %32, %27, %20
  %39 = phi %"class.blink::EncodedFormData"* [ %37, %35 ], [ null, %32 ], [ null, %27 ], [ null, %20 ]
  tail call void @_ZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::EncodedFormData"* %39, %"class.blink::ExceptionState"* dereferenceable(72) %2) #4
  br label %40

40:                                               ; preds = %12, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest4sendEPNS_4BlobERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::Blob"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::ParsedContentType", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.absl::optional.74", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = tail call zeroext i1 @_ZN5blink14XMLHttpRequest8InitSendERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br i1 %11, label %12, label %203

12:                                               ; preds = %3
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  %14 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %15, %17
  br i1 %18, label %200, label %19

19:                                               ; preds = %12
  %20 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kHEADE, align 8
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %15, %22
  br i1 %23, label %200, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  %26 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %25) #4
  br i1 %26, label %27, label %200

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9
  %29 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  %30 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %28, i64 0, i32 0, i32 0
  %31 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.23"* %30, %"class.WTF::AtomicString"* dereferenceable(8) %29) #4
  %32 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %31, 0
  %33 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %28, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %37
  %39 = icmp eq %"struct.WTF::KeyValuePair"* %32, %38
  br i1 %39, label %40, label %144

40:                                               ; preds = %27
  %41 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #4
  %42 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #4
  %43 = getelementptr inbounds %"class.blink::Blob", %"class.blink::Blob"* %1, i64 0, i32 3, i32 0
  %44 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %44, i64 0, i32 2
  %46 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %45) #4
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %47, align 8
  %48 = call %"class.WTF::StringImpl"* @_ZN5blink10FetchUtils20NormalizeHeaderValueERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %67, label %52

52:                                               ; preds = %40
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #4
  br label %65

65:                                               ; preds = %64, %61
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  br label %67

67:                                               ; preds = %65, %40
  %68 = phi %"class.WTF::StringImpl"* [ %66, %65 ], [ %48, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #4
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %127, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %127, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.blink::ParsedContentType"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #4
  call void @_ZN5blink17ParsedContentTypeC1ERKN3WTF6StringENS_34ParsedContentHeaderFieldParameters4ModeE(%"class.blink::ParsedContentType"* nonnull %7, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 0) #4
  %76 = getelementptr inbounds %"class.blink::ParsedContentType", %"class.blink::ParsedContentType"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 8, !range !6
  %78 = icmp eq i8 %77, 0
  call void @_ZN5blink17ParsedContentTypeD2Ev(%"class.blink::ParsedContentType"* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #4
  br i1 %78, label %127, label %79

79:                                               ; preds = %74
  %80 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #4
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %106, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 acquire, align 4
  %86 = and i32 %85, 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %104, label %88

88:                                               ; preds = %83
  %89 = load atomic i32, i32* %84 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %106

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #4
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %92
  call void @llvm.trap() #4
  unreachable

102:                                              ; preds = %92
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %93, align 4
  br label %106

104:                                              ; preds = %83
  %105 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %81) #4
  br label %106

106:                                              ; preds = %79, %88, %102, %104
  %107 = phi %"class.WTF::StringImpl"* [ %105, %104 ], [ %81, %88 ], [ %81, %102 ], [ null, %79 ]
  %108 = ptrtoint %"class.WTF::StringImpl"* %107 to i64
  %109 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  store i64 %108, i64* %109, align 8
  call void @_ZN5blink14XMLHttpRequest24SetRequestHeaderInternalERKN3WTF12AtomicStringES4_(%"class.blink::XMLHttpRequest"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %29, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8)
  %110 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #4
  br label %126

126:                                              ; preds = %106, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #4
  br label %127

127:                                              ; preds = %74, %70, %67, %126
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #4
  br label %143

143:                                              ; preds = %127, %139, %142
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #4
  br label %144

144:                                              ; preds = %27, %143
  %145 = call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEv() #4
  %146 = ptrtoint %"class.blink::EncodedFormData"* %145 to i64
  %147 = bitcast %"class.blink::Blob"* %1 to i1 (%"class.blink::Blob"*)***
  %148 = load i1 (%"class.blink::Blob"*)**, i1 (%"class.blink::Blob"*)*** %147, align 8
  %149 = getelementptr inbounds i1 (%"class.blink::Blob"*)*, i1 (%"class.blink::Blob"*)** %148, i64 12
  %150 = load i1 (%"class.blink::Blob"*)*, i1 (%"class.blink::Blob"*)** %149, align 8
  %151 = call zeroext i1 %150(%"class.blink::Blob"* %1) #4
  br i1 %151, label %152, label %167

152:                                              ; preds = %144
  %153 = bitcast %"class.blink::Blob"* %1 to %"class.blink::File"*
  %154 = getelementptr inbounds %"class.blink::Blob", %"class.blink::Blob"* %1, i64 1, i32 0, i32 1
  %155 = bitcast %"class.blink::TraceWrapperV8Reference"* %154 to %"class.WTF::String"*
  %156 = bitcast %"class.blink::TraceWrapperV8Reference"* %154 to %"class.WTF::StringImpl"**
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %200, label %159

159:                                              ; preds = %152
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %200, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.absl::optional.74", %"class.absl::optional.74"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %164) #4
  %165 = call i64 @_ZNK5blink4File16LastModifiedTimeEv(%"class.blink::File"* %153) #4
  store i8 1, i8* %164, align 8
  %166 = getelementptr inbounds %"class.absl::optional.74", %"class.absl::optional.74"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %165, i64* %166, align 8
  call void @_ZN5blink15EncodedFormData10AppendFileERKN3WTF6StringERKN4absl8optionalIN4base4TimeEEE(%"class.blink::EncodedFormData"* %145, %"class.WTF::String"* dereferenceable(8) %155, %"class.absl::optional.74"* nonnull dereferenceable(16) %9) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %164) #4
  br label %200

167:                                              ; preds = %144
  %168 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #4
  %169 = getelementptr inbounds %"class.blink::Blob", %"class.blink::Blob"* %1, i64 0, i32 3, i32 0
  %170 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %170, i64 0, i32 1
  %172 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %171) #4
  %173 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %172, %"class.WTF::StringImpl"** %173, align 8
  %174 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %169, align 8
  %175 = icmp eq %"class.blink::BlobDataHandle"* %174, null
  br i1 %175, label %183, label %176

176:                                              ; preds = %167
  %177 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %174, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = atomicrmw add i32* %177, i32 1 monotonic
  %179 = icmp sgt i32 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %176
  %181 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.75, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.76, i64 0, i64 0)) #4
  %182 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #4
  br label %183

183:                                              ; preds = %167, %176, %180
  call void @_ZN5blink15EncodedFormData10AppendBlobERKN3WTF6StringE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::EncodedFormData"* %145, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::BlobDataHandle"* %174) #4
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #4
  br label %199

199:                                              ; preds = %183, %195, %198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #4
  br label %200

200:                                              ; preds = %152, %12, %19, %24, %199, %159, %163
  %201 = phi i64 [ %146, %159 ], [ %146, %163 ], [ %146, %199 ], [ 0, %24 ], [ 0, %19 ], [ 0, %12 ], [ %146, %152 ]
  %202 = inttoptr i64 %201 to %"class.blink::EncodedFormData"*
  call void @_ZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::EncodedFormData"* %202, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %203

203:                                              ; preds = %3, %200
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest4sendEPNS_8DocumentERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::Document"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::HeapHashSet.2296", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = tail call zeroext i1 @_ZN5blink14XMLHttpRequest8InitSendERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br i1 %11, label %12, label %154

12:                                               ; preds = %3
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  %14 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %15, %17
  br i1 %18, label %152, label %19

19:                                               ; preds = %12
  %20 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kHEADE, align 8
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %15, %22
  br i1 %23, label %152, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  %26 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %25) #4
  br i1 %26, label %27, label %152

27:                                               ; preds = %24
  %28 = icmp eq %"class.blink::Document"* %1, null
  br i1 %28, label %111, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 107
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 1
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %71, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #4
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i64 0, i64 0), i64 23) #4
  %36 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i64 5) #4
  call void @_ZN5blink14XMLHttpRequest27UpdateContentTypeAndCharsetERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::XMLHttpRequest"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %34, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #4
  %54 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #4
  br label %70

70:                                               ; preds = %53, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  br label %111

71:                                               ; preds = %29
  %72 = and i8 %31, 64
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %111, label %74

74:                                               ; preds = %71
  %75 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #4
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i64 0, i64 0), i64 29) #4
  %76 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i64 5) #4
  call void @_ZN5blink14XMLHttpRequest27UpdateContentTypeAndCharsetERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::XMLHttpRequest"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #4
  br label %93

93:                                               ; preds = %74, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #4
  %94 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #4
  br label %110

110:                                              ; preds = %93, %106, %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #4
  br label %111

111:                                              ; preds = %71, %27, %70, %110
  %112 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #4
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 0, i32 0
  %115 = bitcast %"class.blink::HeapHashSet.2296"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 0, i64 20, i1 false) #4
  %116 = call %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"* %114, i32 0, i32 0, i32 0, %"class.blink::HeapHashSet.2296"* nonnull %9) #4
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %113, align 8
  %117 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #4
  %118 = call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #4
  call void @_ZNK3WTF12TextEncoding6EncodeERKNS_6StringENS_19UnencodableHandlingE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::TextEncoding"* %118, %"class.WTF::String"* nonnull dereferenceable(8) %8, i32 3) #4
  %119 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %119, i64 0, i32 1, i32 0
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = select i1 %122, i8* %124, i8* %117
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = zext i8 %121 to i64
  %129 = select i1 %122, i64 %127, i64 %128
  %130 = call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEN4base4spanIKcLm18446744073709551615EEE(i64 %129, i8* %125) #4
  %131 = load i8, i8* %120, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %111
  %134 = load i8*, i8** %123, align 8
  call void @_ZdlPv(i8* %134) #16
  br label %135

135:                                              ; preds = %111, %133
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #4
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %136) #4
  br label %151

151:                                              ; preds = %135, %147, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #4
  br label %152

152:                                              ; preds = %12, %19, %24, %151
  %153 = phi %"class.blink::EncodedFormData"* [ %130, %151 ], [ null, %24 ], [ null, %19 ], [ null, %12 ]
  call void @_ZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::EncodedFormData"* %153, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %154

154:                                              ; preds = %3, %152
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest4sendEPNS_8FormDataERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::FormData"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::StringAppend.2313", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = tail call zeroext i1 @_ZN5blink14XMLHttpRequest8InitSendERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br i1 %8, label %9, label %183

9:                                                ; preds = %3
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  %11 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %12, %14
  br i1 %15, label %180, label %16

16:                                               ; preds = %9
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kHEADE, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %12, %19
  br i1 %20, label %180, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  %23 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %22) #4
  br i1 %23, label %24, label %180

24:                                               ; preds = %21
  %25 = tail call %"class.blink::EncodedFormData"* @_ZN5blink8FormData23EncodeMultiPartFormDataEv(%"class.blink::FormData"* %1) #4
  %26 = ptrtoint %"class.blink::EncodedFormData"* %25 to i64
  %27 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9
  %28 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  %29 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %27, i64 0, i32 0, i32 0
  %30 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.23"* %29, %"class.WTF::AtomicString"* dereferenceable(8) %28) #4
  %31 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %30, 0
  %32 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %27, i64 0, i32 0, i32 0, i32 0
  %33 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 %36
  %38 = icmp eq %"struct.WTF::KeyValuePair"* %31, %37
  br i1 %38, label %39, label %180

39:                                               ; preds = %24
  %40 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #4
  %41 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %41, align 8
  %42 = bitcast %"class.WTF::StringAppend.2313"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #4
  %43 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #4
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.31, i64 0, i64 0), i64 30) #4
  %44 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #4
  %45 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %25, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %39
  %49 = call i64 @strlen(i8* nonnull %46) #18
  br label %50

50:                                               ; preds = %39, %48
  %51 = phi i64 [ %49, %48 ], [ 0, %39 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* %46, i64 %51) #4
  %52 = call %"class.WTF::StringImpl"* @_ZN5blink10FetchUtils20NormalizeHeaderValueERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %7) #4
  %53 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendINS_12AtomicStringET_EERKS3_S4_(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %6, %"class.WTF::StringImpl"* %52)
  %54 = getelementptr inbounds %"class.WTF::StringAppend.2313", %"class.WTF::StringAppend.2313"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %53, 0
  store %"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.WTF::StringAppend.2313", %"class.WTF::StringAppend.2313"* %5, i64 0, i32 1, i32 0, i32 0
  %57 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %53, 1
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %56, align 8
  %58 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_12AtomicStringENS_6StringEEcvS2_Ev(%"class.WTF::StringAppend.2313"* nonnull %5) #4
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %96, label %60

60:                                               ; preds = %50
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 acquire, align 4
  %63 = and i32 %62, 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %81, label %65

65:                                               ; preds = %60
  %66 = load atomic i32, i32* %61 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %83

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = zext i32 %71 to i33
  %73 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %72, i33 1) #4
  %74 = extractvalue { i33, i1 } %73, 1
  %75 = extractvalue { i33, i1 } %73, 0
  %76 = icmp slt i33 %75, 0
  %77 = or i1 %74, %76
  br i1 %77, label %78, label %79, !prof !2

78:                                               ; preds = %69
  call void @llvm.trap() #4
  unreachable

79:                                               ; preds = %69
  %80 = trunc i33 %75 to i32
  store i32 %80, i32* %70, align 4
  br label %83

81:                                               ; preds = %60
  %82 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %58) #4
  br label %83

83:                                               ; preds = %81, %79, %65
  %84 = phi %"class.WTF::StringImpl"* [ %58, %79 ], [ %58, %65 ], [ %82, %81 ]
  %85 = load atomic i32, i32* %61 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #4
  br label %96

96:                                               ; preds = %50, %92, %95
  %97 = phi %"class.WTF::StringImpl"* [ %84, %92 ], [ %84, %95 ], [ null, %50 ]
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %41, align 8
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #4
  br label %113

113:                                              ; preds = %112, %109, %96
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %113
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #4
  br label %129

129:                                              ; preds = %113, %125, %128
  %130 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #4
  br label %146

146:                                              ; preds = %129, %142, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #4
  %147 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #4
  br label %163

163:                                              ; preds = %146, %159, %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #4
  call void @_ZN5blink14XMLHttpRequest24SetRequestHeaderInternalERKN3WTF12AtomicStringES4_(%"class.blink::XMLHttpRequest"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %28, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4)
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #4
  br label %179

179:                                              ; preds = %163, %175, %178
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #4
  br label %180

180:                                              ; preds = %24, %9, %16, %21, %179
  %181 = phi i64 [ %26, %24 ], [ %26, %179 ], [ 0, %21 ], [ 0, %16 ], [ 0, %9 ]
  %182 = inttoptr i64 %181 to %"class.blink::EncodedFormData"*
  call void @_ZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::EncodedFormData"* %182, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %183

183:                                              ; preds = %3, %180
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest4sendEPNS_15URLSearchParamsERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::URLSearchParams"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call zeroext i1 @_ZN5blink14XMLHttpRequest8InitSendERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br i1 %6, label %7, label %62

7:                                                ; preds = %3
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  %9 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %10, %12
  br i1 %13, label %60, label %14

14:                                               ; preds = %7
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kHEADE, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %10, %17
  br i1 %18, label %60, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  %21 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %20) #4
  br i1 %21, label %22, label %60

22:                                               ; preds = %19
  %23 = tail call %"class.blink::EncodedFormData"* @_ZNK5blink15URLSearchParams17ToEncodedFormDataEv(%"class.blink::URLSearchParams"* %1) #4
  %24 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #4
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.32, i64 0, i64 0), i64 47) #4
  %25 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i64 5) #4
  call void @_ZN5blink14XMLHttpRequest27UpdateContentTypeAndCharsetERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::XMLHttpRequest"* %0, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5)
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #4
  br label %42

42:                                               ; preds = %22, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  %43 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #4
  br label %59

59:                                               ; preds = %42, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #4
  br label %60

60:                                               ; preds = %7, %14, %19, %59
  %61 = phi %"class.blink::EncodedFormData"* [ %23, %59 ], [ null, %19 ], [ null, %14 ], [ null, %7 ]
  call void @_ZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::EncodedFormData"* %61, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %62

62:                                               ; preds = %3, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14XMLHttpRequest27AreMethodAndURLValidForSendEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %4, %6
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kHEADE, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %4, %11
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  %15 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %14) #4
  br label %16

16:                                               ; preds = %8, %1, %13
  %17 = phi i1 [ false, %8 ], [ false, %1 ], [ %15, %13 ]
  ret i1 %17
}

declare zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest27UpdateContentTypeAndCharsetERKN3WTF12AtomicStringERKNS1_6StringE(%"class.blink::XMLHttpRequest"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #4
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  %14 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9, i32 0, i32 0
  %15 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.23"* %14, %"class.WTF::AtomicString"* dereferenceable(8) %13) #4
  %16 = icmp eq %"struct.WTF::KeyValuePair"* %15, null
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 1
  %18 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %19 = select i1 %16, %"class.WTF::AtomicString"* %18, %"class.WTF::AtomicString"* %17
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %12, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %41

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #4
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !2

37:                                               ; preds = %28
  tail call void @llvm.trap() #4
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %41

40:                                               ; preds = %3
  tail call void @_ZN5blink14XMLHttpRequest24SetRequestHeaderInternalERKN3WTF12AtomicStringES4_(%"class.blink::XMLHttpRequest"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %13, %"class.WTF::AtomicString"* dereferenceable(8) %1)
  br label %289

41:                                               ; preds = %38, %23
  %42 = load atomic i32, i32* %24 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #4
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %45
  tail call void @llvm.trap() #4
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %41, %55
  %58 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %58) #4
  store i32 0, i32* %4, align 4
  %59 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #4
  store i32 0, i32* %5, align 4
  call fastcc void @_ZN5blink12_GLOBAL__N_122FindCharsetInMediaTypeERKN3WTF6StringERjS5_(%"class.WTF::String"* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5) #4
  %60 = load i32, i32* %5, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %115, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.WTF::StringView"* %6 to i8*
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %67 = bitcast i8** %66 to %"class.WTF::StringImpl"**
  %68 = bitcast %"class.WTF::StringView"* %6 to i64*
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %70 = bitcast %"class.WTF::String"* %7 to i64*
  br label %71

71:                                               ; preds = %110, %62
  %72 = phi %"class.WTF::StringImpl"* [ %21, %62 ], [ %103, %110 ]
  %73 = phi %"class.WTF::StringImpl"* [ %21, %62 ], [ %104, %110 ]
  %74 = phi i32 [ %60, %62 ], [ %113, %110 ]
  %75 = load i32, i32* %4, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #4
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %71
  store i8* null, i8** %66, align 8
  %79 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %79, i64* %68, align 8
  br label %84

80:                                               ; preds = %71
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %65, align 8
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 1
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %67, align 8
  br label %84

84:                                               ; preds = %80, %78
  %85 = phi i32 [ %82, %80 ], [ 0, %78 ]
  store i32 %85, i32* %69, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %86, label %102, label %87

87:                                               ; preds = %84
  %88 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEjjRKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %73, i32 %75, i32 %74, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #4
  %89 = ptrtoint %"class.WTF::StringImpl"* %88 to i64
  store i64 %89, i64* %70, align 8
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %87
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %87
  %99 = phi i32 [ %97, %96 ], [ %95, %87 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #4
  br label %102

102:                                              ; preds = %101, %98, %84
  %103 = phi %"class.WTF::StringImpl"* [ %88, %101 ], [ %88, %98 ], [ %72, %84 ]
  %104 = phi %"class.WTF::StringImpl"* [ %88, %101 ], [ %88, %98 ], [ null, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #4
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  br label %110

110:                                              ; preds = %107, %102
  %111 = phi i32 [ %109, %107 ], [ 0, %102 ]
  %112 = add i32 %111, %75
  store i32 %112, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #4
  store i32 0, i32* %5, align 4
  call fastcc void @_ZN5blink12_GLOBAL__N_122FindCharsetInMediaTypeERKN3WTF6StringERjS5_(%"class.WTF::String"* nonnull dereferenceable(8) %7, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5) #4
  %113 = load i32, i32* %5, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %71

115:                                              ; preds = %110, %57
  %116 = phi %"class.WTF::StringImpl"* [ %21, %57 ], [ %103, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %58) #4
  %117 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #4
  %118 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %118, label %142, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 acquire, align 4
  %122 = and i32 %121, 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %119
  %125 = load atomic i32, i32* %120 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %142

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = zext i32 %130 to i33
  %132 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %131, i33 1) #4
  %133 = extractvalue { i33, i1 } %132, 1
  %134 = extractvalue { i33, i1 } %132, 0
  %135 = icmp slt i33 %134, 0
  %136 = or i1 %133, %135
  br i1 %136, label %137, label %138, !prof !2

137:                                              ; preds = %128
  call void @llvm.trap() #4
  unreachable

138:                                              ; preds = %128
  %139 = trunc i33 %134 to i32
  store i32 %139, i32* %129, align 4
  br label %142

140:                                              ; preds = %119
  %141 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %116) #4
  br label %142

142:                                              ; preds = %115, %124, %138, %140
  %143 = phi %"class.WTF::StringImpl"* [ %141, %140 ], [ %116, %124 ], [ %116, %138 ], [ null, %115 ]
  %144 = ptrtoint %"class.WTF::StringImpl"* %143 to i64
  %145 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  store i64 %144, i64* %145, align 8
  %146 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.23"* %14, %"class.WTF::AtomicString"* dereferenceable(8) %13, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8) #4
  %147 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %146, 1
  %148 = and i8 %147, 1
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %150, label %192

150:                                              ; preds = %142
  %151 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %146, 0
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %151, i64 0, i32 1
  %153 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %173, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %173

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i33
  %165 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %164, i33 1) #4
  %166 = extractvalue { i33, i1 } %165, 1
  %167 = extractvalue { i33, i1 } %165, 0
  %168 = icmp slt i33 %167, 0
  %169 = or i1 %166, %168
  br i1 %169, label %170, label %171, !prof !2

170:                                              ; preds = %161
  call void @llvm.trap() #4
  unreachable

171:                                              ; preds = %161
  %172 = trunc i33 %167 to i32
  store i32 %172, i32* %162, align 4
  br label %173

173:                                              ; preds = %171, %156, %150
  %174 = ptrtoint %"class.WTF::StringImpl"* %154 to i64
  %175 = bitcast %"class.WTF::AtomicString"* %152 to i64*
  %176 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %152, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  store i64 %174, i64* %175, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %173
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #4
  br label %192

192:                                              ; preds = %142, %173, %188, %191
  %193 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %194 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %193, align 8
  %195 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %195, label %209, label %196

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  br i1 %200, label %203, label %205

203:                                              ; preds = %196
  %204 = add i32 %202, -1
  store i32 %204, i32* %201, align 4
  br label %205

205:                                              ; preds = %203, %196
  %206 = phi i32 [ %204, %203 ], [ %202, %196 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %194) #4
  br label %209

209:                                              ; preds = %192, %205, %208
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #4
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %211 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %21, %"class.WTF::StringImpl"* %210) #4
  br i1 %211, label %262, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %214 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %213 to %"class.blink::ExecutionContextLifecycleObserver"*
  %215 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %214) #4
  %216 = icmp eq %"class.blink::ExecutionContext"* %215, null
  %217 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %215, i64 0, i32 3
  %218 = icmp eq %"class.blink::UseCounter"* %217, null
  %219 = or i1 %216, %218
  br i1 %219, label %225, label %220

220:                                              ; preds = %212
  %221 = bitcast %"class.blink::UseCounter"* %217 to void (%"class.blink::UseCounter"*, i32)***
  %222 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %221, align 8
  %223 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %222, i64 3
  %224 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %223, align 8
  call void %224(%"class.blink::UseCounter"* nonnull %217, i32 2230) #4
  br label %225

225:                                              ; preds = %212, %220
  %226 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #4
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"** %227, align 8
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %229 = load i32, i32* %228, align 4
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 1
  %231 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %232 = bitcast i8** %231 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %230, %"class.WTF::StringImpl"** %232, align 8
  %233 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %229, i32* %233, align 8
  %234 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #4
  %235 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %235, label %236, label %240

236:                                              ; preds = %225
  %237 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %237, align 8
  %238 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %239 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %238, i64* %239, align 8
  br label %247

240:                                              ; preds = %225
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %210, %"class.WTF::StringImpl"** %241, align 8
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 1
  %245 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %246 = bitcast i8** %245 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %244, %"class.WTF::StringImpl"** %246, align 8
  br label %247

247:                                              ; preds = %236, %240
  %248 = phi i32 [ %243, %240 ], [ 0, %236 ]
  %249 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %248, i32* %249, align 8
  %250 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #4
  br i1 %250, label %262, label %251

251:                                              ; preds = %247
  %252 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %214) #4
  %253 = icmp eq %"class.blink::ExecutionContext"* %252, null
  %254 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %252, i64 0, i32 3
  %255 = icmp eq %"class.blink::UseCounter"* %254, null
  %256 = or i1 %253, %255
  br i1 %256, label %262, label %257

257:                                              ; preds = %251
  %258 = bitcast %"class.blink::UseCounter"* %254 to void (%"class.blink::UseCounter"*, i32)***
  %259 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %258, align 8
  %260 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %259, i64 3
  %261 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %260, align 8
  call void %261(%"class.blink::UseCounter"* nonnull %254, i32 2362) #4
  br label %262

262:                                              ; preds = %209, %247, %251, %257
  %263 = load atomic i32, i32* %24 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %262
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %262
  %271 = phi i32 [ %269, %268 ], [ %267, %262 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #4
  br label %274

274:                                              ; preds = %273, %270
  %275 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %275, label %289, label %276

276:                                              ; preds = %274
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %276
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i32 [ %284, %283 ], [ %282, %276 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %210) #4
  br label %289

289:                                              ; preds = %40, %274, %285, %288
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #4
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"*, i32, i32, i32, %"class.blink::HeapHashSet.2296"*) local_unnamed_addr #2

declare %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEN4base4spanIKcLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() local_unnamed_addr #2

declare void @_ZNK3WTF12TextEncoding6EncodeERKNS_6StringENS_19UnencodableHandlingE(%"class.std::__1::basic_string"* sret, %"class.WTF::TextEncoding"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::EncodedFormData"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.blink::probe::AsyncTask", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.blink::ResourceRequest", align 8
  %13 = alloca %"class.absl::optional.2169", align 8
  %14 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %15 = alloca %"class.logging::CheckError", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.blink::ResourceRequest", align 8
  %18 = alloca %"class.base::TimeDelta", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = ptrtoint %"class.blink::EncodedFormData"* %1 to i64
  %21 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %23 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 4, i32* %25, align 8
  %26 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %21, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %6) #4
  br i1 %26, label %27, label %58

27:                                               ; preds = %3
  %28 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  %29 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %28, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %30, %32
  br i1 %33, label %58, label %34

34:                                               ; preds = %27
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0) #4
  %35 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  tail call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %0, i32 19, %"class.WTF::AtomicString"* dereferenceable(8) %35) #4
  %36 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  %37 = load i8, i8* %36, align 4, !range !6
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %646

39:                                               ; preds = %34
  %40 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.36, i64 0, i64 0), i64 50) #4
  call void @_ZN5blink14XMLHttpRequest27ThrowForLoadFailureIfNeededERNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #4
  br label %57

57:                                               ; preds = %39, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #4
  br label %646

58:                                               ; preds = %3, %27
  %59 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %60 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i8** %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 3, i32* %62, align 8
  %63 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %21, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %8) #4
  %64 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %65 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %64 to %"class.blink::ExecutionContextLifecycleObserver"*
  %66 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %65) #4
  br i1 %63, label %67, label %123

67:                                               ; preds = %58
  %68 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38, i64 0, i64 0), i64 21) #4
  %69 = icmp eq %"class.blink::ExecutionContext"* %66, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %67
  %71 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #4
  %72 = bitcast i8* %71 to %"class.blink::ConsoleMessage"*
  %73 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #4
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %72, i32 1, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::SourceLocation"* %73) #4
  %74 = getelementptr inbounds i8, i8* %71, i64 -4
  %75 = bitcast i8* %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = or i16 %76, 1
  store atomic i16 %77, i16* %75 release, align 2
  %78 = bitcast %"class.blink::ExecutionContext"* %66 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %79 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %79, i64 52
  %81 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %80, align 8
  call void %81(%"class.blink::ExecutionContext"* nonnull %66, %"class.blink::ConsoleMessage"* %72, i1 zeroext false) #4
  br label %82

82:                                               ; preds = %67, %70
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #4
  br label %99

99:                                               ; preds = %82, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #4
  call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0) #4
  %100 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %0, i32 19, %"class.WTF::AtomicString"* dereferenceable(8) %100) #4
  %101 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  %102 = load i8, i8* %101, align 4, !range !6
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %646

104:                                              ; preds = %99
  %105 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.39, i64 0, i64 0), i64 47) #4
  call void @_ZN5blink14XMLHttpRequest27ThrowForLoadFailureIfNeededERNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %10)
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #4
  br label %122

122:                                              ; preds = %104, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #4
  br label %646

123:                                              ; preds = %58
  %124 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 45
  store i8 1, i8* %124, align 4
  %125 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  %126 = load i8, i8* %125, align 4, !range !6
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %192, label %128

128:                                              ; preds = %123
  %129 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #4
  %130 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %131 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.40, i64 0, i64 0), i8** %132, align 8
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 19, i32* %133, align 8
  %134 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 47
  call void @_ZN5blink5probe18AsyncTaskScheduledEPNS_16ExecutionContextERKN3WTF10StringViewEPNS0_11AsyncTaskIdE(%"class.blink::ExecutionContext"* %66, %"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.blink::probe::AsyncTaskId"* %134) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #4
  %135 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names10kLoadstartE, align 8
  %136 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %65) #4
  %137 = bitcast %"class.blink::probe::AsyncTask"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %137) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 40, i1 false) #4
  %138 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kLoadendE, align 8
  %139 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %135, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %138, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %140, %142
  %144 = select i1 %143, i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i64 0, i64 0)
  %145 = load i8, i8* %125, align 4, !range !6
  %146 = icmp ne i8 %145, 0
  call void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"* nonnull %5, %"class.blink::ExecutionContext"* %136, %"class.blink::probe::AsyncTaskId"* %134, i8* %144, i1 zeroext %146, i32 1) #4
  %147 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 30, i32 0, i32 0
  %148 = load %"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::XMLHttpRequestProgressEventThrottle"** %147, align 8
  call void @_ZN5blink35XMLHttpRequestProgressEventThrottle21DispatchProgressEventERKN3WTF12AtomicStringEbmm(%"class.blink::XMLHttpRequestProgressEventThrottle"* %148, %"class.WTF::AtomicString"* dereferenceable(8) %135, i1 zeroext false, i64 0, i64 0) #4
  call void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %137) #4
  %149 = load i8, i8* %124, align 4, !range !6
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %646, label %151

151:                                              ; preds = %128
  %152 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 16, i32 0, i32 0
  %153 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %152, align 8
  %154 = icmp eq %"class.blink::ThreadableLoader"* %153, null
  br i1 %154, label %155, label %646

155:                                              ; preds = %151
  %156 = icmp eq %"class.blink::EncodedFormData"* %1, null
  br i1 %156, label %192, label %157

157:                                              ; preds = %155
  %158 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 5, i32 0, i32 0
  %159 = load %"class.blink::XMLHttpRequestUpload"*, %"class.blink::XMLHttpRequestUpload"** %158, align 8
  %160 = icmp eq %"class.blink::XMLHttpRequestUpload"* %159, null
  br i1 %160, label %192, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.blink::XMLHttpRequestUpload", %"class.blink::XMLHttpRequestUpload"* %159, i64 0, i32 0, i32 0, i32 0
  %163 = bitcast %"class.blink::XMLHttpRequestUpload"* %159 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %164 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %163, align 8
  %165 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %164, i64 25
  %166 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %165, align 8
  %167 = call %"class.blink::EventTargetData"* %166(%"class.blink::EventTarget"* %162) #4
  %168 = icmp eq %"class.blink::EventTargetData"* %167, null
  br i1 %168, label %173, label %169

169:                                              ; preds = %161
  %170 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %167, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = icmp ne i32 %171, 0
  br label %173

173:                                              ; preds = %161, %169
  %174 = phi i1 [ %172, %169 ], [ false, %161 ]
  %175 = load %"class.blink::XMLHttpRequestUpload"*, %"class.blink::XMLHttpRequestUpload"** %158, align 8
  %176 = getelementptr inbounds %"class.blink::XMLHttpRequestUpload", %"class.blink::XMLHttpRequestUpload"* %175, i64 0, i32 0, i32 0, i32 0
  %177 = call i64 @_ZNK5blink15EncodedFormData11SizeInBytesEv(%"class.blink::EncodedFormData"* nonnull %1) #4
  %178 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 128) #4
  %179 = bitcast i8* %178 to %"class.blink::ProgressEvent"*
  call void @_ZN5blink13ProgressEventC1ERKN3WTF12AtomicStringEbmm(%"class.blink::ProgressEvent"* %179, %"class.WTF::AtomicString"* dereferenceable(8) %135, i1 zeroext true, i64 0, i64 %177) #4
  %180 = getelementptr inbounds i8, i8* %178, i64 -4
  %181 = bitcast i8* %180 to i16*
  %182 = load atomic i16, i16* %181 monotonic, align 2
  %183 = or i16 %182, 1
  store atomic i16 %183, i16* %181 release, align 2
  %184 = bitcast i8* %178 to %"class.blink::Event"*
  %185 = call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %176, %"class.blink::Event"* dereferenceable(104) %184) #4
  %186 = load i8, i8* %124, align 4, !range !6
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %649, label %188

188:                                              ; preds = %173
  %189 = zext i1 %174 to i8
  %190 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %152, align 8
  %191 = icmp eq %"class.blink::ThreadableLoader"* %190, null
  br i1 %191, label %192, label %649

192:                                              ; preds = %188, %157, %155, %123
  %193 = phi i8 [ %189, %188 ], [ 0, %157 ], [ 0, %155 ], [ 0, %123 ]
  %194 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %65) #4
  %195 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %194) #4
  %196 = call zeroext i1 @_ZNK5blink14SecurityOrigin10CanRequestERKNS_4KURLE(%"class.blink::SecurityOrigin"* %195, %"class.blink::KURL"* dereferenceable(112) %21) #4
  br i1 %196, label %215, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 34, i32 0
  %199 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %198, align 8
  %200 = icmp eq %"class.blink::SecurityOrigin"* %199, null
  br i1 %200, label %206, label %201

201:                                              ; preds = %197
  %202 = call zeroext i1 @_ZNK5blink14SecurityOrigin10CanRequestERKNS_4KURLE(%"class.blink::SecurityOrigin"* nonnull %199, %"class.blink::KURL"* dereferenceable(112) %21) #4
  %203 = xor i1 %202, true
  %204 = icmp eq i8 %193, 0
  %205 = and i1 %204, %203
  br i1 %205, label %208, label %215

206:                                              ; preds = %197
  %207 = icmp eq i8 %193, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %201, %206
  %209 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0
  %210 = call zeroext i1 @_ZN5blink4cors22IsCorsSafelistedMethodERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %209) #4
  br i1 %210, label %211, label %215

211:                                              ; preds = %208
  %212 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9
  %213 = call zeroext i1 @_ZN5blink4cors33ContainsOnlyCorsSafelistedHeadersERKNS_13HTTPHeaderMapE(%"class.blink::HTTPHeaderMap"* dereferenceable(24) %212) #4
  %214 = xor i1 %213, true
  br label %215

215:                                              ; preds = %201, %206, %211, %208, %192
  %216 = phi i1 [ true, %208 ], [ true, %206 ], [ true, %201 ], [ true, %192 ], [ %214, %211 ]
  %217 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 41
  %218 = zext i1 %216 to i8
  store i8 %218, i8* %217, align 8
  %219 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %219) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %219, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %12, %"class.blink::KURL"* dereferenceable(112) %21) #4
  %220 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0
  %221 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %65) #4
  %222 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %221) #4
  %223 = icmp eq %"class.blink::SecurityOrigin"* %222, null
  br i1 %223, label %226, label %224

224:                                              ; preds = %215
  %225 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %222, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %225) #4
  br label %226

226:                                              ; preds = %215, %224
  %227 = ptrtoint %"class.blink::SecurityOrigin"* %222 to i64
  %228 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 4
  %229 = bitcast %class.scoped_refptr.32* %228 to i64*
  %230 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %228, i64 0, i32 0
  %231 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %230, align 8
  store i64 %227, i64* %229, align 8
  %232 = icmp eq %"class.blink::SecurityOrigin"* %231, null
  br i1 %232, label %240, label %233

233:                                              ; preds = %226
  %234 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %231, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %234) #4
  %235 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %231, i64 0, i32 0, i32 0, i32 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %240

238:                                              ; preds = %233
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %231) #4
  %239 = bitcast %"class.blink::SecurityOrigin"* %231 to i8*
  call void @free(i8* %239) #4
  br label %240

240:                                              ; preds = %226, %233, %238
  %241 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 34, i32 0
  %242 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %241, align 8
  %243 = icmp eq %"class.blink::SecurityOrigin"* %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %242, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %245) #4
  br label %246

246:                                              ; preds = %240, %244
  %247 = ptrtoint %"class.blink::SecurityOrigin"* %242 to i64
  %248 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 5
  %249 = bitcast %class.scoped_refptr.32* %248 to i64*
  %250 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %248, i64 0, i32 0
  %251 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %250, align 8
  store i64 %247, i64* %249, align 8
  %252 = icmp eq %"class.blink::SecurityOrigin"* %251, null
  br i1 %252, label %260, label %253

253:                                              ; preds = %246
  %254 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %251, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %254) #4
  %255 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %251, i64 0, i32 0, i32 0, i32 0, i32 0
  %256 = load i32, i32* %255, align 4
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %258, label %260

258:                                              ; preds = %253
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %251) #4
  %259 = bitcast %"class.blink::SecurityOrigin"* %251 to i8*
  call void @free(i8* %259) #4
  br label %260

260:                                              ; preds = %246, %253, %258
  %261 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8
  call void @_ZN5blink19ResourceRequestHead13SetHttpMethodERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"* nonnull %220, %"class.WTF::AtomicString"* dereferenceable(8) %261) #4
  %262 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 15
  store i32 32, i32* %262, align 8
  %263 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 45
  store i8 1, i8* %263, align 2
  %264 = icmp eq i8 %193, 0
  %265 = select i1 %264, i32 2, i32 3
  %266 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 17
  store i32 %265, i32* %266, align 8
  %267 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 38
  %268 = load i8, i8* %267, align 1, !range !6
  %269 = icmp eq i8 %268, 0
  %270 = select i1 %269, i32 1, i32 2
  %271 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 19
  store i32 %270, i32* %271, align 8
  %272 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 33, i32 0
  %273 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %272, align 8
  %274 = icmp eq %"class.blink::DOMWrapperWorld"* %273, null
  br i1 %274, label %280, label %275

275:                                              ; preds = %260
  %276 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %273, i64 0, i32 1
  %277 = load i32, i32* %276, align 4
  %278 = add i32 %277, -1
  %279 = icmp ult i32 %278, 2
  br label %280

280:                                              ; preds = %260, %275
  %281 = phi i1 [ false, %260 ], [ %279, %275 ]
  %282 = zext i1 %281 to i8
  %283 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 10
  %284 = load i8, i8* %283, align 8
  %285 = and i8 %284, -2
  %286 = or i8 %285, %282
  store i8 %286, i8* %283, align 8
  %287 = call i32 @_ZNK5blink16ExecutionContext12AddressSpaceEv(%"class.blink::ExecutionContext"* %66) #4
  call void @_ZN5blink19ResourceRequestHead48SetExternalRequestStateFromRequestorAddressSpaceEN7network5mojom14IPAddressSpaceE(%"class.blink::ResourceRequestHead"* nonnull %220, i32 %287) #4
  %288 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %289 = load %"class.network::mojom::blink::TrustTokenParams"*, %"class.network::mojom::blink::TrustTokenParams"** %288, align 8
  %290 = icmp eq %"class.network::mojom::blink::TrustTokenParams"* %289, null
  br i1 %290, label %358, label %291

291:                                              ; preds = %280
  %292 = getelementptr inbounds %"class.absl::optional.2169", %"class.absl::optional.2169"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %292, align 8
  %293 = getelementptr inbounds %"class.absl::optional.2169", %"class.absl::optional.2169"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN7network5mojom5blink16TrustTokenParamsC2ERKS2_(%"class.network::mojom::blink::TrustTokenParams"* %293, %"class.network::mojom::blink::TrustTokenParams"* nonnull dereferenceable(56) %289) #4
  %294 = load i8, i8* %292, align 8, !range !6
  %295 = icmp eq i8 %294, 0
  %296 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %297 = load i8, i8* %296, align 8, !range !6
  %298 = icmp eq i8 %297, 0
  br i1 %295, label %351, label %299

299:                                              ; preds = %291
  %300 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %298, label %350, label %301

301:                                              ; preds = %299
  %302 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %300 to i8*
  %303 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %293 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %302, i8* align 8 %303, i64 13, i1 false) #4
  %304 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %305 = getelementptr inbounds %"class.absl::optional.2169", %"class.absl::optional.2169"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %306 = call dereferenceable(16) %"class.WTF::Vector.29"* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEEaSERKS7_(%"class.WTF::Vector.29"* %304, %"class.WTF::Vector.29"* dereferenceable(16) %305) #4
  %307 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %308 = getelementptr inbounds %"class.absl::optional.2169", %"class.absl::optional.2169"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 5
  %309 = call dereferenceable(16) %"class.WTF::Vector.35"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.35"* %307, %"class.WTF::Vector.35"* dereferenceable(16) %308) #4
  %310 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0, i32 6
  %311 = getelementptr inbounds %"class.absl::optional.2169", %"class.absl::optional.2169"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 6, i32 0, i32 0
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %311, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %313, label %331, label %314

314:                                              ; preds = %301
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %331

319:                                              ; preds = %314
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %321 = load i32, i32* %320, align 4
  %322 = zext i32 %321 to i33
  %323 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %322, i33 1) #4
  %324 = extractvalue { i33, i1 } %323, 1
  %325 = extractvalue { i33, i1 } %323, 0
  %326 = icmp slt i33 %325, 0
  %327 = or i1 %324, %326
  br i1 %327, label %328, label %329, !prof !2

328:                                              ; preds = %319
  call void @llvm.trap() #4
  unreachable

329:                                              ; preds = %319
  %330 = trunc i33 %325 to i32
  store i32 %330, i32* %320, align 4
  br label %331

331:                                              ; preds = %329, %314, %301
  %332 = ptrtoint %"class.WTF::StringImpl"* %312 to i64
  %333 = bitcast %"class.WTF::String"* %310 to i64*
  %334 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %310, i64 0, i32 0, i32 0
  %335 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %334, align 8
  store i64 %332, i64* %333, align 8
  %336 = icmp eq %"class.WTF::StringImpl"* %335, null
  br i1 %336, label %354, label %337

337:                                              ; preds = %331
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %335, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %339 = load atomic i32, i32* %338 monotonic, align 4
  %340 = and i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %335, i64 0, i32 0
  %343 = load i32, i32* %342, align 4
  br i1 %341, label %344, label %346

344:                                              ; preds = %337
  %345 = add i32 %343, -1
  store i32 %345, i32* %342, align 4
  br label %346

346:                                              ; preds = %344, %337
  %347 = phi i32 [ %345, %344 ], [ %343, %337 ]
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %354

349:                                              ; preds = %346
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %335) #4
  br label %354

350:                                              ; preds = %299
  call void @_ZN7network5mojom5blink16TrustTokenParamsC2ERKS2_(%"class.network::mojom::blink::TrustTokenParams"* %300, %"class.network::mojom::blink::TrustTokenParams"* dereferenceable(56) %293) #4
  store i8 1, i8* %296, align 8
  br label %354

351:                                              ; preds = %291
  br i1 %298, label %354, label %352

352:                                              ; preds = %351
  %353 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* %353) #4
  store i8 0, i8* %296, align 8
  br label %354

354:                                              ; preds = %349, %346, %331, %350, %351, %352
  %355 = load i8, i8* %292, align 8, !range !6
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %358, label %357

357:                                              ; preds = %354
  call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* %293) #4
  store i8 0, i8* %292, align 8
  br label %358

358:                                              ; preds = %280, %357, %354
  %359 = load i8, i8* %125, align 4, !range !6
  %360 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9
  %361 = load i8, i8* %267, align 1, !range !6
  %362 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %363 = and i32 %362, 16384
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %368, label %365

365:                                              ; preds = %358
  %366 = icmp ne i8 %361, 0
  %367 = icmp ne i8 %359, 0
  call void @_ZN5blink5probe15WillLoadXHRImplEPNS_16ExecutionContextERKN3WTF12AtomicStringERKNS_4KURLEbRKNS_13HTTPHeaderMapEb(%"class.blink::ExecutionContext"* %66, %"class.WTF::AtomicString"* dereferenceable(8) %261, %"class.blink::KURL"* dereferenceable(112) %21, i1 zeroext %367, %"class.blink::HTTPHeaderMap"* dereferenceable(24) %360, i1 zeroext %366) #4
  br label %368

368:                                              ; preds = %358, %365
  %369 = icmp eq %"class.blink::EncodedFormData"* %1, null
  br i1 %369, label %371, label %370

370:                                              ; preds = %368
  call void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"* nonnull %12, %"class.blink::EncodedFormData"* nonnull %1) #4
  br label %371

371:                                              ; preds = %368, %370
  %372 = phi i64 [ 0, %370 ], [ %20, %368 ]
  %373 = inttoptr i64 %372 to %"class.blink::EncodedFormData"*
  %374 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %375 = load i32, i32* %374, align 4
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %378, label %377

377:                                              ; preds = %371
  call void @_ZN5blink19ResourceRequestHead19AddHTTPHeaderFieldsERKNS_13HTTPHeaderMapE(%"class.blink::ResourceRequestHead"* nonnull %220, %"class.blink::HTTPHeaderMap"* dereferenceable(24) %360) #4
  br label %378

378:                                              ; preds = %371, %377
  %379 = bitcast %"struct.blink::ResourceLoaderOptions"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %379) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %379, i8 -86, i64 112, i1 false)
  %380 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %272, align 8
  %381 = icmp eq %"class.blink::DOMWrapperWorld"* %380, null
  br i1 %381, label %384, label %382

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %380, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %383) #4
  br label %384

384:                                              ; preds = %378, %382
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %14, %"class.blink::DOMWrapperWorld"* %380) #4
  %385 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names15kXmlhttprequestE, align 8
  %386 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %385, i64 0, i32 0, i32 0, i32 0
  %387 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %386, align 8
  %388 = icmp eq %"class.WTF::StringImpl"* %387, null
  br i1 %388, label %406, label %389

389:                                              ; preds = %384
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load atomic i32, i32* %390 monotonic, align 4
  %392 = and i32 %391, 2
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %406

394:                                              ; preds = %389
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %387, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  %397 = zext i32 %396 to i33
  %398 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %397, i33 1) #4
  %399 = extractvalue { i33, i1 } %398, 1
  %400 = extractvalue { i33, i1 } %398, 0
  %401 = icmp slt i33 %400, 0
  %402 = or i1 %399, %401
  br i1 %402, label %403, label %404, !prof !2

403:                                              ; preds = %394
  call void @llvm.trap() #4
  unreachable

404:                                              ; preds = %394
  %405 = trunc i33 %400 to i32
  store i32 %405, i32* %395, align 4
  br label %406

406:                                              ; preds = %404, %389, %384
  %407 = ptrtoint %"class.WTF::StringImpl"* %387 to i64
  %408 = bitcast %"struct.blink::ResourceLoaderOptions"* %14 to i64*
  %409 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %409, align 8
  store i64 %407, i64* %408, align 8
  %411 = icmp eq %"class.WTF::StringImpl"* %410, null
  br i1 %411, label %425, label %412

412:                                              ; preds = %406
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %414 = load atomic i32, i32* %413 monotonic, align 4
  %415 = and i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 0
  %418 = load i32, i32* %417, align 4
  br i1 %416, label %419, label %421

419:                                              ; preds = %412
  %420 = add i32 %418, -1
  store i32 %420, i32* %417, align 4
  br label %421

421:                                              ; preds = %419, %412
  %422 = phi i32 [ %420, %419 ], [ %418, %412 ]
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %425

424:                                              ; preds = %421
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %410) #4
  br label %425

425:                                              ; preds = %406, %421, %424
  %426 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 7
  %427 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %426, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %428 = load i32, i32* %427, align 4
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %452, label %430

430:                                              ; preds = %425
  %431 = call i8* @_Znwm(i64 12) #16
  %432 = bitcast i8* %431 to i32*
  store i32 0, i32* %432, align 4
  %433 = getelementptr inbounds i8, i8* %431, i64 4
  %434 = bitcast i8* %433 to %"struct.mojo::internal::PendingRemoteState"*
  %435 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %426, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* %434, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %435) #4
  %436 = atomicrmw add i32* %432, i32 1 monotonic
  %437 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %14, i64 0, i32 11
  %438 = ptrtoint i8* %431 to i64
  %439 = bitcast %class.scoped_refptr.2208* %437 to i64*
  %440 = getelementptr inbounds %class.scoped_refptr.2208, %class.scoped_refptr.2208* %437, i64 0, i32 0
  %441 = load %"class.base::RefCountedData.2209"*, %"class.base::RefCountedData.2209"** %440, align 8
  store i64 %438, i64* %439, align 8
  %442 = icmp eq %"class.base::RefCountedData.2209"* %441, null
  br i1 %442, label %452, label %443

443:                                              ; preds = %430
  %444 = getelementptr inbounds %"class.base::RefCountedData.2209", %"class.base::RefCountedData.2209"* %441, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %445 = atomicrmw sub i32* %444, i32 1 acq_rel
  %446 = icmp eq i32 %445, 1
  br i1 %446, label %447, label %452

447:                                              ; preds = %443
  %448 = getelementptr inbounds %"class.base::RefCountedData.2209", %"class.base::RefCountedData.2209"* %441, i64 0, i32 0
  %449 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2472", %"class.base::RefCountedThreadSafe.2472"* %448, i64 1
  %450 = bitcast %"class.base::RefCountedThreadSafe.2472"* %449 to %"struct.mojo::internal::PendingRemoteState"*
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %450) #4
  %451 = bitcast %"class.base::RefCountedData.2209"* %441 to i8*
  call void @_ZdlPv(i8* %451) #16
  br label %452

452:                                              ; preds = %425, %447, %443, %430
  %453 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  %454 = load i32, i32* %453, align 8
  %455 = icmp eq i32 %454, 4
  br i1 %455, label %458, label %456

456:                                              ; preds = %452
  %457 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 43
  store i8 0, i8* %457, align 2
  br label %473

458:                                              ; preds = %452
  %459 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %459)
  %460 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %461 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %460, i64* %461, align 8
  %462 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i8** %462, align 8
  %463 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 4, i32* %463, align 8
  %464 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %21, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %4) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %459)
  %465 = xor i1 %464, true
  %466 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 43
  %467 = zext i1 %465 to i8
  store i8 %467, i8* %466, align 2
  br i1 %464, label %473, label %468

468:                                              ; preds = %458
  %469 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 8
  %470 = load i16, i16* %469, align 8
  %471 = or i16 %470, 32
  store i16 %471, i16* %469, align 8
  %472 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %14, i64 0, i32 1
  store i8 1, i8* %472, align 8
  br label %473

473:                                              ; preds = %458, %456, %468
  %474 = load i8, i8* %125, align 4, !range !6
  %475 = icmp eq i8 %474, 0
  br i1 %475, label %502, label %476

476:                                              ; preds = %473
  %477 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %14, i64 0, i32 1
  store i8 1, i8* %477, align 8
  %478 = icmp eq %"class.blink::ExecutionContext"* %66, null
  %479 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %66, i64 0, i32 3
  %480 = icmp eq %"class.blink::UseCounter"* %479, null
  %481 = or i1 %478, %480
  br i1 %481, label %487, label %482

482:                                              ; preds = %476
  %483 = bitcast %"class.blink::UseCounter"* %479 to void (%"class.blink::UseCounter"*, i32)***
  %484 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %483, align 8
  %485 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %484, i64 3
  %486 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %485, align 8
  call void %486(%"class.blink::UseCounter"* nonnull %479, i32 677) #4
  br label %487

487:                                              ; preds = %476, %482
  %488 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 5, i32 0, i32 0
  %489 = load %"class.blink::XMLHttpRequestUpload"*, %"class.blink::XMLHttpRequestUpload"** %488, align 8
  %490 = icmp eq %"class.blink::XMLHttpRequestUpload"* %489, null
  br i1 %490, label %495, label %491

491:                                              ; preds = %487
  %492 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %12, i64 0, i32 0, i32 8
  %493 = load i16, i16* %492, align 8
  %494 = or i16 %493, 2
  store i16 %494, i16* %492, align 8
  br label %495

495:                                              ; preds = %487, %491
  %496 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 16, i32 0, i32 0
  %497 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %496, align 8
  %498 = icmp eq %"class.blink::ThreadableLoader"* %497, null
  br i1 %498, label %585, label %499

499:                                              ; preds = %495
  %500 = bitcast %"class.logging::CheckError"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %500) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %15, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 1097, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0)) #4
  %501 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %15) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %500) #4
  br label %585

502:                                              ; preds = %473
  %503 = icmp eq %"class.blink::ExecutionContext"* %66, null
  %504 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %66, i64 0, i32 3
  %505 = select i1 %503, %"class.blink::UseCounter"* null, %"class.blink::UseCounter"* %504
  %506 = icmp eq %"class.blink::UseCounter"* %505, null
  br i1 %506, label %512, label %507

507:                                              ; preds = %502
  %508 = bitcast %"class.blink::UseCounter"* %505 to void (%"class.blink::UseCounter"*, i32)***
  %509 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %508, align 8
  %510 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %509, i64 3
  %511 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %510, align 8
  call void %511(%"class.blink::UseCounter"* nonnull %505, i32 465) #4
  br label %512

512:                                              ; preds = %502, %507
  %513 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %65) #4
  %514 = icmp eq %"class.blink::ExecutionContext"* %513, null
  br i1 %514, label %577, label %515

515:                                              ; preds = %512
  %516 = bitcast %"class.blink::ExecutionContext"* %513 to i1 (%"class.blink::ExecutionContext"*)***
  %517 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %516, align 8
  %518 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %517, i64 1
  %519 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %518, align 8
  %520 = call zeroext i1 %519(%"class.blink::ExecutionContext"* nonnull %513) #4
  br i1 %520, label %521, label %577

521:                                              ; preds = %515
  %522 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %513, i64 -1, i32 8
  %523 = icmp eq i32* %522, null
  br i1 %523, label %577, label %524

524:                                              ; preds = %521
  %525 = getelementptr inbounds i32, i32* %522, i64 18
  %526 = bitcast i32* %525 to %"class.blink::LocalFrame"**
  %527 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %526, align 8
  %528 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %527, i64 0, i32 0
  %529 = icmp eq %"class.blink::LocalFrame"* %527, null
  br i1 %529, label %552, label %530

530:                                              ; preds = %524
  %531 = call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* %528) #4
  br i1 %531, label %532, label %538

532:                                              ; preds = %530
  br i1 %506, label %552, label %533

533:                                              ; preds = %532
  %534 = bitcast %"class.blink::UseCounter"* %505 to void (%"class.blink::UseCounter"*, i32)***
  %535 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %534, align 8
  %536 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %535, i64 3
  %537 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %536, align 8
  call void %537(%"class.blink::UseCounter"* nonnull %505, i32 3000) #4
  br label %552

538:                                              ; preds = %530
  %539 = call zeroext i1 @_ZNK5blink5Frame24IsCrossOriginToMainFrameEv(%"class.blink::Frame"* %528) #4
  br i1 %539, label %540, label %546

540:                                              ; preds = %538
  br i1 %506, label %552, label %541

541:                                              ; preds = %540
  %542 = bitcast %"class.blink::UseCounter"* %505 to void (%"class.blink::UseCounter"*, i32)***
  %543 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %542, align 8
  %544 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %543, i64 3
  %545 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %544, align 8
  call void %545(%"class.blink::UseCounter"* nonnull %505, i32 3001) #4
  br label %552

546:                                              ; preds = %538
  br i1 %506, label %552, label %547

547:                                              ; preds = %546
  %548 = bitcast %"class.blink::UseCounter"* %505 to void (%"class.blink::UseCounter"*, i32)***
  %549 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %548, align 8
  %550 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %549, i64 3
  %551 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %550, align 8
  call void %551(%"class.blink::UseCounter"* nonnull %505, i32 3002) #4
  br label %552

552:                                              ; preds = %547, %546, %541, %540, %533, %532, %524
  %553 = call zeroext i1 @_ZN5blink18PageDismissalScope8IsActiveEv() #4
  br i1 %553, label %554, label %583

554:                                              ; preds = %552
  %555 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %66, i64 0, i32 4
  %556 = select i1 %503, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %555
  %557 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase34AllowSyncXHRInPageDismissalEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %556) #4
  br i1 %557, label %583, label %558

558:                                              ; preds = %554
  call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0) #4
  %559 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %0, i32 19, %"class.WTF::AtomicString"* dereferenceable(8) %559) #4
  %560 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %560) #4
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.42, i64 0, i64 0), i64 110) #4
  call void @_ZN5blink14XMLHttpRequest27ThrowForLoadFailureIfNeededERNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %16)
  %561 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %562 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %561, align 8
  %563 = icmp eq %"class.WTF::StringImpl"* %562, null
  br i1 %563, label %643, label %564

564:                                              ; preds = %558
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %562, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = load atomic i32, i32* %565 monotonic, align 4
  %567 = and i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %562, i64 0, i32 0
  %570 = load i32, i32* %569, align 4
  br i1 %568, label %571, label %573

571:                                              ; preds = %564
  %572 = add i32 %570, -1
  store i32 %572, i32* %569, align 4
  br label %573

573:                                              ; preds = %571, %564
  %574 = phi i32 [ %572, %571 ], [ %570, %564 ]
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %643

576:                                              ; preds = %573
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %562) #4
  br label %643

577:                                              ; preds = %512, %515, %521
  br i1 %506, label %583, label %578

578:                                              ; preds = %577
  %579 = bitcast %"class.blink::UseCounter"* %505 to void (%"class.blink::UseCounter"*, i32)***
  %580 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %579, align 8
  %581 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %580, i64 3
  %582 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %581, align 8
  call void %582(%"class.blink::UseCounter"* nonnull %505, i32 3003) #4
  br label %583

583:                                              ; preds = %578, %577, %552, %554
  %584 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %14, i64 0, i32 4
  store i8 0, i8* %584, align 1
  br label %585

585:                                              ; preds = %495, %499, %583
  %586 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 29
  store i32 0, i32* %586, align 8
  %587 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  store i8 0, i8* %587, align 1
  %588 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16ThreadableLoaderEEEPhm(i64 304) #4
  %589 = bitcast i8* %588 to %"class.blink::ThreadableLoader"*
  %590 = icmp eq %"class.blink::XMLHttpRequest"* %0, null
  %591 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 1
  %592 = select i1 %590, %"class.blink::ThreadableLoaderClient"* null, %"class.blink::ThreadableLoaderClient"* %591
  call void @_ZN5blink16ThreadableLoaderC1ERNS_16ExecutionContextEPNS_22ThreadableLoaderClientERKNS_21ResourceLoaderOptionsEPNS_15ResourceFetcherE(%"class.blink::ThreadableLoader"* %589, %"class.blink::ExecutionContext"* dereferenceable(376) %66, %"class.blink::ThreadableLoaderClient"* %592, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %14, %"class.blink::ResourceFetcher"* null) #4
  %593 = getelementptr inbounds i8, i8* %588, i64 -4
  %594 = bitcast i8* %593 to i16*
  %595 = load atomic i16, i16* %594 monotonic, align 2
  %596 = or i16 %595, 1
  store atomic i16 %596, i16* %594 release, align 2
  %597 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 16
  %598 = ptrtoint i8* %588 to i64
  %599 = bitcast %"class.blink::Member.55"* %597 to i64*
  store atomic i64 %598, i64* %599 monotonic, align 8
  %600 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %601 = icmp eq i32 %600, 0
  %602 = bitcast i8* %588 to %"class.blink::ThreadableLoader"*
  br i1 %601, label %607, label %603

603:                                              ; preds = %585
  %604 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %588) #4
  %605 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %597, i64 0, i32 0, i32 0
  %606 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %605, align 8
  br label %607

607:                                              ; preds = %585, %603
  %608 = phi %"class.blink::ThreadableLoader"* [ %602, %585 ], [ %606, %603 ]
  %609 = getelementptr inbounds %"class.blink::Member.55", %"class.blink::Member.55"* %597, i64 0, i32 0, i32 0
  %610 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 13
  call void @_ZN5blink16ThreadableLoader10SetTimeoutERKN4base9TimeDeltaE(%"class.blink::ThreadableLoader"* %608, %"class.base::TimeDelta"* dereferenceable(8) %610) #4
  %611 = call i64 @_ZN4base9TimeTicks3NowEv() #4
  %612 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %609, align 8
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %17, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %12) #4
  call void @_ZN5blink16ThreadableLoader5StartENS_15ResourceRequestE(%"class.blink::ThreadableLoader"* %612, %"class.blink::ResourceRequest"* nonnull %17) #4
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %17) #4
  %613 = load i8, i8* %125, align 4, !range !6
  %614 = icmp eq i8 %613, 0
  br i1 %614, label %615, label %645

615:                                              ; preds = %607
  %616 = bitcast %"class.base::TimeDelta"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %616) #4
  %617 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %18, i64 0, i32 0
  %618 = call i64 @_ZN4base9TimeTicks3NowEv() #4
  %619 = sub nsw i64 %618, %611
  store i64 %619, i64* %617, align 8
  %620 = bitcast %"class.blink::ExecutionContext"* %66 to i1 (%"class.blink::ExecutionContext"*)***
  %621 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %620, align 8
  %622 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %621, i64 1
  %623 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %622, align 8
  %624 = call zeroext i1 %623(%"class.blink::ExecutionContext"* %66) #4
  br i1 %624, label %625, label %632

625:                                              ; preds = %615
  %626 = load atomic i64, i64* @_ZZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %627 = inttoptr i64 %626 to %"class.base::HistogramBase"*
  %628 = icmp eq i64 %626, 0
  br i1 %628, label %629, label %639

629:                                              ; preds = %625
  %630 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0), i64 10000, i64 180000000, i32 50, i32 1) #4
  %631 = ptrtoint %"class.base::HistogramBase"* %630 to i64
  store atomic i64 %631, i64* @_ZZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %639

632:                                              ; preds = %615
  %633 = load atomic i64, i64* @_ZZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %634 = inttoptr i64 %633 to %"class.base::HistogramBase"*
  %635 = icmp eq i64 %633, 0
  br i1 %635, label %636, label %639

636:                                              ; preds = %632
  %637 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.44, i64 0, i64 0), i64 10000, i64 180000000, i32 50, i32 1) #4
  %638 = ptrtoint %"class.base::HistogramBase"* %637 to i64
  store atomic i64 %638, i64* @_ZZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %639

639:                                              ; preds = %636, %632, %629, %625
  %640 = phi %"class.base::HistogramBase"* [ %627, %625 ], [ %630, %629 ], [ %634, %632 ], [ %637, %636 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %640, %"class.base::TimeDelta"* nonnull dereferenceable(8) %18) #4
  %641 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %641) #4
  %642 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %642, align 8
  call void @_ZN5blink14XMLHttpRequest27ThrowForLoadFailureIfNeededERNS_14ExceptionStateERKN3WTF6StringE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::String"* nonnull dereferenceable(8) %19)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %641) #4
  br label %643

643:                                              ; preds = %576, %573, %558, %639
  %644 = phi i8* [ %616, %639 ], [ %560, %558 ], [ %560, %573 ], [ %560, %576 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %644) #4
  br label %645

645:                                              ; preds = %643, %607
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %379) #4
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %12) #4
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %219) #4
  br label %646

646:                                              ; preds = %151, %645, %128, %122, %99, %57, %34
  %647 = phi %"class.blink::EncodedFormData"* [ %1, %57 ], [ %1, %34 ], [ %1, %122 ], [ %1, %99 ], [ %373, %645 ], [ %1, %128 ], [ %1, %151 ]
  %648 = icmp eq %"class.blink::EncodedFormData"* %647, null
  br i1 %648, label %657, label %649

649:                                              ; preds = %188, %173, %646
  %650 = phi %"class.blink::EncodedFormData"* [ %647, %646 ], [ %1, %173 ], [ %1, %188 ]
  %651 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %650, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %651) #4
  %652 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %650, i64 0, i32 0, i32 0, i32 0, i32 0
  %653 = load i32, i32* %652, align 4
  %654 = icmp eq i32 %653, 0
  br i1 %654, label %655, label %657

655:                                              ; preds = %649
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %650) #4
  %656 = bitcast %"class.blink::EncodedFormData"* %650 to i8*
  call void @free(i8* %656) #4
  br label %657

657:                                              ; preds = %646, %649, %655
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14XMLHttpRequest27HasContentTypeRequestHeaderEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  %4 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %2, i64 0, i32 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.23"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %3) #4
  %6 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %5, 0
  %7 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  %13 = icmp ne %"struct.WTF::KeyValuePair"* %6, %12
  ret i1 %13
}

declare %"class.WTF::StringImpl"* @_ZN5blink10FetchUtils20NormalizeHeaderValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink17ParsedContentTypeC1ERKN3WTF6StringENS_34ParsedContentHeaderFieldParameters4ModeE(%"class.blink::ParsedContentType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ParsedContentTypeD2Ev(%"class.blink::ParsedContentType"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ParsedContentType", %"class.blink::ParsedContentType"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !6
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %62, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ParsedContentType", %"class.blink::ParsedContentType"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.blink::ParsedContentHeaderFieldParameters", %"class.blink::ParsedContentHeaderFieldParameters"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"*, %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"** %7, align 8
  %9 = icmp eq %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %8, null
  br i1 %9, label %61, label %10, !prof !10

10:                                               ; preds = %5
  %11 = bitcast %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::ParsedContentType", %"class.blink::ParsedContentType"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %59, label %15, !prof !2

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %8, i64 %16
  br label %18

18:                                               ; preds = %53, %15
  %19 = phi %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* [ %54, %53 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #4
  br label %36

36:                                               ; preds = %35, %32, %18
  %37 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %19, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #4
  br label %53

53:                                               ; preds = %52, %49, %36
  %54 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %19, i64 1
  %55 = icmp eq %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %54, %17
  br i1 %55, label %56, label %18

56:                                               ; preds = %53
  store i32 0, i32* %12, align 4
  %57 = bitcast %"class.blink::ParsedContentHeaderFieldParameters"* %6 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %10
  %60 = phi i8* [ %58, %56 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #4
  store %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* null, %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"** %7, align 8
  br label %61

61:                                               ; preds = %5, %59
  store i8 0, i8* %2, align 8
  br label %62

62:                                               ; preds = %1, %61
  %63 = getelementptr inbounds %"class.blink::ParsedContentType", %"class.blink::ParsedContentType"* %0, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #4
  br label %79

79:                                               ; preds = %62, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest24SetRequestHeaderInternalERKN3WTF12AtomicStringES4_(%"class.blink::XMLHttpRequest"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringAppend.2332", align 8
  %5 = alloca %"class.WTF::StringAppend.2333", align 8
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9, i32 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.23"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #4
  %8 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %7, 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %227

11:                                               ; preds = %3
  %12 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %7, 0
  %13 = bitcast %"class.WTF::StringAppend.2332"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #4
  %14 = bitcast %"class.WTF::StringAppend.2333"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #4
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %12, i64 0, i32 1
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %63, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %36

26:                                               ; preds = %19
  %27 = zext i32 %25 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #4
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %26
  tail call void @llvm.trap() #4
  unreachable

34:                                               ; preds = %26
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %24, align 4
  br label %36

36:                                               ; preds = %19, %34
  %37 = phi i32 [ %35, %34 ], [ %25, %19 ]
  %38 = load atomic i32, i32* %20 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  br i1 %40, label %42, label %52

42:                                               ; preds = %36
  %43 = zext i32 %37 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #4
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %42
  tail call void @llvm.trap() #4
  unreachable

50:                                               ; preds = %42
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %36
  %53 = phi i32 [ %51, %50 ], [ %37, %36 ]
  %54 = load atomic i32, i32* %20 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  %58 = add i32 %53, -1
  store i32 %58, i32* %41, align 4
  br label %59

59:                                               ; preds = %57, %52
  %60 = phi i32 [ %58, %57 ], [ %53, %52 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #4
  br label %63

63:                                               ; preds = %11, %59, %62
  %64 = getelementptr inbounds %"class.WTF::StringAppend.2333", %"class.WTF::StringAppend.2333"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringAppend.2333", %"class.WTF::StringAppend.2333"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %86, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #4
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !2

83:                                               ; preds = %74
  tail call void @llvm.trap() #4
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  br label %86

86:                                               ; preds = %63, %69, %84
  call void @_ZN3WTFplINS_12AtomicStringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2332"* nonnull sret %4, %"class.WTF::StringAppend.2333"* nonnull dereferenceable(16) %5, %"class.WTF::StringImpl"* %67)
  %87 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EcvNS_6StringEEv(%"class.WTF::StringAppend.2332"* nonnull %4) #4
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %125, label %89

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 acquire, align 4
  %92 = and i32 %91, 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %110, label %94

94:                                               ; preds = %89
  %95 = load atomic i32, i32* %90 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %112

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = zext i32 %100 to i33
  %102 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %101, i33 1) #4
  %103 = extractvalue { i33, i1 } %102, 1
  %104 = extractvalue { i33, i1 } %102, 0
  %105 = icmp slt i33 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %108, !prof !2

107:                                              ; preds = %98
  call void @llvm.trap() #4
  unreachable

108:                                              ; preds = %98
  %109 = trunc i33 %104 to i32
  store i32 %109, i32* %99, align 4
  br label %112

110:                                              ; preds = %89
  %111 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %87) #4
  br label %112

112:                                              ; preds = %110, %108, %94
  %113 = phi %"class.WTF::StringImpl"* [ %87, %108 ], [ %87, %94 ], [ %111, %110 ]
  %114 = load atomic i32, i32* %90 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #4
  br label %125

125:                                              ; preds = %86, %121, %124
  %126 = phi %"class.WTF::StringImpl"* [ %113, %121 ], [ %113, %124 ], [ null, %86 ]
  %127 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #4
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #4
  br label %160

160:                                              ; preds = %143, %156, %159
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #4
  br label %176

176:                                              ; preds = %160, %172, %175
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #4
  %177 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %177, label %195, label %178

178:                                              ; preds = %176
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %195

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = zext i32 %185 to i33
  %187 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %186, i33 1) #4
  %188 = extractvalue { i33, i1 } %187, 1
  %189 = extractvalue { i33, i1 } %187, 0
  %190 = icmp slt i33 %189, 0
  %191 = or i1 %188, %190
  br i1 %191, label %192, label %193, !prof !2

192:                                              ; preds = %183
  call void @llvm.trap() #4
  unreachable

193:                                              ; preds = %183
  %194 = trunc i33 %189 to i32
  store i32 %194, i32* %184, align 4
  br label %195

195:                                              ; preds = %193, %178, %176
  %196 = ptrtoint %"class.WTF::StringImpl"* %126 to i64
  %197 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  store i64 %196, i64* %197, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #4
  br label %213

213:                                              ; preds = %195, %209, %212
  br i1 %177, label %227, label %214

214:                                              ; preds = %213
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #4
  br label %227

227:                                              ; preds = %226, %223, %213, %3
  ret void
}

declare %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEv() local_unnamed_addr #2

declare void @_ZN5blink15EncodedFormData10AppendFileERKN3WTF6StringERKN4absl8optionalIN4base4TimeEEE(%"class.blink::EncodedFormData"*, %"class.WTF::String"* dereferenceable(8), %"class.absl::optional.74"* dereferenceable(16)) local_unnamed_addr #2

declare i64 @_ZNK5blink4File16LastModifiedTimeEv(%"class.blink::File"*) local_unnamed_addr #2

declare void @_ZN5blink15EncodedFormData10AppendBlobERKN3WTF6StringE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::EncodedFormData"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::BlobDataHandle"*) local_unnamed_addr #2

declare %"class.blink::EncodedFormData"* @_ZN5blink8FormData23EncodeMultiPartFormDataEv(%"class.blink::FormData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendINS_12AtomicStringET_EERKS3_S4_(%"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend.2313", align 8
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #4
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #4
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #4
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %31
  tail call void @llvm.trap() #4
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_12AtomicStringENS_6StringEEC2ES1_S2_(%"class.WTF::StringAppend.2313"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_12AtomicStringENS_6StringEEC2ES1_S2_(%"class.WTF::StringAppend.2313"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #4
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.2313", %"class.WTF::StringAppend.2313"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.2313", %"class.WTF::StringAppend.2313"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

declare %"class.blink::EncodedFormData"* @_ZNK5blink15URLSearchParams17ToEncodedFormDataEv(%"class.blink::URLSearchParams"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest13SendBytesDataEPKvmRNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, i8*, i64, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = tail call zeroext i1 @_ZN5blink14XMLHttpRequest8InitSendERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %5, label %6, label %26

6:                                                ; preds = %4
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names4kGETE, align 8
  %8 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %9, %11
  br i1 %12, label %24, label %13

13:                                               ; preds = %6
  %14 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kHEADE, align 8
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %9, %16
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 6
  %20 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %19) #4
  br i1 %20, label %21, label %24

21:                                               ; preds = %18
  %22 = trunc i64 %2 to i32
  %23 = tail call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8* %1, i32 %22) #4
  br label %24

24:                                               ; preds = %6, %13, %18, %21
  %25 = phi %"class.blink::EncodedFormData"* [ %23, %21 ], [ null, %18 ], [ null, %13 ], [ null, %6 ]
  tail call void @_ZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::EncodedFormData"* %25, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %26

26:                                               ; preds = %4, %24
  ret void
}

declare %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest25SendForInspectorXHRReplayE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::EncodedFormData"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq %"class.blink::EncodedFormData"* %1, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = tail call %"class.blink::EncodedFormData"* @_ZNK5blink15EncodedFormData8DeepCopyEv(%"class.blink::EncodedFormData"* nonnull %1) #4
  br label %8

8:                                                ; preds = %3, %6
  %9 = phi %"class.blink::EncodedFormData"* [ %7, %6 ], [ null, %3 ]
  tail call void @_ZN5blink14XMLHttpRequest13CreateRequestE13scoped_refptrINS_15EncodedFormDataEERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* %0, %"class.blink::EncodedFormData"* %9, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %10 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %8
  %14 = add i32 %11, -1
  %15 = icmp ult i32 %14, 41
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 947, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.33, i64 0, i64 0)) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  %19 = load i32, i32* %10, align 8
  br label %20

20:                                               ; preds = %13, %16
  %21 = phi i32 [ %11, %13 ], [ %19, %16 ]
  %22 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 29
  store i32 %21, i32* %22, align 8
  br label %23

23:                                               ; preds = %8, %20
  br i1 %5, label %31, label %24

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %1, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #4
  %26 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %1) #4
  %30 = bitcast %"class.blink::EncodedFormData"* %1 to i8*
  call void @free(i8* %30) #4
  br label %31

31:                                               ; preds = %23, %24, %29
  ret void
}

declare %"class.blink::EncodedFormData"* @_ZNK5blink15EncodedFormData8DeepCopyEv(%"class.blink::EncodedFormData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !6
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #4
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #4
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #4
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #4
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #4
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL12ElidedStringEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN5blink5probe18AsyncTaskScheduledEPNS_16ExecutionContextERKN3WTF10StringViewEPNS0_11AsyncTaskIdE(%"class.blink::ExecutionContext"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::probe::AsyncTaskId"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest21DispatchProgressEventERKN3WTF12AtomicStringEll(%"class.blink::XMLHttpRequest"*, %"class.WTF::AtomicString"* dereferenceable(8), i64, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::probe::AsyncTask", align 8
  %6 = icmp sgt i64 %3, 0
  %7 = icmp sle i64 %2, %3
  %8 = and i1 %6, %7
  %9 = icmp sgt i64 %2, 0
  %10 = select i1 %9, i64 %2, i64 0
  %11 = select i1 %8, i64 %3, i64 0
  %12 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %13 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %12 to %"class.blink::ExecutionContextLifecycleObserver"*
  %14 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %13) #4
  %15 = bitcast %"class.blink::probe::AsyncTask"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  %16 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 47
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kLoadendE, align 8
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %19, %21
  %23 = select i1 %22, i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i64 0, i64 0)
  %24 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  %25 = load i8, i8* %24, align 4, !range !6
  %26 = icmp ne i8 %25, 0
  call void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"* nonnull %5, %"class.blink::ExecutionContext"* %14, %"class.blink::probe::AsyncTaskId"* %16, i8* %23, i1 zeroext %26, i32 1) #4
  %27 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 30, i32 0, i32 0
  %28 = load %"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::XMLHttpRequestProgressEventThrottle"** %27, align 8
  call void @_ZN5blink35XMLHttpRequestProgressEventThrottle21DispatchProgressEventERKN3WTF12AtomicStringEbmm(%"class.blink::XMLHttpRequestProgressEventThrottle"* %28, %"class.WTF::AtomicString"* dereferenceable(8) %1, i1 zeroext %8, i64 %10, i64 %11) #4
  call void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #4
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #2

declare i64 @_ZNK5blink15EncodedFormData11SizeInBytesEv(%"class.blink::EncodedFormData"*) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14SecurityOrigin10CanRequestERKNS_4KURLE(%"class.blink::SecurityOrigin"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink4cors22IsCorsSafelistedMethodERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink4cors33ContainsOnlyCorsSafelistedHeadersERKNS_13HTTPHeaderMapE(%"class.blink::HTTPHeaderMap"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare void @_ZN5blink19ResourceRequestHead13SetHttpMethodERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink19ResourceRequestHead48SetExternalRequestStateFromRequestorAddressSpaceEN7network5mojom14IPAddressSpaceE(%"class.blink::ResourceRequestHead"*, i32) local_unnamed_addr #2

declare i32 @_ZNK5blink16ExecutionContext12AddressSpaceEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"*, %"class.blink::EncodedFormData"*) local_unnamed_addr #2

declare void @_ZN5blink19ResourceRequestHead19AddHTTPHeaderFieldsERKNS_13HTTPHeaderMapE(%"class.blink::ResourceRequestHead"*, %"class.blink::HTTPHeaderMap"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Frame24IsCrossOriginToMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink18PageDismissalScope8IsActiveEv() local_unnamed_addr #2

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase34AllowSyncXHRInPageDismissalEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

declare void @_ZN5blink16ThreadableLoader5StartENS_15ResourceRequestE(%"class.blink::ThreadableLoader"*, %"class.blink::ResourceRequest"*) local_unnamed_addr #2

declare void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #3

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest5abortEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0)
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  %3 = load i8, i8* %2, align 4, !range !6
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 45
  %11 = load i8, i8* %10, align 4, !range !6
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %16

13:                                               ; preds = %5
  %14 = and i32 %7, -2
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %18

16:                                               ; preds = %13, %9
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kAbortE, align 8
  tail call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %0, i32 0, %"class.WTF::AtomicString"* dereferenceable(8) %17)
  br label %18

18:                                               ; preds = %9, %13, %1, %16
  %19 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 4
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  store i32 0, i32* %19, align 8
  br label %23

23:                                               ; preds = %22, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"*, i32, %"class.WTF::AtomicString"* dereferenceable(8)) #0 align 2 {
  %4 = alloca %"class.blink::probe::AsyncTask", align 8
  %5 = alloca %"class.blink::probe::AsyncTask", align 8
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %7 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %6 to %"class.blink::ExecutionContextLifecycleObserver"*
  %8 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %7) #4
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %10 = and i32 %9, 16384
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %3
  tail call void @_ZN5blink5probe16DidFinishXHRImplEPNS_16ExecutionContextEPNS_14XMLHttpRequestE(%"class.blink::ExecutionContext"* %8, %"class.blink::XMLHttpRequest"* %0) #4
  br label %13

13:                                               ; preds = %3, %12
  %14 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 45
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 37
  %16 = load i8, i8* %15, align 4, !range !6
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  br i1 %17, label %19, label %21

19:                                               ; preds = %13
  store i32 4, i32* %18, align 8
  %20 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 29
  store i32 %1, i32* %20, align 8
  br label %58

21:                                               ; preds = %13
  %22 = load i32, i32* %18, align 8
  %23 = icmp eq i32 %22, 4
  br i1 %23, label %25, label %24

24:                                               ; preds = %21
  store i32 4, i32* %18, align 8
  tail call void @_ZN5blink14XMLHttpRequest29DispatchReadyStateChangeEventEv(%"class.blink::XMLHttpRequest"* %0) #4
  br label %25

25:                                               ; preds = %21, %24
  %26 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 42
  %27 = load i8, i8* %26, align 1, !range !6
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %38

29:                                               ; preds = %25
  store i8 1, i8* %26, align 1
  %30 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 5, i32 0, i32 0
  %31 = load %"class.blink::XMLHttpRequestUpload"*, %"class.blink::XMLHttpRequestUpload"** %30, align 8
  %32 = icmp eq %"class.blink::XMLHttpRequestUpload"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 41
  %35 = load i8, i8* %34, align 8, !range !6
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @_ZN5blink20XMLHttpRequestUpload18HandleRequestErrorERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequestUpload"* nonnull %31, %"class.WTF::AtomicString"* dereferenceable(8) %2) #4
  br label %38

38:                                               ; preds = %29, %33, %25, %37
  %39 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %7) #4
  %40 = bitcast %"class.blink::probe::AsyncTask"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 40, i1 false) #4
  %41 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 47
  %42 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kLoadendE, align 8
  %43 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %42, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %44, %46
  %48 = select i1 %47, i8* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i64 0, i64 0)
  %49 = load i8, i8* %15, align 4, !range !6
  %50 = icmp ne i8 %49, 0
  call void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"* nonnull %4, %"class.blink::ExecutionContext"* %39, %"class.blink::probe::AsyncTaskId"* %41, i8* %48, i1 zeroext %50, i32 1) #4
  %51 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 30, i32 0, i32 0
  %52 = load %"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::XMLHttpRequestProgressEventThrottle"** %51, align 8
  call void @_ZN5blink35XMLHttpRequestProgressEventThrottle21DispatchProgressEventERKN3WTF12AtomicStringEbmm(%"class.blink::XMLHttpRequestProgressEventThrottle"* %52, %"class.WTF::AtomicString"* dereferenceable(8) %2, i1 zeroext false, i64 0, i64 0) #4
  call void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #4
  %53 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %7) #4
  %54 = bitcast %"class.blink::probe::AsyncTask"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %54) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 40, i1 false) #4
  %55 = load i8, i8* %15, align 4, !range !6
  %56 = icmp ne i8 %55, 0
  call void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"* nonnull %5, %"class.blink::ExecutionContext"* %53, %"class.blink::probe::AsyncTaskId"* %41, i8* null, i1 zeroext %56, i32 1) #4
  %57 = load %"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::XMLHttpRequestProgressEventThrottle"** %51, align 8
  call void @_ZN5blink35XMLHttpRequestProgressEventThrottle21DispatchProgressEventERKN3WTF12AtomicStringEbmm(%"class.blink::XMLHttpRequestProgressEventThrottle"* %57, %"class.WTF::AtomicString"* dereferenceable(8) %42, i1 zeroext false, i64 0, i64 0) #4
  call void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %54) #4
  br label %58

58:                                               ; preds = %38, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest7DisposeEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 30, i32 0, i32 0
  %4 = load %"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::XMLHttpRequestProgressEventThrottle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::XMLHttpRequestProgressEventThrottle", %"class.blink::XMLHttpRequestProgressEventThrottle"* %4, i64 0, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %5) #4
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0)
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 16, i32 0, i32 0
  %7 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %6, align 8
  %8 = icmp eq %"class.blink::ThreadableLoader"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 1187, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0)) #4
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4
  br label %12

12:                                               ; preds = %1, %9
  ret void
}

declare void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest24ClearVariablesForLoadingEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 35
  %3 = getelementptr inbounds %"class.blink::Member.362", %"class.blink::Member.362"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::XMLHttpRequest::BlobLoader"*, %"class.blink::XMLHttpRequest::BlobLoader"** %3, align 8
  %5 = icmp eq %"class.blink::XMLHttpRequest::BlobLoader"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::XMLHttpRequest::BlobLoader", %"class.blink::XMLHttpRequest::BlobLoader"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %7, align 8
  tail call void @_ZN5blink16FileReaderLoader6CancelEv(%"class.blink::FileReaderLoader"* %8) #4
  %9 = bitcast %"class.blink::Member.362"* %2 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %12 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %11, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %11, align 8
  %13 = icmp eq %"class.blink::TextResourceDecoder"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %12) #4
  %15 = bitcast %"class.blink::TextResourceDecoder"* %12 to i8*
  tail call void @free(i8* %15) #4
  br label %16

16:                                               ; preds = %10, %14
  %17 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 22
  %18 = getelementptr inbounds %"class.blink::Member.131", %"class.blink::Member.131"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %18, align 8
  %20 = icmp eq %"class.blink::DocumentParser"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 2
  tail call void @_ZN5blink14DocumentParser12RemoveClientEPNS_20DocumentParserClientE(%"class.blink::DocumentParser"* nonnull %19, %"class.blink::DocumentParserClient"* %22) #4
  %23 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %18, align 8
  %24 = bitcast %"class.blink::DocumentParser"* %23 to void (%"class.blink::DocumentParser"*)***
  %25 = load void (%"class.blink::DocumentParser"*)**, void (%"class.blink::DocumentParser"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %25, i64 16
  %27 = load void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %26, align 8
  tail call void %27(%"class.blink::DocumentParser"* %23) #4
  %28 = bitcast %"class.blink::Member.131"* %17 to i64*
  store atomic i64 0, i64* %28 monotonic, align 8
  br label %29

29:                                               ; preds = %16, %21
  ret void
}

declare void @_ZN5blink14DocumentParser12RemoveClientEPNS_20DocumentParserClientE(%"class.blink::DocumentParser"*, %"class.blink::DocumentParserClient"*) local_unnamed_addr #2

declare void @_ZN5blink10TaskHandle6CancelEv(%"class.blink::TaskHandle"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest13ClearResponseEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::ResourceResponse", align 8
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 28
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.blink::ResourceResponse", %"class.blink::ResourceResponse"* %2, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1072, i8* nonnull %4) #4
  call void @_ZN5blink16ResourceResponseC1Ev(%"class.blink::ResourceResponse"* nonnull %2) #4
  %5 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  %6 = call dereferenceable(1072) %"class.blink::ResourceResponse"* @_ZN5blink16ResourceResponseaSERKS0_(%"class.blink::ResourceResponse"* %5, %"class.blink::ResourceResponse"* nonnull dereferenceable(1072) %2) #4
  call void @_ZN5blink16ResourceResponseD1Ev(%"class.blink::ResourceResponse"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 1072, i8* nonnull %4) #4
  %7 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 20
  %8 = bitcast %"class.blink::TraceWrapperV8String"* %7 to i8*
  %9 = call i8* @llvm.ptr.annotation.p0i8(i8* %8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 320)
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i64**
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %12) #4
  %15 = bitcast i8* %10 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 39
  store i8 0, i8* %17, align 2
  %18 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 21
  %19 = bitcast %"class.blink::Member.129"* %18 to i64*
  store atomic i64 0, i64* %19 monotonic, align 8
  %20 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 14
  %21 = bitcast %"class.blink::Member.45"* %20 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 25
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 43
  store i8 0, i8* %23, align 2
  %24 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 23
  %25 = bitcast %class.scoped_refptr.142* %24 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr.142, %class.scoped_refptr.142* %24, i64 0, i32 0
  %27 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %26, align 8
  store i64 0, i64* %25, align 8
  %28 = icmp eq %"class.WTF::SharedBuffer"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %16
  %30 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %27, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #4
  %31 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %27) #4
  %35 = bitcast %"class.WTF::SharedBuffer"* %27 to i8*
  call void @free(i8* %35) #4
  br label %36

36:                                               ; preds = %16, %29, %34
  %37 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 27, i32 0
  %38 = bitcast %"class.blink::MemberBase.150"* %37 to i64*
  store atomic i64 0, i64* %38 monotonic, align 8
  %39 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 46
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 23, i32 0
  %41 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %40, align 8
  %42 = icmp eq %"class.WTF::SharedBuffer"* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %41, i64 0, i32 1
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %43, %36
  %47 = phi i64 [ %45, %43 ], [ 0, %36 ]
  %48 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 24
  %49 = load i64, i64* %48, align 8
  %50 = sub nsw i64 %47, %49
  store i64 %47, i64* %48, align 8
  %51 = load i64, i64* %22, align 8
  %52 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 26
  %53 = load i64, i64* %52, align 8
  %54 = sub nsw i64 %51, %53
  %55 = add nsw i64 %54, %50
  store i64 %51, i64* %52, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %46
  %58 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 32
  %59 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %58, align 8
  %60 = call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %59, i64 %55) #4
  br label %61

61:                                               ; preds = %46, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest12ClearRequestEv(%"class.blink::XMLHttpRequest"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %4, i32 %8) #4
  %9 = bitcast %"class.blink::HTTPHeaderMap"* %2 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  store i32 0, i32* %7, align 8
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

declare void @_ZN5blink16ThreadableLoader6CancelEv(%"class.blink::ThreadableLoader"*) local_unnamed_addr #2

declare dereferenceable(1072) %"class.blink::ResourceResponse"* @_ZN5blink16ResourceResponseaSERKS0_(%"class.blink::ResourceResponse"*, %"class.blink::ResourceResponse"* dereferenceable(1072)) local_unnamed_addr #2

declare void @_ZN5blink5probe9AsyncTaskC1EPNS_16ExecutionContextEPNS0_11AsyncTaskIdEPKcbNS1_14AdTrackingTypeE(%"class.blink::probe::AsyncTask"*, %"class.blink::ExecutionContext"*, %"class.blink::probe::AsyncTaskId"*, i8*, i1 zeroext, i32) unnamed_addr #2

declare void @_ZN5blink35XMLHttpRequestProgressEventThrottle21DispatchProgressEventERKN3WTF12AtomicStringEbmm(%"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5probe9AsyncTaskD1Ev(%"class.blink::probe::AsyncTask"*) unnamed_addr #3

declare i64 @_ZNK5blink16ResourceResponse21ExpectedContentLengthEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest15HandleDidCancelEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::TaskHandle", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to { i64, i64 }*
  %7 = alloca %"class.blink::Persistent.2328", align 8
  %8 = alloca i32, align 4
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0)
  %9 = bitcast %"class.blink::TaskHandle"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %11 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %10 to %"class.blink::ExecutionContextLifecycleObserver"*
  %12 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %11) #4
  %13 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %12, i64 0, i32 1
  %14 = bitcast %"class.blink::MojoBindingContext"* %13 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %15 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %14, align 8
  %16 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %15, i64 6
  %17 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %16, align 8
  %18 = tail call %"class.base::SingleThreadTaskRunner"* %17(%"class.blink::MojoBindingContext"* %13, i8 zeroext 3) #4
  %19 = bitcast %"class.base::SingleThreadTaskRunner"* %18 to %"class.base::SequencedTaskRunner"*
  %20 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #4
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 1304) #4
  %21 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #4
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::XMLHttpRequest"*, i32, %"class.WTF::AtomicString"*)* @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE to i64), i64 0>, <2 x i64>* %5, align 16
  %22 = bitcast %"class.blink::Persistent.2328"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #4
  %23 = getelementptr inbounds %"class.blink::Persistent.2328", %"class.blink::Persistent.2328"* %7, i64 0, i32 0
  %24 = getelementptr inbounds %"class.blink::Persistent.2328", %"class.blink::Persistent.2328"* %7, i64 0, i32 0, i32 0
  store %"class.blink::XMLHttpRequest"* %0, %"class.blink::XMLHttpRequest"** %24, align 8, !alias.scope !26
  %25 = getelementptr inbounds %"class.blink::Persistent.2328", %"class.blink::Persistent.2328"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8, !alias.scope !26
  %26 = ptrtoint %"class.blink::XMLHttpRequest"* %0 to i64
  switch i64 %26, label %27 [
    i64 0, label %53
    i64 -1, label %53
  ]

27:                                               ; preds = %1
  %28 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !26
  %29 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %28, i64 0, i32 1
  %30 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %29) #4, !noalias !26
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %34, !prof !2

32:                                               ; preds = %27
  %33 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %29, i8* %33) #4
  br label %34

34:                                               ; preds = %32, %27
  %35 = phi i8* [ %33, %32 ], [ %30, %27 ]
  %36 = bitcast i8* %35 to %"class.blink::ThreadState"**
  %37 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %36, align 8, !noalias !26
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %38, align 8, !noalias !26
  %40 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %40, align 8, !noalias !26
  %42 = icmp eq %"class.blink::PersistentNode"* %41, null
  br i1 %42, label %43, label %46, !prof !2

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %39, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %44) #4
  %45 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %40, align 8
  br label %46

46:                                               ; preds = %43, %34
  %47 = phi %"class.blink::PersistentNode"* [ %45, %43 ], [ %41, %34 ]
  %48 = bitcast %"class.blink::PersistentNode"* %47 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !26
  %50 = bitcast %"class.blink::PersistentRegion"* %39 to i64*
  store i64 %49, i64* %50, align 8, !noalias !26
  %51 = bitcast %"class.blink::PersistentNode"* %47 to %"class.blink::PersistentBase.2329"**
  store %"class.blink::PersistentBase.2329"* %23, %"class.blink::PersistentBase.2329"** %51, align 8, !noalias !26
  %52 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %47, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14XMLHttpRequestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %52, align 8
  store %"class.blink::PersistentNode"* %47, %"class.blink::PersistentNode"** %25, align 8, !alias.scope !26
  br label %53

53:                                               ; preds = %1, %1, %46
  %54 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #4
  store i32 20, i32* %8, align 4
  %55 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kAbortE, align 8
  %56 = call i8* @_Znwm(i64 80) #16, !noalias !29
  %57 = bitcast i8* %56 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink14XMLHttpRequestEFvNS2_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS2_10PersistentIS3_EES4_S6_EEC2ISA_JSC_S4_S8_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %57, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14XMLHttpRequestEFvNS3_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS3_10PersistentIS4_EES5_S7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %6, %"class.blink::Persistent.2328"* nonnull dereferenceable(16) %7, i32* nonnull dereferenceable(4) %8, %"class.WTF::AtomicString"* dereferenceable(8) %55) #4, !noalias !29
  %58 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %56, i8** %58, align 8, !alias.scope !29
  call void @_ZN5blink19PostCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEE(%"class.blink::TaskHandle"* nonnull sret %2, %"class.base::SequencedTaskRunner"* dereferenceable(16) %19, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #4
  %59 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 15
  %60 = call dereferenceable(8) %"class.blink::TaskHandle"* @_ZN5blink10TaskHandleaSEOS0_(%"class.blink::TaskHandle"* %59, %"class.blink::TaskHandle"* nonnull dereferenceable(8) %2) #4
  call void @_ZN5blink10TaskHandleD1Ev(%"class.blink::TaskHandle"* nonnull %2) #4
  %61 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #4
  %62 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %63 = icmp eq %"class.blink::PersistentNode"* %62, null
  br i1 %63, label %83, label %64

64:                                               ; preds = %53
  %65 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %66 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %65, i64 0, i32 1
  %67 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %66) #4
  %68 = icmp eq i8* %67, null
  br i1 %68, label %69, label %71, !prof !2

69:                                               ; preds = %64
  %70 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %66, i8* %70) #4
  br label %71

71:                                               ; preds = %69, %64
  %72 = phi i8* [ %70, %69 ], [ %67, %64 ]
  %73 = bitcast i8* %72 to %"class.blink::ThreadState"**
  %74 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %75, align 8
  %77 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %78 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %76, i64 0, i32 0, i32 0
  %79 = bitcast %"class.blink::PersistentRegion"* %76 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.blink::PersistentNode"* %77 to i64*
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %77, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %82, align 8
  store %"class.blink::PersistentNode"* %77, %"class.blink::PersistentNode"** %78, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %83

83:                                               ; preds = %53, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #4
  %84 = icmp eq %"class.base::SingleThreadTaskRunner"* %18, null
  br i1 %84, label %93, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %18, i64 0, i32 0, i32 0, i32 1
  %87 = getelementptr inbounds %"class.base::RefCountedThreadSafe.157", %"class.base::RefCountedThreadSafe.157"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw sub i32* %87, i32 1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %93

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.base::RefCountedThreadSafe.157", %"class.base::RefCountedThreadSafe.157"* %86, i64 -2
  %92 = bitcast %"class.base::RefCountedThreadSafe.157"* %91 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %92) #4
  br label %93

93:                                               ; preds = %83, %85, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  ret void
}

declare void @_ZN5blink19PostCancellableTaskERN4base19SequencedTaskRunnerERKNS0_8LocationENS0_12OnceCallbackIFvvEEE(%"class.blink::TaskHandle"* sret, %"class.base::SequencedTaskRunner"* dereferenceable(16), %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare dereferenceable(8) %"class.blink::TaskHandle"* @_ZN5blink10TaskHandleaSEOS0_(%"class.blink::TaskHandle"*, %"class.blink::TaskHandle"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZN5blink20XMLHttpRequestUpload18HandleRequestErrorERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequestUpload"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest16overrideMimeTypeERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"* nocapture, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.blink::ParsedContentType", align 8
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -3
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.47, i64 0, i64 0)) #4
  br label %94

11:                                               ; preds = %3
  %12 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #4
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.48, i64 0, i64 0), i64 24) #4
  %13 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 12
  %14 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  %16 = load i64, i64* %15, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  %17 = bitcast %"class.WTF::AtomicString"* %13 to i64*
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %13, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  store i64 %16, i64* %17, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #4
  br label %34

34:                                               ; preds = %11, %30, %33
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #4
  br label %50

50:                                               ; preds = %34, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #4
  %51 = bitcast %"class.blink::ParsedContentType"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #4
  %52 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  call void @_ZN5blink17ParsedContentTypeC1ERKN3WTF6StringENS_34ParsedContentHeaderFieldParameters4ModeE(%"class.blink::ParsedContentType"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %52, i32 0) #4
  %53 = getelementptr inbounds %"class.blink::ParsedContentType", %"class.blink::ParsedContentType"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %54 = load i8, i8* %53, align 8, !range !6
  %55 = icmp eq i8 %54, 0
  call void @_ZN5blink17ParsedContentTypeD2Ev(%"class.blink::ParsedContentType"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #4
  br i1 %55, label %94, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i33
  %69 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #4
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %65
  call void @llvm.trap() #4
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4
  br label %77

77:                                               ; preds = %75, %60, %56
  %78 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  store i64 %78, i64* %17, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #4
  br label %94

94:                                               ; preds = %50, %93, %90, %77, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest16setRequestHeaderERKN3WTF12AtomicStringES4_RNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend.2330", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend.2330", align 8
  %12 = alloca %"class.WTF::AtomicString", align 8
  %13 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %20

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 45
  %18 = load i8, i8* %17, align 4, !range !6
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %16, %4
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i64 0, i64 0)) #4
  br label %561

21:                                               ; preds = %16
  %22 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #4
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink10FetchUtils20NormalizeHeaderValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %24) #4
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %23, align 8
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %27 = tail call zeroext i1 @_ZN5blink16IsValidHTTPTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %26) #4
  br i1 %27, label %178, label %28

28:                                               ; preds = %21
  %29 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #4
  %30 = bitcast %"class.WTF::StringAppend.2330"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #4
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %109, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %51

41:                                               ; preds = %34
  %42 = zext i32 %40 to i33
  %43 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #4
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !2

48:                                               ; preds = %41
  tail call void @llvm.trap() #4
  unreachable

49:                                               ; preds = %41
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %39, align 4
  br label %51

51:                                               ; preds = %49, %34
  %52 = phi i32 [ %50, %49 ], [ %40, %34 ]
  %53 = load atomic i32, i32* %35 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %66

56:                                               ; preds = %51
  %57 = zext i32 %52 to i33
  %58 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #4
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !2

63:                                               ; preds = %56
  tail call void @llvm.trap() #4
  unreachable

64:                                               ; preds = %56
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %39, align 4
  br label %66

66:                                               ; preds = %64, %51
  %67 = phi i32 [ %65, %64 ], [ %52, %51 ]
  %68 = load atomic i32, i32* %35 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  %72 = add i32 %67, -1
  store i32 %72, i32* %39, align 4
  br label %73

73:                                               ; preds = %71, %66
  %74 = phi i32 [ %72, %71 ], [ %67, %66 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #4
  br label %77

77:                                               ; preds = %73, %76
  %78 = load atomic i32, i32* %35 monotonic, align 4, !noalias !36
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = load i32, i32* %39, align 4
  br i1 %80, label %82, label %92

82:                                               ; preds = %77
  %83 = zext i32 %81 to i33
  %84 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #4
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %82
  tail call void @llvm.trap() #4, !noalias !36
  unreachable

90:                                               ; preds = %82
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %39, align 4, !noalias !36
  br label %92

92:                                               ; preds = %77, %90
  %93 = phi i32 [ %91, %90 ], [ %81, %77 ]
  %94 = bitcast %"class.WTF::StringAppend.2330"* %7 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.49 to i64), i64* %94, align 8, !alias.scope !36
  %95 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %95, align 8, !alias.scope !36
  %96 = load atomic i32, i32* %35 monotonic, align 4, !noalias !36
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %113

99:                                               ; preds = %92
  %100 = zext i32 %93 to i33
  %101 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %100, i33 1) #4
  %102 = extractvalue { i33, i1 } %101, 1
  %103 = extractvalue { i33, i1 } %101, 0
  %104 = icmp slt i33 %103, 0
  %105 = or i1 %102, %104
  br i1 %105, label %106, label %107, !prof !2

106:                                              ; preds = %99
  tail call void @llvm.trap() #4, !noalias !36
  unreachable

107:                                              ; preds = %99
  %108 = trunc i33 %103 to i32
  store i32 %108, i32* %39, align 4, !noalias !36
  br label %113

109:                                              ; preds = %28
  %110 = bitcast %"class.WTF::StringAppend.2330"* %7 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.49 to i64), i64* %110, align 8, !alias.scope !36
  %111 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8, !alias.scope !36
  %112 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.50, i64 0, i64 0), i8** %112, align 8, !alias.scope !36
  br label %125

113:                                              ; preds = %107, %92
  %114 = phi i32 [ %108, %107 ], [ %93, %92 ]
  %115 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.50, i64 0, i64 0), i8** %115, align 8, !alias.scope !36
  %116 = load atomic i32, i32* %35 monotonic, align 4, !noalias !36
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %113
  %120 = add i32 %114, -1
  store i32 %120, i32* %39, align 4, !noalias !36
  br label %121

121:                                              ; preds = %119, %113
  %122 = phi i32 [ %120, %119 ], [ %114, %113 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #4, !noalias !36
  br label %125

125:                                              ; preds = %109, %121, %124
  %126 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend.2330"* nonnull %7)
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %126, %"class.WTF::StringImpl"** %127, align 8
  %128 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %129 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %128, align 8
  %130 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %129, align 8
  call void %130(%"class.blink::ExceptionState"* %3, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %6) #4
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %146, label %133

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %142

140:                                              ; preds = %133
  %141 = add i32 %139, -1
  store i32 %141, i32* %138, align 4
  br label %142

142:                                              ; preds = %140, %133
  %143 = phi i32 [ %141, %140 ], [ %139, %133 ]
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

145:                                              ; preds = %142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #4
  br label %146

146:                                              ; preds = %125, %142, %145
  %147 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #4
  br label %163

163:                                              ; preds = %146, %159, %162
  br i1 %33, label %177, label %164

164:                                              ; preds = %163
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #4
  br label %177

177:                                              ; preds = %163, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #4
  br label %543

178:                                              ; preds = %21
  %179 = call zeroext i1 @_ZN5blink22IsValidHTTPHeaderValueERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  br i1 %179, label %329, label %180

180:                                              ; preds = %178
  %181 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #4
  %182 = bitcast %"class.WTF::StringAppend"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #4
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %260, label %185

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  br i1 %189, label %192, label %202

192:                                              ; preds = %185
  %193 = zext i32 %191 to i33
  %194 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %193, i33 1) #4
  %195 = extractvalue { i33, i1 } %194, 1
  %196 = extractvalue { i33, i1 } %194, 0
  %197 = icmp slt i33 %196, 0
  %198 = or i1 %195, %197
  br i1 %198, label %199, label %200, !prof !2

199:                                              ; preds = %192
  call void @llvm.trap() #4
  unreachable

200:                                              ; preds = %192
  %201 = trunc i33 %196 to i32
  store i32 %201, i32* %190, align 4
  br label %202

202:                                              ; preds = %200, %185
  %203 = phi i32 [ %201, %200 ], [ %191, %185 ]
  %204 = load atomic i32, i32* %186 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %217

207:                                              ; preds = %202
  %208 = zext i32 %203 to i33
  %209 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %208, i33 1) #4
  %210 = extractvalue { i33, i1 } %209, 1
  %211 = extractvalue { i33, i1 } %209, 0
  %212 = icmp slt i33 %211, 0
  %213 = or i1 %210, %212
  br i1 %213, label %214, label %215, !prof !2

214:                                              ; preds = %207
  call void @llvm.trap() #4
  unreachable

215:                                              ; preds = %207
  %216 = trunc i33 %211 to i32
  store i32 %216, i32* %190, align 4
  br label %217

217:                                              ; preds = %215, %202
  %218 = phi i32 [ %216, %215 ], [ %203, %202 ]
  %219 = load atomic i32, i32* %186 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %224

222:                                              ; preds = %217
  %223 = add i32 %218, -1
  store i32 %223, i32* %190, align 4
  br label %224

224:                                              ; preds = %222, %217
  %225 = phi i32 [ %223, %222 ], [ %218, %217 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %183) #4
  br label %228

228:                                              ; preds = %224, %227
  %229 = load atomic i32, i32* %186 monotonic, align 4, !noalias !39
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = load i32, i32* %190, align 4
  br i1 %231, label %233, label %243

233:                                              ; preds = %228
  %234 = zext i32 %232 to i33
  %235 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %234, i33 1) #4
  %236 = extractvalue { i33, i1 } %235, 1
  %237 = extractvalue { i33, i1 } %235, 0
  %238 = icmp slt i33 %237, 0
  %239 = or i1 %236, %238
  br i1 %239, label %240, label %241, !prof !2

240:                                              ; preds = %233
  call void @llvm.trap() #4, !noalias !39
  unreachable

241:                                              ; preds = %233
  %242 = trunc i33 %237 to i32
  store i32 %242, i32* %190, align 4, !noalias !39
  br label %243

243:                                              ; preds = %228, %241
  %244 = phi i32 [ %242, %241 ], [ %232, %228 ]
  %245 = bitcast %"class.WTF::StringAppend"* %9 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.49 to i64), i64* %245, align 8, !alias.scope !39
  %246 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %246, align 8, !alias.scope !39
  %247 = load atomic i32, i32* %186 monotonic, align 4, !noalias !39
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %264

250:                                              ; preds = %243
  %251 = zext i32 %244 to i33
  %252 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %251, i33 1) #4
  %253 = extractvalue { i33, i1 } %252, 1
  %254 = extractvalue { i33, i1 } %252, 0
  %255 = icmp slt i33 %254, 0
  %256 = or i1 %253, %255
  br i1 %256, label %257, label %258, !prof !2

257:                                              ; preds = %250
  call void @llvm.trap() #4, !noalias !39
  unreachable

258:                                              ; preds = %250
  %259 = trunc i33 %254 to i32
  store i32 %259, i32* %190, align 4, !noalias !39
  br label %264

260:                                              ; preds = %180
  %261 = bitcast %"class.WTF::StringAppend"* %9 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.49 to i64), i64* %261, align 8, !alias.scope !39
  %262 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %262, align 8, !alias.scope !39
  %263 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.51, i64 0, i64 0), i8** %263, align 8, !alias.scope !39
  br label %276

264:                                              ; preds = %258, %243
  %265 = phi i32 [ %259, %258 ], [ %244, %243 ]
  %266 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.51, i64 0, i64 0), i8** %266, align 8, !alias.scope !39
  %267 = load atomic i32, i32* %186 monotonic, align 4, !noalias !39
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %270, label %272

270:                                              ; preds = %264
  %271 = add i32 %265, -1
  store i32 %271, i32* %190, align 4, !noalias !39
  br label %272

272:                                              ; preds = %270, %264
  %273 = phi i32 [ %271, %270 ], [ %265, %264 ]
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %272
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %183) #4, !noalias !39
  br label %276

276:                                              ; preds = %260, %272, %275
  %277 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %9)
  %278 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %277, %"class.WTF::StringImpl"** %278, align 8
  %279 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %280 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %279, align 8
  %281 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %280, align 8
  call void %281(%"class.blink::ExceptionState"* %3, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %8) #4
  %282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %278, align 8
  %283 = icmp eq %"class.WTF::StringImpl"* %282, null
  br i1 %283, label %297, label %284

284:                                              ; preds = %276
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  br i1 %288, label %291, label %293

291:                                              ; preds = %284
  %292 = add i32 %290, -1
  store i32 %292, i32* %289, align 4
  br label %293

293:                                              ; preds = %291, %284
  %294 = phi i32 [ %292, %291 ], [ %290, %284 ]
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %293
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %282) #4
  br label %297

297:                                              ; preds = %276, %293, %296
  %298 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %298, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %299, null
  br i1 %300, label %314, label %301

301:                                              ; preds = %297
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load atomic i32, i32* %302 monotonic, align 4
  %304 = and i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  br i1 %305, label %308, label %310

308:                                              ; preds = %301
  %309 = add i32 %307, -1
  store i32 %309, i32* %306, align 4
  br label %310

310:                                              ; preds = %308, %301
  %311 = phi i32 [ %309, %308 ], [ %307, %301 ]
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %310
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %299) #4
  br label %314

314:                                              ; preds = %297, %310, %313
  br i1 %184, label %328, label %315

315:                                              ; preds = %314
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load atomic i32, i32* %316 monotonic, align 4
  %318 = and i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %321 = load i32, i32* %320, align 4
  br i1 %319, label %322, label %324

322:                                              ; preds = %315
  %323 = add i32 %321, -1
  store i32 %323, i32* %320, align 4
  br label %324

324:                                              ; preds = %322, %315
  %325 = phi i32 [ %323, %322 ], [ %321, %315 ]
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %328

327:                                              ; preds = %324
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %183) #4
  br label %328

328:                                              ; preds = %314, %324, %327
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #4
  br label %543

329:                                              ; preds = %178
  %330 = call zeroext i1 @_ZN5blink4cors21IsForbiddenHeaderNameERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %26) #4
  br i1 %330, label %331, label %496

331:                                              ; preds = %329
  %332 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %333 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %332 to %"class.blink::ExecutionContextLifecycleObserver"*
  %334 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %333) #4
  %335 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %335) #4
  %336 = bitcast %"class.WTF::StringAppend.2330"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %336) #4
  %337 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %337, align 8
  %339 = icmp eq %"class.WTF::StringImpl"* %338, null
  br i1 %339, label %415, label %340

340:                                              ; preds = %331
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load atomic i32, i32* %341 monotonic, align 4
  %343 = and i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 0
  %346 = load i32, i32* %345, align 4
  br i1 %344, label %347, label %357

347:                                              ; preds = %340
  %348 = zext i32 %346 to i33
  %349 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %348, i33 1) #4
  %350 = extractvalue { i33, i1 } %349, 1
  %351 = extractvalue { i33, i1 } %349, 0
  %352 = icmp slt i33 %351, 0
  %353 = or i1 %350, %352
  br i1 %353, label %354, label %355, !prof !2

354:                                              ; preds = %347
  call void @llvm.trap() #4
  unreachable

355:                                              ; preds = %347
  %356 = trunc i33 %351 to i32
  store i32 %356, i32* %345, align 4
  br label %357

357:                                              ; preds = %355, %340
  %358 = phi i32 [ %356, %355 ], [ %346, %340 ]
  %359 = load atomic i32, i32* %341 monotonic, align 4
  %360 = and i32 %359, 2
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %372

362:                                              ; preds = %357
  %363 = zext i32 %358 to i33
  %364 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %363, i33 1) #4
  %365 = extractvalue { i33, i1 } %364, 1
  %366 = extractvalue { i33, i1 } %364, 0
  %367 = icmp slt i33 %366, 0
  %368 = or i1 %365, %367
  br i1 %368, label %369, label %370, !prof !2

369:                                              ; preds = %362
  call void @llvm.trap() #4
  unreachable

370:                                              ; preds = %362
  %371 = trunc i33 %366 to i32
  store i32 %371, i32* %345, align 4
  br label %372

372:                                              ; preds = %370, %357
  %373 = phi i32 [ %371, %370 ], [ %358, %357 ]
  %374 = load atomic i32, i32* %341 monotonic, align 4
  %375 = and i32 %374, 2
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %379

377:                                              ; preds = %372
  %378 = add i32 %373, -1
  store i32 %378, i32* %345, align 4
  br label %379

379:                                              ; preds = %377, %372
  %380 = phi i32 [ %378, %377 ], [ %373, %372 ]
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %382, label %383

382:                                              ; preds = %379
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %338) #4
  br label %383

383:                                              ; preds = %379, %382
  %384 = load atomic i32, i32* %341 monotonic, align 4, !noalias !42
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = load i32, i32* %345, align 4
  br i1 %386, label %388, label %398

388:                                              ; preds = %383
  %389 = zext i32 %387 to i33
  %390 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %389, i33 1) #4
  %391 = extractvalue { i33, i1 } %390, 1
  %392 = extractvalue { i33, i1 } %390, 0
  %393 = icmp slt i33 %392, 0
  %394 = or i1 %391, %393
  br i1 %394, label %395, label %396, !prof !2

395:                                              ; preds = %388
  call void @llvm.trap() #4, !noalias !42
  unreachable

396:                                              ; preds = %388
  %397 = trunc i33 %392 to i32
  store i32 %397, i32* %345, align 4, !noalias !42
  br label %398

398:                                              ; preds = %383, %396
  %399 = phi i32 [ %397, %396 ], [ %387, %383 ]
  %400 = bitcast %"class.WTF::StringAppend.2330"* %11 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.52 to i64), i64* %400, align 8, !alias.scope !42
  %401 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %338, %"class.WTF::StringImpl"** %401, align 8, !alias.scope !42
  %402 = load atomic i32, i32* %341 monotonic, align 4, !noalias !42
  %403 = and i32 %402, 2
  %404 = icmp eq i32 %403, 0
  br i1 %404, label %405, label %419

405:                                              ; preds = %398
  %406 = zext i32 %399 to i33
  %407 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %406, i33 1) #4
  %408 = extractvalue { i33, i1 } %407, 1
  %409 = extractvalue { i33, i1 } %407, 0
  %410 = icmp slt i33 %409, 0
  %411 = or i1 %408, %410
  br i1 %411, label %412, label %413, !prof !2

412:                                              ; preds = %405
  call void @llvm.trap() #4, !noalias !42
  unreachable

413:                                              ; preds = %405
  %414 = trunc i33 %409 to i32
  store i32 %414, i32* %345, align 4, !noalias !42
  br label %419

415:                                              ; preds = %331
  %416 = bitcast %"class.WTF::StringAppend.2330"* %11 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.52 to i64), i64* %416, align 8, !alias.scope !42
  %417 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %417, align 8, !alias.scope !42
  %418 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0), i8** %418, align 8, !alias.scope !42
  br label %431

419:                                              ; preds = %413, %398
  %420 = phi i32 [ %414, %413 ], [ %399, %398 ]
  %421 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0), i8** %421, align 8, !alias.scope !42
  %422 = load atomic i32, i32* %341 monotonic, align 4, !noalias !42
  %423 = and i32 %422, 2
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %427

425:                                              ; preds = %419
  %426 = add i32 %420, -1
  store i32 %426, i32* %345, align 4, !noalias !42
  br label %427

427:                                              ; preds = %425, %419
  %428 = phi i32 [ %426, %425 ], [ %420, %419 ]
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %431

430:                                              ; preds = %427
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %338) #4, !noalias !42
  br label %431

431:                                              ; preds = %415, %427, %430
  %432 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend.2330"* nonnull %11)
  %433 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %432, %"class.WTF::StringImpl"** %433, align 8
  %434 = icmp eq %"class.blink::ExecutionContext"* %334, null
  br i1 %434, label %448, label %435

435:                                              ; preds = %431
  %436 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #4
  %437 = bitcast i8* %436 to %"class.blink::ConsoleMessage"*
  %438 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #4
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %437, i32 1, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::SourceLocation"* %438) #4
  %439 = getelementptr inbounds i8, i8* %436, i64 -4
  %440 = bitcast i8* %439 to i16*
  %441 = load atomic i16, i16* %440 monotonic, align 2
  %442 = or i16 %441, 1
  store atomic i16 %442, i16* %440 release, align 2
  %443 = bitcast %"class.blink::ExecutionContext"* %334 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %444 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %443, align 8
  %445 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %444, i64 52
  %446 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %445, align 8
  call void %446(%"class.blink::ExecutionContext"* nonnull %334, %"class.blink::ConsoleMessage"* %437, i1 zeroext false) #4
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %433, align 8
  br label %448

448:                                              ; preds = %431, %435
  %449 = phi %"class.WTF::StringImpl"* [ %432, %431 ], [ %447, %435 ]
  %450 = icmp eq %"class.WTF::StringImpl"* %449, null
  br i1 %450, label %464, label %451

451:                                              ; preds = %448
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %453 = load atomic i32, i32* %452 monotonic, align 4
  %454 = and i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %449, i64 0, i32 0
  %457 = load i32, i32* %456, align 4
  br i1 %455, label %458, label %460

458:                                              ; preds = %451
  %459 = add i32 %457, -1
  store i32 %459, i32* %456, align 4
  br label %460

460:                                              ; preds = %458, %451
  %461 = phi i32 [ %459, %458 ], [ %457, %451 ]
  %462 = icmp eq i32 %461, 0
  br i1 %462, label %463, label %464

463:                                              ; preds = %460
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %449) #4
  br label %464

464:                                              ; preds = %448, %460, %463
  %465 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %466 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %465, align 8
  %467 = icmp eq %"class.WTF::StringImpl"* %466, null
  br i1 %467, label %481, label %468

468:                                              ; preds = %464
  %469 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %466, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %470 = load atomic i32, i32* %469 monotonic, align 4
  %471 = and i32 %470, 2
  %472 = icmp eq i32 %471, 0
  %473 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %466, i64 0, i32 0
  %474 = load i32, i32* %473, align 4
  br i1 %472, label %475, label %477

475:                                              ; preds = %468
  %476 = add i32 %474, -1
  store i32 %476, i32* %473, align 4
  br label %477

477:                                              ; preds = %475, %468
  %478 = phi i32 [ %476, %475 ], [ %474, %468 ]
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %480, label %481

480:                                              ; preds = %477
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %466) #4
  br label %481

481:                                              ; preds = %464, %477, %480
  br i1 %339, label %495, label %482

482:                                              ; preds = %481
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %484 = load atomic i32, i32* %483 monotonic, align 4
  %485 = and i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 0
  %488 = load i32, i32* %487, align 4
  br i1 %486, label %489, label %491

489:                                              ; preds = %482
  %490 = add i32 %488, -1
  store i32 %490, i32* %487, align 4
  br label %491

491:                                              ; preds = %489, %482
  %492 = phi i32 [ %490, %489 ], [ %488, %482 ]
  %493 = icmp eq i32 %492, 0
  br i1 %493, label %494, label %495

494:                                              ; preds = %491
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %338) #4
  br label %495

495:                                              ; preds = %481, %491, %494
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %336) #4
  br label %543

496:                                              ; preds = %329
  %497 = bitcast %"class.WTF::AtomicString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %497) #4
  %498 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %499 = icmp eq %"class.WTF::StringImpl"* %498, null
  br i1 %499, label %523, label %500

500:                                              ; preds = %496
  %501 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %498, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %502 = load atomic i32, i32* %501 acquire, align 4
  %503 = and i32 %502, 4
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %521, label %505

505:                                              ; preds = %500
  %506 = load atomic i32, i32* %501 monotonic, align 4
  %507 = and i32 %506, 2
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %509, label %523

509:                                              ; preds = %505
  %510 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %498, i64 0, i32 0
  %511 = load i32, i32* %510, align 4
  %512 = zext i32 %511 to i33
  %513 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %512, i33 1) #4
  %514 = extractvalue { i33, i1 } %513, 1
  %515 = extractvalue { i33, i1 } %513, 0
  %516 = icmp slt i33 %515, 0
  %517 = or i1 %514, %516
  br i1 %517, label %518, label %519, !prof !2

518:                                              ; preds = %509
  call void @llvm.trap() #4
  unreachable

519:                                              ; preds = %509
  %520 = trunc i33 %515 to i32
  store i32 %520, i32* %510, align 4
  br label %523

521:                                              ; preds = %500
  %522 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %498) #4
  br label %523

523:                                              ; preds = %496, %505, %519, %521
  %524 = phi %"class.WTF::StringImpl"* [ %522, %521 ], [ %498, %505 ], [ %498, %519 ], [ null, %496 ]
  %525 = ptrtoint %"class.WTF::StringImpl"* %524 to i64
  %526 = bitcast %"class.WTF::AtomicString"* %12 to i64*
  store i64 %525, i64* %526, align 8
  call void @_ZN5blink14XMLHttpRequest24SetRequestHeaderInternalERKN3WTF12AtomicStringES4_(%"class.blink::XMLHttpRequest"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %12)
  %527 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %528 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %527, align 8
  %529 = icmp eq %"class.WTF::StringImpl"* %528, null
  br i1 %529, label %543, label %530

530:                                              ; preds = %523
  %531 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %532 = load atomic i32, i32* %531 monotonic, align 4
  %533 = and i32 %532, 2
  %534 = icmp eq i32 %533, 0
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %528, i64 0, i32 0
  %536 = load i32, i32* %535, align 4
  br i1 %534, label %537, label %539

537:                                              ; preds = %530
  %538 = add i32 %536, -1
  store i32 %538, i32* %535, align 4
  br label %539

539:                                              ; preds = %537, %530
  %540 = phi i32 [ %538, %537 ], [ %536, %530 ]
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %542, label %543

542:                                              ; preds = %539
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %528) #4
  br label %543

543:                                              ; preds = %542, %539, %523, %495, %328, %177
  %544 = phi i8* [ %335, %495 ], [ %181, %328 ], [ %29, %177 ], [ %497, %523 ], [ %497, %539 ], [ %497, %542 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %544) #4
  %545 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %546 = icmp eq %"class.WTF::StringImpl"* %545, null
  br i1 %546, label %560, label %547

547:                                              ; preds = %543
  %548 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %545, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %549 = load atomic i32, i32* %548 monotonic, align 4
  %550 = and i32 %549, 2
  %551 = icmp eq i32 %550, 0
  %552 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %545, i64 0, i32 0
  %553 = load i32, i32* %552, align 4
  br i1 %551, label %554, label %556

554:                                              ; preds = %547
  %555 = add i32 %553, -1
  store i32 %555, i32* %552, align 4
  br label %556

556:                                              ; preds = %554, %547
  %557 = phi i32 [ %555, %554 ], [ %553, %547 ]
  %558 = icmp eq i32 %557, 0
  br i1 %558, label %559, label %560

559:                                              ; preds = %556
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %545) #4
  br label %560

560:                                              ; preds = %543, %556, %559
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #4
  br label %561

561:                                              ; preds = %560, %20
  ret void
}

declare zeroext i1 @_ZN5blink16IsValidHTTPTokenERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend.2330"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2553"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #4
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #4
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %3, i8* %8) #4
  %9 = bitcast %"class.WTF::StringTypeAdapter.2553"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #4
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #4
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %2, i8* %11) #4
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #4
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend.2330"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #4
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2330"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #4
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #4
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #4
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #4
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend.2330"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #4
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2330"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #4
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #4
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #4
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #4
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare zeroext i1 @_ZN5blink22IsValidHTTPHeaderValueERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink4cors21IsForbiddenHeaderNameERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12AtomicStringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.2332"* noalias sret, %"class.WTF::StringAppend.2333"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2333", %"class.WTF::StringAppend.2333"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #4
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #4
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.2333", %"class.WTF::StringAppend.2333"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #4
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #4
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2332"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2332"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #4
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest13setTrustTokenEPKNS_10TrustTokenERNS_14ExceptionStateE(%"class.blink::XMLHttpRequest"*, %"class.blink::TrustToken"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 45
  %9 = load i8, i8* %8, align 4, !range !6
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %7, %3
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 11, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i64 0, i64 0)) #4
  br label %56

12:                                               ; preds = %7
  %13 = tail call i8* @_Znwm(i64 56) #16, !noalias !45
  %14 = bitcast i8* %13 to %"class.network::mojom::blink::TrustTokenParams"*
  tail call void @_ZN7network5mojom5blink16TrustTokenParamsC1Ev(%"class.network::mojom::blink::TrustTokenParams"* nonnull %14) #4, !noalias !45
  %15 = ptrtoint i8* %13 to i64
  %16 = tail call zeroext i1 @_ZN5blink24ConvertTrustTokenToMojomERKNS_10TrustTokenEPNS_14ExceptionStateEPN7network5mojom5blink16TrustTokenParamsE(%"class.blink::TrustToken"* dereferenceable(88) %1, %"class.blink::ExceptionState"* %2, %"class.network::mojom::blink::TrustTokenParams"* nonnull %14) #4
  br i1 %16, label %17, label %52

17:                                               ; preds = %12
  %18 = bitcast i8* %13 to i32*
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -1
  %21 = icmp ult i32 %20, 2
  br i1 %21, label %22, label %31

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %24 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %23 to %"class.blink::ExecutionContextLifecycleObserver"*
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %24) #4
  %26 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %27 = tail call zeroext i1 @_ZNK5blink16ExecutionContext16IsFeatureEnabledENS_5mojom24PermissionsPolicyFeatureENS_13ReportOptionsERKN3WTF6StringE(%"class.blink::ExecutionContext"* %25, i32 72, i32 1, %"class.WTF::String"* dereferenceable(8) %26) #4
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 35, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.55, i64 0, i64 0)) #4
  br label %52

29:                                               ; preds = %22
  %30 = load i32, i32* %18, align 8
  br label %31

31:                                               ; preds = %17, %29
  %32 = phi i32 [ %30, %29 ], [ %19, %17 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %36 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %35 to %"class.blink::ExecutionContextLifecycleObserver"*
  %37 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %36) #4
  %38 = tail call zeroext i1 @_ZN5blink47IsTrustTokenIssuanceAvailableInExecutionContextERKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376) %37) #4
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 35, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.56, i64 0, i64 0)) #4
  br label %52

40:                                               ; preds = %34, %31
  %41 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 10
  %42 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.network::mojom::blink::TrustTokenParams"*, %"class.network::mojom::blink::TrustTokenParams"** %42, align 8
  store %"class.network::mojom::blink::TrustTokenParams"* null, %"class.network::mojom::blink::TrustTokenParams"** %42, align 8
  %44 = icmp eq %"class.network::mojom::blink::TrustTokenParams"* %43, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  %46 = bitcast %"class.mojo::StructPtr"* %41 to i64*
  store i64 %15, i64* %46, align 8
  br label %56

47:                                               ; preds = %40
  tail call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* nonnull %43) #4
  %48 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %43 to i8*
  tail call void @_ZdlPv(i8* %48) #16
  %49 = bitcast %"class.mojo::StructPtr"* %41 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %15, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %12, %28, %39, %47
  %53 = phi i64 [ %50, %47 ], [ %15, %39 ], [ %15, %28 ], [ %15, %12 ]
  %54 = inttoptr i64 %53 to %"class.network::mojom::blink::TrustTokenParams"*
  tail call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* nonnull %54) #4
  %55 = inttoptr i64 %53 to i8*
  tail call void @_ZdlPv(i8* %55) #16
  br label %56

56:                                               ; preds = %45, %52, %47, %11
  ret void
}

declare zeroext i1 @_ZN5blink24ConvertTrustTokenToMojomERKNS_10TrustTokenEPNS_14ExceptionStateEPN7network5mojom5blink16TrustTokenParamsE(%"class.blink::TrustToken"* dereferenceable(88), %"class.blink::ExceptionState"*, %"class.network::mojom::blink::TrustTokenParams"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink47IsTrustTokenIssuanceAvailableInExecutionContextERKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14XMLHttpRequest21getAllResponseHeadersEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = alloca %"class.std::__1::set.2336", align 8
  %5 = alloca %"class.WTF::Vector.2279", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"struct.std::__1::pair.2344", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 2
  br i1 %12, label %17, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %15 = load i8, i8* %14, align 1, !range !6
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %13, %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i64 0) #4
  br label %378

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 48, i1 false)
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %22 = bitcast %union.anon.2314* %21 to i8*
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %24, align 4
  %25 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %25, align 1
  %26 = bitcast %"class.std::__1::set.2336"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #4
  %27 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 38
  %28 = bitcast %"class.std::__1::set.2336"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load i8, i8* %27, align 1, !range !6
  %30 = icmp eq i8 %29, 0
  %31 = select i1 %30, i32 1, i32 2
  %32 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  call void @_ZN5blink4cors33ExtractCorsExposedHeaderNamesListEN7network5mojom15CredentialsModeERKNS_16ResourceResponseE(%"class.std::__1::set.2336"* nonnull sret %4, i32 %31, %"class.blink::ResourceResponse"* dereferenceable(1072) %32) #4
  %33 = bitcast %"class.WTF::Vector.2279"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #4
  %34 = getelementptr inbounds %"class.WTF::Vector.2279", %"class.WTF::Vector.2279"* %5, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.WTF::Vector.2279", %"class.WTF::Vector.2279"* %5, i64 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::Vector.2279", %"class.WTF::Vector.2279"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false) #4
  %37 = call dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink16ResourceResponse16HttpHeaderFieldsEv(%"class.blink::ResourceResponse"* %32) #4
  %38 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %37, i64 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %49, label %41

41:                                               ; preds = %18
  %42 = zext i32 %39 to i64
  %43 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %42) #4
  %44 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %43, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #4
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.2279"* %5 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = lshr i64 %43, 4
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %35, align 8
  br label %49

49:                                               ; preds = %18, %41
  %50 = call dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink16ResourceResponse16HttpHeaderFieldsEv(%"class.blink::ResourceResponse"* %32) #4
  %51 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %50, i64 0, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %50, i64 0, i32 0, i32 0, i32 0
  %55 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %50, i64 0, i32 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 %58
  br i1 %53, label %69, label %60

60:                                               ; preds = %49
  %61 = icmp eq i32 %57, 0
  br i1 %61, label %69, label %62

62:                                               ; preds = %60, %66
  %63 = phi %"struct.WTF::KeyValuePair"* [ %67, %66 ], [ %55, %60 ]
  %64 = bitcast %"struct.WTF::KeyValuePair"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %69 [
    i64 -1, label %66
    i64 0, label %66
  ]

66:                                               ; preds = %62, %62
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 1
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, %59
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %66, %49, %60
  %70 = phi %"struct.WTF::KeyValuePair"* [ %59, %49 ], [ %55, %60 ], [ %59, %66 ], [ %63, %62 ]
  %71 = call dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink16ResourceResponse16HttpHeaderFieldsEv(%"class.blink::ResourceResponse"* %32) #4
  %72 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %71, i64 0, i32 0, i32 0, i32 0
  %73 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %71, i64 0, i32 0, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 %76
  %78 = icmp eq %"struct.WTF::KeyValuePair"* %70, %77
  br i1 %78, label %92, label %79

79:                                               ; preds = %69
  %80 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %81 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %80 to %"class.blink::ExecutionContextLifecycleObserver"*
  %82 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18, i32 36
  %83 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %84 = getelementptr inbounds %"class.std::__1::set.2336", %"class.std::__1::set.2336"* %4, i64 0, i32 0
  %85 = getelementptr inbounds %"class.std::__1::set.2336", %"class.std::__1::set.2336"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %86 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = bitcast %"struct.std::__1::pair.2344"* %7 to i8*
  %90 = getelementptr inbounds %"struct.std::__1::pair.2344", %"struct.std::__1::pair.2344"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::__1::pair.2344", %"struct.std::__1::pair.2344"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %115

92:                                               ; preds = %255, %69
  %93 = load %"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"** %34, align 8
  %94 = load i32, i32* %36, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %93, i64 %95
  call fastcc void @"_ZNSt3__16__sortIRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEvT0_SA_T_"(%"struct.std::__1::pair.2282"* %93, %"struct.std::__1::pair.2282"* %96) #4
  %97 = load %"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"** %34, align 8
  %98 = load i32, i32* %36, align 4
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %97, i64 %99
  %101 = icmp eq i32 %98, 0
  br i1 %101, label %265, label %102

102:                                              ; preds = %92
  %103 = bitcast %"class.WTF::StringView"* %8 to i8*
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %106 = bitcast i8** %105 to %"class.WTF::StringImpl"**
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  %108 = bitcast %"class.WTF::StringView"* %8 to i64*
  %109 = bitcast %"class.WTF::StringView"* %9 to i8*
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %112 = bitcast i8** %111 to %"class.WTF::StringImpl"**
  %113 = bitcast %"class.WTF::StringView"* %9 to i64*
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  br label %341

115:                                              ; preds = %79, %255
  %116 = phi %"struct.WTF::KeyValuePair"* [ %70, %79 ], [ %256, %255 ]
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 0, i32 0
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 0, i32 0, i32 0
  %119 = call zeroext i1 @_ZN5blink10FetchUtils29IsForbiddenResponseHeaderNameERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %118) #4
  br i1 %119, label %120, label %126

120:                                              ; preds = %115
  %121 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %81) #4
  %122 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %121) #4
  %123 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %122, i64 0, i32 8
  %124 = load i8, i8* %123, align 2, !range !6
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %245, label %126

126:                                              ; preds = %120, %115
  %127 = load i32, i32* %82, align 4
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %139

129:                                              ; preds = %126
  %130 = call zeroext i1 @_ZN5blink4cors30IsCorsSafelistedResponseHeaderERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %118) #4
  br i1 %130, label %139, label %131

131:                                              ; preds = %129
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #4
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* %118) #4
  %132 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN5blink17CompareIgnoreCaseENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.2337"* nonnull %84, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #4
  %133 = icmp eq %"class.std::__1::__tree_end_node"* %132, %85
  %134 = load i8, i8* %87, align 1
  %135 = icmp slt i8 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %131
  %137 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %137) #16
  br label %138

138:                                              ; preds = %136, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #4
  br i1 %133, label %245, label %139

139:                                              ; preds = %129, %126, %138
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #4
  %140 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10UpperASCIIEv(%"class.WTF::AtomicString"* %117) #4
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 0, i32 1, i32 0, i32 0, i32 0
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %161, label %144

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %161

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = zext i32 %151 to i33
  %153 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %152, i33 1) #4
  %154 = extractvalue { i33, i1 } %153, 1
  %155 = extractvalue { i33, i1 } %153, 0
  %156 = icmp slt i33 %155, 0
  %157 = or i1 %154, %156
  br i1 %157, label %158, label %159, !prof !2

158:                                              ; preds = %149
  call void @llvm.trap() #4
  unreachable

159:                                              ; preds = %149
  %160 = trunc i33 %155 to i32
  store i32 %160, i32* %150, align 4
  br label %161

161:                                              ; preds = %139, %144, %159
  store %"class.WTF::StringImpl"* %140, %"class.WTF::StringImpl"** %90, align 8
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %91, align 8
  %162 = load i32, i32* %36, align 4
  %163 = load i32, i32* %35, align 8
  %164 = icmp eq i32 %162, %163
  br i1 %164, label %211, label %165, !prof !2

165:                                              ; preds = %161
  %166 = load %"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"** %34, align 8
  %167 = zext i32 %162 to i64
  %168 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %166, i64 %167, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %140, %"class.WTF::StringImpl"** %168, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %169, label %187, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %187

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = zext i32 %177 to i33
  %179 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %178, i33 1) #4
  %180 = extractvalue { i33, i1 } %179, 1
  %181 = extractvalue { i33, i1 } %179, 0
  %182 = icmp slt i33 %181, 0
  %183 = or i1 %180, %182
  br i1 %183, label %184, label %185, !prof !2

184:                                              ; preds = %175
  call void @llvm.trap() #4
  unreachable

185:                                              ; preds = %175
  %186 = trunc i33 %181 to i32
  store i32 %186, i32* %176, align 4
  br label %187

187:                                              ; preds = %185, %170, %165
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %189 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %166, i64 %167, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %188, %"class.WTF::StringImpl"** %189, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %190, label %208, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %208

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = zext i32 %198 to i33
  %200 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %199, i33 1) #4
  %201 = extractvalue { i33, i1 } %200, 1
  %202 = extractvalue { i33, i1 } %200, 0
  %203 = icmp slt i33 %202, 0
  %204 = or i1 %201, %203
  br i1 %204, label %205, label %206, !prof !2

205:                                              ; preds = %196
  call void @llvm.trap() #4
  unreachable

206:                                              ; preds = %196
  %207 = trunc i33 %202 to i32
  store i32 %207, i32* %197, align 4
  br label %208

208:                                              ; preds = %206, %191, %187
  %209 = load i32, i32* %36, align 4
  %210 = add i32 %209, 1
  store i32 %210, i32* %36, align 4
  br label %212

211:                                              ; preds = %161
  call void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS_12AtomicStringES8_EEEEvOT_(%"class.WTF::Vector.2279"* nonnull %5, %"struct.std::__1::pair.2344"* nonnull dereferenceable(16) %7) #4
  br label %212

212:                                              ; preds = %208, %211
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %228, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #4
  br label %228

228:                                              ; preds = %227, %224, %212
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %230 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %230, label %244, label %231

231:                                              ; preds = %228
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %229) #4
  br label %244

244:                                              ; preds = %243, %240, %228
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #4
  br label %245

245:                                              ; preds = %120, %138, %244
  %246 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %116, i64 1
  %247 = icmp eq %"struct.WTF::KeyValuePair"* %246, %59
  br i1 %247, label %255, label %248

248:                                              ; preds = %245, %252
  %249 = phi %"struct.WTF::KeyValuePair"* [ %253, %252 ], [ %246, %245 ]
  %250 = bitcast %"struct.WTF::KeyValuePair"* %249 to i64*
  %251 = load i64, i64* %250, align 8
  switch i64 %251, label %255 [
    i64 -1, label %252
    i64 0, label %252
  ]

252:                                              ; preds = %248, %248
  %253 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %249, i64 1
  %254 = icmp eq %"struct.WTF::KeyValuePair"* %253, %59
  br i1 %254, label %255, label %248

255:                                              ; preds = %248, %252, %245
  %256 = phi %"struct.WTF::KeyValuePair"* [ %59, %245 ], [ %59, %252 ], [ %249, %248 ]
  %257 = call dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink16ResourceResponse16HttpHeaderFieldsEv(%"class.blink::ResourceResponse"* %32) #4
  %258 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %257, i64 0, i32 0, i32 0, i32 0
  %259 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %258, align 8
  %260 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %257, i64 0, i32 0, i32 0, i32 1
  %261 = load i32, i32* %260, align 8
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %259, i64 %262
  %264 = icmp eq %"struct.WTF::KeyValuePair"* %256, %263
  br i1 %264, label %92, label %115

265:                                              ; preds = %374, %92
  %266 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #4
  %267 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %266, %"class.WTF::StringImpl"** %267, align 8
  %268 = load %"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"** %34, align 8
  %269 = icmp eq %"struct.std::__1::pair.2282"* %268, null
  br i1 %269, label %320, label %270, !prof !10

270:                                              ; preds = %265
  %271 = bitcast %"struct.std::__1::pair.2282"* %268 to i8*
  %272 = load i32, i32* %36, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %318, label %274, !prof !2

274:                                              ; preds = %270
  %275 = zext i32 %272 to i64
  %276 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %268, i64 %275
  br label %277

277:                                              ; preds = %274, %312
  %278 = phi %"struct.std::__1::pair.2282"* [ %313, %312 ], [ %268, %274 ]
  %279 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %278, i64 0, i32 1, i32 0, i32 0
  %280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %281 = icmp eq %"class.WTF::StringImpl"* %280, null
  br i1 %281, label %295, label %282

282:                                              ; preds = %277
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %284 = load atomic i32, i32* %283 monotonic, align 4
  %285 = and i32 %284, 2
  %286 = icmp eq i32 %285, 0
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %280, i64 0, i32 0
  %288 = load i32, i32* %287, align 4
  br i1 %286, label %289, label %291

289:                                              ; preds = %282
  %290 = add i32 %288, -1
  store i32 %290, i32* %287, align 4
  br label %291

291:                                              ; preds = %289, %282
  %292 = phi i32 [ %290, %289 ], [ %288, %282 ]
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %295

294:                                              ; preds = %291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %280) #4
  br label %295

295:                                              ; preds = %294, %291, %277
  %296 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %278, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %297, null
  br i1 %298, label %312, label %299

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %301 = load atomic i32, i32* %300 monotonic, align 4
  %302 = and i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 0
  %305 = load i32, i32* %304, align 4
  br i1 %303, label %306, label %308

306:                                              ; preds = %299
  %307 = add i32 %305, -1
  store i32 %307, i32* %304, align 4
  br label %308

308:                                              ; preds = %306, %299
  %309 = phi i32 [ %307, %306 ], [ %305, %299 ]
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %308
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %297) #4
  br label %312

312:                                              ; preds = %311, %308, %295
  %313 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %278, i64 1
  %314 = icmp eq %"struct.std::__1::pair.2282"* %313, %276
  br i1 %314, label %315, label %277

315:                                              ; preds = %312
  store i32 0, i32* %36, align 4
  %316 = bitcast %"class.WTF::Vector.2279"* %5 to i8**
  %317 = load i8*, i8** %316, align 8
  br label %318

318:                                              ; preds = %315, %270
  %319 = phi i8* [ %317, %315 ], [ %271, %270 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %319) #4
  store %"struct.std::__1::pair.2282"* null, %"struct.std::__1::pair.2282"** %34, align 8
  br label %320

320:                                              ; preds = %265, %318
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #4
  %321 = getelementptr inbounds %"class.std::__1::set.2336", %"class.std::__1::set.2336"* %4, i64 0, i32 0
  %322 = getelementptr inbounds %"class.std::__1::set.2336", %"class.std::__1::set.2336"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %323 = bitcast %"class.std::__1::__tree_end_node"* %322 to %"class.std::__1::__tree_node"**
  %324 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %323, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN5blink17CompareIgnoreCaseENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.2337"* nonnull %321, %"class.std::__1::__tree_node"* %324) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #4
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #4
  %325 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %326 = icmp eq %"class.WTF::StringImpl"* %325, null
  br i1 %326, label %340, label %327

327:                                              ; preds = %320
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 2
  %331 = icmp eq i32 %330, 0
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %325, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  br i1 %331, label %334, label %336

334:                                              ; preds = %327
  %335 = add i32 %333, -1
  store i32 %335, i32* %332, align 4
  br label %336

336:                                              ; preds = %334, %327
  %337 = phi i32 [ %335, %334 ], [ %333, %327 ]
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %340

339:                                              ; preds = %336
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %325) #4
  br label %340

340:                                              ; preds = %320, %336, %339
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #4
  br label %378

341:                                              ; preds = %102, %374
  %342 = phi %"struct.std::__1::pair.2282"* [ %97, %102 ], [ %376, %374 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #4
  %343 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %342, i64 0, i32 0
  %344 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* %343) #4
  %345 = icmp eq %"class.WTF::StringImpl"* %344, null
  br i1 %345, label %346, label %348

346:                                              ; preds = %341
  store i8* null, i8** %105, align 8
  %347 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %347, i64* %108, align 8
  store i32 0, i32* %107, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  br label %364

348:                                              ; preds = %341
  store %"class.WTF::StringImpl"* %344, %"class.WTF::StringImpl"** %104, align 8
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 1
  %350 = load i32, i32* %349, align 4
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 1
  store %"class.WTF::StringImpl"* %351, %"class.WTF::StringImpl"** %106, align 8
  store i32 %350, i32* %107, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  %352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %353 = load atomic i32, i32* %352 monotonic, align 4
  %354 = and i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 0
  %357 = load i32, i32* %356, align 4
  br i1 %355, label %358, label %360

358:                                              ; preds = %348
  %359 = add i32 %357, -1
  store i32 %359, i32* %356, align 4
  br label %360

360:                                              ; preds = %358, %348
  %361 = phi i32 [ %359, %358 ], [ %357, %348 ]
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %363, label %364

363:                                              ; preds = %360
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %344) #4
  br label %364

364:                                              ; preds = %346, %360, %363
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #4
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 58) #4
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 32) #4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #4
  %365 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %342, i64 0, i32 1, i32 0, i32 0
  %366 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %365, align 8
  %367 = icmp eq %"class.WTF::StringImpl"* %366, null
  br i1 %367, label %368, label %370

368:                                              ; preds = %364
  store i8* null, i8** %111, align 8
  %369 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %369, i64* %113, align 8
  br label %374

370:                                              ; preds = %364
  store %"class.WTF::StringImpl"* %366, %"class.WTF::StringImpl"** %110, align 8
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %366, i64 0, i32 1
  %372 = load i32, i32* %371, align 4
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %366, i64 1
  store %"class.WTF::StringImpl"* %373, %"class.WTF::StringImpl"** %112, align 8
  br label %374

374:                                              ; preds = %368, %370
  %375 = phi i32 [ %372, %370 ], [ 0, %368 ]
  store i32 %375, i32* %114, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #4
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 13) #4
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %3, i8 zeroext 10) #4
  %376 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %342, i64 1
  %377 = icmp eq %"struct.std::__1::pair.2282"* %376, %100
  br i1 %377, label %265, label %341

378:                                              ; preds = %340, %17
  %379 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %380 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %379, align 8
  ret %"class.WTF::StringImpl"* %380
}

declare void @_ZN5blink4cors33ExtractCorsExposedHeaderNamesListEN7network5mojom15CredentialsModeERKNS_16ResourceResponseE(%"class.std::__1::set.2336"* sret, i32, %"class.blink::ResourceResponse"* dereferenceable(1072)) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink16ResourceResponse16HttpHeaderFieldsEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink10FetchUtils29IsForbiddenResponseHeaderNameERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink4cors30IsCorsSafelistedResponseHeaderERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10UpperASCIIEv(%"class.WTF::AtomicString"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink14XMLHttpRequest17getResponseHeaderERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringAppend.2330", align 8
  %5 = alloca %"class.std::__1::set.2336", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend.2330", align 8
  %9 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, 2
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %14 = load i8, i8* %13, align 1, !range !6
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12, %2
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %394

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %20 = tail call zeroext i1 @_ZN5blink10FetchUtils29IsForbiddenResponseHeaderNameERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %19) #4
  br i1 %20, label %21, label %193

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %23 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %22 to %"class.blink::ExecutionContextLifecycleObserver"*
  %24 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %23) #4
  %25 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %24) #4
  %26 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %25, i64 0, i32 8
  %27 = load i8, i8* %26, align 2, !range !6
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %193

29:                                               ; preds = %21
  %30 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %23) #4
  %31 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #4
  %32 = bitcast %"class.WTF::StringAppend.2330"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #4
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %111, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #4
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #4
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %51, %36
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %68

58:                                               ; preds = %53
  %59 = zext i32 %54 to i33
  %60 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #4
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  tail call void @llvm.trap() #4
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %41, align 4
  br label %68

68:                                               ; preds = %66, %53
  %69 = phi i32 [ %67, %66 ], [ %54, %53 ]
  %70 = load atomic i32, i32* %37 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %68
  %74 = add i32 %69, -1
  store i32 %74, i32* %41, align 4
  br label %75

75:                                               ; preds = %73, %68
  %76 = phi i32 [ %74, %73 ], [ %69, %68 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #4
  br label %79

79:                                               ; preds = %75, %78
  %80 = load atomic i32, i32* %37 monotonic, align 4, !noalias !48
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = load i32, i32* %41, align 4
  br i1 %82, label %84, label %94

84:                                               ; preds = %79
  %85 = zext i32 %83 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #4
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %84
  tail call void @llvm.trap() #4, !noalias !48
  unreachable

92:                                               ; preds = %84
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %41, align 4, !noalias !48
  br label %94

94:                                               ; preds = %79, %92
  %95 = phi i32 [ %93, %92 ], [ %83, %79 ]
  %96 = bitcast %"class.WTF::StringAppend.2330"* %4 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.57 to i64), i64* %96, align 8, !alias.scope !48
  %97 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %97, align 8, !alias.scope !48
  %98 = load atomic i32, i32* %37 monotonic, align 4, !noalias !48
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %115

101:                                              ; preds = %94
  %102 = zext i32 %95 to i33
  %103 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %102, i33 1) #4
  %104 = extractvalue { i33, i1 } %103, 1
  %105 = extractvalue { i33, i1 } %103, 0
  %106 = icmp slt i33 %105, 0
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %109, !prof !2

108:                                              ; preds = %101
  tail call void @llvm.trap() #4, !noalias !48
  unreachable

109:                                              ; preds = %101
  %110 = trunc i33 %105 to i32
  store i32 %110, i32* %41, align 4, !noalias !48
  br label %115

111:                                              ; preds = %29
  %112 = bitcast %"class.WTF::StringAppend.2330"* %4 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.57 to i64), i64* %112, align 8, !alias.scope !48
  %113 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %113, align 8, !alias.scope !48
  %114 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0), i8** %114, align 8, !alias.scope !48
  br label %127

115:                                              ; preds = %109, %94
  %116 = phi i32 [ %110, %109 ], [ %95, %94 ]
  %117 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0), i8** %117, align 8, !alias.scope !48
  %118 = load atomic i32, i32* %37 monotonic, align 4, !noalias !48
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %115
  %122 = add i32 %116, -1
  store i32 %122, i32* %41, align 4, !noalias !48
  br label %123

123:                                              ; preds = %121, %115
  %124 = phi i32 [ %122, %121 ], [ %116, %115 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #4, !noalias !48
  br label %127

127:                                              ; preds = %111, %123, %126
  %128 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend.2330"* nonnull %4)
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %128, %"class.WTF::StringImpl"** %129, align 8
  %130 = icmp eq %"class.blink::ExecutionContext"* %30, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %127
  %132 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #4
  %133 = bitcast i8* %132 to %"class.blink::ConsoleMessage"*
  %134 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #4
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %133, i32 1, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::SourceLocation"* %134) #4
  %135 = getelementptr inbounds i8, i8* %132, i64 -4
  %136 = bitcast i8* %135 to i16*
  %137 = load atomic i16, i16* %136 monotonic, align 2
  %138 = or i16 %137, 1
  store atomic i16 %138, i16* %136 release, align 2
  %139 = bitcast %"class.blink::ExecutionContext"* %30 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %140 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %140, i64 52
  %142 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %141, align 8
  call void %142(%"class.blink::ExecutionContext"* nonnull %30, %"class.blink::ConsoleMessage"* %133, i1 zeroext false) #4
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  br label %144

144:                                              ; preds = %127, %131
  %145 = phi %"class.WTF::StringImpl"* [ %128, %127 ], [ %143, %131 ]
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #4
  br label %160

160:                                              ; preds = %144, %156, %159
  %161 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #4
  br label %177

177:                                              ; preds = %160, %173, %176
  br i1 %35, label %191, label %178

178:                                              ; preds = %177
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #4
  br label %191

191:                                              ; preds = %177, %187, %190
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #4
  %192 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %394

193:                                              ; preds = %21, %18
  %194 = bitcast %"class.std::__1::set.2336"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #4
  %195 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 38
  %196 = bitcast %"class.std::__1::set.2336"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %196, i8 -86, i64 24, i1 false)
  %197 = load i8, i8* %195, align 1, !range !6
  %198 = icmp eq i8 %197, 0
  %199 = select i1 %198, i32 1, i32 2
  %200 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  call void @_ZN5blink4cors33ExtractCorsExposedHeaderNamesListEN7network5mojom15CredentialsModeERKNS_16ResourceResponseE(%"class.std::__1::set.2336"* nonnull sret %5, i32 %199, %"class.blink::ResourceResponse"* dereferenceable(1072) %200) #4
  %201 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18, i32 36
  %202 = load i32, i32* %201, align 4
  %203 = icmp eq i32 %202, 1
  br i1 %203, label %204, label %386

204:                                              ; preds = %193
  %205 = call zeroext i1 @_ZN5blink4cors30IsCorsSafelistedResponseHeaderERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %19) #4
  br i1 %205, label %386, label %206

206:                                              ; preds = %204
  %207 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #4
  call void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* %19) #4
  %208 = getelementptr inbounds %"class.std::__1::set.2336", %"class.std::__1::set.2336"* %5, i64 0, i32 0
  %209 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN5blink17CompareIgnoreCaseENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.2337"* nonnull %208, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #4
  %210 = getelementptr inbounds %"class.std::__1::set.2336", %"class.std::__1::set.2336"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %211 = icmp eq %"class.std::__1::__tree_end_node"* %209, %210
  %212 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %212, i64 0, i32 1, i32 0
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %206
  %217 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  call void @_ZdlPv(i8* %218) #16
  br label %219

219:                                              ; preds = %216, %206
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #4
  br i1 %211, label %220, label %386

220:                                              ; preds = %219
  %221 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %222 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %221 to %"class.blink::ExecutionContextLifecycleObserver"*
  %223 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %222) #4
  %224 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #4
  %225 = bitcast %"class.WTF::StringAppend.2330"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %225) #4
  %226 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %304, label %229

229:                                              ; preds = %220
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %246

236:                                              ; preds = %229
  %237 = zext i32 %235 to i33
  %238 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %237, i33 1) #4
  %239 = extractvalue { i33, i1 } %238, 1
  %240 = extractvalue { i33, i1 } %238, 0
  %241 = icmp slt i33 %240, 0
  %242 = or i1 %239, %241
  br i1 %242, label %243, label %244, !prof !2

243:                                              ; preds = %236
  call void @llvm.trap() #4
  unreachable

244:                                              ; preds = %236
  %245 = trunc i33 %240 to i32
  store i32 %245, i32* %234, align 4
  br label %246

246:                                              ; preds = %244, %229
  %247 = phi i32 [ %245, %244 ], [ %235, %229 ]
  %248 = load atomic i32, i32* %230 monotonic, align 4
  %249 = and i32 %248, 2
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %261

251:                                              ; preds = %246
  %252 = zext i32 %247 to i33
  %253 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %252, i33 1) #4
  %254 = extractvalue { i33, i1 } %253, 1
  %255 = extractvalue { i33, i1 } %253, 0
  %256 = icmp slt i33 %255, 0
  %257 = or i1 %254, %256
  br i1 %257, label %258, label %259, !prof !2

258:                                              ; preds = %251
  call void @llvm.trap() #4
  unreachable

259:                                              ; preds = %251
  %260 = trunc i33 %255 to i32
  store i32 %260, i32* %234, align 4
  br label %261

261:                                              ; preds = %259, %246
  %262 = phi i32 [ %260, %259 ], [ %247, %246 ]
  %263 = load atomic i32, i32* %230 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %261
  %267 = add i32 %262, -1
  store i32 %267, i32* %234, align 4
  br label %268

268:                                              ; preds = %266, %261
  %269 = phi i32 [ %267, %266 ], [ %262, %261 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #4
  br label %272

272:                                              ; preds = %268, %271
  %273 = load atomic i32, i32* %230 monotonic, align 4, !noalias !51
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = load i32, i32* %234, align 4
  br i1 %275, label %277, label %287

277:                                              ; preds = %272
  %278 = zext i32 %276 to i33
  %279 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %278, i33 1) #4
  %280 = extractvalue { i33, i1 } %279, 1
  %281 = extractvalue { i33, i1 } %279, 0
  %282 = icmp slt i33 %281, 0
  %283 = or i1 %280, %282
  br i1 %283, label %284, label %285, !prof !2

284:                                              ; preds = %277
  call void @llvm.trap() #4, !noalias !51
  unreachable

285:                                              ; preds = %277
  %286 = trunc i33 %281 to i32
  store i32 %286, i32* %234, align 4, !noalias !51
  br label %287

287:                                              ; preds = %272, %285
  %288 = phi i32 [ %286, %285 ], [ %276, %272 ]
  %289 = bitcast %"class.WTF::StringAppend.2330"* %8 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.57 to i64), i64* %289, align 8, !alias.scope !51
  %290 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %227, %"class.WTF::StringImpl"** %290, align 8, !alias.scope !51
  %291 = load atomic i32, i32* %230 monotonic, align 4, !noalias !51
  %292 = and i32 %291, 2
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %294, label %308

294:                                              ; preds = %287
  %295 = zext i32 %288 to i33
  %296 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %295, i33 1) #4
  %297 = extractvalue { i33, i1 } %296, 1
  %298 = extractvalue { i33, i1 } %296, 0
  %299 = icmp slt i33 %298, 0
  %300 = or i1 %297, %299
  br i1 %300, label %301, label %302, !prof !2

301:                                              ; preds = %294
  call void @llvm.trap() #4, !noalias !51
  unreachable

302:                                              ; preds = %294
  %303 = trunc i33 %298 to i32
  store i32 %303, i32* %234, align 4, !noalias !51
  br label %308

304:                                              ; preds = %220
  %305 = bitcast %"class.WTF::StringAppend.2330"* %8 to i64*
  store i64 ptrtoint ([31 x i8]* @.str.57 to i64), i64* %305, align 8, !alias.scope !51
  %306 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %306, align 8, !alias.scope !51
  %307 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0), i8** %307, align 8, !alias.scope !51
  br label %320

308:                                              ; preds = %302, %287
  %309 = phi i32 [ %303, %302 ], [ %288, %287 ]
  %310 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.53, i64 0, i64 0), i8** %310, align 8, !alias.scope !51
  %311 = load atomic i32, i32* %230 monotonic, align 4, !noalias !51
  %312 = and i32 %311, 2
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %316

314:                                              ; preds = %308
  %315 = add i32 %309, -1
  store i32 %315, i32* %234, align 4, !noalias !51
  br label %316

316:                                              ; preds = %314, %308
  %317 = phi i32 [ %315, %314 ], [ %309, %308 ]
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %320

319:                                              ; preds = %316
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #4, !noalias !51
  br label %320

320:                                              ; preds = %304, %316, %319
  %321 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_EcvNS_6StringEEv(%"class.WTF::StringAppend.2330"* nonnull %8)
  %322 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %321, %"class.WTF::StringImpl"** %322, align 8
  %323 = icmp eq %"class.blink::ExecutionContext"* %223, null
  br i1 %323, label %337, label %324

324:                                              ; preds = %320
  %325 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #4
  %326 = bitcast i8* %325 to %"class.blink::ConsoleMessage"*
  %327 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #4
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %326, i32 1, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::SourceLocation"* %327) #4
  %328 = getelementptr inbounds i8, i8* %325, i64 -4
  %329 = bitcast i8* %328 to i16*
  %330 = load atomic i16, i16* %329 monotonic, align 2
  %331 = or i16 %330, 1
  store atomic i16 %331, i16* %329 release, align 2
  %332 = bitcast %"class.blink::ExecutionContext"* %223 to void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)***
  %333 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)**, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*** %332, align 8
  %334 = getelementptr inbounds void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %333, i64 52
  %335 = load void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)*, void (%"class.blink::ExecutionContext"*, %"class.blink::ConsoleMessage"*, i1)** %334, align 8
  call void %335(%"class.blink::ExecutionContext"* nonnull %223, %"class.blink::ConsoleMessage"* %326, i1 zeroext false) #4
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %322, align 8
  br label %337

337:                                              ; preds = %320, %324
  %338 = phi %"class.WTF::StringImpl"* [ %321, %320 ], [ %336, %324 ]
  %339 = icmp eq %"class.WTF::StringImpl"* %338, null
  br i1 %339, label %353, label %340

340:                                              ; preds = %337
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load atomic i32, i32* %341 monotonic, align 4
  %343 = and i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 0
  %346 = load i32, i32* %345, align 4
  br i1 %344, label %347, label %349

347:                                              ; preds = %340
  %348 = add i32 %346, -1
  store i32 %348, i32* %345, align 4
  br label %349

349:                                              ; preds = %347, %340
  %350 = phi i32 [ %348, %347 ], [ %346, %340 ]
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %353

352:                                              ; preds = %349
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %338) #4
  br label %353

353:                                              ; preds = %337, %349, %352
  %354 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %8, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %355 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %354, align 8
  %356 = icmp eq %"class.WTF::StringImpl"* %355, null
  br i1 %356, label %370, label %357

357:                                              ; preds = %353
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %359 = load atomic i32, i32* %358 monotonic, align 4
  %360 = and i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %355, i64 0, i32 0
  %363 = load i32, i32* %362, align 4
  br i1 %361, label %364, label %366

364:                                              ; preds = %357
  %365 = add i32 %363, -1
  store i32 %365, i32* %362, align 4
  br label %366

366:                                              ; preds = %364, %357
  %367 = phi i32 [ %365, %364 ], [ %363, %357 ]
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %370

369:                                              ; preds = %366
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %355) #4
  br label %370

370:                                              ; preds = %353, %366, %369
  br i1 %228, label %384, label %371

371:                                              ; preds = %370
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load atomic i32, i32* %372 monotonic, align 4
  %374 = and i32 %373, 2
  %375 = icmp eq i32 %374, 0
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %377 = load i32, i32* %376, align 4
  br i1 %375, label %378, label %380

378:                                              ; preds = %371
  %379 = add i32 %377, -1
  store i32 %379, i32* %376, align 4
  br label %380

380:                                              ; preds = %378, %371
  %381 = phi i32 [ %379, %378 ], [ %377, %371 ]
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %384

383:                                              ; preds = %380
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #4
  br label %384

384:                                              ; preds = %370, %380, %383
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %225) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #4
  %385 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %388

386:                                              ; preds = %204, %193, %219
  %387 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %200, %"class.WTF::AtomicString"* dereferenceable(8) %1) #4
  br label %388

388:                                              ; preds = %386, %384
  %389 = phi %"class.WTF::AtomicString"* [ %385, %384 ], [ %387, %386 ]
  %390 = getelementptr inbounds %"class.std::__1::set.2336", %"class.std::__1::set.2336"* %5, i64 0, i32 0
  %391 = getelementptr inbounds %"class.std::__1::set.2336", %"class.std::__1::set.2336"* %5, i64 0, i32 0, i32 1, i32 0, i32 0
  %392 = bitcast %"class.std::__1::__tree_end_node"* %391 to %"class.std::__1::__tree_node"**
  %393 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %392, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN5blink17CompareIgnoreCaseENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.2337"* nonnull %390, %"class.std::__1::__tree_node"* %393) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %194) #4
  br label %394

394:                                              ; preds = %388, %191, %16
  %395 = phi %"class.WTF::AtomicString"* [ %17, %16 ], [ %389, %388 ], [ %192, %191 ]
  ret %"class.WTF::AtomicString"* %395
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14XMLHttpRequest21FinalResponseMIMETypeEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 12
  %3 = tail call %"class.WTF::StringImpl"* @_ZN5blink28ExtractMIMETypeFromMediaTypeERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %2) #4
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.WTF::StringImpl"* %3 to i64
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %56

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  %12 = tail call zeroext i1 @_ZNK5blink16ResourceResponse6IsHTTPEv(%"class.blink::ResourceResponse"* %11) #4
  br i1 %12, label %13, label %18

13:                                               ; preds = %10
  %14 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  %15 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse15HttpHeaderFieldERKN3WTF12AtomicStringE(%"class.blink::ResourceResponse"* %11, %"class.WTF::AtomicString"* dereferenceable(8) %14) #4
  %16 = tail call %"class.WTF::StringImpl"* @_ZN5blink28ExtractMIMETypeFromMediaTypeERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %15) #4
  %17 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  br label %41

18:                                               ; preds = %10
  %19 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"* %11) #4
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %23 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #4
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %29
  tail call void @llvm.trap() #4
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %39, %24, %18, %13
  %42 = phi i64 [ %17, %13 ], [ %22, %18 ], [ %22, %24 ], [ %22, %39 ]
  br i1 %4, label %56, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #4
  br label %56

56:                                               ; preds = %5, %41, %52, %55
  %57 = phi i64 [ %42, %41 ], [ %42, %52 ], [ %42, %55 ], [ %6, %5 ]
  %58 = inttoptr i64 %57 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %58
}

declare %"class.WTF::StringImpl"* @_ZN5blink28ExtractMIMETypeFromMediaTypeERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse8MimeTypeEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK5blink14XMLHttpRequest20FinalResponseCharsetEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::TextEncoding", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #4
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  %9 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse16TextEncodingNameEv(%"class.blink::ResourceResponse"* %8) #4
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %7, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #4
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #4
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %1, %13, %28
  %31 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 12, i32 0
  %32 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #4
  store i32 0, i32* %2, align 4
  %33 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #4
  store i32 0, i32* %3, align 4
  call fastcc void @_ZN5blink12_GLOBAL__N_122FindCharsetInMediaTypeERKN3WTF6StringERjS5_(%"class.WTF::String"* dereferenceable(8) %31, i32* nonnull dereferenceable(4) %2, i32* nonnull dereferenceable(4) %3) #4
  %34 = load i32, i32* %2, align 4
  %35 = load i32, i32* %3, align 4
  %36 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %31, i32 %34, i32 %35) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #4
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %77, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %78, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i33
  %51 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #4
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %47
  tail call void @llvm.trap() #4
  unreachable

57:                                               ; preds = %47
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %48, align 4
  br label %59

59:                                               ; preds = %57, %42
  %60 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %61 = bitcast %"class.WTF::String"* %5 to i64*
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %60, i64* %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %78, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #4
  br label %78

77:                                               ; preds = %30
  call void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  br label %91

78:                                               ; preds = %76, %73, %59, %38
  call void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"* nonnull %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #4
  br label %91

91:                                               ; preds = %77, %87, %90
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #4
  br label %107

107:                                              ; preds = %91, %103, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #4
  %108 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %4, i64 0, i32 0
  %109 = load i8*, i8** %108, align 8
  ret i8* %109
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse16TextEncodingNameEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #2

declare void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16MIMETypeRegistry13IsXMLMIMETypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [10 x i8]* dereferenceable(10)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 9
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %189, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %273, %14, %28, %189, %203, %217, %231, %245, %259, %42, %59, %77, %93, %109, %125, %141, %157, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %14 ], [ false, %28 ], [ false, %189 ], [ false, %203 ], [ false, %217 ], [ false, %231 ], [ false, %245 ], [ false, %259 ], [ %286, %273 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  ret i1 %188

189:                                              ; preds = %28
  %190 = getelementptr inbounds i8, i8* %15, i64 2
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 2
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  br i1 %202, label %203, label %75

203:                                              ; preds = %189
  %204 = getelementptr inbounds i8, i8* %15, i64 3
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i64
  %207 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %206
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 3
  %211 = load i8, i8* %210, align 1
  %212 = zext i8 %211 to i64
  %213 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %212
  %214 = load i8, i8* %213, align 1
  %215 = sext i8 %214 to i32
  %216 = icmp eq i32 %209, %215
  br i1 %216, label %217, label %75

217:                                              ; preds = %203
  %218 = getelementptr inbounds i8, i8* %15, i64 4
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i64
  %221 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %220
  %222 = load i8, i8* %221, align 1
  %223 = zext i8 %222 to i32
  %224 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 4
  %225 = load i8, i8* %224, align 1
  %226 = zext i8 %225 to i64
  %227 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %223, %229
  br i1 %230, label %231, label %75

231:                                              ; preds = %217
  %232 = getelementptr inbounds i8, i8* %15, i64 5
  %233 = load i8, i8* %232, align 1
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = zext i8 %236 to i32
  %238 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 5
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = sext i8 %242 to i32
  %244 = icmp eq i32 %237, %243
  br i1 %244, label %245, label %75

245:                                              ; preds = %231
  %246 = getelementptr inbounds i8, i8* %15, i64 6
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 6
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %75

259:                                              ; preds = %245
  %260 = getelementptr inbounds i8, i8* %15, i64 7
  %261 = load i8, i8* %260, align 1
  %262 = zext i8 %261 to i64
  %263 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %262
  %264 = load i8, i8* %263, align 1
  %265 = zext i8 %264 to i32
  %266 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 7
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = sext i8 %270 to i32
  %272 = icmp eq i32 %265, %271
  br i1 %272, label %273, label %75

273:                                              ; preds = %259
  %274 = getelementptr inbounds i8, i8* %15, i64 8
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i64
  %277 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %276
  %278 = load i8, i8* %277, align 1
  %279 = zext i8 %278 to i32
  %280 = getelementptr inbounds [10 x i8], [10 x i8]* %1, i64 0, i64 8
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = sext i8 %284 to i32
  %286 = icmp eq i32 %279, %285
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14XMLHttpRequest6statusEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 2
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %7 = load i8, i8* %6, align 1, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  %11 = tail call i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"* %10) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = tail call i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"* %10) #4
  br label %15

15:                                               ; preds = %1, %9, %5, %13
  %16 = phi i32 [ %14, %13 ], [ 0, %1 ], [ 0, %5 ], [ 0, %9 ]
  ret i32 %16
}

declare i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink14XMLHttpRequest10statusTextEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 2
  br i1 %4, label %38, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %7 = load i8, i8* %6, align 1, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %38

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  %11 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse14HttpStatusTextEv(%"class.blink::ResourceResponse"* %10) #4
  %12 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %9
  %16 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse14HttpStatusTextEv(%"class.blink::ResourceResponse"* %10) #4
  %17 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  %20 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #4
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  tail call void @llvm.trap() #4
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %9, %36, %21, %15, %5, %1
  %39 = phi i64 [ 0, %1 ], [ 0, %5 ], [ %19, %15 ], [ %19, %21 ], [ %19, %36 ], [ 0, %9 ]
  %40 = inttoptr i64 %39 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %40
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16ResourceResponse14HttpStatusTextEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest7DidFailERKNS_13ResourceErrorE(%"class.blink::XMLHttpRequest"*, %"class.blink::ResourceError"* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %7 = load i8, i8* %6, align 1, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %36

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZNK5blink13ResourceError14IsCancellationEv(%"class.blink::ResourceError"* %1) #4
  br i1 %10, label %11, label %16

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.blink::ResourceError", %"class.blink::ResourceError"* %1, i64 0, i32 5
  %13 = load i8, i8* %12, align 8, !range !6
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %11
  tail call void @_ZN5blink14XMLHttpRequest15HandleDidCancelEv(%"class.blink::XMLHttpRequest"* %0)
  br label %36

16:                                               ; preds = %11, %9
  %17 = tail call zeroext i1 @_ZNK5blink13ResourceError9IsTimeoutEv(%"class.blink::ResourceError"* %1) #4
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0) #4
  %19 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kTimeoutE, align 8
  tail call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %0, i32 23, %"class.WTF::AtomicString"* dereferenceable(8) %19) #4
  br label %36

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::ResourceError", %"class.blink::ResourceError"* %1, i64 0, i32 11
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::DOMException"* @_ZN5blink29TrustTokenErrorToDOMExceptionEN7network5mojom25TrustTokenOperationStatusE(i32 %22) #4
  %26 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 11
  %27 = ptrtoint %"class.blink::DOMException"* %25 to i64
  %28 = bitcast %"class.blink::Member.43"* %26 to i64*
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.blink::DOMException"* %25 to i8*
  %33 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %32) #4
  br label %34

34:                                               ; preds = %31, %24, %20
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0) #4
  %35 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  tail call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %0, i32 19, %"class.WTF::AtomicString"* dereferenceable(8) %35) #4
  br label %36

36:                                               ; preds = %2, %34, %18, %15
  %37 = load i32, i32* %3, align 4
  %38 = add nsw i32 %37, -1
  store i32 %38, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZNK5blink13ResourceError14IsCancellationEv(%"class.blink::ResourceError"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink13ResourceError9IsTimeoutEv(%"class.blink::ResourceError"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest16HandleDidTimeoutEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0)
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kTimeoutE, align 8
  tail call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %0, i32 23, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  ret void
}

declare %"class.blink::DOMException"* @_ZN5blink29TrustTokenErrorToDOMExceptionEN7network5mojom25TrustTokenOperationStatusE(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink14XMLHttpRequest7DidFailERKNS_13ResourceErrorE(%"class.blink::XMLHttpRequest"*, %"class.blink::ResourceError"* dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 32
  %4 = bitcast %"class.v8::Isolate"** %3 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZN5blink14XMLHttpRequest7DidFailERKNS_13ResourceErrorE(%"class.blink::XMLHttpRequest"* %4, %"class.blink::ResourceError"* dereferenceable(208) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest20DidFailRedirectCheckEv(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 4
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0) #4
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  tail call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %0, i32 19, %"class.WTF::AtomicString"* dereferenceable(8) %5) #4
  %6 = load i32, i32* %2, align 4
  %7 = add nsw i32 %6, -1
  store i32 %7, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink14XMLHttpRequest20DidFailRedirectCheckEv(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 32
  %3 = bitcast %"class.v8::Isolate"** %2 to %"class.blink::XMLHttpRequest"*
  %4 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %2, i64 195
  %5 = bitcast %"class.v8::Isolate"** %4 to i32*
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 4
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %3) #4
  %8 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  tail call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %3, i32 19, %"class.WTF::AtomicString"* dereferenceable(8) %8) #4
  %9 = load i32, i32* %5, align 4
  %10 = add nsw i32 %9, -1
  store i32 %10, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest16DidFinishLoadingEm(%"class.blink::XMLHttpRequest"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %8 = load i8, i8* %7, align 1, !range !6
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %69

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %12, 2
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i32 2, i32* %11, align 8
  tail call void @_ZN5blink14XMLHttpRequest29DispatchReadyStateChangeEventEv(%"class.blink::XMLHttpRequest"* %0) #4
  br label %15

15:                                               ; preds = %14, %10
  %16 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 43
  %17 = load i8, i8* %16, align 2, !range !6
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %68, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 4
  br i1 %22, label %68, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 14, i32 0, i32 0
  %25 = load %"class.blink::Blob"*, %"class.blink::Blob"** %24, align 8
  %26 = icmp eq %"class.blink::Blob"* %25, null
  br i1 %26, label %68, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::Blob", %"class.blink::Blob"* %25, i64 0, i32 3, i32 0
  %29 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %28, align 8
  %30 = icmp eq %"class.blink::BlobDataHandle"* %29, null
  br i1 %30, label %38, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 1 monotonic
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.75, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.76, i64 0, i64 0)) #4
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #4
  br label %38

38:                                               ; preds = %27, %31, %35
  %39 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14XMLHttpRequest10BlobLoaderEEEPhm(i64 24) #4
  %40 = bitcast i8* %39 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14XMLHttpRequest10BlobLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds i8, i8* %39, i64 8
  %42 = bitcast i8* %41 to %"class.blink::XMLHttpRequest"**
  store %"class.blink::XMLHttpRequest"* %0, %"class.blink::XMLHttpRequest"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %44 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %43 to %"class.blink::ExecutionContextLifecycleObserver"*
  %45 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %44) #4
  %46 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %45, i64 0, i32 1
  %47 = bitcast %"class.blink::MojoBindingContext"* %46 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %48 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %47, align 8
  %49 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %48, i64 6
  %50 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %49, align 8
  %51 = call %"class.base::SingleThreadTaskRunner"* %50(%"class.blink::MojoBindingContext"* %46, i8 zeroext 15) #4
  %52 = call noalias i8* @malloc(i64 296) #4
  %53 = bitcast i8* %52 to %"class.blink::FileReaderLoader"*
  %54 = bitcast i8* %39 to %"class.blink::FileReaderLoaderClient"*
  call void @_ZN5blink16FileReaderLoaderC1ENS0_8ReadTypeEPNS_22FileReaderLoaderClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::FileReaderLoader"* %53, i32 4, %"class.blink::FileReaderLoaderClient"* %54, %"class.base::SingleThreadTaskRunner"* %51) #4
  %55 = getelementptr inbounds i8, i8* %39, i64 16
  %56 = bitcast i8* %55 to i8**
  store i8* %52, i8** %56, align 8
  call void @_ZN5blink16FileReaderLoader5StartE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::FileReaderLoader"* %53, %"class.blink::BlobDataHandle"* %29) #4
  %57 = getelementptr inbounds i8, i8* %39, i64 -4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = or i16 %59, 1
  store atomic i16 %60, i16* %58 release, align 2
  %61 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 35
  %62 = ptrtoint i8* %39 to i64
  %63 = bitcast %"class.blink::Member.362"* %61 to i64*
  store atomic i64 %62, i64* %63 monotonic, align 8
  %64 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %38
  %67 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #4
  br label %69

68:                                               ; preds = %23, %19, %15
  tail call void @_ZN5blink14XMLHttpRequest24DidFinishLoadingInternalEv(%"class.blink::XMLHttpRequest"* %0)
  br label %69

69:                                               ; preds = %38, %66, %68, %2
  %70 = load i32, i32* %4, align 4
  %71 = add nsw i32 %70, -1
  store i32 %71, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest24DidFinishLoadingInternalEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 22, i32 0, i32 0
  %4 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %3, align 8
  %5 = icmp eq %"class.blink::DocumentParser"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::DocumentParser"* %4 to void (%"class.blink::DocumentParser"*)***
  %8 = load void (%"class.blink::DocumentParser"*)**, void (%"class.blink::DocumentParser"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %8, i64 13
  %10 = load void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %9, align 8
  tail call void %10(%"class.blink::DocumentParser"* nonnull %4) #4
  br label %107

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %13 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %12, align 8
  %14 = icmp eq %"class.blink::TextResourceDecoder"* %13, null
  br i1 %14, label %79, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #4
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %18 = tail call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"* nonnull %13) #4
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 2
  br i1 %21, label %22, label %39

22:                                               ; preds = %15
  %23 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %12, align 8
  %24 = tail call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #4
  %25 = getelementptr inbounds %"class.blink::TextResourceDecoder", %"class.blink::TextResourceDecoder"* %23, i64 0, i32 1, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %24, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %26, %28
  br i1 %29, label %39, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %32 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %31 to %"class.blink::ExecutionContextLifecycleObserver"*
  %33 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %32) #4
  %34 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %33, i64 0, i32 3
  %35 = bitcast %"class.blink::UseCounter"* %34 to void (%"class.blink::UseCounter"*, i32)***
  %36 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %36, i64 3
  %38 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %37, align 8
  tail call void %38(%"class.blink::UseCounter"* %34, i32 3858) #4
  br label %39

39:                                               ; preds = %30, %22, %15
  %40 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %40, label %78, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %64, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 44
  %47 = load i8, i8* %46, align 1, !range !6
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %64

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 20
  %51 = bitcast %"class.blink::TraceWrapperV8String"* %50 to i8*
  %52 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %51, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 320)
  %53 = bitcast i8* %52 to %"class.blink::TraceWrapperV8String"*
  %54 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 32
  %55 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %54, align 8
  call void @_ZN5blink20TraceWrapperV8String6ConcatEPN2v87IsolateERKN3WTF6StringE(%"class.blink::TraceWrapperV8String"* %53, %"class.v8::Isolate"* %55, %"class.WTF::String"* nonnull dereferenceable(8) %2) #4
  %56 = call i8* @llvm.ptr.annotation.p0i8(i8* %51, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 320)
  %57 = getelementptr inbounds i8, i8* %56, i64 8
  %58 = bitcast i8* %57 to i64**
  %59 = load i64*, i64** %58, align 8
  %60 = icmp eq i64* %59, null
  %61 = zext i1 %60 to i8
  store i8 %61, i8* %46, align 1
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %78, label %64

64:                                               ; preds = %41, %45, %49
  %65 = phi %"class.WTF::StringImpl"* [ %62, %49 ], [ %18, %45 ], [ %18, %41 ]
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %64
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %64
  %75 = phi i32 [ %73, %72 ], [ %71, %64 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #4
  br label %78

78:                                               ; preds = %39, %49, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #4
  br label %79

79:                                               ; preds = %11, %78
  %80 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 35
  %81 = getelementptr inbounds %"class.blink::Member.362", %"class.blink::Member.362"* %80, i64 0, i32 0, i32 0
  %82 = load %"class.blink::XMLHttpRequest::BlobLoader"*, %"class.blink::XMLHttpRequest::BlobLoader"** %81, align 8
  %83 = icmp eq %"class.blink::XMLHttpRequest::BlobLoader"* %82, null
  br i1 %83, label %88, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.blink::XMLHttpRequest::BlobLoader", %"class.blink::XMLHttpRequest::BlobLoader"* %82, i64 0, i32 2, i32 0, i32 0, i32 0
  %86 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %85, align 8
  call void @_ZN5blink16FileReaderLoader6CancelEv(%"class.blink::FileReaderLoader"* %86) #4
  %87 = bitcast %"class.blink::Member.362"* %80 to i64*
  store atomic i64 0, i64* %87 monotonic, align 8
  br label %88

88:                                               ; preds = %84, %79
  %89 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %12, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %12, align 8
  %90 = icmp eq %"class.blink::TextResourceDecoder"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %89) #4
  %92 = bitcast %"class.blink::TextResourceDecoder"* %89 to i8*
  call void @free(i8* %92) #4
  br label %93

93:                                               ; preds = %91, %88
  %94 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 22
  %95 = getelementptr inbounds %"class.blink::Member.131", %"class.blink::Member.131"* %94, i64 0, i32 0, i32 0
  %96 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %95, align 8
  %97 = icmp eq %"class.blink::DocumentParser"* %96, null
  br i1 %97, label %106, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 2
  call void @_ZN5blink14DocumentParser12RemoveClientEPNS_20DocumentParserClientE(%"class.blink::DocumentParser"* nonnull %96, %"class.blink::DocumentParserClient"* %99) #4
  %100 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %95, align 8
  %101 = bitcast %"class.blink::DocumentParser"* %100 to void (%"class.blink::DocumentParser"*)***
  %102 = load void (%"class.blink::DocumentParser"*)**, void (%"class.blink::DocumentParser"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %102, i64 16
  %104 = load void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %103, align 8
  call void %104(%"class.blink::DocumentParser"* %100) #4
  %105 = bitcast %"class.blink::Member.131"* %94 to i64*
  store atomic i64 0, i64* %105 monotonic, align 8
  br label %106

106:                                              ; preds = %93, %98
  call void @_ZN5blink14XMLHttpRequest10EndLoadingEv(%"class.blink::XMLHttpRequest"* %0)
  br label %107

107:                                              ; preds = %106, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink14XMLHttpRequest16DidFinishLoadingEm(%"class.blink::XMLHttpRequest"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 32
  %4 = bitcast %"class.v8::Isolate"** %3 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZN5blink14XMLHttpRequest16DidFinishLoadingEm(%"class.blink::XMLHttpRequest"* %4, i64 undef)
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder5FlushEv(%"class.blink::TextResourceDecoder"*) local_unnamed_addr #2

declare void @_ZN5blink20TraceWrapperV8String6ConcatEPN2v87IsolateERKN3WTF6StringE(%"class.blink::TraceWrapperV8String"*, %"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest10EndLoadingEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %3) #4
  %5 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic", %"struct.std::__1::atomic"* @_ZN5blink13CoreProbeSink16s_existingAgentsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) acquire, align 4
  %6 = and i32 %5, 16384
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %1
  tail call void @_ZN5blink5probe16DidFinishXHRImplEPNS_16ExecutionContextEPNS_14XMLHttpRequestE(%"class.blink::ExecutionContext"* %4, %"class.blink::XMLHttpRequest"* %0) #4
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 16, i32 0
  %11 = getelementptr inbounds %"class.blink::MemberBase.56", %"class.blink::MemberBase.56"* %10, i64 0, i32 0
  %12 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %11, align 8
  %13 = icmp eq %"class.blink::ThreadableLoader"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %16 = load i8, i8* %15, align 1, !range !6
  store i8 1, i8* %15, align 1
  %17 = bitcast %"class.blink::MemberBase.56"* %10 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  tail call void @_ZN5blink16ThreadableLoader6CancelEv(%"class.blink::ThreadableLoader"* nonnull %12) #4
  %18 = icmp eq i8* %15, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  store i8 %16, i8* %15, align 1
  br label %20

20:                                               ; preds = %9, %19, %14
  %21 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 45
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 4
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  store i32 4, i32* %22, align 8
  tail call void @_ZN5blink14XMLHttpRequest29DispatchReadyStateChangeEventEv(%"class.blink::XMLHttpRequest"* %0) #4
  br label %26

26:                                               ; preds = %20, %25
  %27 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %3) #4
  %28 = icmp eq %"class.blink::ExecutionContext"* %27, null
  br i1 %28, label %68, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.blink::ExecutionContext"* %27 to i1 (%"class.blink::ExecutionContext"*)***
  %31 = load i1 (%"class.blink::ExecutionContext"*)**, i1 (%"class.blink::ExecutionContext"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %31, i64 1
  %33 = load i1 (%"class.blink::ExecutionContext"*)*, i1 (%"class.blink::ExecutionContext"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::ExecutionContext"* nonnull %27) #4
  br i1 %34, label %35, label %68

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %27, i64 -1, i32 8
  %37 = icmp eq i32* %36, null
  br i1 %37, label %68, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds i32, i32* %36, i64 18
  %40 = bitcast i32* %39 to %"class.blink::LocalFrame"**
  %41 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %40, align 8
  %42 = icmp eq %"class.blink::LocalFrame"* %41, null
  br i1 %42, label %68, label %43

43:                                               ; preds = %38
  %44 = load i32, i32* %22, align 8
  %45 = icmp ult i32 %44, 2
  br i1 %45, label %56, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %48 = load i8, i8* %47, align 1, !range !6
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  %52 = tail call i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"* %51) #4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = tail call i32 @_ZNK5blink16ResourceResponse14HttpStatusCodeEv(%"class.blink::ResourceResponse"* %51) #4
  br label %56

56:                                               ; preds = %43, %46, %50, %54
  %57 = phi i32 [ %55, %54 ], [ 0, %43 ], [ 0, %46 ], [ 0, %50 ]
  %58 = tail call zeroext i1 @_ZN5blink4cors10IsOkStatusEi(i32 %57) #4
  br i1 %58, label %59, label %68

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %41, i64 0, i32 0
  %61 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %60) #4
  %62 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %61, i64 0, i32 7, i32 0, i32 0
  %63 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %62, align 8
  %64 = bitcast %"class.blink::ChromeClient"* %63 to void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)***
  %65 = load void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)**, void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)** %65, i64 92
  %67 = load void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)*, void (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)** %66, align 8
  tail call void %67(%"class.blink::ChromeClient"* %63, %"class.blink::LocalFrame"* nonnull %41) #4
  br label %68

68:                                               ; preds = %26, %29, %56, %59, %38, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest24DidFinishLoadingFromBlobEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 4
  tail call void @_ZN5blink14XMLHttpRequest24DidFinishLoadingInternalEv(%"class.blink::XMLHttpRequest"* %0)
  %5 = load i32, i32* %2, align 4
  %6 = add nsw i32 %5, -1
  store i32 %6, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest22DidFailLoadingFromBlobEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 4
  %5 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %6 = load i8, i8* %5, align 1, !range !6
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0) #4
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  tail call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %0, i32 19, %"class.WTF::AtomicString"* dereferenceable(8) %9) #4
  %10 = load i32, i32* %2, align 4
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi i32 [ %4, %1 ], [ %10, %8 ]
  %13 = add nsw i32 %12, -1
  store i32 %13, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest19NotifyParserStoppedEv(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 4
  %5 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %6 = load i8, i8* %5, align 1, !range !6
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %48

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 35
  %10 = getelementptr inbounds %"class.blink::Member.362", %"class.blink::Member.362"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.blink::XMLHttpRequest::BlobLoader"*, %"class.blink::XMLHttpRequest::BlobLoader"** %10, align 8
  %12 = icmp eq %"class.blink::XMLHttpRequest::BlobLoader"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::XMLHttpRequest::BlobLoader", %"class.blink::XMLHttpRequest::BlobLoader"* %11, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %14, align 8
  tail call void @_ZN5blink16FileReaderLoader6CancelEv(%"class.blink::FileReaderLoader"* %15) #4
  %16 = bitcast %"class.blink::Member.362"* %9 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  br label %17

17:                                               ; preds = %13, %8
  %18 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %19 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %18, align 8
  store %"class.blink::TextResourceDecoder"* null, %"class.blink::TextResourceDecoder"** %18, align 8
  %20 = icmp eq %"class.blink::TextResourceDecoder"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  tail call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %19) #4
  %22 = bitcast %"class.blink::TextResourceDecoder"* %19 to i8*
  tail call void @free(i8* %22) #4
  br label %23

23:                                               ; preds = %21, %17
  %24 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 22
  %25 = getelementptr inbounds %"class.blink::Member.131", %"class.blink::Member.131"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %25, align 8
  %27 = icmp eq %"class.blink::DocumentParser"* %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 2
  tail call void @_ZN5blink14DocumentParser12RemoveClientEPNS_20DocumentParserClientE(%"class.blink::DocumentParser"* nonnull %26, %"class.blink::DocumentParserClient"* %29) #4
  %30 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %25, align 8
  %31 = bitcast %"class.blink::DocumentParser"* %30 to void (%"class.blink::DocumentParser"*)***
  %32 = load void (%"class.blink::DocumentParser"*)**, void (%"class.blink::DocumentParser"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %32, i64 16
  %34 = load void (%"class.blink::DocumentParser"*)*, void (%"class.blink::DocumentParser"*)** %33, align 8
  tail call void %34(%"class.blink::DocumentParser"* %30) #4
  %35 = bitcast %"class.blink::Member.131"* %24 to i64*
  store atomic i64 0, i64* %35 monotonic, align 8
  br label %36

36:                                               ; preds = %23, %28
  %37 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 21
  %38 = getelementptr inbounds %"class.blink::Member.129", %"class.blink::Member.129"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %39, i64 0, i32 18
  %41 = load i8, i8* %40, align 8, !range !6
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %36
  %44 = bitcast %"class.blink::Member.129"* %37 to i64*
  store atomic i64 0, i64* %44 monotonic, align 8
  br label %45

45:                                               ; preds = %36, %43
  %46 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 39
  store i8 1, i8* %46, align 2
  tail call void @_ZN5blink14XMLHttpRequest10EndLoadingEv(%"class.blink::XMLHttpRequest"* %0)
  %47 = load i32, i32* %2, align 4
  br label %48

48:                                               ; preds = %1, %45
  %49 = phi i32 [ %4, %1 ], [ %47, %45 ]
  %50 = add nsw i32 %49, -1
  store i32 %50, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_N5blink14XMLHttpRequest19NotifyParserStoppedEv(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 31
  %3 = bitcast i32* %2 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZN5blink14XMLHttpRequest19NotifyParserStoppedEv(%"class.blink::XMLHttpRequest"* %3)
  ret void
}

declare zeroext i1 @_ZN5blink4cors10IsOkStatusEi(i32) local_unnamed_addr #2

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest11DidSendDataEmm(%"class.blink::XMLHttpRequest"*, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 4
  %7 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 5, i32 0, i32 0
  %8 = load %"class.blink::XMLHttpRequestUpload"*, %"class.blink::XMLHttpRequestUpload"** %7, align 8
  %9 = icmp eq %"class.blink::XMLHttpRequestUpload"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 41
  %12 = load i8, i8* %11, align 8, !range !6
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %10
  tail call void @_ZN5blink20XMLHttpRequestUpload21DispatchProgressEventEmm(%"class.blink::XMLHttpRequestUpload"* nonnull %8, i64 %1, i64 %2) #4
  br label %15

15:                                               ; preds = %10, %14
  %16 = icmp eq i64 %1, %2
  br i1 %16, label %17, label %27

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 42
  %19 = load i8, i8* %18, align 1, !range !6
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  store i8 1, i8* %18, align 1
  %22 = load i8, i8* %11, align 8, !range !6
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = load %"class.blink::XMLHttpRequestUpload"*, %"class.blink::XMLHttpRequestUpload"** %7, align 8
  %26 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kLoadE, align 8
  tail call void @_ZN5blink20XMLHttpRequestUpload23DispatchEventAndLoadEndERKN3WTF12AtomicStringEbmm(%"class.blink::XMLHttpRequestUpload"* %25, %"class.WTF::AtomicString"* dereferenceable(8) %26, i1 zeroext true, i64 %1, i64 %1) #4
  br label %27

27:                                               ; preds = %3, %15, %24, %17, %21
  %28 = load i32, i32* %4, align 4
  %29 = add nsw i32 %28, -1
  store i32 %29, i32* %4, align 4
  ret void
}

declare void @_ZN5blink20XMLHttpRequestUpload21DispatchProgressEventEmm(%"class.blink::XMLHttpRequestUpload"*, i64, i64) local_unnamed_addr #2

declare void @_ZN5blink20XMLHttpRequestUpload23DispatchEventAndLoadEndERKN3WTF12AtomicStringEbmm(%"class.blink::XMLHttpRequestUpload"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink14XMLHttpRequest11DidSendDataEmm(%"class.blink::XMLHttpRequest"* nocapture, i64, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 32
  %5 = bitcast %"class.v8::Isolate"** %4 to %"class.blink::XMLHttpRequest"*
  %6 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, i64 195
  %7 = bitcast %"class.v8::Isolate"** %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, i64 15
  %11 = bitcast %"class.v8::Isolate"** %10 to %"class.blink::XMLHttpRequestUpload"**
  %12 = load %"class.blink::XMLHttpRequestUpload"*, %"class.blink::XMLHttpRequestUpload"** %11, align 8
  %13 = icmp eq %"class.blink::XMLHttpRequestUpload"* %12, null
  br i1 %13, label %32, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, i64 196
  %16 = bitcast %"class.v8::Isolate"** %15 to i8*
  %17 = load i8, i8* %16, align 8, !range !6
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  tail call void @_ZN5blink20XMLHttpRequestUpload21DispatchProgressEventEmm(%"class.blink::XMLHttpRequestUpload"* nonnull %12, i64 %1, i64 %2) #4
  br label %20

20:                                               ; preds = %19, %14
  %21 = icmp eq i64 %1, %2
  br i1 %21, label %22, label %32

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %5, i64 0, i32 42
  %24 = load i8, i8* %23, align 1, !range !6
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  store i8 1, i8* %23, align 1
  %27 = load i8, i8* %16, align 8, !range !6
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = load %"class.blink::XMLHttpRequestUpload"*, %"class.blink::XMLHttpRequestUpload"** %11, align 8
  %31 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names5kLoadE, align 8
  tail call void @_ZN5blink20XMLHttpRequestUpload23DispatchEventAndLoadEndERKN3WTF12AtomicStringEbmm(%"class.blink::XMLHttpRequestUpload"* %30, %"class.WTF::AtomicString"* dereferenceable(8) %31, i1 zeroext true, i64 %1, i64 %1) #4
  br label %32

32:                                               ; preds = %3, %20, %22, %26, %29
  %33 = load i32, i32* %7, align 4
  %34 = add nsw i32 %33, -1
  store i32 %34, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest18DidReceiveResponseEmRKNS_16ResourceResponseE(%"class.blink::XMLHttpRequest"*, i64, %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq %"class.blink::ResourceResponse"* %2, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 1821, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i64 0, i64 0)) #4
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #4
  br label %9

9:                                                ; preds = %3, %6
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 4
  %13 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 18
  %14 = call dereferenceable(1072) %"class.blink::ResourceResponse"* @_ZN5blink16ResourceResponseaSERKS0_(%"class.blink::ResourceResponse"* %13, %"class.blink::ResourceResponse"* dereferenceable(1072) %2) #4
  %15 = load i32, i32* %10, align 4
  %16 = add nsw i32 %15, -1
  store i32 %16, i32* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink14XMLHttpRequest18DidReceiveResponseEmRKNS_16ResourceResponseE(%"class.blink::XMLHttpRequest"*, i64, %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 32
  %6 = icmp eq %"class.blink::ResourceResponse"* %2, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 1821, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i64 0, i64 0)) #4
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #4
  br label %10

10:                                               ; preds = %3, %7
  %11 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, i64 195
  %12 = bitcast %"class.v8::Isolate"** %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, i64 43
  %16 = bitcast %"class.v8::Isolate"** %15 to %"class.blink::ResourceResponse"*
  %17 = call dereferenceable(1072) %"class.blink::ResourceResponse"* @_ZN5blink16ResourceResponseaSERKS0_(%"class.blink::ResourceResponse"* %16, %"class.blink::ResourceResponse"* dereferenceable(1072) %2) #4
  %18 = load i32, i32* %12, align 4
  %19 = add nsw i32 %18, -1
  store i32 %19, i32* %12, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest18ParseDocumentChunkEPKcj(%"class.blink::XMLHttpRequest"*, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 22
  %5 = getelementptr inbounds %"class.blink::Member.131", %"class.blink::Member.131"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %5, align 8
  %7 = icmp eq %"class.blink::DocumentParser"* %6, null
  br i1 %7, label %8, label %28

8:                                                ; preds = %3
  tail call void @_ZN5blink14XMLHttpRequest20InitResponseDocumentEv(%"class.blink::XMLHttpRequest"* %0)
  %9 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 21, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = icmp eq %"class.blink::Document"* %10, null
  br i1 %11, label %49, label %12

12:                                               ; preds = %8
  %13 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase42is_force_synchronous_html_parsing_enabled_E, align 1, !range !6
  %14 = zext i8 %13 to i32
  %15 = tail call %"class.blink::DocumentParser"* @_ZN5blink8Document12ImplicitOpenENS_27ParserSynchronizationPolicyE(%"class.blink::Document"* nonnull %10, i32 %14) #4
  %16 = ptrtoint %"class.blink::DocumentParser"* %15 to i64
  %17 = bitcast %"class.blink::Member.131"* %4 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %12
  %21 = bitcast %"class.blink::DocumentParser"* %15 to i8*
  %22 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #4
  %23 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %5, align 8
  br label %24

24:                                               ; preds = %12, %20
  %25 = phi %"class.blink::DocumentParser"* [ %15, %12 ], [ %23, %20 ]
  %26 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 2
  tail call void @_ZN5blink14DocumentParser9AddClientEPNS_20DocumentParserClientE(%"class.blink::DocumentParser"* %25, %"class.blink::DocumentParserClient"* %26) #4
  %27 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %5, align 8
  br label %28

28:                                               ; preds = %3, %24
  %29 = phi %"class.blink::DocumentParser"* [ %6, %3 ], [ %27, %24 ]
  %30 = bitcast %"class.blink::DocumentParser"* %29 to i1 (%"class.blink::DocumentParser"*)***
  %31 = load i1 (%"class.blink::DocumentParser"*)**, i1 (%"class.blink::DocumentParser"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::DocumentParser"*)*, i1 (%"class.blink::DocumentParser"*)** %31, i64 8
  %33 = load i1 (%"class.blink::DocumentParser"*)*, i1 (%"class.blink::DocumentParser"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::DocumentParser"* %29) #4
  br i1 %34, label %35, label %42

35:                                               ; preds = %28
  %36 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %5, align 8
  %37 = tail call %"class.blink::TextResourceDecoder"* @_ZNK5blink14XMLHttpRequest13CreateDecoderEv(%"class.blink::XMLHttpRequest"* %0)
  %38 = bitcast %"class.blink::DocumentParser"* %36 to void (%"class.blink::DocumentParser"*, %"class.blink::TextResourceDecoder"*)***
  %39 = load void (%"class.blink::DocumentParser"*, %"class.blink::TextResourceDecoder"*)**, void (%"class.blink::DocumentParser"*, %"class.blink::TextResourceDecoder"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::DocumentParser"*, %"class.blink::TextResourceDecoder"*)*, void (%"class.blink::DocumentParser"*, %"class.blink::TextResourceDecoder"*)** %39, i64 9
  %41 = load void (%"class.blink::DocumentParser"*, %"class.blink::TextResourceDecoder"*)*, void (%"class.blink::DocumentParser"*, %"class.blink::TextResourceDecoder"*)** %40, align 8
  tail call void %41(%"class.blink::DocumentParser"* %36, %"class.blink::TextResourceDecoder"* %37) #4
  br label %42

42:                                               ; preds = %35, %28
  %43 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %5, align 8
  %44 = zext i32 %2 to i64
  %45 = bitcast %"class.blink::DocumentParser"* %43 to void (%"class.blink::DocumentParser"*, i8*, i64)***
  %46 = load void (%"class.blink::DocumentParser"*, i8*, i64)**, void (%"class.blink::DocumentParser"*, i8*, i64)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::DocumentParser"*, i8*, i64)*, void (%"class.blink::DocumentParser"*, i8*, i64)** %46, i64 7
  %48 = load void (%"class.blink::DocumentParser"*, i8*, i64)*, void (%"class.blink::DocumentParser"*, i8*, i64)** %47, align 8
  tail call void %48(%"class.blink::DocumentParser"* %43, i8* %1, i64 %44) #4
  br label %49

49:                                               ; preds = %8, %42
  ret void
}

declare %"class.blink::DocumentParser"* @_ZN5blink8Document12ImplicitOpenENS_27ParserSynchronizationPolicyE(%"class.blink::Document"*, i32) local_unnamed_addr #2

declare void @_ZN5blink14DocumentParser9AddClientEPNS_20DocumentParserClientE(%"class.blink::DocumentParser"*, %"class.blink::DocumentParserClient"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TextResourceDecoder"* @_ZNK5blink14XMLHttpRequest13CreateDecoderEv(%"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %4 = alloca %"class.WTF::TextEncoding", align 8
  %5 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %6 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %7 = alloca %"class.WTF::TextEncoding", align 8
  %8 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %9 = bitcast %"class.blink::TextResourceDecoderOptions"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 152, i1 false)
  %10 = tail call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #4
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %3, i32 0, %"class.WTF::TextEncoding"* dereferenceable(8) %10) #4
  %11 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %18

14:                                               ; preds = %1
  %15 = call noalias i8* @malloc(i64 208) #4
  %16 = bitcast i8* %15 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %16, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %3) #4
  %17 = ptrtoint i8* %15 to i64
  br label %92

18:                                               ; preds = %1
  %19 = bitcast %"class.WTF::TextEncoding"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #4
  %20 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %4, i64 0, i32 0
  %21 = call i8* @_ZNK5blink14XMLHttpRequest20FinalResponseCharsetEv(%"class.blink::XMLHttpRequest"* %0)
  store i8* %21, i8** %20, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::TextResourceDecoderOptions"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %24) #4
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %5, i32 0, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %4) #4
  %25 = call noalias i8* @malloc(i64 208) #4
  %26 = bitcast i8* %25 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %26, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %5) #4
  %27 = ptrtoint i8* %25 to i64
  br label %87

28:                                               ; preds = %18
  %29 = bitcast %"class.blink::TextResourceDecoderOptions"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %29) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 152, i1 false)
  %30 = bitcast %"class.WTF::TextEncoding"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %7, i64 0, i32 0
  store i8* null, i8** %31, align 8
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %6, i32 3, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %7) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  %32 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %6, i64 0, i32 4
  store i8 1, i8* %32, align 1
  %33 = load i32, i32* %11, align 8
  switch i32 %33, label %87 [
    i32 0, label %34
    i32 1, label %40
    i32 3, label %44
  ]

34:                                               ; preds = %28
  %35 = call zeroext i1 @_ZNK5blink14XMLHttpRequest13ResponseIsXMLEv(%"class.blink::XMLHttpRequest"* %0)
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = call noalias i8* @malloc(i64 208) #4
  %38 = bitcast i8* %37 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %38, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %6) #4
  %39 = ptrtoint i8* %37 to i64
  br label %87

40:                                               ; preds = %34, %28
  %41 = call noalias i8* @malloc(i64 208) #4
  %42 = bitcast i8* %41 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %42, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %3) #4
  %43 = ptrtoint i8* %41 to i64
  br label %87

44:                                               ; preds = %28
  %45 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #4
  %46 = call %"class.WTF::StringImpl"* @_ZNK5blink14XMLHttpRequest21FinalResponseMIMETypeEv(%"class.blink::XMLHttpRequest"* %0) #4
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %49, align 8
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %51 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 0, i32* %52, align 8
  %53 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [10 x i8]* nonnull dereferenceable(10) @.str.59) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #4
  br i1 %53, label %76, label %83

54:                                               ; preds = %44
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %46, %"class.WTF::StringImpl"** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 1
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %60 = bitcast i8** %59 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %57, i32* %61, align 8
  %62 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [10 x i8]* nonnull dereferenceable(10) @.str.59) #4
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %54
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %54
  %72 = phi i32 [ %70, %69 ], [ %68, %54 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #4
  br i1 %62, label %76, label %83

75:                                               ; preds = %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #4
  br i1 %62, label %76, label %83

76:                                               ; preds = %74, %48, %75
  %77 = bitcast %"class.blink::TextResourceDecoderOptions"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %77) #4
  %78 = call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #4
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %8, i32 1, %"class.WTF::TextEncoding"* dereferenceable(8) %78) #4
  %79 = call noalias i8* @malloc(i64 208) #4
  %80 = bitcast i8* %79 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %80, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %8) #4
  %81 = ptrtoint i8* %79 to i64
  %82 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %8, i64 0, i32 7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %82) #4
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %77) #4
  br label %87

83:                                               ; preds = %74, %48, %75
  %84 = call noalias i8* @malloc(i64 208) #4
  %85 = bitcast i8* %84 to %"class.blink::TextResourceDecoder"*
  call void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"* %85, %"class.blink::TextResourceDecoderOptions"* nonnull dereferenceable(152) %6) #4
  %86 = ptrtoint i8* %84 to i64
  br label %87

87:                                               ; preds = %36, %40, %76, %83, %28, %23
  %88 = phi %"class.blink::TextResourceDecoderOptions"* [ %5, %23 ], [ %6, %28 ], [ %6, %83 ], [ %6, %76 ], [ %6, %40 ], [ %6, %36 ]
  %89 = phi i8* [ %24, %23 ], [ %29, %28 ], [ %29, %83 ], [ %29, %76 ], [ %29, %40 ], [ %29, %36 ]
  %90 = phi i64 [ %27, %23 ], [ 0, %28 ], [ %86, %83 ], [ %81, %76 ], [ %43, %40 ], [ %39, %36 ]
  %91 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %88, i64 0, i32 7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %91) #4
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %89) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #4
  br label %92

92:                                               ; preds = %87, %14
  %93 = phi i64 [ %17, %14 ], [ %90, %87 ]
  %94 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %3, i64 0, i32 7
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %94) #4
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %9) #4
  %95 = inttoptr i64 %93 to %"class.blink::TextResourceDecoder"*
  ret %"class.blink::TextResourceDecoder"* %95
}

declare void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"*, i32, %"class.WTF::TextEncoding"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest14DidReceiveDataEPKcj(%"class.blink::XMLHttpRequest"*, i8*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %10 = load i8, i8* %9, align 1, !range !6
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %173

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, 2
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  store i32 2, i32* %13, align 8
  tail call void @_ZN5blink14XMLHttpRequest29DispatchReadyStateChangeEventEv(%"class.blink::XMLHttpRequest"* %0) #4
  %17 = load i8, i8* %9, align 1, !range !6
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi i8 [ %17, %16 ], [ 0, %12 ]
  %20 = icmp ne i8 %19, 0
  %21 = icmp eq i32 %2, 0
  %22 = or i1 %21, %20
  br i1 %22, label %173, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 31
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %27, label %62

27:                                               ; preds = %23
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #4
  %29 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14XMLHttpRequest21FinalResponseMIMETypeEv(%"class.blink::XMLHttpRequest"* %0) #4
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %32, align 8
  %33 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %34 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 0, i32* %35, align 8
  %36 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [10 x i8]* nonnull dereferenceable(10) @.str.59) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #4
  br i1 %36, label %59, label %60

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %40, i32* %44, align 8
  %45 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm10EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [10 x i8]* nonnull dereferenceable(10) @.str.59) #4
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %37
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %37
  %55 = phi i32 [ %53, %52 ], [ %51, %37 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #4
  br i1 %45, label %59, label %60

58:                                               ; preds = %54
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #4
  br i1 %45, label %59, label %60

59:                                               ; preds = %57, %31, %58
  call void @_ZN5blink14XMLHttpRequest18ParseDocumentChunkEPKcj(%"class.blink::XMLHttpRequest"* %0, i8* %1, i32 %2)
  br label %167

60:                                               ; preds = %58, %31, %57
  %61 = load i32, i32* %24, align 8
  br label %62

62:                                               ; preds = %60, %23
  %63 = phi i32 [ %61, %60 ], [ %25, %23 ]
  switch i32 %63, label %167 [
    i32 0, label %64
    i32 1, label %64
    i32 2, label %64
    i32 3, label %64
    i32 5, label %123
    i32 4, label %123
  ]

64:                                               ; preds = %62, %62, %62, %62
  %65 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 19
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.103"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %66, align 8
  %68 = icmp eq %"class.blink::TextResourceDecoder"* %67, null
  br i1 %68, label %69, label %78

69:                                               ; preds = %64
  %70 = call %"class.blink::TextResourceDecoder"* @_ZNK5blink14XMLHttpRequest13CreateDecoderEv(%"class.blink::XMLHttpRequest"* %0)
  %71 = ptrtoint %"class.blink::TextResourceDecoder"* %70 to i64
  %72 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %66, align 8
  %73 = bitcast %"class.std::__1::unique_ptr.103"* %65 to i64*
  store i64 %71, i64* %73, align 8
  %74 = icmp eq %"class.blink::TextResourceDecoder"* %72, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %69
  call void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"* nonnull %72) #4
  %76 = bitcast %"class.blink::TextResourceDecoder"* %72 to i8*
  call void @free(i8* %76) #4
  %77 = load %"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoder"** %66, align 8
  br label %78

78:                                               ; preds = %64, %69, %75
  %79 = phi %"class.blink::TextResourceDecoder"* [ %67, %64 ], [ %70, %69 ], [ %77, %75 ]
  %80 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #4
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %82 = zext i32 %2 to i64
  %83 = call %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"* %79, i8* %1, i64 %82) #4
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %81, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %122, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %108, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 44
  %91 = load i8, i8* %90, align 1, !range !6
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %108

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 20
  %95 = bitcast %"class.blink::TraceWrapperV8String"* %94 to i8*
  %96 = call i8* @llvm.ptr.annotation.p0i8(i8* %95, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 320)
  %97 = bitcast i8* %96 to %"class.blink::TraceWrapperV8String"*
  %98 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 32
  %99 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %98, align 8
  call void @_ZN5blink20TraceWrapperV8String6ConcatEPN2v87IsolateERKN3WTF6StringE(%"class.blink::TraceWrapperV8String"* %97, %"class.v8::Isolate"* %99, %"class.WTF::String"* nonnull dereferenceable(8) %5) #4
  %100 = call i8* @llvm.ptr.annotation.p0i8(i8* %95, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 320)
  %101 = getelementptr inbounds i8, i8* %100, i64 8
  %102 = bitcast i8* %101 to i64**
  %103 = load i64*, i64** %102, align 8
  %104 = icmp eq i64* %103, null
  %105 = zext i1 %104 to i8
  store i8 %105, i8* %90, align 1
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %122, label %108

108:                                              ; preds = %85, %89, %93
  %109 = phi %"class.WTF::StringImpl"* [ %106, %93 ], [ %83, %89 ], [ %83, %85 ]
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %108
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %108
  %119 = phi i32 [ %117, %116 ], [ %115, %108 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #4
  br label %122

122:                                              ; preds = %78, %93, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #4
  br label %167

123:                                              ; preds = %62, %62
  %124 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 23
  %125 = getelementptr inbounds %class.scoped_refptr.142, %class.scoped_refptr.142* %124, i64 0, i32 0
  %126 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %125, align 8
  %127 = icmp eq %"class.WTF::SharedBuffer"* %126, null
  br i1 %127, label %128, label %142

128:                                              ; preds = %123
  %129 = call noalias i8* @malloc(i64 48) #4
  %130 = bitcast i8* %129 to %"class.WTF::SharedBuffer"*
  call void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"* %130) #4
  %131 = ptrtoint i8* %129 to i64
  %132 = bitcast %class.scoped_refptr.142* %124 to i64*
  %133 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %125, align 8
  store i64 %131, i64* %132, align 8
  %134 = icmp eq %"class.WTF::SharedBuffer"* %133, null
  br i1 %134, label %142, label %135

135:                                              ; preds = %128
  %136 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %133, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %136) #4
  %137 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %133, i64 0, i32 0, i32 0, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %135
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %133) #4
  %141 = bitcast %"class.WTF::SharedBuffer"* %133 to i8*
  call void @free(i8* %141) #4
  br label %142

142:                                              ; preds = %123, %140, %135, %128
  %143 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %125, align 8
  %144 = zext i32 %2 to i64
  call void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"* %143, i8* %1, i64 %144) #4
  %145 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 23, i32 0
  %146 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %145, align 8
  %147 = icmp eq %"class.WTF::SharedBuffer"* %146, null
  br i1 %147, label %151, label %148

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %146, i64 0, i32 1
  %150 = load i64, i64* %149, align 8
  br label %151

151:                                              ; preds = %148, %142
  %152 = phi i64 [ %150, %148 ], [ 0, %142 ]
  %153 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 24
  %154 = load i64, i64* %153, align 8
  %155 = sub nsw i64 %152, %154
  store i64 %152, i64* %153, align 8
  %156 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 25
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 26
  %159 = load i64, i64* %158, align 8
  %160 = sub nsw i64 %157, %159
  %161 = add nsw i64 %160, %155
  store i64 %157, i64* %158, align 8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %167, label %163

163:                                              ; preds = %151
  %164 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 32
  %165 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %164, align 8
  %166 = call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %165, i64 %161) #4
  br label %167

167:                                              ; preds = %163, %151, %62, %122, %59
  %168 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 35, i32 0, i32 0
  %169 = load %"class.blink::XMLHttpRequest::BlobLoader"*, %"class.blink::XMLHttpRequest::BlobLoader"** %168, align 8
  %170 = icmp eq %"class.blink::XMLHttpRequest::BlobLoader"* %169, null
  br i1 %170, label %171, label %173

171:                                              ; preds = %167
  %172 = zext i32 %2 to i64
  call void @_ZN5blink14XMLHttpRequest13TrackProgressEm(%"class.blink::XMLHttpRequest"* %0, i64 %172)
  br label %173

173:                                              ; preds = %167, %18, %3, %171
  %174 = load i32, i32* %6, align 4
  %175 = add nsw i32 %174, -1
  store i32 %175, i32* %6, align 4
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19TextResourceDecoder6DecodeEPKcm(%"class.blink::TextResourceDecoder"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink14XMLHttpRequest14DidReceiveDataEPKcj(%"class.blink::XMLHttpRequest"*, i8*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 32
  %5 = bitcast %"class.v8::Isolate"** %4 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZN5blink14XMLHttpRequest14DidReceiveDataEPKcj(%"class.blink::XMLHttpRequest"* %5, i8* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest15DidDownloadDataEm(%"class.blink::XMLHttpRequest"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  %4 = load i32, i32* %3, align 4
  %5 = add nsw i32 %4, 1
  store i32 %5, i32* %3, align 4
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %7 = load i8, i8* %6, align 1, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %44

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 17
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 2
  br i1 %12, label %13, label %14

13:                                               ; preds = %9
  store i32 2, i32* %10, align 8
  tail call void @_ZN5blink14XMLHttpRequest29DispatchReadyStateChangeEventEv(%"class.blink::XMLHttpRequest"* %0) #4
  br label %14

14:                                               ; preds = %13, %9
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %44, label %16

16:                                               ; preds = %14
  %17 = load i8, i8* %6, align 1, !range !6
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %44

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 25
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %1
  store i64 %22, i64* %20, align 8
  %23 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 23, i32 0
  %24 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %23, align 8
  %25 = icmp eq %"class.WTF::SharedBuffer"* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %24, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  br label %29

29:                                               ; preds = %26, %19
  %30 = phi i64 [ %28, %26 ], [ 0, %19 ]
  %31 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 24
  %32 = load i64, i64* %31, align 8
  %33 = sub nsw i64 %30, %32
  store i64 %30, i64* %31, align 8
  %34 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 26
  %35 = load i64, i64* %34, align 8
  %36 = sub nsw i64 %22, %35
  %37 = add nsw i64 %36, %33
  store i64 %22, i64* %34, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 32
  %41 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %40, align 8
  %42 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %41, i64 %37) #4
  br label %43

43:                                               ; preds = %29, %39
  tail call void @_ZN5blink14XMLHttpRequest13TrackProgressEm(%"class.blink::XMLHttpRequest"* %0, i64 %1)
  br label %44

44:                                               ; preds = %16, %14, %2, %43
  %45 = load i32, i32* %3, align 4
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink14XMLHttpRequest15DidDownloadDataEm(%"class.blink::XMLHttpRequest"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 32
  %4 = bitcast %"class.v8::Isolate"** %3 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZN5blink14XMLHttpRequest15DidDownloadDataEm(%"class.blink::XMLHttpRequest"* %4, i64 %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest17DidDownloadToBlobE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::XMLHttpRequest"*, %"class.blink::BlobDataHandle"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 40
  %10 = load i8, i8* %9, align 1, !range !6
  %11 = icmp eq i8 %10, 0
  %12 = icmp ne %"class.blink::BlobDataHandle"* %1, null
  %13 = and i1 %12, %11
  br i1 %13, label %14, label %167

14:                                               ; preds = %2
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #4
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %16, align 8
  %17 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  %18 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14XMLHttpRequest21FinalResponseMIMETypeEv(%"class.blink::XMLHttpRequest"* %0) #4
  %20 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %21 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %21, label %22, label %23

22:                                               ; preds = %14
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i64 8) #4
  br label %42

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %20, i64* %28, align 8
  br label %42

29:                                               ; preds = %23
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i64 8) #4
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #4
  br label %42

42:                                               ; preds = %22, %27, %38, %41
  %43 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  %44 = load i64, i64* %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 %44, i64* %46, align 8
  %47 = call %"class.WTF::StringImpl"* @_ZNK3WTF12AtomicString10LowerASCIIEv(%"class.WTF::AtomicString"* nonnull %5) #4
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %16, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %78, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %66

56:                                               ; preds = %49
  %57 = zext i32 %55 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #4
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !2

63:                                               ; preds = %56
  call void @llvm.trap() #4
  unreachable

64:                                               ; preds = %56
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %54, align 4
  br label %66

66:                                               ; preds = %49, %64
  %67 = phi i32 [ %65, %64 ], [ %55, %49 ]
  %68 = load atomic i32, i32* %50 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %73 = add i32 %67, -1
  store i32 %73, i32* %72, align 4
  br label %74

74:                                               ; preds = %71, %66
  %75 = phi i32 [ %73, %71 ], [ %67, %66 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #4
  br label %78

78:                                               ; preds = %42, %74, %77
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #4
  br label %94

94:                                               ; preds = %78, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  %95 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %1, i64 0, i32 2
  %96 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %95) #4
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %98 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %96, %"class.WTF::StringImpl"* %97) #4
  %99 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #4
  br label %113

113:                                              ; preds = %94, %109, %112
  br i1 %98, label %134, label %114

114:                                              ; preds = %113
  %115 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %1, i64 0, i32 3
  %116 = load i64, i64* %115, align 8
  %117 = call noalias i8* @malloc(i64 48) #4
  %118 = bitcast i8* %117 to %"class.blink::BlobData"*
  call void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"* %118, i32 1) #4
  call void @_ZN5blink8BlobData14SetContentTypeERKN3WTF6StringE(%"class.blink::BlobData"* %118, %"class.WTF::String"* nonnull dereferenceable(8) %4) #4
  call void @_ZN5blink8BlobData10AppendBlobE13scoped_refptrINS_14BlobDataHandleEEll(%"class.blink::BlobData"* %118, %"class.blink::BlobDataHandle"* nonnull %1, i64 0, i64 %116) #4
  %119 = call noalias i8* @malloc(i64 88) #4
  %120 = bitcast i8* %119 to %"class.blink::BlobDataHandle"*
  call void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"* %120, %"class.blink::BlobData"* %118, i64 %116) #4
  %121 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #4
  %122 = bitcast i8* %121 to %"class.blink::Blob"*
  call void @_ZN5blink4BlobC1E13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::Blob"* %122, %"class.blink::BlobDataHandle"* %120) #4
  %123 = getelementptr inbounds i8, i8* %121, i64 -4
  %124 = bitcast i8* %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = or i16 %125, 1
  store atomic i16 %126, i16* %124 release, align 2
  %127 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 14
  %128 = ptrtoint i8* %121 to i64
  %129 = bitcast %"class.blink::Member.45"* %127 to i64*
  store atomic i64 %128, i64* %129 monotonic, align 8
  %130 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %148, label %132

132:                                              ; preds = %114
  %133 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %121) #4
  br label %148

134:                                              ; preds = %113
  %135 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #4
  %136 = bitcast i8* %135 to %"class.blink::Blob"*
  call void @_ZN5blink4BlobC1E13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::Blob"* %136, %"class.blink::BlobDataHandle"* nonnull %1) #4
  %137 = getelementptr inbounds i8, i8* %135, i64 -4
  %138 = bitcast i8* %137 to i16*
  %139 = load atomic i16, i16* %138 monotonic, align 2
  %140 = or i16 %139, 1
  store atomic i16 %140, i16* %138 release, align 2
  %141 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 14
  %142 = ptrtoint i8* %135 to i64
  %143 = bitcast %"class.blink::Member.45"* %141 to i64*
  store atomic i64 %142, i64* %143 monotonic, align 8
  %144 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %134
  %147 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %135) #4
  br label %148

148:                                              ; preds = %146, %134, %132, %114
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #4
  br label %164

164:                                              ; preds = %163, %160, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #4
  %165 = load i32, i32* %6, align 4
  %166 = add nsw i32 %165, -1
  store i32 %166, i32* %6, align 4
  br label %175

167:                                              ; preds = %2
  store i32 %7, i32* %6, align 4
  %168 = icmp eq %"class.blink::BlobDataHandle"* %1, null
  br i1 %168, label %175, label %169

169:                                              ; preds = %167
  %170 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = atomicrmw sub i32* %170, i32 1 acq_rel
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %173, label %175

173:                                              ; preds = %169
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %1) #4
  %174 = bitcast %"class.blink::BlobDataHandle"* %1 to i8*
  tail call void @free(i8* %174) #4
  br label %175

175:                                              ; preds = %164, %167, %169, %173
  ret void
}

declare void @_ZN5blink8BlobData10AppendBlobE13scoped_refptrINS_14BlobDataHandleEEll(%"class.blink::BlobData"*, %"class.blink::BlobDataHandle"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_N5blink14XMLHttpRequest17DidDownloadToBlobE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::XMLHttpRequest"*, %"class.blink::BlobDataHandle"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 32
  %4 = bitcast %"class.v8::Isolate"** %3 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZN5blink14XMLHttpRequest17DidDownloadToBlobE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::XMLHttpRequest"* %4, %"class.blink::BlobDataHandle"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14XMLHttpRequest16ContextDestroyedEv(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 30, i32 0, i32 0
  %4 = load %"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::XMLHttpRequestProgressEventThrottle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::XMLHttpRequestProgressEventThrottle", %"class.blink::XMLHttpRequestProgressEventThrottle"* %4, i64 0, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %5) #4
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %0) #4
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 16, i32 0, i32 0
  %7 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %6, align 8
  %8 = icmp eq %"class.blink::ThreadableLoader"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 1187, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0)) #4
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #4
  br label %12

12:                                               ; preds = %1, %9
  %13 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 45
  store i8 0, i8* %13, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn96_N5blink14XMLHttpRequest16ContextDestroyedEv(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 29
  %4 = bitcast i32* %3 to %"class.blink::XMLHttpRequest"*
  %5 = getelementptr inbounds i32, i32* %3, i64 378
  %6 = bitcast i32* %5 to %"class.blink::XMLHttpRequestProgressEventThrottle"**
  %7 = load %"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::XMLHttpRequestProgressEventThrottle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::XMLHttpRequestProgressEventThrottle", %"class.blink::XMLHttpRequestProgressEventThrottle"* %7, i64 0, i32 0
  tail call void @_ZN5blink9TimerBase4StopEv(%"class.blink::TimerBase"* %8) #4
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %4) #4
  %9 = getelementptr inbounds i32, i32* %3, i64 82
  %10 = bitcast i32* %9 to %"class.blink::ThreadableLoader"**
  %11 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %10, align 8
  %12 = icmp eq %"class.blink::ThreadableLoader"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #4
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 1187, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0)) #4
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #4
  br label %16

16:                                               ; preds = %1, %13
  %17 = getelementptr inbounds i32, i32* %3, i64 393
  %18 = bitcast i32* %17 to i8*
  store i8 0, i8* %18, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14XMLHttpRequest18HasPendingActivityEv(%"class.blink::XMLHttpRequest"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 16, i32 0, i32 0
  %3 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %2, align 8
  %4 = icmp eq %"class.blink::ThreadableLoader"* %3, null
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 22, i32 0, i32 0
  %7 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %6, align 8
  %8 = icmp eq %"class.blink::DocumentParser"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 36
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  br label %13

13:                                               ; preds = %5, %1, %9
  %14 = phi i1 [ %12, %9 ], [ true, %5 ], [ true, %1 ]
  ret i1 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink14XMLHttpRequest13InterfaceNameEv(%"class.blink::XMLHttpRequest"* nocapture readnone) unnamed_addr #7 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink18event_target_names15kXMLHttpRequestE, align 8
  ret %"class.WTF::AtomicString"* %2
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #2

declare i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14XMLHttpRequest5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequest"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 14
  %4 = bitcast %"class.blink::Member.45"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4BlobEE5TraceEPNS_7VisitorEPKv) #4
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 16
  %15 = bitcast %"class.blink::Member.55"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16ThreadableLoaderEE5TraceEPNS_7VisitorEPKv) #4
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 21
  %26 = bitcast %"class.blink::Member.129"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #4
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 22
  %37 = bitcast %"class.blink::Member.131"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14DocumentParserEE5TraceEPNS_7VisitorEPKv) #4
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 27
  %48 = bitcast %"class.blink::Member.149"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %1, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14DOMArrayBufferEE5TraceEPNS_7VisitorEPKv) #4
  br label %57

57:                                               ; preds = %46, %51
  %58 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 30
  %59 = bitcast %"class.blink::Member.151"* %58 to i64*
  %60 = load atomic i64, i64* %59 monotonic, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = inttoptr i64 %60 to i8*
  %64 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %65, i64 5
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, align 8
  tail call void %67(%"class.blink::Visitor"* %1, i8* nonnull %63, i8* nonnull %63, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_35XMLHttpRequestProgressEventThrottleEE5TraceEPNS_7VisitorEPKv) #4
  br label %68

68:                                               ; preds = %57, %62
  %69 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 5
  %70 = bitcast %"class.blink::Member.13"* %69 to i64*
  %71 = load atomic i64, i64* %70 monotonic, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %68
  %74 = inttoptr i64 %71 to i8*
  %75 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %76 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %76, i64 5
  %78 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %77, align 8
  tail call void %78(%"class.blink::Visitor"* %1, i8* nonnull %74, i8* nonnull %74, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20XMLHttpRequestUploadEE5TraceEPNS_7VisitorEPKv) #4
  br label %79

79:                                               ; preds = %68, %73
  %80 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 35
  %81 = bitcast %"class.blink::Member.362"* %80 to i64*
  %82 = load atomic i64, i64* %81 monotonic, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %79
  %85 = inttoptr i64 %82 to i8*
  %86 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %87, i64 5
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %88, align 8
  tail call void %89(%"class.blink::Visitor"* %1, i8* nonnull %85, i8* nonnull %85, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14XMLHttpRequest10BlobLoaderEE5TraceEPNS_7VisitorEPKv) #4
  br label %90

90:                                               ; preds = %79, %84
  %91 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 20
  %92 = bitcast %"class.blink::TraceWrapperV8String"* %91 to i8*
  %93 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %92, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.3, i64 0, i64 0), i32 320)
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %104, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds i8, i8* %93, i64 8
  %99 = bitcast i8* %98 to %"class.blink::TraceWrapperV8Reference.2236"*
  %100 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)***
  %101 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)** %101, i64 7
  %103 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)** %102, align 8
  tail call void %103(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.2236"* dereferenceable(8) %99) #4
  br label %104

104:                                              ; preds = %90, %97
  %105 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 11
  %106 = bitcast %"class.blink::Member.43"* %105 to i64*
  %107 = load atomic i64, i64* %106 monotonic, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = inttoptr i64 %107 to i8*
  %111 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %112 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %112, i64 5
  %114 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %113, align 8
  tail call void %114(%"class.blink::Visitor"* %1, i8* nonnull %110, i8* nonnull %110, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12DOMExceptionEE5TraceEPNS_7VisitorEPKv) #4
  br label %115

115:                                              ; preds = %104, %109
  %116 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 0, i32 0, i32 1
  %117 = bitcast %"class.blink::EventTargetData"* %116 to i8*
  %118 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %117, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.62, i64 0, i64 0), i32 261) #4
  %119 = bitcast i8* %118 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %119, %"class.blink::Visitor"* %1) #4
  %120 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %120, %"class.blink::Visitor"* %1) #4
  %121 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 0, i32 4
  %122 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %121 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"* %122, %"class.blink::Visitor"* %1) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE(%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.62, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %6, %"class.blink::Visitor"* %1) #4
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %7, %"class.blink::Visitor"* %1) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink21GarbageCollectedMixin5TraceEPNS_7VisitorE(%"class.blink::GarbageCollectedMixin"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20DocumentParserClient5TraceEPNS_7VisitorE(%"class.blink::DocumentParserClient"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink14XMLHttpRequest5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequest"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 32
  %4 = bitcast %"class.v8::Isolate"** %3 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZNK5blink14XMLHttpRequest5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequest"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink14XMLHttpRequest5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequest"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 31
  %4 = bitcast i32* %3 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZNK5blink14XMLHttpRequest5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequest"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_NK5blink14XMLHttpRequest5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequest"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 30
  %4 = bitcast %"class.blink::Member.151"* %3 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZNK5blink14XMLHttpRequest5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequest"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn96_NK5blink14XMLHttpRequest5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequest"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %0, i64 -1, i32 29
  %4 = bitcast i32* %3 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZNK5blink14XMLHttpRequest5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequest"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEEPKNS_14XMLHttpRequestE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::XMLHttpRequest"*) local_unnamed_addr #0 {
  %3 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i64 0, i64 0), i64 15) #4
  %4 = bitcast %"class.blink::XMLHttpRequest"* %1 to i8*
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %3, i8* %4) #4
  ret %"class.std::__1::basic_ostream"* %5
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink14XMLHttpRequest18NameInHeapSnapshotEv(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.86, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink14XMLHttpRequest18GetWrapperTypeInfoEv(%"class.blink::XMLHttpRequest"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink14XMLHttpRequest18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #2

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #2

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #2

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.62, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.62, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink22ThreadableLoaderClient18WillFollowRedirectERKNS_4KURLERKNS_16ResourceResponseE(%"class.blink::ThreadableLoaderClient"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient27DidStartLoadingResponseBodyERNS_13BytesConsumerE(%"class.blink::ThreadableLoaderClient"*, %"class.blink::BytesConsumer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient24DidReceiveCachedMetadataEN9mojo_base9BigBufferE(%"class.blink::ThreadableLoaderClient"*, %"class.mojo_base::BigBuffer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_14XMLHttpRequestEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 1
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %3) #4
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #4
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_14XMLHttpRequestEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 30
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ThreadableLoader"**
  %4 = load %"class.blink::ThreadableLoader"*, %"class.blink::ThreadableLoader"** %3, align 8
  %5 = icmp eq %"class.blink::ThreadableLoader"* %4, null
  br i1 %5, label %6, label %16

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 170
  %8 = bitcast %"class.blink::ActiveScriptWrappable"* %7 to %"class.blink::DocumentParser"**
  %9 = load %"class.blink::DocumentParser"*, %"class.blink::DocumentParser"** %8, align 8
  %10 = icmp eq %"class.blink::DocumentParser"* %9, null
  br i1 %10, label %11, label %16

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 184
  %13 = bitcast %"class.blink::ActiveScriptWrappable"* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 0
  br label %16

16:                                               ; preds = %1, %6, %11
  %17 = phi i1 [ %15, %11 ], [ true, %6 ], [ true, %1 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ExecutionContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25XMLHttpRequestEventTargetD0Ev(%"class.blink::XMLHttpRequestEventTarget"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink25XMLHttpRequestEventTarget18GetWrapperTypeInfoEv(%"class.blink::XMLHttpRequestEventTarget"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink25XMLHttpRequestEventTarget18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN5blink11EventTargetC2Ev(%"class.blink::EventTarget"*) unnamed_addr #2

declare void @_ZN5blink15EventTargetDataC1Ev(%"class.blink::EventTargetData"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD2Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.62, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %6) #4
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %7) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD0Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11EventTarget18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nounwind
declare void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient11DidSendDataEmm(%"class.blink::ThreadableLoaderClient"*, i64, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient18DidReceiveResponseEmRKNS_16ResourceResponseE(%"class.blink::ThreadableLoaderClient"*, i64, %"class.blink::ResourceResponse"* dereferenceable(1072)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient14DidReceiveDataEPKcj(%"class.blink::ThreadableLoaderClient"*, i8*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient16DidFinishLoadingEm(%"class.blink::ThreadableLoaderClient"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient7DidFailERKNS_13ResourceErrorE(%"class.blink::ThreadableLoaderClient"*, %"class.blink::ResourceError"* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient20DidFailRedirectCheckEv(%"class.blink::ThreadableLoaderClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient15DidDownloadDataEm(%"class.blink::ThreadableLoaderClient"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClient17DidDownloadToBlobE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::ThreadableLoaderClient"*, %"class.blink::BlobDataHandle"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::BlobDataHandle"* %1, null
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i32* %5, i32 1 acq_rel
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  tail call void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"* nonnull %1) #4
  %9 = bitcast %"class.blink::BlobDataHandle"* %1 to i8*
  tail call void @free(i8* %9) #4
  br label %10

10:                                               ; preds = %2, %4, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClientD2Ev(%"class.blink::ThreadableLoaderClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22ThreadableLoaderClientD0Ev(%"class.blink::ThreadableLoaderClient"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::ThreadableLoaderClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25ActiveScriptWrappableBaseD2Ev(%"class.blink::ActiveScriptWrappableBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ActiveScriptWrappableINS_14XMLHttpRequestEED0Ev(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::ActiveScriptWrappable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

declare void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink20TraceWrapperV8String18NameInHeapSnapshotEv(%"class.blink::TraceWrapperV8String"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.63, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink20TraceWrapperV8String5TraceEPNS_7VisitorE(%"class.blink::TraceWrapperV8String"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::TraceWrapperV8String", %"class.blink::TraceWrapperV8String"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::TraceWrapperV8Reference.126"* %3 to %"class.blink::TraceWrapperV8Reference.2236"*
  %5 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)***
  %6 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)** %6, i64 7
  %8 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.2236"*)** %7, align 8
  tail call void %8(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.2236"* dereferenceable(8) %4) #4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF12SharedBuffer8IteratoreqERKS1_(%"class.WTF::SharedBuffer::Iterator"*, %"class.WTF::SharedBuffer::Iterator"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::CheckedContiguousIterator", align 8
  %4 = alloca %"class.base::CheckedContiguousIterator", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %0, i64 0, i32 1, i32 1
  %8 = load i8*, i8** %7, align 8, !noalias !54
  %9 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load i64, i64* %9, align 8, !noalias !54
  %11 = getelementptr inbounds i8, i8* %8, i64 %10
  call void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %3, i8* %8, i8* %8, i8* %11) #4
  %12 = load i8*, i8** %7, align 8, !noalias !57
  %13 = load i64, i64* %9, align 8, !noalias !57
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  call void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %4, i8* %12, i8* %14, i8* %14) #4
  %15 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %1, i64 0, i32 1, i32 1
  %16 = load i8*, i8** %15, align 8, !noalias !60
  %17 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %1, i64 0, i32 1, i32 0, i32 0
  %18 = load i64, i64* %17, align 8, !noalias !60
  %19 = getelementptr inbounds i8, i8* %16, i64 %18
  call void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %5, i8* %16, i8* %16, i8* %19) #4
  %20 = load i8*, i8** %15, align 8, !noalias !63
  %21 = load i64, i64* %17, align 8, !noalias !63
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  call void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"* nonnull %6, i8* %20, i8* %22, i8* %22) #4
  %23 = call zeroext i1 @_ZNSt3__15equalIN4base25CheckedContiguousIteratorIKcEES4_EEbT_S5_T0_S6_(%"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %3, %"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %4, %"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %5, %"class.base::CheckedContiguousIterator"* nonnull byval(%"class.base::CheckedContiguousIterator") align 8 %6)
  br i1 %23, label %24, label %30

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %0, i64 0, i32 2
  %26 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::SharedBuffer::Iterator", %"class.WTF::SharedBuffer::Iterator"* %1, i64 0, i32 2
  %28 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %27, align 8
  %29 = icmp eq %"class.WTF::SharedBuffer"* %26, %28
  br label %30

30:                                               ; preds = %24, %2
  %31 = phi i1 [ false, %2 ], [ %29, %24 ]
  ret i1 %31
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__15equalIN4base25CheckedContiguousIteratorIKcEES4_EEbT_S5_T0_S6_(%"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8, %"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8, %"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8, %"class.base::CheckedContiguousIterator"* byval(%"class.base::CheckedContiguousIterator") align 8) local_unnamed_addr #6 comdat {
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::CheckedContiguousIterator", align 8
  %8 = alloca %"class.base::CheckedContiguousIterator", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator", align 8
  %10 = alloca %"class.base::CheckedContiguousIterator", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator", align 8
  %13 = alloca %"class.base::CheckedContiguousIterator", align 8
  %14 = alloca %"class.base::CheckedContiguousIterator", align 8
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %16 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %17 = bitcast %"class.base::CheckedContiguousIterator"* %2 to i8*
  %18 = bitcast %"class.base::CheckedContiguousIterator"* %3 to i8*
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19)
  %20 = bitcast %"class.base::CheckedContiguousIterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20)
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %17, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* nonnull align 8 %16, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %15, i64 24, i1 false)
  %22 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #4
  %23 = bitcast %"class.base::CheckedContiguousIterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %16, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %15, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %10, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %11) #4
  %24 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %10, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %11, i64 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #4
  %31 = bitcast %"class.base::CheckedContiguousIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #4
  %32 = bitcast %"class.base::CheckedContiguousIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %18, i64 24, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %17, i64 24, i1 false)
  call void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %8, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %9) #4
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %8, i64 0, i32 1
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %9, i64 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %35, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #4
  %40 = icmp eq i64 %30, %39
  br i1 %40, label %41, label %64

41:                                               ; preds = %4
  %42 = bitcast %"class.base::CheckedContiguousIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #4
  %43 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #4
  %44 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* nonnull align 8 %21, i64 24, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* nonnull align 8 %20, i64 24, i1 false) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %42, i8* nonnull align 8 %19, i64 24, i1 false) #4
  call void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #4
  %45 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %7, i64 0, i32 1
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %46, %48
  br i1 %49, label %62, label %50

50:                                               ; preds = %41, %56
  %51 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKcEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %7) #4
  %52 = call dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKcEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %5) #4
  %53 = load i8, i8* %51, align 1
  %54 = load i8, i8* %52, align 1
  %55 = icmp eq i8 %53, %54
  br i1 %55, label %56, label %62

56:                                               ; preds = %50
  %57 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKcEppEv(%"class.base::CheckedContiguousIterator"* nonnull %7) #4
  %58 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKcEppEv(%"class.base::CheckedContiguousIterator"* nonnull %5) #4
  call void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %7, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #4
  %59 = load i8*, i8** %45, align 8
  %60 = load i8*, i8** %47, align 8
  %61 = icmp eq i8* %59, %60
  br i1 %61, label %62, label %50

62:                                               ; preds = %56, %50, %41
  %63 = phi i1 [ true, %41 ], [ true, %56 ], [ false, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #4
  br label %64

64:                                               ; preds = %4, %62
  %65 = phi i1 [ %63, %62 ], [ false, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21)
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKcE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load i8*, i8** %11, align 8
  %15 = load i8*, i8** %12, align 8
  %16 = icmp eq i8* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #4
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.64, i64 0, i64 0), i8* %20, i8* %22) #4
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.65, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #4
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #4
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #4
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load i8*, i8** %32, align 8
  %36 = load i8*, i8** %33, align 8
  %37 = icmp eq i8* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast i8** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #4
  %42 = bitcast i8** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.66, i64 0, i64 0), i8* %41, i8* %43) #4
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.65, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #4
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #4
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #4
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call i64 @strlen(i8* %4) #4
  %6 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %4, i64 %5) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZNK4base25CheckedContiguousIteratorIKcEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8*, i8** %7, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #4
  %17 = bitcast i8** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.67, i64 0, i64 0), i8* %16, i8* %18) #4
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.65, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #4
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %26 = load i8*, i8** %7, align 8
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKcEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load i8*, i8** %7, align 8
  %11 = load i8*, i8** %8, align 8
  %12 = icmp eq i8* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast i8** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #4
  %17 = bitcast i8** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.67, i64 0, i64 0), i8* %16, i8* %18) #4
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.65, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #4
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %26 = load i8*, i8** %7, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  store i8* %27, i8** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKcEC2EPS1_S3_S3_(%"class.base::CheckedContiguousIterator"*, i8*, i8*, i8*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  %14 = ptrtoint i8* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint i8* %2 to i64
  %18 = bitcast i8** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint i8* %3 to i64
  %21 = bitcast i8** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #4
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt i8* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast i8** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #4
  %30 = bitcast i8** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.68, i64 0, i64 0), i8* %29, i8* %31) #4
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.65, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #4
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #4
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #4
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #4
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load i8*, i8** %8, align 8
  %43 = load i8*, i8** %9, align 8
  %44 = icmp ugt i8* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast i8** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #4
  %49 = bitcast i8** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKcEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS3_14remove_pointerIS5_E4typeEEE5valueEPcE4typeES7_ENUlRNS3_13basic_ostreamIcNS3_11char_traitsIcEEEEPKvE_8__invokeESI_SK_) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69, i64 0, i64 0), i8* %48, i8* %50) #4
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.65, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #4
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #4
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #4
  ret void
}

declare void @_ZN5blink14BlobDataHandleC1ENSt3__110unique_ptrINS_8BlobDataENS1_14default_deleteIS3_EEEEm(%"class.blink::BlobDataHandle"*, %"class.blink::BlobData"*, i64) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare void @_ZN5blink19ArrayBufferContentsC1EmmNS0_11SharingTypeENS0_20InitializationPolicyE(%"class.blink::ArrayBufferContents"*, i64, i64, i32, i32) unnamed_addr #2

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64) unnamed_addr #11 {
  tail call void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() #4
  tail call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 %0) #4
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !66
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !67
  unreachable
}

; Function Attrs: nounwind
declare void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"*) unnamed_addr #3

declare void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() local_unnamed_addr #2

declare void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #4
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #4
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #4
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #4
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #4
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #4
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #4
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.70, i64 0, i64 0), i8* %21, i8* %22) #4
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #4
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.71, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #4
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #4
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #4
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #4
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #4
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD2Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 1
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %3) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD0Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE(%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*) unnamed_addr #0 comdat align 2 {
  ret %"class.v8::Value"* null
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #13

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink10FetchUtils17IsForbiddenMethodERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #3

declare void @_ZN5blink5probe40WillSendXMLHttpOrFetchNetworkRequestImplEPNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !6
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !6
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #4
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !2

22:                                               ; preds = %15
  %23 = bitcast %union.anon.2314* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.2314* %16 to %"class.WTF::Vector.2320"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2320"* %30, i16* nonnull dereferenceable(2) %3) #4
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !6
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #4
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2315"* %41, i8* nonnull dereferenceable(1) %4) #4
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.2320"*, i16* dereferenceable(2)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2320"* %0, i32 %5) #4
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2320"* %0, i32 %5) #4
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2320"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #4
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.77, i64 0, i64 0), i8* %15, i8* %16) #4
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.78, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #4
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #4
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !10

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #4
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #4
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2320"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.2320"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2320"* %0, i32 %27) #4
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2320"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2320"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.2320"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #4
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2321"* %19, i16* nonnull %6) #4
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #4
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #4
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !10

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #4
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !10

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2321"* %53, i16* %48) #4
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.2320"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.2320", %"class.WTF::Vector.2320"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.80, i64 0, i64 0), i8* %11, i8* %12) #4
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.81, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #4
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.2321"*, i16*) local_unnamed_addr #14 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #4
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.2315"*, i8* dereferenceable(1)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2315"* %0, i32 %5) #4
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2315"* %0, i32 %5) #4
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2315"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #4
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #4
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.77, i64 0, i64 0), i8* %15, i8* %16) #4
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.78, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #4
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #4
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #4
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !10

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #4
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #4
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.2315"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.2315"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2315"* %0, i32 %27) #4
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2315"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.2315"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.2315"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #4
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2316"* %18, i8* nonnull %6) #4
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #4
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #4
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !10

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #4
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !10

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2316"* %46, i8* %42) #4
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.2315"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.2315", %"class.WTF::Vector.2315"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.80, i64 0, i64 0), i8* %11, i8* %12) #4
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.81, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #4
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.2316"*, i8*) local_unnamed_addr #14 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #4
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #4
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #4
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #4
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #3

declare void @_ZN5blink13ProgressEventC1ERKN3WTF12AtomicStringEbmm(%"class.blink::ProgressEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, i64, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.29"* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEEaSERKS7_(%"class.WTF::Vector.29"*, %"class.WTF::Vector.29"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.29"* %1, %0
  br i1 %3, label %171, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %33

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %class.scoped_refptr.32*, %class.scoped_refptr.32** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %12, i64 %15
  br label %17

17:                                               ; preds = %29, %10
  %18 = phi %class.scoped_refptr.32* [ %30, %29 ], [ %16, %10 ]
  %19 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %18, i64 0, i32 0
  %20 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %19, align 8
  %21 = icmp eq %"class.blink::SecurityOrigin"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #4
  %24 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %20) #4
  %28 = bitcast %"class.blink::SecurityOrigin"* %20 to i8*
  tail call void @free(i8* %28) #4
  br label %29

29:                                               ; preds = %27, %22, %17
  %30 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %18, i64 1
  %31 = icmp eq %class.scoped_refptr.32* %30, %14
  br i1 %31, label %32, label %17

32:                                               ; preds = %29
  store i32 %8, i32* %5, align 4
  br label %104

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp ugt i32 %8, %35
  br i1 %36, label %37, label %102

37:                                               ; preds = %33
  %38 = icmp eq i32 %35, 0
  br i1 %38, label %68, label %39

39:                                               ; preds = %37
  %40 = icmp eq i32 %6, 0
  br i1 %40, label %62, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %0, i64 0, i32 0, i32 0, i32 0
  %43 = load %class.scoped_refptr.32*, %class.scoped_refptr.32** %42, align 8
  %44 = zext i32 %6 to i64
  %45 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %43, i64 %44
  br label %46

46:                                               ; preds = %58, %41
  %47 = phi %class.scoped_refptr.32* [ %59, %58 ], [ %43, %41 ]
  %48 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %47, i64 0, i32 0
  %49 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %48, align 8
  %50 = icmp eq %"class.blink::SecurityOrigin"* %49, null
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %49, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %52) #4
  %53 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %51
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %49) #4
  %57 = bitcast %"class.blink::SecurityOrigin"* %49 to i8*
  tail call void @free(i8* %57) #4
  br label %58

58:                                               ; preds = %56, %51, %46
  %59 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %47, i64 1
  %60 = icmp eq %class.scoped_refptr.32* %59, %45
  br i1 %60, label %61, label %46

61:                                               ; preds = %58
  store i32 0, i32* %5, align 4
  br label %62

62:                                               ; preds = %61, %39
  %63 = bitcast %"class.WTF::Vector.29"* %0 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.WTF::Vector.29"* %0 to i64*
  store atomic i64 0, i64* %65 monotonic, align 8
  store i32 0, i32* %34, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #4
  %66 = load i32, i32* %7, align 4
  %67 = load i32, i32* %34, align 8
  br label %68

68:                                               ; preds = %37, %62
  %69 = phi i32 [ 0, %37 ], [ %67, %62 ]
  %70 = phi i32 [ %8, %37 ], [ %66, %62 ]
  %71 = icmp ult i32 %69, %70
  br i1 %71, label %72, label %102, !prof !10

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = load %class.scoped_refptr.32*, %class.scoped_refptr.32** %73, align 8
  %75 = icmp eq %class.scoped_refptr.32* %74, null
  %76 = zext i32 %70 to i64
  %77 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm(i64 %76) #4
  %78 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %77, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14SecurityOriginEEEEPKcv, i64 0, i64 0)) #4
  br i1 %75, label %79, label %84

79:                                               ; preds = %72
  %80 = ptrtoint i8* %78 to i64
  %81 = bitcast %"class.WTF::Vector.29"* %0 to i64*
  store atomic i64 %80, i64* %81 monotonic, align 8
  %82 = lshr i64 %77, 3
  %83 = trunc i64 %82 to i32
  store i32 %83, i32* %34, align 8
  br label %102

84:                                               ; preds = %72
  %85 = lshr i64 %77, 3
  %86 = ptrtoint i8* %78 to i64
  %87 = load %class.scoped_refptr.32*, %class.scoped_refptr.32** %73, align 8
  %88 = icmp ne i8* %78, null
  %89 = icmp ne %class.scoped_refptr.32* %87, null
  %90 = and i1 %88, %89
  %91 = bitcast %class.scoped_refptr.32* %87 to i8*
  br i1 %90, label %92, label %98, !prof !10

92:                                               ; preds = %84
  %93 = load i32, i32* %5, align 4
  %94 = zext i32 %93 to i64
  %95 = shl nuw nsw i64 %94, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %78, i8* nonnull align 8 %91, i64 %95, i1 false) #4
  %96 = bitcast %"class.WTF::Vector.29"* %0 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %92, %84
  %99 = phi i8* [ %97, %92 ], [ %91, %84 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #4
  %100 = bitcast %"class.WTF::Vector.29"* %0 to i64*
  store atomic i64 %86, i64* %100 monotonic, align 8
  %101 = trunc i64 %85 to i32
  store i32 %101, i32* %34, align 8
  br label %102

102:                                              ; preds = %33, %68, %79, %98
  %103 = load i32, i32* %5, align 4
  br label %104

104:                                              ; preds = %102, %32
  %105 = phi i32 [ %103, %102 ], [ %8, %32 ]
  %106 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %1, i64 0, i32 0, i32 0, i32 0
  %107 = load %class.scoped_refptr.32*, %class.scoped_refptr.32** %106, align 8
  %108 = zext i32 %105 to i64
  %109 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %107, i64 %108
  %110 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %0, i64 0, i32 0, i32 0, i32 0
  %111 = load %class.scoped_refptr.32*, %class.scoped_refptr.32** %110, align 8
  %112 = icmp eq i32 %105, 0
  br i1 %112, label %142, label %113

113:                                              ; preds = %104, %134
  %114 = phi %class.scoped_refptr.32* [ %136, %134 ], [ %111, %104 ]
  %115 = phi %class.scoped_refptr.32* [ %135, %134 ], [ %107, %104 ]
  %116 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %115, i64 0, i32 0
  %117 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %116, align 8
  %118 = icmp eq %"class.blink::SecurityOrigin"* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %117, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %120) #4
  br label %121

121:                                              ; preds = %119, %113
  %122 = ptrtoint %"class.blink::SecurityOrigin"* %117 to i64
  %123 = bitcast %class.scoped_refptr.32* %114 to i64*
  %124 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %114, i64 0, i32 0
  %125 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %124, align 8
  store i64 %122, i64* %123, align 8
  %126 = icmp eq %"class.blink::SecurityOrigin"* %125, null
  br i1 %126, label %134, label %127

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %125, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %128) #4
  %129 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %125, i64 0, i32 0, i32 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %125) #4
  %133 = bitcast %"class.blink::SecurityOrigin"* %125 to i8*
  tail call void @free(i8* %133) #4
  br label %134

134:                                              ; preds = %132, %127, %121
  %135 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %115, i64 1
  %136 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %114, i64 1
  %137 = icmp eq %class.scoped_refptr.32* %135, %109
  br i1 %137, label %138, label %113

138:                                              ; preds = %134
  %139 = load %class.scoped_refptr.32*, %class.scoped_refptr.32** %106, align 8
  %140 = load i32, i32* %5, align 4
  %141 = load %class.scoped_refptr.32*, %class.scoped_refptr.32** %110, align 8
  br label %142

142:                                              ; preds = %138, %104
  %143 = phi %class.scoped_refptr.32* [ %141, %138 ], [ %111, %104 ]
  %144 = phi i32 [ %140, %138 ], [ 0, %104 ]
  %145 = phi %class.scoped_refptr.32* [ %139, %138 ], [ %107, %104 ]
  %146 = zext i32 %144 to i64
  %147 = load i32, i32* %7, align 4
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %145, i64 %148
  %150 = icmp eq i32 %144, %147
  br i1 %150, label %169, label %151

151:                                              ; preds = %142
  %152 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %143, i64 %146
  %153 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %145, i64 %146
  br label %154

154:                                              ; preds = %151, %163
  %155 = phi %class.scoped_refptr.32* [ %164, %163 ], [ %152, %151 ]
  %156 = phi %class.scoped_refptr.32* [ %165, %163 ], [ %153, %151 ]
  %157 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %156, i64 0, i32 0
  %158 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %157, align 8
  %159 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %155, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %158, %"class.blink::SecurityOrigin"** %159, align 8
  %160 = icmp eq %"class.blink::SecurityOrigin"* %158, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %158, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %162) #4
  br label %163

163:                                              ; preds = %161, %154
  %164 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %155, i64 1
  %165 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %156, i64 1
  %166 = icmp eq %class.scoped_refptr.32* %165, %149
  br i1 %166, label %167, label %154

167:                                              ; preds = %163
  %168 = load i32, i32* %7, align 4
  br label %169

169:                                              ; preds = %167, %142
  %170 = phi i32 [ %168, %167 ], [ %144, %142 ]
  store i32 %170, i32* %5, align 4
  br label %171

171:                                              ; preds = %2, %169
  ret %"class.WTF::Vector.29"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.35"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.35"*, %"class.WTF::Vector.35"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.35"* %1, %0
  br i1 %3, label %219, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.35", %"class.WTF::Vector.35"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.35", %"class.WTF::Vector.35"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.35", %"class.WTF::Vector.35"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #4
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector.35", %"class.WTF::Vector.35"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector.35", %"class.WTF::Vector.35"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #4
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector.35"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector.35"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #4
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !10

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector.35", %"class.WTF::Vector.35"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #4
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #4
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector.35"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !10

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #4
  %108 = bitcast %"class.WTF::Vector.35"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #4
  %112 = bitcast %"class.WTF::Vector.35"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector.35", %"class.WTF::Vector.35"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector.35", %"class.WTF::Vector.35"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #4
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !2

145:                                              ; preds = %136
  tail call void @llvm.trap() #4
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #4
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #4
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !2

208:                                              ; preds = %199
  tail call void @llvm.trap() #4
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector.35"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.80, i64 0, i64 0), i8* %11, i8* %12) #4
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.81, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #4
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.80, i64 0, i64 0), i8* %11, i8* %12) #4
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.81, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #4
  ret i64 %21
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7network5mojom5blink16TrustTokenParamsC2ERKS2_(%"class.network::mojom::blink::TrustTokenParams"*, %"class.network::mojom::blink::TrustTokenParams"* dereferenceable(56)) unnamed_addr #6 comdat align 2 {
  %3 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %0 to i8*
  %4 = bitcast %"class.network::mojom::blink::TrustTokenParams"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 13, i1 false)
  %5 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %5, i64 0, i32 0, i32 0, i32 0
  store %class.scoped_refptr.32* null, %class.scoped_refptr.32** %8, align 8
  %9 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = zext i32 %7 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm(i64 %12) #4
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14SecurityOriginEEEEPKcv, i64 0, i64 0)) #4
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.29"* %5 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %9, align 8
  %19 = bitcast i8* %14 to %class.scoped_refptr.32*
  br label %20

20:                                               ; preds = %11, %2
  %21 = phi %class.scoped_refptr.32* [ null, %2 ], [ %19, %11 ]
  %22 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %class.scoped_refptr.32*, %class.scoped_refptr.32** %25, align 8
  %27 = load i32, i32* %22, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %26, i64 %28
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %20, %40
  %32 = phi %class.scoped_refptr.32* [ %41, %40 ], [ %21, %20 ]
  %33 = phi %class.scoped_refptr.32* [ %42, %40 ], [ %26, %20 ]
  %34 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %33, i64 0, i32 0
  %35 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %34, align 8
  %36 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %32, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %35, %"class.blink::SecurityOrigin"** %36, align 8
  %37 = icmp eq %"class.blink::SecurityOrigin"* %35, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %35, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %39) #4
  br label %40

40:                                               ; preds = %38, %31
  %41 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %32, i64 1
  %42 = getelementptr inbounds %class.scoped_refptr.32, %class.scoped_refptr.32* %33, i64 1
  %43 = icmp eq %class.scoped_refptr.32* %42, %29
  br i1 %43, label %44, label %31

44:                                               ; preds = %40, %20
  %45 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 5
  %46 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 5, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.WTF::Vector.35", %"class.WTF::Vector.35"* %45, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  %49 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  store i32 0, i32* %49, align 8
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %60, label %51

51:                                               ; preds = %44
  %52 = zext i32 %47 to i64
  %53 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %52) #4
  %54 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %53, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #4
  %55 = ptrtoint i8* %54 to i64
  %56 = bitcast %"class.WTF::Vector.35"* %45 to i64*
  store atomic i64 %55, i64* %56 monotonic, align 8
  %57 = lshr i64 %53, 3
  %58 = trunc i64 %57 to i32
  store i32 %58, i32* %49, align 8
  %59 = bitcast i8* %54 to %"class.WTF::String"*
  br label %60

60:                                               ; preds = %51, %44
  %61 = phi %"class.WTF::String"* [ null, %44 ], [ %59, %51 ]
  %62 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 5, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::String"*, %"class.WTF::String"** %65, align 8
  %67 = load i32, i32* %62, align 4
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 %68
  %70 = icmp eq i32 %67, 0
  br i1 %70, label %99, label %71

71:                                               ; preds = %60, %95
  %72 = phi %"class.WTF::String"* [ %96, %95 ], [ %61, %60 ]
  %73 = phi %"class.WTF::String"* [ %97, %95 ], [ %66, %60 ]
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %75, %"class.WTF::StringImpl"** %76, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #4
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %83
  tail call void @llvm.trap() #4
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %71
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %72, i64 1
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 1
  %98 = icmp eq %"class.WTF::String"* %97, %69
  br i1 %98, label %99, label %71

99:                                               ; preds = %95, %60
  %100 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %1, i64 0, i32 6, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.network::mojom::blink::TrustTokenParams", %"class.network::mojom::blink::TrustTokenParams"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %102, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %121

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #4
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %109
  tail call void @llvm.trap() #4
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %121

121:                                              ; preds = %99, %104, %119
  ret void
}

declare void @_ZN5blink5probe15WillLoadXHRImplEPNS_16ExecutionContextERKN3WTF12AtomicStringERKNS_4KURLEbRKNS_13HTTPHeaderMapEb(%"class.blink::ExecutionContext"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i1 zeroext, %"class.blink::HTTPHeaderMap"* dereferenceable(24), i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink16FileReaderLoader6CancelEv(%"class.blink::FileReaderLoader"*) local_unnamed_addr #2

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #4
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 %9, i32 1, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #4
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #4
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

declare void @_ZN5blink5probe16DidFinishXHRImplEPNS_16ExecutionContextEPNS_14XMLHttpRequestE(%"class.blink::ExecutionContext"*, %"class.blink::XMLHttpRequest"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorIS9_S5_SA_EERKS1_SG_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.23"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.23"* %0, %"struct.WTF::KeyValuePair"* null)
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  br label %12

12:                                               ; preds = %3, %9
  %13 = phi %"struct.WTF::KeyValuePair"* [ %7, %3 ], [ %11, %9 ]
  %14 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %19) #4
  %21 = and i32 %20, %16
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %91, label %27

27:                                               ; preds = %12
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %36 = xor i32 %20, -1
  %37 = lshr i32 %20, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.WTF::StringView"* %4 to i8**
  br label %50

50:                                               ; preds = %27, %71
  %51 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %77, %71 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ null, %27 ], [ %72, %71 ]
  %53 = phi i64 [ %22, %27 ], [ %76, %71 ]
  %54 = phi i64 [ 0, %27 ], [ %74, %71 ]
  %55 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %71, label %58

58:                                               ; preds = %50
  %59 = bitcast i8* %56 to %"class.WTF::StringImpl"*
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, %59
  br i1 %61, label %104, label %62

62:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #4
  store i8* %56, i8** %49, align 8
  %63 = getelementptr inbounds i8, i8* %56, i64 12
  store i8* %63, i8** %29, align 8
  %64 = getelementptr inbounds i8, i8* %56, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %30, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #4
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %32, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %34, align 8
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %35, align 8
  %70 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #4
  br i1 %70, label %104, label %71

71:                                               ; preds = %50, %62
  %72 = phi %"struct.WTF::KeyValuePair"* [ %52, %62 ], [ %51, %50 ]
  %73 = icmp eq i64 %54, 0
  %74 = select i1 %73, i64 %48, i64 %54
  %75 = add i64 %74, %53
  %76 = and i64 %75, %17
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %13, i64 %76
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %81, label %50

81:                                               ; preds = %71
  %82 = icmp eq %"struct.WTF::KeyValuePair"* %72, null
  br i1 %82, label %91, label %83

83:                                               ; preds = %81
  %84 = bitcast %"struct.WTF::KeyValuePair"* %72 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false) #4
  %85 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = add i32 %86, 2147483647
  %88 = and i32 %87, 2147483647
  %89 = and i32 %86, -2147483648
  %90 = or i32 %88, %89
  store i32 %90, i32* %85, align 8
  br label %91

91:                                               ; preds = %12, %81, %83
  %92 = phi %"struct.WTF::KeyValuePair"* [ %72, %83 ], [ %77, %81 ], [ %23, %12 ]
  call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16) %92, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  %93 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = add i32 %97, %95
  %99 = shl i32 %98, 1
  %100 = load i32, i32* %14, align 8
  %101 = icmp ult i32 %99, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %91
  %103 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.23"* %0, %"struct.WTF::KeyValuePair"* %92)
  br label %104

104:                                              ; preds = %58, %62, %91, %102
  %105 = phi i8 [ 1, %91 ], [ 1, %102 ], [ 0, %62 ], [ 0, %58 ]
  %106 = phi %"struct.WTF::KeyValuePair"* [ %92, %91 ], [ %103, %102 ], [ %51, %62 ], [ %51, %58 ]
  %107 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %106, 0
  %108 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %107, i8 %105, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.23"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #4
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #4
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.83, i64 0, i64 0), i8* %22, i8* %23) #4
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.84, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #4
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #4
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #4
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_12AtomicStringES2_EEEEPKcv, i64 0, i64 0)) #4
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #4
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.23"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #4
  ret %"struct.WTF::KeyValuePair"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_12AtomicStringEEES4_EENS_15CaseFoldingHashENS_18PartitionAllocatorEE9TranslateINS_12KeyValuePairIS3_S3_EERKS3_SD_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair"* dereferenceable(16), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #4
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #4
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #4
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %65, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %65

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #4
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %53
  tail call void @llvm.trap() #4
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %65

65:                                               ; preds = %63, %48, %43
  %66 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %67 = bitcast %"class.WTF::AtomicString"* %44 to i64*
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %44, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #4
  br label %84

84:                                               ; preds = %65, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.23"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.23", align 8
  %6 = bitcast %"class.WTF::HashTable.23"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #4
  %7 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.23"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.23"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.23"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.23"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.23"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  call void @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair"* nonnull %37, i32 %34) #4
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #4
  ret %"struct.WTF::KeyValuePair"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.23"* nonnull %5, %"struct.WTF::KeyValuePair"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair"* %53, %"struct.WTF::KeyValuePair"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.23"*, %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.23"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #4
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #4
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::AtomicString"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::AtomicString"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.23"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %12) #4
  %14 = and i32 %13, %9
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %15
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %46, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::StringView"* %3 to i8*
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %25 = bitcast %"class.WTF::StringView"* %4 to i8*
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %30 = xor i32 %13, -1
  %31 = lshr i32 %13, 23
  %32 = add i32 %31, %30
  %33 = shl i32 %32, 12
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 7
  %36 = xor i32 %35, %34
  %37 = shl i32 %36, 2
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 20
  %40 = xor i32 %39, %38
  %41 = or i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %52

44:                                               ; preds = %74
  %45 = ptrtoint %"struct.WTF::KeyValuePair"* %80 to i64
  br label %46

46:                                               ; preds = %44, %2
  %47 = phi i64 [ %17, %2 ], [ %45, %44 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ %75, %44 ]
  %49 = icmp eq %"struct.WTF::KeyValuePair"* %48, null
  %50 = ptrtoint %"struct.WTF::KeyValuePair"* %48 to i64
  %51 = select i1 %49, i64 %47, i64 %50
  br label %85

52:                                               ; preds = %74, %21
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %21 ], [ %75, %74 ]
  %54 = phi i64 [ %17, %21 ], [ %81, %74 ]
  %55 = phi %"struct.WTF::KeyValuePair"* [ %16, %21 ], [ %80, %74 ]
  %56 = phi i64 [ %15, %21 ], [ %79, %74 ]
  %57 = phi i64 [ 0, %21 ], [ %77, %74 ]
  %58 = bitcast %"struct.WTF::KeyValuePair"* %55 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, inttoptr (i64 -1 to i8*)
  br i1 %60, label %74, label %61

61:                                               ; preds = %52
  %62 = bitcast i8* %59 to %"class.WTF::StringImpl"*
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, %62
  br i1 %64, label %85, label %65

65:                                               ; preds = %61
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #4
  store i8* %59, i8** %43, align 8
  %66 = getelementptr inbounds i8, i8* %59, i64 12
  store i8* %66, i8** %23, align 8
  %67 = getelementptr inbounds i8, i8* %59, i64 4
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #4
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %26, align 8
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 1
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %28, align 8
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 1
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %29, align 8
  %73 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #4
  br i1 %73, label %85, label %74

74:                                               ; preds = %65, %52
  %75 = phi %"struct.WTF::KeyValuePair"* [ %53, %65 ], [ %55, %52 ]
  %76 = icmp eq i64 %57, 0
  %77 = select i1 %76, i64 %42, i64 %57
  %78 = add i64 %77, %56
  %79 = and i64 %78, %10
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %79
  %81 = ptrtoint %"struct.WTF::KeyValuePair"* %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %44, label %52

85:                                               ; preds = %61, %65, %46
  %86 = phi i64 [ %51, %46 ], [ %54, %65 ], [ %54, %61 ]
  %87 = phi i8 [ 0, %46 ], [ 1, %65 ], [ 1, %61 ]
  %88 = inttoptr i64 %86 to %"struct.WTF::KeyValuePair"*
  %89 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %88, 0
  %90 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %89, i8 %87, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #4
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #4
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !6
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #4
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #4
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #4
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #4
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !6
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.23"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %74, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %14) #4
  %16 = and i32 %15, %11
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %17
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %74, label %22

22:                                               ; preds = %8
  %23 = bitcast %"class.WTF::StringView"* %3 to i8*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %26 = bitcast %"class.WTF::StringView"* %4 to i8*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = xor i32 %15, -1
  %32 = lshr i32 %15, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %45

45:                                               ; preds = %65, %22
  %46 = phi %"struct.WTF::KeyValuePair"* [ %18, %22 ], [ %70, %65 ]
  %47 = phi i64 [ %17, %22 ], [ %69, %65 ]
  %48 = phi i64 [ 0, %22 ], [ %67, %65 ]
  %49 = bitcast %"struct.WTF::KeyValuePair"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %65, label %52

52:                                               ; preds = %45
  %53 = bitcast i8* %50 to %"class.WTF::StringImpl"*
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, %53
  br i1 %55, label %74, label %56

56:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #4
  store i8* %50, i8** %44, align 8
  %57 = getelementptr inbounds i8, i8* %50, i64 12
  store i8* %57, i8** %24, align 8
  %58 = getelementptr inbounds i8, i8* %50, i64 4
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #4
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %27, align 8
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 1
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %29, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %30, align 8
  %64 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #4
  br i1 %64, label %74, label %65

65:                                               ; preds = %56, %45
  %66 = icmp eq i64 %48, 0
  %67 = select i1 %66, i64 %43, i64 %48
  %68 = add i64 %67, %47
  %69 = and i64 %68, %12
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %74, label %45

74:                                               ; preds = %52, %56, %65, %2, %8
  %75 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ null, %8 ], [ %46, %52 ], [ %46, %56 ], [ null, %65 ]
  %76 = icmp eq %"struct.WTF::KeyValuePair"* %75, null
  %77 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %78 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %80
  %82 = select i1 %76, %"struct.WTF::KeyValuePair"* %81, %"struct.WTF::KeyValuePair"* %75
  %83 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %82, 0
  %84 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %83, %"struct.WTF::KeyValuePair"* %81, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %84
}

declare void @_ZNK3WTF6String5AsciiEv(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_122FindCharsetInMediaTypeERKN3WTF6StringERjS5_(%"class.WTF::String"* nocapture readonly dereferenceable(8), i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::StringView", align 8
  store i32 0, i32* %2, align 4
  %5 = load i32, i32* %1, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %211, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = icmp ugt i32 %12, %5
  br i1 %14, label %15, label %148

15:                                               ; preds = %10
  %16 = bitcast %"class.WTF::StringView"* %4 to i8*
  %17 = bitcast %"class.WTF::StringView"* %4 to i64*
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  br label %20

20:                                               ; preds = %15, %78
  %21 = phi %"class.WTF::StringImpl"* [ %8, %15 ], [ %32, %78 ]
  %22 = phi i64 [ %6, %15 ], [ %79, %78 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #4
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %23, i64* %17, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i64 0, i64 0), i8** %18, align 8
  store i32 7, i32* %19, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %24, label %25, label %26

25:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #4
  br label %305

26:                                               ; preds = %20
  %27 = trunc i64 %22 to i32
  %28 = call i32 @_ZN3WTF10StringImpl21FindIgnoringASCIICaseERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %21, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, i32 %27) #4
  %29 = zext i32 %28 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #4
  switch i32 %28, label %30 [
    i32 -1, label %305
    i32 0, label %305
  ]

30:                                               ; preds = %26
  %31 = add i32 %28, -1
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %81, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp ugt i32 %36, %31
  br i1 %37, label %38, label %81

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  br i1 %42, label %50, label %44

44:                                               ; preds = %38
  %45 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  %46 = zext i32 %31 to i64
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i16
  br label %55

50:                                               ; preds = %38
  %51 = bitcast %"class.WTF::StringImpl"* %43 to i16*
  %52 = zext i32 %31 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  %54 = load i16, i16* %53, align 2
  br label %55

55:                                               ; preds = %44, %50
  %56 = phi i16 [ %49, %44 ], [ %54, %50 ]
  %57 = icmp ugt i16 %56, 32
  br i1 %57, label %58, label %81

58:                                               ; preds = %55
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 1
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  %64 = zext i32 %31 to i64
  %65 = getelementptr inbounds i8, i8* %63, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i16
  br label %73

68:                                               ; preds = %58
  %69 = bitcast %"class.WTF::StringImpl"* %43 to i16*
  %70 = zext i32 %31 to i64
  %71 = getelementptr inbounds i16, i16* %69, i64 %70
  %72 = load i16, i16* %71, align 2
  br label %73

73:                                               ; preds = %62, %68
  %74 = phi i16 [ %67, %62 ], [ %72, %68 ]
  %75 = icmp eq i16 %74, 59
  br i1 %75, label %81, label %76

76:                                               ; preds = %73
  %77 = add nuw nsw i64 %29, 7
  br label %78

78:                                               ; preds = %116, %122, %76, %145
  %79 = phi i64 [ %77, %76 ], [ %125, %145 ], [ %118, %116 ], [ %125, %122 ]
  %80 = icmp ult i64 %79, %13
  br i1 %80, label %20, label %148

81:                                               ; preds = %30, %34, %73, %55
  %82 = add nuw nsw i64 %29, 7
  %83 = icmp ult i64 %82, %13
  br i1 %83, label %84, label %116

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %88 = bitcast %"class.WTF::StringImpl"* %87 to i8*
  %89 = bitcast %"class.WTF::StringImpl"* %87 to i16*
  br label %90

90:                                               ; preds = %113, %84
  %91 = phi i64 [ %82, %84 ], [ %114, %113 ]
  br i1 %33, label %113, label %92

92:                                               ; preds = %90
  %93 = trunc i64 %91 to i32
  %94 = load i32, i32* %85, align 4
  %95 = icmp ugt i32 %94, %93
  br i1 %95, label %96, label %113

96:                                               ; preds = %92
  %97 = load atomic i32, i32* %86 monotonic, align 4
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  %100 = and i64 %91, 4294967295
  br i1 %99, label %105, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds i8, i8* %88, i64 %100
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i16
  br label %108

105:                                              ; preds = %96
  %106 = getelementptr inbounds i16, i16* %89, i64 %100
  %107 = load i16, i16* %106, align 2
  br label %108

108:                                              ; preds = %101, %105
  %109 = phi i16 [ %104, %101 ], [ %107, %105 ]
  %110 = icmp ult i16 %109, 33
  br i1 %110, label %113, label %111

111:                                              ; preds = %108
  %112 = add nuw i64 %91, 1
  br label %122

113:                                              ; preds = %90, %92, %108
  %114 = add i64 %91, 1
  %115 = icmp eq i64 %114, %13
  br i1 %115, label %116, label %90

116:                                              ; preds = %113, %81
  %117 = phi i64 [ %82, %81 ], [ %13, %113 ]
  %118 = add nsw i64 %117, 1
  br i1 %33, label %78, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %121 = load i32, i32* %120, align 4
  br label %122

122:                                              ; preds = %119, %111
  %123 = phi i64 [ %117, %119 ], [ %91, %111 ]
  %124 = phi i32 [ %121, %119 ], [ %94, %111 ]
  %125 = phi i64 [ %118, %119 ], [ %112, %111 ]
  %126 = trunc i64 %123 to i32
  %127 = icmp ugt i32 %124, %126
  br i1 %127, label %128, label %78

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 1
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  br i1 %132, label %140, label %134

134:                                              ; preds = %128
  %135 = bitcast %"class.WTF::StringImpl"* %133 to i8*
  %136 = and i64 %123, 4294967295
  %137 = getelementptr inbounds i8, i8* %135, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i16
  br label %145

140:                                              ; preds = %128
  %141 = bitcast %"class.WTF::StringImpl"* %133 to i16*
  %142 = and i64 %123, 4294967295
  %143 = getelementptr inbounds i16, i16* %141, i64 %142
  %144 = load i16, i16* %143, align 2
  br label %145

145:                                              ; preds = %134, %140
  %146 = phi i16 [ %139, %134 ], [ %144, %140 ]
  %147 = icmp eq i16 %146, 61
  br i1 %147, label %148, label %78

148:                                              ; preds = %78, %145, %10
  %149 = phi %"class.WTF::StringImpl"* [ %8, %10 ], [ %32, %145 ], [ %32, %78 ]
  %150 = phi i64 [ %6, %10 ], [ %79, %78 ], [ %125, %145 ]
  %151 = icmp ult i64 %150, %13
  br i1 %151, label %152, label %213

152:                                              ; preds = %148
  %153 = icmp eq %"class.WTF::StringImpl"* %149, null
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 1
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 1
  %157 = bitcast %"class.WTF::StringImpl"* %156 to i8*
  %158 = bitcast %"class.WTF::StringImpl"* %156 to i16*
  br label %159

159:                                              ; preds = %208, %152
  %160 = phi i64 [ %150, %152 ], [ %209, %208 ]
  br i1 %153, label %208, label %161

161:                                              ; preds = %159
  %162 = trunc i64 %160 to i32
  %163 = load i32, i32* %154, align 4
  %164 = icmp ugt i32 %163, %162
  br i1 %164, label %165, label %208

165:                                              ; preds = %161
  %166 = load atomic i32, i32* %155 monotonic, align 4
  %167 = and i32 %166, 1
  %168 = icmp eq i32 %167, 0
  %169 = and i64 %160, 4294967295
  br i1 %168, label %174, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds i8, i8* %157, i64 %169
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i16
  br label %177

174:                                              ; preds = %165
  %175 = getelementptr inbounds i16, i16* %158, i64 %169
  %176 = load i16, i16* %175, align 2
  br label %177

177:                                              ; preds = %170, %174
  %178 = phi i16 [ %173, %170 ], [ %176, %174 ]
  %179 = icmp ult i16 %178, 33
  br i1 %179, label %208, label %180

180:                                              ; preds = %177
  %181 = load atomic i32, i32* %155 monotonic, align 4
  %182 = and i32 %181, 1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %188, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds i8, i8* %157, i64 %169
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i16
  br label %191

188:                                              ; preds = %180
  %189 = getelementptr inbounds i16, i16* %158, i64 %169
  %190 = load i16, i16* %189, align 2
  br label %191

191:                                              ; preds = %184, %188
  %192 = phi i16 [ %187, %184 ], [ %190, %188 ]
  %193 = icmp eq i16 %192, 34
  br i1 %193, label %208, label %194

194:                                              ; preds = %191
  %195 = load atomic i32, i32* %155 monotonic, align 4
  %196 = and i32 %195, 1
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %202, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds i8, i8* %157, i64 %169
  %200 = load i8, i8* %199, align 1
  %201 = zext i8 %200 to i16
  br label %205

202:                                              ; preds = %194
  %203 = getelementptr inbounds i16, i16* %158, i64 %169
  %204 = load i16, i16* %203, align 2
  br label %205

205:                                              ; preds = %198, %202
  %206 = phi i16 [ %201, %198 ], [ %204, %202 ]
  %207 = icmp eq i16 %206, 39
  br i1 %207, label %208, label %213

208:                                              ; preds = %159, %161, %177, %191, %205
  %209 = add nuw nsw i64 %160, 1
  %210 = icmp eq i64 %209, %13
  br i1 %210, label %211, label %159

211:                                              ; preds = %208, %3
  %212 = phi i32 [ %5, %3 ], [ %12, %208 ]
  store i32 %212, i32* %1, align 4
  br label %301

213:                                              ; preds = %205, %148
  %214 = phi i64 [ %150, %148 ], [ %160, %205 ]
  %215 = trunc i64 %214 to i32
  store i32 %215, i32* %1, align 4
  %216 = icmp ult i64 %214, %13
  br i1 %216, label %217, label %301

217:                                              ; preds = %213
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 1
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 1
  %223 = bitcast %"class.WTF::StringImpl"* %222 to i8*
  %224 = bitcast %"class.WTF::StringImpl"* %222 to i16*
  br label %225

225:                                              ; preds = %288, %217
  %226 = phi i64 [ %214, %217 ], [ %289, %288 ]
  br i1 %219, label %301, label %227

227:                                              ; preds = %225
  %228 = trunc i64 %226 to i32
  %229 = load i32, i32* %220, align 4
  %230 = icmp ugt i32 %229, %228
  br i1 %230, label %231, label %293

231:                                              ; preds = %227
  %232 = load atomic i32, i32* %221 monotonic, align 4
  %233 = and i32 %232, 1
  %234 = icmp eq i32 %233, 0
  %235 = and i64 %226, 4294967295
  br i1 %234, label %240, label %236

236:                                              ; preds = %231
  %237 = getelementptr inbounds i8, i8* %223, i64 %235
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i16
  br label %243

240:                                              ; preds = %231
  %241 = getelementptr inbounds i16, i16* %224, i64 %235
  %242 = load i16, i16* %241, align 2
  br label %243

243:                                              ; preds = %236, %240
  %244 = phi i16 [ %239, %236 ], [ %242, %240 ]
  %245 = icmp ugt i16 %244, 32
  br i1 %245, label %246, label %295

246:                                              ; preds = %243
  %247 = load atomic i32, i32* %221 monotonic, align 4
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %254, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds i8, i8* %223, i64 %235
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i16
  br label %257

254:                                              ; preds = %246
  %255 = getelementptr inbounds i16, i16* %224, i64 %235
  %256 = load i16, i16* %255, align 2
  br label %257

257:                                              ; preds = %250, %254
  %258 = phi i16 [ %253, %250 ], [ %256, %254 ]
  %259 = icmp eq i16 %258, 34
  br i1 %259, label %297, label %260

260:                                              ; preds = %257
  %261 = load atomic i32, i32* %221 monotonic, align 4
  %262 = and i32 %261, 1
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %268, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds i8, i8* %223, i64 %235
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i16
  br label %271

268:                                              ; preds = %260
  %269 = getelementptr inbounds i16, i16* %224, i64 %235
  %270 = load i16, i16* %269, align 2
  br label %271

271:                                              ; preds = %264, %268
  %272 = phi i16 [ %267, %264 ], [ %270, %268 ]
  %273 = icmp eq i16 %272, 39
  br i1 %273, label %299, label %274

274:                                              ; preds = %271
  %275 = load atomic i32, i32* %221 monotonic, align 4
  %276 = and i32 %275, 1
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %282, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds i8, i8* %223, i64 %235
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i16
  br label %285

282:                                              ; preds = %274
  %283 = getelementptr inbounds i16, i16* %224, i64 %235
  %284 = load i16, i16* %283, align 2
  br label %285

285:                                              ; preds = %278, %282
  %286 = phi i16 [ %281, %278 ], [ %284, %282 ]
  %287 = icmp eq i16 %286, 59
  br i1 %287, label %291, label %288

288:                                              ; preds = %285
  %289 = add nuw nsw i64 %226, 1
  %290 = icmp eq i64 %289, %13
  br i1 %290, label %301, label %225

291:                                              ; preds = %285
  %292 = trunc i64 %226 to i32
  br label %301

293:                                              ; preds = %227
  %294 = trunc i64 %226 to i32
  br label %301

295:                                              ; preds = %243
  %296 = trunc i64 %226 to i32
  br label %301

297:                                              ; preds = %257
  %298 = trunc i64 %226 to i32
  br label %301

299:                                              ; preds = %271
  %300 = trunc i64 %226 to i32
  br label %301

301:                                              ; preds = %225, %288, %291, %293, %295, %297, %299, %211, %213
  %302 = phi i32 [ %215, %213 ], [ %212, %211 ], [ %215, %299 ], [ %215, %297 ], [ %215, %295 ], [ %215, %293 ], [ %215, %291 ], [ %215, %288 ], [ %215, %225 ]
  %303 = phi i32 [ %215, %213 ], [ %212, %211 ], [ %300, %299 ], [ %298, %297 ], [ %296, %295 ], [ %294, %293 ], [ %292, %291 ], [ %215, %225 ], [ %12, %288 ]
  %304 = sub i32 %303, %302
  store i32 %304, i32* %2, align 4
  br label %305

305:                                              ; preds = %26, %26, %25, %301
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZN3WTF10StringImpl21FindIgnoringASCIICaseERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.23"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair"* %6, null
  br i1 %7, label %74, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashTable.23", %"class.WTF::HashTable.23"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %14) #4
  %16 = and i32 %15, %11
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %17
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %74, label %22

22:                                               ; preds = %8
  %23 = bitcast %"class.WTF::StringView"* %3 to i8*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %26 = bitcast %"class.WTF::StringView"* %4 to i8*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = xor i32 %15, -1
  %32 = lshr i32 %15, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %45

45:                                               ; preds = %65, %22
  %46 = phi %"struct.WTF::KeyValuePair"* [ %18, %22 ], [ %70, %65 ]
  %47 = phi i64 [ %17, %22 ], [ %69, %65 ]
  %48 = phi i64 [ 0, %22 ], [ %67, %65 ]
  %49 = bitcast %"struct.WTF::KeyValuePair"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %65, label %52

52:                                               ; preds = %45
  %53 = bitcast i8* %50 to %"class.WTF::StringImpl"*
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, %53
  br i1 %55, label %74, label %56

56:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #4
  store i8* %50, i8** %44, align 8
  %57 = getelementptr inbounds i8, i8* %50, i64 12
  store i8* %57, i8** %24, align 8
  %58 = getelementptr inbounds i8, i8* %50, i64 4
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #4
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %27, align 8
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 1
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %29, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %30, align 8
  %64 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #4
  br i1 %64, label %74, label %65

65:                                               ; preds = %56, %45
  %66 = icmp eq i64 %48, 0
  %67 = select i1 %66, i64 %43, i64 %48
  %68 = add i64 %67, %47
  %69 = and i64 %68, %12
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %74, label %45

74:                                               ; preds = %52, %56, %65, %2, %8
  %75 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ null, %8 ], [ %46, %52 ], [ %46, %56 ], [ null, %65 ]
  ret %"struct.WTF::KeyValuePair"* %75
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEjjRKNS_10StringViewE(%"class.WTF::StringImpl"*, i32, i32, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN3WTF12SharedBufferC1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #2

declare void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #4
  %7 = load i8, i8* %6, align 8, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #4
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #4
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #4
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #4
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #4
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #4
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #4
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #4
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #4
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #4
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #4
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #4
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #4
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #15

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #4
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #4
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #4
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #4
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #4
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #4
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink14BlobDataHandleD1Ev(%"class.blink::BlobDataHandle"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink4BlobC1E13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::Blob"*, %"class.blink::BlobDataHandle"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #3

declare void @_ZN3WTF12SharedBuffer14AppendInternalEPKcm(%"class.WTF::SharedBuffer"*, i8*, i64) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E6lengthEv(%"class.WTF::StringAppend.2330"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2553"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #4
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2553", %"class.WTF::StringTypeAdapter.2553"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2553"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %4, i8* %14) #4
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2331"* %9) #4
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #4
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2331"* %9) #4
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #4
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0), i8* %25, i8* %26) #4
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #4
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #4
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #4
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #4
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.90, i64 0, i64 0), i8* %41, i8* %42) #4
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #4
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #4
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #4
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2330"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2554", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2553"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2553"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %5, i8* %10) #4
  %11 = bitcast %"class.WTF::StringTypeAdapter.2553"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #4
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2553", %"class.WTF::StringTypeAdapter.2553"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #4
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %3, i8* %14) #4
  %15 = bitcast %"class.WTF::StringTypeAdapter.2554"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #4
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #4
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2554"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2553"* nonnull %3, i8* %1) #4
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2555"* nonnull %34, i8* %37) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #4
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2331"* %6) #4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2553"* nonnull %5, i8* %40) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_12AtomicStringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2330"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2554", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2553"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2553"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %5, i8* %10) #4
  %11 = bitcast %"class.WTF::StringTypeAdapter.2553"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #4
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2553", %"class.WTF::StringTypeAdapter.2553"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #4
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %3, i8* %14) #4
  %15 = bitcast %"class.WTF::StringTypeAdapter.2554"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #4
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2330", %"class.WTF::StringAppend.2330"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #4
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2554"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2553"* nonnull %3, i16* %1) #4
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2555"* nonnull %34, i16* %37) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #4
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2331"* %6) #4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2553"* nonnull %5, i16* %40) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_12AtomicStringEE6lengthEv(%"class.WTF::StringAppend.2331"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2553"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #4
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2553", %"class.WTF::StringTypeAdapter.2553"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2331", %"class.WTF::StringAppend.2331"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2553"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %4, i8* %13) #4
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2331", %"class.WTF::StringAppend.2331"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #4
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #4
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0), i8* %30, i8* %31) #4
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #4
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #4
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #4
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #4
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #4
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.90, i64 0, i64 0), i8* %45, i8* %46) #4
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #4
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #4
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #4
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2553"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2555"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2553"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2555"*, i16*) local_unnamed_addr #2

declare void @_ZN5blink25ActiveScriptWrappableBase36ActiveScriptWrappableBaseConstructedEv(%"class.blink::ActiveScriptWrappableBase"*) local_unnamed_addr #2

declare void @_ZN5blink35XMLHttpRequestProgressEventThrottleC1EPNS_14XMLHttpRequestE(%"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::XMLHttpRequest"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_35XMLHttpRequestProgressEventThrottleEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #4
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #4
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_35XMLHttpRequestProgressEventThrottleEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_35XMLHttpRequestProgressEventThrottleEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_35XMLHttpRequestProgressEventThrottleEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #4
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink35XMLHttpRequestProgressEventThrottleEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_35XMLHttpRequestProgressEventThrottleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XMLHttpRequestProgressEventThrottle"*
  tail call void @_ZNK5blink35XMLHttpRequestProgressEventThrottle5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequestProgressEventThrottle"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_35XMLHttpRequestProgressEventThrottleEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::XMLHttpRequestProgressEventThrottle"*
  tail call void @_ZN5blink35XMLHttpRequestProgressEventThrottleD1Ev(%"class.blink::XMLHttpRequestProgressEventThrottle"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_35XMLHttpRequestProgressEventThrottleEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink35XMLHttpRequestProgressEventThrottle5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequestProgressEventThrottle"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink35XMLHttpRequestProgressEventThrottleD1Ev(%"class.blink::XMLHttpRequestProgressEventThrottle"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2553"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #4
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2553", %"class.WTF::StringTypeAdapter.2553"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2553"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %4, i8* %14) #4
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2239"* %9) #4
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #4
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2239"* %9) #4
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #4
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0), i8* %25, i8* %26) #4
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #4
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #4
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #4
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #4
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.90, i64 0, i64 0), i8* %41, i8* %42) #4
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #4
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #4
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #4
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2557", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2553"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2553"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %5, i8* %10) #4
  %11 = bitcast %"class.WTF::StringTypeAdapter.2553"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #4
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2553", %"class.WTF::StringTypeAdapter.2553"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #4
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %3, i8* %14) #4
  %15 = bitcast %"class.WTF::StringTypeAdapter.2557"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #4
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2557", %"class.WTF::StringTypeAdapter.2557"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2557", %"class.WTF::StringTypeAdapter.2557"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #4
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2557"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2553"* nonnull %3, i8* %1) #4
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2557", %"class.WTF::StringTypeAdapter.2557"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2555"* nonnull %34, i8* %37) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #4
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2239"* %6) #4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2553"* nonnull %5, i8* %40) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2557", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2553"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2553"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %5, i8* %10) #4
  %11 = bitcast %"class.WTF::StringTypeAdapter.2553"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #4
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2553", %"class.WTF::StringTypeAdapter.2553"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #4
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %3, i8* %14) #4
  %15 = bitcast %"class.WTF::StringTypeAdapter.2557"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #4
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2557", %"class.WTF::StringTypeAdapter.2557"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2557", %"class.WTF::StringTypeAdapter.2557"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #4
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2557"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2553"* nonnull %3, i16* %1) #4
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2557", %"class.WTF::StringTypeAdapter.2557"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2555"* nonnull %34, i16* %37) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #4
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2239"* %6) #4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2553"* nonnull %5, i16* %40) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2239"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2553"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #4
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2553", %"class.WTF::StringTypeAdapter.2553"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2239", %"class.WTF::StringAppend.2239"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2553"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %4, i8* %13) #4
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2239", %"class.WTF::StringAppend.2239"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #4
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #4
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0), i8* %30, i8* %31) #4
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #4
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #4
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #4
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #4
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #4
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.90, i64 0, i64 0), i8* %45, i8* %46) #4
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #4
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #4
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #4
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLDocument"* @_ZN5blink25MakeGarbageCollectedTraitINS_12HTMLDocumentEE4CallIJRNS_12DocumentInitEEEEPS1_DpOT_(%"class.blink::DocumentInit"* dereferenceable(288)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #4
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 2880
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 2880
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -2880
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 1440, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 2880, i64 %47) #4
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLDocument"*
  tail call void @_ZN5blink12HTMLDocumentC1ERKNS_12DocumentInitEh(%"class.blink::HTMLDocument"* %51, %"class.blink::DocumentInit"* dereferenceable(288) %0, i8 zeroext 0) #4
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLDocument"* %51
}

declare void @_ZN5blink12HTMLDocumentC1ERKNS_12DocumentInitEh(%"class.blink::HTMLDocument"*, %"class.blink::DocumentInit"* dereferenceable(288), i8 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::XMLDocument"* @_ZN5blink25MakeGarbageCollectedTraitINS_11XMLDocumentEE4CallIJRNS_12DocumentInitEEEEPS1_DpOT_(%"class.blink::DocumentInit"* dereferenceable(288)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #4
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 2856
  br i1 %15, label %46, label %16, !prof !2

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 2856
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -2856
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 1428, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 2856, i64 %47) #4
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::XMLDocument"*
  tail call void @_ZN5blink11XMLDocumentC1ERKNS_12DocumentInitEh(%"class.blink::XMLDocument"* %51, %"class.blink::DocumentInit"* dereferenceable(288) %0, i8 zeroext 64) #4
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::XMLDocument"* %51
}

declare void @_ZN5blink11XMLDocumentC1ERKNS_12DocumentInitEh(%"class.blink::XMLDocument"*, %"class.blink::DocumentInit"* dereferenceable(288), i8 zeroext) unnamed_addr #2

declare void @_ZN5blink8BlobDataC1ENS0_21FileCompositionStatusE(%"class.blink::BlobData"*, i32) unnamed_addr #2

declare zeroext i1 @_ZNK3WTF12SharedBuffer16GetBytesInternalEPvm(%"class.WTF::SharedBuffer"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink20XMLHttpRequestUploadC1EPNS_14XMLHttpRequestE(%"class.blink::XMLHttpRequestUpload"*, %"class.blink::XMLHttpRequest"*) unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #2

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #2

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #2

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !68

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !70

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !71

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #16
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #16, !noalias !72
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !72
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #16
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

declare void @_ZN5blink38inspector_xhr_ready_state_change_event4DataEN8perfetto11TracedValueEPNS_16ExecutionContextEPNS_14XMLHttpRequestE(%"class.perfetto::TracedValue"*, %"class.blink::ExecutionContext"*, %"class.blink::XMLHttpRequest"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare void @_ZN5blink24inspector_xhr_load_event4DataEN8perfetto11TracedValueEPNS_16ExecutionContextEPNS_14XMLHttpRequestE(%"class.perfetto::TracedValue"*, %"class.blink::ExecutionContext"*, %"class.blink::XMLHttpRequest"*) local_unnamed_addr #2

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #2

declare i32 @MojoClose(i32) local_unnamed_addr #2

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_12AtomicStringENS_6StringEEC2ES1_S2_(%"class.WTF::StringAppend.2313"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.2313", %"class.WTF::StringAppend.2313"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #4
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #4
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.2313", %"class.WTF::StringAppend.2313"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #4
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !2

40:                                               ; preds = %33
  tail call void @llvm.trap() #4
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #4
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #4
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_12AtomicStringENS_6StringEEcvS2_Ev(%"class.WTF::StringAppend.2313"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2554", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2557", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2554", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2557", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2313", %"class.WTF::StringAppend.2313"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2313", %"class.WTF::StringAppend.2313"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringENS_6StringEE6lengthEv(%"class.WTF::StringAppend.2313"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #4
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter.2554"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #4
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #4
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.2554"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter.2557"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #4
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2557", %"class.WTF::StringTypeAdapter.2557"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2557", %"class.WTF::StringTypeAdapter.2557"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #4
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter.2557"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2555"* nonnull %67, i8* %30) #4
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2557", %"class.WTF::StringTypeAdapter.2557"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2555"* nonnull %68, i8* %71) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #4
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #4
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %80
  call void @llvm.trap() #4
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #4
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #4
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringENS_6StringEE6lengthEv(%"class.WTF::StringAppend.2313"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #4
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter.2554"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #4
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #4
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter.2554"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter.2557"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #4
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2557", %"class.WTF::StringTypeAdapter.2557"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2557", %"class.WTF::StringTypeAdapter.2557"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #4
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter.2557"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2555"* nonnull %144, i16* %107) #4
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2557", %"class.WTF::StringTypeAdapter.2557"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2555"* nonnull %145, i16* %148) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #4
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #4
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !2

164:                                              ; preds = %157
  call void @llvm.trap() #4
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #4
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #4
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_12AtomicStringENS_6StringEE6lengthEv(%"class.WTF::StringAppend.2313"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2313", %"class.WTF::StringAppend.2313"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.2313", %"class.WTF::StringAppend.2313"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #4
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #4
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0), i8* %31, i8* %32) #4
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #4
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #4
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #4
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #4
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.90, i64 0, i64 0), i8* %46, i8* %47) #4
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #4
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #4
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #4
  ret i32 %24
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

declare void @_ZN5blink16ThreadableLoaderC1ERNS_16ExecutionContextEPNS_22ThreadableLoaderClientERKNS_21ResourceLoaderOptionsEPNS_15ResourceFetcherE(%"class.blink::ThreadableLoader"*, %"class.blink::ExecutionContext"* dereferenceable(376), %"class.blink::ThreadableLoaderClient"*, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112), %"class.blink::ResourceFetcher"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16ThreadableLoaderEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #4
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #4
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16ThreadableLoaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #4
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16ThreadableLoaderEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16ThreadableLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ThreadableLoader"*
  tail call void @_ZNK5blink16ThreadableLoader5TraceEPNS_7VisitorE(%"class.blink::ThreadableLoader"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16ThreadableLoaderEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ThreadableLoader"*
  tail call void @_ZN5blink16ThreadableLoaderD1Ev(%"class.blink::ThreadableLoader"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16ThreadableLoaderEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink16ThreadableLoader5TraceEPNS_7VisitorE(%"class.blink::ThreadableLoader"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink16ThreadableLoaderD1Ev(%"class.blink::ThreadableLoader"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink19TextResourceDecoderD1Ev(%"class.blink::TextResourceDecoder"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14XMLHttpRequestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::XMLHttpRequest"**
  %5 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #4
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #4
  %7 = icmp eq %"class.blink::XMLHttpRequest"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::XMLHttpRequest"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14XMLHttpRequestEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #4
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #4
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14XMLHttpRequestEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XMLHttpRequest"*
  tail call void @_ZNK5blink14XMLHttpRequest5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequest"* %3, %"class.blink::Visitor"* %0)
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink14XMLHttpRequestEFvNS3_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS3_10PersistentIS4_EES5_S7_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i32*
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 3
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.WTF::AtomicString"*
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %12
  %16 = bitcast i8* %15 to %"class.blink::XMLHttpRequest"*
  %17 = and i64 %9, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %1
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %9, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.blink::XMLHttpRequest"*, i32, %"class.WTF::AtomicString"*)**
  %25 = load void (%"class.blink::XMLHttpRequest"*, i32, %"class.WTF::AtomicString"*)*, void (%"class.blink::XMLHttpRequest"*, i32, %"class.WTF::AtomicString"*)** %24, align 8
  br label %28

26:                                               ; preds = %1
  %27 = inttoptr i64 %9 to void (%"class.blink::XMLHttpRequest"*, i32, %"class.WTF::AtomicString"*)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.blink::XMLHttpRequest"*, i32, %"class.WTF::AtomicString"*)* [ %25, %19 ], [ %27, %26 ]
  %30 = load i32, i32* %5, align 4
  tail call void %29(%"class.blink::XMLHttpRequest"* %16, i32 %30, %"class.WTF::AtomicString"* dereferenceable(8) %7) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink14XMLHttpRequestEFvNS2_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS2_10PersistentIS3_EES4_S6_EEC2ISA_JSC_S4_S8_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent.2328"* dereferenceable(16), i32* dereferenceable(4), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %7, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink14XMLHttpRequestEFvNS2_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS2_10PersistentIS3_EES4_S6_EE7DestroyEPKNS0_13BindStateBaseE) #4
  %8 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %9 = load <2 x i64>, <2 x i64>* %8, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %11 = bitcast i64* %10 to <2 x i64>*
  store <2 x i64> %9, <2 x i64>* %11, align 8
  %12 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.blink::Persistent.2328"* %3 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::tuple"* %12 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %17, align 8
  switch i64 %15, label %18 [
    i64 0, label %44
    i64 -1, label %44
  ]

18:                                               ; preds = %6
  %19 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %20 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %19, i64 0, i32 1
  %21 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %20) #4
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %25, !prof !2

23:                                               ; preds = %18
  %24 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %20, i8* %24) #4
  br label %25

25:                                               ; preds = %23, %18
  %26 = phi i8* [ %24, %23 ], [ %21, %18 ]
  %27 = bitcast i8* %26 to %"class.blink::ThreadState"**
  %28 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %30, i64 0, i32 0, i32 0
  %32 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8
  %33 = icmp eq %"class.blink::PersistentNode"* %32, null
  br i1 %33, label %34, label %37, !prof !2

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %30, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %35) #4
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %31, align 8
  br label %37

37:                                               ; preds = %34, %25
  %38 = phi %"class.blink::PersistentNode"* [ %36, %34 ], [ %32, %25 ]
  %39 = bitcast %"class.blink::PersistentNode"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.blink::PersistentRegion"* %30 to i64*
  store i64 %40, i64* %41, align 8
  %42 = bitcast %"class.blink::PersistentNode"* %38 to %"class.blink::PersistentBase.2329"**
  store %"class.blink::PersistentBase.2329"* %13, %"class.blink::PersistentBase.2329"** %42, align 8
  %43 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %38, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_14XMLHttpRequestELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %43, align 8
  store %"class.blink::PersistentNode"* %38, %"class.blink::PersistentNode"** %17, align 8
  br label %44

44:                                               ; preds = %6, %6, %37
  %45 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %46 = load i32, i32* %4, align 4
  store i32 %46, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %49, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #4
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %56
  tail call void @llvm.trap() #4
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  br label %68

68:                                               ; preds = %44, %51, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink14XMLHttpRequestEFvNS2_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS2_10PersistentIS3_EES4_S6_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to %"struct.base::internal::BindState"*
  tail call void @_ZN4base8internal9BindStateIMN5blink14XMLHttpRequestEFvNS2_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS2_10PersistentIS3_EES4_S6_EED2Ev(%"struct.base::internal::BindState"* nonnull %4) #4
  %5 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #16
  br label %6

6:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink14XMLHttpRequestEFvNS2_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS2_10PersistentIS3_EES4_S6_EED2Ev(%"struct.base::internal::BindState"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #4
  br label %18

18:                                               ; preds = %17, %14, %1
  %19 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %19, align 8
  %21 = icmp eq %"class.blink::PersistentNode"* %20, null
  br i1 %21, label %41, label %22

22:                                               ; preds = %18
  %23 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %24 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %23, i64 0, i32 1
  %25 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %24) #4
  %26 = icmp eq i8* %25, null
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %22
  %28 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %24, i8* %28) #4
  br label %29

29:                                               ; preds = %27, %22
  %30 = phi i8* [ %28, %27 ], [ %25, %22 ]
  %31 = bitcast i8* %30 to %"class.blink::ThreadState"**
  %32 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %33, align 8
  %35 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %19, align 8
  %36 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %34, i64 0, i32 0, i32 0
  %37 = bitcast %"class.blink::PersistentRegion"* %34 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentNode"* %35 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %35, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %40, align 8
  store %"class.blink::PersistentNode"* %35, %"class.blink::PersistentNode"** %36, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %19, align 8
  br label %41

41:                                               ; preds = %18, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.2332"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #4
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #4
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #4
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %37
  tail call void @llvm.trap() #4
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #4
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #4
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_EcvNS_6StringEEv(%"class.WTF::StringAppend.2332"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.2553"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #4
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #4
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %2, i8* %14) #4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #4
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2332"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #4
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.2332"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #4
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %39
  call void @llvm.trap() #4
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #4
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #4
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2332"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #4
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.2332"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #4
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %75
  call void @llvm.trap() #4
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #4
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #4
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.2332"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2333"* %8) #4
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #4
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2333"* %8) #4
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #4
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0), i8* %26, i8* %27) #4
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #4
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #4
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #4
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #4
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #4
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.90, i64 0, i64 0), i8* %41, i8* %42) #4
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #4
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #4
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.2332"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2554", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2554", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2554"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #4
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2554"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2554"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2554"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #4
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2554"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2553"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #4
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #4
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %4, i8* %48) #4
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2555"* nonnull %49, i8* %1) #4
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2553"* nonnull %4, i8* %52) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #4
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2333"* %6) #4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2555"* nonnull %53, i8* %56) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.2332"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2554", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2554", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2554"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #4
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.2554"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.2554"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.2554"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #4
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #4
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.2554"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.2553"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #4
  %47 = getelementptr inbounds %"class.WTF::StringAppend.2332", %"class.WTF::StringAppend.2332"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #4
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %4, i8* %48) #4
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2555"* nonnull %49, i16* %1) #4
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2553"* nonnull %4, i16* %52) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #4
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2554", %"class.WTF::StringTypeAdapter.2554"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2333"* %6) #4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2555"* nonnull %53, i16* %56) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.2333"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2553", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2333", %"class.WTF::StringAppend.2333"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.2553"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #4
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2553", %"class.WTF::StringTypeAdapter.2553"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.2333", %"class.WTF::StringAppend.2333"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.2553"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2553"* nonnull %4, i8* %21) #4
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #4
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #4
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.88, i64 0, i64 0), i8* %30, i8* %31) #4
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #4
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #4
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #4
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #4
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #4
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.90, i64 0, i64 0), i8* %46, i8* %47) #4
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.89, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #4
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #4
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #4
  ret i32 %23
}

declare void @_ZN7network5mojom5blink16TrustTokenParamsC1Ev(%"class.network::mojom::blink::TrustTokenParams"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN5blink17CompareIgnoreCaseENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.2337"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN5blink17CompareIgnoreCaseENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.2337"* %0, %"class.std::__1::__tree_node"* %6) #4
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN5blink17CompareIgnoreCaseENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.2337"* %0, %"class.std::__1::__tree_node"* %9) #4
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #16
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #16
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #4
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.80, i64 0, i64 0), i8* %11, i8* %12) #4
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.81, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #4
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #4
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #4
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #4
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN5blink17CompareIgnoreCaseENS4_IS6_EEE4findIS6_EENS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEERKT_(%"class.std::__1::__tree.2337"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.2337", %"class.std::__1::__tree.2337"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %72, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %13

13:                                               ; preds = %13, %7
  %14 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %43, %13 ]
  %15 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %44, %13 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %24 = select i1 %20, i8* %22, i8* %23
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %19 to i64
  %28 = select i1 %20, i64 %26, i64 %27
  %29 = load i8, i8* %9, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %10, align 8
  %32 = select i1 %30, i8* %31, i8* %11
  %33 = load i64, i64* %12, align 8
  %34 = zext i8 %29 to i64
  %35 = select i1 %30, i64 %33, i64 %34
  %36 = tail call i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %24, i64 %28, i8* %32, i64 %35) #4
  %37 = icmp slt i32 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::__tree_node_base"** %38 to %"class.std::__1::__tree_node"**
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::__tree_node"* %15 to %"class.std::__1::__tree_node"**
  %42 = select i1 %37, %"class.std::__1::__tree_node"** %39, %"class.std::__1::__tree_node"** %41
  %43 = select i1 %37, %"class.std::__1::__tree_end_node"* %14, %"class.std::__1::__tree_end_node"* %40
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %46, label %13

46:                                               ; preds = %13
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %43, %3
  br i1 %47, label %72, label %48

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 4
  %50 = load i8, i8* %9, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i8*, i8** %10, align 8
  %53 = select i1 %51, i8* %52, i8* %11
  %54 = load i64, i64* %12, align 8
  %55 = zext i8 %50 to i64
  %56 = select i1 %51, i64 %54, i64 %55
  %57 = bitcast %"class.std::__1::__tree_end_node"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  %61 = bitcast %"class.std::__1::__tree_end_node"* %49 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = bitcast %"class.std::__1::__tree_end_node"* %49 to i8*
  %64 = select i1 %60, i8* %62, i8* %63
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %59 to i64
  %69 = select i1 %60, i64 %67, i64 %68
  %70 = tail call i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %53, i64 %56, i8* %64, i64 %69) #4
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %46, %2, %48
  br label %73

73:                                               ; preds = %48, %72
  %74 = phi %"class.std::__1::__tree_end_node"* [ %3, %72 ], [ %43, %48 ]
  ret %"class.std::__1::__tree_end_node"* %74
}

declare i32 @_ZN4base27CompareCaseInsensitiveASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairINS_6StringES3_EELj0ENS_18PartitionAllocatorEE14AppendSlowCaseINS2_INS_12AtomicStringES8_EEEEvOT_(%"class.WTF::Vector.2279"*, %"struct.std::__1::pair.2344"* dereferenceable(16)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2279", %"class.WTF::Vector.2279"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2279", %"class.WTF::Vector.2279"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.2279", %"class.WTF::Vector.2279"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"** %16, align 8
  br i1 %15, label %18, label %45, !prof !10

18:                                               ; preds = %2
  %19 = icmp eq %"struct.std::__1::pair.2282"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairINS_6StringES4_EEEEmm(i64 %20) #4
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairINS_6StringES3_EEEEPKcv, i64 0, i64 0)) #4
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.2279"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"struct.std::__1::pair.2282"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"struct.std::__1::pair.2282"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !10

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #4
  %36 = bitcast %"class.WTF::Vector.2279"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #4
  %40 = bitcast %"class.WTF::Vector.2279"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 4
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"struct.std::__1::pair.2282"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"struct.std::__1::pair.2282"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.std::__1::pair.2344", %"struct.std::__1::pair.2344"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %46, i64 %48, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %51, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #4
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !2

67:                                               ; preds = %58
  tail call void @llvm.trap() #4
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %70

70:                                               ; preds = %68, %53, %45
  %71 = getelementptr inbounds %"struct.std::__1::pair.2344", %"struct.std::__1::pair.2344"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %46, i64 %48, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %73, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %74, label %92, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %92

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i33
  %84 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #4
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %80
  tail call void @llvm.trap() #4
  unreachable

90:                                               ; preds = %80
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %81, align 4
  br label %92

92:                                               ; preds = %70, %75, %90
  %93 = load i32, i32* %3, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEvT0_SA_T_"(%"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"*) unnamed_addr #0 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.std::__1::pair.2282"*
  br label %5

5:                                                ; preds = %359, %2
  %6 = phi %"struct.std::__1::pair.2282"* [ %1, %2 ], [ %333, %359 ]
  %7 = phi %"struct.std::__1::pair.2282"* [ %0, %2 ], [ %18, %359 ]
  %8 = ptrtoint %"struct.std::__1::pair.2282"* %6 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %6, i64 -1
  %10 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %9, i64 0, i32 0
  %11 = bitcast %"struct.std::__1::pair.2282"* %9 to i64*
  %12 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %6, i64 -1, i32 1
  %13 = bitcast %"class.WTF::String"* %12 to i64*
  %14 = ptrtoint %"struct.std::__1::pair.2282"* %6 to i64
  br label %15

15:                                               ; preds = %368, %5
  %16 = phi %"struct.std::__1::pair.2282"* [ %7, %5 ], [ %369, %368 ]
  br label %17

17:                                               ; preds = %264, %15
  %18 = phi %"struct.std::__1::pair.2282"* [ %16, %15 ], [ %255, %264 ]
  %19 = ptrtoint %"struct.std::__1::pair.2282"* %18 to i64
  %20 = sub i64 %8, %19
  %21 = ashr exact i64 %20, 4
  switch i64 %21, label %53 [
    i64 0, label %372
    i64 1, label %372
    i64 2, label %22
    i64 3, label %38
    i64 4, label %42
    i64 5, label %47
  ]

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %6, i64 -1
  %24 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %23, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 0, i32 0
  %26 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %24, %"class.WTF::String"* dereferenceable(8) %25) #4
  br i1 %26, label %27, label %372

27:                                               ; preds = %22
  %28 = bitcast %"struct.std::__1::pair.2282"* %18 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"struct.std::__1::pair.2282"* %23 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 %29, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %6, i64 -1, i32 1
  %34 = bitcast %"class.WTF::String"* %32 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.WTF::String"* %33 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %34, align 8
  store i64 %35, i64* %36, align 8
  br label %372

38:                                               ; preds = %17
  %39 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 1
  %40 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %6, i64 -1
  %41 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_T_"(%"struct.std::__1::pair.2282"* %18, %"struct.std::__1::pair.2282"* %39, %"struct.std::__1::pair.2282"* %40)
  br label %372

42:                                               ; preds = %17
  %43 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 1
  %44 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 2
  %45 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %6, i64 -1
  %46 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_SA_T_"(%"struct.std::__1::pair.2282"* %18, %"struct.std::__1::pair.2282"* %43, %"struct.std::__1::pair.2282"* %44, %"struct.std::__1::pair.2282"* %45)
  br label %372

47:                                               ; preds = %17
  %48 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 1
  %49 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 2
  %50 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 3
  %51 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %6, i64 -1
  %52 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_SA_SA_T_"(%"struct.std::__1::pair.2282"* %18, %"struct.std::__1::pair.2282"* %48, %"struct.std::__1::pair.2282"* %49, %"struct.std::__1::pair.2282"* %50, %"struct.std::__1::pair.2282"* %51)
  br label %372

53:                                               ; preds = %17
  %54 = icmp slt i64 %20, 112
  br i1 %54, label %55, label %207

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 2
  %57 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 1
  %58 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_T_"(%"struct.std::__1::pair.2282"* %18, %"struct.std::__1::pair.2282"* %57, %"struct.std::__1::pair.2282"* %56) #4
  %59 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 3
  %60 = icmp eq %"struct.std::__1::pair.2282"* %59, %6
  br i1 %60, label %372, label %61

61:                                               ; preds = %55
  %62 = bitcast <2 x i64>* %3 to i8*
  %63 = bitcast <2 x i64>* %3 to %"class.WTF::StringImpl"**
  %64 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %4, i64 0, i32 1, i32 0, i32 0
  %65 = getelementptr inbounds <2 x i64>, <2 x i64>* %3, i64 0, i64 0
  %66 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %4, i64 0, i32 1
  %67 = bitcast %"class.WTF::String"* %66 to i64*
  %68 = bitcast <2 x i64>* %3 to %"class.WTF::String"*
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %66, i64 0, i32 0, i32 0
  br label %70

70:                                               ; preds = %204, %61
  %71 = phi %"struct.std::__1::pair.2282"* [ %59, %61 ], [ %205, %204 ]
  %72 = phi %"struct.std::__1::pair.2282"* [ %56, %61 ], [ %71, %204 ]
  %73 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %71, i64 0, i32 0
  %74 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %72, i64 0, i32 0
  %75 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %73, %"class.WTF::String"* dereferenceable(8) %74) #4
  br i1 %75, label %76, label %204

76:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #4
  %77 = bitcast %"struct.std::__1::pair.2282"* %71 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8
  store <2 x i64> %78, <2 x i64>* %3, align 16
  %79 = bitcast %"struct.std::__1::pair.2282"* %71 to <2 x %"class.WTF::StringImpl"*>*
  store <2 x %"class.WTF::StringImpl"*> zeroinitializer, <2 x %"class.WTF::StringImpl"*>* %79, align 8
  br label %80

80:                                               ; preds = %128, %76
  %81 = phi %"struct.std::__1::pair.2282"* [ %71, %76 ], [ %82, %128 ]
  %82 = phi %"struct.std::__1::pair.2282"* [ %72, %76 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %82, i64 0, i32 0, i32 0, i32 0
  %84 = bitcast %"struct.std::__1::pair.2282"* %82 to i64*
  %85 = load i64, i64* %84, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %86 = bitcast %"struct.std::__1::pair.2282"* %81 to i64*
  %87 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %81, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  store i64 %85, i64* %86, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %80
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #4
  br label %103

103:                                              ; preds = %102, %99, %80
  %104 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %82, i64 0, i32 1
  %105 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %81, i64 0, i32 1
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %107 = bitcast %"class.WTF::String"* %104 to i64*
  %108 = load i64, i64* %107, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %106, align 8
  %109 = bitcast %"class.WTF::String"* %105 to i64*
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %105, i64 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  store i64 %108, i64* %109, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #4
  br label %126

126:                                              ; preds = %125, %122, %103
  %127 = icmp eq %"struct.std::__1::pair.2282"* %82, %18
  br i1 %127, label %132, label %128

128:                                              ; preds = %126
  %129 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %82, i64 -1
  %130 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %129, i64 0, i32 0
  %131 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %68, %"class.WTF::String"* dereferenceable(8) %130) #4
  br i1 %131, label %80, label %132

132:                                              ; preds = %128, %126
  %133 = phi %"struct.std::__1::pair.2282"* [ %18, %126 ], [ %82, %128 ]
  %134 = bitcast %"struct.std::__1::pair.2282"* %133 to i64*
  %135 = bitcast %"class.WTF::String"* %104 to i64*
  %136 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %133, i64 0, i32 0, i32 0, i32 0
  %138 = load i64, i64* %65, align 16
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %63, align 16
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  store i64 %138, i64* %134, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %132
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #4
  br label %154

154:                                              ; preds = %153, %150, %132
  %155 = load i64, i64* %67, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %136, align 8
  store i64 %155, i64* %135, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #4
  br label %171

171:                                              ; preds = %170, %167, %154
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %171
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #4
  br label %187

187:                                              ; preds = %186, %183, %171
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 16
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %187
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #4
  br label %203

203:                                              ; preds = %202, %199, %187
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #4
  br label %204

204:                                              ; preds = %203, %70
  %205 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %71, i64 1
  %206 = icmp eq %"struct.std::__1::pair.2282"* %205, %6
  br i1 %206, label %372, label %70

207:                                              ; preds = %53
  %208 = icmp sgt i64 %20, 15984
  %209 = sdiv i64 %21, 2
  %210 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 %209
  br i1 %208, label %211, label %216

211:                                              ; preds = %207
  %212 = sdiv i64 %21, 4
  %213 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 %212
  %214 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %210, i64 %212
  %215 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_SA_SA_T_"(%"struct.std::__1::pair.2282"* %18, %"struct.std::__1::pair.2282"* %213, %"struct.std::__1::pair.2282"* %210, %"struct.std::__1::pair.2282"* %214, %"struct.std::__1::pair.2282"* %9)
  br label %218

216:                                              ; preds = %207
  %217 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_T_"(%"struct.std::__1::pair.2282"* %18, %"struct.std::__1::pair.2282"* %210, %"struct.std::__1::pair.2282"* %9)
  br label %218

218:                                              ; preds = %216, %211
  %219 = phi i32 [ %215, %211 ], [ %217, %216 ]
  %220 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 0, i32 0
  %221 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %210, i64 0, i32 0
  %222 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %220, %"class.WTF::String"* dereferenceable(8) %221) #4
  br i1 %222, label %292, label %223

223:                                              ; preds = %218, %277
  %224 = phi %"struct.std::__1::pair.2282"* [ %225, %277 ], [ %9, %218 ]
  %225 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %224, i64 -1
  %226 = icmp eq %"struct.std::__1::pair.2282"* %18, %225
  br i1 %226, label %227, label %277

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 1
  %229 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %220, %"class.WTF::String"* dereferenceable(8) %10) #4
  br i1 %229, label %248, label %230

230:                                              ; preds = %227
  %231 = icmp eq %"struct.std::__1::pair.2282"* %228, %9
  br i1 %231, label %372, label %232

232:                                              ; preds = %230, %245
  %233 = phi %"struct.std::__1::pair.2282"* [ %246, %245 ], [ %228, %230 ]
  %234 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %233, i64 0, i32 0
  %235 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %220, %"class.WTF::String"* dereferenceable(8) %234) #4
  br i1 %235, label %236, label %245

236:                                              ; preds = %232
  %237 = bitcast %"struct.std::__1::pair.2282"* %233 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = load i64, i64* %11, align 8
  store i64 %239, i64* %237, align 8
  store i64 %238, i64* %11, align 8
  %240 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %233, i64 0, i32 1
  %241 = bitcast %"class.WTF::String"* %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = load i64, i64* %13, align 8
  store i64 %243, i64* %241, align 8
  store i64 %242, i64* %13, align 8
  %244 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %233, i64 1
  br label %248

245:                                              ; preds = %232
  %246 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %233, i64 1
  %247 = icmp eq %"struct.std::__1::pair.2282"* %246, %9
  br i1 %247, label %372, label %232

248:                                              ; preds = %236, %227
  %249 = phi %"struct.std::__1::pair.2282"* [ %228, %227 ], [ %244, %236 ]
  %250 = icmp eq %"struct.std::__1::pair.2282"* %249, %9
  br i1 %250, label %372, label %251

251:                                              ; preds = %248, %266
  %252 = phi %"struct.std::__1::pair.2282"* [ %258, %266 ], [ %249, %248 ]
  %253 = phi %"struct.std::__1::pair.2282"* [ %261, %266 ], [ %9, %248 ]
  br label %254

254:                                              ; preds = %254, %251
  %255 = phi %"struct.std::__1::pair.2282"* [ %252, %251 ], [ %258, %254 ]
  %256 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %255, i64 0, i32 0
  %257 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %220, %"class.WTF::String"* dereferenceable(8) %256) #4
  %258 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %255, i64 1
  br i1 %257, label %259, label %254

259:                                              ; preds = %254, %259
  %260 = phi %"struct.std::__1::pair.2282"* [ %261, %259 ], [ %253, %254 ]
  %261 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %260, i64 -1
  %262 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %261, i64 0, i32 0
  %263 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %220, %"class.WTF::String"* dereferenceable(8) %262) #4
  br i1 %263, label %259, label %264

264:                                              ; preds = %259
  %265 = icmp ult %"struct.std::__1::pair.2282"* %255, %261
  br i1 %265, label %266, label %17

266:                                              ; preds = %264
  %267 = bitcast %"struct.std::__1::pair.2282"* %255 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = bitcast %"struct.std::__1::pair.2282"* %261 to i64*
  %270 = load i64, i64* %269, align 8
  store i64 %270, i64* %267, align 8
  store i64 %268, i64* %269, align 8
  %271 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %255, i64 0, i32 1
  %272 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %260, i64 -1, i32 1
  %273 = bitcast %"class.WTF::String"* %271 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = bitcast %"class.WTF::String"* %272 to i64*
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %273, align 8
  store i64 %274, i64* %275, align 8
  br label %251

277:                                              ; preds = %223
  %278 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %225, i64 0, i32 0
  %279 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %278, %"class.WTF::String"* dereferenceable(8) %221) #4
  br i1 %279, label %280, label %223

280:                                              ; preds = %277
  %281 = bitcast %"struct.std::__1::pair.2282"* %18 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"struct.std::__1::pair.2282"* %225 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %281, align 8
  store i64 %282, i64* %283, align 8
  %285 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 0, i32 1
  %286 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %224, i64 -1, i32 1
  %287 = bitcast %"class.WTF::String"* %285 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = bitcast %"class.WTF::String"* %286 to i64*
  %290 = load i64, i64* %289, align 8
  store i64 %290, i64* %287, align 8
  store i64 %288, i64* %289, align 8
  %291 = add i32 %219, 1
  br label %292

292:                                              ; preds = %218, %280
  %293 = phi i32 [ %291, %280 ], [ %219, %218 ]
  %294 = phi %"struct.std::__1::pair.2282"* [ %225, %280 ], [ %9, %218 ]
  %295 = ptrtoint %"struct.std::__1::pair.2282"* %18 to i64
  %296 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %18, i64 1
  %297 = icmp ult %"struct.std::__1::pair.2282"* %296, %294
  br i1 %297, label %298, label %330

298:                                              ; preds = %292, %316
  %299 = phi %"struct.std::__1::pair.2282"* [ %329, %316 ], [ %210, %292 ]
  %300 = phi i32 [ %327, %316 ], [ %293, %292 ]
  %301 = phi %"struct.std::__1::pair.2282"* [ %308, %316 ], [ %296, %292 ]
  %302 = phi %"struct.std::__1::pair.2282"* [ %311, %316 ], [ %294, %292 ]
  %303 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %299, i64 0, i32 0
  br label %304

304:                                              ; preds = %304, %298
  %305 = phi %"struct.std::__1::pair.2282"* [ %301, %298 ], [ %308, %304 ]
  %306 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %305, i64 0, i32 0
  %307 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %306, %"class.WTF::String"* dereferenceable(8) %303) #4
  %308 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %305, i64 1
  br i1 %307, label %304, label %309

309:                                              ; preds = %304, %309
  %310 = phi %"struct.std::__1::pair.2282"* [ %311, %309 ], [ %302, %304 ]
  %311 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %310, i64 -1
  %312 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %311, i64 0, i32 0
  %313 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %312, %"class.WTF::String"* dereferenceable(8) %303) #4
  br i1 %313, label %314, label %309

314:                                              ; preds = %309
  %315 = icmp ugt %"struct.std::__1::pair.2282"* %305, %311
  br i1 %315, label %330, label %316

316:                                              ; preds = %314
  %317 = bitcast %"struct.std::__1::pair.2282"* %305 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = bitcast %"struct.std::__1::pair.2282"* %311 to i64*
  %320 = load i64, i64* %319, align 8
  store i64 %320, i64* %317, align 8
  store i64 %318, i64* %319, align 8
  %321 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %305, i64 0, i32 1
  %322 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %310, i64 -1, i32 1
  %323 = bitcast %"class.WTF::String"* %321 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast %"class.WTF::String"* %322 to i64*
  %326 = load i64, i64* %325, align 8
  store i64 %326, i64* %323, align 8
  store i64 %324, i64* %325, align 8
  %327 = add i32 %300, 1
  %328 = icmp eq %"struct.std::__1::pair.2282"* %299, %305
  %329 = select i1 %328, %"struct.std::__1::pair.2282"* %311, %"struct.std::__1::pair.2282"* %299
  br label %298

330:                                              ; preds = %314, %292
  %331 = phi %"struct.std::__1::pair.2282"* [ %210, %292 ], [ %299, %314 ]
  %332 = phi i32 [ %293, %292 ], [ %300, %314 ]
  %333 = phi %"struct.std::__1::pair.2282"* [ %296, %292 ], [ %305, %314 ]
  %334 = icmp eq %"struct.std::__1::pair.2282"* %333, %331
  br i1 %334, label %351, label %335

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %331, i64 0, i32 0
  %337 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %333, i64 0, i32 0
  %338 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %336, %"class.WTF::String"* dereferenceable(8) %337) #4
  br i1 %338, label %339, label %351

339:                                              ; preds = %335
  %340 = bitcast %"struct.std::__1::pair.2282"* %333 to i64*
  %341 = load i64, i64* %340, align 8
  %342 = bitcast %"struct.std::__1::pair.2282"* %331 to i64*
  %343 = load i64, i64* %342, align 8
  store i64 %343, i64* %340, align 8
  store i64 %341, i64* %342, align 8
  %344 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %333, i64 0, i32 1
  %345 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %331, i64 0, i32 1
  %346 = bitcast %"class.WTF::String"* %344 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = bitcast %"class.WTF::String"* %345 to i64*
  %349 = load i64, i64* %348, align 8
  store i64 %349, i64* %346, align 8
  store i64 %347, i64* %348, align 8
  %350 = add i32 %332, 1
  br label %351

351:                                              ; preds = %330, %339, %335
  %352 = phi i32 [ %350, %339 ], [ %332, %335 ], [ %332, %330 ]
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %361

354:                                              ; preds = %351
  %355 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEbT0_SA_T_"(%"struct.std::__1::pair.2282"* %18, %"struct.std::__1::pair.2282"* %333)
  %356 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %333, i64 1
  %357 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEbT0_SA_T_"(%"struct.std::__1::pair.2282"* %356, %"struct.std::__1::pair.2282"* %6)
  br i1 %357, label %358, label %360

358:                                              ; preds = %354
  br i1 %355, label %372, label %359

359:                                              ; preds = %358, %370
  br label %5

360:                                              ; preds = %354
  br i1 %355, label %368, label %361

361:                                              ; preds = %360, %351
  %362 = ptrtoint %"struct.std::__1::pair.2282"* %333 to i64
  %363 = sub i64 %362, %295
  %364 = sub i64 %14, %362
  %365 = icmp slt i64 %363, %364
  br i1 %365, label %366, label %370

366:                                              ; preds = %361
  tail call fastcc void @"_ZNSt3__16__sortIRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEvT0_SA_T_"(%"struct.std::__1::pair.2282"* %18, %"struct.std::__1::pair.2282"* %333)
  %367 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %333, i64 1
  br label %368

368:                                              ; preds = %366, %360
  %369 = phi %"struct.std::__1::pair.2282"* [ %356, %360 ], [ %367, %366 ]
  br label %15

370:                                              ; preds = %361
  %371 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %333, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEvT0_SA_T_"(%"struct.std::__1::pair.2282"* %371, %"struct.std::__1::pair.2282"* %6)
  br label %359

372:                                              ; preds = %358, %248, %17, %17, %230, %245, %204, %55, %22, %27, %38, %42, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_T_"(%"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"*) unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5) #4
  %7 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %2, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %4) #4
  br i1 %6, label %30, label %9

9:                                                ; preds = %3
  br i1 %8, label %10, label %60

10:                                               ; preds = %9
  %11 = bitcast %"struct.std::__1::pair.2282"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"struct.std::__1::pair.2282"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 %12, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %1, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %2, i64 0, i32 1
  %17 = bitcast %"class.WTF::String"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.WTF::String"* %16 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %17, align 8
  store i64 %18, i64* %19, align 8
  %21 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5) #4
  br i1 %21, label %22, label %60

22:                                               ; preds = %10
  %23 = bitcast %"struct.std::__1::pair.2282"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %11, align 8
  store i64 %25, i64* %23, align 8
  store i64 %24, i64* %11, align 8
  %26 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 0, i32 1
  %27 = bitcast %"class.WTF::String"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = load i64, i64* %17, align 8
  store i64 %29, i64* %27, align 8
  store i64 %28, i64* %17, align 8
  br label %60

30:                                               ; preds = %3
  %31 = bitcast %"struct.std::__1::pair.2282"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  br i1 %8, label %33, label %42

33:                                               ; preds = %30
  %34 = bitcast %"struct.std::__1::pair.2282"* %2 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %31, align 8
  store i64 %32, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %2, i64 0, i32 1
  %38 = bitcast %"class.WTF::String"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.WTF::String"* %37 to i64*
  %41 = load i64, i64* %40, align 8
  store i64 %41, i64* %38, align 8
  store i64 %39, i64* %40, align 8
  br label %60

42:                                               ; preds = %30
  %43 = bitcast %"struct.std::__1::pair.2282"* %1 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %31, align 8
  store i64 %32, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %1, i64 0, i32 1
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::String"* %46 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %47, align 8
  store i64 %48, i64* %49, align 8
  %51 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %4) #4
  br i1 %51, label %52, label %60

52:                                               ; preds = %42
  %53 = load i64, i64* %43, align 8
  %54 = bitcast %"struct.std::__1::pair.2282"* %2 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %43, align 8
  store i64 %53, i64* %54, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %2, i64 0, i32 1
  %57 = load i64, i64* %49, align 8
  %58 = bitcast %"class.WTF::String"* %56 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %49, align 8
  store i64 %57, i64* %58, align 8
  br label %60

60:                                               ; preds = %42, %52, %10, %22, %9, %33
  %61 = phi i32 [ 1, %33 ], [ 0, %9 ], [ 2, %22 ], [ 1, %10 ], [ 2, %52 ], [ 1, %42 ]
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_SA_T_"(%"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"*) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_T_"(%"struct.std::__1::pair.2282"* %0, %"struct.std::__1::pair.2282"* %1, %"struct.std::__1::pair.2282"* %2)
  %6 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %2, i64 0, i32 0
  %8 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %7) #4
  br i1 %8, label %9, label %43

9:                                                ; preds = %4
  %10 = bitcast %"struct.std::__1::pair.2282"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.std::__1::pair.2282"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %2, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %3, i64 0, i32 1
  %16 = bitcast %"class.WTF::String"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.WTF::String"* %15 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = add i32 %5, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %1, i64 0, i32 0
  %22 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %21) #4
  br i1 %22, label %23, label %43

23:                                               ; preds = %9
  %24 = bitcast %"struct.std::__1::pair.2282"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = load i64, i64* %10, align 8
  store i64 %26, i64* %24, align 8
  store i64 %25, i64* %10, align 8
  %27 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %1, i64 0, i32 1
  %28 = bitcast %"class.WTF::String"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %16, align 8
  store i64 %30, i64* %28, align 8
  store i64 %29, i64* %16, align 8
  %31 = add i32 %5, 2
  %32 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 0, i32 0
  %33 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %21, %"class.WTF::String"* dereferenceable(8) %32) #4
  br i1 %33, label %34, label %43

34:                                               ; preds = %23
  %35 = bitcast %"struct.std::__1::pair.2282"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = load i64, i64* %24, align 8
  store i64 %37, i64* %35, align 8
  store i64 %36, i64* %24, align 8
  %38 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 0, i32 1
  %39 = bitcast %"class.WTF::String"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %28, align 8
  store i64 %41, i64* %39, align 8
  store i64 %40, i64* %28, align 8
  %42 = add i32 %5, 3
  br label %43

43:                                               ; preds = %9, %34, %23, %4
  %44 = phi i32 [ %42, %34 ], [ %31, %23 ], [ %20, %9 ], [ %5, %4 ]
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_SA_SA_T_"(%"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"*) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_SA_T_"(%"struct.std::__1::pair.2282"* %0, %"struct.std::__1::pair.2282"* %1, %"struct.std::__1::pair.2282"* %2, %"struct.std::__1::pair.2282"* %3)
  %7 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %3, i64 0, i32 0
  %9 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %8) #4
  br i1 %9, label %10, label %55

10:                                               ; preds = %5
  %11 = bitcast %"struct.std::__1::pair.2282"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"struct.std::__1::pair.2282"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 %12, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %3, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %4, i64 0, i32 1
  %17 = bitcast %"class.WTF::String"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.WTF::String"* %16 to i64*
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %17, align 8
  store i64 %18, i64* %19, align 8
  %21 = add i32 %6, 1
  %22 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %2, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %22) #4
  br i1 %23, label %24, label %55

24:                                               ; preds = %10
  %25 = bitcast %"struct.std::__1::pair.2282"* %2 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %11, align 8
  store i64 %27, i64* %25, align 8
  store i64 %26, i64* %11, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %2, i64 0, i32 1
  %29 = bitcast %"class.WTF::String"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = load i64, i64* %17, align 8
  store i64 %31, i64* %29, align 8
  store i64 %30, i64* %17, align 8
  %32 = add i32 %6, 2
  %33 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %1, i64 0, i32 0
  %34 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %22, %"class.WTF::String"* dereferenceable(8) %33) #4
  br i1 %34, label %35, label %55

35:                                               ; preds = %24
  %36 = bitcast %"struct.std::__1::pair.2282"* %1 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = load i64, i64* %25, align 8
  store i64 %38, i64* %36, align 8
  store i64 %37, i64* %25, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %1, i64 0, i32 1
  %40 = bitcast %"class.WTF::String"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = load i64, i64* %29, align 8
  store i64 %42, i64* %40, align 8
  store i64 %41, i64* %29, align 8
  %43 = add i32 %6, 3
  %44 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 0, i32 0
  %45 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %33, %"class.WTF::String"* dereferenceable(8) %44) #4
  br i1 %45, label %46, label %55

46:                                               ; preds = %35
  %47 = bitcast %"struct.std::__1::pair.2282"* %0 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = load i64, i64* %36, align 8
  store i64 %49, i64* %47, align 8
  store i64 %48, i64* %36, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 0, i32 1
  %51 = bitcast %"class.WTF::String"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = load i64, i64* %40, align 8
  store i64 %53, i64* %51, align 8
  store i64 %52, i64* %40, align 8
  %54 = add i32 %6, 4
  br label %55

55:                                               ; preds = %10, %35, %46, %24, %5
  %56 = phi i32 [ %54, %46 ], [ %43, %35 ], [ %32, %24 ], [ %21, %10 ], [ %6, %5 ]
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEbT0_SA_T_"(%"struct.std::__1::pair.2282"*, %"struct.std::__1::pair.2282"*) unnamed_addr #0 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.std::__1::pair.2282"*
  %5 = ptrtoint %"struct.std::__1::pair.2282"* %1 to i64
  %6 = ptrtoint %"struct.std::__1::pair.2282"* %0 to i64
  %7 = sub i64 %5, %6
  %8 = ashr exact i64 %7, 4
  switch i64 %8, label %40 [
    i64 0, label %199
    i64 1, label %199
    i64 2, label %9
    i64 3, label %25
    i64 4, label %29
    i64 5, label %34
  ]

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %1, i64 -1
  %11 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %11, %"class.WTF::String"* dereferenceable(8) %12) #4
  br i1 %13, label %14, label %199

14:                                               ; preds = %9
  %15 = bitcast %"struct.std::__1::pair.2282"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"struct.std::__1::pair.2282"* %10 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %1, i64 -1, i32 1
  %21 = bitcast %"class.WTF::String"* %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.WTF::String"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %21, align 8
  store i64 %22, i64* %23, align 8
  br label %199

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 1
  %27 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %1, i64 -1
  %28 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_T_"(%"struct.std::__1::pair.2282"* %0, %"struct.std::__1::pair.2282"* %26, %"struct.std::__1::pair.2282"* %27)
  br label %199

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 1
  %31 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 2
  %32 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %1, i64 -1
  %33 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_SA_T_"(%"struct.std::__1::pair.2282"* %0, %"struct.std::__1::pair.2282"* %30, %"struct.std::__1::pair.2282"* %31, %"struct.std::__1::pair.2282"* %32)
  br label %199

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 1
  %36 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 2
  %37 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 3
  %38 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %1, i64 -1
  %39 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_SA_SA_T_"(%"struct.std::__1::pair.2282"* %0, %"struct.std::__1::pair.2282"* %35, %"struct.std::__1::pair.2282"* %36, %"struct.std::__1::pair.2282"* %37, %"struct.std::__1::pair.2282"* %38)
  br label %199

40:                                               ; preds = %2
  %41 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 2
  %42 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 1
  %43 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK5blink14XMLHttpRequest21getAllResponseHeadersEvE3$_2PNS_4pairIN3WTF6StringES7_EEEEjT0_SA_SA_T_"(%"struct.std::__1::pair.2282"* %0, %"struct.std::__1::pair.2282"* %42, %"struct.std::__1::pair.2282"* %41)
  %44 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %0, i64 3
  %45 = icmp eq %"struct.std::__1::pair.2282"* %44, %1
  br i1 %45, label %199, label %46

46:                                               ; preds = %40
  %47 = bitcast <2 x i64>* %3 to i8*
  %48 = bitcast <2 x i64>* %3 to %"class.WTF::StringImpl"**
  %49 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %4, i64 0, i32 1, i32 0, i32 0
  %50 = getelementptr inbounds <2 x i64>, <2 x i64>* %3, i64 0, i64 0
  %51 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %4, i64 0, i32 1
  %52 = bitcast %"class.WTF::String"* %51 to i64*
  %53 = bitcast <2 x i64>* %3 to %"class.WTF::String"*
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %51, i64 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %46, %192
  %56 = phi %"struct.std::__1::pair.2282"* [ %44, %46 ], [ %194, %192 ]
  %57 = phi i32 [ 0, %46 ], [ %193, %192 ]
  %58 = phi %"struct.std::__1::pair.2282"* [ %41, %46 ], [ %56, %192 ]
  %59 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %56, i64 0, i32 0
  %60 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %58, i64 0, i32 0
  %61 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8) %59, %"class.WTF::String"* dereferenceable(8) %60) #4
  br i1 %61, label %62, label %192

62:                                               ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #4
  %63 = bitcast %"struct.std::__1::pair.2282"* %56 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 8
  store <2 x i64> %64, <2 x i64>* %3, align 16
  %65 = bitcast %"struct.std::__1::pair.2282"* %56 to <2 x %"class.WTF::StringImpl"*>*
  store <2 x %"class.WTF::StringImpl"*> zeroinitializer, <2 x %"class.WTF::StringImpl"*>* %65, align 8
  br label %66

66:                                               ; preds = %114, %62
  %67 = phi %"struct.std::__1::pair.2282"* [ %56, %62 ], [ %68, %114 ]
  %68 = phi %"struct.std::__1::pair.2282"* [ %58, %62 ], [ %115, %114 ]
  %69 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"struct.std::__1::pair.2282"* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %72 = bitcast %"struct.std::__1::pair.2282"* %67 to i64*
  %73 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %67, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  store i64 %71, i64* %72, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #4
  br label %89

89:                                               ; preds = %88, %85, %66
  %90 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %68, i64 0, i32 1
  %91 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %67, i64 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 0, i32 0, i32 0
  %93 = bitcast %"class.WTF::String"* %90 to i64*
  %94 = load i64, i64* %93, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %92, align 8
  %95 = bitcast %"class.WTF::String"* %91 to i64*
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %91, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  store i64 %94, i64* %95, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %89
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #4
  br label %112

112:                                              ; preds = %89, %108, %111
  %113 = icmp eq %"struct.std::__1::pair.2282"* %68, %0
  br i1 %113, label %118, label %114

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %68, i64 -1
  %116 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %115, i64 0, i32 0
  %117 = call zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* nonnull dereferenceable(8) %53, %"class.WTF::String"* dereferenceable(8) %116) #4
  br i1 %117, label %66, label %118

118:                                              ; preds = %112, %114
  %119 = phi %"struct.std::__1::pair.2282"* [ %68, %114 ], [ %0, %112 ]
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 0, i32 0, i32 0
  %121 = bitcast %"class.WTF::String"* %90 to i64*
  %122 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %119, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"struct.std::__1::pair.2282"* %119 to i64*
  %124 = load i64, i64* %50, align 16
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 16
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  store i64 %124, i64* %123, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %140, label %127

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #4
  br label %140

140:                                              ; preds = %139, %136, %118
  %141 = load i64, i64* %52, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %54, align 8
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  store i64 %141, i64* %121, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #4
  br label %157

157:                                              ; preds = %140, %153, %156
  %158 = add i32 %57, 1
  %159 = icmp eq i32 %158, 8
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #4
  br label %175

175:                                              ; preds = %174, %171, %157
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 16
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #4
  br label %191

191:                                              ; preds = %175, %187, %190
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #4
  br i1 %159, label %196, label %192

192:                                              ; preds = %191, %55
  %193 = phi i32 [ %158, %191 ], [ %57, %55 ]
  %194 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %56, i64 1
  %195 = icmp eq %"struct.std::__1::pair.2282"* %194, %1
  br i1 %195, label %199, label %55

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"struct.std::__1::pair.2282", %"struct.std::__1::pair.2282"* %56, i64 1
  %198 = icmp eq %"struct.std::__1::pair.2282"* %197, %1
  br label %199

199:                                              ; preds = %192, %196, %40, %9, %14, %2, %2, %34, %29, %25
  %200 = phi i1 [ true, %34 ], [ true, %29 ], [ true, %25 ], [ true, %2 ], [ true, %2 ], [ true, %14 ], [ true, %9 ], [ true, %40 ], [ %198, %196 ], [ true, %192 ]
  ret i1 %200
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF23CodeUnitCompareLessThanERKNS_6StringES2_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %4, null
  %8 = icmp ne %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %9, label %15

9:                                                ; preds = %2
  br i1 %8, label %10, label %168

10:                                               ; preds = %9
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = sext i1 %13 to i32
  br label %168

15:                                               ; preds = %2
  br i1 %8, label %21, label %16

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  %20 = zext i1 %19 to i32
  br label %168

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 1
  %29 = icmp ne i32 %28, 0
  br i1 %25, label %94, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %32, %34
  %36 = select i1 %35, i32 %32, i32 %34
  %37 = icmp eq i32 %36, 0
  br i1 %29, label %38, label %64

38:                                               ; preds = %30
  br i1 %37, label %59, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %51, %39
  %45 = phi i32 [ %54, %51 ], [ 0, %39 ]
  %46 = phi i8* [ %53, %51 ], [ %41, %39 ]
  %47 = phi i8* [ %52, %51 ], [ %43, %39 ]
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %46, align 1
  %50 = icmp eq i8 %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %44
  %52 = getelementptr inbounds i8, i8* %47, i64 1
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  %54 = add nuw i32 %45, 1
  %55 = icmp ult i32 %54, %36
  br i1 %55, label %44, label %59

56:                                               ; preds = %44
  %57 = icmp ugt i8 %48, %49
  %58 = select i1 %57, i32 1, i32 -1
  br label %168

59:                                               ; preds = %51, %38
  %60 = icmp eq i32 %32, %34
  br i1 %60, label %168, label %61

61:                                               ; preds = %59
  %62 = icmp ugt i32 %32, %34
  %63 = select i1 %62, i32 1, i32 -1
  br label %168

64:                                               ; preds = %30
  br i1 %37, label %89, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %67 = bitcast %"class.WTF::StringImpl"* %66 to i16*
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %69 = bitcast %"class.WTF::StringImpl"* %68 to i8*
  br label %70

70:                                               ; preds = %79, %65
  %71 = phi i32 [ %82, %79 ], [ 0, %65 ]
  %72 = phi i16* [ %81, %79 ], [ %67, %65 ]
  %73 = phi i8* [ %80, %79 ], [ %69, %65 ]
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i32
  %76 = load i16, i16* %72, align 2
  %77 = zext i16 %76 to i32
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %70
  %80 = getelementptr inbounds i8, i8* %73, i64 1
  %81 = getelementptr inbounds i16, i16* %72, i64 1
  %82 = add nuw i32 %71, 1
  %83 = icmp ult i32 %82, %36
  br i1 %83, label %70, label %89

84:                                               ; preds = %70
  %85 = zext i8 %74 to i32
  %86 = zext i16 %76 to i32
  %87 = icmp ugt i32 %85, %86
  %88 = select i1 %87, i32 1, i32 -1
  br label %168

89:                                               ; preds = %79, %64
  %90 = icmp eq i32 %32, %34
  br i1 %90, label %168, label %91

91:                                               ; preds = %89
  %92 = icmp ugt i32 %32, %34
  %93 = select i1 %92, i32 1, i32 -1
  br label %168

94:                                               ; preds = %21
  br i1 %29, label %95, label %135

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ult i32 %97, %99
  %101 = select i1 %100, i32 %97, i32 %99
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %127, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %105 = bitcast %"class.WTF::StringImpl"* %104 to i16*
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %107 = bitcast %"class.WTF::StringImpl"* %106 to i8*
  br label %108

108:                                              ; preds = %117, %103
  %109 = phi i32 [ %120, %117 ], [ 0, %103 ]
  %110 = phi i16* [ %119, %117 ], [ %105, %103 ]
  %111 = phi i8* [ %118, %117 ], [ %107, %103 ]
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = load i16, i16* %110, align 2
  %115 = zext i16 %114 to i32
  %116 = icmp eq i32 %113, %115
  br i1 %116, label %117, label %122

117:                                              ; preds = %108
  %118 = getelementptr inbounds i8, i8* %111, i64 1
  %119 = getelementptr inbounds i16, i16* %110, i64 1
  %120 = add nuw i32 %109, 1
  %121 = icmp ult i32 %120, %101
  br i1 %121, label %108, label %127

122:                                              ; preds = %108
  %123 = zext i8 %112 to i32
  %124 = zext i16 %114 to i32
  %125 = icmp ugt i32 %123, %124
  %126 = select i1 %125, i32 1, i32 -1
  br label %132

127:                                              ; preds = %117, %95
  %128 = icmp eq i32 %97, %99
  br i1 %128, label %132, label %129

129:                                              ; preds = %127
  %130 = icmp ugt i32 %97, %99
  %131 = select i1 %130, i32 1, i32 -1
  br label %132

132:                                              ; preds = %129, %127, %122
  %133 = phi i32 [ %126, %122 ], [ %131, %129 ], [ 0, %127 ]
  %134 = sub nsw i32 0, %133
  br label %168

135:                                              ; preds = %94
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %137 = load i32, i32* %136, align 4
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %139 = load i32, i32* %138, align 4
  %140 = icmp ult i32 %137, %139
  %141 = select i1 %140, i32 %137, i32 %139
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %163, label %143

143:                                              ; preds = %135
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %145 = bitcast %"class.WTF::StringImpl"* %144 to i16*
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  %147 = bitcast %"class.WTF::StringImpl"* %146 to i16*
  br label %148

148:                                              ; preds = %155, %143
  %149 = phi i32 [ %158, %155 ], [ 0, %143 ]
  %150 = phi i16* [ %157, %155 ], [ %145, %143 ]
  %151 = phi i16* [ %156, %155 ], [ %147, %143 ]
  %152 = load i16, i16* %151, align 2
  %153 = load i16, i16* %150, align 2
  %154 = icmp eq i16 %152, %153
  br i1 %154, label %155, label %160

155:                                              ; preds = %148
  %156 = getelementptr inbounds i16, i16* %151, i64 1
  %157 = getelementptr inbounds i16, i16* %150, i64 1
  %158 = add nuw i32 %149, 1
  %159 = icmp ult i32 %158, %141
  br i1 %159, label %148, label %163

160:                                              ; preds = %148
  %161 = icmp ugt i16 %152, %153
  %162 = select i1 %161, i32 1, i32 -1
  br label %168

163:                                              ; preds = %155, %135
  %164 = icmp eq i32 %137, %139
  br i1 %164, label %168, label %165

165:                                              ; preds = %163
  %166 = icmp ugt i32 %137, %139
  %167 = select i1 %166, i32 1, i32 -1
  br label %168

168:                                              ; preds = %9, %10, %16, %56, %59, %61, %84, %89, %91, %132, %160, %163, %165
  %169 = phi i32 [ %20, %16 ], [ 0, %9 ], [ %14, %10 ], [ %134, %132 ], [ %58, %56 ], [ %63, %61 ], [ 0, %59 ], [ %88, %84 ], [ %93, %91 ], [ 0, %89 ], [ %162, %160 ], [ %167, %165 ], [ 0, %163 ]
  %170 = icmp slt i32 %169, 0
  ret i1 %170
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14XMLHttpRequest10BlobLoaderEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #4
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #4
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14XMLHttpRequest10BlobLoaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14XMLHttpRequest10BlobLoaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14XMLHttpRequest10BlobLoaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #4
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14XMLHttpRequest10BlobLoaderEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14XMLHttpRequest10BlobLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14XMLHttpRequestEE5TraceEPNS_7VisitorEPKv) #4
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14XMLHttpRequest10BlobLoaderEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14XMLHttpRequest10BlobLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 16
  %4 = bitcast i8* %3 to %"class.blink::FileReaderLoader"**
  %5 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %4, align 8
  store %"class.blink::FileReaderLoader"* null, %"class.blink::FileReaderLoader"** %4, align 8
  %6 = icmp eq %"class.blink::FileReaderLoader"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::FileReaderLoader"* %5 to void (%"class.blink::FileReaderLoader"*)***
  %9 = load void (%"class.blink::FileReaderLoader"*)**, void (%"class.blink::FileReaderLoader"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %9, i64 1
  %11 = load void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %10, align 8
  tail call void %11(%"class.blink::FileReaderLoader"* nonnull %5) #4
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14XMLHttpRequest10BlobLoaderEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14XMLHttpRequest10BlobLoaderD2Ev(%"class.blink::XMLHttpRequest::BlobLoader"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest::BlobLoader", %"class.blink::XMLHttpRequest::BlobLoader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14XMLHttpRequest10BlobLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest::BlobLoader", %"class.blink::XMLHttpRequest::BlobLoader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %3, align 8
  store %"class.blink::FileReaderLoader"* null, %"class.blink::FileReaderLoader"** %3, align 8
  %5 = icmp eq %"class.blink::FileReaderLoader"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::FileReaderLoader"* %4 to void (%"class.blink::FileReaderLoader"*)***
  %8 = load void (%"class.blink::FileReaderLoader"*)**, void (%"class.blink::FileReaderLoader"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %8, i64 1
  %10 = load void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %9, align 8
  tail call void %10(%"class.blink::FileReaderLoader"* nonnull %4) #4
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14XMLHttpRequest10BlobLoaderD0Ev(%"class.blink::XMLHttpRequest::BlobLoader"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest::BlobLoader", %"class.blink::XMLHttpRequest::BlobLoader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14XMLHttpRequest10BlobLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest::BlobLoader", %"class.blink::XMLHttpRequest::BlobLoader"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.blink::FileReaderLoader"*, %"class.blink::FileReaderLoader"** %3, align 8
  store %"class.blink::FileReaderLoader"* null, %"class.blink::FileReaderLoader"** %3, align 8
  %5 = icmp eq %"class.blink::FileReaderLoader"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::FileReaderLoader"* %4 to void (%"class.blink::FileReaderLoader"*)***
  %8 = load void (%"class.blink::FileReaderLoader"*)**, void (%"class.blink::FileReaderLoader"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %8, i64 1
  %10 = load void (%"class.blink::FileReaderLoader"*)*, void (%"class.blink::FileReaderLoader"*)** %9, align 8
  tail call void %10(%"class.blink::FileReaderLoader"* nonnull %4) #4
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14XMLHttpRequest10BlobLoader15DidStartLoadingEv(%"class.blink::XMLHttpRequest::BlobLoader"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22FileReaderLoaderClient14DidReceiveDataEv(%"class.blink::FileReaderLoaderClient"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14XMLHttpRequest10BlobLoader23DidReceiveDataForClientEPKcj(%"class.blink::XMLHttpRequest::BlobLoader"*, i8*, i32) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::XMLHttpRequest::BlobLoader", %"class.blink::XMLHttpRequest::BlobLoader"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %4, align 8
  tail call void @_ZN5blink14XMLHttpRequest14DidReceiveDataEPKcj(%"class.blink::XMLHttpRequest"* %5, i8* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14XMLHttpRequest10BlobLoader16DidFinishLoadingEv(%"class.blink::XMLHttpRequest::BlobLoader"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::XMLHttpRequest::BlobLoader", %"class.blink::XMLHttpRequest::BlobLoader"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %3, i64 0, i32 36
  %5 = load i32, i32* %4, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 4
  tail call void @_ZN5blink14XMLHttpRequest24DidFinishLoadingInternalEv(%"class.blink::XMLHttpRequest"* %3) #4
  %7 = load i32, i32* %4, align 4
  %8 = add nsw i32 %7, -1
  store i32 %8, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14XMLHttpRequest10BlobLoader7DidFailENS_13FileErrorCodeE(%"class.blink::XMLHttpRequest::BlobLoader"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::XMLHttpRequest::BlobLoader", %"class.blink::XMLHttpRequest::BlobLoader"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::XMLHttpRequest"*, %"class.blink::XMLHttpRequest"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %4, i64 0, i32 36
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %5, align 4
  %8 = getelementptr inbounds %"class.blink::XMLHttpRequest", %"class.blink::XMLHttpRequest"* %4, i64 0, i32 40
  %9 = load i8, i8* %8, align 1, !range !6
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  tail call void @_ZN5blink14XMLHttpRequest13InternalAbortEv(%"class.blink::XMLHttpRequest"* %4) #4
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  tail call void @_ZN5blink14XMLHttpRequest18HandleRequestErrorENS_16DOMExceptionCodeERKN3WTF12AtomicStringE(%"class.blink::XMLHttpRequest"* %4, i32 19, %"class.WTF::AtomicString"* dereferenceable(8) %12) #4
  %13 = load i32, i32* %5, align 4
  br label %14

14:                                               ; preds = %2, %11
  %15 = phi i32 [ %7, %2 ], [ %13, %11 ]
  %16 = add nsw i32 %15, -1
  store i32 %16, i32* %5, align 4
  ret void
}

declare void @_ZN5blink16FileReaderLoader5StartE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::FileReaderLoader"*, %"class.blink::BlobDataHandle"*) local_unnamed_addr #2

declare void @_ZN5blink16FileReaderLoaderC1ENS0_8ReadTypeEPNS_22FileReaderLoaderClientE13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::FileReaderLoader"*, i32, %"class.blink::FileReaderLoaderClient"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #2

declare void @_ZN5blink19TextResourceDecoderC1ERKNS_26TextResourceDecoderOptionsE(%"class.blink::TextResourceDecoder"*, %"class.blink::TextResourceDecoderOptions"* dereferenceable(152)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4BlobEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14DocumentParserEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DocumentParser"*
  %4 = bitcast i8* %1 to void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)**, void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)*, void (%"class.blink::DocumentParser"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::DocumentParser"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14DOMArrayBufferEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20XMLHttpRequestUploadEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::XMLHttpRequestUpload"*
  tail call void @_ZNK5blink20XMLHttpRequestUpload5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequestUpload"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

declare void @_ZNK5blink20XMLHttpRequestUpload5TraceEPNS_7VisitorE(%"class.blink::XMLHttpRequestUpload"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12DOMExceptionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn }
attributes #18 = { nounwind readonly }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!5 = distinct !{!5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!9 = distinct !{!9, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN4mojo13PendingRemoteIN7network5mojom5blink16URLLoaderFactoryEE30InitWithNewPipeAndPassReceiverEv: argument 0"}
!19 = distinct !{!19, !"_ZN4mojo13PendingRemoteIN7network5mojom5blink16URLLoaderFactoryEE30InitWithNewPipeAndPassReceiverEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!22 = distinct !{!22, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5blink89V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString20GetAsArrayBufferViewEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5blink89V8UnionArrayBufferOrArrayBufferViewOrBlobOrDocumentOrFormDataOrURLSearchParamsOrUSVString20GetAsArrayBufferViewEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN5blink22WrapPersistentInternalINS_14XMLHttpRequestEEENS_10PersistentIT_EEPS3_: argument 0"}
!28 = distinct !{!28, !"_ZN5blink22WrapPersistentInternalINS_14XMLHttpRequestEEENS_10PersistentIT_EEPS3_"}
!29 = !{!30, !32, !34}
!30 = distinct !{!30, !31, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink14XMLHttpRequestEFvNS3_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS3_10PersistentIS4_EES5_S9_EEEDcOT0_DpOT1_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink14XMLHttpRequestEFvNS3_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS3_10PersistentIS4_EES5_S9_EEEDcOT0_DpOT1_"}
!32 = distinct !{!32, !33, !"_ZN4base8BindOnceIMN5blink14XMLHttpRequestEFvNS1_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS1_10PersistentIS2_EES3_S7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!33 = distinct !{!33, !"_ZN4base8BindOnceIMN5blink14XMLHttpRequestEFvNS1_16DOMExceptionCodeERKN3WTF12AtomicStringEEJNS1_10PersistentIS2_EES3_S7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!34 = distinct !{!34, !35, !"_ZN3WTF4BindIMN5blink14XMLHttpRequestEFvNS1_16DOMExceptionCodeERKNS_12AtomicStringEEJNS1_10PersistentIS2_EES3_S6_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!35 = distinct !{!35, !"_ZN3WTF4BindIMN5blink14XMLHttpRequestEFvNS1_16DOMExceptionCodeERKNS_12AtomicStringEEJNS1_10PersistentIS2_EES3_S6_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!38 = distinct !{!38, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!41 = distinct !{!41, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!44 = distinct !{!44, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN7network5mojom5blink16TrustTokenParams3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!47 = distinct !{!47, !"_ZN7network5mojom5blink16TrustTokenParams3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!50 = distinct !{!50, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!53 = distinct !{!53, !"_ZN3WTFplIPKcNS_12AtomicStringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZNK4base4spanIKcLm18446744073709551615EE5beginEv: argument 0"}
!56 = distinct !{!56, !"_ZNK4base4spanIKcLm18446744073709551615EE5beginEv"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNK4base4spanIKcLm18446744073709551615EE3endEv: argument 0"}
!59 = distinct !{!59, !"_ZNK4base4spanIKcLm18446744073709551615EE3endEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNK4base4spanIKcLm18446744073709551615EE5beginEv: argument 0"}
!62 = distinct !{!62, !"_ZNK4base4spanIKcLm18446744073709551615EE5beginEv"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNK4base4spanIKcLm18446744073709551615EE3endEv: argument 0"}
!65 = distinct !{!65, !"_ZNK4base4spanIKcLm18446744073709551615EE3endEv"}
!66 = !{i32 -2131189001}
!67 = !{i32 -2131188980}
!68 = distinct !{!68, !69}
!69 = !{!"llvm.loop.unroll.disable"}
!70 = distinct !{!70, !69}
!71 = distinct !{!71, !69}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!74 = distinct !{!74, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
