; ModuleID = '../../third_party/dawn/src/dawn_native/vulkan/NativeSwapChainImplVk.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/vulkan/NativeSwapChainImplVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.dawn_native::vulkan::NativeSwapChainImpl" = type { %"class.dawn_native::vulkan::detail::VkHandle", %"class.dawn_native::vulkan::detail::VkHandle.0", %"class.std::__1::vector", i32, %"struct.dawn_native::vulkan::VulkanSurfaceInfo", %"struct.dawn_native::vulkan::NativeSwapChainImpl::ChosenConfig", %"class.dawn_native::vulkan::Device"* }
%"class.dawn_native::vulkan::detail::VkHandle" = type { %struct.VkSurfaceKHR_T* }
%"class.dawn_native::vulkan::detail::VkHandle.0" = type { %struct.VkSwapchainKHR_T* }
%struct.VkSwapchainKHR_T = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.dawn_native::vulkan::detail::VkHandle.1"*, %"class.dawn_native::vulkan::detail::VkHandle.1"*, %"class.std::__1::__compressed_pair" }
%"class.dawn_native::vulkan::detail::VkHandle.1" = type { %struct.VkImage_T* }
%struct.VkImage_T = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.dawn_native::vulkan::detail::VkHandle.1"* }
%"struct.dawn_native::vulkan::VulkanSurfaceInfo" = type { %struct.VkSurfaceCapabilitiesKHR, %"class.std::__1::vector.3", %"class.std::__1::vector.10", %"class.std::__1::vector.17" }
%struct.VkSurfaceCapabilitiesKHR = type { i32, i32, %struct.VkExtent2D, %struct.VkExtent2D, %struct.VkExtent2D, i32, i32, i32, i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR*, %"class.std::__1::__compressed_pair.5" }
%struct.VkSurfaceFormatKHR = type { i32, i32 }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %struct.VkSurfaceFormatKHR* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { i32*, i32*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i32* }
%"class.std::__1::vector.17" = type { i64*, i64, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { i64 }
%"struct.dawn_native::vulkan::NativeSwapChainImpl::ChosenConfig" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.dawn_native::vulkan::Device" = type { %"class.dawn_native::DeviceBase", %"struct.dawn_native::vulkan::VulkanFunctions", %"struct.dawn_native::vulkan::VulkanDeviceInfo", %struct.VkDevice_T*, i32, %struct.VkQueue_T*, i32, %class.SerialQueue, %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.281", %"class.std::__1::queue", %"class.std::__1::vector.297", %class.SerialQueue.305, %"class.std::__1::vector.315", %"struct.dawn_native::vulkan::CommandRecordingContext" }
%"class.dawn_native::DeviceBase" = type { %class.RefCounted, i64, i64, i64, void (i32, i8*, i8*)*, i8*, void (i8*, i8*)*, i8*, %"class.std::__1::unique_ptr", %class.Ref, %"class.dawn_native::AdapterBase"*, %"class.std::__1::unique_ptr.27", %class.Ref.33, %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %class.Ref.47, %"class.std::__1::unique_ptr.49", i32, %"struct.std::__1::array", %"struct.dawn_native::TogglesSet", %"struct.dawn_native::TogglesSet", i64, %"struct.dawn_native::ExtensionsSet", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.64" }
%class.RefCounted = type { i32 (...)**, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.dawn_native::ErrorScopeStack"* }
%"class.dawn_native::ErrorScopeStack" = type opaque
%class.Ref = type { %class.RefBase }
%class.RefBase = type { %"class.dawn_native::InstanceBase"* }
%"class.dawn_native::InstanceBase" = type opaque
%"class.dawn_native::AdapterBase" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.dawn_native::DeviceBase::Caches"* }
%"struct.dawn_native::DeviceBase::Caches" = type opaque
%class.Ref.33 = type { %class.RefBase.34 }
%class.RefBase.34 = type { %"class.dawn_native::BindGroupLayoutBase"* }
%"class.dawn_native::BindGroupLayoutBase" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.dawn_native::DynamicUploader"* }
%"class.dawn_native::DynamicUploader" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.dawn_native::CallbackTaskManager"* }
%"class.dawn_native::CallbackTaskManager" = type opaque
%class.Ref.47 = type { %class.RefBase.48 }
%class.RefBase.48 = type { %"class.dawn_native::QueueBase"* }
%"class.dawn_native::QueueBase" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.dawn_native::DeviceBase::DeprecationWarnings"* }
%"struct.dawn_native::DeviceBase::DeprecationWarnings" = type opaque
%"struct.std::__1::array" = type { [55 x %"struct.dawn_native::Format"] }
%"struct.dawn_native::Format" = type { i32, i8, i8, i8, i8, i8, %"struct.std::__1::array.55" }
%"struct.std::__1::array.55" = type { [3 x %"struct.dawn_native::AspectInfo"] }
%"struct.dawn_native::AspectInfo" = type { %"struct.dawn_native::TexelBlockInfo", i32, i8, i32 }
%"struct.dawn_native::TexelBlockInfo" = type { i32, i32, i32 }
%"struct.dawn_native::TogglesSet" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.dawn_native::ExtensionsSet" = type { %"class.std::__1::bitset.56" }
%"class.std::__1::bitset.56" = type { %"class.std::__1::__bitset.57" }
%"class.std::__1::__bitset.57" = type { i64 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.dawn_native::InternalPipelineStore"* }
%"struct.dawn_native::InternalPipelineStore" = type opaque
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.dawn_native::PersistentCache"* }
%"class.dawn_native::PersistentCache" = type opaque
%"struct.dawn_native::vulkan::VulkanFunctions" = type { void ()* (%struct.VkInstance_T*, i8*)*, i32 (%struct.VkInstanceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkInstance_T**)*, i32 (i8*, i32*, %struct.VkExtensionProperties*)*, i32 (i32*, %struct.VkLayerProperties*)*, void (%struct.VkInstance_T*, %struct.VkAllocationCallbacks*)*, i32 (i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkDeviceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDevice_T**)*, i32 (%struct.VkPhysicalDevice_T*, i8*, i32*, %struct.VkExtensionProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32*, %struct.VkLayerProperties*)*, i32 (%struct.VkInstance_T*, i32*, %struct.VkPhysicalDevice_T**)*, void ()* (%struct.VkDevice_T*, i8*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties*)*, i32 (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, %struct.VkImageFormatProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties*)*, void (%struct.VkPhysicalDevice_T*, i32, i32, i32, i32, i32, i32*, %struct.VkSparseImageFormatProperties*)*, void (%struct.VkDevice_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerCreateInfoEXT*, %struct.VkAllocationCallbacks*, %struct.VkDebugUtilsMessengerEXT_T**)*, void (%struct.VkInstance_T*, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, void (%struct.VkQueue_T*)*, void (%struct.VkQueue_T*, %struct.VkDebugUtilsLabelEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectNameInfoEXT*)*, i32 (%struct.VkDevice_T*, %struct.VkDebugUtilsObjectTagInfoEXT*)*, void (%struct.VkInstance_T*, i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*)*, void (%struct.VkInstance_T*, %struct.VkSurfaceKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.VkSurfaceKHR_T*, i32*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, %struct.VkSurfaceCapabilitiesKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, %struct.VkSurfaceFormatKHR*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkSurfaceKHR_T*, i32*, i32*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalBufferInfo*, %struct.VkExternalBufferProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceExternalSemaphoreInfo*, %struct.VkExternalSemaphoreProperties*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceFeatures2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32, %struct.VkFormatProperties2*)*, i32 (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceImageFormatInfo2*, %struct.VkImageFormatProperties2*)*, void (%struct.VkPhysicalDevice_T*, i32*, %struct.VkQueueFamilyProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceMemoryProperties2*)*, void (%struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceSparseImageFormatInfo2*, i32*, %struct.VkSparseImageFormatProperties2*)*, i32 (%struct.VkInstance_T*, %struct.VkXlibSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct._XDisplay*, i64)*, i32 (%struct.VkInstance_T*, %struct.VkXcbSurfaceCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSurfaceKHR_T**)*, i32 (%struct.VkPhysicalDevice_T*, i32, %struct.xcb_connection_t*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandBufferAllocateInfo*, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetAllocateInfo*, %struct.VkDescriptorSet_T**)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryAllocateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDeviceMemory_T**)*, i32 (%struct.VkCommandBuffer_T*, %struct.VkCommandBufferBeginInfo*)*, i32 (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkDeviceMemory_T*, i64)*, i32 (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkDeviceMemory_T*, i64)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkRenderPassBeginInfo*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipelineLayout_T*, i32, i32, %struct.VkDescriptorSet_T**, i32, i32*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkPipeline_T*)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkBuffer_T**, i64*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageBlit*, i32)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkClearAttachment*, i32, %struct.VkClearRect*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %union.VkClearColorValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkClearDepthStencilValue*, i32, %struct.VkImageSubresourceRange*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkBuffer_T*, i32, %struct.VkBufferCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, %struct.VkImage_T*, i32, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkBuffer_T*, i32, %struct.VkBufferImageCopy*)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32)*, void (%struct.VkCommandBuffer_T*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkCommandBuffer_T**)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i32)*, void (%struct.VkCommandBuffer_T*, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, %struct.VkPipelineLayout_T*, i32, i32, i32, i8*)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkQueryPool_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, %struct.VkImage_T*, i32, %struct.VkImage_T*, i32, i32, %struct.VkImageResolve*)*, void (%struct.VkCommandBuffer_T*, float*)*, void (%struct.VkCommandBuffer_T*, float, float, float)*, void (%struct.VkCommandBuffer_T*, float, float)*, void (%struct.VkCommandBuffer_T*, %struct.VkEvent_T*, i32)*, void (%struct.VkCommandBuffer_T*, float)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkRect2D*)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32)*, void (%struct.VkCommandBuffer_T*, i32, i32, %struct.VkViewport*)*, void (%struct.VkCommandBuffer_T*, %struct.VkBuffer_T*, i64, i64, i8*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkEvent_T**, i32, i32, i32, %struct.VkMemoryBarrier*, i32, %struct.VkBufferMemoryBarrier*, i32, %struct.VkImageMemoryBarrier*)*, void (%struct.VkCommandBuffer_T*, i32, %struct.VkQueryPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkBufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkBufferViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkBufferView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkCommandPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkComputePipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorSetLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkDescriptorSetLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEventCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkEvent_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFenceCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkFramebufferCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkFramebuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkGraphicsPipelineCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipeline_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkImageViewCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkImageView_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCacheCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineCache_T**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineLayoutCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkPipelineLayout_T**)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPoolCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkQueryPool_T**)*, i32 (%struct.VkDevice_T*, %struct.VkRenderPassCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkRenderPass_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSamplerCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSampler_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkShaderModuleCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkShaderModule_T**)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBufferView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkDescriptorSetLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkEvent_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFence_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkFramebuffer_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkImageView_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipeline_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkPipelineLayout_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkQueryPool_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSampler_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkSemaphore_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkShaderModule_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*)*, i32 (%struct.VkCommandBuffer_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, void (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32, %struct.VkCommandBuffer_T**)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSet_T**)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, %struct.VkAllocationCallbacks*)*, void (%struct.VkDevice_T*, %struct.VkBuffer_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64*)*, void (%struct.VkDevice_T*, i32, i32, %struct.VkQueue_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, %struct.VkFence_T*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, i32*, %struct.VkSparseImageMemoryRequirements*)*, void (%struct.VkDevice_T*, %struct.VkImage_T*, %struct.VkImageSubresource*, %struct.VkSubresourceLayout*)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i64*, i8*)*, i32 (%struct.VkDevice_T*, %struct.VkQueryPool_T*, i32, i32, i64, i8*, i64, i32)*, void (%struct.VkDevice_T*, %struct.VkRenderPass_T*, %struct.VkExtent2D*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkMappedMemoryRange*)*, i32 (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*, i64, i64, i32, i8**)*, i32 (%struct.VkDevice_T*, %struct.VkPipelineCache_T*, i32, %struct.VkPipelineCache_T**)*, i32 (%struct.VkQueue_T*, i32, %struct.VkBindSparseInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*, i32, %struct.VkSubmitInfo*, %struct.VkFence_T*)*, i32 (%struct.VkQueue_T*)*, i32 (%struct.VkCommandBuffer_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkCommandPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkDescriptorPool_T*, i32)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**)*, i32 (%struct.VkDevice_T*, %struct.VkEvent_T*)*, void (%struct.VkDevice_T*, %struct.VkDeviceMemory_T*)*, void (%struct.VkDevice_T*, i32, %struct.VkWriteDescriptorSet*, i32, %struct.VkCopyDescriptorSet*)*, i32 (%struct.VkDevice_T*, i32, %struct.VkFence_T**, i32, i64)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, void (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, %struct.VkAllocationCallbacks*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)*, i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkMemoryGetFdInfoKHR*, i32*)*, i32 (%struct.VkDevice_T*, i32, i32, %struct.VkMemoryFdPropertiesKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkImportSemaphoreFdInfoKHR*)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreGetFdInfoKHR*, i32*)* }
%struct.VkInstance_T = type opaque
%struct.VkInstanceCreateInfo = type { i32, i8*, i32, %struct.VkApplicationInfo*, i32, i8**, i32, i8** }
%struct.VkApplicationInfo = type { i32, i8*, i8*, i32, i8*, i32, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkExtensionProperties = type { [256 x i8], i32 }
%struct.VkLayerProperties = type { [256 x i8], i32, i32, [256 x i8] }
%struct.VkPhysicalDevice_T = type opaque
%struct.VkDeviceCreateInfo = type { i32, i8*, i32, i32, %struct.VkDeviceQueueCreateInfo*, i32, i8**, i32, i8**, %struct.VkPhysicalDeviceFeatures* }
%struct.VkDeviceQueueCreateInfo = type { i32, i8*, i32, i32, i32, float* }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkFormatProperties = type { i32, i32, i32 }
%struct.VkImageFormatProperties = type { %struct.VkExtent3D, i32, i32, i32, i64 }
%struct.VkExtent3D = type { i32, i32, i32 }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkSparseImageFormatProperties = type { i32, %struct.VkExtent3D, i32 }
%struct.VkCommandBuffer_T = type opaque
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%struct.VkDebugUtilsMessengerCreateInfoEXT = type { i32, i8*, i32, i32, i32, i32 (i32, i32, %struct.VkDebugUtilsMessengerCallbackDataEXT*, i8*)*, i8* }
%struct.VkDebugUtilsMessengerCallbackDataEXT = type { i32, i8*, i32, i8*, i32, i8*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsLabelEXT*, i32, %struct.VkDebugUtilsObjectNameInfoEXT* }
%struct.VkDebugUtilsObjectNameInfoEXT = type { i32, i8*, i32, i64, i8* }
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugUtilsObjectTagInfoEXT = type { i32, i8*, i32, i64, i64, i64, i8* }
%struct.VkPhysicalDeviceExternalBufferInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalBufferProperties = type { i32, i8*, %struct.VkExternalMemoryProperties }
%struct.VkExternalMemoryProperties = type { i32, i32, i32 }
%struct.VkPhysicalDeviceExternalSemaphoreInfo = type { i32, i8*, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures2 = type { i32, i8*, %struct.VkPhysicalDeviceFeatures }
%struct.VkPhysicalDeviceProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceProperties }
%struct.VkFormatProperties2 = type { i32, i8*, %struct.VkFormatProperties }
%struct.VkPhysicalDeviceImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkImageFormatProperties2 = type { i32, i8*, %struct.VkImageFormatProperties }
%struct.VkQueueFamilyProperties2 = type { i32, i8*, %struct.VkQueueFamilyProperties }
%struct.VkPhysicalDeviceMemoryProperties2 = type { i32, i8*, %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceSparseImageFormatInfo2 = type { i32, i8*, i32, i32, i32, i32, i32 }
%struct.VkSparseImageFormatProperties2 = type { i32, i8*, %struct.VkSparseImageFormatProperties }
%struct.VkXlibSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct._XDisplay*, i64 }
%struct._XDisplay = type opaque
%struct.VkXcbSurfaceCreateInfoKHR = type { i32, i8*, i32, %struct.xcb_connection_t*, i32 }
%struct.xcb_connection_t = type opaque
%struct.VkCommandBufferAllocateInfo = type { i32, i8*, %struct.VkCommandPool_T*, i32, i32 }
%struct.VkCommandPool_T = type opaque
%struct.VkDescriptorSetAllocateInfo = type { i32, i8*, %struct.VkDescriptorPool_T*, i32, %struct.VkDescriptorSetLayout_T** }
%struct.VkDescriptorPool_T = type opaque
%struct.VkDescriptorSetLayout_T = type opaque
%struct.VkDescriptorSet_T = type opaque
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%struct.VkDeviceMemory_T = type opaque
%struct.VkCommandBufferBeginInfo = type { i32, i8*, i32, %struct.VkCommandBufferInheritanceInfo* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %struct.VkRenderPass_T*, i32, %struct.VkFramebuffer_T*, i32, i32, i32 }
%struct.VkRenderPass_T = type opaque
%struct.VkFramebuffer_T = type opaque
%struct.VkBuffer_T = type opaque
%struct.VkRenderPassBeginInfo = type { i32, i8*, %struct.VkRenderPass_T*, %struct.VkFramebuffer_T*, %struct.VkRect2D, i32, %union.VkClearValue* }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkPipelineLayout_T = type opaque
%struct.VkPipeline_T = type opaque
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkQueryPool_T = type opaque
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %struct.VkBuffer_T*, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkEvent_T = type opaque
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkBufferCreateInfo = type { i32, i8*, i32, i64, i32, i32, i32, i32* }
%struct.VkBufferViewCreateInfo = type { i32, i8*, i32, %struct.VkBuffer_T*, i32, i64, i64 }
%struct.VkBufferView_T = type opaque
%struct.VkCommandPoolCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineCache_T = type opaque
%struct.VkComputePipelineCreateInfo = type { i32, i8*, i32, %struct.VkPipelineShaderStageCreateInfo, %struct.VkPipelineLayout_T*, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineShaderStageCreateInfo = type { i32, i8*, i32, i32, %struct.VkShaderModule_T*, i8*, %struct.VkSpecializationInfo* }
%struct.VkShaderModule_T = type opaque
%struct.VkSpecializationInfo = type { i32, %struct.VkSpecializationMapEntry*, i64, i8* }
%struct.VkSpecializationMapEntry = type { i32, i32, i64 }
%struct.VkDescriptorPoolCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%struct.VkDescriptorSetLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayoutBinding* }
%struct.VkDescriptorSetLayoutBinding = type { i32, i32, i32, i32, %struct.VkSampler_T** }
%struct.VkSampler_T = type opaque
%struct.VkEventCreateInfo = type { i32, i8*, i32 }
%struct.VkFenceCreateInfo = type { i32, i8*, i32 }
%struct.VkFence_T = type opaque
%struct.VkFramebufferCreateInfo = type { i32, i8*, i32, %struct.VkRenderPass_T*, i32, %struct.VkImageView_T**, i32, i32, i32 }
%struct.VkImageView_T = type opaque
%struct.VkGraphicsPipelineCreateInfo = type { i32, i8*, i32, i32, %struct.VkPipelineShaderStageCreateInfo*, %struct.VkPipelineVertexInputStateCreateInfo*, %struct.VkPipelineInputAssemblyStateCreateInfo*, %struct.VkPipelineTessellationStateCreateInfo*, %struct.VkPipelineViewportStateCreateInfo*, %struct.VkPipelineRasterizationStateCreateInfo*, %struct.VkPipelineMultisampleStateCreateInfo*, %struct.VkPipelineDepthStencilStateCreateInfo*, %struct.VkPipelineColorBlendStateCreateInfo*, %struct.VkPipelineDynamicStateCreateInfo*, %struct.VkPipelineLayout_T*, %struct.VkRenderPass_T*, i32, %struct.VkPipeline_T*, i32 }
%struct.VkPipelineVertexInputStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkVertexInputBindingDescription*, i32, %struct.VkVertexInputAttributeDescription* }
%struct.VkVertexInputBindingDescription = type { i32, i32, i32 }
%struct.VkVertexInputAttributeDescription = type { i32, i32, i32, i32 }
%struct.VkPipelineInputAssemblyStateCreateInfo = type { i32, i8*, i32, i32, i32 }
%struct.VkPipelineTessellationStateCreateInfo = type { i32, i8*, i32, i32 }
%struct.VkPipelineViewportStateCreateInfo = type { i32, i8*, i32, i32, %struct.VkViewport*, i32, %struct.VkRect2D* }
%struct.VkPipelineRasterizationStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, float, float, float }
%struct.VkPipelineMultisampleStateCreateInfo = type { i32, i8*, i32, i32, i32, float, i32*, i32, i32 }
%struct.VkPipelineDepthStencilStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkStencilOpState, %struct.VkStencilOpState, float, float }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineColorBlendStateCreateInfo = type { i32, i8*, i32, i32, i32, i32, %struct.VkPipelineColorBlendAttachmentState*, [4 x float] }
%struct.VkPipelineColorBlendAttachmentState = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPipelineDynamicStateCreateInfo = type { i32, i8*, i32, i32, i32* }
%struct.VkImageCreateInfo = type { i32, i8*, i32, i32, i32, %struct.VkExtent3D, i32, i32, i32, i32, i32, i32, i32, i32*, i32 }
%struct.VkImageViewCreateInfo = type { i32, i8*, i32, %struct.VkImage_T*, i32, i32, %struct.VkComponentMapping, %struct.VkImageSubresourceRange }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkPipelineCacheCreateInfo = type { i32, i8*, i32, i64, i8* }
%struct.VkPipelineLayoutCreateInfo = type { i32, i8*, i32, i32, %struct.VkDescriptorSetLayout_T**, i32, %struct.VkPushConstantRange* }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%struct.VkQueryPoolCreateInfo = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkRenderPassCreateInfo = type { i32, i8*, i32, i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, i32, %struct.VkSubpassDependency* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSamplerCreateInfo = type { i32, i8*, i32, i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32 }
%struct.VkSemaphoreCreateInfo = type { i32, i8*, i32 }
%struct.VkSemaphore_T = type opaque
%struct.VkShaderModuleCreateInfo = type { i32, i8*, i32, i64, i32* }
%struct.VkMemoryRequirements = type { i64, i64, i32 }
%struct.VkSparseImageMemoryRequirements = type { %struct.VkSparseImageFormatProperties, i32, i64, i64, i64 }
%struct.VkImageSubresource = type { i32, i32, i32 }
%struct.VkSubresourceLayout = type { i64, i64, i64, i64, i64 }
%struct.VkMappedMemoryRange = type { i32, i8*, %struct.VkDeviceMemory_T*, i64, i64 }
%struct.VkBindSparseInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSparseBufferMemoryBindInfo*, i32, %struct.VkSparseImageOpaqueMemoryBindInfo*, i32, %struct.VkSparseImageMemoryBindInfo*, i32, %struct.VkSemaphore_T** }
%struct.VkSparseBufferMemoryBindInfo = type { %struct.VkBuffer_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseMemoryBind = type { i64, i64, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSparseImageOpaqueMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseMemoryBind* }
%struct.VkSparseImageMemoryBindInfo = type { %struct.VkImage_T*, i32, %struct.VkSparseImageMemoryBind* }
%struct.VkSparseImageMemoryBind = type { %struct.VkImageSubresource, %struct.VkOffset3D, %struct.VkExtent3D, %struct.VkDeviceMemory_T*, i64, i32 }
%struct.VkSubmitInfo = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32*, i32, %struct.VkCommandBuffer_T**, i32, %struct.VkSemaphore_T** }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%struct.VkCopyDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, %struct.VkDescriptorSet_T*, i32, i32, i32 }
%struct.VkSwapchainCreateInfoKHR = type { i32, i8*, i32, %struct.VkSurfaceKHR_T*, i32, i32, i32, %struct.VkExtent2D, i32, i32, i32, i32, i32*, i32, i32, i32, i32, %struct.VkSwapchainKHR_T* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkMemoryGetFdInfoKHR = type { i32, i8*, %struct.VkDeviceMemory_T*, i32 }
%struct.VkMemoryFdPropertiesKHR = type { i32, i8*, i32 }
%struct.VkImportSemaphoreFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32, i32, i32 }
%struct.VkSemaphoreGetFdInfoKHR = type { i32, i8*, %struct.VkSemaphore_T*, i32 }
%"struct.dawn_native::vulkan::VulkanDeviceInfo" = type { %"struct.dawn_native::vulkan::VulkanDeviceKnobs", %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT, %"class.std::__1::vector.72", %"class.std::__1::vector.79", %"class.std::__1::vector.86", %"class.std::__1::vector.93" }
%"struct.dawn_native::vulkan::VulkanDeviceKnobs" = type { %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDevice16BitStorageFeatures, %struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT, %"class.ityp::bitset" }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDevice16BitStorageFeatures = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceSubgroupSizeControlFeaturesEXT = type { i32, i8*, i32, i32 }
%"class.ityp::bitset" = type { %"class.std::__1::bitset.70" }
%"class.std::__1::bitset.70" = type { %"class.std::__1::__bitset.71" }
%"class.std::__1::__bitset.71" = type { i64 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceSubgroupSizeControlPropertiesEXT = type { i32, i8*, i32, i32, i32, i32 }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %struct.VkQueueFamilyProperties* }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %struct.VkMemoryType*, %struct.VkMemoryType*, %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %struct.VkMemoryType* }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %struct.VkMemoryHeap*, %struct.VkMemoryHeap*, %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %struct.VkMemoryHeap* }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %struct.VkLayerProperties*, %struct.VkLayerProperties*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %struct.VkLayerProperties* }
%struct.VkDevice_T = type opaque
%struct.VkQueue_T = type opaque
%class.SerialQueue = type { %class.SerialStorage }
%class.SerialStorage = type { %"class.std::__1::vector.100" }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.102" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.dawn_native::vulkan::FencedDeleter"* }
%"class.dawn_native::vulkan::FencedDeleter" = type { %"class.dawn_native::vulkan::Device"*, %class.SerialQueue.110, %class.SerialQueue.120, %class.SerialQueue.130, %class.SerialQueue.140, %class.SerialQueue.150, %class.SerialQueue.160, %class.SerialQueue.170, %class.SerialQueue.180, %class.SerialQueue.190, %class.SerialQueue.200, %class.SerialQueue.210, %class.SerialQueue.220, %class.SerialQueue.230, %class.SerialQueue.240, %class.SerialQueue.250 }
%class.SerialQueue.110 = type { %class.SerialStorage.111 }
%class.SerialStorage.111 = type { %"class.std::__1::vector.112" }
%"class.std::__1::vector.112" = type { %"class.std::__1::__vector_base.113" }
%"class.std::__1::__vector_base.113" = type { %"struct.std::__1::pair.114"*, %"struct.std::__1::pair.114"*, %"class.std::__1::__compressed_pair.115" }
%"struct.std::__1::pair.114" = type opaque
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::pair.114"* }
%class.SerialQueue.120 = type { %class.SerialStorage.121 }
%class.SerialStorage.121 = type { %"class.std::__1::vector.122" }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.std::__1::pair.124"*, %"struct.std::__1::pair.124"*, %"class.std::__1::__compressed_pair.125" }
%"struct.std::__1::pair.124" = type opaque
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::pair.124"* }
%class.SerialQueue.130 = type { %class.SerialStorage.131 }
%class.SerialStorage.131 = type { %"class.std::__1::vector.132" }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.std::__1::pair.134"*, %"struct.std::__1::pair.134"*, %"class.std::__1::__compressed_pair.135" }
%"struct.std::__1::pair.134" = type opaque
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::pair.134"* }
%class.SerialQueue.140 = type { %class.SerialStorage.141 }
%class.SerialStorage.141 = type { %"class.std::__1::vector.142" }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"struct.std::__1::pair.144"*, %"struct.std::__1::pair.144"*, %"class.std::__1::__compressed_pair.145" }
%"struct.std::__1::pair.144" = type opaque
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.std::__1::pair.144"* }
%class.SerialQueue.150 = type { %class.SerialStorage.151 }
%class.SerialStorage.151 = type { %"class.std::__1::vector.152" }
%"class.std::__1::vector.152" = type { %"class.std::__1::__vector_base.153" }
%"class.std::__1::__vector_base.153" = type { %"struct.std::__1::pair.154"*, %"struct.std::__1::pair.154"*, %"class.std::__1::__compressed_pair.155" }
%"struct.std::__1::pair.154" = type opaque
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::pair.154"* }
%class.SerialQueue.160 = type { %class.SerialStorage.161 }
%class.SerialStorage.161 = type { %"class.std::__1::vector.162" }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"struct.std::__1::pair.164"*, %"struct.std::__1::pair.164"*, %"class.std::__1::__compressed_pair.165" }
%"struct.std::__1::pair.164" = type opaque
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::pair.164"* }
%class.SerialQueue.170 = type { %class.SerialStorage.171 }
%class.SerialStorage.171 = type { %"class.std::__1::vector.172" }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { %"struct.std::__1::pair.174"*, %"struct.std::__1::pair.174"*, %"class.std::__1::__compressed_pair.175" }
%"struct.std::__1::pair.174" = type opaque
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::pair.174"* }
%class.SerialQueue.180 = type { %class.SerialStorage.181 }
%class.SerialStorage.181 = type { %"class.std::__1::vector.182" }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.std::__1::pair.184"*, %"struct.std::__1::pair.184"*, %"class.std::__1::__compressed_pair.185" }
%"struct.std::__1::pair.184" = type opaque
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::pair.184"* }
%class.SerialQueue.190 = type { %class.SerialStorage.191 }
%class.SerialStorage.191 = type { %"class.std::__1::vector.192" }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"struct.std::__1::pair.194"*, %"struct.std::__1::pair.194"*, %"class.std::__1::__compressed_pair.195" }
%"struct.std::__1::pair.194" = type opaque
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"struct.std::__1::pair.194"* }
%class.SerialQueue.200 = type { %class.SerialStorage.201 }
%class.SerialStorage.201 = type { %"class.std::__1::vector.202" }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.std::__1::pair.204"*, %"struct.std::__1::pair.204"*, %"class.std::__1::__compressed_pair.205" }
%"struct.std::__1::pair.204" = type opaque
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.std::__1::pair.204"* }
%class.SerialQueue.210 = type { %class.SerialStorage.211 }
%class.SerialStorage.211 = type { %"class.std::__1::vector.212" }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"struct.std::__1::pair.214"*, %"struct.std::__1::pair.214"*, %"class.std::__1::__compressed_pair.215" }
%"struct.std::__1::pair.214" = type opaque
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.std::__1::pair.214"* }
%class.SerialQueue.220 = type { %class.SerialStorage.221 }
%class.SerialStorage.221 = type { %"class.std::__1::vector.222" }
%"class.std::__1::vector.222" = type { %"class.std::__1::__vector_base.223" }
%"class.std::__1::__vector_base.223" = type { %"struct.std::__1::pair.224"*, %"struct.std::__1::pair.224"*, %"class.std::__1::__compressed_pair.225" }
%"struct.std::__1::pair.224" = type opaque
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::pair.224"* }
%class.SerialQueue.230 = type { %class.SerialStorage.231 }
%class.SerialStorage.231 = type { %"class.std::__1::vector.232" }
%"class.std::__1::vector.232" = type { %"class.std::__1::__vector_base.233" }
%"class.std::__1::__vector_base.233" = type { %"struct.std::__1::pair.234"*, %"struct.std::__1::pair.234"*, %"class.std::__1::__compressed_pair.235" }
%"struct.std::__1::pair.234" = type opaque
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::pair.234"* }
%class.SerialQueue.240 = type { %class.SerialStorage.241 }
%class.SerialStorage.241 = type { %"class.std::__1::vector.242" }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"struct.std::__1::pair.244"*, %"struct.std::__1::pair.244"*, %"class.std::__1::__compressed_pair.245" }
%"struct.std::__1::pair.244" = type opaque
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.std::__1::pair.244"* }
%class.SerialQueue.250 = type { %class.SerialStorage.251 }
%class.SerialStorage.251 = type { %"class.std::__1::vector.252" }
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { %"struct.std::__1::pair.254"*, %"struct.std::__1::pair.254"*, %"class.std::__1::__compressed_pair.255" }
%"struct.std::__1::pair.254" = type opaque
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.std::__1::pair.254"* }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.dawn_native::vulkan::ResourceMemoryAllocator"* }
%"class.dawn_native::vulkan::ResourceMemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.dawn_native::vulkan::RenderPassCache"* }
%"class.dawn_native::vulkan::RenderPassCache" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.dawn_native::vulkan::external_memory::Service"* }
%"class.dawn_native::vulkan::external_memory::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.dawn_native::vulkan::external_semaphore::Service"* }
%"class.dawn_native::vulkan::external_semaphore::Service" = type <{ %"class.dawn_native::vulkan::Device"*, i8, [7 x i8] }>
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.293" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.287"**, %"struct.std::__1::pair.287"**, %"struct.std::__1::pair.287"**, %"class.std::__1::__compressed_pair.288" }
%"struct.std::__1::pair.287" = type opaque
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::pair.287"** }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.297" = type { %"class.std::__1::__vector_base.298" }
%"class.std::__1::__vector_base.298" = type { %"class.dawn_native::vulkan::detail::VkHandle.299"*, %"class.dawn_native::vulkan::detail::VkHandle.299"*, %"class.std::__1::__compressed_pair.300" }
%"class.dawn_native::vulkan::detail::VkHandle.299" = type { %struct.VkFence_T* }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.dawn_native::vulkan::detail::VkHandle.299"* }
%class.SerialQueue.305 = type { %class.SerialStorage.306 }
%class.SerialStorage.306 = type { %"class.std::__1::vector.307" }
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"struct.std::__1::pair.309"*, %"struct.std::__1::pair.309"*, %"class.std::__1::__compressed_pair.310" }
%"struct.std::__1::pair.309" = type opaque
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.std::__1::pair.309"* }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"*, %"class.std::__1::__compressed_pair.318" }
%"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer" = type { %"class.dawn_native::vulkan::detail::VkHandle.317", %struct.VkCommandBuffer_T* }
%"class.dawn_native::vulkan::detail::VkHandle.317" = type { %struct.VkCommandPool_T* }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.dawn_native::vulkan::Device::CommandPoolAndBuffer"* }
%"struct.dawn_native::vulkan::CommandRecordingContext" = type <{ %struct.VkCommandBuffer_T*, %"class.std::__1::vector.323", %"class.std::__1::vector.323", %"class.std::__1::vector.331", %"class.dawn_native::vulkan::detail::VkHandle.317", i8, [7 x i8] }>
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.dawn_native::vulkan::detail::VkHandle.325"*, %"class.dawn_native::vulkan::detail::VkHandle.325"*, %"class.std::__1::__compressed_pair.326" }
%"class.dawn_native::vulkan::detail::VkHandle.325" = type { %struct.VkSemaphore_T* }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.dawn_native::vulkan::detail::VkHandle.325"* }
%"class.std::__1::vector.331" = type { %"class.std::__1::__vector_base.332" }
%"class.std::__1::__vector_base.332" = type { %class.Ref.333*, %class.Ref.333*, %"class.std::__1::__compressed_pair.334" }
%class.Ref.333 = type opaque
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %class.Ref.333* }
%struct.VkSurfaceKHR_T = type opaque
%class.Result = type { i32, %"class.std::__1::unique_ptr.339", %"struct.dawn_native::vulkan::VulkanSurfaceInfo" }
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"class.dawn_native::ErrorData"* }
%"class.dawn_native::ErrorData" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.347" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.347" = type { %"class.std::__1::__vector_base.348" }
%"class.std::__1::__vector_base.348" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"class.std::__1::__compressed_pair.349" }
%"struct.dawn_native::ErrorData::BacktraceRecord" = type { i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.dawn_native::ErrorData::BacktraceRecord"* }
%"class.dawn_native::vulkan::Adapter" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.DawnWSIContextVulkan = type { i8 }
%struct.DawnSwapChainNextTexture = type { %union.anon.357 }
%union.anon.357 = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6ResultIN11dawn_native6vulkan17VulkanSurfaceInfoENS0_9ErrorDataEED2Ev = comdat any

$_ZNSt3__16vectorIN11dawn_native6vulkan6detail8VkHandleINS2_12VkTagVkImageEP9VkImage_TEENS_9allocatorIS8_EEE8__appendEm = comdat any

@_ZN11dawn_native6vulkan19NativeSwapChainImplC1EPNS0_6DeviceENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::NativeSwapChainImpl"*, %"class.dawn_native::vulkan::Device"*, %struct.VkSurfaceKHR_T*), void (%"class.dawn_native::vulkan::NativeSwapChainImpl"*, %"class.dawn_native::vulkan::Device"*, %struct.VkSurfaceKHR_T*)* @_ZN11dawn_native6vulkan19NativeSwapChainImplC2EPNS0_6DeviceENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE
@_ZN11dawn_native6vulkan19NativeSwapChainImplD1Ev = hidden unnamed_addr alias void (%"class.dawn_native::vulkan::NativeSwapChainImpl"*), void (%"class.dawn_native::vulkan::NativeSwapChainImpl"*)* @_ZN11dawn_native6vulkan19NativeSwapChainImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan19NativeSwapChainImplC2EPNS0_6DeviceENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE(%"class.dawn_native::vulkan::NativeSwapChainImpl"* nocapture, %"class.dawn_native::vulkan::Device"*, %struct.VkSurfaceKHR_T*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 0, i32 0
  store %struct.VkSurfaceKHR_T* %2, %struct.VkSurfaceKHR_T** %4, align 8
  %5 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 1
  %7 = bitcast %"class.std::__1::vector.3"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 72, i1 false) #8
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 6
  %9 = bitcast %struct.VkSwapchainKHR_T** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 36, i1 false)
  store %"class.dawn_native::vulkan::Device"* %1, %"class.dawn_native::vulkan::Device"** %8, align 8
  tail call void @_ZN11dawn_native6vulkan19NativeSwapChainImpl19UpdateSurfaceConfigEv(%"class.dawn_native::vulkan::NativeSwapChainImpl"* %0)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan19NativeSwapChainImpl19UpdateSurfaceConfigEv(%"class.dawn_native::vulkan::NativeSwapChainImpl"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.Result, align 8
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 6
  %4 = bitcast %"class.dawn_native::vulkan::Device"** %3 to %"class.dawn_native::DeviceBase"**
  %5 = load %"class.dawn_native::DeviceBase"*, %"class.dawn_native::DeviceBase"** %4, align 8
  %6 = tail call %"class.dawn_native::AdapterBase"* @_ZNK11dawn_native10DeviceBase10GetAdapterEv(%"class.dawn_native::DeviceBase"* %5) #8
  %7 = bitcast %"class.dawn_native::AdapterBase"* %6 to %"class.dawn_native::vulkan::Adapter"*
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 0, i32 0
  %9 = load %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %8, align 8
  call void @_ZN11dawn_native6vulkan17GatherSurfaceInfoERKNS0_7AdapterENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE(%class.Result* nonnull sret %2, %"class.dawn_native::vulkan::Adapter"* %7, %struct.VkSurfaceKHR_T* %9) #8
  %10 = getelementptr inbounds %class.Result, %class.Result* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  store i32 2, i32* %10, align 8
  br i1 %12, label %13, label %16, !prof !2

13:                                               ; preds = %1
  %14 = getelementptr inbounds %class.Result, %class.Result* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %14, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %14, align 8
  call void @_ZN11dawn_native10DeviceBase12ConsumeErrorENSt3__110unique_ptrINS_9ErrorDataENS1_14default_deleteIS3_EEEE(%"class.dawn_native::DeviceBase"* %5, %"class.dawn_native::ErrorData"* %15) #8
  br label %79

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %class.Result, %class.Result* %2, i64 0, i32 2
  %19 = bitcast %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %17 to i8*
  %20 = bitcast %"struct.dawn_native::vulkan::VulkanSurfaceInfo"* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 52, i1 false) #8
  %21 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 1
  %22 = getelementptr inbounds %class.Result, %class.Result* %2, i64 0, i32 2, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %21, i64 0, i32 0, i32 0
  %24 = load %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR** %23, align 8
  %25 = icmp eq %struct.VkSurfaceFormatKHR* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %16
  %27 = ptrtoint %struct.VkSurfaceFormatKHR* %24 to i64
  %28 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %29 = bitcast %struct.VkSurfaceFormatKHR** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %struct.VkSurfaceFormatKHR* %24 to i8*
  call void @_ZdlPv(i8* %30) #9
  %31 = bitcast %"class.std::__1::vector.3"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #8
  br label %32

32:                                               ; preds = %16, %26
  %33 = bitcast %"class.std::__1::vector.3"* %22 to <2 x i64>*
  %34 = load <2 x i64>, <2 x i64>* %33, align 8
  %35 = bitcast %"class.std::__1::vector.3"* %21 to <2 x i64>*
  store <2 x i64> %34, <2 x i64>* %35, align 8
  %36 = getelementptr inbounds %class.Result, %class.Result* %2, i64 0, i32 2, i32 1, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %struct.VkSurfaceFormatKHR** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %struct.VkSurfaceFormatKHR** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = bitcast %"class.std::__1::vector.3"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #8
  %42 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 2
  %43 = getelementptr inbounds %class.Result, %class.Result* %2, i64 0, i32 2, i32 2
  %44 = getelementptr inbounds %"class.std::__1::vector.10", %"class.std::__1::vector.10"* %42, i64 0, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = icmp eq i32* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %32
  %48 = ptrtoint i32* %45 to i64
  %49 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 2, i32 0, i32 1
  %50 = bitcast i32** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = bitcast i32* %45 to i8*
  call void @_ZdlPv(i8* %51) #9
  %52 = bitcast %"class.std::__1::vector.10"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #8
  br label %53

53:                                               ; preds = %32, %47
  %54 = bitcast %"class.std::__1::vector.10"* %43 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = bitcast %"class.std::__1::vector.10"* %42 to <2 x i64>*
  store <2 x i64> %55, <2 x i64>* %56, align 8
  %57 = getelementptr inbounds %class.Result, %class.Result* %2, i64 0, i32 2, i32 2, i32 0, i32 2, i32 0, i32 0
  %58 = bitcast i32** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 2, i32 0, i32 2, i32 0, i32 0
  %61 = bitcast i32** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = bitcast %"class.std::__1::vector.10"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #8
  %63 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 3
  %64 = getelementptr inbounds %class.Result, %class.Result* %2, i64 0, i32 2, i32 3
  %65 = getelementptr inbounds %"class.std::__1::vector.17", %"class.std::__1::vector.17"* %63, i64 0, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %53
  %69 = bitcast i64* %66 to i8*
  call void @_ZdlPv(i8* %69) #9
  %70 = bitcast %"class.std::__1::vector.17"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #8
  br label %71

71:                                               ; preds = %53, %68
  %72 = bitcast %"class.std::__1::vector.17"* %64 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8
  %74 = bitcast %"class.std::__1::vector.17"* %63 to <2 x i64>*
  store <2 x i64> %73, <2 x i64>* %74, align 8
  %75 = getelementptr inbounds %class.Result, %class.Result* %2, i64 0, i32 2, i32 3, i32 2, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 3, i32 2, i32 0, i32 0
  store i64 %76, i64* %77, align 8
  %78 = bitcast %"class.std::__1::vector.17"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #8
  br label %79

79:                                               ; preds = %13, %71
  call void @_ZN6ResultIN11dawn_native6vulkan17VulkanSurfaceInfoENS0_9ErrorDataEED2Ev(%class.Result* nonnull %2) #8
  %80 = load %"class.dawn_native::DeviceBase"*, %"class.dawn_native::DeviceBase"** %4, align 8
  %81 = call zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"* %80, i32 4) #8
  br i1 %81, label %82, label %95

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 2, i32 0, i32 1
  %86 = load i32*, i32** %85, align 8
  %87 = icmp eq i32* %84, %86
  br i1 %87, label %106, label %90

88:                                               ; preds = %90
  %89 = icmp eq i32* %94, %86
  br i1 %89, label %106, label %90

90:                                               ; preds = %82, %88
  %91 = phi i32* [ %94, %88 ], [ %84, %82 ]
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds i32, i32* %91, i64 1
  br i1 %93, label %95, label %88

95:                                               ; preds = %90, %79
  %96 = phi i32 [ 2, %79 ], [ 0, %90 ]
  %97 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 0
  store i32 44, i32* %97, align 4
  %98 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 2
  store i32 0, i32* %98, align 4
  %99 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 1
  store i32 23, i32* %99, align 4
  %100 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 4
  store i32 3, i32* %100, align 4
  %101 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 0, i32 7
  %102 = load i32, i32* %101, align 8
  %103 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 3
  store i32 %102, i32* %103, align 4
  %104 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 5
  store i32 %96, i32* %104, align 4
  %105 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 6
  store i32 1, i32* %105, align 4
  br label %106

106:                                              ; preds = %88, %82, %95
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan19NativeSwapChainImplD2Ev(%"class.dawn_native::vulkan::NativeSwapChainImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.0", %"class.dawn_native::vulkan::detail::VkHandle.0"* %2, i64 0, i32 0
  %4 = load %struct.VkSwapchainKHR_T*, %struct.VkSwapchainKHR_T** %3, align 8
  %5 = icmp eq %struct.VkSwapchainKHR_T* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 6
  %8 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %7, align 8
  %9 = tail call %"class.dawn_native::vulkan::FencedDeleter"* @_ZNK11dawn_native6vulkan6Device16GetFencedDeleterEv(%"class.dawn_native::vulkan::Device"* %8) #8
  %10 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 1, i32 0
  %11 = load %struct.VkSwapchainKHR_T*, %struct.VkSwapchainKHR_T** %10, align 8
  tail call void @_ZN11dawn_native6vulkan13FencedDeleter16DeleteWhenUnusedENS0_6detail8VkHandleINS0_19VkTagVkSwapchainKHREP16VkSwapchainKHR_TEE(%"class.dawn_native::vulkan::FencedDeleter"* %9, %struct.VkSwapchainKHR_T* %11) #8
  %12 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.0"* %2 to i64*
  store i64 0, i64* %12, align 8
  br label %13

13:                                               ; preds = %1, %6
  %14 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 0, i32 0
  %15 = load %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %14, align 8
  %16 = icmp eq %struct.VkSurfaceKHR_T* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 6
  %19 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %18, align 8
  %20 = tail call %"class.dawn_native::vulkan::FencedDeleter"* @_ZNK11dawn_native6vulkan6Device16GetFencedDeleterEv(%"class.dawn_native::vulkan::Device"* %19) #8
  %21 = load %struct.VkSurfaceKHR_T*, %struct.VkSurfaceKHR_T** %14, align 8
  tail call void @_ZN11dawn_native6vulkan13FencedDeleter16DeleteWhenUnusedENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE(%"class.dawn_native::vulkan::FencedDeleter"* %20, %struct.VkSurfaceKHR_T* %21) #8
  %22 = bitcast %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0 to i64*
  store i64 0, i64* %22, align 8
  br label %23

23:                                               ; preds = %13, %17
  %24 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 3, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = bitcast i64* %25 to i8*
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %27, %23
  %30 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 2, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = icmp eq i32* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint i32* %31 to i64
  %35 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 2, i32 0, i32 1
  %36 = bitcast i32** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast i32* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #9
  br label %38

38:                                               ; preds = %33, %29
  %39 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %40 = load %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR** %39, align 8
  %41 = icmp eq %struct.VkSurfaceFormatKHR* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = ptrtoint %struct.VkSurfaceFormatKHR* %40 to i64
  %44 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 4, i32 1, i32 0, i32 1
  %45 = bitcast %struct.VkSurfaceFormatKHR** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast %struct.VkSurfaceFormatKHR* %40 to i8*
  tail call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %38, %42
  %48 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.dawn_native::vulkan::detail::VkHandle.1"*, %"class.dawn_native::vulkan::detail::VkHandle.1"** %48, align 8
  %50 = icmp eq %"class.dawn_native::vulkan::detail::VkHandle.1"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint %"class.dawn_native::vulkan::detail::VkHandle.1"* %49 to i64
  %53 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 2, i32 0, i32 1
  %54 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.1"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.1"* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #9
  br label %56

56:                                               ; preds = %47, %51
  ret void
}

declare %"class.dawn_native::vulkan::FencedDeleter"* @_ZNK11dawn_native6vulkan6Device16GetFencedDeleterEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #2

declare void @_ZN11dawn_native6vulkan13FencedDeleter16DeleteWhenUnusedENS0_6detail8VkHandleINS0_19VkTagVkSwapchainKHREP16VkSwapchainKHR_TEE(%"class.dawn_native::vulkan::FencedDeleter"*, %struct.VkSwapchainKHR_T*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN11dawn_native6vulkan13FencedDeleter16DeleteWhenUnusedENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE(%"class.dawn_native::vulkan::FencedDeleter"*, %struct.VkSurfaceKHR_T*) local_unnamed_addr #2

declare void @_ZN11dawn_native6vulkan17GatherSurfaceInfoERKNS0_7AdapterENS0_6detail8VkHandleINS0_17VkTagVkSurfaceKHREP14VkSurfaceKHR_TEE(%class.Result* sret, %"class.dawn_native::vulkan::Adapter"*, %struct.VkSurfaceKHR_T*) local_unnamed_addr #2

declare %"class.dawn_native::AdapterBase"* @_ZNK11dawn_native10DeviceBase10GetAdapterEv(%"class.dawn_native::DeviceBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6ResultIN11dawn_native6vulkan17VulkanSurfaceInfoENS0_9ErrorDataEED2Ev(%class.Result*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2, i32 3, i32 0
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast i64* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = icmp eq i32* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = ptrtoint i32* %9 to i64
  %13 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  %14 = bitcast i32** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = bitcast i32* %9 to i8*
  tail call void @_ZdlPv(i8* %15) #9
  br label %16

16:                                               ; preds = %11, %7
  %17 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %18 = load %struct.VkSurfaceFormatKHR*, %struct.VkSurfaceFormatKHR** %17, align 8
  %19 = icmp eq %struct.VkSurfaceFormatKHR* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %struct.VkSurfaceFormatKHR* %18 to i64
  %22 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 2, i32 1, i32 0, i32 1
  %23 = bitcast %struct.VkSurfaceFormatKHR** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %struct.VkSurfaceFormatKHR* %18 to i8*
  tail call void @_ZdlPv(i8* %24) #9
  br label %25

25:                                               ; preds = %16, %20
  %26 = getelementptr inbounds %class.Result, %class.Result* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.dawn_native::ErrorData"*, %"class.dawn_native::ErrorData"** %26, align 8
  store %"class.dawn_native::ErrorData"* null, %"class.dawn_native::ErrorData"** %26, align 8
  %28 = icmp eq %"class.dawn_native::ErrorData"* %27, null
  br i1 %28, label %49, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %27, i64 0, i32 2, i32 0, i32 0
  %31 = load %"struct.dawn_native::ErrorData::BacktraceRecord"*, %"struct.dawn_native::ErrorData::BacktraceRecord"** %30, align 8
  %32 = icmp eq %"struct.dawn_native::ErrorData::BacktraceRecord"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"struct.dawn_native::ErrorData::BacktraceRecord"* %31 to i64
  %35 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %27, i64 0, i32 2, i32 0, i32 1
  %36 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"struct.dawn_native::ErrorData::BacktraceRecord"* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #9
  br label %38

38:                                               ; preds = %33, %29
  %39 = getelementptr inbounds %"class.dawn_native::ErrorData", %"class.dawn_native::ErrorData"* %27, i64 0, i32 1
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  tail call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %44, %38
  %48 = bitcast %"class.dawn_native::ErrorData"* %27 to i8*
  tail call void @_ZdlPv(i8* %48) #9
  br label %49

49:                                               ; preds = %25, %47
  ret void
}

declare zeroext i1 @_ZNK11dawn_native10DeviceBase15IsToggleEnabledENS_6ToggleE(%"class.dawn_native::DeviceBase"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native6vulkan19NativeSwapChainImpl4InitEP20DawnWSIContextVulkan(%"class.dawn_native::vulkan::NativeSwapChainImpl"* nocapture, %struct.DawnWSIContextVulkan* nocapture readnone) local_unnamed_addr #0 align 2 {
  tail call void @_ZN11dawn_native6vulkan19NativeSwapChainImpl19UpdateSurfaceConfigEv(%"class.dawn_native::vulkan::NativeSwapChainImpl"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN11dawn_native6vulkan19NativeSwapChainImpl9ConfigureE17WGPUTextureFormat16WGPUTextureUsagejj(%"class.dawn_native::vulkan::NativeSwapChainImpl"*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %struct.VkSwapchainCreateInfoKHR, align 8
  %7 = alloca i32, align 4
  tail call void @_ZN11dawn_native6vulkan19NativeSwapChainImpl19UpdateSurfaceConfigEv(%"class.dawn_native::vulkan::NativeSwapChainImpl"* %0)
  %8 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 1, i32 0
  %9 = load %struct.VkSwapchainKHR_T*, %struct.VkSwapchainKHR_T** %8, align 8
  %10 = bitcast %struct.VkSwapchainCreateInfoKHR* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 72, i1 false)
  %11 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 0
  store i32 1000001000, i32* %11, align 8
  %12 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 2
  store i32 0, i32* %13, align 8
  %14 = bitcast %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 3
  %17 = bitcast %struct.VkSurfaceKHR_T** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 4
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 4
  store i32 %19, i32* %20, align 8
  %21 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 5
  store i32 %22, i32* %23, align 4
  %24 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 6
  store i32 %25, i32* %26, align 8
  %27 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 7, i32 0
  store i32 %3, i32* %27, align 4
  %28 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 7, i32 1
  store i32 %4, i32* %28, align 4
  %29 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 8
  store i32 1, i32* %29, align 4
  %30 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 6
  %31 = bitcast %"class.dawn_native::vulkan::Device"** %30 to %"class.dawn_native::DeviceBase"**
  %32 = load %"class.dawn_native::DeviceBase"*, %"class.dawn_native::DeviceBase"** %31, align 8
  %33 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = tail call dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native10DeviceBase22GetValidInternalFormatEN4wgpu13TextureFormatE(%"class.dawn_native::DeviceBase"* %32, i32 %34) #8
  %36 = tail call i32 @_ZN11dawn_native6vulkan16VulkanImageUsageEN4wgpu12TextureUsageERKNS_6FormatE(i32 %2, %"struct.dawn_native::Format"* dereferenceable(84) %35) #8
  %37 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 9
  store i32 %36, i32* %37, align 8
  %38 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 10
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 11
  store i32 0, i32* %39, align 8
  %40 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 12
  store i32* null, i32** %40, align 8
  %41 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 13
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 6
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 14
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 5
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 15
  store i32 %48, i32* %49, align 8
  %50 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 16
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %struct.VkSwapchainCreateInfoKHR, %struct.VkSwapchainCreateInfoKHR* %6, i64 0, i32 17
  store %struct.VkSwapchainKHR_T* %9, %struct.VkSwapchainKHR_T** %51, align 8
  %52 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %30, align 8
  %53 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %52, i64 0, i32 1, i32 167
  %54 = load i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainCreateInfoKHR*, %struct.VkAllocationCallbacks*, %struct.VkSwapchainKHR_T**)** %53, align 8
  %55 = tail call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %52) #8
  %56 = call i32 %54(%struct.VkDevice_T* %55, %struct.VkSwapchainCreateInfoKHR* nonnull %6, %struct.VkAllocationCallbacks* null, %struct.VkSwapchainKHR_T** %8) #8
  %57 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #8
  store i32 0, i32* %7, align 4
  %58 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %30, align 8
  %59 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %58, i64 0, i32 1, i32 169
  %60 = load i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)** %59, align 8
  %61 = call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %58) #8
  %62 = load %struct.VkSwapchainKHR_T*, %struct.VkSwapchainKHR_T** %8, align 8
  %63 = call i32 %60(%struct.VkDevice_T* %61, %struct.VkSwapchainKHR_T* %62, i32* nonnull %7, %struct.VkImage_T** null) #8
  %64 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 2
  %65 = load i32, i32* %7, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 2, i32 0, i32 1
  %68 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.1"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = bitcast %"class.std::__1::vector"* %64 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 %69, %71
  %73 = ashr exact i64 %72, 3
  %74 = icmp ult i64 %73, %66
  %75 = inttoptr i64 %71 to %"class.dawn_native::vulkan::detail::VkHandle.1"*
  br i1 %74, label %76, label %78

76:                                               ; preds = %5
  %77 = sub nsw i64 %66, %73
  call void @_ZNSt3__16vectorIN11dawn_native6vulkan6detail8VkHandleINS2_12VkTagVkImageEP9VkImage_TEENS_9allocatorIS8_EEE8__appendEm(%"class.std::__1::vector"* %64, i64 %77) #8
  br label %82

78:                                               ; preds = %5
  %79 = icmp ugt i64 %73, %66
  br i1 %79, label %80, label %82

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.1", %"class.dawn_native::vulkan::detail::VkHandle.1"* %75, i64 %66
  store %"class.dawn_native::vulkan::detail::VkHandle.1"* %81, %"class.dawn_native::vulkan::detail::VkHandle.1"** %67, align 8
  br label %82

82:                                               ; preds = %76, %78, %80
  %83 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %30, align 8
  %84 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %83, i64 0, i32 1, i32 169
  %85 = load i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i32*, %struct.VkImage_T**)** %84, align 8
  %86 = call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %83) #8
  %87 = load %struct.VkSwapchainKHR_T*, %struct.VkSwapchainKHR_T** %8, align 8
  %88 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %64, i64 0, i32 0, i32 0
  %89 = load %"class.dawn_native::vulkan::detail::VkHandle.1"*, %"class.dawn_native::vulkan::detail::VkHandle.1"** %88, align 8
  %90 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.1", %"class.dawn_native::vulkan::detail::VkHandle.1"* %89, i64 0, i32 0
  %91 = call i32 %85(%struct.VkDevice_T* %86, %struct.VkSwapchainKHR_T* %87, i32* nonnull %7, %struct.VkImage_T** %90) #8
  %92 = icmp eq %struct.VkSwapchainKHR_T* %9, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %82
  %94 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %30, align 8
  %95 = call %"class.dawn_native::vulkan::FencedDeleter"* @_ZNK11dawn_native6vulkan6Device16GetFencedDeleterEv(%"class.dawn_native::vulkan::Device"* %94) #8
  call void @_ZN11dawn_native6vulkan13FencedDeleter16DeleteWhenUnusedENS0_6detail8VkHandleINS0_19VkTagVkSwapchainKHREP16VkSwapchainKHR_TEE(%"class.dawn_native::vulkan::FencedDeleter"* %95, %struct.VkSwapchainKHR_T* nonnull %9) #8
  br label %96

96:                                               ; preds = %82, %93
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %10) #8
  ret i8* null
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZN11dawn_native6vulkan16VulkanImageUsageEN4wgpu12TextureUsageERKNS_6FormatE(i32, %"struct.dawn_native::Format"* dereferenceable(84)) local_unnamed_addr #2

declare dereferenceable(84) %"struct.dawn_native::Format"* @_ZNK11dawn_native10DeviceBase22GetValidInternalFormatEN4wgpu13TextureFormatE(%"class.dawn_native::DeviceBase"*, i32) local_unnamed_addr #2

declare %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN11dawn_native6vulkan19NativeSwapChainImpl14GetNextTextureEP24DawnSwapChainNextTexture(%"class.dawn_native::vulkan::NativeSwapChainImpl"*, %struct.DawnSwapChainNextTexture* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.dawn_native::vulkan::detail::VkHandle.325", align 8
  %4 = alloca %struct.VkSemaphoreCreateInfo, align 8
  %5 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.325"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.325", %"class.dawn_native::vulkan::detail::VkHandle.325"* %3, i64 0, i32 0
  store %struct.VkSemaphore_T* null, %struct.VkSemaphore_T** %6, align 8
  %7 = bitcast %struct.VkSemaphoreCreateInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  %8 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %4, i64 0, i32 0
  store i32 9, i32* %8, align 8
  %9 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %4, i64 0, i32 1
  store i8* null, i8** %9, align 8
  %10 = getelementptr inbounds %struct.VkSemaphoreCreateInfo, %struct.VkSemaphoreCreateInfo* %4, i64 0, i32 2
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 6
  %12 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %11, align 8
  %13 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %12, i64 0, i32 1, i32 115
  %14 = load i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)*, i32 (%struct.VkDevice_T*, %struct.VkSemaphoreCreateInfo*, %struct.VkAllocationCallbacks*, %struct.VkSemaphore_T**)** %13, align 8
  %15 = tail call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %12) #8
  %16 = call i32 %14(%struct.VkDevice_T* %15, %struct.VkSemaphoreCreateInfo* nonnull %4, %struct.VkAllocationCallbacks* null, %struct.VkSemaphore_T** nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  %17 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %11, align 8
  %18 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %17, i64 0, i32 1, i32 170
  %19 = load i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)*, i32 (%struct.VkDevice_T*, %struct.VkSwapchainKHR_T*, i64, %struct.VkSemaphore_T*, %struct.VkFence_T*, i32*)** %18, align 8
  %20 = call %struct.VkDevice_T* @_ZNK11dawn_native6vulkan6Device11GetVkDeviceEv(%"class.dawn_native::vulkan::Device"* %17) #8
  %21 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 1, i32 0
  %22 = load %struct.VkSwapchainKHR_T*, %struct.VkSwapchainKHR_T** %21, align 8
  %23 = load %struct.VkSemaphore_T*, %struct.VkSemaphore_T** %6, align 8
  %24 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 3
  %25 = call i32 %19(%struct.VkDevice_T* %20, %struct.VkSwapchainKHR_T* %22, i64 -1, %struct.VkSemaphore_T* %23, %struct.VkFence_T* null, i32* %24) #8
  %26 = load i32, i32* %24, align 8
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.dawn_native::vulkan::detail::VkHandle.1"*, %"class.dawn_native::vulkan::detail::VkHandle.1"** %28, align 8
  %30 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.1", %"class.dawn_native::vulkan::detail::VkHandle.1"* %29, i64 %27, i32 0
  %31 = bitcast %struct.VkImage_T** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %struct.DawnSwapChainNextTexture* %1 to i64*
  store i64 %32, i64* %33, align 8
  %34 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %11, align 8
  %35 = call %"struct.dawn_native::vulkan::CommandRecordingContext"* @_ZN11dawn_native6vulkan6Device26GetPendingRecordingContextEv(%"class.dawn_native::vulkan::Device"* %34) #8
  %36 = getelementptr inbounds %"struct.dawn_native::vulkan::CommandRecordingContext", %"struct.dawn_native::vulkan::CommandRecordingContext"* %35, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.dawn_native::vulkan::CommandRecordingContext", %"struct.dawn_native::vulkan::CommandRecordingContext"* %35, i64 0, i32 1, i32 0, i32 1
  %38 = load %"class.dawn_native::vulkan::detail::VkHandle.325"*, %"class.dawn_native::vulkan::detail::VkHandle.325"** %37, align 8
  %39 = getelementptr inbounds %"struct.dawn_native::vulkan::CommandRecordingContext", %"struct.dawn_native::vulkan::CommandRecordingContext"* %35, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %40 = load %"class.dawn_native::vulkan::detail::VkHandle.325"*, %"class.dawn_native::vulkan::detail::VkHandle.325"** %39, align 8
  %41 = icmp eq %"class.dawn_native::vulkan::detail::VkHandle.325"* %38, %40
  %42 = ptrtoint %"class.dawn_native::vulkan::detail::VkHandle.325"* %40 to i64
  br i1 %41, label %50, label %43

43:                                               ; preds = %2
  %44 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.325"* %3 to i64*
  %45 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.325"* %38 to i64*
  %46 = load i64, i64* %44, align 8
  store i64 %46, i64* %45, align 8
  %47 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.325", %"class.dawn_native::vulkan::detail::VkHandle.325"* %38, i64 1
  %48 = ptrtoint %"class.dawn_native::vulkan::detail::VkHandle.325"* %47 to i64
  %49 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.325"** %37 to i64*
  store i64 %48, i64* %49, align 8
  br label %109

50:                                               ; preds = %2
  %51 = ptrtoint %"class.dawn_native::vulkan::detail::VkHandle.325"* %38 to i64
  %52 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.325"** %37 to i64*
  %53 = bitcast %"class.std::__1::vector.323"* %36 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = sub i64 %51, %54
  %56 = ashr exact i64 %55, 3
  %57 = add nsw i64 %56, 1
  %58 = icmp ugt i64 %57, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %50
  %60 = bitcast %"class.std::__1::vector.323"* %36 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #10
  unreachable

61:                                               ; preds = %50
  %62 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.325"** %39 to i64*
  %63 = sub i64 %42, %54
  %64 = ashr exact i64 %63, 3
  %65 = icmp ult i64 %64, 1152921504606846975
  br i1 %65, label %66, label %74

66:                                               ; preds = %61
  %67 = ashr exact i64 %63, 2
  %68 = icmp ult i64 %67, %57
  %69 = select i1 %68, i64 %57, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %66
  %72 = icmp ugt i64 %69, 2305843009213693951
  br i1 %72, label %73, label %74

73:                                               ; preds = %71
  call void @abort() #10
  unreachable

74:                                               ; preds = %71, %61
  %75 = phi i64 [ %69, %71 ], [ 2305843009213693951, %61 ]
  %76 = shl i64 %75, 3
  %77 = call i8* @_Znwm(i64 %76) #9
  %78 = bitcast i8* %77 to %"class.dawn_native::vulkan::detail::VkHandle.325"*
  br label %79

79:                                               ; preds = %74, %66
  %80 = phi i64 [ %75, %74 ], [ 0, %66 ]
  %81 = phi %"class.dawn_native::vulkan::detail::VkHandle.325"* [ %78, %74 ], [ null, %66 ]
  %82 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.325", %"class.dawn_native::vulkan::detail::VkHandle.325"* %81, i64 %56
  %83 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.325", %"class.dawn_native::vulkan::detail::VkHandle.325"* %81, i64 %80
  %84 = ptrtoint %"class.dawn_native::vulkan::detail::VkHandle.325"* %83 to i64
  %85 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.325"* %3 to i64*
  %86 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.325"* %82 to i64*
  %87 = load i64, i64* %85, align 8
  store i64 %87, i64* %86, align 8
  %88 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.325", %"class.dawn_native::vulkan::detail::VkHandle.325"* %82, i64 1
  %89 = ptrtoint %"class.dawn_native::vulkan::detail::VkHandle.325"* %88 to i64
  %90 = getelementptr inbounds %"class.std::__1::vector.323", %"class.std::__1::vector.323"* %36, i64 0, i32 0, i32 0
  %91 = load %"class.dawn_native::vulkan::detail::VkHandle.325"*, %"class.dawn_native::vulkan::detail::VkHandle.325"** %90, align 8
  %92 = load i64, i64* %52, align 8
  %93 = ptrtoint %"class.dawn_native::vulkan::detail::VkHandle.325"* %91 to i64
  %94 = sub i64 %92, %93
  %95 = ashr exact i64 %94, 3
  %96 = sub nsw i64 0, %95
  %97 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.325", %"class.dawn_native::vulkan::detail::VkHandle.325"* %82, i64 %96
  %98 = ptrtoint %"class.dawn_native::vulkan::detail::VkHandle.325"* %97 to i64
  %99 = icmp sgt i64 %94, 0
  br i1 %99, label %100, label %104

100:                                              ; preds = %79
  %101 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.325"* %97 to i8*
  %102 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.325"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 %94, i1 false) #8
  %103 = load %"class.dawn_native::vulkan::detail::VkHandle.325"*, %"class.dawn_native::vulkan::detail::VkHandle.325"** %90, align 8
  br label %104

104:                                              ; preds = %100, %79
  %105 = phi %"class.dawn_native::vulkan::detail::VkHandle.325"* [ %91, %79 ], [ %103, %100 ]
  store i64 %98, i64* %53, align 8
  store i64 %89, i64* %52, align 8
  store i64 %84, i64* %62, align 8
  %106 = icmp eq %"class.dawn_native::vulkan::detail::VkHandle.325"* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.325"* %105 to i8*
  call void @_ZdlPv(i8* %108) #9
  br label %109

109:                                              ; preds = %43, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret i8* null
}

declare %"struct.dawn_native::vulkan::CommandRecordingContext"* @_ZN11dawn_native6vulkan6Device26GetPendingRecordingContextEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @_ZN11dawn_native6vulkan19NativeSwapChainImpl7PresentEv(%"class.dawn_native::vulkan::NativeSwapChainImpl"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %struct.VkPresentInfoKHR, align 8
  %3 = bitcast %struct.VkPresentInfoKHR* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 40, i1 false)
  %4 = getelementptr inbounds %struct.VkPresentInfoKHR, %struct.VkPresentInfoKHR* %2, i64 0, i32 0
  store i32 1000001001, i32* %4, align 8
  %5 = getelementptr inbounds %struct.VkPresentInfoKHR, %struct.VkPresentInfoKHR* %2, i64 0, i32 1
  store i8* null, i8** %5, align 8
  %6 = getelementptr inbounds %struct.VkPresentInfoKHR, %struct.VkPresentInfoKHR* %2, i64 0, i32 2
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %struct.VkPresentInfoKHR, %struct.VkPresentInfoKHR* %2, i64 0, i32 3
  store %struct.VkSemaphore_T** null, %struct.VkSemaphore_T*** %7, align 8
  %8 = getelementptr inbounds %struct.VkPresentInfoKHR, %struct.VkPresentInfoKHR* %2, i64 0, i32 4
  store i32 1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %struct.VkPresentInfoKHR, %struct.VkPresentInfoKHR* %2, i64 0, i32 5
  store %struct.VkSwapchainKHR_T** %9, %struct.VkSwapchainKHR_T*** %10, align 8
  %11 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %struct.VkPresentInfoKHR, %struct.VkPresentInfoKHR* %2, i64 0, i32 6
  store i32* %11, i32** %12, align 8
  %13 = getelementptr inbounds %struct.VkPresentInfoKHR, %struct.VkPresentInfoKHR* %2, i64 0, i32 7
  store i32* null, i32** %13, align 8
  %14 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 6
  %15 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %14, align 8
  %16 = tail call %struct.VkQueue_T* @_ZNK11dawn_native6vulkan6Device8GetQueueEv(%"class.dawn_native::vulkan::Device"* %15) #8
  %17 = load %"class.dawn_native::vulkan::Device"*, %"class.dawn_native::vulkan::Device"** %14, align 8
  %18 = getelementptr inbounds %"class.dawn_native::vulkan::Device", %"class.dawn_native::vulkan::Device"* %17, i64 0, i32 1, i32 171
  %19 = load i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)*, i32 (%struct.VkQueue_T*, %struct.VkPresentInfoKHR*)** %18, align 8
  %20 = call i32 %19(%struct.VkQueue_T* %16, %struct.VkPresentInfoKHR* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #8
  ret i8* null
}

declare %struct.VkQueue_T* @_ZNK11dawn_native6vulkan6Device8GetQueueEv(%"class.dawn_native::vulkan::Device"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK11dawn_native6vulkan19NativeSwapChainImpl18GetPreferredFormatEv(%"class.dawn_native::vulkan::NativeSwapChainImpl"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::vulkan::NativeSwapChainImpl", %"class.dawn_native::vulkan::NativeSwapChainImpl"* %0, i64 0, i32 5, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN11dawn_native10DeviceBase12ConsumeErrorENSt3__110unique_ptrINS_9ErrorDataENS1_14default_deleteIS3_EEEE(%"class.dawn_native::DeviceBase"*, %"class.dawn_native::ErrorData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN11dawn_native6vulkan6detail8VkHandleINS2_12VkTagVkImageEP9VkImage_TEENS_9allocatorIS8_EEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.1"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.1"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"class.dawn_native::vulkan::detail::VkHandle.1"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.1", %"class.dawn_native::vulkan::detail::VkHandle.1"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"class.dawn_native::vulkan::detail::VkHandle.1", %"class.dawn_native::vulkan::detail::VkHandle.1"* %13, i64 %18, i32 0
  %20 = bitcast %struct.VkImage_T** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint %"class.dawn_native::vulkan::detail::VkHandle.1"* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #10
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to %"class.dawn_native::vulkan::detail::VkHandle.1"*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi %"class.dawn_native::vulkan::detail::VkHandle.1"* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.1", %"class.dawn_native::vulkan::detail::VkHandle.1"* %57, i64 %33
  %59 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.1", %"class.dawn_native::vulkan::detail::VkHandle.1"* %57, i64 %56
  %60 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.1", %"class.dawn_native::vulkan::detail::VkHandle.1"* %58, i64 %1
  %61 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.1"* %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #8
  %63 = ptrtoint %"class.dawn_native::vulkan::detail::VkHandle.1"* %59 to i64
  %64 = ptrtoint %"class.dawn_native::vulkan::detail::VkHandle.1"* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %66 = load %"class.dawn_native::vulkan::detail::VkHandle.1"*, %"class.dawn_native::vulkan::detail::VkHandle.1"** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint %"class.dawn_native::vulkan::detail::VkHandle.1"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.dawn_native::vulkan::detail::VkHandle.1", %"class.dawn_native::vulkan::detail::VkHandle.1"* %58, i64 %71
  %73 = ptrtoint %"class.dawn_native::vulkan::detail::VkHandle.1"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.1"* %72 to i8*
  %77 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.1"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #8
  %78 = load %"class.dawn_native::vulkan::detail::VkHandle.1"*, %"class.dawn_native::vulkan::detail::VkHandle.1"** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi %"class.dawn_native::vulkan::detail::VkHandle.1"* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq %"class.dawn_native::vulkan::detail::VkHandle.1"* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.dawn_native::vulkan::detail::VkHandle.1"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
