; ModuleID = '../../third_party/pdfium/core/fpdfapi/render/cpdf_imagerenderer.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/render/cpdf_imagerenderer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.CPDF_RenderOptions::Options" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.CPDF_RenderOptions::ColorScheme" = type { i32, i32, i32, i32 }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_OCContext* }
%class.CPDF_OCContext = type { %"class.fxcrt::Retainable", %"class.fxcrt::UnownedPtr.0", i32, %"class.std::__1::map.148" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::UnownedPtr.0" = type { %class.CPDF_Document* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.21", %"class.fxcrt::RetainPtr.38", %"class.fxcrt::RetainPtr.38", %"class.std::__1::vector", i8, i8, i32, i32, %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128", %"class.std::__1::vector.134", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.142" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.7" }
%"class.std::__1::__tree.7" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.16" }
%"class.fxcrt::RetainPtr.16" = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.637" }
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.640", %"class.std::__1::__compressed_pair.648", %"class.std::__1::__compressed_pair.653", %"class.std::__1::__compressed_pair.655", [4 x i8] }>
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642", %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { float }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.28", %"class.fxcrt::UnownedPtr.34", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.35", i64, %"class.fxcrt::RetainPtr.67", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.79", %"class.std::__1::map.85", %"class.std::__1::set.94", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.34" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.38", %"class.std::__1::map.55" }
%"class.std::__1::map.55" = type { %"class.std::__1::__tree.56" }
%"class.std::__1::__tree.56" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.fxcrt::RetainPtr.67" = type { %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.73" }
%"class.fxcrt::RetainPtr.73" = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.85" = type { %"class.std::__1::__tree.86" }
%"class.std::__1::__tree.86" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.87", %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::set.94" = type { %"class.std::__1::__tree.95" }
%"class.std::__1::__tree.95" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.fxcrt::RetainPtr.38" = type { %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.42" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.std::__1::map.42" = type { %"class.std::__1::__tree.43" }
%"class.std::__1::__tree.43" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.44", %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.105" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.0" }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.0" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { i32*, i32*, %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { i32* }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.141" }
%"class.fxcrt::UnownedPtr.141" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%"class.std::__1::map.148" = type { %"class.std::__1::__tree.149" }
%"class.std::__1::__tree.149" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.fxcrt::RetainPtr.161" = type { %"class.std::__1::unique_ptr.162" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %class.CPDF_Dictionary* }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"class.fxcrt::UnownedPtr.169"*, %"class.fxcrt::UnownedPtr.169"*, %"class.std::__1::__compressed_pair.170" }
%"class.fxcrt::UnownedPtr.169" = type opaque
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.fxcrt::UnownedPtr.169"* }
%"class.fxcrt::UnownedPtr.175" = type { %class.CPDF_RenderContext* }
%class.CPDF_RenderContext = type { %"class.fxcrt::UnownedPtr.0", %"class.fxcrt::RetainPtr.38", %"class.fxcrt::UnownedPtr.176", %"class.std::__1::vector.263" }
%"class.fxcrt::UnownedPtr.176" = type { %class.CPDF_PageRenderCache* }
%class.CPDF_PageRenderCache = type <{ %"class.CPDF_Page::RenderCacheIface", %"class.fxcrt::UnownedPtr.177", %"class.std::__1::map.245", %"class.fxcrt::MaybeOwned", i32, i32, i8, [7 x i8] }>
%"class.CPDF_Page::RenderCacheIface" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.177" = type { %class.CPDF_Page* }
%class.CPDF_Page = type { %class.IPDF_Page, %class.CPDF_PageObjectHolder, %class.CFX_STemplate, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr.0", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.239", %"class.fxcrt::ObservedPtr" }
%class.IPDF_Page = type { %"class.fxcrt::Retainable" }
%class.CPDF_PageObjectHolder = type { i32 (...)**, %"class.fxcrt::RetainPtr.38", %"class.fxcrt::RetainPtr.38", %"class.std::__1::map.178", %"class.std::__1::map.189", %class.CFX_FloatRect, %class.CPDF_Transparency, i8, i8, %"class.fxcrt::RetainPtr.38", %"class.fxcrt::UnownedPtr.0", %"class.std::__1::vector.200", %"class.std::__1::unique_ptr.207", %"class.std::__1::deque", %class.CFX_Matrix, %"class.std::__1::set.223" }
%"class.std::__1::map.178" = type { %"class.std::__1::__tree.179" }
%"class.std::__1::__tree.179" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.189" = type { %"class.std::__1::__tree.190" }
%"class.std::__1::__tree.190" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.191", %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%class.CFX_FloatRect = type { float, float, float, float }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %class.CFX_FloatRect* }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %class.CPDF_ContentParser* }
%class.CPDF_ContentParser = type opaque
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.219" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.213"**, %"class.std::__1::unique_ptr.213"**, %"class.std::__1::unique_ptr.213"**, %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %class.CPDF_PageObject* }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.467" }
%"class.fxcrt::RetainPtr.467" = type { %"class.std::__1::unique_ptr.468" }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.471" }
%"class.std::__1::vector.471" = type { %"class.std::__1::__vector_base.472" }
%"class.std::__1::__vector_base.472" = type { %"class.fxcrt::RetainPtr.473"*, %"class.fxcrt::RetainPtr.473"*, %"class.std::__1::__compressed_pair.474" }
%"class.fxcrt::RetainPtr.473" = type opaque
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.fxcrt::RetainPtr.473"* }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.std::__1::unique_ptr.213"** }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::set.223" = type { %"class.std::__1::__tree.224" }
%"class.std::__1::__tree.224" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%class.CFX_STemplate = type { float, float }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.CPDF_Page::RenderCacheIface"* }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.CPDF_Page::RenderContextIface"* }
%"class.CPDF_Page::RenderContextIface" = type { i32 (...)** }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CPDF_Page::View"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CPDF_Page::View" = type { %"class.fxcrt::Observable" }
%"class.std::__1::map.245" = type { %"class.std::__1::__tree.246" }
%"class.std::__1::__tree.246" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.247", %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.256", %"class.fxcrt::UnownedPtr.262" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %class.CPDF_ImageCacheEntry* }
%class.CPDF_ImageCacheEntry = type opaque
%"class.fxcrt::UnownedPtr.262" = type { %class.CPDF_ImageCacheEntry* }
%"class.std::__1::vector.263" = type { %"class.std::__1::__vector_base.264" }
%"class.std::__1::__vector_base.264" = type { %"class.CPDF_RenderContext::Layer"*, %"class.CPDF_RenderContext::Layer"*, %"class.std::__1::__compressed_pair.266" }
%"class.CPDF_RenderContext::Layer" = type { %"class.fxcrt::UnownedPtr.265", %class.CFX_Matrix }
%"class.fxcrt::UnownedPtr.265" = type { %class.CPDF_PageObjectHolder* }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.CPDF_RenderContext::Layer"* }
%"class.fxcrt::UnownedPtr.271" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type { i32 (...)**, %"class.fxcrt::RetainPtr.272", i32, i32, i32, i32, i8, %struct.FX_RECT, %"class.std::__1::unique_ptr.278" }
%"class.fxcrt::RetainPtr.272" = type { %"class.std::__1::unique_ptr.273" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type { %class.CFX_DIBBase, %"class.fxcrt::MaybeOwned.429" }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr.272", %"class.std::__1::vector.497" }
%"class.std::__1::vector.497" = type { %"class.std::__1::__vector_base.498" }
%"class.std::__1::__vector_base.498" = type { i32*, i32*, %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.fxcrt::MaybeOwned.429" = type { %"class.std::__1::unique_ptr.408", %"class.fxcrt::UnownedPtr.416" }
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { i8* }
%"class.fxcrt::UnownedPtr.416" = type { i8* }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %class.RenderDeviceDriverIface* }
%class.RenderDeviceDriverIface = type { i32 (...)** }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr.284" }
%"class.fxcrt::RetainPtr.284" = type { %"class.std::__1::unique_ptr.285" }
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.288", %"class.std::__1::vector.296" }
%"class.std::__1::vector.288" = type { %"class.std::__1::__vector_base.289" }
%"class.std::__1::__vector_base.289" = type { %"struct.std::__1::pair.290"*, %"struct.std::__1::pair.290"*, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::pair.290" = type opaque
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::pair.290"* }
%"class.std::__1::vector.296" = type { %"class.std::__1::__vector_base.297" }
%"class.std::__1::__vector_base.297" = type { %"class.std::__1::unique_ptr.298"*, %"class.std::__1::unique_ptr.298"*, %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::unique_ptr.298" = type opaque
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.std::__1::unique_ptr.298"* }
%"class.fxcrt::UnownedPtr.306" = type { %class.CPDF_PageObject* }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.307" }
%"class.fxcrt::SharedCopyOnWrite.307" = type { %"class.fxcrt::RetainPtr.308" }
%"class.fxcrt::RetainPtr.308" = type { %"class.std::__1::unique_ptr.309" }
%"class.std::__1::unique_ptr.309" = type { %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.312" }
%"class.std::__1::vector.312" = type { %"class.std::__1::__vector_base.313" }
%"class.std::__1::__vector_base.313" = type { float*, float*, %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.321" }
%"class.fxcrt::SharedCopyOnWrite.321" = type { %"class.fxcrt::RetainPtr.322" }
%"class.fxcrt::RetainPtr.322" = type { %"class.std::__1::unique_ptr.323" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.312", %"class.std::__1::unique_ptr.326", %"class.fxcrt::RetainPtr.344" }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %class.PatternValue* }
%class.PatternValue = type { %"class.fxcrt::RetainPtr.329", %"struct.std::__1::array" }
%"class.fxcrt::RetainPtr.329" = type { %"class.std::__1::unique_ptr.330" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %class.CPDF_Pattern* }
%class.CPDF_Pattern = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.0", %"class.fxcrt::RetainPtr.333", %class.CFX_Matrix, %class.CFX_Matrix }
%"class.fxcrt::RetainPtr.333" = type { %"class.std::__1::unique_ptr.334" }
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %class.CPDF_Object* }
%"struct.std::__1::array" = type { [16 x float] }
%"class.fxcrt::RetainPtr.344" = type { %"class.std::__1::unique_ptr.345" }
%"class.std::__1::unique_ptr.345" = type { %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type <{ %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.348", %"class.fxcrt::RetainPtr.349", i32, i32, i32, [4 x i8] }>
%"class.fxcrt::UnownedPtr.348" = type { %class.CPDF_Document* }
%"class.fxcrt::RetainPtr.349" = type { %"class.std::__1::unique_ptr.350" }
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %class.CPDF_Array* }
%class.CPDF_Array = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.359" }
%"class.fxcrt::SharedCopyOnWrite.359" = type { %"class.fxcrt::RetainPtr.360" }
%"class.fxcrt::RetainPtr.360" = type { %"class.std::__1::unique_ptr.361" }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.364", %"class.fxcrt::UnownedPtr.348", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.364" = type { %"class.std::__1::unique_ptr.365" }
%"class.std::__1::unique_ptr.365" = type { %"class.std::__1::__compressed_pair.366" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.367" = type { %class.CPDF_Font* }
%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.0", %class.CFX_Font, %"class.std::__1::vector.417", %"class.fxcrt::RetainPtr.425", %"class.fxcrt::RetainPtr.38", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.438", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.368", %"class.std::__1::unique_ptr.374", %"class.fxcrt::RetainPtr.380", %"class.fxcrt::RetainPtr.396", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.408", %"class.std::__1::vector.412", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.368" = type { %"class.std::__1::unique_ptr.369" }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.380" = type { %"class.std::__1::unique_ptr.381" }
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.384", %"class.fxcrt::RetainPtr.388" }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.388" = type { %"class.std::__1::unique_ptr.389" }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.396" = type { %"class.std::__1::unique_ptr.397" }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::vector.412" = type { %"class.std::__1::__vector_base.413" }
%"class.std::__1::__vector_base.413" = type { i8*, i8*, %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.416", i64 }
%"class.std::__1::vector.417" = type { %"class.std::__1::__vector_base.418" }
%"class.std::__1::__vector_base.418" = type { %"class.std::__1::unique_ptr.419"*, %"class.std::__1::unique_ptr.419"*, %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::unique_ptr.419" = type opaque
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.std::__1::unique_ptr.419"* }
%"class.fxcrt::RetainPtr.425" = type { %"class.std::__1::unique_ptr.426" }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned.429", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.161", %"class.fxcrt::RetainPtr.430" }
%"class.fxcrt::RetainPtr.430" = type { %"class.std::__1::unique_ptr.431" }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr.38", %"class.std::__1::unique_ptr.408", %"class.fxcrt::RetainPtr.368" }
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type opaque
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.448" }
%"class.fxcrt::SharedCopyOnWrite.448" = type { %"class.fxcrt::RetainPtr.449" }
%"class.fxcrt::RetainPtr.449" = type { %"class.std::__1::unique_ptr.450" }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.333", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.453", %"class.fxcrt::RetainPtr.459", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.453", %"class.fxcrt::RetainPtr.453", %"class.fxcrt::RetainPtr.453", float, float }
%"class.fxcrt::RetainPtr.459" = type { %"class.std::__1::unique_ptr.460" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr.348", i8, %"class.std::__1::vector.412", %"class.std::__1::vector.412", %"class.std::__1::vector.412" }
%"class.fxcrt::RetainPtr.453" = type { %"class.std::__1::unique_ptr.454" }
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %class.CPDF_Object* }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %class.CPDF_ImageRenderer* }
%class.CPDF_ImageRenderer = type <{ %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.488", %"class.fxcrt::RetainPtr.329", %"class.fxcrt::RetainPtr.493", %class.CFX_Matrix, %class.CFX_Matrix, %class.CPDF_ImageLoader, %"class.std::__1::unique_ptr.514", %"class.std::__1::unique_ptr.533", i32, i32, i32, i32, %struct.FXDIB_ResampleOptions, i8, i8, i8, i8 }>
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_RenderStatus* }
%class.CPDF_RenderStatus = type <{ %class.CPDF_RenderOptions, %"class.fxcrt::RetainPtr.161", %"class.fxcrt::RetainPtr.161", %"class.std::__1::vector.167", %"class.fxcrt::UnownedPtr.175", %"class.fxcrt::UnownedPtr.271", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.306", %"class.fxcrt::UnownedPtr.306", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.481", %"class.fxcrt::UnownedPtr.487", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>
%class.CPDF_RenderOptions = type { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", %"class.fxcrt::RetainPtr" }
%"class.fxcrt::UnownedPtr.488" = type { %class.CPDF_ImageObject* }
%class.CPDF_ImageObject = type { %class.CPDF_PageObject, %class.CFX_Matrix, %"class.fxcrt::RetainPtr.489" }
%"class.fxcrt::RetainPtr.489" = type { %"class.std::__1::unique_ptr.490" }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %class.CPDF_Image* }
%class.CPDF_Image = type { %"class.fxcrt::Retainable", i32, i32, i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.0", %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.505", %"class.fxcrt::RetainPtr.161" }
%"class.fxcrt::RetainPtr.505" = type { %"class.std::__1::unique_ptr.506" }
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %class.CPDF_Stream* }
%"class.fxcrt::RetainPtr.493" = type { %"class.std::__1::unique_ptr.494" }
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %class.CFX_DIBBase* }
%class.CPDF_ImageLoader = type { i32, i8, %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493", %"class.fxcrt::UnownedPtr.176", %"class.fxcrt::UnownedPtr.513" }
%"class.fxcrt::UnownedPtr.513" = type { %class.CPDF_ImageObject* }
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %class.CFX_ImageTransformer* }
%class.CFX_ImageTransformer = type { %"class.fxcrt::RetainPtr.493", %class.CFX_Matrix, %struct.FX_RECT, %struct.FX_RECT, %class.CFX_Matrix, %"class.std::__1::unique_ptr.517", %class.CFX_BitmapStorer, %struct.FXDIB_ResampleOptions, i32 }
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %class.CFX_ImageStretcher* }
%class.CFX_ImageStretcher = type <{ %"class.fxcrt::UnownedPtr.520", %"class.fxcrt::RetainPtr.493", %"class.std::__1::unique_ptr.521", %struct.FXDIB_ResampleOptions, i32, i32, %struct.FX_RECT, i16, [2 x i8] }>
%"class.fxcrt::UnownedPtr.520" = type { %class.ScanlineComposerIface* }
%class.ScanlineComposerIface = type { i32 (...)** }
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %class.CStretchEngine* }
%class.CStretchEngine = type opaque
%class.CFX_BitmapStorer = type { %class.ScanlineComposerIface, %"class.fxcrt::RetainPtr.272" }
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %class.CFX_ImageRenderer* }
%class.CFX_ImageRenderer = type <{ %"class.fxcrt::RetainPtr.272", %"class.fxcrt::UnownedPtr.536", %class.CFX_Matrix, %"class.std::__1::unique_ptr.514", %"class.std::__1::unique_ptr.517", %class.CFX_BitmapComposer, %struct.FX_RECT, i32, i32, i32, i8, [3 x i8] }>
%"class.fxcrt::UnownedPtr.536" = type { %class.CFX_ClipRgn* }
%class.CFX_ClipRgn = type opaque
%class.CFX_BitmapComposer = type { %class.ScanlineComposerIface, %"class.fxcrt::RetainPtr.272", %"class.fxcrt::UnownedPtr.536", i16, i32, i32, i32, i32, i32, i32, %"class.fxcrt::RetainPtr.272", %class.CFX_ScanlineCompositor, i8, i8, i8, i8, i32, %"class.std::__1::vector.412", %"class.std::__1::vector.412", %"class.std::__1::vector.412", %"class.std::__1::vector.412" }
%class.CFX_ScanlineCompositor = type <{ i32, i16, i16, %"class.CFX_ScanlineCompositor::Palette", i32, i32, i32, i32, i32, i8, [3 x i8] }>
%"class.CFX_ScanlineCompositor::Palette" = type { i64, i64, %"class.std::__1::unique_ptr.537" }
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%struct.FXDIB_ResampleOptions = type { i8, i8, i8, i8 }
%"class.fxcrt::UnownedPtr.487" = type { %class.CPDF_Type3Char* }
%class.CPDF_Type3Char = type opaque
%class.CPDF_Transparency = type { i8, i8 }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %struct.FX_RECT }
%class.CPDF_DocPageData = type { %"class.CPDF_Document::PageDataIface", %"class.CPDF_Font::FormFactoryIface", i8, %"class.std::__1::map.542", %"class.std::__1::map.551", %"class.std::__1::map.562", %"class.std::__1::map.573", %"class.std::__1::map.582", %"class.std::__1::map.591", %"class.std::__1::map.600" }
%"class.CPDF_Font::FormFactoryIface" = type { i32 (...)** }
%"class.std::__1::map.542" = type { %"class.std::__1::__tree.543" }
%"class.std::__1::__tree.543" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.544", %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.551" = type { %"class.std::__1::__tree.552" }
%"class.std::__1::__tree.552" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.553", %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.562" = type { %"class.std::__1::__tree.563" }
%"class.std::__1::__tree.563" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.564", %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.573" = type { %"class.std::__1::__tree.574" }
%"class.std::__1::__tree.574" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.575", %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.582" = type { %"class.std::__1::__tree.583" }
%"class.std::__1::__tree.583" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.584", %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.591" = type { %"class.std::__1::__tree.592" }
%"class.std::__1::__tree.592" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.593", %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::map.600" = type { %"class.std::__1::__tree.601" }
%"class.std::__1::__tree.601" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.602", %"class.std::__1::__compressed_pair.606" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%class.CFX_PathData = type { %"class.std::__1::vector.617" }
%"class.std::__1::vector.617" = type { %"class.std::__1::__vector_base.618" }
%"class.std::__1::__vector_base.618" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.619" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %class.FX_PATHPOINT* }
%struct.CFX_FillRenderOptions = type { i8, i8 }
%"class.pdfium::Optional.624" = type { %"class.pdfium::internal::OptionalBase.625" }
%"class.pdfium::internal::OptionalBase.625" = type { %"struct.pdfium::internal::OptionalStorage.626" }
%"struct.pdfium::internal::OptionalStorage.626" = type { %"struct.pdfium::internal::OptionalStorageBase.627" }
%"struct.pdfium::internal::OptionalStorageBase.627" = type { i8, %union.anon.628 }
%union.anon.628 = type { %"class.std::__1::vector.629" }
%"class.std::__1::vector.629" = type { %"class.std::__1::__vector_base.630" }
%"class.std::__1::__vector_base.630" = type { %"struct.std::__1::pair.631"*, %"struct.std::__1::pair.631"*, %"class.std::__1::__compressed_pair.632" }
%"struct.std::__1::pair.631" = type { %"class.fxcrt::ByteString", %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"struct.std::__1::pair.631"* }
%class.CFX_DefaultRenderDevice = type { %class.CFX_RenderDevice }
%class.PauseIndicatorIface = type opaque
%class.CPDF_TilingPattern = type <{ %class.CPDF_Pattern, i8, [3 x i8], %class.CFX_FloatRect, float, float, [4 x i8] }>
%class.CPDF_ShadingPattern = type { %class.CPDF_Pattern, i32, i8, %"class.fxcrt::RetainPtr.344", %"class.std::__1::vector.609" }
%"class.std::__1::vector.609" = type { %"class.std::__1::__vector_base.610" }
%"class.std::__1::__vector_base.610" = type { %"class.std::__1::unique_ptr.611"*, %"class.std::__1::unique_ptr.611"*, %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::unique_ptr.611" = type opaque
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.std::__1::unique_ptr.611"* }

@.str = private unnamed_addr constant [11 x i8] c"ColorSpace\00", align 1
@__const._ZN18CPDF_ImageRenderer15DrawMaskedImageEv.bitmap_render = private unnamed_addr constant <{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr" }, %"class.fxcrt::RetainPtr.161", %"class.fxcrt::RetainPtr.161", %"class.std::__1::vector.167", %"class.fxcrt::UnownedPtr.175", %"class.fxcrt::UnownedPtr.271", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.306", %"class.fxcrt::UnownedPtr.306", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.481", %"class.fxcrt::UnownedPtr.487", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }> <{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr" } { i8 -86, i8 -86, %"struct.CPDF_RenderOptions::Options" { i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86 }, %"struct.CPDF_RenderOptions::ColorScheme" { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA", %"class.fxcrt::RetainPtr" { %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %class.CPDF_OCContext* inttoptr (i64 -6148914691236517206 to %class.CPDF_OCContext*) } } } } }, %"class.fxcrt::RetainPtr.161" { %"class.std::__1::unique_ptr.162" { %"class.std::__1::__compressed_pair.163" { %"struct.std::__1::__compressed_pair_elem.164" { %class.CPDF_Dictionary* inttoptr (i64 -6148914691236517206 to %class.CPDF_Dictionary*) } } } }, %"class.fxcrt::RetainPtr.161" { %"class.std::__1::unique_ptr.162" { %"class.std::__1::__compressed_pair.163" { %"struct.std::__1::__compressed_pair_elem.164" { %class.CPDF_Dictionary* inttoptr (i64 -6148914691236517206 to %class.CPDF_Dictionary*) } } } }, %"class.std::__1::vector.167" { %"class.std::__1::__vector_base.168" { %"class.fxcrt::UnownedPtr.169"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::UnownedPtr.169"*), %"class.fxcrt::UnownedPtr.169"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::UnownedPtr.169"*), %"class.std::__1::__compressed_pair.170" { %"struct.std::__1::__compressed_pair_elem.171" { %"class.fxcrt::UnownedPtr.169"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::UnownedPtr.169"*) } } } }, %"class.fxcrt::UnownedPtr.175" { %class.CPDF_RenderContext* inttoptr (i64 -6148914691236517206 to %class.CPDF_RenderContext*) }, %"class.fxcrt::UnownedPtr.271" { %class.CFX_RenderDevice* inttoptr (i64 -6148914691236517206 to %class.CFX_RenderDevice*) }, %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.CPDF_ClipPath { %"class.fxcrt::SharedCopyOnWrite" { %"class.fxcrt::RetainPtr.284" { %"class.std::__1::unique_ptr.285" { %"class.std::__1::__compressed_pair.286" { %"struct.std::__1::__compressed_pair_elem.287" { %"class.CPDF_ClipPath::PathData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_ClipPath::PathData"*) } } } } } }, %"class.fxcrt::UnownedPtr.306" { %class.CPDF_PageObject* inttoptr (i64 -6148914691236517206 to %class.CPDF_PageObject*) }, %"class.fxcrt::UnownedPtr.306" { %class.CPDF_PageObject* inttoptr (i64 -6148914691236517206 to %class.CPDF_PageObject*) }, %class.CPDF_GraphicStates { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.CPDF_ClipPath { %"class.fxcrt::SharedCopyOnWrite" { %"class.fxcrt::RetainPtr.284" { %"class.std::__1::unique_ptr.285" { %"class.std::__1::__compressed_pair.286" { %"struct.std::__1::__compressed_pair_elem.287" { %"class.CPDF_ClipPath::PathData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_ClipPath::PathData"*) } } } } } }, %class.CFX_GraphState { %"class.fxcrt::SharedCopyOnWrite.307" { %"class.fxcrt::RetainPtr.308" { %"class.std::__1::unique_ptr.309" { %"class.std::__1::__compressed_pair.310" { %"struct.std::__1::__compressed_pair_elem.311" { %class.CFX_RetainableGraphStateData* inttoptr (i64 -6148914691236517206 to %class.CFX_RetainableGraphStateData*) } } } } } }, %class.CPDF_ColorState { %"class.fxcrt::SharedCopyOnWrite.321" { %"class.fxcrt::RetainPtr.322" { %"class.std::__1::unique_ptr.323" { %"class.std::__1::__compressed_pair.324" { %"struct.std::__1::__compressed_pair_elem.325" { %"class.CPDF_ColorState::ColorData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_ColorState::ColorData"*) } } } } } }, %class.CPDF_TextState { %"class.fxcrt::SharedCopyOnWrite.359" { %"class.fxcrt::RetainPtr.360" { %"class.std::__1::unique_ptr.361" { %"class.std::__1::__compressed_pair.362" { %"struct.std::__1::__compressed_pair_elem.363" { %"class.CPDF_TextState::TextData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_TextState::TextData"*) } } } } } }, %class.CPDF_GeneralState { %"class.fxcrt::SharedCopyOnWrite.448" { %"class.fxcrt::RetainPtr.449" { %"class.std::__1::unique_ptr.450" { %"class.std::__1::__compressed_pair.451" { %"struct.std::__1::__compressed_pair_elem.452" { %"class.CPDF_GeneralState::StateData"* inttoptr (i64 -6148914691236517206 to %"class.CPDF_GeneralState::StateData"*) } } } } } } }, %"class.std::__1::unique_ptr.481" { %"class.std::__1::__compressed_pair.482" { %"struct.std::__1::__compressed_pair_elem.483" { %class.CPDF_ImageRenderer* inttoptr (i64 -6148914691236517206 to %class.CPDF_ImageRenderer*) } } }, %"class.fxcrt::UnownedPtr.487" { %class.CPDF_Type3Char* inttoptr (i64 -6148914691236517206 to %class.CPDF_Type3Char*) }, %class.CPDF_Transparency { i8 -86, i8 -86 }, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN18CPDF_ImageRenderer15DrawMaskedImageEv.image_render = private unnamed_addr constant <{ %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.488", %"class.fxcrt::RetainPtr.329", %"class.fxcrt::RetainPtr.493", %class.CFX_Matrix, %class.CFX_Matrix, { i32, i8, [3 x i8], %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493", %"class.fxcrt::UnownedPtr.176", %"class.fxcrt::UnownedPtr.513" }, %"class.std::__1::unique_ptr.514", %"class.std::__1::unique_ptr.533", i32, i32, i32, i32, %struct.FXDIB_ResampleOptions, i8, i8, i8, i8 }> <{ %"class.fxcrt::UnownedPtr" { %class.CPDF_RenderStatus* inttoptr (i64 -6148914691236517206 to %class.CPDF_RenderStatus*) }, %"class.fxcrt::UnownedPtr.488" { %class.CPDF_ImageObject* inttoptr (i64 -6148914691236517206 to %class.CPDF_ImageObject*) }, %"class.fxcrt::RetainPtr.329" { %"class.std::__1::unique_ptr.330" { %"class.std::__1::__compressed_pair.331" { %"struct.std::__1::__compressed_pair_elem.332" { %class.CPDF_Pattern* inttoptr (i64 -6148914691236517206 to %class.CPDF_Pattern*) } } } }, %"class.fxcrt::RetainPtr.493" { %"class.std::__1::unique_ptr.494" { %"class.std::__1::__compressed_pair.495" { %"struct.std::__1::__compressed_pair_elem.496" { %class.CFX_DIBBase* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBBase*) } } } }, %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, { i32, i8, [3 x i8], %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493", %"class.fxcrt::UnownedPtr.176", %"class.fxcrt::UnownedPtr.513" } { i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.fxcrt::RetainPtr.493" { %"class.std::__1::unique_ptr.494" { %"class.std::__1::__compressed_pair.495" { %"struct.std::__1::__compressed_pair_elem.496" { %class.CFX_DIBBase* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBBase*) } } } }, %"class.fxcrt::RetainPtr.493" { %"class.std::__1::unique_ptr.494" { %"class.std::__1::__compressed_pair.495" { %"struct.std::__1::__compressed_pair_elem.496" { %class.CFX_DIBBase* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBBase*) } } } }, %"class.fxcrt::UnownedPtr.176" { %class.CPDF_PageRenderCache* inttoptr (i64 -6148914691236517206 to %class.CPDF_PageRenderCache*) }, %"class.fxcrt::UnownedPtr.513" { %class.CPDF_ImageObject* inttoptr (i64 -6148914691236517206 to %class.CPDF_ImageObject*) } }, %"class.std::__1::unique_ptr.514" { %"class.std::__1::__compressed_pair.515" { %"struct.std::__1::__compressed_pair_elem.516" { %class.CFX_ImageTransformer* inttoptr (i64 -6148914691236517206 to %class.CFX_ImageTransformer*) } } }, %"class.std::__1::unique_ptr.533" { %"class.std::__1::__compressed_pair.534" { %"struct.std::__1::__compressed_pair_elem.535" { %class.CFX_ImageRenderer* inttoptr (i64 -6148914691236517206 to %class.CFX_ImageRenderer*) } } }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %struct.FXDIB_ResampleOptions { i8 -86, i8 -86, i8 -86, i8 -86 }, i8 -86, i8 -86, i8 -86, i8 -86 }>, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"DCTDecode\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"JPXDecode\00", align 1

@_ZN18CPDF_ImageRendererC1Ev = hidden unnamed_addr alias void (%class.CPDF_ImageRenderer*), void (%class.CPDF_ImageRenderer*)* @_ZN18CPDF_ImageRendererC2Ev
@_ZN18CPDF_ImageRendererD1Ev = hidden unnamed_addr alias void (%class.CPDF_ImageRenderer*), void (%class.CPDF_ImageRenderer*)* @_ZN18CPDF_ImageRendererD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_ImageRendererC2Ev(%class.CPDF_ImageRenderer*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 4, i32 0
  %3 = bitcast %class.CPDF_ImageRenderer* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false)
  %4 = bitcast float* %2 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %4, align 4
  %5 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 4, i32 4
  %6 = bitcast float* %5 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %6, align 4
  %7 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5, i32 2
  %8 = bitcast float* %7 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %8, align 4
  %9 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 6
  tail call void @_ZN16CPDF_ImageLoaderC1Ev(%class.CPDF_ImageLoader* %9) #10
  %10 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 7
  %11 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 13
  %12 = bitcast %"class.std::__1::unique_ptr.514"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false)
  tail call void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions* %11) #10
  %13 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 14
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 15
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 16
  store i8 1, i8* %15, align 2
  ret void
}

declare void @_ZN16CPDF_ImageLoaderC1Ev(%class.CPDF_ImageLoader*) unnamed_addr #1

declare void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_ImageRendererD2Ev(%class.CPDF_ImageRenderer*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %class.CFX_ImageRenderer*, %class.CFX_ImageRenderer** %2, align 8
  store %class.CFX_ImageRenderer* null, %class.CFX_ImageRenderer** %2, align 8
  %4 = icmp eq %class.CFX_ImageRenderer* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN17CFX_ImageRendererD1Ev(%class.CFX_ImageRenderer* nonnull %3) #10
  %6 = bitcast %class.CFX_ImageRenderer* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %9 = load %class.CFX_ImageTransformer*, %class.CFX_ImageTransformer** %8, align 8
  store %class.CFX_ImageTransformer* null, %class.CFX_ImageTransformer** %8, align 8
  %10 = icmp eq %class.CFX_ImageTransformer* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN20CFX_ImageTransformerD1Ev(%class.CFX_ImageTransformer* nonnull %9) #10
  %12 = bitcast %class.CFX_ImageTransformer* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 6
  tail call void @_ZN16CPDF_ImageLoaderD1Ev(%class.CPDF_ImageLoader* %14) #10
  %15 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %16 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %15, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %15, align 8
  %17 = icmp eq %class.CFX_DIBBase* %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %16, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, -1
  store i64 %21, i64* %19, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %29

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %16, i64 0, i32 0
  %25 = bitcast %class.CFX_DIBBase* %16 to void (%"class.fxcrt::Retainable"*)***
  %26 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, i64 1
  %28 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %27, align 8
  tail call void %28(%"class.fxcrt::Retainable"* nonnull %24) #10
  br label %29

29:                                               ; preds = %13, %18, %23
  %30 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %31 = load %class.CPDF_Pattern*, %class.CPDF_Pattern** %30, align 8
  store %class.CPDF_Pattern* null, %class.CPDF_Pattern** %30, align 8
  %32 = icmp eq %class.CPDF_Pattern* %31, null
  br i1 %32, label %44, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.CPDF_Pattern, %class.CPDF_Pattern* %31, i64 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = add nsw i64 %35, -1
  store i64 %36, i64* %34, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %33
  %39 = getelementptr inbounds %class.CPDF_Pattern, %class.CPDF_Pattern* %31, i64 0, i32 0
  %40 = bitcast %class.CPDF_Pattern* %31 to void (%"class.fxcrt::Retainable"*)***
  %41 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %41, i64 1
  %43 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %42, align 8
  tail call void %43(%"class.fxcrt::Retainable"* nonnull %39) #10
  br label %44

44:                                               ; preds = %29, %33, %38
  ret void
}

; Function Attrs: nounwind
declare void @_ZN16CPDF_ImageLoaderD1Ev(%class.CPDF_ImageLoader*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ImageRenderer16StartLoadDIBBaseEv(%class.CPDF_ImageRenderer*) local_unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_FloatRect*
  %5 = bitcast { i64, i64 }* %3 to %struct.FX_RECT*
  %6 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10, !noalias !2
  %7 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5
  %8 = tail call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix11GetUnitRectEv(%class.CFX_Matrix* %7) #10, !noalias !2
  %9 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %10 = extractvalue { <2 x float>, <2 x float> } %8, 0
  store <2 x float> %10, <2 x float>* %9, align 8, !noalias !2
  %11 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %12 = extractvalue { <2 x float>, <2 x float> } %8, 1
  store <2 x float> %12, <2 x float>* %11, align 8, !noalias !2
  %13 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #10, !noalias !2
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %15 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %4) #10, !noalias !2
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %17 = extractvalue { i64, i64 } %15, 0
  store i64 %17, i64* %16, align 8, !noalias !2
  %18 = extractvalue { i64, i64 } %15, 1
  store i64 %18, i64* %14, align 8, !noalias !2
  %19 = call zeroext i1 @_ZNK7FX_RECT5ValidEv(%struct.FX_RECT* nonnull %5) #10, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10, !noalias !2
  br i1 %19, label %20, label %32

20:                                               ; preds = %1
  %21 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 6
  %22 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 1, i32 0
  %23 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %22, align 8
  %24 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %25 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %24, align 8
  %26 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 15
  %27 = load i8, i8* %26, align 1, !range !5
  %28 = icmp ne i8 %27, 0
  %29 = call zeroext i1 @_ZN16CPDF_ImageLoader5StartEPK16CPDF_ImageObjectPK17CPDF_RenderStatusb(%class.CPDF_ImageLoader* %21, %class.CPDF_ImageObject* %23, %class.CPDF_RenderStatus* %25, i1 zeroext %28) #10
  br i1 %29, label %30, label %32

30:                                               ; preds = %20
  %31 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 9
  store i32 1, i32* %31, align 8
  br label %32

32:                                               ; preds = %20, %1, %30
  %33 = phi i1 [ true, %30 ], [ false, %1 ], [ false, %20 ]
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18CPDF_ImageRenderer11GetUnitRectEv(%"class.pdfium::Optional"* noalias nocapture sret, %class.CPDF_ImageRenderer*) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = bitcast { <2 x float>, <2 x float> }* %3 to %class.CFX_FloatRect*
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %struct.FX_RECT*
  %7 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %1, i64 0, i32 5
  %9 = tail call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix11GetUnitRectEv(%class.CFX_Matrix* %8) #10
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %11 = extractvalue { <2 x float>, <2 x float> } %9, 0
  store <2 x float> %11, <2 x float>* %10, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %13 = extractvalue { <2 x float>, <2 x float> } %9, 1
  store <2 x float> %13, <2 x float>* %12, align 8
  %14 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %16 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %4) #10
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %18 = extractvalue { i64, i64 } %16, 0
  store i64 %18, i64* %17, align 8
  %19 = extractvalue { i64, i64 } %16, 1
  store i64 %19, i64* %15, align 8
  %20 = call zeroext i1 @_ZNK7FX_RECT5ValidEv(%struct.FX_RECT* nonnull %6) #10
  %21 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %20, label %23, label %22

22:                                               ; preds = %2
  call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 20, i1 false)
  br label %26

23:                                               ; preds = %2
  store i8 1, i8* %21, align 4
  %24 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = bitcast %struct.FX_RECT* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* nonnull align 8 %14, i64 16, i1 false) #10
  br label %26

26:                                               ; preds = %23, %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN16CPDF_ImageLoader5StartEPK16CPDF_ImageObjectPK17CPDF_RenderStatusb(%class.CPDF_ImageLoader*, %class.CPDF_ImageObject*, %class.CPDF_RenderStatus*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ImageRenderer18StartRenderDIBBaseEv(%class.CPDF_ImageRenderer*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr.459", align 8
  %3 = alloca %"class.fxcrt::RetainPtr.459", align 8
  %4 = alloca %"class.fxcrt::RetainPtr.459", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.459", align 8
  %6 = alloca %"class.fxcrt::RetainPtr.493", align 8
  %7 = alloca %"class.fxcrt::RetainPtr.459", align 8
  %8 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %9 = alloca i32, align 4
  %10 = bitcast i32* %9 to %struct.FXDIB_ResampleOptions*
  %11 = alloca %"class.fxcrt::RetainPtr.489", align 8
  %12 = alloca %"class.fxcrt::RetainPtr.489", align 8
  %13 = alloca %"class.fxcrt::RetainPtr.489", align 8
  %14 = alloca %"class.fxcrt::ByteString", align 8
  %15 = alloca %"class.fxcrt::RetainPtr.344", align 8
  %16 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 6
  %17 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %17, align 8
  %19 = icmp eq %class.CFX_DIBBase* %18, null
  br i1 %19, label %478, label %20

20:                                               ; preds = %1
  %21 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 1, i32 0
  %22 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %21, align 8
  %23 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %22, i64 0, i32 0, i32 0, i32 5
  %24 = tail call float @_ZNK17CPDF_GeneralState12GetFillAlphaEv(%class.CPDF_GeneralState* %23) #10
  %25 = fmul float %24, 2.550000e+02
  %26 = tail call i32 @FXSYS_roundf(float %25) #10
  %27 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 10
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 3
  %29 = getelementptr inbounds %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %29, align 8
  %31 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %17, align 8
  %32 = icmp eq %class.CFX_DIBBase* %30, %31
  br i1 %32, label %54, label %33

33:                                               ; preds = %20
  %34 = icmp eq %class.CFX_DIBBase* %31, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %31, i64 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add nsw i64 %37, 1
  store i64 %38, i64* %36, align 8
  %39 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %29, align 8
  br label %40

40:                                               ; preds = %35, %33
  %41 = phi %class.CFX_DIBBase* [ %39, %35 ], [ %30, %33 ]
  store %class.CFX_DIBBase* %31, %class.CFX_DIBBase** %29, align 8
  %42 = icmp eq %class.CFX_DIBBase* %41, null
  br i1 %42, label %54, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %41, i64 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = add nsw i64 %45, -1
  store i64 %46, i64* %44, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %43
  %49 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %41, i64 0, i32 0
  %50 = bitcast %class.CFX_DIBBase* %41 to void (%"class.fxcrt::Retainable"*)***
  %51 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, i64 1
  %53 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %52, align 8
  tail call void %53(%"class.fxcrt::Retainable"* nonnull %49) #10
  br label %54

54:                                               ; preds = %20, %40, %43, %48
  %55 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %56 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %55, align 8
  %57 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %56, i64 0, i32 0, i32 0
  %58 = load i8, i8* %57, align 8
  %59 = icmp eq i8 %58, 2
  br i1 %59, label %60, label %66

60:                                               ; preds = %54
  %61 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 6, i32 3, i32 0, i32 0, i32 0, i32 0
  %62 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %61, align 8
  %63 = icmp eq %class.CFX_DIBBase* %62, null
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = tail call zeroext i1 @_ZN18CPDF_ImageRenderer16StartBitmapAlphaEv(%class.CPDF_ImageRenderer* %0)
  br label %478

66:                                               ; preds = %60, %54
  %67 = tail call %class.CPDF_Object* @_ZNK17CPDF_GeneralState5GetTREv(%class.CPDF_GeneralState* %23) #10
  %68 = icmp eq %class.CPDF_Object* %67, null
  br i1 %68, label %195, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.fxcrt::RetainPtr.459"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #10
  call void @_ZNK17CPDF_GeneralState15GetTransferFuncEv(%"class.fxcrt::RetainPtr.459"* nonnull sret %2, %class.CPDF_GeneralState* %23) #10
  %71 = getelementptr inbounds %"class.fxcrt::RetainPtr.459", %"class.fxcrt::RetainPtr.459"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %class.CPDF_TransferFunc*, %class.CPDF_TransferFunc** %71, align 8
  %73 = icmp eq %class.CPDF_TransferFunc* %72, null
  store %class.CPDF_TransferFunc* null, %class.CPDF_TransferFunc** %71, align 8
  br i1 %73, label %85, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %72, i64 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = add nsw i64 %76, -1
  store i64 %77, i64* %75, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %103

79:                                               ; preds = %74
  %80 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %72, i64 0, i32 0
  %81 = bitcast %class.CPDF_TransferFunc* %72 to void (%"class.fxcrt::Retainable"*)***
  %82 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %82, i64 1
  %84 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %83, align 8
  call void %84(%"class.fxcrt::Retainable"* nonnull %80) #10
  br label %103

85:                                               ; preds = %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #10
  %86 = bitcast %"class.fxcrt::RetainPtr.459"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #10
  %87 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %55, align 8
  %88 = call %class.CPDF_Object* @_ZNK17CPDF_GeneralState5GetTREv(%class.CPDF_GeneralState* %23) #10
  call void @_ZNK17CPDF_RenderStatus15GetTransferFuncEPK11CPDF_Object(%"class.fxcrt::RetainPtr.459"* nonnull sret %3, %class.CPDF_RenderStatus* %87, %class.CPDF_Object* %88) #10
  call void @_ZN17CPDF_GeneralState15SetTransferFuncERKN5fxcrt9RetainPtrI17CPDF_TransferFuncEE(%class.CPDF_GeneralState* %23, %"class.fxcrt::RetainPtr.459"* nonnull dereferenceable(8) %3) #10
  %89 = getelementptr inbounds %"class.fxcrt::RetainPtr.459", %"class.fxcrt::RetainPtr.459"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %class.CPDF_TransferFunc*, %class.CPDF_TransferFunc** %89, align 8
  store %class.CPDF_TransferFunc* null, %class.CPDF_TransferFunc** %89, align 8
  %91 = icmp eq %class.CPDF_TransferFunc* %90, null
  br i1 %91, label %103, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %90, i64 0, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = add nsw i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %103

97:                                               ; preds = %92
  %98 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %90, i64 0, i32 0
  %99 = bitcast %class.CPDF_TransferFunc* %90 to void (%"class.fxcrt::Retainable"*)***
  %100 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %100, i64 1
  %102 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %101, align 8
  call void %102(%"class.fxcrt::Retainable"* nonnull %98) #10
  br label %103

103:                                              ; preds = %97, %92, %85, %79, %74
  %104 = phi i8* [ %70, %74 ], [ %70, %79 ], [ %86, %85 ], [ %86, %92 ], [ %86, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #10
  %105 = bitcast %"class.fxcrt::RetainPtr.459"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #10
  call void @_ZNK17CPDF_GeneralState15GetTransferFuncEv(%"class.fxcrt::RetainPtr.459"* nonnull sret %4, %class.CPDF_GeneralState* %23) #10
  %106 = getelementptr inbounds %"class.fxcrt::RetainPtr.459", %"class.fxcrt::RetainPtr.459"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %107 = load %class.CPDF_TransferFunc*, %class.CPDF_TransferFunc** %106, align 8
  %108 = icmp eq %class.CPDF_TransferFunc* %107, null
  br i1 %108, label %109, label %110

109:                                              ; preds = %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #10
  br label %195

110:                                              ; preds = %103
  %111 = bitcast %"class.fxcrt::RetainPtr.459"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #10
  call void @_ZNK17CPDF_GeneralState15GetTransferFuncEv(%"class.fxcrt::RetainPtr.459"* nonnull sret %5, %class.CPDF_GeneralState* %23) #10
  %112 = getelementptr inbounds %"class.fxcrt::RetainPtr.459", %"class.fxcrt::RetainPtr.459"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %class.CPDF_TransferFunc*, %class.CPDF_TransferFunc** %112, align 8
  %114 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %113, i64 0, i32 3
  %115 = load i8, i8* %114, align 8, !range !5
  %116 = icmp eq i8 %115, 0
  store %class.CPDF_TransferFunc* null, %class.CPDF_TransferFunc** %112, align 8
  %117 = icmp eq %class.CPDF_TransferFunc* %113, null
  br i1 %117, label %129, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %113, i64 0, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = add nsw i64 %120, -1
  store i64 %121, i64* %119, align 8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %129

123:                                              ; preds = %118
  %124 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %113, i64 0, i32 0
  %125 = bitcast %class.CPDF_TransferFunc* %113 to void (%"class.fxcrt::Retainable"*)***
  %126 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %126, i64 1
  %128 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %127, align 8
  call void %128(%"class.fxcrt::Retainable"* nonnull %124) #10
  br label %129

129:                                              ; preds = %123, %118, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #10
  %130 = load %class.CPDF_TransferFunc*, %class.CPDF_TransferFunc** %106, align 8
  store %class.CPDF_TransferFunc* null, %class.CPDF_TransferFunc** %106, align 8
  %131 = icmp eq %class.CPDF_TransferFunc* %130, null
  br i1 %131, label %143, label %132

132:                                              ; preds = %129
  %133 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %130, i64 0, i32 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = add nsw i64 %134, -1
  store i64 %135, i64* %133, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %143

137:                                              ; preds = %132
  %138 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %130, i64 0, i32 0
  %139 = bitcast %class.CPDF_TransferFunc* %130 to void (%"class.fxcrt::Retainable"*)***
  %140 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %140, i64 1
  %142 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %141, align 8
  call void %142(%"class.fxcrt::Retainable"* nonnull %138) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #10
  br i1 %116, label %144, label %195

143:                                              ; preds = %129, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #10
  br i1 %116, label %144, label %195

144:                                              ; preds = %137, %143
  %145 = bitcast %"class.fxcrt::RetainPtr.493"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #10
  %146 = bitcast %"class.fxcrt::RetainPtr.459"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #10
  call void @_ZNK17CPDF_GeneralState15GetTransferFuncEv(%"class.fxcrt::RetainPtr.459"* nonnull sret %7, %class.CPDF_GeneralState* %23) #10
  call void @_ZN16CPDF_ImageLoader14TranslateImageERKN5fxcrt9RetainPtrI17CPDF_TransferFuncEE(%"class.fxcrt::RetainPtr.493"* nonnull sret %6, %class.CPDF_ImageLoader* %16, %"class.fxcrt::RetainPtr.459"* nonnull dereferenceable(8) %7) #10
  %147 = getelementptr inbounds %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.fxcrt::RetainPtr.493"* %6 to i64*
  %149 = load i64, i64* %148, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %147, align 8
  %150 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %29, align 8
  %151 = bitcast %"class.fxcrt::RetainPtr.493"* %28 to i64*
  store i64 %149, i64* %151, align 8
  %152 = icmp eq %class.CFX_DIBBase* %150, null
  br i1 %152, label %153, label %154

153:                                              ; preds = %144
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %147, align 8
  br label %179

154:                                              ; preds = %144
  %155 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %150, i64 0, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = add nsw i64 %156, -1
  store i64 %157, i64* %155, align 8
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %160, label %159

159:                                              ; preds = %154
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %147, align 8
  br label %179

160:                                              ; preds = %154
  %161 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %150, i64 0, i32 0
  %162 = bitcast %class.CFX_DIBBase* %150 to void (%"class.fxcrt::Retainable"*)***
  %163 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %162, align 8
  %164 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %163, i64 1
  %165 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %164, align 8
  call void %165(%"class.fxcrt::Retainable"* nonnull %161) #10
  %166 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %147, align 8
  %167 = bitcast %class.CFX_DIBBase* %166 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %147, align 8
  %168 = icmp eq %class.CFX_DIBBase* %166, null
  br i1 %168, label %179, label %169

169:                                              ; preds = %160
  %170 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %166, i64 0, i32 0, i32 1
  %171 = load i64, i64* %170, align 8
  %172 = add nsw i64 %171, -1
  store i64 %172, i64* %170, align 8
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %179

174:                                              ; preds = %169
  %175 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %166, i64 0, i32 0
  %176 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %167, align 8
  %177 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %176, i64 1
  %178 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %177, align 8
  call void %178(%"class.fxcrt::Retainable"* nonnull %175) #10
  br label %179

179:                                              ; preds = %159, %153, %160, %169, %174
  %180 = getelementptr inbounds %"class.fxcrt::RetainPtr.459", %"class.fxcrt::RetainPtr.459"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %class.CPDF_TransferFunc*, %class.CPDF_TransferFunc** %180, align 8
  store %class.CPDF_TransferFunc* null, %class.CPDF_TransferFunc** %180, align 8
  %182 = icmp eq %class.CPDF_TransferFunc* %181, null
  br i1 %182, label %194, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %181, i64 0, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = add nsw i64 %185, -1
  store i64 %186, i64* %184, align 8
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %188, label %194

188:                                              ; preds = %183
  %189 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %181, i64 0, i32 0
  %190 = bitcast %class.CPDF_TransferFunc* %181 to void (%"class.fxcrt::Retainable"*)***
  %191 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %190, align 8
  %192 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %191, i64 1
  %193 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %192, align 8
  call void %193(%"class.fxcrt::Retainable"* nonnull %189) #10
  br label %194

194:                                              ; preds = %179, %183, %188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #10
  br label %195

195:                                              ; preds = %137, %109, %66, %143, %194
  %196 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 12
  store i32 0, i32* %196, align 4
  %197 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 14
  store i8 0, i8* %197, align 4
  %198 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %199 = load %class.CPDF_Pattern*, %class.CPDF_Pattern** %198, align 8
  store %class.CPDF_Pattern* null, %class.CPDF_Pattern** %198, align 8
  %200 = icmp eq %class.CPDF_Pattern* %199, null
  br i1 %200, label %212, label %201

201:                                              ; preds = %195
  %202 = getelementptr inbounds %class.CPDF_Pattern, %class.CPDF_Pattern* %199, i64 0, i32 0, i32 1
  %203 = load i64, i64* %202, align 8
  %204 = add nsw i64 %203, -1
  store i64 %204, i64* %202, align 8
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %212

206:                                              ; preds = %201
  %207 = getelementptr inbounds %class.CPDF_Pattern, %class.CPDF_Pattern* %199, i64 0, i32 0
  %208 = bitcast %class.CPDF_Pattern* %199 to void (%"class.fxcrt::Retainable"*)***
  %209 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %208, align 8
  %210 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %209, i64 1
  %211 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %210, align 8
  call void %211(%"class.fxcrt::Retainable"* nonnull %207) #10
  br label %212

212:                                              ; preds = %195, %201, %206
  %213 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %29, align 8
  %214 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %213, i64 0, i32 1
  %215 = load i16, i16* %214, align 8
  %216 = and i16 %215, 256
  %217 = icmp eq i16 %216, 0
  br i1 %217, label %257, label %218

218:                                              ; preds = %212
  %219 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %21, align 8
  %220 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %219, i64 0, i32 0, i32 0, i32 3
  %221 = call %class.CPDF_Color* @_ZNK15CPDF_ColorState12GetFillColorEv(%class.CPDF_ColorState* %220) #10
  %222 = icmp eq %class.CPDF_Color* %221, null
  br i1 %222, label %252, label %223

223:                                              ; preds = %218
  %224 = call zeroext i1 @_ZNK10CPDF_Color9IsPatternEv(%class.CPDF_Color* nonnull %221) #10
  br i1 %224, label %225, label %252

225:                                              ; preds = %223
  %226 = call %class.CPDF_Pattern* @_ZNK10CPDF_Color10GetPatternEv(%class.CPDF_Color* nonnull %221) #10
  %227 = icmp eq %class.CPDF_Pattern* %226, null
  br i1 %227, label %232, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %class.CPDF_Pattern, %class.CPDF_Pattern* %226, i64 0, i32 0, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = add nsw i64 %230, 1
  store i64 %231, i64* %229, align 8
  br label %232

232:                                              ; preds = %228, %225
  %233 = load %class.CPDF_Pattern*, %class.CPDF_Pattern** %198, align 8
  store %class.CPDF_Pattern* %226, %class.CPDF_Pattern** %198, align 8
  %234 = icmp eq %class.CPDF_Pattern* %233, null
  br i1 %234, label %248, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %class.CPDF_Pattern, %class.CPDF_Pattern* %233, i64 0, i32 0, i32 1
  %237 = load i64, i64* %236, align 8
  %238 = add nsw i64 %237, -1
  store i64 %238, i64* %236, align 8
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %240, label %246

240:                                              ; preds = %235
  %241 = getelementptr inbounds %class.CPDF_Pattern, %class.CPDF_Pattern* %233, i64 0, i32 0
  %242 = bitcast %class.CPDF_Pattern* %233 to void (%"class.fxcrt::Retainable"*)***
  %243 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %242, align 8
  %244 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %243, i64 1
  %245 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %244, align 8
  call void %245(%"class.fxcrt::Retainable"* nonnull %241) #10
  br label %246

246:                                              ; preds = %240, %235
  %247 = load %class.CPDF_Pattern*, %class.CPDF_Pattern** %198, align 8
  br label %248

248:                                              ; preds = %246, %232
  %249 = phi %class.CPDF_Pattern* [ %247, %246 ], [ %226, %232 ]
  %250 = icmp eq %class.CPDF_Pattern* %249, null
  br i1 %250, label %252, label %251

251:                                              ; preds = %248
  store i8 1, i8* %197, align 4
  br label %252

252:                                              ; preds = %248, %218, %251, %223
  %253 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %55, align 8
  %254 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %21, align 8
  %255 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %254, i64 0, i32 0
  %256 = call i32 @_ZNK17CPDF_RenderStatus19GetFillArgbInternalEP15CPDF_PageObjectb(%class.CPDF_RenderStatus* %253, %class.CPDF_PageObject* %255, i1 zeroext false) #10
  store i32 %256, i32* %196, align 4
  br label %308

257:                                              ; preds = %212
  %258 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %55, align 8
  %259 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %258, i64 0, i32 0, i32 0
  %260 = load i8, i8* %259, align 8
  %261 = icmp eq i8 %260, 1
  br i1 %261, label %262, label %308

262:                                              ; preds = %257
  %263 = bitcast %"class.fxcrt::RetainPtr.272"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #10
  %264 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %264, align 8
  call void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr.272"* nonnull sret %8, %class.CFX_DIBBase* %213, %struct.FX_RECT* null) #10
  %265 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %264, align 8
  %266 = icmp eq %class.CFX_DIBitmap* %265, null
  br i1 %266, label %307, label %267

267:                                              ; preds = %262
  %268 = call zeroext i1 @_ZN12CFX_DIBitmap17ConvertColorScaleEjj(%class.CFX_DIBitmap* nonnull %265, i32 16777215, i32 0) #10
  %269 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %264, align 8
  %270 = ptrtoint %class.CFX_DIBitmap* %269 to i64
  %271 = icmp eq %class.CFX_DIBitmap* %269, null
  br i1 %271, label %276, label %272

272:                                              ; preds = %267
  %273 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %269, i64 0, i32 0, i32 0, i32 1
  %274 = load i64, i64* %273, align 8
  %275 = add nsw i64 %274, 1
  store i64 %275, i64* %273, align 8
  br label %276

276:                                              ; preds = %267, %272
  %277 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %29, align 8
  %278 = bitcast %"class.fxcrt::RetainPtr.493"* %28 to i64*
  store i64 %270, i64* %278, align 8
  %279 = icmp eq %class.CFX_DIBBase* %277, null
  br i1 %279, label %292, label %280

280:                                              ; preds = %276
  %281 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %277, i64 0, i32 0, i32 1
  %282 = load i64, i64* %281, align 8
  %283 = add nsw i64 %282, -1
  store i64 %283, i64* %281, align 8
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %285, label %292

285:                                              ; preds = %280
  %286 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %277, i64 0, i32 0
  %287 = bitcast %class.CFX_DIBBase* %277 to void (%"class.fxcrt::Retainable"*)***
  %288 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %287, align 8
  %289 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %288, i64 1
  %290 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %289, align 8
  call void %290(%"class.fxcrt::Retainable"* nonnull %286) #10
  %291 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %264, align 8
  br label %292

292:                                              ; preds = %285, %280, %276
  %293 = phi %class.CFX_DIBitmap* [ %291, %285 ], [ %269, %280 ], [ %269, %276 ]
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %264, align 8
  %294 = icmp eq %class.CFX_DIBitmap* %293, null
  br i1 %294, label %306, label %295

295:                                              ; preds = %292
  %296 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %293, i64 0, i32 0, i32 0, i32 1
  %297 = load i64, i64* %296, align 8
  %298 = add nsw i64 %297, -1
  store i64 %298, i64* %296, align 8
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %306

300:                                              ; preds = %295
  %301 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %293, i64 0, i32 0, i32 0
  %302 = bitcast %class.CFX_DIBitmap* %293 to void (%"class.fxcrt::Retainable"*)***
  %303 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %302, align 8
  %304 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %303, i64 1
  %305 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %304, align 8
  call void %305(%"class.fxcrt::Retainable"* nonnull %301) #10
  br label %306

306:                                              ; preds = %292, %295, %300
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #10
  br label %308

307:                                              ; preds = %262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #10
  br label %478

308:                                              ; preds = %306, %257, %252
  %309 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %309) #10
  call void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions* nonnull %10) #10
  %310 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 13
  %311 = bitcast %struct.FXDIB_ResampleOptions* %310 to i32*
  %312 = load i32, i32* %9, align 4
  store i32 %312, i32* %311, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %309) #10
  %313 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %55, align 8
  %314 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %313, i64 0, i32 0, i32 2, i32 2
  %315 = load i8, i8* %314, align 1, !range !5
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %319, label %317

317:                                              ; preds = %308
  %318 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 13, i32 1
  store i8 1, i8* %318, align 1
  br label %319

319:                                              ; preds = %308, %317
  %320 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %313, i64 0, i32 5, i32 0
  %321 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %320, align 8
  %322 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %321, i64 0, i32 6
  %323 = load i8, i8* %322, align 8, !range !5
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %327, label %325

325:                                              ; preds = %319
  call void @_ZN18CPDF_ImageRenderer13HandleFiltersEv(%class.CPDF_ImageRenderer* %0)
  %326 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %55, align 8
  br label %327

327:                                              ; preds = %319, %325
  %328 = phi %class.CPDF_RenderStatus* [ %313, %319 ], [ %326, %325 ]
  %329 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %328, i64 0, i32 0, i32 2, i32 7
  %330 = load i8, i8* %329, align 1, !range !5
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %334, label %332

332:                                              ; preds = %327
  %333 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 13, i32 2
  store i8 1, i8* %333, align 2
  br label %357

334:                                              ; preds = %327
  %335 = bitcast %"class.fxcrt::RetainPtr.489"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %335) #10
  %336 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %21, align 8
  call void @_ZNK16CPDF_ImageObject8GetImageEv(%"class.fxcrt::RetainPtr.489"* nonnull sret %11, %class.CPDF_ImageObject* %336) #10
  %337 = getelementptr inbounds %"class.fxcrt::RetainPtr.489", %"class.fxcrt::RetainPtr.489"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %338 = load %class.CPDF_Image*, %class.CPDF_Image** %337, align 8
  %339 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %338, i64 0, i32 6
  %340 = load i8, i8* %339, align 2, !range !5
  %341 = icmp eq i8 %340, 0
  store %class.CPDF_Image* null, %class.CPDF_Image** %337, align 8
  %342 = icmp eq %class.CPDF_Image* %338, null
  br i1 %342, label %354, label %343

343:                                              ; preds = %334
  %344 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %338, i64 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = add nsw i64 %345, -1
  store i64 %346, i64* %344, align 8
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %348, label %354

348:                                              ; preds = %343
  %349 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %338, i64 0, i32 0
  %350 = bitcast %class.CPDF_Image* %338 to void (%"class.fxcrt::Retainable"*)***
  %351 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %350, align 8
  %352 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %351, i64 1
  %353 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %352, align 8
  call void %353(%"class.fxcrt::Retainable"* nonnull %349) #10
  br label %354

354:                                              ; preds = %334, %343, %348
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %335) #10
  br i1 %341, label %357, label %355

355:                                              ; preds = %354
  %356 = getelementptr inbounds %struct.FXDIB_ResampleOptions, %struct.FXDIB_ResampleOptions* %310, i64 0, i32 0
  store i8 1, i8* %356, align 8
  br label %357

357:                                              ; preds = %354, %355, %332
  %358 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 6, i32 3, i32 0, i32 0, i32 0, i32 0
  %359 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %358, align 8
  %360 = icmp eq %class.CFX_DIBBase* %359, null
  br i1 %360, label %363, label %361

361:                                              ; preds = %357
  %362 = call zeroext i1 @_ZN18CPDF_ImageRenderer15DrawMaskedImageEv(%class.CPDF_ImageRenderer* %0)
  br label %478

363:                                              ; preds = %357
  %364 = load i8, i8* %197, align 4, !range !5
  %365 = icmp eq i8 %364, 0
  br i1 %365, label %368, label %366

366:                                              ; preds = %363
  %367 = call zeroext i1 @_ZN18CPDF_ImageRenderer16DrawPatternImageEv(%class.CPDF_ImageRenderer* %0)
  br label %478

368:                                              ; preds = %363
  %369 = load i32, i32* %27, align 4
  %370 = icmp eq i32 %369, 255
  br i1 %370, label %371, label %389

371:                                              ; preds = %368
  %372 = getelementptr inbounds %class.CPDF_GeneralState, %class.CPDF_GeneralState* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = load %"class.CPDF_GeneralState::StateData"*, %"class.CPDF_GeneralState::StateData"** %372, align 8
  %374 = icmp eq %"class.CPDF_GeneralState::StateData"* %373, null
  br i1 %374, label %389, label %375

375:                                              ; preds = %371
  %376 = call zeroext i1 @_ZNK17CPDF_GeneralState9GetFillOPEv(%class.CPDF_GeneralState* %23) #10
  br i1 %376, label %377, label %389

377:                                              ; preds = %375
  %378 = call i32 @_ZNK17CPDF_GeneralState9GetOPModeEv(%class.CPDF_GeneralState* %23) #10
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %389

380:                                              ; preds = %377
  %381 = call i32 @_ZNK17CPDF_GeneralState12GetBlendTypeEv(%class.CPDF_GeneralState* %23) #10
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %389

383:                                              ; preds = %380
  %384 = call float @_ZNK17CPDF_GeneralState14GetStrokeAlphaEv(%class.CPDF_GeneralState* %23) #10
  %385 = fcmp une float %384, 1.000000e+00
  br i1 %385, label %389, label %386

386:                                              ; preds = %383
  %387 = call float @_ZNK17CPDF_GeneralState12GetFillAlphaEv(%class.CPDF_GeneralState* %23) #10
  %388 = fcmp une float %387, 1.000000e+00
  br i1 %388, label %389, label %391

389:                                              ; preds = %371, %380, %377, %368, %386, %383, %375
  %390 = call zeroext i1 @_ZN18CPDF_ImageRenderer12StartDIBBaseEv(%class.CPDF_ImageRenderer* %0)
  br label %478

391:                                              ; preds = %386
  %392 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %55, align 8
  %393 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %392, i64 0, i32 4, i32 0
  %394 = load %class.CPDF_RenderContext*, %class.CPDF_RenderContext** %393, align 8
  %395 = getelementptr inbounds %class.CPDF_RenderContext, %class.CPDF_RenderContext* %394, i64 0, i32 2, i32 0
  %396 = load %class.CPDF_PageRenderCache*, %class.CPDF_PageRenderCache** %395, align 8
  %397 = icmp eq %class.CPDF_PageRenderCache* %396, null
  br i1 %397, label %398, label %418

398:                                              ; preds = %391
  %399 = bitcast %"class.fxcrt::RetainPtr.489"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %399) #10
  %400 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %21, align 8
  call void @_ZNK16CPDF_ImageObject8GetImageEv(%"class.fxcrt::RetainPtr.489"* nonnull sret %12, %class.CPDF_ImageObject* %400) #10
  %401 = getelementptr inbounds %"class.fxcrt::RetainPtr.489", %"class.fxcrt::RetainPtr.489"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %402 = load %class.CPDF_Image*, %class.CPDF_Image** %401, align 8
  %403 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %402, i64 0, i32 7, i32 0
  %404 = load %class.CPDF_Document*, %class.CPDF_Document** %403, align 8
  store %class.CPDF_Image* null, %class.CPDF_Image** %401, align 8
  %405 = icmp eq %class.CPDF_Image* %402, null
  br i1 %405, label %417, label %406

406:                                              ; preds = %398
  %407 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %402, i64 0, i32 0, i32 1
  %408 = load i64, i64* %407, align 8
  %409 = add nsw i64 %408, -1
  store i64 %409, i64* %407, align 8
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %411, label %417

411:                                              ; preds = %406
  %412 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %402, i64 0, i32 0
  %413 = bitcast %class.CPDF_Image* %402 to void (%"class.fxcrt::Retainable"*)***
  %414 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %413, align 8
  %415 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %414, i64 1
  %416 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %415, align 8
  call void %416(%"class.fxcrt::Retainable"* nonnull %412) #10
  br label %417

417:                                              ; preds = %411, %406, %398
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %399) #10
  br label %426

418:                                              ; preds = %391
  %419 = getelementptr inbounds %class.CPDF_PageRenderCache, %class.CPDF_PageRenderCache* %396, i64 0, i32 1, i32 0
  %420 = load %class.CPDF_Page*, %class.CPDF_Page** %419, align 8
  %421 = call %class.CPDF_Document* @_ZNK9CPDF_Page11GetDocumentEv(%class.CPDF_Page* %420) #10
  %422 = icmp eq %class.CPDF_Page* %420, null
  br i1 %422, label %426, label %423

423:                                              ; preds = %418
  %424 = getelementptr inbounds %class.CPDF_Page, %class.CPDF_Page* %420, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0
  %425 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %424, align 8
  br label %426

426:                                              ; preds = %417, %418, %423
  %427 = phi %class.CPDF_Document* [ %421, %423 ], [ %421, %418 ], [ %404, %417 ]
  %428 = phi %class.CPDF_Dictionary* [ %425, %423 ], [ null, %418 ], [ null, %417 ]
  %429 = bitcast %"class.fxcrt::RetainPtr.489"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %429) #10
  %430 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %21, align 8
  call void @_ZNK16CPDF_ImageObject8GetImageEv(%"class.fxcrt::RetainPtr.489"* nonnull sret %13, %class.CPDF_ImageObject* %430) #10
  %431 = getelementptr inbounds %"class.fxcrt::RetainPtr.489", %"class.fxcrt::RetainPtr.489"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %432 = load %class.CPDF_Image*, %class.CPDF_Image** %431, align 8
  %433 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %432, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %434 = load %class.CPDF_Stream*, %class.CPDF_Stream** %433, align 8
  %435 = call %class.CPDF_Dictionary* @_ZN11CPDF_Stream7GetDictEv(%class.CPDF_Stream* %434) #10
  %436 = bitcast %"class.fxcrt::ByteString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %436) #10
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0)) #10
  %437 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %435, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %14) #10
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %436) #10
  %438 = load %class.CPDF_Image*, %class.CPDF_Image** %431, align 8
  store %class.CPDF_Image* null, %class.CPDF_Image** %431, align 8
  %439 = icmp eq %class.CPDF_Image* %438, null
  br i1 %439, label %451, label %440

440:                                              ; preds = %426
  %441 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %438, i64 0, i32 0, i32 1
  %442 = load i64, i64* %441, align 8
  %443 = add nsw i64 %442, -1
  store i64 %443, i64* %441, align 8
  %444 = icmp eq i64 %443, 0
  br i1 %444, label %445, label %451

445:                                              ; preds = %440
  %446 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %438, i64 0, i32 0
  %447 = bitcast %class.CPDF_Image* %438 to void (%"class.fxcrt::Retainable"*)***
  %448 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %447, align 8
  %449 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %448, i64 1
  %450 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %449, align 8
  call void %450(%"class.fxcrt::Retainable"* nonnull %446) #10
  br label %451

451:                                              ; preds = %426, %440, %445
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %429) #10
  %452 = call %class.CPDF_DocPageData* @_ZN16CPDF_DocPageData12FromDocumentEPK13CPDF_Document(%class.CPDF_Document* %427) #10
  %453 = bitcast %"class.fxcrt::RetainPtr.344"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %453) #10
  %454 = getelementptr inbounds %"class.fxcrt::RetainPtr.344", %"class.fxcrt::RetainPtr.344"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_ColorSpace* inttoptr (i64 -6148914691236517206 to %class.CPDF_ColorSpace*), %class.CPDF_ColorSpace** %454, align 8
  call void @_ZN16CPDF_DocPageData13GetColorSpaceEPK11CPDF_ObjectPK15CPDF_Dictionary(%"class.fxcrt::RetainPtr.344"* nonnull sret %15, %class.CPDF_DocPageData* %452, %class.CPDF_Object* %437, %class.CPDF_Dictionary* %428) #10
  %455 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %454, align 8
  %456 = icmp eq %class.CPDF_ColorSpace* %455, null
  br i1 %456, label %462, label %457

457:                                              ; preds = %451
  %458 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %455, i64 0, i32 4
  %459 = load i32, i32* %458, align 8
  switch i32 %459, label %462 [
    i32 9, label %460
    i32 8, label %460
    i32 3, label %460
  ]

460:                                              ; preds = %457, %457, %457
  %461 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 11
  store i32 4, i32* %461, align 8
  br label %462

462:                                              ; preds = %451, %460, %457
  %463 = call zeroext i1 @_ZN18CPDF_ImageRenderer12StartDIBBaseEv(%class.CPDF_ImageRenderer* %0)
  %464 = load %class.CPDF_ColorSpace*, %class.CPDF_ColorSpace** %454, align 8
  store %class.CPDF_ColorSpace* null, %class.CPDF_ColorSpace** %454, align 8
  %465 = icmp eq %class.CPDF_ColorSpace* %464, null
  br i1 %465, label %477, label %466

466:                                              ; preds = %462
  %467 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %464, i64 0, i32 0, i32 1
  %468 = load i64, i64* %467, align 8
  %469 = add nsw i64 %468, -1
  store i64 %469, i64* %467, align 8
  %470 = icmp eq i64 %469, 0
  br i1 %470, label %471, label %477

471:                                              ; preds = %466
  %472 = getelementptr inbounds %class.CPDF_ColorSpace, %class.CPDF_ColorSpace* %464, i64 0, i32 0
  %473 = bitcast %class.CPDF_ColorSpace* %464 to void (%"class.fxcrt::Retainable"*)***
  %474 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %473, align 8
  %475 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %474, i64 1
  %476 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %475, align 8
  call void %476(%"class.fxcrt::Retainable"* nonnull %472) #10
  br label %477

477:                                              ; preds = %462, %466, %471
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %453) #10
  br label %478

478:                                              ; preds = %1, %64, %361, %366, %389, %477, %307
  %479 = phi i1 [ false, %1 ], [ %362, %361 ], [ %367, %366 ], [ %390, %389 ], [ %463, %477 ], [ false, %307 ], [ %65, %64 ]
  ret i1 %479
}

declare i32 @FXSYS_roundf(float) local_unnamed_addr #1

declare float @_ZNK17CPDF_GeneralState12GetFillAlphaEv(%class.CPDF_GeneralState*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(40) %class.CPDF_RenderOptions* @_ZNK18CPDF_ImageRenderer16GetRenderOptionsEv(%class.CPDF_ImageRenderer* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %3 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %2, align 8
  %4 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %3, i64 0, i32 0
  ret %class.CPDF_RenderOptions* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ImageRenderer16StartBitmapAlphaEv(%class.CPDF_ImageRenderer*) local_unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca %class.CFX_PathData, align 8
  %5 = alloca i16, align 2
  %6 = alloca %"class.fxcrt::RetainPtr.493", align 8
  %7 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %11 = alloca %"class.fxcrt::RetainPtr.493", align 8
  %12 = alloca %"class.pdfium::Optional", align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %18 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %17, align 8
  %19 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %18, i64 0, i32 1
  %20 = load i16, i16* %19, align 8
  %21 = and i16 %20, 768
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %41

23:                                               ; preds = %1
  %24 = bitcast i16* %5 to %struct.CFX_FillRenderOptions*
  %25 = bitcast %class.CFX_PathData* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #10
  %26 = bitcast %class.CFX_PathData* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %4) #10
  call void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData* nonnull %4, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00) #10
  %27 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5
  call void @_ZN12CFX_PathData9TransformERK10CFX_Matrix(%class.CFX_PathData* nonnull %4, %class.CFX_Matrix* dereferenceable(24) %27) #10
  %28 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 10
  %29 = load i32, i32* %28, align 4
  %30 = shl i32 %29, 16
  %31 = shl i32 %29, 8
  %32 = or i32 %29, %31
  %33 = or i32 %32, %30
  %34 = or i32 %33, -16777216
  %35 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %36 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %35, align 8
  %37 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %36, i64 0, i32 5, i32 0
  %38 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %37, align 8
  %39 = bitcast i16* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %39) #10
  store i16 2, i16* %5, align 2
  %40 = call zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice* %38, %class.CFX_PathData* nonnull %4, %class.CFX_Matrix* null, %class.CFX_GraphStateData* null, i32 %34, i32 0, %struct.CFX_FillRenderOptions* nonnull dereferenceable(2) %24) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %39) #10
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #10
  br label %226

41:                                               ; preds = %1
  %42 = bitcast %"class.fxcrt::RetainPtr.493"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #10
  %43 = getelementptr inbounds %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.fxcrt::RetainPtr.493"* %6 to i64*
  store i64 0, i64* %44, align 8
  %45 = and i16 %20, 256
  %46 = icmp eq i16 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %41
  %48 = icmp eq %class.CFX_DIBBase* %18, null
  br i1 %48, label %93, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %18, i64 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = add nsw i64 %51, 1
  store i64 %52, i64* %50, align 8
  store %class.CFX_DIBBase* %18, %class.CFX_DIBBase** %43, align 8
  br label %93

53:                                               ; preds = %41
  %54 = bitcast %"class.fxcrt::RetainPtr.272"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #10
  call void @_ZNK11CFX_DIBBase14CloneAlphaMaskEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %7, %class.CFX_DIBBase* %18) #10
  %55 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %55, align 8
  %57 = ptrtoint %class.CFX_DIBitmap* %56 to i64
  %58 = icmp eq %class.CFX_DIBitmap* %56, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %56, i64 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = add nsw i64 %61, 1
  store i64 %62, i64* %60, align 8
  br label %63

63:                                               ; preds = %53, %59
  %64 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %43, align 8
  store i64 %57, i64* %44, align 8
  %65 = icmp eq %class.CFX_DIBBase* %64, null
  br i1 %65, label %78, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %64, i64 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = add nsw i64 %68, -1
  store i64 %69, i64* %67, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %78

71:                                               ; preds = %66
  %72 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %64, i64 0, i32 0
  %73 = bitcast %class.CFX_DIBBase* %64 to void (%"class.fxcrt::Retainable"*)***
  %74 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %74, i64 1
  %76 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %75, align 8
  call void %76(%"class.fxcrt::Retainable"* nonnull %72) #10
  %77 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %55, align 8
  br label %78

78:                                               ; preds = %71, %66, %63
  %79 = phi %class.CFX_DIBitmap* [ %77, %71 ], [ %56, %66 ], [ %56, %63 ]
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %55, align 8
  %80 = icmp eq %class.CFX_DIBitmap* %79, null
  br i1 %80, label %92, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %79, i64 0, i32 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = add nsw i64 %83, -1
  store i64 %84, i64* %82, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %81
  %87 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %79, i64 0, i32 0, i32 0
  %88 = bitcast %class.CFX_DIBitmap* %79 to void (%"class.fxcrt::Retainable"*)***
  %89 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %89, i64 1
  %91 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %90, align 8
  call void %91(%"class.fxcrt::Retainable"* nonnull %87) #10
  br label %92

92:                                               ; preds = %78, %81, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #10
  br label %93

93:                                               ; preds = %49, %47, %92
  %94 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5
  %95 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5, i32 1
  %96 = load float, float* %95, align 4
  %97 = call float @llvm.fabs.f32(float %96) #10
  %98 = fcmp ult float %97, 5.000000e-01
  br i1 %98, label %99, label %104

99:                                               ; preds = %93
  %100 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5, i32 2
  %101 = load float, float* %100, align 8
  %102 = call float @llvm.fabs.f32(float %101) #10
  %103 = fcmp ult float %102, 5.000000e-01
  br i1 %103, label %164, label %104

104:                                              ; preds = %99, %93
  %105 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %105) #10
  store i32 -1431655766, i32* %8, align 4
  %106 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #10
  store i32 -1431655766, i32* %9, align 4
  %107 = bitcast %"class.fxcrt::RetainPtr.272"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #10
  %108 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %108, align 8
  %109 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %43, align 8
  call void @_ZN11CFX_DIBBase11TransformToERK10CFX_MatrixPiS3_(%"class.fxcrt::RetainPtr.272"* nonnull sret %10, %class.CFX_DIBBase* %109, %class.CFX_Matrix* dereferenceable(24) %94, i32* nonnull %8, i32* nonnull %9) #10
  %110 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %108, align 8
  %111 = icmp eq %class.CFX_DIBitmap* %110, null
  br i1 %111, label %112, label %113

112:                                              ; preds = %104
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %108, align 8
  br label %162

113:                                              ; preds = %104
  %114 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %115 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %114, align 8
  %116 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %115, i64 0, i32 5, i32 0
  %117 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %116, align 8
  %118 = bitcast %"class.fxcrt::RetainPtr.493"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #10
  %119 = ptrtoint %class.CFX_DIBitmap* %110 to i64
  %120 = bitcast %"class.fxcrt::RetainPtr.493"* %11 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %110, i64 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = add nsw i64 %122, 1
  store i64 %123, i64* %121, align 8
  %124 = load i32, i32* %8, align 4
  %125 = load i32, i32* %9, align 4
  %126 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 10
  %127 = load i32, i32* %126, align 4
  %128 = shl i32 %127, 16
  %129 = shl i32 %127, 8
  %130 = or i32 %127, %129
  %131 = or i32 %130, %128
  %132 = or i32 %131, -16777216
  %133 = call zeroext i1 @_ZN16CFX_RenderDevice10SetBitMaskERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiij(%class.CFX_RenderDevice* %117, %"class.fxcrt::RetainPtr.493"* nonnull dereferenceable(8) %11, i32 %124, i32 %125, i32 %132) #10
  %134 = getelementptr inbounds %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %135 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %134, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %134, align 8
  %136 = icmp eq %class.CFX_DIBBase* %135, null
  br i1 %136, label %148, label %137

137:                                              ; preds = %113
  %138 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %135, i64 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = add nsw i64 %139, -1
  store i64 %140, i64* %138, align 8
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %148

142:                                              ; preds = %137
  %143 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %135, i64 0, i32 0
  %144 = bitcast %class.CFX_DIBBase* %135 to void (%"class.fxcrt::Retainable"*)***
  %145 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %145, i64 1
  %147 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %146, align 8
  call void %147(%"class.fxcrt::Retainable"* nonnull %143) #10
  br label %148

148:                                              ; preds = %142, %137, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #10
  %149 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %108, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %108, align 8
  %150 = icmp eq %class.CFX_DIBitmap* %149, null
  br i1 %150, label %162, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %149, i64 0, i32 0, i32 0, i32 1
  %153 = load i64, i64* %152, align 8
  %154 = add nsw i64 %153, -1
  store i64 %154, i64* %152, align 8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %162

156:                                              ; preds = %151
  %157 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %149, i64 0, i32 0, i32 0
  %158 = bitcast %class.CFX_DIBitmap* %149 to void (%"class.fxcrt::Retainable"*)***
  %159 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %159, i64 1
  %161 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %160, align 8
  call void %161(%"class.fxcrt::Retainable"* nonnull %157) #10
  br label %162

162:                                              ; preds = %112, %148, %151, %156
  %163 = phi i1 [ true, %112 ], [ false, %148 ], [ false, %151 ], [ false, %156 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %105) #10
  br label %210

164:                                              ; preds = %99
  %165 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %165) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %165, i8 -86, i64 20, i1 false)
  %166 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_FloatRect*
  %167 = bitcast { i64, i64 }* %3 to %struct.FX_RECT*
  %168 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %168) #10, !noalias !6
  %169 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix11GetUnitRectEv(%class.CFX_Matrix* %94) #10, !noalias !6
  %170 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %171 = extractvalue { <2 x float>, <2 x float> } %169, 0
  store <2 x float> %171, <2 x float>* %170, align 8, !noalias !6
  %172 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %173 = extractvalue { <2 x float>, <2 x float> } %169, 1
  store <2 x float> %173, <2 x float>* %172, align 8, !noalias !6
  %174 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #10, !noalias !6
  %175 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %176 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %166) #10, !noalias !6
  %177 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %178 = extractvalue { i64, i64 } %176, 0
  store i64 %178, i64* %177, align 8, !noalias !6
  %179 = extractvalue { i64, i64 } %176, 1
  store i64 %179, i64* %175, align 8, !noalias !6
  %180 = call zeroext i1 @_ZNK7FX_RECT5ValidEv(%struct.FX_RECT* nonnull %167) #10, !noalias !6
  br i1 %180, label %182, label %181

181:                                              ; preds = %164
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %165, i8 0, i64 20, i1 false) #10, !alias.scope !6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #10, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168) #10, !noalias !6
  br label %209

182:                                              ; preds = %164
  store i8 1, i8* %165, align 4, !alias.scope !6
  %183 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %184 = bitcast %struct.FX_RECT* %183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %184, i8* nonnull align 8 %174, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #10, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168) #10, !noalias !6
  %185 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %185) #10
  store i32 -1431655766, i32* %13, align 4
  %186 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %186) #10
  store i32 -1431655766, i32* %14, align 4
  %187 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %187) #10
  store i32 -1431655766, i32* %15, align 4
  %188 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %188) #10
  store i32 -1431655766, i32* %16, align 4
  %189 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %190 = call zeroext i1 @_ZNK18CPDF_ImageRenderer25GetDimensionsFromUnitRectERK7FX_RECTPiS3_S3_S3_(%class.CPDF_ImageRenderer* %0, %struct.FX_RECT* dereferenceable(16) %189, i32* nonnull %13, i32* nonnull %14, i32* nonnull %15, i32* nonnull %16)
  br i1 %190, label %191, label %208

191:                                              ; preds = %182
  %192 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %193 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %192, align 8
  %194 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %193, i64 0, i32 5, i32 0
  %195 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %194, align 8
  %196 = load i32, i32* %13, align 4
  %197 = load i32, i32* %14, align 4
  %198 = load i32, i32* %15, align 4
  %199 = load i32, i32* %16, align 4
  %200 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 10
  %201 = load i32, i32* %200, align 4
  %202 = shl i32 %201, 16
  %203 = shl i32 %201, 8
  %204 = or i32 %201, %203
  %205 = or i32 %204, %202
  %206 = or i32 %205, -16777216
  %207 = call zeroext i1 @_ZN16CFX_RenderDevice14StretchBitMaskERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiij(%class.CFX_RenderDevice* %195, %"class.fxcrt::RetainPtr.493"* nonnull dereferenceable(8) %6, i32 %196, i32 %197, i32 %198, i32 %199, i32 %206) #10
  br label %208

208:                                              ; preds = %182, %191
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %188) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %187) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %186) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %185) #10
  br label %209

209:                                              ; preds = %181, %208
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %165) #10
  br label %210

210:                                              ; preds = %209, %162
  %211 = phi i1 [ %163, %162 ], [ false, %209 ]
  %212 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %43, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %43, align 8
  %213 = icmp eq %class.CFX_DIBBase* %212, null
  br i1 %213, label %225, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %212, i64 0, i32 0, i32 1
  %216 = load i64, i64* %215, align 8
  %217 = add nsw i64 %216, -1
  store i64 %217, i64* %215, align 8
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %219, label %225

219:                                              ; preds = %214
  %220 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %212, i64 0, i32 0
  %221 = bitcast %class.CFX_DIBBase* %212 to void (%"class.fxcrt::Retainable"*)***
  %222 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %221, align 8
  %223 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %222, i64 1
  %224 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %223, align 8
  call void %224(%"class.fxcrt::Retainable"* nonnull %220) #10
  br label %225

225:                                              ; preds = %210, %214, %219
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #10
  br label %226

226:                                              ; preds = %225, %23
  %227 = phi i1 [ false, %23 ], [ %211, %225 ]
  ret i1 %227
}

declare %class.CPDF_Object* @_ZNK17CPDF_GeneralState5GetTREv(%class.CPDF_GeneralState*) local_unnamed_addr #1

declare void @_ZNK17CPDF_GeneralState15GetTransferFuncEv(%"class.fxcrt::RetainPtr.459"* sret, %class.CPDF_GeneralState*) local_unnamed_addr #1

declare void @_ZN17CPDF_GeneralState15SetTransferFuncERKN5fxcrt9RetainPtrI17CPDF_TransferFuncEE(%class.CPDF_GeneralState*, %"class.fxcrt::RetainPtr.459"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK17CPDF_RenderStatus15GetTransferFuncEPK11CPDF_Object(%"class.fxcrt::RetainPtr.459"* sret, %class.CPDF_RenderStatus*, %class.CPDF_Object*) local_unnamed_addr #1

declare void @_ZN16CPDF_ImageLoader14TranslateImageERKN5fxcrt9RetainPtrI17CPDF_TransferFuncEE(%"class.fxcrt::RetainPtr.493"* sret, %class.CPDF_ImageLoader*, %"class.fxcrt::RetainPtr.459"* dereferenceable(8)) local_unnamed_addr #1

declare %class.CPDF_Color* @_ZNK15CPDF_ColorState12GetFillColorEv(%class.CPDF_ColorState*) local_unnamed_addr #1

declare zeroext i1 @_ZNK10CPDF_Color9IsPatternEv(%class.CPDF_Color*) local_unnamed_addr #1

declare %class.CPDF_Pattern* @_ZNK10CPDF_Color10GetPatternEv(%class.CPDF_Color*) local_unnamed_addr #1

declare void @_ZNK11CFX_DIBBase5CloneEPK7FX_RECT(%"class.fxcrt::RetainPtr.272"* sret, %class.CFX_DIBBase*, %struct.FX_RECT*) local_unnamed_addr #1

declare zeroext i1 @_ZN12CFX_DIBitmap17ConvertColorScaleEjj(%class.CFX_DIBitmap*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18CPDF_ImageRenderer13HandleFiltersEv(%class.CPDF_ImageRenderer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.pdfium::Optional.624", align 8
  %3 = alloca %"class.fxcrt::RetainPtr.489", align 8
  %4 = getelementptr inbounds %"class.pdfium::Optional.624", %"class.pdfium::Optional.624"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 32, i1 false)
  %5 = bitcast %"class.fxcrt::RetainPtr.489"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 1, i32 0
  %7 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %6, align 8
  call void @_ZNK16CPDF_ImageObject8GetImageEv(%"class.fxcrt::RetainPtr.489"* nonnull sret %3, %class.CPDF_ImageObject* %7) #10
  %8 = getelementptr inbounds %"class.fxcrt::RetainPtr.489", %"class.fxcrt::RetainPtr.489"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_Image*, %class.CPDF_Image** %8, align 8
  %10 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %9, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CPDF_Stream*, %class.CPDF_Stream** %10, align 8
  %12 = call %class.CPDF_Dictionary* @_ZN11CPDF_Stream7GetDictEv(%class.CPDF_Stream* %11) #10
  call void @_Z15GetDecoderArrayPK15CPDF_Dictionary(%"class.pdfium::Optional.624"* nonnull sret %2, %class.CPDF_Dictionary* %12) #10
  %13 = load %class.CPDF_Image*, %class.CPDF_Image** %8, align 8
  store %class.CPDF_Image* null, %class.CPDF_Image** %8, align 8
  %14 = icmp eq %class.CPDF_Image* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %13, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add nsw i64 %17, -1
  store i64 %18, i64* %16, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %13, i64 0, i32 0
  %22 = bitcast %class.CPDF_Image* %13 to void (%"class.fxcrt::Retainable"*)***
  %23 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %23, i64 1
  %25 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %24, align 8
  call void %25(%"class.fxcrt::Retainable"* nonnull %21) #10
  br label %26

26:                                               ; preds = %1, %15, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %27 = load i8, i8* %4, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %69, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.pdfium::Optional.624", %"class.pdfium::Optional.624"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::pair.631"*, %"struct.std::__1::pair.631"** %30, align 8
  %32 = getelementptr inbounds %"class.pdfium::Optional.624", %"class.pdfium::Optional.624"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %33 = load %"struct.std::__1::pair.631"*, %"struct.std::__1::pair.631"** %32, align 8
  %34 = icmp eq %"struct.std::__1::pair.631"* %31, %33
  br i1 %34, label %46, label %37

35:                                               ; preds = %41
  %36 = icmp eq %"struct.std::__1::pair.631"* %43, %33
  br i1 %36, label %46, label %37

37:                                               ; preds = %29, %35
  %38 = phi %"struct.std::__1::pair.631"* [ %43, %35 ], [ %31, %29 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair.631", %"struct.std::__1::pair.631"* %38, i64 0, i32 0
  %40 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0)) #10
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)) #10
  %43 = getelementptr inbounds %"struct.std::__1::pair.631", %"struct.std::__1::pair.631"* %38, i64 1
  br i1 %42, label %44, label %35

44:                                               ; preds = %37, %41
  %45 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 13, i32 3
  store i8 1, i8* %45, align 1
  br label %46

46:                                               ; preds = %35, %29, %44
  %47 = load i8, i8* %4, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %69, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.pdfium::Optional.624", %"class.pdfium::Optional.624"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.std::__1::vector.629", %"class.std::__1::vector.629"* %50, i64 0, i32 0, i32 0
  %52 = load %"struct.std::__1::pair.631"*, %"struct.std::__1::pair.631"** %51, align 8
  %53 = icmp eq %"struct.std::__1::pair.631"* %52, null
  br i1 %53, label %69, label %54

54:                                               ; preds = %49
  %55 = bitcast %"struct.std::__1::pair.631"* %52 to i8*
  %56 = getelementptr inbounds %"class.pdfium::Optional.624", %"class.pdfium::Optional.624"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %57 = load %"struct.std::__1::pair.631"*, %"struct.std::__1::pair.631"** %56, align 8
  %58 = icmp eq %"struct.std::__1::pair.631"* %57, %52
  br i1 %58, label %67, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::pair.631"* [ %61, %59 ], [ %57, %54 ]
  %61 = getelementptr inbounds %"struct.std::__1::pair.631", %"struct.std::__1::pair.631"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.std::__1::pair.631", %"struct.std::__1::pair.631"* %61, i64 0, i32 0
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %62) #10
  %63 = icmp eq %"struct.std::__1::pair.631"* %61, %52
  br i1 %63, label %64, label %59

64:                                               ; preds = %59
  %65 = bitcast %"class.std::__1::vector.629"* %50 to i8**
  %66 = load i8*, i8** %65, align 8
  br label %67

67:                                               ; preds = %64, %54
  %68 = phi i8* [ %66, %64 ], [ %55, %54 ]
  store %"struct.std::__1::pair.631"* %52, %"struct.std::__1::pair.631"** %56, align 8
  call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %26, %46, %49, %67
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #10
  ret void
}

declare void @_ZNK16CPDF_ImageObject8GetImageEv(%"class.fxcrt::RetainPtr.489"* sret, %class.CPDF_ImageObject*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ImageRenderer15DrawMaskedImageEv(%class.CPDF_ImageRenderer*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.FX_RECT*
  %6 = alloca %class.CFX_Matrix, align 4
  %7 = alloca %class.CFX_DefaultRenderDevice, align 8
  %8 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %9 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %10 = alloca %class.CPDF_RenderStatus, align 8
  %11 = alloca %class.CPDF_ImageRenderer, align 8
  %12 = alloca %class.CFX_DefaultRenderDevice, align 8
  %13 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %14 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %15 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %16 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %17 = alloca %"class.fxcrt::RetainPtr.493", align 8
  %18 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %19 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %20 = alloca %"class.fxcrt::RetainPtr.493", align 8
  %21 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %22 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %23 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %22, align 8
  %24 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %23, i64 0, i32 15
  %25 = load i8, i8* %24, align 1, !range !5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %1
  %28 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %23, i64 0, i32 5, i32 0
  %29 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %28, align 8
  %30 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %29, i64 0, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = trunc i32 %31 to i8
  %33 = icmp sgt i8 %32, -1
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 16
  store i8 0, i8* %35, align 2
  br label %396

36:                                               ; preds = %1, %27
  %37 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #10
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %39 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39)
  %40 = bitcast { i64, i64 }* %2 to %struct.FX_RECT*
  %41 = bitcast { <2 x float>, <2 x float> }* %3 to %class.CFX_FloatRect*
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %43 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #10
  %44 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5
  %45 = tail call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix11GetUnitRectEv(%class.CFX_Matrix* %44) #10
  %46 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %47 = extractvalue { <2 x float>, <2 x float> } %45, 0
  store <2 x float> %47, <2 x float>* %46, align 8
  %48 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %49 = extractvalue { <2 x float>, <2 x float> } %45, 1
  store <2 x float> %49, <2 x float>* %48, align 8
  %50 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %41) #10
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %52 = extractvalue { i64, i64 } %50, 0
  store i64 %52, i64* %51, align 8
  %53 = extractvalue { i64, i64 } %50, 1
  store i64 %53, i64* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #10
  %54 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %22, align 8
  %55 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %54, i64 0, i32 5, i32 0
  %56 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %55, align 8
  %57 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %56, i64 0, i32 7
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %40, %struct.FX_RECT* dereferenceable(16) %57) #10
  %58 = load i64, i64* %51, align 8
  %59 = load i64, i64* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39)
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %58, i64* %60, align 8
  store i64 %59, i64* %38, align 8
  %61 = trunc i64 %59 to i32
  %62 = trunc i64 %58 to i32
  %63 = icmp sgt i32 %61, %62
  %64 = lshr i64 %59, 32
  %65 = trunc i64 %64 to i32
  %66 = lshr i64 %58, 32
  %67 = trunc i64 %66 to i32
  %68 = icmp sgt i32 %65, %67
  %69 = and i1 %63, %68
  br i1 %69, label %70, label %394

70:                                               ; preds = %36
  %71 = bitcast %class.CFX_Matrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #10
  %72 = bitcast %class.CFX_Matrix* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* align 8 %72, i64 24, i1 false) #10
  %73 = sub nsw i32 0, %62
  %74 = sub nsw i32 0, %67
  %75 = sitofp i32 %73 to float
  %76 = sitofp i32 %74 to float
  call void @_ZN10CFX_Matrix9TranslateEff(%class.CFX_Matrix* nonnull %6, float %75, float %76) #10
  %77 = bitcast %class.CFX_DefaultRenderDevice* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %77) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 64, i1 false)
  call void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice* nonnull %7) #10
  %78 = sub nsw i32 %61, %62
  %79 = sub nsw i32 %65, %67
  %80 = bitcast %"class.fxcrt::RetainPtr.272"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #10
  %81 = bitcast %"class.fxcrt::RetainPtr.272"* %8 to i64*
  store i64 0, i64* %81, align 8
  %82 = call zeroext i1 @_ZN23CFX_DefaultRenderDevice6CreateEii12FXDIB_FormatRKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_DefaultRenderDevice* nonnull %7, i32 %78, i32 %79, i16 zeroext 32, %"class.fxcrt::RetainPtr.272"* nonnull dereferenceable(8) %8) #10
  %83 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %83, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %83, align 8
  %85 = icmp eq %class.CFX_DIBitmap* %84, null
  br i1 %85, label %97, label %86

86:                                               ; preds = %70
  %87 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %84, i64 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = add nsw i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %97

91:                                               ; preds = %86
  %92 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %84, i64 0, i32 0, i32 0
  %93 = bitcast %class.CFX_DIBitmap* %84 to void (%"class.fxcrt::Retainable"*)***
  %94 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %94, i64 1
  %96 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %95, align 8
  call void %96(%"class.fxcrt::Retainable"* nonnull %92) #10
  br label %97

97:                                               ; preds = %70, %86, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #10
  br i1 %82, label %98, label %392

98:                                               ; preds = %97
  %99 = bitcast %"class.fxcrt::RetainPtr.272"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #10
  %100 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %7, i64 0, i32 0
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %9, %class.CFX_RenderDevice* nonnull %100) #10
  %101 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %101, align 8
  call void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap* %102, i32 16777215) #10
  %103 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %101, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %101, align 8
  %104 = icmp eq %class.CFX_DIBitmap* %103, null
  br i1 %104, label %116, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %103, i64 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = add nsw i64 %107, -1
  store i64 %108, i64* %106, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %116

110:                                              ; preds = %105
  %111 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %103, i64 0, i32 0, i32 0
  %112 = bitcast %class.CFX_DIBitmap* %103 to void (%"class.fxcrt::Retainable"*)***
  %113 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %113, i64 1
  %115 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %114, align 8
  call void %115(%"class.fxcrt::Retainable"* nonnull %111) #10
  br label %116

116:                                              ; preds = %98, %105, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #10
  %117 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %10, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %117) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* align 8 getelementptr inbounds (<{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr" }, %"class.fxcrt::RetainPtr.161", %"class.fxcrt::RetainPtr.161", %"class.std::__1::vector.167", %"class.fxcrt::UnownedPtr.175", %"class.fxcrt::UnownedPtr.271", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.306", %"class.fxcrt::UnownedPtr.306", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.481", %"class.fxcrt::UnownedPtr.487", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>, <{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr" }, %"class.fxcrt::RetainPtr.161", %"class.fxcrt::RetainPtr.161", %"class.std::__1::vector.167", %"class.fxcrt::UnownedPtr.175", %"class.fxcrt::UnownedPtr.271", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.306", %"class.fxcrt::UnownedPtr.306", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.481", %"class.fxcrt::UnownedPtr.487", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>* @__const._ZN18CPDF_ImageRenderer15DrawMaskedImageEv.bitmap_render, i64 0, i32 0, i32 0), i64 232, i1 false)
  %118 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %22, align 8
  %119 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %118, i64 0, i32 4, i32 0
  %120 = load %class.CPDF_RenderContext*, %class.CPDF_RenderContext** %119, align 8
  call void @_ZN17CPDF_RenderStatusC1EP18CPDF_RenderContextP16CFX_RenderDevice(%class.CPDF_RenderStatus* nonnull %10, %class.CPDF_RenderContext* %120, %class.CFX_RenderDevice* nonnull %100) #10
  %121 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %22, align 8
  %122 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %121, i64 0, i32 16
  %123 = load i8, i8* %122, align 4, !range !5
  %124 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %10, i64 0, i32 16
  store i8 %123, i8* %124, align 4
  %125 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %10, i64 0, i32 17
  store i8 1, i8* %125, align 1
  call void @_ZN17CPDF_RenderStatus10InitializeEPKS_PK18CPDF_GraphicStates(%class.CPDF_RenderStatus* nonnull %10, %class.CPDF_RenderStatus* null, %class.CPDF_GraphicStates* null) #10
  %126 = bitcast %class.CPDF_ImageRenderer* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %126) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %126, i8* align 8 bitcast (<{ %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.488", %"class.fxcrt::RetainPtr.329", %"class.fxcrt::RetainPtr.493", %class.CFX_Matrix, %class.CFX_Matrix, { i32, i8, [3 x i8], %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493", %"class.fxcrt::UnownedPtr.176", %"class.fxcrt::UnownedPtr.513" }, %"class.std::__1::unique_ptr.514", %"class.std::__1::unique_ptr.533", i32, i32, i32, i32, %struct.FXDIB_ResampleOptions, i8, i8, i8, i8 }>* @__const._ZN18CPDF_ImageRenderer15DrawMaskedImageEv.image_render to i8*), i64 160, i1 false)
  %127 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 4, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 0, i64 32, i1 false) #10
  %128 = bitcast float* %127 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %128, align 8
  %129 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 4, i32 4
  %130 = bitcast float* %129 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %130, align 8
  %131 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 5, i32 2
  %132 = bitcast float* %131 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %132, align 8
  %133 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 6
  call void @_ZN16CPDF_ImageLoaderC1Ev(%class.CPDF_ImageLoader* %133) #10
  %134 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 7
  %135 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 13
  %136 = bitcast %"class.std::__1::unique_ptr.514"* %134 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 32, i1 false) #10
  call void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions* %135) #10
  %137 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 14
  store i8 0, i8* %137, align 4
  %138 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 15
  store i8 0, i8* %138, align 1
  %139 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 16
  store i8 1, i8* %139, align 2
  %140 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 13
  %141 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 0, i32 0
  store %class.CPDF_RenderStatus* %10, %class.CPDF_RenderStatus** %141, align 8
  %142 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %143 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %142, align 8
  %144 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %145 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %144, align 8
  %146 = icmp eq %class.CFX_DIBBase* %143, %145
  br i1 %146, label %168, label %147

147:                                              ; preds = %116
  %148 = icmp eq %class.CFX_DIBBase* %145, null
  br i1 %148, label %154, label %149

149:                                              ; preds = %147
  %150 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %145, i64 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = add nsw i64 %151, 1
  store i64 %152, i64* %150, align 8
  %153 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %142, align 8
  br label %154

154:                                              ; preds = %149, %147
  %155 = phi %class.CFX_DIBBase* [ %153, %149 ], [ %143, %147 ]
  store %class.CFX_DIBBase* %145, %class.CFX_DIBBase** %142, align 8
  %156 = icmp eq %class.CFX_DIBBase* %155, null
  br i1 %156, label %168, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %155, i64 0, i32 0, i32 1
  %159 = load i64, i64* %158, align 8
  %160 = add nsw i64 %159, -1
  store i64 %160, i64* %158, align 8
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %168

162:                                              ; preds = %157
  %163 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %155, i64 0, i32 0
  %164 = bitcast %class.CFX_DIBBase* %155 to void (%"class.fxcrt::Retainable"*)***
  %165 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %165, i64 1
  %167 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %166, align 8
  call void %167(%"class.fxcrt::Retainable"* nonnull %163) #10
  br label %168

168:                                              ; preds = %116, %154, %157, %162
  %169 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 12
  store i32 0, i32* %169, align 4
  %170 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 10
  store i32 255, i32* %170, align 4
  %171 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 5
  %172 = bitcast %class.CFX_Matrix* %171 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* nonnull align 4 %71, i64 24, i1 false) #10
  %173 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 13, i32 0
  %174 = bitcast %struct.FXDIB_ResampleOptions* %140 to i32*
  %175 = bitcast i8* %173 to i32*
  %176 = load i32, i32* %174, align 1
  store i32 %176, i32* %175, align 8
  store i8 1, i8* %138, align 1
  %177 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 11
  store i32 0, i32* %177, align 8
  %178 = call zeroext i1 @_ZN18CPDF_ImageRenderer12StartDIBBaseEv(%class.CPDF_ImageRenderer* nonnull %11) #10
  br i1 %178, label %179, label %202

179:                                              ; preds = %168
  %180 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 9
  %181 = load i32, i32* %180, align 8
  switch i32 %181, label %202 [
    i32 3, label %200
    i32 1, label %182
    i32 2, label %193
  ]

182:                                              ; preds = %179
  %183 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %141, align 8
  %184 = call zeroext i1 @_ZN16CPDF_ImageLoader8ContinueEP19PauseIndicatorIfaceP17CPDF_RenderStatus(%class.CPDF_ImageLoader* %133, %class.PauseIndicatorIface* null, %class.CPDF_RenderStatus* %183) #10
  br i1 %184, label %202, label %185

185:                                              ; preds = %182
  %186 = call zeroext i1 @_ZN18CPDF_ImageRenderer18StartRenderDIBBaseEv(%class.CPDF_ImageRenderer* nonnull %11) #10
  %187 = xor i1 %186, true
  %188 = load i32, i32* %180, align 8
  %189 = icmp eq i32 %188, 1
  %190 = or i1 %189, %187
  br i1 %190, label %202, label %191

191:                                              ; preds = %185
  %192 = call zeroext i1 @_ZN18CPDF_ImageRenderer8ContinueEP19PauseIndicatorIface(%class.CPDF_ImageRenderer* nonnull %11, %class.PauseIndicatorIface* null) #10
  br label %202

193:                                              ; preds = %179
  %194 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %141, align 8
  %195 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %194, i64 0, i32 5, i32 0
  %196 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %195, align 8
  %197 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %11, i64 0, i32 8, i32 0, i32 0, i32 0
  %198 = load %class.CFX_ImageRenderer*, %class.CFX_ImageRenderer** %197, align 8
  %199 = call zeroext i1 @_ZN16CFX_RenderDevice14ContinueDIBitsEP17CFX_ImageRendererP19PauseIndicatorIface(%class.CFX_RenderDevice* %196, %class.CFX_ImageRenderer* %198, %class.PauseIndicatorIface* null) #10
  br label %202

200:                                              ; preds = %179
  %201 = call zeroext i1 @_ZN18CPDF_ImageRenderer17ContinueTransformEP19PauseIndicatorIface(%class.CPDF_ImageRenderer* nonnull %11, %class.PauseIndicatorIface* null) #10
  br label %202

202:                                              ; preds = %185, %200, %193, %179, %182, %191, %168
  %203 = bitcast %class.CFX_DefaultRenderDevice* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %203) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 -86, i64 64, i1 false)
  call void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice* nonnull %12) #10
  %204 = bitcast %"class.fxcrt::RetainPtr.272"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #10
  %205 = bitcast %"class.fxcrt::RetainPtr.272"* %13 to i64*
  store i64 0, i64* %205, align 8
  %206 = call zeroext i1 @_ZN23CFX_DefaultRenderDevice6CreateEii12FXDIB_FormatRKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_DefaultRenderDevice* nonnull %12, i32 %78, i32 %79, i16 zeroext 8, %"class.fxcrt::RetainPtr.272"* nonnull dereferenceable(8) %13) #10
  %207 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %208 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %207, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %207, align 8
  %209 = icmp eq %class.CFX_DIBitmap* %208, null
  br i1 %209, label %221, label %210

210:                                              ; preds = %202
  %211 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %208, i64 0, i32 0, i32 0, i32 1
  %212 = load i64, i64* %211, align 8
  %213 = add nsw i64 %212, -1
  store i64 %213, i64* %211, align 8
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %221

215:                                              ; preds = %210
  %216 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %208, i64 0, i32 0, i32 0
  %217 = bitcast %class.CFX_DIBitmap* %208 to void (%"class.fxcrt::Retainable"*)***
  %218 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %217, align 8
  %219 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %218, i64 1
  %220 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %219, align 8
  call void %220(%"class.fxcrt::Retainable"* nonnull %216) #10
  br label %221

221:                                              ; preds = %202, %210, %215
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #10
  br i1 %206, label %222, label %390

222:                                              ; preds = %221
  %223 = bitcast %"class.fxcrt::RetainPtr.272"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223) #10
  %224 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %12, i64 0, i32 0
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %14, %class.CFX_RenderDevice* nonnull %224) #10
  %225 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %226 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %225, align 8
  call void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap* %226, i32 0) #10
  %227 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %225, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %225, align 8
  %228 = icmp eq %class.CFX_DIBitmap* %227, null
  br i1 %228, label %240, label %229

229:                                              ; preds = %222
  %230 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %227, i64 0, i32 0, i32 0, i32 1
  %231 = load i64, i64* %230, align 8
  %232 = add nsw i64 %231, -1
  store i64 %232, i64* %230, align 8
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %234, label %240

234:                                              ; preds = %229
  %235 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %227, i64 0, i32 0, i32 0
  %236 = bitcast %class.CFX_DIBitmap* %227 to void (%"class.fxcrt::Retainable"*)***
  %237 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %236, align 8
  %238 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %237, i64 1
  %239 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %238, align 8
  call void %239(%"class.fxcrt::Retainable"* nonnull %235) #10
  br label %240

240:                                              ; preds = %222, %229, %234
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #10
  %241 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 6, i32 3
  call void @_ZNK18CPDF_ImageRenderer18CalculateDrawImageEP23CFX_DefaultRenderDeviceS1_RKN5fxcrt9RetainPtrI11CFX_DIBBaseEERK10CFX_MatrixRK7FX_RECT(%class.CPDF_ImageRenderer* %0, %class.CFX_DefaultRenderDevice* nonnull %7, %class.CFX_DefaultRenderDevice* nonnull %12, %"class.fxcrt::RetainPtr.493"* dereferenceable(8) %241, %class.CFX_Matrix* nonnull dereferenceable(24) %6, %struct.FX_RECT* nonnull dereferenceable(16) %5)
  %242 = bitcast %"class.fxcrt::RetainPtr.272"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #10
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %15, %class.CFX_RenderDevice* nonnull %224) #10
  %243 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %244 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %243, align 8
  %245 = call zeroext i1 @_ZN12CFX_DIBitmap13ConvertFormatE12FXDIB_Format(%class.CFX_DIBitmap* %244, i16 zeroext 264) #10
  %246 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %243, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %243, align 8
  %247 = icmp eq %class.CFX_DIBitmap* %246, null
  br i1 %247, label %259, label %248

248:                                              ; preds = %240
  %249 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %246, i64 0, i32 0, i32 0, i32 1
  %250 = load i64, i64* %249, align 8
  %251 = add nsw i64 %250, -1
  store i64 %251, i64* %249, align 8
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %259

253:                                              ; preds = %248
  %254 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %246, i64 0, i32 0, i32 0
  %255 = bitcast %class.CFX_DIBitmap* %246 to void (%"class.fxcrt::Retainable"*)***
  %256 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %255, align 8
  %257 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %256, i64 1
  %258 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %257, align 8
  call void %258(%"class.fxcrt::Retainable"* nonnull %254) #10
  br label %259

259:                                              ; preds = %240, %248, %253
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #10
  %260 = bitcast %"class.fxcrt::RetainPtr.272"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260) #10
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %16, %class.CFX_RenderDevice* nonnull %100) #10
  %261 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %262 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %261, align 8
  %263 = bitcast %"class.fxcrt::RetainPtr.493"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #10
  %264 = bitcast %"class.fxcrt::RetainPtr.272"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %264) #10
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %18, %class.CFX_RenderDevice* nonnull %224) #10
  %265 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %266 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %265, align 8
  %267 = ptrtoint %class.CFX_DIBitmap* %266 to i64
  %268 = bitcast %"class.fxcrt::RetainPtr.493"* %17 to i64*
  store i64 %267, i64* %268, align 8
  %269 = icmp eq %class.CFX_DIBitmap* %266, null
  br i1 %269, label %274, label %270

270:                                              ; preds = %259
  %271 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %266, i64 0, i32 0, i32 0, i32 1
  %272 = load i64, i64* %271, align 8
  %273 = add nsw i64 %272, 1
  store i64 %273, i64* %271, align 8
  br label %274

274:                                              ; preds = %259, %270
  %275 = call zeroext i1 @_ZN12CFX_DIBitmap13MultiplyAlphaERKN5fxcrt9RetainPtrI11CFX_DIBBaseEE(%class.CFX_DIBitmap* %262, %"class.fxcrt::RetainPtr.493"* nonnull dereferenceable(8) %17) #10
  %276 = getelementptr inbounds %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %277 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %276, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %276, align 8
  %278 = icmp eq %class.CFX_DIBBase* %277, null
  br i1 %278, label %290, label %279

279:                                              ; preds = %274
  %280 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %277, i64 0, i32 0, i32 1
  %281 = load i64, i64* %280, align 8
  %282 = add nsw i64 %281, -1
  store i64 %282, i64* %280, align 8
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %284, label %290

284:                                              ; preds = %279
  %285 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %277, i64 0, i32 0
  %286 = bitcast %class.CFX_DIBBase* %277 to void (%"class.fxcrt::Retainable"*)***
  %287 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %286, align 8
  %288 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %287, i64 1
  %289 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %288, align 8
  call void %289(%"class.fxcrt::Retainable"* nonnull %285) #10
  br label %290

290:                                              ; preds = %274, %279, %284
  %291 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %265, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %265, align 8
  %292 = icmp eq %class.CFX_DIBitmap* %291, null
  br i1 %292, label %304, label %293

293:                                              ; preds = %290
  %294 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %291, i64 0, i32 0, i32 0, i32 1
  %295 = load i64, i64* %294, align 8
  %296 = add nsw i64 %295, -1
  store i64 %296, i64* %294, align 8
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %304

298:                                              ; preds = %293
  %299 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %291, i64 0, i32 0, i32 0
  %300 = bitcast %class.CFX_DIBitmap* %291 to void (%"class.fxcrt::Retainable"*)***
  %301 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %300, align 8
  %302 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %301, i64 1
  %303 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %302, align 8
  call void %303(%"class.fxcrt::Retainable"* nonnull %299) #10
  br label %304

304:                                              ; preds = %290, %293, %298
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %264) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #10
  %305 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %261, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %261, align 8
  %306 = icmp eq %class.CFX_DIBitmap* %305, null
  br i1 %306, label %318, label %307

307:                                              ; preds = %304
  %308 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %305, i64 0, i32 0, i32 0, i32 1
  %309 = load i64, i64* %308, align 8
  %310 = add nsw i64 %309, -1
  store i64 %310, i64* %308, align 8
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %318

312:                                              ; preds = %307
  %313 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %305, i64 0, i32 0, i32 0
  %314 = bitcast %class.CFX_DIBitmap* %305 to void (%"class.fxcrt::Retainable"*)***
  %315 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %314, align 8
  %316 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %315, i64 1
  %317 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %316, align 8
  call void %317(%"class.fxcrt::Retainable"* nonnull %313) #10
  br label %318

318:                                              ; preds = %304, %307, %312
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260) #10
  %319 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 10
  %320 = load i32, i32* %319, align 4
  %321 = icmp slt i32 %320, 255
  br i1 %321, label %322, label %342

322:                                              ; preds = %318
  %323 = bitcast %"class.fxcrt::RetainPtr.272"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %323) #10
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %19, %class.CFX_RenderDevice* nonnull %100) #10
  %324 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %325 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %324, align 8
  %326 = load i32, i32* %319, align 4
  %327 = call zeroext i1 @_ZN12CFX_DIBitmap13MultiplyAlphaEi(%class.CFX_DIBitmap* %325, i32 %326) #10
  %328 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %324, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %324, align 8
  %329 = icmp eq %class.CFX_DIBitmap* %328, null
  br i1 %329, label %341, label %330

330:                                              ; preds = %322
  %331 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %328, i64 0, i32 0, i32 0, i32 1
  %332 = load i64, i64* %331, align 8
  %333 = add nsw i64 %332, -1
  store i64 %333, i64* %331, align 8
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %335, label %341

335:                                              ; preds = %330
  %336 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %328, i64 0, i32 0, i32 0
  %337 = bitcast %class.CFX_DIBitmap* %328 to void (%"class.fxcrt::Retainable"*)***
  %338 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %337, align 8
  %339 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %338, i64 1
  %340 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %339, align 8
  call void %340(%"class.fxcrt::Retainable"* nonnull %336) #10
  br label %341

341:                                              ; preds = %322, %330, %335
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %323) #10
  br label %342

342:                                              ; preds = %341, %318
  %343 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %22, align 8
  %344 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %343, i64 0, i32 5, i32 0
  %345 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %344, align 8
  %346 = bitcast %"class.fxcrt::RetainPtr.493"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %346) #10
  %347 = bitcast %"class.fxcrt::RetainPtr.272"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %347) #10
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %21, %class.CFX_RenderDevice* nonnull %100) #10
  %348 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %349 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %348, align 8
  %350 = ptrtoint %class.CFX_DIBitmap* %349 to i64
  %351 = bitcast %"class.fxcrt::RetainPtr.493"* %20 to i64*
  store i64 %350, i64* %351, align 8
  %352 = icmp eq %class.CFX_DIBitmap* %349, null
  br i1 %352, label %357, label %353

353:                                              ; preds = %342
  %354 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %349, i64 0, i32 0, i32 0, i32 1
  %355 = load i64, i64* %354, align 8
  %356 = add nsw i64 %355, 1
  store i64 %356, i64* %354, align 8
  br label %357

357:                                              ; preds = %342, %353
  %358 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 11
  %359 = load i32, i32* %358, align 8
  %360 = call zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice* %345, %"class.fxcrt::RetainPtr.493"* nonnull dereferenceable(8) %20, i32 %62, i32 %67, i32 %359) #10
  %361 = getelementptr inbounds %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %362 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %361, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %361, align 8
  %363 = icmp eq %class.CFX_DIBBase* %362, null
  br i1 %363, label %375, label %364

364:                                              ; preds = %357
  %365 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %362, i64 0, i32 0, i32 1
  %366 = load i64, i64* %365, align 8
  %367 = add nsw i64 %366, -1
  store i64 %367, i64* %365, align 8
  %368 = icmp eq i64 %367, 0
  br i1 %368, label %369, label %375

369:                                              ; preds = %364
  %370 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %362, i64 0, i32 0
  %371 = bitcast %class.CFX_DIBBase* %362 to void (%"class.fxcrt::Retainable"*)***
  %372 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %371, align 8
  %373 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %372, i64 1
  %374 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %373, align 8
  call void %374(%"class.fxcrt::Retainable"* nonnull %370) #10
  br label %375

375:                                              ; preds = %357, %364, %369
  %376 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %348, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %348, align 8
  %377 = icmp eq %class.CFX_DIBitmap* %376, null
  br i1 %377, label %389, label %378

378:                                              ; preds = %375
  %379 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %376, i64 0, i32 0, i32 0, i32 1
  %380 = load i64, i64* %379, align 8
  %381 = add nsw i64 %380, -1
  store i64 %381, i64* %379, align 8
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %383, label %389

383:                                              ; preds = %378
  %384 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %376, i64 0, i32 0, i32 0
  %385 = bitcast %class.CFX_DIBitmap* %376 to void (%"class.fxcrt::Retainable"*)***
  %386 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %385, align 8
  %387 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %386, i64 1
  %388 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %387, align 8
  call void %388(%"class.fxcrt::Retainable"* nonnull %384) #10
  br label %389

389:                                              ; preds = %375, %378, %383
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %347) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %346) #10
  br label %390

390:                                              ; preds = %221, %389
  %391 = phi i1 [ false, %389 ], [ true, %221 ]
  call void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %203) #10
  call void @_ZN18CPDF_ImageRendererD2Ev(%class.CPDF_ImageRenderer* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %126) #10
  call void @_ZN17CPDF_RenderStatusD1Ev(%class.CPDF_RenderStatus* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %117) #10
  br label %392

392:                                              ; preds = %97, %390
  %393 = phi i1 [ %391, %390 ], [ true, %97 ]
  call void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %77) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #10
  br label %394

394:                                              ; preds = %36, %392
  %395 = phi i1 [ %393, %392 ], [ false, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #10
  br label %396

396:                                              ; preds = %394, %34
  %397 = phi i1 [ false, %34 ], [ %395, %394 ]
  ret i1 %397
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ImageRenderer16DrawPatternImageEv(%class.CPDF_ImageRenderer*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.FX_RECT*
  %6 = alloca %class.CFX_Matrix, align 4
  %7 = alloca %class.CFX_DefaultRenderDevice, align 8
  %8 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %9 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %10 = alloca %class.CPDF_RenderStatus, align 8
  %11 = alloca %class.CFX_Matrix, align 4
  %12 = alloca %class.CFX_DefaultRenderDevice, align 8
  %13 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %14 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %15 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %16 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %17 = alloca %"class.fxcrt::RetainPtr.493", align 8
  %18 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %19 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %20 = alloca %"class.fxcrt::RetainPtr.493", align 8
  %21 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %22 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %23 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %22, align 8
  %24 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %23, i64 0, i32 15
  %25 = load i8, i8* %24, align 1, !range !5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %1
  %28 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %23, i64 0, i32 5, i32 0
  %29 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %28, align 8
  %30 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %29, i64 0, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = trunc i32 %31 to i8
  %33 = icmp sgt i8 %32, -1
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 16
  store i8 0, i8* %35, align 2
  br label %370

36:                                               ; preds = %1, %27
  %37 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #10
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %39 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39)
  %40 = bitcast { i64, i64 }* %2 to %struct.FX_RECT*
  %41 = bitcast { <2 x float>, <2 x float> }* %3 to %class.CFX_FloatRect*
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %43 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #10
  %44 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5
  %45 = tail call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix11GetUnitRectEv(%class.CFX_Matrix* %44) #10
  %46 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %47 = extractvalue { <2 x float>, <2 x float> } %45, 0
  store <2 x float> %47, <2 x float>* %46, align 8
  %48 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %49 = extractvalue { <2 x float>, <2 x float> } %45, 1
  store <2 x float> %49, <2 x float>* %48, align 8
  %50 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %41) #10
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %52 = extractvalue { i64, i64 } %50, 0
  store i64 %52, i64* %51, align 8
  %53 = extractvalue { i64, i64 } %50, 1
  store i64 %53, i64* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #10
  %54 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %22, align 8
  %55 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %54, i64 0, i32 5, i32 0
  %56 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %55, align 8
  %57 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %56, i64 0, i32 7
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %40, %struct.FX_RECT* dereferenceable(16) %57) #10
  %58 = load i64, i64* %51, align 8
  %59 = load i64, i64* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39)
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %58, i64* %60, align 8
  store i64 %59, i64* %38, align 8
  %61 = trunc i64 %59 to i32
  %62 = trunc i64 %58 to i32
  %63 = icmp sgt i32 %61, %62
  %64 = lshr i64 %59, 32
  %65 = trunc i64 %64 to i32
  %66 = lshr i64 %58, 32
  %67 = trunc i64 %66 to i32
  %68 = icmp sgt i32 %65, %67
  %69 = and i1 %63, %68
  br i1 %69, label %70, label %368

70:                                               ; preds = %36
  %71 = bitcast %class.CFX_Matrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #10
  %72 = bitcast %class.CFX_Matrix* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %71, i8* align 8 %72, i64 24, i1 false) #10
  %73 = sub nsw i32 0, %62
  %74 = sub nsw i32 0, %67
  %75 = sitofp i32 %73 to float
  %76 = sitofp i32 %74 to float
  call void @_ZN10CFX_Matrix9TranslateEff(%class.CFX_Matrix* nonnull %6, float %75, float %76) #10
  %77 = bitcast %class.CFX_DefaultRenderDevice* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %77) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 64, i1 false)
  call void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice* nonnull %7) #10
  %78 = sub nsw i32 %61, %62
  %79 = sub nsw i32 %65, %67
  %80 = bitcast %"class.fxcrt::RetainPtr.272"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #10
  %81 = bitcast %"class.fxcrt::RetainPtr.272"* %8 to i64*
  store i64 0, i64* %81, align 8
  %82 = call zeroext i1 @_ZN23CFX_DefaultRenderDevice6CreateEii12FXDIB_FormatRKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_DefaultRenderDevice* nonnull %7, i32 %78, i32 %79, i16 zeroext 32, %"class.fxcrt::RetainPtr.272"* nonnull dereferenceable(8) %8) #10
  %83 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %83, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %83, align 8
  %85 = icmp eq %class.CFX_DIBitmap* %84, null
  br i1 %85, label %97, label %86

86:                                               ; preds = %70
  %87 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %84, i64 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = add nsw i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %97

91:                                               ; preds = %86
  %92 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %84, i64 0, i32 0, i32 0
  %93 = bitcast %class.CFX_DIBitmap* %84 to void (%"class.fxcrt::Retainable"*)***
  %94 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %93, align 8
  %95 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %94, i64 1
  %96 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %95, align 8
  call void %96(%"class.fxcrt::Retainable"* nonnull %92) #10
  br label %97

97:                                               ; preds = %70, %86, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #10
  br i1 %82, label %98, label %366

98:                                               ; preds = %97
  %99 = bitcast %"class.fxcrt::RetainPtr.272"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #10
  %100 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %7, i64 0, i32 0
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %9, %class.CFX_RenderDevice* nonnull %100) #10
  %101 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %101, align 8
  call void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap* %102, i32 16777215) #10
  %103 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %101, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %101, align 8
  %104 = icmp eq %class.CFX_DIBitmap* %103, null
  br i1 %104, label %116, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %103, i64 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = add nsw i64 %107, -1
  store i64 %108, i64* %106, align 8
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %116

110:                                              ; preds = %105
  %111 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %103, i64 0, i32 0, i32 0
  %112 = bitcast %class.CFX_DIBitmap* %103 to void (%"class.fxcrt::Retainable"*)***
  %113 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %112, align 8
  %114 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %113, i64 1
  %115 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %114, align 8
  call void %115(%"class.fxcrt::Retainable"* nonnull %111) #10
  br label %116

116:                                              ; preds = %98, %105, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #10
  %117 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %10, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %117) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* align 8 getelementptr inbounds (<{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr" }, %"class.fxcrt::RetainPtr.161", %"class.fxcrt::RetainPtr.161", %"class.std::__1::vector.167", %"class.fxcrt::UnownedPtr.175", %"class.fxcrt::UnownedPtr.271", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.306", %"class.fxcrt::UnownedPtr.306", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.481", %"class.fxcrt::UnownedPtr.487", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>, <{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr" }, %"class.fxcrt::RetainPtr.161", %"class.fxcrt::RetainPtr.161", %"class.std::__1::vector.167", %"class.fxcrt::UnownedPtr.175", %"class.fxcrt::UnownedPtr.271", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.306", %"class.fxcrt::UnownedPtr.306", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.481", %"class.fxcrt::UnownedPtr.487", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>* @__const._ZN18CPDF_ImageRenderer15DrawMaskedImageEv.bitmap_render, i64 0, i32 0, i32 0), i64 232, i1 false)
  %118 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %22, align 8
  %119 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %118, i64 0, i32 4, i32 0
  %120 = load %class.CPDF_RenderContext*, %class.CPDF_RenderContext** %119, align 8
  call void @_ZN17CPDF_RenderStatusC1EP18CPDF_RenderContextP16CFX_RenderDevice(%class.CPDF_RenderStatus* nonnull %10, %class.CPDF_RenderContext* %120, %class.CFX_RenderDevice* nonnull %100) #10
  %121 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %22, align 8
  %122 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %121, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* align 8 %122, i64 28, i1 false) #10
  %123 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %10, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %124 = load %class.CPDF_OCContext*, %class.CPDF_OCContext** %123, align 8
  %125 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %121, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %126 = load %class.CPDF_OCContext*, %class.CPDF_OCContext** %125, align 8
  %127 = icmp eq %class.CPDF_OCContext* %124, %126
  br i1 %127, label %149, label %128

128:                                              ; preds = %116
  %129 = icmp eq %class.CPDF_OCContext* %126, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %128
  %131 = getelementptr inbounds %class.CPDF_OCContext, %class.CPDF_OCContext* %126, i64 0, i32 0, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = add nsw i64 %132, 1
  store i64 %133, i64* %131, align 8
  %134 = load %class.CPDF_OCContext*, %class.CPDF_OCContext** %123, align 8
  br label %135

135:                                              ; preds = %130, %128
  %136 = phi %class.CPDF_OCContext* [ %134, %130 ], [ %124, %128 ]
  store %class.CPDF_OCContext* %126, %class.CPDF_OCContext** %123, align 8
  %137 = icmp eq %class.CPDF_OCContext* %136, null
  br i1 %137, label %149, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %class.CPDF_OCContext, %class.CPDF_OCContext* %136, i64 0, i32 0, i32 1
  %140 = load i64, i64* %139, align 8
  %141 = add nsw i64 %140, -1
  store i64 %141, i64* %139, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %149

143:                                              ; preds = %138
  %144 = getelementptr inbounds %class.CPDF_OCContext, %class.CPDF_OCContext* %136, i64 0, i32 0
  %145 = bitcast %class.CPDF_OCContext* %136 to void (%"class.fxcrt::Retainable"*)***
  %146 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %146, i64 1
  %148 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %147, align 8
  call void %148(%"class.fxcrt::Retainable"* nonnull %144) #10
  br label %149

149:                                              ; preds = %116, %135, %138, %143
  %150 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %22, align 8
  %151 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %150, i64 0, i32 16
  %152 = load i8, i8* %151, align 4, !range !5
  %153 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %10, i64 0, i32 16
  store i8 %152, i8* %153, align 4
  %154 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %10, i64 0, i32 17
  store i8 1, i8* %154, align 1
  call void @_ZN17CPDF_RenderStatus10InitializeEPKS_PK18CPDF_GraphicStates(%class.CPDF_RenderStatus* nonnull %10, %class.CPDF_RenderStatus* null, %class.CPDF_GraphicStates* null) #10
  %155 = bitcast %class.CFX_Matrix* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #10
  %156 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 4
  %157 = bitcast %class.CFX_Matrix* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %155, i8* align 8 %157, i64 24, i1 false)
  call void @_ZN10CFX_Matrix9TranslateEff(%class.CFX_Matrix* nonnull %11, float %75, float %76) #10
  %158 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %159 = load %class.CPDF_Pattern*, %class.CPDF_Pattern** %158, align 8
  %160 = bitcast %class.CPDF_Pattern* %159 to %class.CPDF_TilingPattern* (%class.CPDF_Pattern*)***
  %161 = load %class.CPDF_TilingPattern* (%class.CPDF_Pattern*)**, %class.CPDF_TilingPattern* (%class.CPDF_Pattern*)*** %160, align 8
  %162 = getelementptr inbounds %class.CPDF_TilingPattern* (%class.CPDF_Pattern*)*, %class.CPDF_TilingPattern* (%class.CPDF_Pattern*)** %161, i64 2
  %163 = load %class.CPDF_TilingPattern* (%class.CPDF_Pattern*)*, %class.CPDF_TilingPattern* (%class.CPDF_Pattern*)** %162, align 8
  %164 = call %class.CPDF_TilingPattern* %163(%class.CPDF_Pattern* %159) #10
  %165 = icmp eq %class.CPDF_TilingPattern* %164, null
  br i1 %165, label %170, label %166

166:                                              ; preds = %149
  %167 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 1, i32 0
  %168 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %167, align 8
  %169 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %168, i64 0, i32 0
  call void @_ZN17CPDF_RenderStatus17DrawTilingPatternEP18CPDF_TilingPatternP15CPDF_PageObjectRK10CFX_Matrixb(%class.CPDF_RenderStatus* nonnull %10, %class.CPDF_TilingPattern* nonnull %164, %class.CPDF_PageObject* %169, %class.CFX_Matrix* nonnull dereferenceable(24) %11, i1 zeroext false) #10
  br label %182

170:                                              ; preds = %149
  %171 = load %class.CPDF_Pattern*, %class.CPDF_Pattern** %158, align 8
  %172 = bitcast %class.CPDF_Pattern* %171 to %class.CPDF_ShadingPattern* (%class.CPDF_Pattern*)***
  %173 = load %class.CPDF_ShadingPattern* (%class.CPDF_Pattern*)**, %class.CPDF_ShadingPattern* (%class.CPDF_Pattern*)*** %172, align 8
  %174 = getelementptr inbounds %class.CPDF_ShadingPattern* (%class.CPDF_Pattern*)*, %class.CPDF_ShadingPattern* (%class.CPDF_Pattern*)** %173, i64 3
  %175 = load %class.CPDF_ShadingPattern* (%class.CPDF_Pattern*)*, %class.CPDF_ShadingPattern* (%class.CPDF_Pattern*)** %174, align 8
  %176 = call %class.CPDF_ShadingPattern* %175(%class.CPDF_Pattern* %171) #10
  %177 = icmp eq %class.CPDF_ShadingPattern* %176, null
  br i1 %177, label %182, label %178

178:                                              ; preds = %170
  %179 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 1, i32 0
  %180 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %179, align 8
  %181 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %180, i64 0, i32 0
  call void @_ZN17CPDF_RenderStatus18DrawShadingPatternEP19CPDF_ShadingPatternPK15CPDF_PageObjectRK10CFX_Matrixb(%class.CPDF_RenderStatus* nonnull %10, %class.CPDF_ShadingPattern* nonnull %176, %class.CPDF_PageObject* %181, %class.CFX_Matrix* nonnull dereferenceable(24) %11, i1 zeroext false) #10
  br label %182

182:                                              ; preds = %178, %170, %166
  %183 = bitcast %class.CFX_DefaultRenderDevice* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %183) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %183, i8 -86, i64 64, i1 false)
  call void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice* nonnull %12) #10
  %184 = bitcast %"class.fxcrt::RetainPtr.272"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #10
  %185 = bitcast %"class.fxcrt::RetainPtr.272"* %13 to i64*
  store i64 0, i64* %185, align 8
  %186 = call zeroext i1 @_ZN23CFX_DefaultRenderDevice6CreateEii12FXDIB_FormatRKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_DefaultRenderDevice* nonnull %12, i32 %78, i32 %79, i16 zeroext 8, %"class.fxcrt::RetainPtr.272"* nonnull dereferenceable(8) %13) #10
  %187 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %188 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %187, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %187, align 8
  %189 = icmp eq %class.CFX_DIBitmap* %188, null
  br i1 %189, label %201, label %190

190:                                              ; preds = %182
  %191 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %188, i64 0, i32 0, i32 0, i32 1
  %192 = load i64, i64* %191, align 8
  %193 = add nsw i64 %192, -1
  store i64 %193, i64* %191, align 8
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %201

195:                                              ; preds = %190
  %196 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %188, i64 0, i32 0, i32 0
  %197 = bitcast %class.CFX_DIBitmap* %188 to void (%"class.fxcrt::Retainable"*)***
  %198 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %197, align 8
  %199 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %198, i64 1
  %200 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %199, align 8
  call void %200(%"class.fxcrt::Retainable"* nonnull %196) #10
  br label %201

201:                                              ; preds = %182, %190, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #10
  br i1 %186, label %202, label %364

202:                                              ; preds = %201
  %203 = bitcast %"class.fxcrt::RetainPtr.272"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #10
  %204 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %12, i64 0, i32 0
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %14, %class.CFX_RenderDevice* nonnull %204) #10
  %205 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %206 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %205, align 8
  call void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap* %206, i32 0) #10
  %207 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %205, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %205, align 8
  %208 = icmp eq %class.CFX_DIBitmap* %207, null
  br i1 %208, label %220, label %209

209:                                              ; preds = %202
  %210 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %207, i64 0, i32 0, i32 0, i32 1
  %211 = load i64, i64* %210, align 8
  %212 = add nsw i64 %211, -1
  store i64 %212, i64* %210, align 8
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %220

214:                                              ; preds = %209
  %215 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %207, i64 0, i32 0, i32 0
  %216 = bitcast %class.CFX_DIBitmap* %207 to void (%"class.fxcrt::Retainable"*)***
  %217 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %216, align 8
  %218 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %217, i64 1
  %219 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %218, align 8
  call void %219(%"class.fxcrt::Retainable"* nonnull %215) #10
  br label %220

220:                                              ; preds = %202, %209, %214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #10
  %221 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 3
  call void @_ZNK18CPDF_ImageRenderer18CalculateDrawImageEP23CFX_DefaultRenderDeviceS1_RKN5fxcrt9RetainPtrI11CFX_DIBBaseEERK10CFX_MatrixRK7FX_RECT(%class.CPDF_ImageRenderer* %0, %class.CFX_DefaultRenderDevice* nonnull %7, %class.CFX_DefaultRenderDevice* nonnull %12, %"class.fxcrt::RetainPtr.493"* dereferenceable(8) %221, %class.CFX_Matrix* nonnull dereferenceable(24) %6, %struct.FX_RECT* nonnull dereferenceable(16) %5)
  %222 = bitcast %"class.fxcrt::RetainPtr.272"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #10
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %15, %class.CFX_RenderDevice* nonnull %204) #10
  %223 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %224 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %223, align 8
  %225 = call zeroext i1 @_ZN12CFX_DIBitmap13ConvertFormatE12FXDIB_Format(%class.CFX_DIBitmap* %224, i16 zeroext 264) #10
  %226 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %223, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %223, align 8
  %227 = icmp eq %class.CFX_DIBitmap* %226, null
  br i1 %227, label %239, label %228

228:                                              ; preds = %220
  %229 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %226, i64 0, i32 0, i32 0, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = add nsw i64 %230, -1
  store i64 %231, i64* %229, align 8
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %239

233:                                              ; preds = %228
  %234 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %226, i64 0, i32 0, i32 0
  %235 = bitcast %class.CFX_DIBitmap* %226 to void (%"class.fxcrt::Retainable"*)***
  %236 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %235, align 8
  %237 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %236, i64 1
  %238 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %237, align 8
  call void %238(%"class.fxcrt::Retainable"* nonnull %234) #10
  br label %239

239:                                              ; preds = %220, %228, %233
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #10
  %240 = bitcast %"class.fxcrt::RetainPtr.272"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #10
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %16, %class.CFX_RenderDevice* nonnull %100) #10
  %241 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %242 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %241, align 8
  %243 = bitcast %"class.fxcrt::RetainPtr.493"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #10
  %244 = bitcast %"class.fxcrt::RetainPtr.272"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244) #10
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %18, %class.CFX_RenderDevice* nonnull %204) #10
  %245 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %246 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %245, align 8
  %247 = ptrtoint %class.CFX_DIBitmap* %246 to i64
  %248 = bitcast %"class.fxcrt::RetainPtr.493"* %17 to i64*
  store i64 %247, i64* %248, align 8
  %249 = icmp eq %class.CFX_DIBitmap* %246, null
  br i1 %249, label %254, label %250

250:                                              ; preds = %239
  %251 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %246, i64 0, i32 0, i32 0, i32 1
  %252 = load i64, i64* %251, align 8
  %253 = add nsw i64 %252, 1
  store i64 %253, i64* %251, align 8
  br label %254

254:                                              ; preds = %239, %250
  %255 = call zeroext i1 @_ZN12CFX_DIBitmap13MultiplyAlphaERKN5fxcrt9RetainPtrI11CFX_DIBBaseEE(%class.CFX_DIBitmap* %242, %"class.fxcrt::RetainPtr.493"* nonnull dereferenceable(8) %17) #10
  %256 = getelementptr inbounds %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %257 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %256, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %256, align 8
  %258 = icmp eq %class.CFX_DIBBase* %257, null
  br i1 %258, label %270, label %259

259:                                              ; preds = %254
  %260 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %257, i64 0, i32 0, i32 1
  %261 = load i64, i64* %260, align 8
  %262 = add nsw i64 %261, -1
  store i64 %262, i64* %260, align 8
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %270

264:                                              ; preds = %259
  %265 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %257, i64 0, i32 0
  %266 = bitcast %class.CFX_DIBBase* %257 to void (%"class.fxcrt::Retainable"*)***
  %267 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %266, align 8
  %268 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %267, i64 1
  %269 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %268, align 8
  call void %269(%"class.fxcrt::Retainable"* nonnull %265) #10
  br label %270

270:                                              ; preds = %254, %259, %264
  %271 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %245, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %245, align 8
  %272 = icmp eq %class.CFX_DIBitmap* %271, null
  br i1 %272, label %284, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %271, i64 0, i32 0, i32 0, i32 1
  %275 = load i64, i64* %274, align 8
  %276 = add nsw i64 %275, -1
  store i64 %276, i64* %274, align 8
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %284

278:                                              ; preds = %273
  %279 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %271, i64 0, i32 0, i32 0
  %280 = bitcast %class.CFX_DIBitmap* %271 to void (%"class.fxcrt::Retainable"*)***
  %281 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %280, align 8
  %282 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %281, i64 1
  %283 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %282, align 8
  call void %283(%"class.fxcrt::Retainable"* nonnull %279) #10
  br label %284

284:                                              ; preds = %270, %273, %278
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #10
  %285 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %241, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %241, align 8
  %286 = icmp eq %class.CFX_DIBitmap* %285, null
  br i1 %286, label %298, label %287

287:                                              ; preds = %284
  %288 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %285, i64 0, i32 0, i32 0, i32 1
  %289 = load i64, i64* %288, align 8
  %290 = add nsw i64 %289, -1
  store i64 %290, i64* %288, align 8
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %298

292:                                              ; preds = %287
  %293 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %285, i64 0, i32 0, i32 0
  %294 = bitcast %class.CFX_DIBitmap* %285 to void (%"class.fxcrt::Retainable"*)***
  %295 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %294, align 8
  %296 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %295, i64 1
  %297 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %296, align 8
  call void %297(%"class.fxcrt::Retainable"* nonnull %293) #10
  br label %298

298:                                              ; preds = %284, %287, %292
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240) #10
  %299 = bitcast %"class.fxcrt::RetainPtr.272"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %299) #10
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %19, %class.CFX_RenderDevice* nonnull %100) #10
  %300 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %301 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %300, align 8
  %302 = call zeroext i1 @_ZN12CFX_DIBitmap13MultiplyAlphaEi(%class.CFX_DIBitmap* %301, i32 255) #10
  %303 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %300, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %300, align 8
  %304 = icmp eq %class.CFX_DIBitmap* %303, null
  br i1 %304, label %316, label %305

305:                                              ; preds = %298
  %306 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %303, i64 0, i32 0, i32 0, i32 1
  %307 = load i64, i64* %306, align 8
  %308 = add nsw i64 %307, -1
  store i64 %308, i64* %306, align 8
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %316

310:                                              ; preds = %305
  %311 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %303, i64 0, i32 0, i32 0
  %312 = bitcast %class.CFX_DIBitmap* %303 to void (%"class.fxcrt::Retainable"*)***
  %313 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %312, align 8
  %314 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %313, i64 1
  %315 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %314, align 8
  call void %315(%"class.fxcrt::Retainable"* nonnull %311) #10
  br label %316

316:                                              ; preds = %298, %305, %310
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %299) #10
  %317 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %22, align 8
  %318 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %317, i64 0, i32 5, i32 0
  %319 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %318, align 8
  %320 = bitcast %"class.fxcrt::RetainPtr.493"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %320) #10
  %321 = bitcast %"class.fxcrt::RetainPtr.272"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %321) #10
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %21, %class.CFX_RenderDevice* nonnull %100) #10
  %322 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %323 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %322, align 8
  %324 = ptrtoint %class.CFX_DIBitmap* %323 to i64
  %325 = bitcast %"class.fxcrt::RetainPtr.493"* %20 to i64*
  store i64 %324, i64* %325, align 8
  %326 = icmp eq %class.CFX_DIBitmap* %323, null
  br i1 %326, label %331, label %327

327:                                              ; preds = %316
  %328 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %323, i64 0, i32 0, i32 0, i32 1
  %329 = load i64, i64* %328, align 8
  %330 = add nsw i64 %329, 1
  store i64 %330, i64* %328, align 8
  br label %331

331:                                              ; preds = %316, %327
  %332 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 11
  %333 = load i32, i32* %332, align 8
  %334 = call zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice* %319, %"class.fxcrt::RetainPtr.493"* nonnull dereferenceable(8) %20, i32 %62, i32 %67, i32 %333) #10
  %335 = getelementptr inbounds %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %336 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %335, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %335, align 8
  %337 = icmp eq %class.CFX_DIBBase* %336, null
  br i1 %337, label %349, label %338

338:                                              ; preds = %331
  %339 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %336, i64 0, i32 0, i32 1
  %340 = load i64, i64* %339, align 8
  %341 = add nsw i64 %340, -1
  store i64 %341, i64* %339, align 8
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %343, label %349

343:                                              ; preds = %338
  %344 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %336, i64 0, i32 0
  %345 = bitcast %class.CFX_DIBBase* %336 to void (%"class.fxcrt::Retainable"*)***
  %346 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %345, align 8
  %347 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %346, i64 1
  %348 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %347, align 8
  call void %348(%"class.fxcrt::Retainable"* nonnull %344) #10
  br label %349

349:                                              ; preds = %331, %338, %343
  %350 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %322, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %322, align 8
  %351 = icmp eq %class.CFX_DIBitmap* %350, null
  br i1 %351, label %363, label %352

352:                                              ; preds = %349
  %353 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %350, i64 0, i32 0, i32 0, i32 1
  %354 = load i64, i64* %353, align 8
  %355 = add nsw i64 %354, -1
  store i64 %355, i64* %353, align 8
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %363

357:                                              ; preds = %352
  %358 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %350, i64 0, i32 0, i32 0
  %359 = bitcast %class.CFX_DIBitmap* %350 to void (%"class.fxcrt::Retainable"*)***
  %360 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %359, align 8
  %361 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %360, i64 1
  %362 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %361, align 8
  call void %362(%"class.fxcrt::Retainable"* nonnull %358) #10
  br label %363

363:                                              ; preds = %349, %352, %357
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %321) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %320) #10
  br label %364

364:                                              ; preds = %201, %363
  %365 = phi i1 [ false, %363 ], [ true, %201 ]
  call void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %183) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %155) #10
  call void @_ZN17CPDF_RenderStatusD1Ev(%class.CPDF_RenderStatus* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %117) #10
  br label %366

366:                                              ; preds = %97, %364
  %367 = phi i1 [ %365, %364 ], [ true, %97 ]
  call void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %77) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #10
  br label %368

368:                                              ; preds = %36, %366
  %369 = phi i1 [ %367, %366 ], [ false, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #10
  br label %370

370:                                              ; preds = %368, %34
  %371 = phi i1 [ false, %34 ], [ %369, %368 ]
  ret i1 %371
}

declare zeroext i1 @_ZNK17CPDF_GeneralState9GetFillOPEv(%class.CPDF_GeneralState*) local_unnamed_addr #1

declare i32 @_ZNK17CPDF_GeneralState9GetOPModeEv(%class.CPDF_GeneralState*) local_unnamed_addr #1

declare i32 @_ZNK17CPDF_GeneralState12GetBlendTypeEv(%class.CPDF_GeneralState*) local_unnamed_addr #1

declare float @_ZNK17CPDF_GeneralState14GetStrokeAlphaEv(%class.CPDF_GeneralState*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ImageRenderer12StartDIBBaseEv(%class.CPDF_ImageRenderer*) local_unnamed_addr #0 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca %"class.pdfium::Optional", align 4
  %7 = alloca %struct.FX_RECT, align 4
  %8 = alloca %"class.pdfium::Optional", align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca <4 x i32>, align 16
  %14 = bitcast <4 x i32>* %13 to %struct.FX_RECT*
  %15 = alloca <4 x i32>, align 16
  %16 = bitcast <4 x i32>* %15 to %struct.FX_RECT*
  %17 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %18 = alloca %class.CPDF_Transparency, align 1
  %19 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %20, align 8
  %22 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %21, i64 0, i32 1
  %23 = load i16, i16* %22, align 8
  %24 = and i16 %23, 254
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %59, label %26

26:                                               ; preds = %1
  %27 = lshr i16 %23, 3
  %28 = and i16 %27, 31
  %29 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %21, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 0
  %32 = icmp ne i16 %28, 0
  %33 = and i1 %32, %31
  br i1 %33, label %300, label %34, !prof !9

34:                                               ; preds = %26
  %35 = zext i16 %28 to i64
  %36 = sext i32 %30 to i64
  %37 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 %36) #10
  %38 = extractvalue { i64, i1 } %37, 1
  %39 = extractvalue { i64, i1 } %37, 0
  %40 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %21, i64 0, i32 3
  %41 = load i32, i32* %40, align 8
  br i1 %38, label %300, label %42

42:                                               ; preds = %34
  %43 = icmp slt i32 %41, 0
  %44 = icmp ne i64 %39, 0
  %45 = and i1 %44, %43
  br i1 %45, label %300, label %46, !prof !9

46:                                               ; preds = %42
  %47 = sext i32 %41 to i64
  %48 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %39, i64 %47) #10
  %49 = extractvalue { i64, i1 } %48, 1
  br i1 %49, label %300, label %50

50:                                               ; preds = %46
  %51 = extractvalue { i64, i1 } %48, 0
  %52 = icmp ugt i64 %51, 60000000
  br i1 %52, label %53, label %59

53:                                               ; preds = %50
  %54 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 13, i32 1
  %55 = load i8, i8* %54, align 1, !range !5
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 13, i32 0
  store i8 1, i8* %58, align 8
  br label %59

59:                                               ; preds = %50, %57, %53, %1
  %60 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %61 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %60, align 8
  %62 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %61, i64 0, i32 5, i32 0
  %63 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %62, align 8
  %64 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 10
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 12
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5
  %69 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 13
  %70 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 8
  %71 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 11
  %72 = load i32, i32* %71, align 8
  %73 = tail call zeroext i1 @_ZN16CFX_RenderDevice20StartDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEijRK10CFX_MatrixRK21FXDIB_ResampleOptionsPNSt3__110unique_ptrI17CFX_ImageRendererNSC_14default_deleteISE_EEEE9BlendMode(%class.CFX_RenderDevice* %63, %"class.fxcrt::RetainPtr.493"* dereferenceable(8) %19, i32 %65, i32 %67, %class.CFX_Matrix* dereferenceable(24) %68, %struct.FXDIB_ResampleOptions* dereferenceable(4) %69, %"class.std::__1::unique_ptr.533"* %70, i32 %72) #10
  br i1 %73, label %74, label %80

74:                                               ; preds = %59
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.533", %"class.std::__1::unique_ptr.533"* %70, i64 0, i32 0, i32 0, i32 0
  %76 = load %class.CFX_ImageRenderer*, %class.CFX_ImageRenderer** %75, align 8
  %77 = icmp eq %class.CFX_ImageRenderer* %76, null
  br i1 %77, label %300, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 9
  store i32 2, i32* %79, align 8
  br label %300

80:                                               ; preds = %59
  %81 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5, i32 1
  %82 = load float, float* %81, align 4
  %83 = tail call float @llvm.fabs.f32(float %82) #10
  %84 = fcmp ult float %83, 5.000000e-01
  br i1 %84, label %85, label %98

85:                                               ; preds = %80
  %86 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %68, i64 0, i32 0
  %87 = load float, float* %86, align 8
  %88 = fcmp oeq float %87, 0.000000e+00
  br i1 %88, label %98, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5, i32 2
  %91 = load float, float* %90, align 8
  %92 = tail call float @llvm.fabs.f32(float %91) #10
  %93 = fcmp ult float %92, 5.000000e-01
  br i1 %93, label %94, label %98

94:                                               ; preds = %89
  %95 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5, i32 3
  %96 = load float, float* %95, align 4
  %97 = fcmp oeq float %96, 0.000000e+00
  br i1 %97, label %98, label %155

98:                                               ; preds = %89, %80, %94, %85
  %99 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %60, align 8
  %100 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %99, i64 0, i32 15
  %101 = load i8, i8* %100, align 1, !range !5
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %112, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %99, i64 0, i32 5, i32 0
  %105 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %104, align 8
  %106 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %105, i64 0, i32 5
  %107 = load i32, i32* %106, align 4
  %108 = trunc i32 %107 to i8
  %109 = icmp sgt i8 %108, -1
  br i1 %109, label %110, label %112

110:                                              ; preds = %103
  %111 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 16
  store i8 0, i8* %111, align 2
  br label %300

112:                                              ; preds = %98, %103
  %113 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %113) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %113, i8 -86, i64 20, i1 false)
  %114 = bitcast { <2 x float>, <2 x float> }* %2 to %class.CFX_FloatRect*
  %115 = bitcast { i64, i64 }* %3 to %struct.FX_RECT*
  %116 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #10, !noalias !10
  %117 = tail call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix11GetUnitRectEv(%class.CFX_Matrix* %68) #10, !noalias !10
  %118 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  %119 = extractvalue { <2 x float>, <2 x float> } %117, 0
  store <2 x float> %119, <2 x float>* %118, align 8, !noalias !10
  %120 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  %121 = extractvalue { <2 x float>, <2 x float> } %117, 1
  store <2 x float> %121, <2 x float>* %120, align 8, !noalias !10
  %122 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #10, !noalias !10
  %123 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %124 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %114) #10, !noalias !10
  %125 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %126 = extractvalue { i64, i64 } %124, 0
  store i64 %126, i64* %125, align 8, !noalias !10
  %127 = extractvalue { i64, i64 } %124, 1
  store i64 %127, i64* %123, align 8, !noalias !10
  %128 = call zeroext i1 @_ZNK7FX_RECT5ValidEv(%struct.FX_RECT* nonnull %115) #10, !noalias !10
  br i1 %128, label %130, label %129

129:                                              ; preds = %112
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %113, i8 0, i64 20, i1 false) #10, !alias.scope !10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #10, !noalias !10
  br label %152

130:                                              ; preds = %112
  store i8 1, i8* %113, align 4, !alias.scope !10
  %131 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %132 = bitcast %struct.FX_RECT* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %132, i8* nonnull align 8 %122, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #10, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #10, !noalias !10
  %133 = bitcast %struct.FX_RECT* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #10
  %134 = bitcast %struct.FX_RECT* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %134, i8 -86, i64 16, i1 false)
  %135 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %60, align 8
  %136 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %135, i64 0, i32 5, i32 0
  %137 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %136, align 8
  %138 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %137, i64 0, i32 7
  %139 = bitcast %struct.FX_RECT* %138 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %133, i8* align 4 %139, i64 16, i1 false)
  %140 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %7, %struct.FX_RECT* dereferenceable(16) %140) #10
  %141 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 9
  store i32 3, i32* %141, align 8
  %142 = call i8* @_Znwm(i64 120) #11
  %143 = bitcast i8* %142 to %class.CFX_ImageTransformer*
  call void @_ZN20CFX_ImageTransformerC1ERKN5fxcrt9RetainPtrI11CFX_DIBBaseEERK10CFX_MatrixRK21FXDIB_ResampleOptionsPK7FX_RECT(%class.CFX_ImageTransformer* nonnull %143, %"class.fxcrt::RetainPtr.493"* dereferenceable(8) %19, %class.CFX_Matrix* dereferenceable(24) %68, %struct.FXDIB_ResampleOptions* dereferenceable(4) %69, %struct.FX_RECT* nonnull %7) #10
  %144 = ptrtoint i8* %142 to i64
  %145 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 7
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr.514", %"class.std::__1::unique_ptr.514"* %145, i64 0, i32 0, i32 0, i32 0
  %147 = load %class.CFX_ImageTransformer*, %class.CFX_ImageTransformer** %146, align 8
  %148 = bitcast %"class.std::__1::unique_ptr.514"* %145 to i64*
  store i64 %144, i64* %148, align 8
  %149 = icmp eq %class.CFX_ImageTransformer* %147, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %130
  call void @_ZN20CFX_ImageTransformerD1Ev(%class.CFX_ImageTransformer* nonnull %147) #10
  %151 = bitcast %class.CFX_ImageTransformer* %147 to i8*
  call void @_ZdlPv(i8* %151) #11
  br label %152

152:                                              ; preds = %130, %150, %129
  %153 = phi i8* [ %116, %129 ], [ %133, %150 ], [ %133, %130 ]
  %154 = phi i1 [ false, %129 ], [ true, %150 ], [ true, %130 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %113) #10
  br label %300

155:                                              ; preds = %94
  %156 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %156) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %156, i8 -86, i64 20, i1 false)
  %157 = bitcast { <2 x float>, <2 x float> }* %4 to %class.CFX_FloatRect*
  %158 = bitcast { i64, i64 }* %5 to %struct.FX_RECT*
  %159 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #10, !noalias !13
  %160 = tail call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix11GetUnitRectEv(%class.CFX_Matrix* %68) #10, !noalias !13
  %161 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %162 = extractvalue { <2 x float>, <2 x float> } %160, 0
  store <2 x float> %162, <2 x float>* %161, align 8, !noalias !13
  %163 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %164 = extractvalue { <2 x float>, <2 x float> } %160, 1
  store <2 x float> %164, <2 x float>* %163, align 8, !noalias !13
  %165 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %165) #10, !noalias !13
  %166 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %167 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %157) #10, !noalias !13
  %168 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %169 = extractvalue { i64, i64 } %167, 0
  store i64 %169, i64* %168, align 8, !noalias !13
  %170 = extractvalue { i64, i64 } %167, 1
  store i64 %170, i64* %166, align 8, !noalias !13
  %171 = call zeroext i1 @_ZNK7FX_RECT5ValidEv(%struct.FX_RECT* nonnull %158) #10, !noalias !13
  br i1 %171, label %173, label %172

172:                                              ; preds = %155
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %156, i8 0, i64 20, i1 false) #10, !alias.scope !13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #10, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #10, !noalias !13
  br label %298

173:                                              ; preds = %155
  store i8 1, i8* %156, align 4, !alias.scope !13
  %174 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %175 = bitcast %struct.FX_RECT* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* nonnull align 8 %165, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %165) #10, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #10, !noalias !13
  %176 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %176) #10
  store i32 -1431655766, i32* %9, align 4
  %177 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %177) #10
  store i32 -1431655766, i32* %10, align 4
  %178 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %178) #10
  store i32 -1431655766, i32* %11, align 4
  %179 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %179) #10
  store i32 -1431655766, i32* %12, align 4
  %180 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %181 = call zeroext i1 @_ZNK18CPDF_ImageRenderer25GetDimensionsFromUnitRectERK7FX_RECTPiS3_S3_S3_(%class.CPDF_ImageRenderer* %0, %struct.FX_RECT* dereferenceable(16) %180, i32* nonnull %9, i32* nonnull %10, i32* nonnull %11, i32* nonnull %12)
  br i1 %181, label %182, label %296

182:                                              ; preds = %173
  %183 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %20, align 8
  %184 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %183, i64 0, i32 1
  %185 = load i16, i16* %184, align 8
  %186 = and i16 %185, 768
  %187 = icmp eq i16 %186, 0
  br i1 %187, label %188, label %205

188:                                              ; preds = %182
  %189 = load i32, i32* %64, align 4
  %190 = icmp eq i32 %189, 255
  br i1 %190, label %191, label %205

191:                                              ; preds = %188
  %192 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %60, align 8
  %193 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %192, i64 0, i32 5, i32 0
  %194 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %193, align 8
  %195 = load i32, i32* %9, align 4
  %196 = load i32, i32* %10, align 4
  %197 = load i32, i32* %11, align 4
  %198 = load i32, i32* %12, align 4
  %199 = load i32, i32* %71, align 8
  %200 = call zeroext i1 @_ZN16CFX_RenderDevice30StretchDIBitsWithFlagsAndBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiiRK21FXDIB_ResampleOptions9BlendMode(%class.CFX_RenderDevice* %194, %"class.fxcrt::RetainPtr.493"* dereferenceable(8) %19, i32 %195, i32 %196, i32 %197, i32 %198, %struct.FXDIB_ResampleOptions* dereferenceable(4) %69, i32 %199) #10
  br i1 %200, label %296, label %201

201:                                              ; preds = %191
  %202 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %20, align 8
  %203 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %202, i64 0, i32 1
  %204 = load i16, i16* %203, align 8
  br label %205

205:                                              ; preds = %201, %188, %182
  %206 = phi i16 [ %204, %201 ], [ %185, %188 ], [ %185, %182 ]
  %207 = and i16 %206, 256
  %208 = icmp eq i16 %207, 0
  br i1 %208, label %230, label %209

209:                                              ; preds = %205
  %210 = load i32, i32* %64, align 4
  %211 = icmp eq i32 %210, 255
  %212 = load i32, i32* %66, align 4
  br i1 %211, label %220, label %213

213:                                              ; preds = %209
  %214 = lshr i32 %212, 24
  %215 = mul i32 %214, %210
  %216 = udiv i32 %215, 255
  %217 = shl i32 %216, 24
  %218 = and i32 %212, 16777215
  %219 = or i32 %217, %218
  store i32 %219, i32* %66, align 4
  br label %220

220:                                              ; preds = %209, %213
  %221 = phi i32 [ %219, %213 ], [ %212, %209 ]
  %222 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %60, align 8
  %223 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %222, i64 0, i32 5, i32 0
  %224 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %223, align 8
  %225 = load i32, i32* %9, align 4
  %226 = load i32, i32* %10, align 4
  %227 = load i32, i32* %11, align 4
  %228 = load i32, i32* %12, align 4
  %229 = call zeroext i1 @_ZN16CFX_RenderDevice23StretchBitMaskWithFlagsERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiijRK21FXDIB_ResampleOptions(%class.CFX_RenderDevice* %224, %"class.fxcrt::RetainPtr.493"* dereferenceable(8) %19, i32 %225, i32 %226, i32 %227, i32 %228, i32 %221, %struct.FXDIB_ResampleOptions* dereferenceable(4) %69) #10
  br i1 %229, label %296, label %230

230:                                              ; preds = %205, %220
  %231 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %60, align 8
  %232 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %231, i64 0, i32 15
  %233 = load i8, i8* %232, align 1, !range !5
  %234 = icmp eq i8 %233, 0
  %235 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %231, i64 0, i32 5, i32 0
  %236 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %235, align 8
  br i1 %234, label %244, label %237

237:                                              ; preds = %230
  %238 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %236, i64 0, i32 5
  %239 = load i32, i32* %238, align 4
  %240 = trunc i32 %239 to i8
  %241 = icmp sgt i8 %240, -1
  br i1 %241, label %242, label %244

242:                                              ; preds = %237
  %243 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 16
  store i8 0, i8* %243, align 2
  br label %296

244:                                              ; preds = %230, %237
  %245 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %236, i64 0, i32 7, i32 0
  %246 = bitcast i32* %245 to <4 x i32>*
  %247 = load <4 x i32>, <4 x i32>* %246, align 4
  %248 = bitcast <4 x i32>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %248) #10
  %249 = getelementptr inbounds <4 x i32>, <4 x i32>* %13, i64 0, i64 0
  %250 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %14, i64 0, i32 1
  store <4 x i32> %247, <4 x i32>* %13, align 16
  %251 = load i8, i8* %156, align 4, !range !5
  %252 = icmp eq i8 %251, 1
  br i1 %252, label %254, label %253, !prof !16

253:                                              ; preds = %244
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !17
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !18
  unreachable

254:                                              ; preds = %244
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %14, %struct.FX_RECT* dereferenceable(16) %180) #10
  %255 = bitcast <4 x i32>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %255) #10
  %256 = bitcast <4 x i32>* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %256, i8 -86, i64 16, i1 false)
  %257 = load i8, i8* %156, align 4, !range !5
  %258 = icmp eq i8 %257, 1
  br i1 %258, label %260, label %259, !prof !16

259:                                              ; preds = %254
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !19
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #10, !srcloc !20
  unreachable

260:                                              ; preds = %254
  %261 = bitcast %struct.FX_RECT* %180 to <2 x i32>*
  %262 = load <2 x i32>, <2 x i32>* %261, align 4
  %263 = shufflevector <2 x i32> %262, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %264 = load <4 x i32>, <4 x i32>* %13, align 16
  %265 = sub nsw <4 x i32> %264, %263
  store <4 x i32> %265, <4 x i32>* %15, align 16
  %266 = bitcast %"class.fxcrt::RetainPtr.272"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %266) #10
  %267 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %267, align 8
  %268 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %20, align 8
  %269 = load i32, i32* %11, align 4
  %270 = load i32, i32* %12, align 4
  call void @_ZN11CFX_DIBBase9StretchToEiiRK21FXDIB_ResampleOptionsPK7FX_RECT(%"class.fxcrt::RetainPtr.272"* nonnull sret %17, %class.CFX_DIBBase* %268, i32 %269, i32 %270, %struct.FXDIB_ResampleOptions* dereferenceable(4) %69, %struct.FX_RECT* nonnull %16) #10
  %271 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %267, align 8
  %272 = icmp eq %class.CFX_DIBitmap* %271, null
  br i1 %272, label %273, label %274

273:                                              ; preds = %260
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %267, align 8
  br label %295

274:                                              ; preds = %260
  %275 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %60, align 8
  %276 = load i32, i32* %249, align 16
  %277 = load i32, i32* %250, align 4
  %278 = load i32, i32* %66, align 4
  %279 = load i32, i32* %64, align 4
  %280 = load i32, i32* %71, align 8
  %281 = getelementptr inbounds %class.CPDF_Transparency, %class.CPDF_Transparency* %18, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %281) #10
  call void @_ZN17CPDF_TransparencyC1Ev(%class.CPDF_Transparency* nonnull %18) #10
  call void @_ZN17CPDF_RenderStatus17CompositeDIBitmapERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiiji9BlendModeRK17CPDF_Transparency(%class.CPDF_RenderStatus* %275, %"class.fxcrt::RetainPtr.272"* nonnull dereferenceable(8) %17, i32 %276, i32 %277, i32 %278, i32 %279, i32 %280, %class.CPDF_Transparency* nonnull dereferenceable(2) %18) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %281) #10
  %282 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %267, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %267, align 8
  %283 = icmp eq %class.CFX_DIBitmap* %282, null
  br i1 %283, label %295, label %284

284:                                              ; preds = %274
  %285 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %282, i64 0, i32 0, i32 0, i32 1
  %286 = load i64, i64* %285, align 8
  %287 = add nsw i64 %286, -1
  store i64 %287, i64* %285, align 8
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %289, label %295

289:                                              ; preds = %284
  %290 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %282, i64 0, i32 0, i32 0
  %291 = bitcast %class.CFX_DIBitmap* %282 to void (%"class.fxcrt::Retainable"*)***
  %292 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %291, align 8
  %293 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %292, i64 1
  %294 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %293, align 8
  call void %294(%"class.fxcrt::Retainable"* nonnull %290) #10
  br label %295

295:                                              ; preds = %273, %274, %284, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %266) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %255) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %248) #10
  br label %296

296:                                              ; preds = %220, %191, %173, %295, %242
  %297 = phi i1 [ true, %242 ], [ false, %295 ], [ false, %173 ], [ false, %191 ], [ false, %220 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %179) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %178) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %177) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %176) #10
  br label %298

298:                                              ; preds = %172, %296
  %299 = phi i1 [ %297, %296 ], [ false, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %156) #10
  br label %300

300:                                              ; preds = %34, %42, %26, %46, %74, %298, %152, %110, %78
  %301 = phi i1 [ true, %78 ], [ false, %110 ], [ %154, %152 ], [ %299, %298 ], [ false, %74 ], [ false, %46 ], [ false, %26 ], [ false, %42 ], [ false, %34 ]
  ret i1 %301
}

declare %class.CPDF_Document* @_ZNK9CPDF_Page11GetDocumentEv(%class.CPDF_Page*) unnamed_addr #1

declare %class.CPDF_Dictionary* @_ZN11CPDF_Stream7GetDictEv(%class.CPDF_Stream*) unnamed_addr #1

declare %class.CPDF_Object* @_ZN15CPDF_Dictionary18GetDirectObjectForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #2

declare %class.CPDF_DocPageData* @_ZN16CPDF_DocPageData12FromDocumentEPK13CPDF_Document(%class.CPDF_Document*) local_unnamed_addr #1

declare void @_ZN16CPDF_DocPageData13GetColorSpaceEPK11CPDF_ObjectPK15CPDF_Dictionary(%"class.fxcrt::RetainPtr.344"* sret, %class.CPDF_DocPageData*, %class.CPDF_Object*, %class.CPDF_Dictionary*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ImageRenderer5StartEP17CPDF_RenderStatusP16CPDF_ImageObjectRK10CFX_Matrixb9BlendMode(%class.CPDF_ImageRenderer*, %class.CPDF_RenderStatus*, %class.CPDF_ImageObject*, %class.CFX_Matrix* nocapture readonly dereferenceable(24), i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca { i64, i64 }, align 8
  %9 = alloca %"class.fxcrt::RetainPtr.489", align 8
  %10 = zext i1 %4 to i8
  %11 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  store %class.CPDF_RenderStatus* %1, %class.CPDF_RenderStatus** %11, align 8
  %12 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 15
  store i8 %10, i8* %12, align 1
  %13 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 1, i32 0
  store %class.CPDF_ImageObject* %2, %class.CPDF_ImageObject** %13, align 8
  %14 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 11
  store i32 %5, i32* %14, align 8
  %15 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 4
  %16 = bitcast %class.CFX_Matrix* %15 to i8*
  %17 = bitcast %class.CFX_Matrix* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 24, i1 false)
  %18 = bitcast %"class.fxcrt::RetainPtr.489"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  call void @_ZNK16CPDF_ImageObject8GetImageEv(%"class.fxcrt::RetainPtr.489"* nonnull sret %9, %class.CPDF_ImageObject* %2) #10
  %19 = getelementptr inbounds %"class.fxcrt::RetainPtr.489", %"class.fxcrt::RetainPtr.489"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %class.CPDF_Image*, %class.CPDF_Image** %19, align 8
  %21 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %20, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %22 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %21, align 8
  store %class.CPDF_Image* null, %class.CPDF_Image** %19, align 8
  %23 = icmp eq %class.CPDF_Image* %20, null
  br i1 %23, label %35, label %24

24:                                               ; preds = %6
  %25 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %20, i64 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = add nsw i64 %26, -1
  store i64 %27, i64* %25, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %24
  %30 = getelementptr inbounds %class.CPDF_Image, %class.CPDF_Image* %20, i64 0, i32 0
  %31 = bitcast %class.CPDF_Image* %20 to void (%"class.fxcrt::Retainable"*)***
  %32 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %32, i64 1
  %34 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, align 8
  call void %34(%"class.fxcrt::Retainable"* nonnull %30) #10
  br label %35

35:                                               ; preds = %6, %24, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %36 = icmp eq %class.CPDF_Dictionary* %22, null
  br i1 %36, label %44, label %37

37:                                               ; preds = %35
  %38 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %11, align 8
  %39 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %38, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %40 = load %class.CPDF_OCContext*, %class.CPDF_OCContext** %39, align 8
  %41 = icmp eq %class.CPDF_OCContext* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  %43 = call zeroext i1 @_ZNK14CPDF_OCContext15CheckOCGVisibleEPK15CPDF_Dictionary(%class.CPDF_OCContext* nonnull %40, %class.CPDF_Dictionary* nonnull %22) #10
  br i1 %43, label %44, label %129

44:                                               ; preds = %37, %35, %42
  %45 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %13, align 8
  %46 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %45, i64 0, i32 1, i32 0
  %47 = load float, float* %46, align 4, !noalias !21
  %48 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %45, i64 0, i32 1, i32 1
  %49 = load float, float* %48, align 4, !noalias !21
  %50 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 2
  %51 = bitcast %class.CFX_Matrix* %3 to <2 x float>*
  %52 = load <2 x float>, <2 x float>* %51, align 4, !noalias !21
  %53 = shufflevector <2 x float> %52, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %54 = bitcast float* %50 to <2 x float>*
  %55 = load <2 x float>, <2 x float>* %54, align 4, !noalias !21
  %56 = shufflevector <2 x float> %55, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %57 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %45, i64 0, i32 1, i32 2
  %58 = load float, float* %57, align 4, !noalias !21
  %59 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %45, i64 0, i32 1, i32 3
  %60 = load float, float* %59, align 4, !noalias !21
  %61 = insertelement <4 x float> undef, float %47, i32 0
  %62 = shufflevector <4 x float> %61, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %63 = extractelement <2 x float> %52, i32 0
  %64 = extractelement <2 x float> %52, i32 1
  %65 = shufflevector <4 x float> %62, <4 x float> %53, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %66 = insertelement <4 x float> undef, float %63, i32 0
  %67 = insertelement <4 x float> %66, float %64, i32 1
  %68 = insertelement <4 x float> %67, float %58, i32 2
  %69 = insertelement <4 x float> %68, float %58, i32 3
  %70 = fmul <4 x float> %65, %69
  %71 = insertelement <4 x float> undef, float %49, i32 0
  %72 = shufflevector <4 x float> %71, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %73 = extractelement <2 x float> %55, i32 0
  %74 = extractelement <2 x float> %55, i32 1
  %75 = shufflevector <4 x float> %72, <4 x float> %56, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %76 = insertelement <4 x float> undef, float %73, i32 0
  %77 = insertelement <4 x float> %76, float %74, i32 1
  %78 = insertelement <4 x float> %77, float %60, i32 2
  %79 = insertelement <4 x float> %78, float %60, i32 3
  %80 = fmul <4 x float> %75, %79
  %81 = fadd <4 x float> %70, %80
  %82 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %45, i64 0, i32 1, i32 4
  %83 = load float, float* %82, align 4, !noalias !21
  %84 = fmul float %63, %83
  %85 = getelementptr inbounds %class.CPDF_ImageObject, %class.CPDF_ImageObject* %45, i64 0, i32 1, i32 5
  %86 = load float, float* %85, align 4, !noalias !21
  %87 = fmul float %73, %86
  %88 = fadd float %84, %87
  %89 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 4
  %90 = load float, float* %89, align 4, !noalias !21
  %91 = fadd float %90, %88
  %92 = fmul float %64, %83
  %93 = fmul float %74, %86
  %94 = fadd float %92, %93
  %95 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %3, i64 0, i32 5
  %96 = load float, float* %95, align 4, !noalias !21
  %97 = fadd float %94, %96
  %98 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5, i32 0
  %99 = bitcast float* %98 to <4 x float>*
  store <4 x float> %81, <4 x float>* %99, align 8
  %100 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5, i32 4
  store float %91, float* %100, align 8
  %101 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5, i32 5
  store float %97, float* %101, align 4
  %102 = bitcast { <2 x float>, <2 x float> }* %7 to %class.CFX_FloatRect*
  %103 = bitcast { i64, i64 }* %8 to %struct.FX_RECT*
  %104 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #10, !noalias !24
  %105 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5
  %106 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix11GetUnitRectEv(%class.CFX_Matrix* %105) #10, !noalias !24
  %107 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %108 = extractvalue { <2 x float>, <2 x float> } %106, 0
  store <2 x float> %108, <2 x float>* %107, align 8, !noalias !24
  %109 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %110 = extractvalue { <2 x float>, <2 x float> } %106, 1
  store <2 x float> %110, <2 x float>* %109, align 8, !noalias !24
  %111 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #10, !noalias !24
  %112 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %113 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %102) #10, !noalias !24
  %114 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %115 = extractvalue { i64, i64 } %113, 0
  store i64 %115, i64* %114, align 8, !noalias !24
  %116 = extractvalue { i64, i64 } %113, 1
  store i64 %116, i64* %112, align 8, !noalias !24
  %117 = call zeroext i1 @_ZNK7FX_RECT5ValidEv(%struct.FX_RECT* nonnull %103) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #10, !noalias !24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #10, !noalias !24
  br i1 %117, label %118, label %127

118:                                              ; preds = %44
  %119 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 6
  %120 = load %class.CPDF_ImageObject*, %class.CPDF_ImageObject** %13, align 8
  %121 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %11, align 8
  %122 = load i8, i8* %12, align 1, !range !5
  %123 = icmp ne i8 %122, 0
  %124 = call zeroext i1 @_ZN16CPDF_ImageLoader5StartEPK16CPDF_ImageObjectPK17CPDF_RenderStatusb(%class.CPDF_ImageLoader* %119, %class.CPDF_ImageObject* %120, %class.CPDF_RenderStatus* %121, i1 zeroext %123) #10
  br i1 %124, label %125, label %127

125:                                              ; preds = %118
  %126 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 9
  store i32 1, i32* %126, align 8
  br label %129

127:                                              ; preds = %44, %118
  %128 = call zeroext i1 @_ZN18CPDF_ImageRenderer18StartRenderDIBBaseEv(%class.CPDF_ImageRenderer* %0)
  br label %129

129:                                              ; preds = %125, %42, %127
  %130 = phi i1 [ %128, %127 ], [ false, %42 ], [ true, %125 ]
  ret i1 %130
}

declare zeroext i1 @_ZNK14CPDF_OCContext15CheckOCGVisibleEPK15CPDF_Dictionary(%class.CPDF_OCContext*, %class.CPDF_Dictionary*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ImageRenderer5StartEP17CPDF_RenderStatusRKN5fxcrt9RetainPtrI11CFX_DIBBaseEEjRK10CFX_MatrixRK21FXDIB_ResampleOptionsb(%class.CPDF_ImageRenderer*, %class.CPDF_RenderStatus*, %"class.fxcrt::RetainPtr.493"* nocapture readonly dereferenceable(8), i32, %class.CFX_Matrix* nocapture readonly dereferenceable(24), %struct.FXDIB_ResampleOptions* nocapture readonly dereferenceable(4), i1 zeroext) local_unnamed_addr #0 align 2 {
  %8 = zext i1 %6 to i8
  %9 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  store %class.CPDF_RenderStatus* %1, %class.CPDF_RenderStatus** %9, align 8
  %10 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %10, align 8
  %12 = getelementptr inbounds %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %12, align 8
  %14 = icmp eq %class.CFX_DIBBase* %11, %13
  br i1 %14, label %36, label %15

15:                                               ; preds = %7
  %16 = icmp eq %class.CFX_DIBBase* %13, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %13, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, 1
  store i64 %20, i64* %18, align 8
  %21 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %10, align 8
  br label %22

22:                                               ; preds = %17, %15
  %23 = phi %class.CFX_DIBBase* [ %21, %17 ], [ %11, %15 ]
  store %class.CFX_DIBBase* %13, %class.CFX_DIBBase** %10, align 8
  %24 = icmp eq %class.CFX_DIBBase* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %23, i64 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add nsw i64 %27, -1
  store i64 %28, i64* %26, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %23, i64 0, i32 0
  %32 = bitcast %class.CFX_DIBBase* %23 to void (%"class.fxcrt::Retainable"*)***
  %33 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %33, i64 1
  %35 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %34, align 8
  tail call void %35(%"class.fxcrt::Retainable"* nonnull %31) #10
  br label %36

36:                                               ; preds = %7, %22, %25, %30
  %37 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 12
  store i32 %3, i32* %37, align 4
  %38 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 10
  store i32 255, i32* %38, align 4
  %39 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5
  %40 = bitcast %class.CFX_Matrix* %39 to i8*
  %41 = bitcast %class.CFX_Matrix* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 4 %41, i64 24, i1 false)
  %42 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 13, i32 0
  %43 = bitcast %struct.FXDIB_ResampleOptions* %5 to i32*
  %44 = bitcast i8* %42 to i32*
  %45 = load i32, i32* %43, align 1
  store i32 %45, i32* %44, align 8
  %46 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 15
  store i8 %8, i8* %46, align 1
  %47 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 11
  store i32 0, i32* %47, align 8
  %48 = tail call zeroext i1 @_ZN18CPDF_ImageRenderer12StartDIBBaseEv(%class.CPDF_ImageRenderer* %0)
  ret i1 %48
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK18CPDF_ImageRenderer10NotDrawingEv(%class.CPDF_ImageRenderer* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %3 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %2, align 8
  %4 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %3, i64 0, i32 15
  %5 = load i8, i8* %4, align 1, !range !5
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %3, i64 0, i32 5, i32 0
  %9 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %8, align 8
  %10 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %9, i64 0, i32 5
  %11 = load i32, i32* %10, align 4
  %12 = trunc i32 %11 to i8
  %13 = icmp sgt i8 %12, -1
  br label %14

14:                                               ; preds = %1, %7
  %15 = phi i1 [ false, %1 ], [ %13, %7 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK18CPDF_ImageRenderer11GetDrawRectEv(%class.CPDF_ImageRenderer*) local_unnamed_addr #0 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %struct.FX_RECT*
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %class.CFX_FloatRect*
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %7 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5
  %9 = tail call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix11GetUnitRectEv(%class.CFX_Matrix* %8) #10
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %11 = extractvalue { <2 x float>, <2 x float> } %9, 0
  store <2 x float> %11, <2 x float>* %10, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %13 = extractvalue { <2 x float>, <2 x float> } %9, 1
  store <2 x float> %13, <2 x float>* %12, align 8
  %14 = call { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect* nonnull %5) #10
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %16 = extractvalue { i64, i64 } %14, 0
  store i64 %16, i64* %15, align 8
  %17 = extractvalue { i64, i64 } %14, 1
  store i64 %17, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  %18 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %19 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %18, align 8
  %20 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %19, i64 0, i32 5, i32 0
  %21 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %20, align 8
  %22 = getelementptr inbounds %class.CFX_RenderDevice, %class.CFX_RenderDevice* %21, i64 0, i32 7
  call void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT* nonnull %3, %struct.FX_RECT* dereferenceable(16) %22) #10
  %23 = load i64, i64* %15, align 8
  %24 = insertvalue { i64, i64 } undef, i64 %23, 0
  %25 = load i64, i64* %6, align 8
  %26 = insertvalue { i64, i64 } %24, i64 %25, 1
  ret { i64, i64 } %26
}

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix11GetUnitRectEv(%class.CFX_Matrix*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK13CFX_FloatRect12GetOuterRectEv(%class.CFX_FloatRect*) local_unnamed_addr #1

declare void @_ZN7FX_RECT9IntersectERKS_(%struct.FX_RECT*, %struct.FX_RECT* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18CPDF_ImageRenderer13GetDrawMatrixERK7FX_RECT(%class.CFX_Matrix* noalias sret, %class.CPDF_ImageRenderer* nocapture readonly, %struct.FX_RECT* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %1, i64 0, i32 5
  %5 = bitcast %class.CFX_Matrix* %0 to i8*
  %6 = bitcast %class.CFX_Matrix* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 8 %6, i64 24, i1 false)
  %7 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = sub nsw i32 0, %8
  %10 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %2, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = sub nsw i32 0, %11
  %13 = sitofp i32 %9 to float
  %14 = sitofp i32 %12 to float
  tail call void @_ZN10CFX_Matrix9TranslateEff(%class.CFX_Matrix* %0, float %13, float %14) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK18CPDF_ImageRenderer18CalculateDrawImageEP23CFX_DefaultRenderDeviceS1_RKN5fxcrt9RetainPtrI11CFX_DIBBaseEERK10CFX_MatrixRK7FX_RECT(%class.CPDF_ImageRenderer* nocapture readonly, %class.CFX_DefaultRenderDevice*, %class.CFX_DefaultRenderDevice*, %"class.fxcrt::RetainPtr.493"* nocapture readonly dereferenceable(8), %class.CFX_Matrix* nocapture readonly dereferenceable(24), %struct.FX_RECT* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.CPDF_RenderStatus, align 8
  %8 = alloca %class.CPDF_ImageRenderer, align 8
  %9 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %10 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %11 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %7, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %11) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 getelementptr inbounds (<{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr" }, %"class.fxcrt::RetainPtr.161", %"class.fxcrt::RetainPtr.161", %"class.std::__1::vector.167", %"class.fxcrt::UnownedPtr.175", %"class.fxcrt::UnownedPtr.271", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.306", %"class.fxcrt::UnownedPtr.306", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.481", %"class.fxcrt::UnownedPtr.487", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>, <{ { i8, i8, %"struct.CPDF_RenderOptions::Options", %"struct.CPDF_RenderOptions::ColorScheme", [4 x i8], %"class.fxcrt::RetainPtr" }, %"class.fxcrt::RetainPtr.161", %"class.fxcrt::RetainPtr.161", %"class.std::__1::vector.167", %"class.fxcrt::UnownedPtr.175", %"class.fxcrt::UnownedPtr.271", %class.CFX_Matrix, %class.CPDF_ClipPath, %"class.fxcrt::UnownedPtr.306", %"class.fxcrt::UnownedPtr.306", %class.CPDF_GraphicStates, %"class.std::__1::unique_ptr.481", %"class.fxcrt::UnownedPtr.487", %class.CPDF_Transparency, i8, i8, i8, i8, i8, i8, i32, i32, i32, [4 x i8] }>* @__const._ZN18CPDF_ImageRenderer15DrawMaskedImageEv.bitmap_render, i64 0, i32 0, i32 0), i64 232, i1 false)
  %12 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %13 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %12, align 8
  %14 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %13, i64 0, i32 4, i32 0
  %15 = load %class.CPDF_RenderContext*, %class.CPDF_RenderContext** %14, align 8
  %16 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %2, i64 0, i32 0
  call void @_ZN17CPDF_RenderStatusC1EP18CPDF_RenderContextP16CFX_RenderDevice(%class.CPDF_RenderStatus* nonnull %7, %class.CPDF_RenderContext* %15, %class.CFX_RenderDevice* %16) #10
  %17 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %12, align 8
  %18 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %17, i64 0, i32 16
  %19 = load i8, i8* %18, align 4, !range !5
  %20 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %7, i64 0, i32 16
  store i8 %19, i8* %20, align 4
  %21 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %7, i64 0, i32 17
  store i8 1, i8* %21, align 1
  call void @_ZN17CPDF_RenderStatus10InitializeEPKS_PK18CPDF_GraphicStates(%class.CPDF_RenderStatus* nonnull %7, %class.CPDF_RenderStatus* null, %class.CPDF_GraphicStates* null) #10
  %22 = bitcast %class.CPDF_ImageRenderer* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %22) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* align 8 bitcast (<{ %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.488", %"class.fxcrt::RetainPtr.329", %"class.fxcrt::RetainPtr.493", %class.CFX_Matrix, %class.CFX_Matrix, { i32, i8, [3 x i8], %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493", %"class.fxcrt::UnownedPtr.176", %"class.fxcrt::UnownedPtr.513" }, %"class.std::__1::unique_ptr.514", %"class.std::__1::unique_ptr.533", i32, i32, i32, i32, %struct.FXDIB_ResampleOptions, i8, i8, i8, i8 }>* @__const._ZN18CPDF_ImageRenderer15DrawMaskedImageEv.image_render to i8*), i64 160, i1 false)
  %23 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 4, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 32, i1 false) #10
  %24 = bitcast float* %23 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %24, align 8
  %25 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 4, i32 4
  %26 = bitcast float* %25 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %26, align 8
  %27 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 5, i32 2
  %28 = bitcast float* %27 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %28, align 8
  %29 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 6
  call void @_ZN16CPDF_ImageLoaderC1Ev(%class.CPDF_ImageLoader* %29) #10
  %30 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 7
  %31 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 13
  %32 = bitcast %"class.std::__1::unique_ptr.514"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 32, i1 false) #10
  call void @_ZN21FXDIB_ResampleOptionsC1Ev(%struct.FXDIB_ResampleOptions* %31) #10
  %33 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 14
  store i8 0, i8* %33, align 4
  %34 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 15
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 16
  store i8 1, i8* %35, align 2
  %36 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 13
  %37 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 0, i32 0
  store %class.CPDF_RenderStatus* %7, %class.CPDF_RenderStatus** %37, align 8
  %38 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %39 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %38, align 8
  %40 = getelementptr inbounds %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %40, align 8
  %42 = icmp eq %class.CFX_DIBBase* %39, %41
  br i1 %42, label %64, label %43

43:                                               ; preds = %6
  %44 = icmp eq %class.CFX_DIBBase* %41, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %41, i64 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %47, 1
  store i64 %48, i64* %46, align 8
  %49 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %38, align 8
  br label %50

50:                                               ; preds = %45, %43
  %51 = phi %class.CFX_DIBBase* [ %49, %45 ], [ %39, %43 ]
  store %class.CFX_DIBBase* %41, %class.CFX_DIBBase** %38, align 8
  %52 = icmp eq %class.CFX_DIBBase* %51, null
  br i1 %52, label %64, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %51, i64 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = add nsw i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %53
  %59 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %51, i64 0, i32 0
  %60 = bitcast %class.CFX_DIBBase* %51 to void (%"class.fxcrt::Retainable"*)***
  %61 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %61, i64 1
  %63 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %62, align 8
  call void %63(%"class.fxcrt::Retainable"* nonnull %59) #10
  br label %64

64:                                               ; preds = %6, %50, %53, %58
  %65 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 12
  store i32 -1, i32* %65, align 4
  %66 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 10
  store i32 255, i32* %66, align 4
  %67 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 5
  %68 = bitcast %class.CFX_Matrix* %67 to i8*
  %69 = bitcast %class.CFX_Matrix* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 4 %69, i64 24, i1 false) #10
  %70 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 13, i32 0
  %71 = bitcast %struct.FXDIB_ResampleOptions* %36 to i32*
  %72 = bitcast i8* %70 to i32*
  %73 = load i32, i32* %71, align 1
  store i32 %73, i32* %72, align 8
  store i8 1, i8* %34, align 1
  %74 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %8, i64 0, i32 11
  store i32 0, i32* %74, align 8
  %75 = call zeroext i1 @_ZN18CPDF_ImageRenderer12StartDIBBaseEv(%class.CPDF_ImageRenderer* nonnull %8) #10
  br i1 %75, label %76, label %78

76:                                               ; preds = %64
  %77 = call zeroext i1 @_ZN18CPDF_ImageRenderer8ContinueEP19PauseIndicatorIface(%class.CPDF_ImageRenderer* nonnull %8, %class.PauseIndicatorIface* null)
  br label %78

78:                                               ; preds = %76, %64
  %79 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 6, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %208, label %82

82:                                               ; preds = %78
  %83 = lshr i32 %80, 16
  %84 = and i32 %83, 255
  %85 = lshr i32 %80, 8
  %86 = and i32 %85, 255
  %87 = and i32 %80, 255
  %88 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %5, i64 0, i32 3
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %5, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp sgt i32 %89, %91
  br i1 %92, label %93, label %208

93:                                               ; preds = %82
  %94 = bitcast %"class.fxcrt::RetainPtr.272"* %9 to i8*
  %95 = getelementptr inbounds %class.CFX_DefaultRenderDevice, %class.CFX_DefaultRenderDevice* %1, i64 0, i32 0
  %96 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.fxcrt::RetainPtr.272"* %10 to i8*
  %98 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %5, i64 0, i32 2
  %100 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %5, i64 0, i32 0
  br label %101

101:                                              ; preds = %93, %147
  %102 = phi i32 [ 0, %93 ], [ %148, %147 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #10
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %9, %class.CFX_RenderDevice* %95) #10
  %103 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %96, align 8
  %104 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %103, i64 0, i32 0
  %105 = bitcast %class.CFX_DIBitmap* %103 to i8* (%class.CFX_DIBBase*, i32)***
  %106 = load i8* (%class.CFX_DIBBase*, i32)**, i8* (%class.CFX_DIBBase*, i32)*** %105, align 8
  %107 = getelementptr inbounds i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %106, i64 3
  %108 = load i8* (%class.CFX_DIBBase*, i32)*, i8* (%class.CFX_DIBBase*, i32)** %107, align 8
  %109 = call i8* %108(%class.CFX_DIBBase* %104, i32 %102) #10
  %110 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %96, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %96, align 8
  %111 = icmp eq %class.CFX_DIBitmap* %110, null
  br i1 %111, label %123, label %112

112:                                              ; preds = %101
  %113 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %110, i64 0, i32 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = add nsw i64 %114, -1
  store i64 %115, i64* %113, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %123

117:                                              ; preds = %112
  %118 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %110, i64 0, i32 0, i32 0
  %119 = bitcast %class.CFX_DIBitmap* %110 to void (%"class.fxcrt::Retainable"*)***
  %120 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %120, i64 1
  %122 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %121, align 8
  call void %122(%"class.fxcrt::Retainable"* nonnull %118) #10
  br label %123

123:                                              ; preds = %101, %112, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #10
  call void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %10, %class.CFX_RenderDevice* %16) #10
  %124 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %98, align 8
  %125 = bitcast %class.CFX_DIBitmap* %124 to i8* (%class.CFX_DIBitmap*, i32)***
  %126 = load i8* (%class.CFX_DIBitmap*, i32)**, i8* (%class.CFX_DIBitmap*, i32)*** %125, align 8
  %127 = getelementptr inbounds i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %126, i64 3
  %128 = load i8* (%class.CFX_DIBitmap*, i32)*, i8* (%class.CFX_DIBitmap*, i32)** %127, align 8
  %129 = call i8* %128(%class.CFX_DIBitmap* %124, i32 %102) #10
  %130 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %98, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %98, align 8
  %131 = icmp eq %class.CFX_DIBitmap* %130, null
  br i1 %131, label %143, label %132

132:                                              ; preds = %123
  %133 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %130, i64 0, i32 0, i32 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = add nsw i64 %134, -1
  store i64 %135, i64* %133, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %143

137:                                              ; preds = %132
  %138 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %130, i64 0, i32 0, i32 0
  %139 = bitcast %class.CFX_DIBitmap* %130 to void (%"class.fxcrt::Retainable"*)***
  %140 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %139, align 8
  %141 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %140, i64 1
  %142 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %141, align 8
  call void %142(%"class.fxcrt::Retainable"* nonnull %138) #10
  br label %143

143:                                              ; preds = %123, %132, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #10
  %144 = load i32, i32* %99, align 4
  %145 = load i32, i32* %100, align 4
  %146 = icmp sgt i32 %144, %145
  br i1 %146, label %153, label %147

147:                                              ; preds = %201, %143
  %148 = add nuw nsw i32 %102, 1
  %149 = load i32, i32* %88, align 4
  %150 = load i32, i32* %90, align 4
  %151 = sub nsw i32 %149, %150
  %152 = icmp slt i32 %148, %151
  br i1 %152, label %101, label %208

153:                                              ; preds = %143, %201
  %154 = phi i32 [ %202, %201 ], [ %145, %143 ]
  %155 = phi i32 [ %203, %201 ], [ %144, %143 ]
  %156 = phi i32 [ %205, %201 ], [ 0, %143 ]
  %157 = phi i8* [ %159, %201 ], [ %129, %143 ]
  %158 = phi i8* [ %204, %201 ], [ %109, %143 ]
  %159 = getelementptr inbounds i8, i8* %157, i64 1
  %160 = load i8, i8* %157, align 1
  %161 = zext i8 %160 to i32
  %162 = icmp eq i8 %160, 0
  br i1 %162, label %201, label %163

163:                                              ; preds = %153
  %164 = load i8, i8* %158, align 1
  %165 = zext i8 %164 to i32
  %166 = sub nsw i32 %165, %87
  %167 = mul nsw i32 %166, 255
  %168 = sdiv i32 %167, %161
  %169 = add nsw i32 %168, %87
  %170 = icmp sgt i32 %169, 0
  %171 = select i1 %170, i32 %169, i32 0
  %172 = icmp slt i32 %171, 255
  %173 = select i1 %172, i32 %171, i32 255
  %174 = trunc i32 %173 to i8
  %175 = getelementptr inbounds i8, i8* %158, i64 1
  store i8 %174, i8* %158, align 1
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = sub nsw i32 %177, %86
  %179 = mul nsw i32 %178, 255
  %180 = sdiv i32 %179, %161
  %181 = add nsw i32 %180, %86
  %182 = icmp sgt i32 %181, 0
  %183 = select i1 %182, i32 %181, i32 0
  %184 = icmp slt i32 %183, 255
  %185 = select i1 %184, i32 %183, i32 255
  %186 = trunc i32 %185 to i8
  %187 = getelementptr inbounds i8, i8* %158, i64 2
  store i8 %186, i8* %175, align 1
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = sub nsw i32 %189, %84
  %191 = mul nsw i32 %190, 255
  %192 = sdiv i32 %191, %161
  %193 = add nsw i32 %192, %84
  %194 = icmp sgt i32 %193, 0
  %195 = select i1 %194, i32 %193, i32 0
  %196 = icmp slt i32 %195, 255
  %197 = select i1 %196, i32 %195, i32 255
  %198 = trunc i32 %197 to i8
  store i8 %198, i8* %187, align 1
  %199 = load i32, i32* %99, align 4
  %200 = load i32, i32* %100, align 4
  br label %201

201:                                              ; preds = %153, %163
  %202 = phi i32 [ %154, %153 ], [ %200, %163 ]
  %203 = phi i32 [ %155, %153 ], [ %199, %163 ]
  %204 = getelementptr inbounds i8, i8* %158, i64 4
  %205 = add nuw nsw i32 %156, 1
  %206 = sub nsw i32 %203, %202
  %207 = icmp slt i32 %205, %206
  br i1 %207, label %153, label %147

208:                                              ; preds = %147, %82, %78
  call void @_ZN18CPDF_ImageRendererD2Ev(%class.CPDF_ImageRenderer* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %22) #10
  call void @_ZN17CPDF_RenderStatusD1Ev(%class.CPDF_RenderStatus* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %11) #10
  ret void
}

declare void @_ZN17CPDF_RenderStatusC1EP18CPDF_RenderContextP16CFX_RenderDevice(%class.CPDF_RenderStatus*, %class.CPDF_RenderContext*, %class.CFX_RenderDevice*) unnamed_addr #1

declare void @_ZN17CPDF_RenderStatus10InitializeEPKS_PK18CPDF_GraphicStates(%class.CPDF_RenderStatus*, %class.CPDF_RenderStatus*, %class.CPDF_GraphicStates*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ImageRenderer8ContinueEP19PauseIndicatorIface(%class.CPDF_ImageRenderer*, %class.PauseIndicatorIface*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 9
  %4 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 6
  %5 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %6 = load i32, i32* %3, align 8
  br label %7

7:                                                ; preds = %14, %2
  %8 = phi i32 [ %15, %14 ], [ %6, %2 ]
  switch i32 %8, label %26 [
    i32 3, label %24
    i32 1, label %9
    i32 2, label %17
  ]

9:                                                ; preds = %7
  %10 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %5, align 8
  %11 = tail call zeroext i1 @_ZN16CPDF_ImageLoader8ContinueEP19PauseIndicatorIfaceP17CPDF_RenderStatus(%class.CPDF_ImageLoader* %4, %class.PauseIndicatorIface* %1, %class.CPDF_RenderStatus* %10) #10
  br i1 %11, label %26, label %12

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @_ZN18CPDF_ImageRenderer18StartRenderDIBBaseEv(%class.CPDF_ImageRenderer* %0) #10
  br i1 %13, label %14, label %26

14:                                               ; preds = %12
  %15 = load i32, i32* %3, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %26, label %7

17:                                               ; preds = %7
  %18 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %5, align 8
  %19 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %18, i64 0, i32 5, i32 0
  %20 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %19, align 8
  %21 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %22 = load %class.CFX_ImageRenderer*, %class.CFX_ImageRenderer** %21, align 8
  %23 = tail call zeroext i1 @_ZN16CFX_RenderDevice14ContinueDIBitsEP17CFX_ImageRendererP19PauseIndicatorIface(%class.CFX_RenderDevice* %20, %class.CFX_ImageRenderer* %22, %class.PauseIndicatorIface* %1) #10
  br label %26

24:                                               ; preds = %7
  %25 = tail call zeroext i1 @_ZN18CPDF_ImageRenderer17ContinueTransformEP19PauseIndicatorIface(%class.CPDF_ImageRenderer* %0, %class.PauseIndicatorIface* %1)
  br label %26

26:                                               ; preds = %14, %12, %9, %7, %24, %17
  %27 = phi i1 [ %25, %24 ], [ %23, %17 ], [ false, %14 ], [ false, %12 ], [ true, %9 ], [ false, %7 ]
  ret i1 %27
}

declare void @_ZNK16CFX_RenderDevice9GetBitmapEv(%"class.fxcrt::RetainPtr.272"* sret, %class.CFX_RenderDevice*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN17CPDF_RenderStatusD1Ev(%class.CPDF_RenderStatus*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN23CFX_DefaultRenderDeviceC1Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #1

declare zeroext i1 @_ZN23CFX_DefaultRenderDevice6CreateEii12FXDIB_FormatRKN5fxcrt9RetainPtrI12CFX_DIBitmapEE(%class.CFX_DefaultRenderDevice*, i32, i32, i16 zeroext, %"class.fxcrt::RetainPtr.272"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN12CFX_DIBitmap5ClearEj(%class.CFX_DIBitmap*, i32) local_unnamed_addr #1

declare void @_ZN10CFX_Matrix9TranslateEff(%class.CFX_Matrix*, float, float) local_unnamed_addr #1

declare void @_ZN17CPDF_RenderStatus17DrawTilingPatternEP18CPDF_TilingPatternP15CPDF_PageObjectRK10CFX_Matrixb(%class.CPDF_RenderStatus*, %class.CPDF_TilingPattern*, %class.CPDF_PageObject*, %class.CFX_Matrix* dereferenceable(24), i1 zeroext) local_unnamed_addr #1

declare void @_ZN17CPDF_RenderStatus18DrawShadingPatternEP19CPDF_ShadingPatternPK15CPDF_PageObjectRK10CFX_Matrixb(%class.CPDF_RenderStatus*, %class.CPDF_ShadingPattern*, %class.CPDF_PageObject*, %class.CFX_Matrix* dereferenceable(24), i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN12CFX_DIBitmap13ConvertFormatE12FXDIB_Format(%class.CFX_DIBitmap*, i16 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN12CFX_DIBitmap13MultiplyAlphaERKN5fxcrt9RetainPtrI11CFX_DIBBaseEE(%class.CFX_DIBitmap*, %"class.fxcrt::RetainPtr.493"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN12CFX_DIBitmap13MultiplyAlphaEi(%class.CFX_DIBitmap*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.493"* dereferenceable(8), i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN23CFX_DefaultRenderDeviceD1Ev(%class.CFX_DefaultRenderDevice*) unnamed_addr #2

declare zeroext i1 @_ZN16CFX_RenderDevice20StartDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEijRK10CFX_MatrixRK21FXDIB_ResampleOptionsPNSt3__110unique_ptrI17CFX_ImageRendererNSC_14default_deleteISE_EEEE9BlendMode(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.493"* dereferenceable(8), i32, i32, %class.CFX_Matrix* dereferenceable(24), %struct.FXDIB_ResampleOptions* dereferenceable(4), %"class.std::__1::unique_ptr.533"*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZNK18CPDF_ImageRenderer25GetDimensionsFromUnitRectERK7FX_RECTPiS3_S3_S3_(%class.CPDF_ImageRenderer* nocapture readonly, %struct.FX_RECT* nocapture readonly dereferenceable(16), i32* nocapture, i32* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #5 align 2 {
  %7 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sub nsw i32 %8, %10
  %12 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.FX_RECT, %struct.FX_RECT* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %13, %15
  %17 = icmp slt i32 %11, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %6
  %19 = zext i32 %11 to i64
  %20 = shl nuw i64 %19, 32
  %21 = or i64 %20, 2863311361
  br label %39

22:                                               ; preds = %6
  %23 = tail call i1 @llvm.is.constant.i32(i32 %11) #10
  br i1 %23, label %24, label %27

24:                                               ; preds = %22
  %25 = sub i32 0, %11
  %26 = icmp ne i32 %25, -2147483648
  br label %32

27:                                               ; preds = %22
  %28 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %11) #10
  %29 = extractvalue { i32, i1 } %28, 1
  %30 = extractvalue { i32, i1 } %28, 0
  %31 = xor i1 %29, true
  br label %32

32:                                               ; preds = %27, %24
  %33 = phi i32 [ %25, %24 ], [ %30, %27 ]
  %34 = phi i1 [ %26, %24 ], [ %31, %27 ]
  %35 = zext i32 %33 to i64
  %36 = shl nuw i64 %35, 32
  %37 = zext i1 %34 to i64
  %38 = or i64 %36, %37
  br label %39

39:                                               ; preds = %18, %32
  %40 = phi i64 [ %38, %32 ], [ %21, %18 ]
  %41 = trunc i64 %40 to i8
  %42 = lshr i64 %40, 32
  %43 = trunc i64 %42 to i32
  %44 = icmp eq i8 %41, 0
  %45 = icmp sgt i32 %43, 268435455
  %46 = or i1 %44, %45
  br i1 %46, label %155, label %47

47:                                               ; preds = %39
  %48 = icmp slt i32 %16, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %47
  %50 = zext i32 %16 to i64
  %51 = shl nuw i64 %50, 32
  %52 = or i64 %51, 2863311361
  br label %70

53:                                               ; preds = %47
  %54 = tail call i1 @llvm.is.constant.i32(i32 %16) #10
  br i1 %54, label %55, label %58

55:                                               ; preds = %53
  %56 = sub i32 0, %16
  %57 = icmp ne i32 %56, -2147483648
  br label %63

58:                                               ; preds = %53
  %59 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %16) #10
  %60 = extractvalue { i32, i1 } %59, 1
  %61 = extractvalue { i32, i1 } %59, 0
  %62 = xor i1 %60, true
  br label %63

63:                                               ; preds = %58, %55
  %64 = phi i32 [ %56, %55 ], [ %61, %58 ]
  %65 = phi i1 [ %57, %55 ], [ %62, %58 ]
  %66 = zext i32 %64 to i64
  %67 = shl nuw i64 %66, 32
  %68 = zext i1 %65 to i64
  %69 = or i64 %67, %68
  br label %70

70:                                               ; preds = %49, %63
  %71 = phi i64 [ %69, %63 ], [ %52, %49 ]
  %72 = trunc i64 %71 to i8
  %73 = lshr i64 %71, 32
  %74 = trunc i64 %73 to i32
  %75 = icmp eq i8 %72, 0
  %76 = icmp sgt i32 %74, 268435455
  %77 = or i1 %75, %76
  br i1 %77, label %155, label %78

78:                                               ; preds = %70
  %79 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5, i32 0
  %80 = load float, float* %79, align 8
  %81 = fcmp olt float %80, 0.000000e+00
  %82 = sub nsw i32 0, %11
  %83 = select i1 %81, i32 %82, i32 %11
  %84 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 5, i32 3
  %85 = load float, float* %84, align 4
  %86 = fcmp ogt float %85, 0.000000e+00
  %87 = sub nsw i32 0, %16
  %88 = select i1 %86, i32 %87, i32 %16
  %89 = icmp sgt i32 %83, 0
  %90 = select i1 %89, i32 %10, i32 %8
  %91 = icmp sgt i32 %88, 0
  %92 = select i1 %91, i32 %15, i32 %13
  %93 = icmp slt i32 %90, 0
  br i1 %93, label %98, label %94

94:                                               ; preds = %78
  %95 = zext i32 %90 to i64
  %96 = shl nuw i64 %95, 32
  %97 = or i64 %96, 2863311361
  br label %115

98:                                               ; preds = %78
  %99 = tail call i1 @llvm.is.constant.i32(i32 %90) #10
  br i1 %99, label %100, label %103

100:                                              ; preds = %98
  %101 = sub i32 0, %90
  %102 = icmp ne i32 %101, -2147483648
  br label %108

103:                                              ; preds = %98
  %104 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %90) #10
  %105 = extractvalue { i32, i1 } %104, 1
  %106 = extractvalue { i32, i1 } %104, 0
  %107 = xor i1 %105, true
  br label %108

108:                                              ; preds = %103, %100
  %109 = phi i32 [ %101, %100 ], [ %106, %103 ]
  %110 = phi i1 [ %102, %100 ], [ %107, %103 ]
  %111 = zext i32 %109 to i64
  %112 = shl nuw i64 %111, 32
  %113 = zext i1 %110 to i64
  %114 = or i64 %112, %113
  br label %115

115:                                              ; preds = %94, %108
  %116 = phi i64 [ %114, %108 ], [ %97, %94 ]
  %117 = trunc i64 %116 to i8
  %118 = lshr i64 %116, 32
  %119 = trunc i64 %118 to i32
  %120 = icmp eq i8 %117, 0
  %121 = icmp sgt i32 %119, 268435455
  %122 = or i1 %120, %121
  br i1 %122, label %155, label %123

123:                                              ; preds = %115
  %124 = icmp slt i32 %92, 0
  br i1 %124, label %129, label %125

125:                                              ; preds = %123
  %126 = zext i32 %92 to i64
  %127 = shl nuw i64 %126, 32
  %128 = or i64 %127, 2863311361
  br label %146

129:                                              ; preds = %123
  %130 = tail call i1 @llvm.is.constant.i32(i32 %92) #10
  br i1 %130, label %131, label %134

131:                                              ; preds = %129
  %132 = sub i32 0, %92
  %133 = icmp ne i32 %132, -2147483648
  br label %139

134:                                              ; preds = %129
  %135 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %92) #10
  %136 = extractvalue { i32, i1 } %135, 1
  %137 = extractvalue { i32, i1 } %135, 0
  %138 = xor i1 %136, true
  br label %139

139:                                              ; preds = %134, %131
  %140 = phi i32 [ %132, %131 ], [ %137, %134 ]
  %141 = phi i1 [ %133, %131 ], [ %138, %134 ]
  %142 = zext i32 %140 to i64
  %143 = shl nuw i64 %142, 32
  %144 = zext i1 %141 to i64
  %145 = or i64 %143, %144
  br label %146

146:                                              ; preds = %125, %139
  %147 = phi i64 [ %145, %139 ], [ %128, %125 ]
  %148 = trunc i64 %147 to i8
  %149 = lshr i64 %147, 32
  %150 = trunc i64 %149 to i32
  %151 = icmp eq i8 %148, 0
  %152 = icmp sgt i32 %150, 268435455
  %153 = or i1 %151, %152
  br i1 %153, label %155, label %154

154:                                              ; preds = %146
  store i32 %90, i32* %2, align 4
  store i32 %92, i32* %3, align 4
  store i32 %83, i32* %4, align 4
  store i32 %88, i32* %5, align 4
  br label %155

155:                                              ; preds = %154, %146, %115, %39, %70
  %156 = phi i1 [ false, %70 ], [ false, %39 ], [ true, %154 ], [ false, %146 ], [ false, %115 ]
  ret i1 %156
}

declare zeroext i1 @_ZN16CFX_RenderDevice30StretchDIBitsWithFlagsAndBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiiRK21FXDIB_ResampleOptions9BlendMode(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.493"* dereferenceable(8), i32, i32, i32, i32, %struct.FXDIB_ResampleOptions* dereferenceable(4), i32) local_unnamed_addr #1

declare zeroext i1 @_ZN16CFX_RenderDevice23StretchBitMaskWithFlagsERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiijRK21FXDIB_ResampleOptions(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.493"* dereferenceable(8), i32, i32, i32, i32, i32, %struct.FXDIB_ResampleOptions* dereferenceable(4)) local_unnamed_addr #1

declare void @_ZN11CFX_DIBBase9StretchToEiiRK21FXDIB_ResampleOptionsPK7FX_RECT(%"class.fxcrt::RetainPtr.272"* sret, %class.CFX_DIBBase*, i32, i32, %struct.FXDIB_ResampleOptions* dereferenceable(4), %struct.FX_RECT*) local_unnamed_addr #1

declare void @_ZN17CPDF_RenderStatus17CompositeDIBitmapERKN5fxcrt9RetainPtrI12CFX_DIBitmapEEiiji9BlendModeRK17CPDF_Transparency(%class.CPDF_RenderStatus*, %"class.fxcrt::RetainPtr.272"* dereferenceable(8), i32, i32, i32, i32, i32, %class.CPDF_Transparency* dereferenceable(2)) local_unnamed_addr #1

declare void @_ZN17CPDF_TransparencyC1Ev(%class.CPDF_Transparency*) unnamed_addr #1

declare void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData*) unnamed_addr #1

declare void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData*, float, float, float, float) local_unnamed_addr #1

declare void @_ZN12CFX_PathData9TransformERK10CFX_Matrix(%class.CFX_PathData*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZN16CFX_RenderDevice8DrawPathEPK12CFX_PathDataPK10CFX_MatrixPK18CFX_GraphStateDatajjRK21CFX_FillRenderOptions(%class.CFX_RenderDevice*, %class.CFX_PathData*, %class.CFX_Matrix*, %class.CFX_GraphStateData*, i32, i32, %struct.CFX_FillRenderOptions* dereferenceable(2)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData*) unnamed_addr #2

declare void @_ZNK11CFX_DIBBase14CloneAlphaMaskEv(%"class.fxcrt::RetainPtr.272"* sret, %class.CFX_DIBBase*) local_unnamed_addr #1

declare void @_ZN11CFX_DIBBase11TransformToERK10CFX_MatrixPiS3_(%"class.fxcrt::RetainPtr.272"* sret, %class.CFX_DIBBase*, %class.CFX_Matrix* dereferenceable(24), i32*, i32*) local_unnamed_addr #1

declare zeroext i1 @_ZN16CFX_RenderDevice10SetBitMaskERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiij(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.493"* dereferenceable(8), i32, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN16CFX_RenderDevice14StretchBitMaskERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiiiij(%class.CFX_RenderDevice*, %"class.fxcrt::RetainPtr.493"* dereferenceable(8), i32, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ImageRenderer15ContinueDefaultEP19PauseIndicatorIface(%class.CPDF_ImageRenderer*, %class.PauseIndicatorIface*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 6
  %4 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %5 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %4, align 8
  %6 = tail call zeroext i1 @_ZN16CPDF_ImageLoader8ContinueEP19PauseIndicatorIfaceP17CPDF_RenderStatus(%class.CPDF_ImageLoader* %3, %class.PauseIndicatorIface* %1, %class.CPDF_RenderStatus* %5) #10
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = tail call zeroext i1 @_ZN18CPDF_ImageRenderer18StartRenderDIBBaseEv(%class.CPDF_ImageRenderer* %0)
  br i1 %8, label %9, label %15

9:                                                ; preds = %7
  %10 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 9
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = tail call zeroext i1 @_ZN18CPDF_ImageRenderer8ContinueEP19PauseIndicatorIface(%class.CPDF_ImageRenderer* %0, %class.PauseIndicatorIface* %1)
  br label %15

15:                                               ; preds = %9, %7, %2, %13
  %16 = phi i1 [ %14, %13 ], [ true, %2 ], [ false, %7 ], [ false, %9 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ImageRenderer13ContinueBlendEP19PauseIndicatorIface(%class.CPDF_ImageRenderer* nocapture readonly, %class.PauseIndicatorIface*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %4 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %3, align 8
  %5 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %4, i64 0, i32 5, i32 0
  %6 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %5, align 8
  %7 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %8 = load %class.CFX_ImageRenderer*, %class.CFX_ImageRenderer** %7, align 8
  %9 = tail call zeroext i1 @_ZN16CFX_RenderDevice14ContinueDIBitsEP17CFX_ImageRendererP19PauseIndicatorIface(%class.CFX_RenderDevice* %6, %class.CFX_ImageRenderer* %8, %class.PauseIndicatorIface* %1) #10
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN18CPDF_ImageRenderer17ContinueTransformEP19PauseIndicatorIface(%class.CPDF_ImageRenderer* nocapture, %class.PauseIndicatorIface*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr.272", align 8
  %4 = alloca %"class.fxcrt::RetainPtr.493", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.493", align 8
  %6 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %7 = load %class.CFX_ImageTransformer*, %class.CFX_ImageTransformer** %6, align 8
  %8 = tail call zeroext i1 @_ZN20CFX_ImageTransformer8ContinueEP19PauseIndicatorIface(%class.CFX_ImageTransformer* %7, %class.PauseIndicatorIface* %1) #10
  br i1 %8, label %128, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.fxcrt::RetainPtr.272"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.fxcrt::RetainPtr.272", %"class.fxcrt::RetainPtr.272"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CFX_DIBitmap* inttoptr (i64 -6148914691236517206 to %class.CFX_DIBitmap*), %class.CFX_DIBitmap** %11, align 8
  %12 = load %class.CFX_ImageTransformer*, %class.CFX_ImageTransformer** %6, align 8
  call void @_ZN20CFX_ImageTransformer12DetachBitmapEv(%"class.fxcrt::RetainPtr.272"* nonnull sret %3, %class.CFX_ImageTransformer* %12) #10
  %13 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %11, align 8
  %14 = icmp eq %class.CFX_DIBitmap* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %11, align 8
  br label %127

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %13, i64 0, i32 0, i32 1
  %18 = load i16, i16* %17, align 8
  %19 = and i16 %18, 256
  %20 = icmp eq i16 %19, 0
  %21 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 10
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 255
  br i1 %20, label %69, label %24

24:                                               ; preds = %16
  br i1 %23, label %25, label %34

25:                                               ; preds = %24
  %26 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 12
  %27 = load i32, i32* %26, align 4
  %28 = lshr i32 %27, 24
  %29 = mul i32 %28, %22
  %30 = udiv i32 %29, 255
  %31 = shl i32 %30, 24
  %32 = and i32 %27, 16777215
  %33 = or i32 %31, %32
  store i32 %33, i32* %26, align 4
  br label %34

34:                                               ; preds = %25, %24
  %35 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %36 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %35, align 8
  %37 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %36, i64 0, i32 5, i32 0
  %38 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %37, align 8
  %39 = bitcast %"class.fxcrt::RetainPtr.493"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = ptrtoint %class.CFX_DIBitmap* %13 to i64
  %41 = bitcast %"class.fxcrt::RetainPtr.493"* %4 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %13, i64 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, 1
  store i64 %44, i64* %42, align 8
  %45 = load %class.CFX_ImageTransformer*, %class.CFX_ImageTransformer** %6, align 8
  %46 = getelementptr inbounds %class.CFX_ImageTransformer, %class.CFX_ImageTransformer* %45, i64 0, i32 3, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %class.CFX_ImageTransformer, %class.CFX_ImageTransformer* %45, i64 0, i32 3, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 12
  %51 = load i32, i32* %50, align 4
  %52 = call zeroext i1 @_ZN16CFX_RenderDevice10SetBitMaskERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEiij(%class.CFX_RenderDevice* %38, %"class.fxcrt::RetainPtr.493"* nonnull dereferenceable(8) %4, i32 %47, i32 %49, i32 %51) #10
  %53 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 16
  %54 = zext i1 %52 to i8
  store i8 %54, i8* %53, align 2
  %55 = getelementptr inbounds %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %55, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %55, align 8
  %57 = icmp eq %class.CFX_DIBBase* %56, null
  br i1 %57, label %112, label %58

58:                                               ; preds = %34
  %59 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %56, i64 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = add nsw i64 %60, -1
  store i64 %61, i64* %59, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %112

63:                                               ; preds = %58
  %64 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %56, i64 0, i32 0
  %65 = bitcast %class.CFX_DIBBase* %56 to void (%"class.fxcrt::Retainable"*)***
  %66 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %66, i64 1
  %68 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %67, align 8
  call void %68(%"class.fxcrt::Retainable"* nonnull %64) #10
  br label %112

69:                                               ; preds = %16
  br i1 %23, label %70, label %73

70:                                               ; preds = %69
  %71 = call zeroext i1 @_ZN12CFX_DIBitmap13MultiplyAlphaEi(%class.CFX_DIBitmap* nonnull %13, i32 %22) #10
  %72 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %11, align 8
  br label %73

73:                                               ; preds = %70, %69
  %74 = phi %class.CFX_DIBitmap* [ %72, %70 ], [ %13, %69 ]
  %75 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 0, i32 0
  %76 = load %class.CPDF_RenderStatus*, %class.CPDF_RenderStatus** %75, align 8
  %77 = getelementptr inbounds %class.CPDF_RenderStatus, %class.CPDF_RenderStatus* %76, i64 0, i32 5, i32 0
  %78 = load %class.CFX_RenderDevice*, %class.CFX_RenderDevice** %77, align 8
  %79 = bitcast %"class.fxcrt::RetainPtr.493"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #10
  %80 = ptrtoint %class.CFX_DIBitmap* %74 to i64
  %81 = bitcast %"class.fxcrt::RetainPtr.493"* %5 to i64*
  store i64 %80, i64* %81, align 8
  %82 = icmp eq %class.CFX_DIBitmap* %74, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %74, i64 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  %86 = add nsw i64 %85, 1
  store i64 %86, i64* %84, align 8
  br label %87

87:                                               ; preds = %73, %83
  %88 = load %class.CFX_ImageTransformer*, %class.CFX_ImageTransformer** %6, align 8
  %89 = getelementptr inbounds %class.CFX_ImageTransformer, %class.CFX_ImageTransformer* %88, i64 0, i32 3, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %class.CFX_ImageTransformer, %class.CFX_ImageTransformer* %88, i64 0, i32 3, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 11
  %94 = load i32, i32* %93, align 8
  %95 = call zeroext i1 @_ZN16CFX_RenderDevice18SetDIBitsWithBlendERKN5fxcrt9RetainPtrI11CFX_DIBBaseEEii9BlendMode(%class.CFX_RenderDevice* %78, %"class.fxcrt::RetainPtr.493"* nonnull dereferenceable(8) %5, i32 %90, i32 %92, i32 %94) #10
  %96 = getelementptr inbounds %class.CPDF_ImageRenderer, %class.CPDF_ImageRenderer* %0, i64 0, i32 16
  %97 = zext i1 %95 to i8
  store i8 %97, i8* %96, align 2
  %98 = getelementptr inbounds %"class.fxcrt::RetainPtr.493", %"class.fxcrt::RetainPtr.493"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %class.CFX_DIBBase*, %class.CFX_DIBBase** %98, align 8
  store %class.CFX_DIBBase* null, %class.CFX_DIBBase** %98, align 8
  %100 = icmp eq %class.CFX_DIBBase* %99, null
  br i1 %100, label %112, label %101

101:                                              ; preds = %87
  %102 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %99, i64 0, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = add nsw i64 %103, -1
  store i64 %104, i64* %102, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %112

106:                                              ; preds = %101
  %107 = getelementptr inbounds %class.CFX_DIBBase, %class.CFX_DIBBase* %99, i64 0, i32 0
  %108 = bitcast %class.CFX_DIBBase* %99 to void (%"class.fxcrt::Retainable"*)***
  %109 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %109, i64 1
  %111 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %110, align 8
  call void %111(%"class.fxcrt::Retainable"* nonnull %107) #10
  br label %112

112:                                              ; preds = %106, %101, %87, %63, %58, %34
  %113 = phi i8* [ %39, %34 ], [ %39, %58 ], [ %39, %63 ], [ %79, %87 ], [ %79, %101 ], [ %79, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #10
  %114 = load %class.CFX_DIBitmap*, %class.CFX_DIBitmap** %11, align 8
  store %class.CFX_DIBitmap* null, %class.CFX_DIBitmap** %11, align 8
  %115 = icmp eq %class.CFX_DIBitmap* %114, null
  br i1 %115, label %127, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %114, i64 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  %119 = add nsw i64 %118, -1
  store i64 %119, i64* %117, align 8
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %127

121:                                              ; preds = %116
  %122 = getelementptr inbounds %class.CFX_DIBitmap, %class.CFX_DIBitmap* %114, i64 0, i32 0, i32 0
  %123 = bitcast %class.CFX_DIBitmap* %114 to void (%"class.fxcrt::Retainable"*)***
  %124 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %123, align 8
  %125 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %124, i64 1
  %126 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %125, align 8
  call void %126(%"class.fxcrt::Retainable"* nonnull %122) #10
  br label %127

127:                                              ; preds = %15, %112, %116, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #10
  br label %128

128:                                              ; preds = %2, %127
  %129 = phi i1 [ false, %127 ], [ true, %2 ]
  ret i1 %129
}

declare zeroext i1 @_ZN16CPDF_ImageLoader8ContinueEP19PauseIndicatorIfaceP17CPDF_RenderStatus(%class.CPDF_ImageLoader*, %class.PauseIndicatorIface*, %class.CPDF_RenderStatus*) local_unnamed_addr #1

declare zeroext i1 @_ZN16CFX_RenderDevice14ContinueDIBitsEP17CFX_ImageRendererP19PauseIndicatorIface(%class.CFX_RenderDevice*, %class.CFX_ImageRenderer*, %class.PauseIndicatorIface*) local_unnamed_addr #1

declare zeroext i1 @_ZN20CFX_ImageTransformer8ContinueEP19PauseIndicatorIface(%class.CFX_ImageTransformer*, %class.PauseIndicatorIface*) local_unnamed_addr #1

declare void @_ZN20CFX_ImageTransformer12DetachBitmapEv(%"class.fxcrt::RetainPtr.272"* sret, %class.CFX_ImageTransformer*) local_unnamed_addr #1

declare void @_Z15GetDecoderArrayPK15CPDF_Dictionary(%"class.pdfium::Optional.624"* sret, %class.CPDF_Dictionary*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK7FX_RECT5ValidEv(%struct.FX_RECT*) local_unnamed_addr #1

declare i32 @_ZNK17CPDF_RenderStatus19GetFillArgbInternalEP15CPDF_PageObjectb(%class.CPDF_RenderStatus*, %class.CPDF_PageObject*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #6

; Function Attrs: nounwind
declare void @_ZN20CFX_ImageTransformerD1Ev(%class.CFX_ImageTransformer*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN17CFX_ImageRendererD1Ev(%class.CFX_ImageRenderer*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN20CFX_ImageTransformerC1ERKN5fxcrt9RetainPtrI11CFX_DIBBaseEERK10CFX_MatrixRK21FXDIB_ResampleOptionsPK7FX_RECT(%class.CFX_ImageTransformer*, %"class.fxcrt::RetainPtr.493"* dereferenceable(8), %class.CFX_Matrix* dereferenceable(24), %struct.FXDIB_ResampleOptions* dereferenceable(4), %struct.FX_RECT*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK18CPDF_ImageRenderer11GetUnitRectEv: argument 0"}
!4 = distinct !{!4, !"_ZNK18CPDF_ImageRenderer11GetUnitRectEv"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK18CPDF_ImageRenderer11GetUnitRectEv: argument 0"}
!8 = distinct !{!8, !"_ZNK18CPDF_ImageRenderer11GetUnitRectEv"}
!9 = !{!"branch_weights", i32 1, i32 4001}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK18CPDF_ImageRenderer11GetUnitRectEv: argument 0"}
!12 = distinct !{!12, !"_ZNK18CPDF_ImageRenderer11GetUnitRectEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK18CPDF_ImageRenderer11GetUnitRectEv: argument 0"}
!15 = distinct !{!15, !"_ZNK18CPDF_ImageRenderer11GetUnitRectEv"}
!16 = !{!"branch_weights", i32 2000, i32 1}
!17 = !{i32 -2143840935}
!18 = !{i32 -2143840914}
!19 = !{i32 -2143843720}
!20 = !{i32 -2143843699}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!23 = distinct !{!23, !"_ZNK10CFX_MatrixmlERKS_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK18CPDF_ImageRenderer11GetUnitRectEv: argument 0"}
!26 = distinct !{!26, !"_ZNK18CPDF_ImageRenderer11GetUnitRectEv"}
