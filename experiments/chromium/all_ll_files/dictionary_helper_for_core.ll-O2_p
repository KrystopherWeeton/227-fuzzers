; ModuleID = '../../third_party/blink/renderer/bindings/core/v8/dictionary_helper_for_core.cc'
source_filename = "../../third_party/blink/renderer/bindings/core/v8/dictionary_helper_for_core.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.26" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.573", i32, i32, %"class.blink::Persistent.575" }
%"class.WTF::RefCounted.573" = type { %"class.base::RefCounted.574" }
%"class.base::RefCounted.574" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent.575" = type { %"class.blink::PersistentBase.576" }
%"class.blink::PersistentBase.576" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.579" }
%"class.blink::HeapHashMap.579" = type { %"class.WTF::HashMap.582" }
%"class.WTF::HashMap.582" = type { %"class.WTF::HashTable.583" }
%"class.WTF::HashTable.583" = type <{ %"struct.WTF::KeyValuePair.585"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.585" = type { %"class.blink::WeakMember.586", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.353", i32, [4 x i8], %"class.std::__1::unique_ptr.491", %"class.std::__1::unique_ptr.491", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.502", %"class.std::__1::unique_ptr.508", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.520", %"class.std::__1::unique_ptr.526", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.68", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.353" = type { %"class.std::__1::__compressed_pair.354" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.355" }
%"struct.std::__1::__compressed_pair_elem.355" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.356", %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.368", %"class.std::__1::unique_ptr.374", %"class.std::__1::unique_ptr.380", %"class.std::__1::unique_ptr.386", %"class.std::__1::unique_ptr.397", %"class.std::__1::unique_ptr.404", %"class.std::__1::unique_ptr.404", %"class.std::__1::unique_ptr.411", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.425", %"class.std::__1::unique_ptr.432", %"class.std::__1::unique_ptr.439", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.471", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.389" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.389" = type { %"struct.std::__1::__atomic_base.390" }
%"struct.std::__1::__atomic_base.390" = type { %"struct.std::__1::__atomic_base.391" }
%"struct.std::__1::__atomic_base.391" = type { %"struct.std::__1::__cxx_atomic_impl.392" }
%"struct.std::__1::__cxx_atomic_impl.392" = type { %"struct.std::__1::__cxx_atomic_base_impl.393" }
%"struct.std::__1::__cxx_atomic_base_impl.393" = type { i64 }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::Worklist.400"* }
%"class.blink::Worklist.400" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.389" }
%"class.std::__1::unique_ptr.404" = type { %"class.std::__1::__compressed_pair.405" }
%"class.std::__1::__compressed_pair.405" = type { %"struct.std::__1::__compressed_pair_elem.406" }
%"struct.std::__1::__compressed_pair_elem.406" = type { %"class.blink::Worklist.407"* }
%"class.blink::Worklist.407" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.389" }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::Worklist.414"* }
%"class.blink::Worklist.414" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.389" }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.blink::Worklist.421"* }
%"class.blink::Worklist.421" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.389" }
%"class.std::__1::unique_ptr.425" = type { %"class.std::__1::__compressed_pair.426" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.427" }
%"struct.std::__1::__compressed_pair_elem.427" = type { %"class.blink::Worklist.428"* }
%"class.blink::Worklist.428" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.389" }
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.blink::Worklist.435"* }
%"class.blink::Worklist.435" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.389" }
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.blink::Worklist.442"* }
%"class.blink::Worklist.442" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.389" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.449", %"class.std::__1::__compressed_pair.457", %"class.std::__1::__compressed_pair.462", %"class.std::__1::__compressed_pair.464", [4 x i8] }>
%"class.std::__1::unique_ptr.449" = type { %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451", %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { i64 }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { float }
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.474", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.483" }
%"class.WTF::Vector.483" = type { %"class.WTF::VectorBuffer.484" }
%"class.WTF::VectorBuffer.484" = type { %"class.WTF::VectorBufferBase.485" }
%"class.WTF::VectorBufferBase.485" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.499" }
%"class.WTF::VectorBuffer.499" = type { %"class.WTF::VectorBufferBase.500" }
%"class.WTF::VectorBufferBase.500" = type { %"struct.std::__1::pair.501"*, i32, i32 }
%"struct.std::__1::pair.501" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.514" }
%"class.std::__1::unique_ptr.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.400"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.407"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.414"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.421"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.428"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.563", i64 }
%"class.std::__1::vector.563" = type { %"class.std::__1::__vector_base.564" }
%"class.std::__1::__vector_base.564" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.565" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.526" = type { %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.532 }
%class.scoped_refptr.532 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::Dictionary" = type { %"class.v8::Isolate"*, i32, %"class.v8::Local" }
%"class.v8::Local" = type { %"class.v8::Object"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.v8::Local.1" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::V8StringResource" = type { %"class.v8::Local.1", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.266" }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { i8* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.14", %"class.blink::Member.16", %"class.blink::Member.18", %"class.blink::Member.20", i8, %"class.WTF::Vector.22" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.9" }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::HeapVector.11"* }
%"class.blink::HeapVector.11" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.12"* }
%"class.WTF::Vector.12" = type opaque
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.209", %"class.blink::Member.211", %"class.blink::Member", i8, i32, i8, i32, %"class.blink::Member.213", %"class.blink::Member.16", %"class.blink::FrameLifecycle", %"class.blink::Member.14", %"class.blink::Member.14", %"class.blink::Member.14", %"class.blink::Member.14", %"class.blink::Member.14", %"class.blink::Member.14", %"class.blink::Member.215", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.223", i8, %"class.base::UnguessableToken", %"class.absl::optional.225", %"class.absl::optional.230", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.14", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.209" = type { %"class.blink::MemberBase.210" }
%"class.blink::MemberBase.210" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.211" = type { %"class.blink::MemberBase.212" }
%"class.blink::MemberBase.212" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.215" = type { %"class.blink::MemberBase.216" }
%"class.blink::MemberBase.216" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.14", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.217"*, %"struct.std::__1::pair.217"*, %"class.std::__1::__compressed_pair.218" }
%"struct.std::__1::pair.217" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.std::__1::pair.217"* }
%"class.blink::Member.223" = type { %"class.blink::MemberBase.224" }
%"class.blink::MemberBase.224" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.225" = type { %"class.absl::optional_internal::optional_data.226" }
%"class.absl::optional_internal::optional_data.226" = type { %"class.absl::optional_internal::optional_data_base.227" }
%"class.absl::optional_internal::optional_data_base.227" = type { %"class.absl::optional_internal::optional_data_dtor_base.228" }
%"class.absl::optional_internal::optional_data_dtor_base.228" = type { i8, %union.anon.229 }
%union.anon.229 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.230" = type { %"class.absl::optional_internal::optional_data.231" }
%"class.absl::optional_internal::optional_data.231" = type { %"class.absl::optional_internal::optional_data_base.232" }
%"class.absl::optional_internal::optional_data_base.232" = type { %"class.absl::optional_internal::optional_data_dtor_base.233" }
%"class.absl::optional_internal::optional_data_dtor_base.233" = type { i8, %union.anon.234 }
%union.anon.234 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.235 }
%class.scoped_refptr.235 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.22" = type { %"class.WTF::VectorBuffer.23" }
%"class.WTF::VectorBuffer.23" = type { %"class.WTF::VectorBufferBase.24" }
%"class.WTF::VectorBufferBase.24" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.198" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.25, %"class.std::__1::unique_ptr.148", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.31, i32 }>
%class.scoped_refptr.25 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.31, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.110", %"class.absl::optional.115", %"class.absl::optional.72", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.139", i8, [7 x i8], %class.scoped_refptr.31, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.26" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.48 }
%class.scoped_refptr.48 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.49", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.49" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.50" }
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl.53" }
%"struct.std::__1::__cxx_atomic_impl.53" = type { %"struct.std::__1::__cxx_atomic_base_impl.54" }
%"struct.std::__1::__cxx_atomic_base_impl.54" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.31, %"class.std::__1::unique_ptr.57", %"class.absl::optional", %"struct.std::__1::atomic.68", i8, i8, i8, i8, i32, i32, %"class.absl::optional.72", %"class.std::__1::unique_ptr.77", i8, i64, %class.scoped_refptr.106, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.109" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.55 }
%class.scoped_refptr.55 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.56", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.56" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.31, i8, %"class.mojo::ScopedHandleBase.60", %class.scoped_refptr.61, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.62" }
%"class.mojo::ScopedHandleBase.60" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.61 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.62" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.66 }
%union.anon.66 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.67", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.67" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.77" = type { %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.80", i8, i64, %class.scoped_refptr.81, %class.scoped_refptr.102 }
%"class.base::RepeatingCallback.80" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.81 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.91", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.82 }
%class.scoped_refptr.82 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::map.91" = type { %"class.std::__1::__tree.92" }
%"class.std::__1::__tree.92" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%class.scoped_refptr.102 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.106 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.206", [4 x i8], %"class.base::RepeatingCallback.151", %class.scoped_refptr.31, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.206" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.151" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.108 }
%class.scoped_refptr.108 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.109" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.110" = type { %"class.absl::optional_internal::optional_data.111" }
%"class.absl::optional_internal::optional_data.111" = type { %"class.absl::optional_internal::optional_data_base.112" }
%"class.absl::optional_internal::optional_data_base.112" = type { %"class.absl::optional_internal::optional_data_dtor_base.113" }
%"class.absl::optional_internal::optional_data_dtor_base.113" = type { i8, %union.anon.114 }
%union.anon.114 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.115" = type { %"class.absl::optional_internal::optional_data.116" }
%"class.absl::optional_internal::optional_data.116" = type { %"class.absl::optional_internal::optional_data_base.117" }
%"class.absl::optional_internal::optional_data_base.117" = type { %"class.absl::optional_internal::optional_data_dtor_base.118" }
%"class.absl::optional_internal::optional_data_dtor_base.118" = type { i8, [7 x i8], %union.anon.119 }
%union.anon.119 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%union.anon.76 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.124 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.124 = type { %"class.std::__1::map.127" }
%"class.std::__1::map.127" = type { %"class.std::__1::__tree.128" }
%"class.std::__1::__tree.128" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.138"*, i64 }
%"class.std::__1::unique_ptr.138" = type opaque
%"class.std::__1::map.139" = type { %"class.std::__1::__tree.140" }
%"class.std::__1::__tree.140" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.141", %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.151", %"class.base::OnceCallback.152", %"class.absl::optional.153", %"class.absl::optional.158", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.165", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.173", %"class.std::__1::map.184", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.193", i8, %class.scoped_refptr.31, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.194" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.152" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.153" = type { %"class.absl::optional_internal::optional_data.154" }
%"class.absl::optional_internal::optional_data.154" = type { %"class.absl::optional_internal::optional_data_base.155" }
%"class.absl::optional_internal::optional_data_base.155" = type { %"class.absl::optional_internal::optional_data_dtor_base.156" }
%"class.absl::optional_internal::optional_data_dtor_base.156" = type { i8, %union.anon.157 }
%union.anon.157 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.158" = type { %"class.absl::optional_internal::optional_data.159" }
%"class.absl::optional_internal::optional_data.159" = type { %"class.absl::optional_internal::optional_data_base.160" }
%"class.absl::optional_internal::optional_data_base.160" = type { %"class.absl::optional_internal::optional_data_dtor_base.161" }
%"class.absl::optional_internal::optional_data_dtor_base.161" = type { i8, %union.anon.162 }
%union.anon.162 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.31, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.163" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.163" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.164 }
%class.scoped_refptr.164 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.168", %class.scoped_refptr.169 }
%"class.base::RepeatingCallback.168" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.169 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.173" = type { %"class.std::__1::__tree.174" }
%"class.std::__1::__tree.174" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.std::__1::map.184" = type { %"class.std::__1::__tree.185" }
%"class.std::__1::__tree.185" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"class.base::OnceCallback.193" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.194" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.31 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.32" }>
%"class.base::RefCountedThreadSafe.32" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.239" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::TrackBase"* }
%"class.blink::TrackBase" = type { %"class.blink::Supplementable", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member.245" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.243" }
%"class.WTF::HashTable.243" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::HTMLMediaElement"* }
%"class.blink::HTMLMediaElement" = type opaque
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.291", %"class.WTF::HashMap.291", %"class.WTF::HashMap.296", %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.347", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.533", %"class.std::__1::unique_ptr.538", %"class.blink::Persistent.544", %"class.blink::Persistent.548", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.273", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.285", i32, i32 }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.291" = type { %"class.WTF::HashTable.292" }
%"class.WTF::HashTable.292" = type <{ %"struct.WTF::KeyValuePair.295"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.295" = type opaque
%"class.WTF::HashMap.296" = type { %"class.WTF::HashTable.297" }
%"class.WTF::HashTable.297" = type <{ %"struct.WTF::KeyValuePair.300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.300" = type opaque
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.309", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.304", i8* }
%"class.WTF::HashMap.304" = type { %"class.WTF::HashTable.305" }
%"class.WTF::HashTable.305" = type <{ %"struct.WTF::KeyValuePair.308"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.308" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.309" = type { %"class.v8::PersistentValueMapBase.310" }
%"class.v8::PersistentValueMapBase.310" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.311", i8* }
%"class.WTF::HashMap.311" = type { %"class.WTF::HashTable.312" }
%"class.WTF::HashTable.312" = type <{ %"struct.WTF::KeyValuePair.315"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.315" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.317" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.316" }
%"class.base::RefCounted.316" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.331", %"class.WTF::Vector.337", i8, i32 }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.WTF::Vector.323"* }
%"class.WTF::Vector.323" = type { %"class.WTF::VectorBuffer.324" }
%"class.WTF::VectorBuffer.324" = type { %"class.WTF::VectorBufferBase.325" }
%"class.WTF::VectorBufferBase.325" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.337" = type { %"class.WTF::VectorBuffer.338" }
%"class.WTF::VectorBuffer.338" = type { %"class.WTF::VectorBufferBase.325", [32 x i8] }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.572, %"class.blink::Member.588", %"class.blink::SelfKeepAlive", %"class.util::TokenType.590" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.572 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType.590" = type { %"class.base::StrongAlias.591" }
%"class.base::StrongAlias.591" = type { %"class.base::UnguessableToken" }
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.544" = type { %"class.blink::PersistentBase.545" }
%"class.blink::PersistentBase.545" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.548" = type { %"class.blink::PersistentBase.549" }
%"class.blink::PersistentBase.549" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.552", i64 }
%"class.blink::HeapVector.552" = type { %"class.WTF::Vector.555" }
%"class.WTF::Vector.555" = type { %"class.WTF::VectorBuffer.556" }
%"class.WTF::VectorBuffer.556" = type { %"class.WTF::VectorBufferBase.557" }
%"class.WTF::VectorBufferBase.557" = type { %"struct.std::__1::pair.558"*, i32, i32 }
%"struct.std::__1::pair.558" = type { %"class.blink::UntracedMember", %"class.blink::Member.560" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.559" }
%"class.blink::MemberBase.559" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::TextTrack" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::TrackBase", %"class.blink::Member.247", %"class.blink::Member.247", %"class.blink::HeapVector.249", %"class.blink::Member.257", %"class.WTF::AtomicString", i32, i32, i32, i32, i8, [7 x i8] }>
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::TextTrackCueList"* }
%"class.blink::TextTrackCueList" = type opaque
%"class.blink::HeapVector.249" = type { %"class.WTF::Vector.252" }
%"class.WTF::Vector.252" = type { %"class.WTF::VectorBuffer.253" }
%"class.WTF::VectorBuffer.253" = type { %"class.WTF::VectorBufferBase.254" }
%"class.WTF::VectorBufferBase.254" = type { %"class.blink::Member.255"*, i32, i32 }
%"class.blink::Member.255" = type opaque
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::TextTrackList"* }
%"class.blink::TextTrackList" = type opaque
%"class.WTF::Vector.259" = type { %"class.WTF::VectorBuffer.260" }
%"class.WTF::VectorBuffer.260" = type { %"class.WTF::VectorBufferBase.261" }
%"class.WTF::VectorBufferBase.261" = type { %"class.WTF::String"*, i32, i32 }
%"class.v8::Array" = type { i8 }
%"class.v8::Integer" = type { i8 }
%"class.blink::ArrayValue" = type { %"class.v8::Local.264", %"class.v8::Isolate"* }
%"class.v8::Local.264" = type { %"class.v8::Array"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.270" }
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Int32" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink13GetStringTypeIN3WTF6StringEEEbRKNS_10DictionaryERKNS1_10StringViewERT_ = comdat any

$_ZN5blink13GetStringTypeIN3WTF12AtomicStringEEEbRKNS_10DictionaryERKNS1_10StringViewERT_ = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRN5blink16V8StringResourceILNS5_20V8StringResourceModeE0EEEEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11V8TextTrack18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetIN2v85LocalINS2_5ValueEEEEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), %"class.v8::Local.1"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = icmp eq %"class.v8::Isolate"* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %5, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %9 = bitcast %"class.v8::String"* %8 to %"class.v8::Value"*
  %10 = tail call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %9, %"class.v8::Local.1"* dereferenceable(8) %2) #9
  br label %11

11:                                               ; preds = %3, %7
  %12 = phi i1 [ false, %3 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetINS_10DictionaryEEEbRKS2_RKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), %"class.blink::Dictionary"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZNK5blink10Dictionary3GetERKN3WTF10StringViewERS0_(%"class.blink::Dictionary"* %0, %"class.WTF::StringView"* dereferenceable(24) %1, %"class.blink::Dictionary"* dereferenceable(24) %2) #9
  ret i1 %4
}

declare zeroext i1 @_ZNK5blink10Dictionary3GetERKN3WTF10StringViewERS0_(%"class.blink::Dictionary"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::Dictionary"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetIbEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), i8* nocapture dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = icmp eq %"class.v8::Isolate"* %8, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %8, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %12 = bitcast %"class.v8::String"* %11 to %"class.v8::Value"*
  %13 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %12, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %16 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %17 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %15, %"class.v8::Isolate"* %16) #9
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %2, align 1
  br label %19

19:                                               ; preds = %3, %10, %14
  %20 = phi i1 [ true, %14 ], [ false, %10 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i1 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetIiEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = icmp eq %"class.v8::Isolate"* %8, null
  br i1 %9, label %24, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %8, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %12 = bitcast %"class.v8::String"* %11 to %"class.v8::Value"*
  %13 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %12, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %16 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %17 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %16) #9
  %18 = call i64 @_ZNK2v85Value10Int32ValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %17) #9
  %19 = trunc i64 %18 to i8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %24, label %21, !prof !2

21:                                               ; preds = %14
  %22 = lshr i64 %18, 32
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %2, align 4
  br label %24

24:                                               ; preds = %3, %21, %14, %10
  %25 = phi i1 [ false, %10 ], [ false, %14 ], [ true, %21 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i1 %25
}

declare i64 @_ZNK2v85Value10Int32ValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetIdEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), double* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = icmp eq %"class.v8::Isolate"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %8, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %12 = bitcast %"class.v8::String"* %11 to %"class.v8::Value"*
  %13 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %12, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %13, label %14, label %23

14:                                               ; preds = %10
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %16 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %17 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %16) #9
  %18 = call { i8, double } @_ZNK2v85Value11NumberValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %17) #9
  %19 = extractvalue { i8, double } %18, 0
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %23, label %21, !prof !2

21:                                               ; preds = %14
  %22 = extractvalue { i8, double } %18, 1
  store double %22, double* %2, align 8
  br label %23

23:                                               ; preds = %3, %21, %14, %10
  %24 = phi i1 [ false, %10 ], [ false, %14 ], [ true, %21 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i1 %24
}

declare { i8, double } @_ZNK2v85Value11NumberValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetIN3WTF6StringEEEbRKNS_10DictionaryERKNS2_10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN5blink13GetStringTypeIN3WTF6StringEEEbRKNS_10DictionaryERKNS1_10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24) %0, %"class.WTF::StringView"* dereferenceable(24) %1, %"class.WTF::String"* dereferenceable(8) %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink13GetStringTypeIN3WTF6StringEEEbRKNS_10DictionaryERKNS1_10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = icmp eq %"class.v8::Isolate"* %9, null
  br i1 %10, label %104, label %11

11:                                               ; preds = %3
  %12 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %9, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %13 = bitcast %"class.v8::String"* %12 to %"class.v8::Value"*
  %14 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %13, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %14, label %15, label %104

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 152, i1 false)
  %17 = bitcast %"class.v8::Local.1"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %24 = bitcast %"class.std::__1::unique_ptr.266"* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #9
  %26 = load %"class.v8::Value"*, %"class.v8::Value"** %19, align 8
  br i1 %25, label %34, label %27

27:                                               ; preds = %15
  %28 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %29 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %28) #9
  %30 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %26, %"class.v8::Context"* %29) #9
  %31 = ptrtoint %"class.v8::String"* %30 to i64
  store i64 %31, i64* %20, align 8
  %32 = icmp eq %"class.v8::String"* %30, null
  %33 = bitcast %"class.v8::String"* %30 to %"class.v8::Value"*
  br i1 %32, label %81, label %34

34:                                               ; preds = %27, %15
  %35 = phi %"class.v8::Value"* [ %33, %27 ], [ %26, %15 ]
  %36 = icmp eq %"class.v8::Value"* %35, null
  br i1 %36, label %41, label %37, !prof !2

37:                                               ; preds = %34
  %38 = bitcast %"class.v8::Value"* %35 to %"class.v8::String"*
  %39 = load i32, i32* %21, align 8
  %40 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %38, i32 %39) #9
  br label %61

41:                                               ; preds = %34
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %61, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %61

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i33
  %53 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #9
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !2

58:                                               ; preds = %49
  call void @llvm.trap() #9
  unreachable

59:                                               ; preds = %49
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %50, align 4
  br label %61

61:                                               ; preds = %37, %41, %44, %59
  %62 = phi %"class.WTF::StringImpl"* [ %40, %37 ], [ null, %41 ], [ %42, %44 ], [ %42, %59 ]
  %63 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  %64 = bitcast %"class.WTF::String"* %2 to i64*
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  store i64 %63, i64* %64, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #9
  br label %81

81:                                               ; preds = %27, %61, %77, %80
  %82 = phi i1 [ false, %27 ], [ true, %80 ], [ true, %77 ], [ true, %61 ]
  %83 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  store i8* null, i8** %83, align 8
  %85 = icmp eq i8* %84, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %81
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %84) #9
  br label %87

87:                                               ; preds = %86, %81
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #9
  br label %103

103:                                              ; preds = %87, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %16) #9
  br label %104

104:                                              ; preds = %3, %11, %103
  %105 = phi i1 [ %82, %103 ], [ false, %11 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret i1 %105
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetIN3WTF12AtomicStringEEEbRKNS_10DictionaryERKNS2_10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN5blink13GetStringTypeIN3WTF12AtomicStringEEEbRKNS_10DictionaryERKNS1_10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24) %0, %"class.WTF::StringView"* dereferenceable(24) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink13GetStringTypeIN3WTF12AtomicStringEEEbRKNS_10DictionaryERKNS1_10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = icmp eq %"class.v8::Isolate"* %9, null
  br i1 %10, label %110, label %11

11:                                               ; preds = %3
  %12 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %9, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %13 = bitcast %"class.v8::String"* %12 to %"class.v8::Value"*
  %14 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %13, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %14, label %15, label %110

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 152, i1 false)
  %17 = bitcast %"class.v8::Local.1"* %4 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %24 = bitcast %"class.std::__1::unique_ptr.266"* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #9
  %26 = load %"class.v8::Value"*, %"class.v8::Value"** %19, align 8
  br i1 %25, label %34, label %27

27:                                               ; preds = %15
  %28 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %29 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %28) #9
  %30 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %26, %"class.v8::Context"* %29) #9
  %31 = ptrtoint %"class.v8::String"* %30 to i64
  store i64 %31, i64* %20, align 8
  %32 = icmp eq %"class.v8::String"* %30, null
  %33 = bitcast %"class.v8::String"* %30 to %"class.v8::Value"*
  br i1 %32, label %87, label %34

34:                                               ; preds = %27, %15
  %35 = phi %"class.v8::Value"* [ %33, %27 ], [ %26, %15 ]
  %36 = icmp eq %"class.v8::Value"* %35, null
  br i1 %36, label %41, label %37, !prof !2

37:                                               ; preds = %34
  %38 = bitcast %"class.v8::Value"* %35 to %"class.v8::String"*
  %39 = load i32, i32* %21, align 8
  %40 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %38, i32 %39) #9
  br label %67

41:                                               ; preds = %34
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %67, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 acquire, align 4
  %47 = and i32 %46, 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %65, label %49

49:                                               ; preds = %44
  %50 = load atomic i32, i32* %45 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %67

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i33
  %57 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %56, i33 1) #9
  %58 = extractvalue { i33, i1 } %57, 1
  %59 = extractvalue { i33, i1 } %57, 0
  %60 = icmp slt i33 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %53
  call void @llvm.trap() #9
  unreachable

63:                                               ; preds = %53
  %64 = trunc i33 %59 to i32
  store i32 %64, i32* %54, align 4
  br label %67

65:                                               ; preds = %44
  %66 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %42) #9
  br label %67

67:                                               ; preds = %37, %41, %49, %63, %65
  %68 = phi %"class.WTF::StringImpl"* [ %40, %37 ], [ %66, %65 ], [ %42, %49 ], [ %42, %63 ], [ null, %41 ]
  %69 = ptrtoint %"class.WTF::StringImpl"* %68 to i64
  %70 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %71 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  store i64 %69, i64* %70, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #9
  br label %87

87:                                               ; preds = %27, %67, %83, %86
  %88 = phi i1 [ false, %27 ], [ true, %86 ], [ true, %83 ], [ true, %67 ]
  %89 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  store i8* null, i8** %89, align 8
  %91 = icmp eq i8* %90, null
  br i1 %91, label %93, label %92

92:                                               ; preds = %87
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %90) #9
  br label %93

93:                                               ; preds = %92, %87
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #9
  br label %109

109:                                              ; preds = %93, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %16) #9
  br label %110

110:                                              ; preds = %3, %11, %109
  %111 = phi i1 [ %88, %109 ], [ false, %11 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret i1 %111
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetIsEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), i16* nocapture dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = icmp eq %"class.v8::Isolate"* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %8, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %12 = bitcast %"class.v8::String"* %11 to %"class.v8::Value"*
  %13 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %12, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %16 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %17 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %16) #9
  %18 = call i64 @_ZNK2v85Value10Int32ValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %17) #9
  %19 = trunc i64 %18 to i8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %14, %10, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  br label %25

22:                                               ; preds = %14
  %23 = lshr i64 %18, 32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %24 = trunc i64 %23 to i16
  store i16 %24, i16* %2, align 2
  br label %25

25:                                               ; preds = %21, %22
  %26 = phi i1 [ true, %22 ], [ false, %21 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetItEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), i16* nocapture dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = icmp eq %"class.v8::Isolate"* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %8, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %12 = bitcast %"class.v8::String"* %11 to %"class.v8::Value"*
  %13 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %12, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %16 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %17 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %16) #9
  %18 = call i64 @_ZNK2v85Value10Int32ValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %17) #9
  %19 = trunc i64 %18 to i8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %14, %10, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  br label %25

22:                                               ; preds = %14
  %23 = lshr i64 %18, 32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %24 = trunc i64 %23 to i16
  store i16 %24, i16* %2, align 2
  br label %25

25:                                               ; preds = %21, %22
  %26 = phi i1 [ true, %22 ], [ false, %21 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetIjEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = icmp eq %"class.v8::Isolate"* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %8, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %12 = bitcast %"class.v8::String"* %11 to %"class.v8::Value"*
  %13 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %12, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %13, label %14, label %21

14:                                               ; preds = %10
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %16 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %17 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %16) #9
  %18 = call i64 @_ZNK2v85Value10Int32ValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %17) #9
  %19 = trunc i64 %18 to i8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %14, %10, %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  br label %25

22:                                               ; preds = %14
  %23 = lshr i64 %18, 32
  %24 = trunc i64 %23 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  store i32 %24, i32* %2, align 4
  br label %25

25:                                               ; preds = %21, %22
  %26 = phi i1 [ true, %22 ], [ false, %21 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetIlEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), i64* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = icmp eq %"class.v8::Isolate"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %8, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %12 = bitcast %"class.v8::String"* %11 to %"class.v8::Value"*
  %13 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %12, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %13, label %14, label %23

14:                                               ; preds = %10
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %16 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %17 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %16) #9
  %18 = call { i8, i64 } @_ZNK2v85Value12IntegerValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %17) #9
  %19 = extractvalue { i8, i64 } %18, 0
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %23, label %21, !prof !2

21:                                               ; preds = %14
  %22 = extractvalue { i8, i64 } %18, 1
  store i64 %22, i64* %2, align 8
  br label %23

23:                                               ; preds = %14, %3, %21, %10
  %24 = phi i1 [ false, %10 ], [ true, %21 ], [ false, %3 ], [ false, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i1 %24
}

declare { i8, i64 } @_ZNK2v85Value12IntegerValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetImEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), i64* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = icmp eq %"class.v8::Isolate"* %8, null
  br i1 %9, label %39, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %8, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %12 = bitcast %"class.v8::String"* %11 to %"class.v8::Value"*
  %13 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %12, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %13, label %14, label %39

14:                                               ; preds = %10
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %16 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %17 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %16) #9
  %18 = call { i8, double } @_ZNK2v85Value11NumberValueENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %17) #9
  %19 = extractvalue { i8, double } %18, 0
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %39, label %21, !prof !2

21:                                               ; preds = %14
  %22 = extractvalue { i8, double } %18, 1
  %23 = fcmp uno double %22, 0.000000e+00
  %24 = call double @llvm.fabs.f64(double %22) #10
  %25 = fcmp oeq double %24, 0x7FF0000000000000
  %26 = or i1 %23, %25
  br i1 %26, label %37, label %27

27:                                               ; preds = %21
  %28 = call double @llvm.trunc.f64(double %22) #9
  %29 = call double @fmod(double %28, double 0x43F0000000000000) #9
  %30 = fcmp ult double %29, 0.000000e+00
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = fptoui double %29 to i64
  br label %37

33:                                               ; preds = %27
  %34 = fsub double -0.000000e+00, %29
  %35 = fptoui double %34 to i64
  %36 = sub i64 0, %35
  br label %37

37:                                               ; preds = %21, %31, %33
  %38 = phi i64 [ 0, %21 ], [ %32, %31 ], [ %36, %33 ]
  store i64 %38, i64* %2, align 8
  br label %39

39:                                               ; preds = %14, %3, %37, %10
  %40 = phi i1 [ false, %10 ], [ true, %37 ], [ false, %3 ], [ false, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetINS_6MemberINS_9DOMWindowEEEEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), %"class.blink::Member"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = icmp eq %"class.v8::Isolate"* %8, null
  br i1 %9, label %25, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %8, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %12 = bitcast %"class.v8::String"* %11 to %"class.v8::Value"*
  %13 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %12, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %13, label %14, label %25

14:                                               ; preds = %10
  %15 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %16 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %17 = call %"class.blink::DOMWindow"* @_ZN5blink11ToDOMWindowEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"* %15, %"class.v8::Value"* %16) #9
  %18 = ptrtoint %"class.blink::DOMWindow"* %17 to i64
  %19 = bitcast %"class.blink::Member"* %2 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.blink::DOMWindow"* %17 to i8*
  %24 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %23) #9
  br label %25

25:                                               ; preds = %3, %22, %14, %10
  %26 = phi i1 [ false, %10 ], [ true, %14 ], [ true, %22 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i1 %26
}

declare %"class.blink::DOMWindow"* @_ZN5blink11ToDOMWindowEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetINS_6MemberINS_9TrackBaseEEEEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), %"class.blink::Member.239"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = icmp eq %"class.v8::Isolate"* %8, null
  br i1 %9, label %56, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %8, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %12 = bitcast %"class.v8::String"* %11 to %"class.v8::Value"*
  %13 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %12, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %13, label %14, label %56

14:                                               ; preds = %10
  %15 = bitcast %"class.blink::Dictionary"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %18 = add i64 %16, 8
  %19 = inttoptr i64 %18 to %"class.blink::V8PerIsolateData"**
  %20 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %19, align 8
  %21 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %20, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink11V8TextTrack18wrapper_type_info_E, %"class.v8::Value"* %17) #9
  br i1 %21, label %22, label %44

22:                                               ; preds = %14
  %23 = bitcast %"class.v8::Value"* %17 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, -1
  %26 = inttoptr i64 %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = and i64 %24, -4294967296
  %29 = zext i32 %27 to i64
  %30 = or i64 %28, %29
  %31 = add i64 %30, 7
  %32 = inttoptr i64 %31 to i16*
  %33 = load i16, i16* %32, align 2
  switch i16 %33, label %38 [
    i16 1057, label %34
    i16 1056, label %34
    i16 1040, label %34
  ]

34:                                               ; preds = %22, %22, %22
  %35 = add i64 %24, 19
  %36 = inttoptr i64 %35 to i8**
  %37 = load i8*, i8** %36, align 1
  br label %41

38:                                               ; preds = %22
  %39 = bitcast %"class.v8::Value"* %17 to %"class.v8::Object"*
  %40 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %39, i32 1) #9
  br label %41

41:                                               ; preds = %38, %34
  %42 = phi i8* [ %37, %34 ], [ %40, %38 ]
  %43 = bitcast i8* %42 to %"class.blink::TextTrack"*
  br label %44

44:                                               ; preds = %14, %41
  %45 = phi %"class.blink::TextTrack"* [ %43, %41 ], [ null, %14 ]
  %46 = icmp eq %"class.blink::TextTrack"* %45, null
  %47 = getelementptr inbounds %"class.blink::TextTrack", %"class.blink::TextTrack"* %45, i64 0, i32 1
  %48 = ptrtoint %"class.blink::TrackBase"* %47 to i64
  %49 = select i1 %46, i64 0, i64 %48
  %50 = bitcast %"class.blink::Member.239"* %2 to i64*
  store atomic i64 %49, i64* %50 monotonic, align 8
  %51 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %44
  %54 = inttoptr i64 %49 to i8*
  %55 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %54) #9
  br label %56

56:                                               ; preds = %3, %53, %44, %10
  %57 = phi i1 [ false, %10 ], [ true, %44 ], [ true, %53 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetIN3WTF6VectorINS2_6StringELj0ENS2_18PartitionAllocatorEEEEEbRKNS_10DictionaryERKNS2_10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), %"class.WTF::Vector.259"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = icmp eq %"class.v8::Isolate"* %9, null
  br i1 %10, label %120, label %11

11:                                               ; preds = %3
  %12 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %9, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %13 = bitcast %"class.v8::String"* %12 to %"class.v8::Value"*
  %14 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %13, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %14, label %15, label %120

15:                                               ; preds = %11
  %16 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %17 = call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %16) #9
  br i1 %17, label %18, label %120

18:                                               ; preds = %15
  %19 = bitcast %"class.v8::Local.1"* %4 to %"class.v8::Array"**
  %20 = load %"class.v8::Array"*, %"class.v8::Array"** %19, align 8
  %21 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %20) #9
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %120, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.v8::Array"* %20 to %"class.v8::Object"*
  %25 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  %26 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %30 = bitcast %"class.std::__1::unique_ptr.266"* %29 to i64*
  %31 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  %32 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %2, i64 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %2, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %2, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  br label %39

36:                                               ; preds = %117
  %37 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %20) #9
  %38 = icmp ult i32 %119, %37
  br i1 %38, label %39, label %120

39:                                               ; preds = %23, %36
  %40 = phi i32 [ 0, %23 ], [ %119, %36 ]
  %41 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %42 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %41) #9
  %43 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %44 = call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %43, i32 %40) #9
  %45 = bitcast %"class.v8::Integer"* %44 to %"class.v8::Value"*
  %46 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %24, %"class.v8::Context"* %42, %"class.v8::Value"* %45) #9
  %47 = icmp eq %"class.v8::Value"* %46, null
  br i1 %47, label %120, label %48

48:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %25) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 152, i1 false)
  store %"class.v8::Value"* %46, %"class.v8::Value"** %26, align 8
  store i32 0, i32* %27, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %28, align 8
  store i64 0, i64* %30, align 8
  %49 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #9
  br i1 %49, label %57, label %50

50:                                               ; preds = %48
  %51 = load %"class.v8::Value"*, %"class.v8::Value"** %26, align 8
  %52 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %53 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %52) #9
  %54 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %51, %"class.v8::Context"* %53) #9
  %55 = ptrtoint %"class.v8::String"* %54 to i64
  store i64 %55, i64* %31, align 8
  %56 = icmp eq %"class.v8::String"* %54, null
  br i1 %56, label %96, label %57, !prof !2

57:                                               ; preds = %50, %48
  %58 = load i32, i32* %32, align 4
  %59 = load i32, i32* %33, align 8
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %95, label %61, !prof !2

61:                                               ; preds = %57
  %62 = load %"class.WTF::String"*, %"class.WTF::String"** %34, align 8
  %63 = zext i32 %58 to i64
  %64 = load %"class.v8::Value"*, %"class.v8::Value"** %26, align 8
  %65 = icmp eq %"class.v8::Value"* %64, null
  br i1 %65, label %70, label %66, !prof !2

66:                                               ; preds = %61
  %67 = bitcast %"class.v8::Value"* %64 to %"class.v8::String"*
  %68 = load i32, i32* %27, align 8
  %69 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %67, i32 %68) #9
  br label %90

70:                                               ; preds = %61
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %90, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #9
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !2

87:                                               ; preds = %78
  call void @llvm.trap() #9
  unreachable

88:                                               ; preds = %78
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %79, align 4
  br label %90

90:                                               ; preds = %88, %73, %70, %66
  %91 = phi %"class.WTF::StringImpl"* [ %69, %66 ], [ null, %70 ], [ %71, %73 ], [ %71, %88 ]
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 %63, i32 0, i32 0
  store %"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"** %92, align 8
  %93 = load i32, i32* %32, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %32, align 4
  br label %96

95:                                               ; preds = %57
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRN5blink16V8StringResourceILNS5_20V8StringResourceModeE0EEEEEvOT_(%"class.WTF::Vector.259"* %2, %"class.blink::V8StringResource"* nonnull dereferenceable(160) %5) #9
  br label %96

96:                                               ; preds = %50, %95, %90
  %97 = phi i32 [ 1, %50 ], [ 0, %90 ], [ 0, %95 ]
  %98 = load i8*, i8** %35, align 8
  store i8* null, i8** %35, align 8
  %99 = icmp eq i8* %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %96
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %98) #9
  br label %101

101:                                              ; preds = %100, %96
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %101
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #9
  br label %117

117:                                              ; preds = %116, %113, %101
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %25) #9
  %118 = icmp eq i32 %97, 0
  %119 = add nuw i32 %40, 1
  br i1 %118, label %36, label %120

120:                                              ; preds = %36, %117, %39, %18, %3, %15, %11
  %121 = phi i1 [ false, %11 ], [ false, %15 ], [ false, %3 ], [ true, %18 ], [ true, %36 ], [ false, %117 ], [ false, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret i1 %121
}

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetINS_10ArrayValueEEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), %"class.blink::ArrayValue"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = alloca %"class.blink::ArrayValue", align 8
  %6 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = icmp eq %"class.v8::Isolate"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %9, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %13 = bitcast %"class.v8::String"* %12 to %"class.v8::Value"*
  %14 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %13, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %14, label %15, label %28

15:                                               ; preds = %11
  %16 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %17 = call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %16) #9
  br i1 %17, label %18, label %28

18:                                               ; preds = %15
  %19 = bitcast %"class.blink::ArrayValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #9
  %20 = bitcast %"class.v8::Local.1"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Dictionary"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.blink::ArrayValue"* %5 to i64*
  store i64 %21, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::ArrayValue", %"class.blink::ArrayValue"* %5, i64 0, i32 1
  %26 = bitcast %"class.v8::Isolate"** %25 to i64*
  store i64 %23, i64* %26, align 8
  %27 = call dereferenceable(16) %"class.blink::ArrayValue"* @_ZN5blink10ArrayValueaSERKS0_(%"class.blink::ArrayValue"* %2, %"class.blink::ArrayValue"* nonnull dereferenceable(16) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #9
  br label %28

28:                                               ; preds = %3, %15, %11, %18
  %29 = phi i1 [ true, %18 ], [ false, %11 ], [ false, %15 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret i1 %29
}

declare dereferenceable(16) %"class.blink::ArrayValue"* @_ZN5blink10ArrayValueaSERKS0_(%"class.blink::ArrayValue"*, %"class.blink::ArrayValue"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16DictionaryHelper3GetIPNS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEEEbRKNS_10DictionaryERKN3WTF10StringViewERT_(%"class.blink::Dictionary"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24), %"class.blink::DOMTypedArray"** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::Local.1", align 8
  %5 = bitcast %"class.v8::Local.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.v8::Local.1", %"class.v8::Local.1"* %4, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = icmp eq %"class.v8::Isolate"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %8, %"class.WTF::StringView"* dereferenceable(24) %1) #9
  %12 = bitcast %"class.v8::String"* %11 to %"class.v8::Value"*
  %13 = call zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"* %0, %"class.v8::Value"* %12, %"class.v8::Local.1"* nonnull dereferenceable(8) %4) #9
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %16 = load %"class.v8::Value"*, %"class.v8::Value"** %6, align 8
  %17 = call %"class.blink::DOMTypedArray"* @_ZN5blink12V8Uint8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"* %15, %"class.v8::Value"* %16) #9
  store %"class.blink::DOMTypedArray"* %17, %"class.blink::DOMTypedArray"** %2, align 8
  br label %18

18:                                               ; preds = %3, %10, %14
  %19 = phi i1 [ true, %14 ], [ false, %10 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret i1 %19
}

declare %"class.blink::DOMTypedArray"* @_ZN5blink12V8Uint8Array19ToImplWithTypeCheckEPN2v87IsolateENS1_5LocalINS1_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink10Dictionary3GetEN2v85LocalINS1_5ValueEEERS4_(%"class.blink::Dictionary"*, %"class.v8::Value"*, %"class.v8::Local.1"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #9
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #9
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #9
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #9
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare double @fmod(double, double) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.trunc.f64(double) #5

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #5

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF12AtomicStringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !3

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !4

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #9
  br i1 %22, label %23, label %80, !prof !4

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #9
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #9
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #9
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #9
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #9
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #9
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRN5blink16V8StringResourceILNS5_20V8StringResourceModeE0EEEEEvOT_(%"class.WTF::Vector.259"*, %"class.blink::V8StringResource"* dereferenceable(160)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.259", %"class.WTF::Vector.259"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  br i1 %15, label %18, label %45, !prof !4

18:                                               ; preds = %2
  %19 = icmp eq %"class.WTF::String"* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %20) #9
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #9
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.259"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %"class.WTF::String"* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %"class.WTF::String"* %27 to i8*
  br i1 %30, label %32, label %38, !prof !4

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #9
  %36 = bitcast %"class.WTF::Vector.259"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #9
  %40 = bitcast %"class.WTF::Vector.259"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %"class.WTF::String"*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %"class.WTF::String"* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %1, i64 0, i32 0, i32 0
  %50 = load %"class.v8::Value"*, %"class.v8::Value"** %49, align 8
  %51 = icmp eq %"class.v8::Value"* %50, null
  br i1 %51, label %57, label %52, !prof !2

52:                                               ; preds = %45
  %53 = bitcast %"class.v8::Value"* %50 to %"class.v8::String"*
  %54 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %1, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %53, i32 %55) #9
  br label %78

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %1, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %78, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i33
  %70 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #9
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !2

75:                                               ; preds = %66
  tail call void @llvm.trap() #9
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4
  br label %78

78:                                               ; preds = %52, %57, %61, %76
  %79 = phi %"class.WTF::StringImpl"* [ %56, %52 ], [ null, %57 ], [ %59, %61 ], [ %59, %76 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 %48, i32 0, i32 0
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %80, align 8
  %81 = load i32, i32* %3, align 4
  %82 = add i32 %81, 1
  store i32 %82, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2146410443, i32 1073205}
!4 = !{!"branch_weights", i32 2000, i32 1}
