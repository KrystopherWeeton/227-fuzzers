; ModuleID = '../../third_party/skia/src/pdf/SkPDFUtils.cpp'
source_filename = "../../third_party/skia/src/pdf/SkPDFUtils.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkRect = type { float, float, float, float }
%class.SkPDFArray = type { %class.SkPDFObject, %"class.std::__1::vector" }
%class.SkPDFObject = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkPDFUnion*, %class.SkPDFUnion*, %"class.std::__1::__compressed_pair.0" }
%class.SkPDFUnion = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %class.SkPDFUnion* }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkWStream = type { i32 (...)** }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.7", %"struct.std::__1::atomic.7", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.5, %class.SkTDArray.6, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.5 = type { i8*, i32, i32 }
%class.SkTDArray.6 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.12 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.7" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.12 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.13", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i8 }
%struct.SkConic = type { [3 x %struct.SkPoint], float }
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%"class.SkPath::Iter" = type <{ %struct.SkPoint*, i8*, i8*, float*, %struct.SkPoint, %struct.SkPoint, i8, i8, i8, [5 x i8] }>
%class.SkAutoConicToQuads = type <{ %class.SkAutoSTMalloc, i32, [4 x i8] }>
%class.SkAutoSTMalloc = type { %struct.SkPoint*, %union.anon }
%union.anon = type { [34 x i32] }
%class.SkString = type { %class.sk_sp.150 }
%class.sk_sp.150 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkPDFDict = type { %class.SkPDFObject, %"class.std::__1::vector.17" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.19" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.SkPDFObject* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.36, i32, i32 }
%class.sk_sp.36 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.37, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.37 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp.38, %class.SkPixmap, %class.sk_sp.39 }
%class.sk_sp.38 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.39 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp.36, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon.40, i8*, i64, i32, i32, i8, i8 }>
%union.anon.40 = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%struct.SkSize = type { float, float }
%class.SkImage_Base = type { %class.SkImage.base, %"struct.std::__1::atomic.13", [3 x i8] }
%class.SkImage.base = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32 }>
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %class.sk_sp.85, %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.123", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.42", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.41 }
%class.sk_sp.41 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.57 }
%class.SkFibBlockSizes.57 = type { i32 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.85 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray.89, %class.SkTMultiMap, %class.SkTDynamicHash.100, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray.89 }
%class.SkTDArray.89 = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc.90 }
%class.SkAutoSTMalloc.90 = type <{ i32*, %union.anon.91, [4 x i8] }>
%union.anon.91 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.92, i8* }
%class.sk_sp.92 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.93, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.93 = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.94" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.100 = type { %class.SkTHashTable.101 }
%class.SkTHashTable.101 = type { i32, i32, %class.SkAutoTArray.102 }
%class.SkAutoTArray.102 = type { %"class.std::__1::unique_ptr.103" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.109, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.109 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.110 }
%class.sk_sp.110 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.111, void (i8*)*, i8* }
%class.SkNVRefCnt.111 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap = type { %class.SkTHashTable.112 }
%class.SkTHashTable.112 = type { i32, i32, %class.SkAutoTArray.113 }
%class.SkAutoTArray.113 = type { %"class.std::__1::unique_ptr.114" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.126, %class.sk_sp.128, %class.sk_sp.128 }
%class.sk_sp.126 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.127, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.127 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.128 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque

@.str = private unnamed_addr constant [7 x i8] c"Normal\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Screen\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"Overlay\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Darken\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"Lighten\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"ColorDodge\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"ColorBurn\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"HardLight\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"SoftLight\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"Difference\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"Exclusion\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"Multiply\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"Hue\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"Saturation\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"Color\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"Luminosity\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c" m\0A\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c" l\0A\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c" re\0A\00", align 1
@.ref.tmp = private constant %struct.SkRect zeroinitializer, align 4
@.str.20 = private unnamed_addr constant [3 x i8] c"h\0A\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"S\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c" gs\0A\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"/Pattern CS/Pattern cs\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c" SCN\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c" scn\0A\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"Pattern\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"PatternType\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"PaintType\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"TilingType\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"BBox\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"XStep\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"YStep\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"Resources\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"Matrix\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"cm\0A\00", align 1
@_ZTV22SkDynamicMemoryWStream = external unnamed_addr constant { [7 x i8*] }, align 8
@.str.41 = private unnamed_addr constant [3 x i8] c"y\0A\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c"c\0A\00", align 1
@switch.table._ZN10SkPDFUtils13BlendModeNameE11SkBlendMode = private unnamed_addr constant [26 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* null, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0)], align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN10SkPDFUtils13BlendModeNameE11SkBlendMode(i32) local_unnamed_addr #0 {
  %2 = add i32 %0, -3
  %3 = icmp ult i32 %2, 26
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [26 x i8*], [26 x i8*]* @switch.table._ZN10SkPDFUtils13BlendModeNameE11SkBlendMode, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7

8:                                                ; preds = %1
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %class.SkPDFArray* @_ZN10SkPDFUtils11RectToArrayERK6SkRect(%struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 0
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 2
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 3
  %9 = load float, float* %8, align 4
  %10 = tail call i8* @_Znwm(i64 32) #10
  %11 = bitcast i8* %10 to %class.SkPDFArray*
  tail call void @_ZN10SkPDFArrayC1Ev(%class.SkPDFArray* nonnull %11) #11
  tail call void @_ZN10SkPDFArray7reserveEi(%class.SkPDFArray* nonnull %11, i32 4) #11
  tail call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %11, float %3) #11
  tail call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %11, float %5) #11
  tail call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %11, float %7) #11
  tail call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %11, float %9) #11
  ret %class.SkPDFArray* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %class.SkPDFArray* @_ZN10SkPDFUtils13MatrixToArrayERK8SkMatrix(%class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1 {
  %2 = alloca [6 x float], align 16
  %3 = bitcast [6 x float]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #11
  %4 = getelementptr inbounds [6 x float], [6 x float]* %2, i64 0, i64 0
  %5 = getelementptr inbounds [6 x float], [6 x float]* %2, i64 0, i64 1
  %6 = getelementptr inbounds [6 x float], [6 x float]* %2, i64 0, i64 2
  %7 = getelementptr inbounds [6 x float], [6 x float]* %2, i64 0, i64 3
  %8 = getelementptr inbounds [6 x float], [6 x float]* %2, i64 0, i64 4
  %9 = getelementptr inbounds [6 x float], [6 x float]* %2, i64 0, i64 5
  %10 = bitcast [6 x float]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -1, i64 24, i1 false)
  %11 = call zeroext i1 @_ZNK8SkMatrix8asAffineEPf(%class.SkMatrix* %0, float* nonnull %4) #11
  br i1 %11, label %13, label %12

12:                                               ; preds = %1
  call void @_ZN8SkMatrix17SetAffineIdentityEPf(float* nonnull %4) #11
  br label %13

13:                                               ; preds = %12, %1
  %14 = load float, float* %4, align 16
  %15 = load float, float* %5, align 4
  %16 = load float, float* %6, align 8
  %17 = load float, float* %7, align 4
  %18 = load float, float* %8, align 16
  %19 = load float, float* %9, align 4
  %20 = call i8* @_Znwm(i64 32) #10
  %21 = bitcast i8* %20 to %class.SkPDFArray*
  call void @_ZN10SkPDFArrayC1Ev(%class.SkPDFArray* nonnull %21) #11
  call void @_ZN10SkPDFArray7reserveEi(%class.SkPDFArray* nonnull %21, i32 6) #11
  call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %21, float %14) #11
  call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %21, float %15) #11
  call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %21, float %16) #11
  call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %21, float %17) #11
  call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %21, float %18) #11
  call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %21, float %19) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #11
  ret %class.SkPDFArray* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK8SkMatrix8asAffineEPf(%class.SkMatrix*, float*) local_unnamed_addr #3

declare void @_ZN8SkMatrix17SetAffineIdentityEPf(float*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPDFUtils6MoveToEffP9SkWStream(float, float, %class.SkWStream*) local_unnamed_addr #1 {
  %4 = alloca [49 x i8], align 16
  %5 = getelementptr inbounds [49 x i8], [49 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 49, i1 false) #11
  %6 = call i32 @_Z16SkFloatToDecimalfPc(float %0, i8* nonnull %5) #11
  %7 = zext i32 %6 to i64
  %8 = bitcast %class.SkWStream* %2 to i1 (%class.SkWStream*, i8*, i64)***
  %9 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %8, align 8
  %10 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %9, i64 2
  %11 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %10, align 8
  %12 = call zeroext i1 %11(%class.SkWStream* %2, i8* nonnull %5, i64 %7) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %5) #11
  %13 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %8, align 8
  %14 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %13, i64 2
  %15 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %14, align 8
  %16 = call zeroext i1 %15(%class.SkWStream* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 49, i1 false) #11
  %17 = call i32 @_Z16SkFloatToDecimalfPc(float %1, i8* nonnull %5) #11
  %18 = zext i32 %17 to i64
  %19 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %8, align 8
  %20 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %19, i64 2
  %21 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %20, align 8
  %22 = call zeroext i1 %21(%class.SkWStream* %2, i8* nonnull %5, i64 %18) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %5) #11
  %23 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %8, align 8
  %24 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %23, i64 2
  %25 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %24, align 8
  %26 = call zeroext i1 %25(%class.SkWStream* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i64 3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPDFUtils10AppendLineEffP9SkWStream(float, float, %class.SkWStream*) local_unnamed_addr #1 {
  %4 = alloca [49 x i8], align 16
  %5 = getelementptr inbounds [49 x i8], [49 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 49, i1 false) #11
  %6 = call i32 @_Z16SkFloatToDecimalfPc(float %0, i8* nonnull %5) #11
  %7 = zext i32 %6 to i64
  %8 = bitcast %class.SkWStream* %2 to i1 (%class.SkWStream*, i8*, i64)***
  %9 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %8, align 8
  %10 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %9, i64 2
  %11 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %10, align 8
  %12 = call zeroext i1 %11(%class.SkWStream* %2, i8* nonnull %5, i64 %7) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %5) #11
  %13 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %8, align 8
  %14 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %13, i64 2
  %15 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %14, align 8
  %16 = call zeroext i1 %15(%class.SkWStream* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 49, i1 false) #11
  %17 = call i32 @_Z16SkFloatToDecimalfPc(float %1, i8* nonnull %5) #11
  %18 = zext i32 %17 to i64
  %19 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %8, align 8
  %20 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %19, i64 2
  %21 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %20, align 8
  %22 = call zeroext i1 %21(%class.SkWStream* %2, i8* nonnull %5, i64 %18) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %5) #11
  %23 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %8, align 8
  %24 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %23, i64 2
  %25 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %24, align 8
  %26 = call zeroext i1 %25(%class.SkWStream* %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i64 3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPDFUtils15AppendRectangleERK6SkRectP9SkWStream(%struct.SkRect* nocapture readonly dereferenceable(16), %class.SkWStream*) local_unnamed_addr #1 {
  %3 = alloca [49 x i8], align 16
  %4 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 3
  %5 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 1
  %6 = load float, float* %5, align 4
  %7 = load float, float* %4, align 4
  %8 = fcmp olt float %6, %7
  %9 = select i1 %8, float %6, float %7
  %10 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 49, i1 false) #11
  %13 = call i32 @_Z16SkFloatToDecimalfPc(float %11, i8* nonnull %12) #11
  %14 = zext i32 %13 to i64
  %15 = bitcast %class.SkWStream* %1 to i1 (%class.SkWStream*, i8*, i64)***
  %16 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %17 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %16, i64 2
  %18 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %17, align 8
  %19 = call zeroext i1 %18(%class.SkWStream* %1, i8* nonnull %12, i64 %14) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %12) #11
  %20 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %21 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %20, i64 2
  %22 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %21, align 8
  %23 = call zeroext i1 %22(%class.SkWStream* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 49, i1 false) #11
  %24 = call i32 @_Z16SkFloatToDecimalfPc(float %9, i8* nonnull %12) #11
  %25 = zext i32 %24 to i64
  %26 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %27 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %26, i64 2
  %28 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %27, align 8
  %29 = call zeroext i1 %28(%class.SkWStream* %1, i8* nonnull %12, i64 %25) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %12) #11
  %30 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %31 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %30, i64 2
  %32 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %31, align 8
  %33 = call zeroext i1 %32(%class.SkWStream* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  %34 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %0, i64 0, i32 2
  %35 = load float, float* %34, align 4
  %36 = load float, float* %10, align 4
  %37 = fsub float %35, %36
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 49, i1 false) #11
  %38 = call i32 @_Z16SkFloatToDecimalfPc(float %37, i8* nonnull %12) #11
  %39 = zext i32 %38 to i64
  %40 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %41 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %40, i64 2
  %42 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %41, align 8
  %43 = call zeroext i1 %42(%class.SkWStream* %1, i8* nonnull %12, i64 %39) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %12) #11
  %44 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %45 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %44, i64 2
  %46 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %45, align 8
  %47 = call zeroext i1 %46(%class.SkWStream* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  %48 = load float, float* %4, align 4
  %49 = load float, float* %5, align 4
  %50 = fsub float %48, %49
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 49, i1 false) #11
  %51 = call i32 @_Z16SkFloatToDecimalfPc(float %50, i8* nonnull %12) #11
  %52 = zext i32 %51 to i64
  %53 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %54 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %53, i64 2
  %55 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %54, align 8
  %56 = call zeroext i1 %55(%class.SkWStream* %1, i8* nonnull %12, i64 %52) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %12) #11
  %57 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %58 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %57, i64 2
  %59 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %58, align 8
  %60 = call zeroext i1 %59(%class.SkWStream* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), i64 4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPDFUtils8EmitPathERK6SkPathN7SkPaint5StyleEbP9SkWStreamf(%class.SkPath* dereferenceable(16), i8 zeroext, i1 zeroext, %class.SkWStream*, float) local_unnamed_addr #1 {
  %6 = alloca %struct.SkConic, align 4
  %7 = alloca [49 x i8], align 16
  %8 = alloca [4 x %struct.SkPoint], align 16
  %9 = alloca %struct.SkRect, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca %class.SkDynamicMemoryWStream, align 8
  %13 = alloca [4 x %struct.SkPoint], align 16
  %14 = alloca %"class.SkPath::Iter", align 8
  %15 = alloca %class.SkAutoConicToQuads, align 8
  %16 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %17 = load %class.SkPathRef*, %class.SkPathRef** %16, align 8
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 4, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  %21 = icmp eq i8 %1, 0
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %24

23:                                               ; preds = %5
  tail call void @_ZN10SkPDFUtils15AppendRectangleERK6SkRectP9SkWStream(%struct.SkRect* nonnull dereferenceable(16) @.ref.tmp, %class.SkWStream* %3)
  br label %274

24:                                               ; preds = %5
  %25 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #11
  %26 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %26, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11
  store i8 -86, i8* %10, align 1
  %27 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #11
  store i32 -1431655766, i32* %11, align 4
  %28 = call zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath* %0, %struct.SkRect* nonnull %9, i8* nonnull %10, i32* nonnull %11) #11
  %29 = xor i1 %28, true
  %30 = load i8, i8* %10, align 1
  %31 = icmp eq i8 %30, 0
  %32 = or i1 %31, %29
  br i1 %32, label %42, label %33

33:                                               ; preds = %24
  %34 = load i32, i32* %11, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %38 = load i8, i8* %37, align 2
  %39 = and i8 %38, 3
  %40 = icmp eq i8 %39, 1
  br i1 %40, label %41, label %42

41:                                               ; preds = %36, %33
  call void @_ZN10SkPDFUtils15AppendRectangleERK6SkRectP9SkWStream(%struct.SkRect* nonnull dereferenceable(16) %9, %class.SkWStream* %3)
  br label %273

42:                                               ; preds = %24, %36
  %43 = bitcast %class.SkDynamicMemoryWStream* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #11
  %44 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %12, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %12, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %46 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #11
  %47 = bitcast [4 x %struct.SkPoint]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %47) #11
  %48 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 0
  %49 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 0, i32 0
  %50 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 0, i32 1
  %51 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 1, i32 0
  %52 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 1, i32 1
  %53 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 2, i32 0
  %54 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 2, i32 1
  %55 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 3, i32 0
  %56 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %13, i64 0, i64 3, i32 1
  %57 = bitcast %"class.SkPath::Iter"* %14 to i8*
  %58 = bitcast [4 x %struct.SkPoint]* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %58, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %57) #11
  %59 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %14, i64 0, i32 3
  %60 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %14, i64 0, i32 4, i32 0
  %61 = bitcast %"class.SkPath::Iter"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 32, i1 false)
  %62 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %14, i64 0, i32 6
  %63 = bitcast float* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 -1, i64 16, i1 false)
  %64 = bitcast i8* %62 to i64*
  store i64 -6148914691236517206, i64* %64, align 8
  call void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"* nonnull %14, %class.SkPath* dereferenceable(16) %0, i1 zeroext false) #11
  %65 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %14, %struct.SkPoint* nonnull %48) #11
  %66 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %12, i64 0, i32 0
  %67 = bitcast %class.SkDynamicMemoryWStream* %12 to i1 (%class.SkWStream*, i8*, i64)***
  %68 = bitcast %class.SkAutoConicToQuads* %15 to i8*
  %69 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %15, i64 0, i32 0, i32 1
  %70 = bitcast %class.SkAutoConicToQuads* %15 to %union.anon**
  %71 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %15, i64 0, i32 1
  %72 = bitcast float** %59 to i32**
  %73 = bitcast %struct.SkConic* %6 to i8*
  %74 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %6, i64 0, i32 1
  %75 = bitcast float* %74 to i32*
  %76 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %15, i64 0, i32 0, i32 0
  %77 = bitcast %union.anon* %69 to %struct.SkPoint*
  %78 = bitcast %class.SkAutoConicToQuads* %15 to i8**
  %79 = bitcast [4 x %struct.SkPoint]* %8 to i8*
  %80 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %8, i64 0, i64 0
  %81 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %8, i64 0, i64 1, i32 0
  %82 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %8, i64 0, i64 1, i32 1
  %83 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %8, i64 0, i64 2, i32 0
  %84 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %8, i64 0, i64 2, i32 1
  %85 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %8, i64 0, i64 3, i32 0
  %86 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %8, i64 0, i64 3, i32 1
  %87 = getelementptr inbounds [49 x i8], [49 x i8]* %7, i64 0, i64 0
  %88 = getelementptr inbounds %class.SkAutoConicToQuads, %class.SkAutoConicToQuads* %15, i64 0, i32 0, i32 1
  %89 = bitcast %union.anon* %88 to i8*
  %90 = bitcast [4 x %struct.SkPoint]* %13 to <2 x float>*
  %91 = bitcast float* %52 to <4 x float>*
  br label %92

92:                                               ; preds = %268, %42
  %93 = phi i32 [ %65, %42 ], [ %269, %268 ]
  switch i32 %93, label %268 [
    i32 6, label %94
    i32 0, label %97
    i32 1, label %120
    i32 2, label %154
    i32 3, label %176
    i32 4, label %233
    i32 5, label %262
  ]

94:                                               ; preds = %92
  %95 = call i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream* nonnull %12) #11
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %272, label %270

97:                                               ; preds = %92
  %98 = load float, float* %49, align 16
  %99 = load float, float* %50, align 4
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %87) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %87, i8 -86, i64 49, i1 false) #11
  %100 = call i32 @_Z16SkFloatToDecimalfPc(float %98, i8* nonnull %87) #11
  %101 = zext i32 %100 to i64
  %102 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %67, align 8
  %103 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %102, i64 2
  %104 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %103, align 8
  %105 = call zeroext i1 %104(%class.SkWStream* nonnull %66, i8* nonnull %87, i64 %101) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %87) #11
  %106 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %67, align 8
  %107 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %106, i64 2
  %108 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %107, align 8
  %109 = call zeroext i1 %108(%class.SkWStream* nonnull %66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %87) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %87, i8 -86, i64 49, i1 false) #11
  %110 = call i32 @_Z16SkFloatToDecimalfPc(float %99, i8* nonnull %87) #11
  %111 = zext i32 %110 to i64
  %112 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %67, align 8
  %113 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %112, i64 2
  %114 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %113, align 8
  %115 = call zeroext i1 %114(%class.SkWStream* nonnull %66, i8* nonnull %87, i64 %111) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %87) #11
  %116 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %67, align 8
  %117 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %116, i64 2
  %118 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %117, align 8
  %119 = call zeroext i1 %118(%class.SkWStream* nonnull %66, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i64 3) #11
  br label %268

120:                                              ; preds = %92
  br i1 %2, label %123, label %121

121:                                              ; preds = %120
  %122 = load float, float* %51, align 8
  br label %131

123:                                              ; preds = %120
  %124 = load float, float* %49, align 16
  %125 = load float, float* %51, align 8
  %126 = fcmp une float %124, %125
  br i1 %126, label %131, label %127

127:                                              ; preds = %123
  %128 = load float, float* %50, align 4
  %129 = load float, float* %52, align 4
  %130 = fcmp une float %128, %129
  br i1 %130, label %131, label %268

131:                                              ; preds = %127, %123, %121
  %132 = phi float [ %122, %121 ], [ %125, %123 ], [ %125, %127 ]
  %133 = load float, float* %52, align 4
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %87) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %87, i8 -86, i64 49, i1 false) #11
  %134 = call i32 @_Z16SkFloatToDecimalfPc(float %132, i8* nonnull %87) #11
  %135 = zext i32 %134 to i64
  %136 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %67, align 8
  %137 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %136, i64 2
  %138 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %137, align 8
  %139 = call zeroext i1 %138(%class.SkWStream* nonnull %66, i8* nonnull %87, i64 %135) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %87) #11
  %140 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %67, align 8
  %141 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %140, i64 2
  %142 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %141, align 8
  %143 = call zeroext i1 %142(%class.SkWStream* nonnull %66, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %87) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %87, i8 -86, i64 49, i1 false) #11
  %144 = call i32 @_Z16SkFloatToDecimalfPc(float %133, i8* nonnull %87) #11
  %145 = zext i32 %144 to i64
  %146 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %67, align 8
  %147 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %146, i64 2
  %148 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %147, align 8
  %149 = call zeroext i1 %148(%class.SkWStream* nonnull %66, i8* nonnull %87, i64 %145) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %87) #11
  %150 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %67, align 8
  %151 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %150, i64 2
  %152 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %151, align 8
  %153 = call zeroext i1 %152(%class.SkWStream* nonnull %66, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i64 3) #11
  br label %268

154:                                              ; preds = %92
  br i1 %2, label %155, label %169

155:                                              ; preds = %154
  %156 = load float, float* %49, align 16
  %157 = load float, float* %50, align 4
  %158 = load float, float* %51, align 8
  %159 = fcmp une float %156, %158
  br i1 %159, label %169, label %160

160:                                              ; preds = %155
  %161 = load float, float* %52, align 4
  %162 = fcmp une float %157, %161
  %163 = load float, float* %53, align 16
  %164 = fcmp une float %156, %163
  %165 = or i1 %162, %164
  %166 = load float, float* %54, align 4
  %167 = fcmp une float %157, %166
  %168 = or i1 %165, %167
  br i1 %168, label %169, label %268

169:                                              ; preds = %160, %155, %154
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %79, i8 -1, i64 32, i1 false) #11
  call void @_Z20SkConvertQuadToCubicPK7SkPointPS_(%struct.SkPoint* nonnull %48, %struct.SkPoint* nonnull %80) #11
  %170 = load float, float* %81, align 8
  %171 = load float, float* %82, align 4
  %172 = load float, float* %83, align 16
  %173 = load float, float* %84, align 4
  %174 = load float, float* %85, align 8
  %175 = load float, float* %86, align 4
  call fastcc void @_ZL12append_cubicffffffP9SkWStream(float %170, float %171, float %172, float %173, float %174, float %175, %class.SkWStream* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #11
  br label %268

176:                                              ; preds = %92
  br i1 %2, label %177, label %191

177:                                              ; preds = %176
  %178 = load float, float* %49, align 16
  %179 = load float, float* %50, align 4
  %180 = load float, float* %51, align 8
  %181 = fcmp une float %178, %180
  br i1 %181, label %191, label %182

182:                                              ; preds = %177
  %183 = load float, float* %52, align 4
  %184 = fcmp une float %179, %183
  %185 = load float, float* %53, align 16
  %186 = fcmp une float %178, %185
  %187 = or i1 %184, %186
  %188 = load float, float* %54, align 4
  %189 = fcmp une float %179, %188
  %190 = or i1 %187, %189
  br i1 %190, label %191, label %268

191:                                              ; preds = %182, %177, %176
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %68) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 144, i1 false)
  store %union.anon* %69, %union.anon** %70, align 8
  store i32 0, i32* %71, align 8
  %192 = load i32*, i32** %72, align 8
  %193 = load i32, i32* %192, align 4
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %73) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 16 %47, i64 24, i1 false) #11
  store i32 %193, i32* %75, align 4
  %194 = call i32 @_ZNK7SkConic15computeQuadPOW2Ef(%struct.SkConic* nonnull %6, float %4) #11
  %195 = shl i32 1, %194
  store i32 %195, i32* %71, align 8
  %196 = shl nsw i32 %195, 1
  %197 = or i32 %196, 1
  %198 = sext i32 %197 to i64
  %199 = load %struct.SkPoint*, %struct.SkPoint** %76, align 8
  %200 = icmp eq %struct.SkPoint* %199, %77
  br i1 %200, label %203, label %201

201:                                              ; preds = %191
  %202 = bitcast %struct.SkPoint* %199 to i8*
  call void @_Z7sk_freePv(i8* %202) #11
  br label %203

203:                                              ; preds = %201, %191
  %204 = icmp ugt i32 %197, 17
  br i1 %204, label %205, label %208

205:                                              ; preds = %203
  %206 = call i8* @_Z15sk_malloc_throwmm(i64 %198, i64 8) #11
  store i8* %206, i8** %78, align 8
  %207 = bitcast i8* %206 to %struct.SkPoint*
  br label %209

208:                                              ; preds = %203
  store %union.anon* %69, %union.anon** %70, align 8
  br label %209

209:                                              ; preds = %205, %208
  %210 = phi %struct.SkPoint* [ %77, %208 ], [ %207, %205 ]
  %211 = call i32 @_ZNK7SkConic17chopIntoQuadsPOW2EP7SkPointi(%struct.SkConic* nonnull %6, %struct.SkPoint* %210, i32 %194) #11
  store i32 %211, i32* %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %73) #11
  %212 = icmp sgt i32 %211, 0
  br i1 %212, label %219, label %213

213:                                              ; preds = %219, %209
  %214 = load %struct.SkPoint*, %struct.SkPoint** %76, align 8
  %215 = icmp eq %struct.SkPoint* %214, %77
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast %struct.SkPoint* %214 to i8*
  call void @_Z7sk_freePv(i8* %217) #11
  br label %218

218:                                              ; preds = %213, %216
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %68) #11
  br label %268

219:                                              ; preds = %209, %219
  %220 = phi i64 [ %229, %219 ], [ 0, %209 ]
  %221 = shl nuw nsw i64 %220, 1
  %222 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %210, i64 %221
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %79) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %79, i8 -1, i64 32, i1 false) #11
  call void @_Z20SkConvertQuadToCubicPK7SkPointPS_(%struct.SkPoint* %222, %struct.SkPoint* nonnull %80) #11
  %223 = load float, float* %81, align 8
  %224 = load float, float* %82, align 4
  %225 = load float, float* %83, align 16
  %226 = load float, float* %84, align 4
  %227 = load float, float* %85, align 8
  %228 = load float, float* %86, align 4
  call fastcc void @_ZL12append_cubicffffffP9SkWStream(float %223, float %224, float %225, float %226, float %227, float %228, %class.SkWStream* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %79) #11
  %229 = add nuw nsw i64 %220, 1
  %230 = load i32, i32* %71, align 8
  %231 = sext i32 %230 to i64
  %232 = icmp slt i64 %229, %231
  br i1 %232, label %219, label %213

233:                                              ; preds = %92
  br i1 %2, label %236, label %234

234:                                              ; preds = %233
  %235 = load float, float* %51, align 8
  br label %255

236:                                              ; preds = %233
  %237 = load <2 x float>, <2 x float>* %90, align 16
  %238 = load float, float* %51, align 8
  %239 = extractelement <2 x float> %237, i32 0
  %240 = fcmp une float %239, %238
  br i1 %240, label %255, label %241

241:                                              ; preds = %236
  %242 = shufflevector <2 x float> %237, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %243 = shufflevector <2 x float> %242, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %244 = load <4 x float>, <4 x float>* %91, align 4
  %245 = fcmp une <4 x float> %243, %244
  %246 = load float, float* %56, align 4
  %247 = extractelement <2 x float> %237, i32 1
  %248 = fcmp une float %247, %246
  %249 = shufflevector <4 x i1> %245, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %250 = or <4 x i1> %245, %249
  %251 = shufflevector <4 x i1> %250, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %252 = or <4 x i1> %250, %251
  %253 = extractelement <4 x i1> %252, i32 0
  %254 = or i1 %253, %248
  br i1 %254, label %255, label %268

255:                                              ; preds = %241, %236, %234
  %256 = phi float [ %235, %234 ], [ %238, %236 ], [ %238, %241 ]
  %257 = load float, float* %52, align 4
  %258 = load float, float* %53, align 16
  %259 = load float, float* %54, align 4
  %260 = load float, float* %55, align 8
  %261 = load float, float* %56, align 4
  call fastcc void @_ZL12append_cubicffffffP9SkWStream(float %256, float %257, float %258, float %259, float %260, float %261, %class.SkWStream* nonnull %66)
  br label %268

262:                                              ; preds = %92
  %263 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %67, align 8
  %264 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %263, i64 2
  %265 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %264, align 8
  %266 = call zeroext i1 %265(%class.SkWStream* nonnull %66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i64 2) #11
  %267 = call zeroext i1 @_ZNK22SkDynamicMemoryWStream13writeToStreamEP9SkWStream(%class.SkDynamicMemoryWStream* nonnull %12, %class.SkWStream* %3) #11
  call void @_ZN22SkDynamicMemoryWStream5resetEv(%class.SkDynamicMemoryWStream* nonnull %12) #11
  br label %268

268:                                              ; preds = %160, %182, %241, %127, %92, %97, %262, %131, %169, %218, %255
  %269 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %14, %struct.SkPoint* nonnull %48) #11
  br label %92

270:                                              ; preds = %94
  %271 = call zeroext i1 @_ZNK22SkDynamicMemoryWStream13writeToStreamEP9SkWStream(%class.SkDynamicMemoryWStream* nonnull %12, %class.SkWStream* %3) #11
  br label %272

272:                                              ; preds = %94, %270
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %57) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %47) #11
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %43) #11
  br label %273

273:                                              ; preds = %272, %41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  br label %274

274:                                              ; preds = %273, %23
  ret void
}

declare zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath*, %struct.SkRect*, i8*, i32*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN6SkPath4IterC1ERKS_b(%"class.SkPath::Iter"*, %class.SkPath* dereferenceable(16), i1 zeroext) unnamed_addr #3

declare i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"*, %struct.SkPoint*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL12append_cubicffffffP9SkWStream(float, float, float, float, float, float, %class.SkWStream*) unnamed_addr #1 {
  %8 = alloca [49 x i8], align 16
  %9 = alloca %class.SkString, align 8
  %10 = bitcast %class.SkString* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %class.SkString, %class.SkString* %9, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %11, align 8
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i64 0, i64 0)) #11
  %12 = getelementptr inbounds [49 x i8], [49 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 49, i1 false) #11
  %13 = call i32 @_Z16SkFloatToDecimalfPc(float %0, i8* nonnull %12) #11
  %14 = zext i32 %13 to i64
  %15 = bitcast %class.SkWStream* %6 to i1 (%class.SkWStream*, i8*, i64)***
  %16 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %17 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %16, i64 2
  %18 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %17, align 8
  %19 = call zeroext i1 %18(%class.SkWStream* %6, i8* nonnull %12, i64 %14) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %12) #11
  %20 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %21 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %20, i64 2
  %22 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %21, align 8
  %23 = call zeroext i1 %22(%class.SkWStream* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 49, i1 false) #11
  %24 = call i32 @_Z16SkFloatToDecimalfPc(float %1, i8* nonnull %12) #11
  %25 = zext i32 %24 to i64
  %26 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %27 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %26, i64 2
  %28 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %27, align 8
  %29 = call zeroext i1 %28(%class.SkWStream* %6, i8* nonnull %12, i64 %25) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %12) #11
  %30 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %31 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %30, i64 2
  %32 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %31, align 8
  %33 = call zeroext i1 %32(%class.SkWStream* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  %34 = fcmp une float %2, %4
  %35 = fcmp une float %3, %5
  %36 = or i1 %34, %35
  br i1 %36, label %37, label %58

37:                                               ; preds = %7
  call void @_ZN8SkString3setEPKc(%class.SkString* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0)) #11
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 49, i1 false) #11
  %38 = call i32 @_Z16SkFloatToDecimalfPc(float %2, i8* nonnull %12) #11
  %39 = zext i32 %38 to i64
  %40 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %41 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %40, i64 2
  %42 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %41, align 8
  %43 = call zeroext i1 %42(%class.SkWStream* %6, i8* nonnull %12, i64 %39) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %12) #11
  %44 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %45 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %44, i64 2
  %46 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %45, align 8
  %47 = call zeroext i1 %46(%class.SkWStream* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 49, i1 false) #11
  %48 = call i32 @_Z16SkFloatToDecimalfPc(float %3, i8* nonnull %12) #11
  %49 = zext i32 %48 to i64
  %50 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %51 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %50, i64 2
  %52 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %51, align 8
  %53 = call zeroext i1 %52(%class.SkWStream* %6, i8* nonnull %12, i64 %49) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %12) #11
  %54 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %55 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %54, i64 2
  %56 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %55, align 8
  %57 = call zeroext i1 %56(%class.SkWStream* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  br label %58

58:                                               ; preds = %7, %37
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 49, i1 false) #11
  %59 = call i32 @_Z16SkFloatToDecimalfPc(float %4, i8* nonnull %12) #11
  %60 = zext i32 %59 to i64
  %61 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %62 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %61, i64 2
  %63 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %62, align 8
  %64 = call zeroext i1 %63(%class.SkWStream* %6, i8* nonnull %12, i64 %60) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %12) #11
  %65 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %66 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %65, i64 2
  %67 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %66, align 8
  %68 = call zeroext i1 %67(%class.SkWStream* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 49, i1 false) #11
  %69 = call i32 @_Z16SkFloatToDecimalfPc(float %5, i8* nonnull %12) #11
  %70 = zext i32 %69 to i64
  %71 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %72 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %71, i64 2
  %73 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %72, align 8
  %74 = call zeroext i1 %73(%class.SkWStream* %6, i8* nonnull %12, i64 %70) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %12) #11
  %75 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %76 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %75, i64 2
  %77 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %76, align 8
  %78 = call zeroext i1 %77(%class.SkWStream* %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  %79 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %11, align 8
  %80 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %79, i64 0, i32 2
  %81 = call i64 @strlen(i8* %80) #12
  %82 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %15, align 8
  %83 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %82, i64 2
  %84 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %83, align 8
  %85 = call zeroext i1 %84(%class.SkWStream* %6, i8* %80, i64 %81) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPDFUtils9ClosePathEP9SkWStream(%class.SkWStream*) local_unnamed_addr #1 {
  %2 = bitcast %class.SkWStream* %0 to i1 (%class.SkWStream*, i8*, i64)***
  %3 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %2, align 8
  %4 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %3, i64 2
  %5 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %4, align 8
  %6 = tail call zeroext i1 %5(%class.SkWStream* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i64 2) #11
  ret void
}

declare zeroext i1 @_ZNK22SkDynamicMemoryWStream13writeToStreamEP9SkWStream(%class.SkDynamicMemoryWStream*, %class.SkWStream*) local_unnamed_addr #3

declare void @_ZN22SkDynamicMemoryWStream5resetEv(%class.SkDynamicMemoryWStream*) local_unnamed_addr #3

declare i64 @_ZNK22SkDynamicMemoryWStream12bytesWrittenEv(%class.SkDynamicMemoryWStream*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPDFUtils9PaintPathEN7SkPaint5StyleE14SkPathFillTypeP9SkWStream(i8 zeroext, i32, %class.SkWStream*) local_unnamed_addr #1 {
  switch i8 %0, label %24 [
    i8 0, label %4
    i8 2, label %10
    i8 1, label %16
  ]

4:                                                ; preds = %3
  %5 = bitcast %class.SkWStream* %2 to i1 (%class.SkWStream*, i8*, i64)***
  %6 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %6, i64 2
  %8 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkWStream* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.21, i64 0, i64 0), i64 1) #11
  br label %22

10:                                               ; preds = %3
  %11 = bitcast %class.SkWStream* %2 to i1 (%class.SkWStream*, i8*, i64)***
  %12 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %11, align 8
  %13 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %12, i64 2
  %14 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %13, align 8
  %15 = tail call zeroext i1 %14(%class.SkWStream* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0), i64 1) #11
  br label %22

16:                                               ; preds = %3
  %17 = bitcast %class.SkWStream* %2 to i1 (%class.SkWStream*, i8*, i64)***
  %18 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %17, align 8
  %19 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %18, i64 2
  %20 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %19, align 8
  %21 = tail call zeroext i1 %20(%class.SkWStream* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 1) #11
  br label %32

22:                                               ; preds = %10, %4
  %23 = icmp eq i32 %1, 1
  br i1 %23, label %26, label %32

24:                                               ; preds = %3
  %25 = icmp eq i32 %1, 1
  br i1 %25, label %26, label %32

26:                                               ; preds = %22, %24
  %27 = bitcast %class.SkWStream* %2 to i1 (%class.SkWStream*, i8*, i64)***
  %28 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %27, align 8
  %29 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %28, i64 2
  %30 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %29, align 8
  %31 = tail call zeroext i1 %30(%class.SkWStream* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), i64 1) #11
  br label %32

32:                                               ; preds = %16, %22, %24, %26
  %33 = bitcast %class.SkWStream* %2 to i1 (%class.SkWStream*, i8*, i64)***
  %34 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %33, align 8
  %35 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %34, i64 2
  %36 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %35, align 8
  %37 = tail call zeroext i1 %36(%class.SkWStream* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0), i64 1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPDFUtils10StrokePathEP9SkWStream(%class.SkWStream*) local_unnamed_addr #1 {
  %2 = bitcast %class.SkWStream* %0 to i1 (%class.SkWStream*, i8*, i64)***
  %3 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %2, align 8
  %4 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %3, i64 2
  %5 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %4, align 8
  %6 = tail call zeroext i1 %5(%class.SkWStream* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 1) #11
  %7 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %2, align 8
  %8 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %7, i64 2
  %9 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkWStream* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0), i64 1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPDFUtils17ApplyGraphicStateEiP9SkWStream(i32, %class.SkWStream*) local_unnamed_addr #1 {
  tail call void @_Z22SkPDFWriteResourceNameP9SkWStream17SkPDFResourceTypei(%class.SkWStream* %1, i32 0, i32 %0) #11
  %3 = bitcast %class.SkWStream* %1 to i1 (%class.SkWStream*, i8*, i64)***
  %4 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %4, i64 2
  %6 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkWStream* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i64 4) #11
  ret void
}

declare void @_Z22SkPDFWriteResourceNameP9SkWStream17SkPDFResourceTypei(%class.SkWStream*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPDFUtils12ApplyPatternEiP9SkWStream(i32, %class.SkWStream*) local_unnamed_addr #1 {
  %3 = bitcast %class.SkWStream* %1 to i1 (%class.SkWStream*, i8*, i64)***
  %4 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %4, i64 2
  %6 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkWStream* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i64 22) #11
  tail call void @_Z22SkPDFWriteResourceNameP9SkWStream17SkPDFResourceTypei(%class.SkWStream* %1, i32 1, i32 %0) #11
  %8 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %3, align 8
  %9 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %8, i64 2
  %10 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %9, align 8
  %11 = tail call zeroext i1 %10(%class.SkWStream* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i64 4) #11
  tail call void @_Z22SkPDFWriteResourceNameP9SkWStream17SkPDFResourceTypei(%class.SkWStream* %1, i32 1, i32 %0) #11
  %12 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %3, align 8
  %13 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %12, i64 2
  %14 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %13, align 8
  %15 = tail call zeroext i1 %14(%class.SkWStream* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i64 5) #11
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden i64 @_ZN10SkPDFUtils15ColorToDecimalFEfPc(float, i8* nocapture) local_unnamed_addr #5 {
  %3 = fmul float %0, 1.000000e+04
  %4 = fadd float %3, 5.000000e-01
  %5 = tail call float @llvm.floor.f32(float %4)
  %6 = fcmp olt float %5, 0x41DFFFFFE0000000
  %7 = select i1 %6, float %5, float 0x41DFFFFFE0000000
  %8 = fcmp ogt float %7, 0xC1DFFFFFE0000000
  %9 = select i1 %8, float %7, float 0xC1DFFFFFE0000000
  %10 = fptosi float %9 to i32
  %11 = add i32 %10, -1
  %12 = icmp ugt i32 %11, 9998
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = icmp sgt i32 %10, 0
  %15 = select i1 %14, i8 49, i8 48
  store i8 %15, i8* %1, align 1
  br label %43

16:                                               ; preds = %2
  store i8 46, i8* %1, align 1
  %17 = trunc i32 %10 to i16
  %18 = urem i16 %17, 10
  %19 = trunc i16 %18 to i8
  %20 = or i8 %19, 48
  %21 = getelementptr inbounds i8, i8* %1, i64 4
  store i8 %20, i8* %21, align 1
  %22 = trunc i32 %10 to i16
  %23 = udiv i16 %22, 10
  %24 = urem i16 %23, 10
  %25 = trunc i16 %24 to i8
  %26 = or i8 %25, 48
  %27 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 %26, i8* %27, align 1
  %28 = trunc i32 %10 to i16
  %29 = udiv i16 %28, 100
  %30 = urem i16 %29, 10
  %31 = trunc i16 %30 to i8
  %32 = or i8 %31, 48
  %33 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 %32, i8* %33, align 1
  %34 = trunc i32 %10 to i16
  %35 = udiv i16 %34, 1000
  %36 = urem i16 %35, 10
  %37 = trunc i16 %36 to i8
  %38 = or i8 %37, 48
  %39 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %38, i8* %39, align 1
  %40 = icmp eq i8 %19, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %16
  %42 = icmp eq i8 %25, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %41, %16, %46, %13
  %44 = phi i64 [ 1, %13 ], [ 5, %16 ], [ 4, %41 ], [ %48, %46 ]
  %45 = getelementptr inbounds i8, i8* %1, i64 %44
  store i8 0, i8* %45, align 1
  ret i64 %44

46:                                               ; preds = %41
  %47 = icmp eq i8 %31, 0
  %48 = select i1 %47, i64 2, i64 3
  br label %43
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN10SkPDFUtils14ColorToDecimalEhPc(i8 zeroext, i8* nocapture) local_unnamed_addr #7 {
  switch i8 %0, label %6 [
    i8 -1, label %3
    i8 0, label %3
  ]

3:                                                ; preds = %2, %2
  %4 = icmp eq i8 %0, 0
  %5 = select i1 %4, i8 48, i8 49
  store i8 %5, i8* %1, align 1
  br label %30

6:                                                ; preds = %2
  %7 = zext i8 %0 to i32
  %8 = mul nuw nsw i32 %7, 257003
  %9 = add nuw nsw i32 %8, 32768
  %10 = lshr i32 %9, 16
  store i8 46, i8* %1, align 1
  %11 = trunc i32 %10 to i16
  %12 = urem i16 %11, 10
  %13 = trunc i16 %12 to i8
  %14 = or i8 %13, 48
  %15 = getelementptr inbounds i8, i8* %1, i64 3
  store i8 %14, i8* %15, align 1
  %16 = udiv i32 %9, 655360
  %17 = trunc i32 %16 to i8
  %18 = urem i8 %17, 10
  %19 = or i8 %18, 48
  %20 = getelementptr inbounds i8, i8* %1, i64 2
  store i8 %19, i8* %20, align 1
  %21 = udiv i32 %9, 6553600
  %22 = trunc i32 %21 to i8
  %23 = urem i8 %22, 10
  %24 = or i8 %23, 48
  %25 = getelementptr inbounds i8, i8* %1, i64 1
  store i8 %24, i8* %25, align 1
  %26 = icmp eq i8 %14, 48
  %27 = icmp eq i8 %19, 48
  %28 = select i1 %27, i64 2, i64 3
  %29 = select i1 %26, i64 %28, i64 4
  br label %30

30:                                               ; preds = %6, %3
  %31 = phi i64 [ %29, %6 ], [ 1, %3 ]
  %32 = getelementptr inbounds i8, i8* %1, i64 %31
  store i8 0, i8* %32, align 1
  ret i64 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkPDFUtils20InverseTransformBBoxERK8SkMatrixP6SkRect(%class.SkMatrix* dereferenceable(40), %struct.SkRect*) local_unnamed_addr #1 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #11
  %5 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %6 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %6, align 16
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %8 = bitcast float* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %8, align 16
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %9, align 16
  store i32 16, i32* %5, align 4
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = trunc i32 %11 to i8
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %0) #11
  %16 = zext i8 %15 to i32
  store i32 %16, i32* %10, align 4
  br label %17

17:                                               ; preds = %14, %2
  %18 = phi i32 [ %16, %14 ], [ %11, %2 ]
  %19 = and i32 %18, 15
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %3) #11
  br label %25

23:                                               ; preds = %17
  %24 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %0, %class.SkMatrix* nonnull %3) #11
  br i1 %24, label %25, label %27

25:                                               ; preds = %21, %23
  %26 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* nonnull %3, %struct.SkRect* %1, %struct.SkRect* dereferenceable(16) %1, i32 1) #11
  br label %27

27:                                               ; preds = %23, %25
  %28 = phi i1 [ true, %25 ], [ false, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #11
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPDFUtils25PopulateTilingPatternDictEP9SkPDFDictR6SkRectNSt3__110unique_ptrIS0_NS4_14default_deleteIS0_EEEERK8SkMatrix(%class.SkPDFDict*, %struct.SkRect* nocapture readonly dereferenceable(16), %class.SkPDFDict*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1 {
  %5 = alloca %"class.std::__1::unique_ptr.30", align 8
  %6 = alloca %"class.std::__1::unique_ptr.30", align 8
  %7 = alloca %"class.std::__1::unique_ptr.30", align 8
  %8 = ptrtoint %class.SkPDFDict* %2 to i64
  tail call void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0)) #11
  tail call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i64 0, i64 0), i32 1) #11
  tail call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i32 1) #11
  tail call void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i32 1) #11
  %9 = bitcast %"class.std::__1::unique_ptr.30"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %17 = load float, float* %16, align 4
  %18 = tail call i8* @_Znwm(i64 32) #10
  %19 = bitcast i8* %18 to %class.SkPDFArray*
  tail call void @_ZN10SkPDFArrayC1Ev(%class.SkPDFArray* nonnull %19) #11
  tail call void @_ZN10SkPDFArray7reserveEi(%class.SkPDFArray* nonnull %19, i32 4) #11
  tail call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %19, float %11) #11
  tail call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %19, float %13) #11
  tail call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %19, float %15) #11
  tail call void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray* nonnull %19, float %17) #11
  %20 = ptrtoint i8* %18 to i64
  %21 = bitcast %"class.std::__1::unique_ptr.30"* %5 to i64*
  store i64 %20, i64* %21, align 8
  call void @_ZN9SkPDFDict12insertObjectEPKcONSt3__110unique_ptrI11SkPDFObjectNS2_14default_deleteIS4_EEEE(%class.SkPDFDict* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), %"class.std::__1::unique_ptr.30"* nonnull dereferenceable(8) %5) #11
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30"* %5, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.SkPDFObject*, %class.SkPDFObject** %22, align 8
  store %class.SkPDFObject* null, %class.SkPDFObject** %22, align 8
  %24 = icmp eq %class.SkPDFObject* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %4
  %26 = bitcast %class.SkPDFObject* %23 to void (%class.SkPDFObject*)***
  %27 = load void (%class.SkPDFObject*)**, void (%class.SkPDFObject*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkPDFObject*)*, void (%class.SkPDFObject*)** %27, i64 2
  %29 = load void (%class.SkPDFObject*)*, void (%class.SkPDFObject*)** %28, align 8
  call void %29(%class.SkPDFObject* nonnull %23) #11
  br label %30

30:                                               ; preds = %25, %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %31 = load float, float* %14, align 4
  %32 = load float, float* %10, align 4
  %33 = fsub float %31, %32
  call void @_ZN9SkPDFDict12insertScalarEPKcf(%class.SkPDFDict* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0), float %33) #11
  %34 = load float, float* %16, align 4
  %35 = load float, float* %12, align 4
  %36 = fsub float %34, %35
  call void @_ZN9SkPDFDict12insertScalarEPKcf(%class.SkPDFDict* %0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), float %36) #11
  %37 = bitcast %"class.std::__1::unique_ptr.30"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  %38 = bitcast %"class.std::__1::unique_ptr.30"* %6 to i64*
  store i64 %8, i64* %38, align 8
  call void @_ZN9SkPDFDict12insertObjectEPKcONSt3__110unique_ptrI11SkPDFObjectNS2_14default_deleteIS4_EEEE(%class.SkPDFDict* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0), %"class.std::__1::unique_ptr.30"* nonnull dereferenceable(8) %6) #11
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30"* %6, i64 0, i32 0, i32 0, i32 0
  %40 = load %class.SkPDFObject*, %class.SkPDFObject** %39, align 8
  store %class.SkPDFObject* null, %class.SkPDFObject** %39, align 8
  %41 = icmp eq %class.SkPDFObject* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %30
  %43 = bitcast %class.SkPDFObject* %40 to void (%class.SkPDFObject*)***
  %44 = load void (%class.SkPDFObject*)**, void (%class.SkPDFObject*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkPDFObject*)*, void (%class.SkPDFObject*)** %44, i64 2
  %46 = load void (%class.SkPDFObject*)*, void (%class.SkPDFObject*)** %45, align 8
  call void %46(%class.SkPDFObject* nonnull %40) #11
  br label %47

47:                                               ; preds = %30, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = trunc i32 %49 to i8
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %3) #11
  %54 = zext i8 %53 to i32
  store i32 %54, i32* %48, align 4
  br label %55

55:                                               ; preds = %47, %52
  %56 = phi i32 [ %54, %52 ], [ %49, %47 ]
  %57 = and i32 %56, 15
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %73, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.std::__1::unique_ptr.30"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  %61 = call %class.SkPDFArray* @_ZN10SkPDFUtils13MatrixToArrayERK8SkMatrix(%class.SkMatrix* dereferenceable(40) %3)
  %62 = ptrtoint %class.SkPDFArray* %61 to i64
  %63 = bitcast %"class.std::__1::unique_ptr.30"* %7 to i64*
  store i64 %62, i64* %63, align 8
  call void @_ZN9SkPDFDict12insertObjectEPKcONSt3__110unique_ptrI11SkPDFObjectNS2_14default_deleteIS4_EEEE(%class.SkPDFDict* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0), %"class.std::__1::unique_ptr.30"* nonnull dereferenceable(8) %7) #11
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30"* %7, i64 0, i32 0, i32 0, i32 0
  %65 = load %class.SkPDFObject*, %class.SkPDFObject** %64, align 8
  store %class.SkPDFObject* null, %class.SkPDFObject** %64, align 8
  %66 = icmp eq %class.SkPDFObject* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %59
  %68 = bitcast %class.SkPDFObject* %65 to void (%class.SkPDFObject*)***
  %69 = load void (%class.SkPDFObject*)**, void (%class.SkPDFObject*)*** %68, align 8
  %70 = getelementptr inbounds void (%class.SkPDFObject*)*, void (%class.SkPDFObject*)** %69, i64 2
  %71 = load void (%class.SkPDFObject*)*, void (%class.SkPDFObject*)** %70, align 8
  call void %71(%class.SkPDFObject* nonnull %65) #11
  br label %72

72:                                               ; preds = %67, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  br label %73

73:                                               ; preds = %55, %72
  ret void
}

declare void @_ZN9SkPDFDict10insertNameEPKcS1_(%class.SkPDFDict*, i8*, i8*) local_unnamed_addr #3

declare void @_ZN9SkPDFDict9insertIntEPKci(%class.SkPDFDict*, i8*, i32) local_unnamed_addr #3

declare void @_ZN9SkPDFDict12insertObjectEPKcONSt3__110unique_ptrI11SkPDFObjectNS2_14default_deleteIS4_EEEE(%class.SkPDFDict*, i8*, %"class.std::__1::unique_ptr.30"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN9SkPDFDict12insertScalarEPKcf(%class.SkPDFDict*, i8*, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkPDFUtils8ToBitmapEPK7SkImageP8SkBitmap(%class.SkImage*, %class.SkBitmap*) local_unnamed_addr #1 {
  %3 = alloca %class.SkBitmap, align 8
  %4 = bitcast %class.SkBitmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %3) #11
  %5 = bitcast %class.SkImage* %0 to %class.SkImage_Base*
  %6 = bitcast %class.SkImage* %0 to i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)***
  %7 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)**, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %7, i64 18
  %9 = load i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)*, i1 (%class.SkImage_Base*, %class.GrDirectContext*, %class.SkBitmap*, i32)** %8, align 8
  %10 = call zeroext i1 %9(%class.SkImage_Base* %5, %class.GrDirectContext* null, %class.SkBitmap* nonnull %3, i32 0) #11
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap* %1, %class.SkBitmap* nonnull dereferenceable(56) %3) #11
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i1 [ true, %11 ], [ false, %2 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #11
  ret i1 %14
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #3

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSEOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPDFUtils15AppendTransformERK8SkMatrixP9SkWStream(%class.SkMatrix* dereferenceable(40), %class.SkWStream*) local_unnamed_addr #1 {
  %3 = alloca [49 x i8], align 16
  %4 = alloca [6 x float], align 16
  %5 = bitcast [6 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds [6 x float], [6 x float]* %4, i64 0, i64 0
  %7 = bitcast [6 x float]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -1, i64 24, i1 false)
  %8 = call zeroext i1 @_ZNK8SkMatrix8asAffineEPf(%class.SkMatrix* %0, float* nonnull %6) #11
  br i1 %8, label %10, label %9

9:                                                ; preds = %2
  call void @_ZN8SkMatrix17SetAffineIdentityEPf(float* nonnull %6) #11
  br label %10

10:                                               ; preds = %9, %2
  %11 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 0
  %12 = bitcast %class.SkWStream* %1 to i1 (%class.SkWStream*, i8*, i64)***
  %13 = load float, float* %6, align 16
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 49, i1 false) #11
  %14 = call i32 @_Z16SkFloatToDecimalfPc(float %13, i8* nonnull %11) #11
  %15 = zext i32 %14 to i64
  %16 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %17 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %16, i64 2
  %18 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %17, align 8
  %19 = call zeroext i1 %18(%class.SkWStream* %1, i8* nonnull %11, i64 %15) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %11) #11
  %20 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %21 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %20, i64 2
  %22 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %21, align 8
  %23 = call zeroext i1 %22(%class.SkWStream* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  %24 = getelementptr inbounds [6 x float], [6 x float]* %4, i64 0, i64 1
  %25 = load float, float* %24, align 4
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 49, i1 false) #11
  %26 = call i32 @_Z16SkFloatToDecimalfPc(float %25, i8* nonnull %11) #11
  %27 = zext i32 %26 to i64
  %28 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %29 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %28, i64 2
  %30 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %29, align 8
  %31 = call zeroext i1 %30(%class.SkWStream* %1, i8* nonnull %11, i64 %27) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %11) #11
  %32 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %33 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %32, i64 2
  %34 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %33, align 8
  %35 = call zeroext i1 %34(%class.SkWStream* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  %36 = getelementptr inbounds [6 x float], [6 x float]* %4, i64 0, i64 2
  %37 = load float, float* %36, align 8
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 49, i1 false) #11
  %38 = call i32 @_Z16SkFloatToDecimalfPc(float %37, i8* nonnull %11) #11
  %39 = zext i32 %38 to i64
  %40 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %41 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %40, i64 2
  %42 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %41, align 8
  %43 = call zeroext i1 %42(%class.SkWStream* %1, i8* nonnull %11, i64 %39) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %11) #11
  %44 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %45 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %44, i64 2
  %46 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %45, align 8
  %47 = call zeroext i1 %46(%class.SkWStream* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  %48 = getelementptr inbounds [6 x float], [6 x float]* %4, i64 0, i64 3
  %49 = load float, float* %48, align 4
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 49, i1 false) #11
  %50 = call i32 @_Z16SkFloatToDecimalfPc(float %49, i8* nonnull %11) #11
  %51 = zext i32 %50 to i64
  %52 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %53 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %52, i64 2
  %54 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %53, align 8
  %55 = call zeroext i1 %54(%class.SkWStream* %1, i8* nonnull %11, i64 %51) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %11) #11
  %56 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %57 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %56, i64 2
  %58 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %57, align 8
  %59 = call zeroext i1 %58(%class.SkWStream* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  %60 = getelementptr inbounds [6 x float], [6 x float]* %4, i64 0, i64 4
  %61 = load float, float* %60, align 16
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 49, i1 false) #11
  %62 = call i32 @_Z16SkFloatToDecimalfPc(float %61, i8* nonnull %11) #11
  %63 = zext i32 %62 to i64
  %64 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %65 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %64, i64 2
  %66 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %65, align 8
  %67 = call zeroext i1 %66(%class.SkWStream* %1, i8* nonnull %11, i64 %63) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %11) #11
  %68 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %69 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %68, i64 2
  %70 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %69, align 8
  %71 = call zeroext i1 %70(%class.SkWStream* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  %72 = getelementptr inbounds [6 x float], [6 x float]* %4, i64 0, i64 5
  %73 = load float, float* %72, align 4
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -86, i64 49, i1 false) #11
  %74 = call i32 @_Z16SkFloatToDecimalfPc(float %73, i8* nonnull %11) #11
  %75 = zext i32 %74 to i64
  %76 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %77 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %76, i64 2
  %78 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %77, align 8
  %79 = call zeroext i1 %78(%class.SkWStream* %1, i8* nonnull %11, i64 %75) #11
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %11) #11
  %80 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %81 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %80, i64 2
  %82 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %81, align 8
  %83 = call zeroext i1 %82(%class.SkWStream* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #11
  %84 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %12, align 8
  %85 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %84, i64 2
  %86 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %85, align 8
  %87 = call zeroext i1 %86(%class.SkWStream* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0), i64 3) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void
}

declare i32 @_Z16SkFloatToDecimalfPc(float, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_Z20SkConvertQuadToCubicPK7SkPointPS_(%struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #3

declare i32 @_ZNK7SkConic15computeQuadPOW2Ef(%struct.SkConic*, float) local_unnamed_addr #3

declare i32 @_ZNK7SkConic17chopIntoQuadsPOW2EP7SkPointi(%struct.SkConic*, %struct.SkPoint*, i32) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #3

declare void @_ZN8SkString3setEPKc(%class.SkString*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #3

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #3

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #3

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN10SkPDFArrayC1Ev(%class.SkPDFArray*) unnamed_addr #3

declare void @_ZN10SkPDFArray7reserveEi(%class.SkPDFArray*, i32) local_unnamed_addr #3

declare void @_ZN10SkPDFArray12appendScalarEf(%class.SkPDFArray*, float) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
