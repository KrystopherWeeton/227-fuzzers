; ModuleID = '../../third_party/libvpx/source/libvpx/vp8/encoder/encodemb.c'
source_filename = "../../third_party/libvpx/source/libvpx/vp8/encoder/encodemb.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TOKENVALUE = type { i16, i16 }
%struct.block = type { i16*, i16*, i16*, i16*, i16*, i16*, i16*, i16*, i16, i8**, i32, i32 }
%struct.blockd = type { i16*, i16*, i8*, i16*, i32, i8*, %union.b_mode_info }
%union.b_mode_info = type { i32 }
%struct.macroblock = type { [400 x i16], [400 x i16], [256 x i8], i8*, [25 x %struct.block], %struct.yv12_buffer_config, %struct.macroblockd, %struct.PARTITION_INFO*, %struct.PARTITION_INFO*, %struct.PARTITION_INFO*, [4 x i32], %struct.search_site*, i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32, i32, [2 x i32*], [2 x i32*], [10 x i32]*, [10 x i32]*, [10 x [10 x i32]]*, i32*, [8 x [3 x [12 x i32]]]*, i32, i32, i32, i32, i32, i32, i8*, i8*, %struct.mv_context*, i32, i32, i32, i32, i32, i32, %union.int_mv, i32, i32, i8, i32, [4 x [8 x [3 x [12 x i32]]]], [2 x [2047 x i32]], [5 x i32], [4 x i32], i64, i64, [4 x i32], [20 x i32], [20 x i32], i32, [20 x i32], i32, i32, i32, i32, i32, [1024 x i32], void (i16*, i16*, i32)*, void (i16*, i16*, i32)*, void (i16*, i16*, i32)*, void (%struct.block*, %struct.blockd*)*, i32, i32, [8 x i8] }
%struct.yv12_buffer_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.macroblockd = type { [384 x i8], [400 x i16], [400 x i16], [25 x i8], [7 x i8], [16 x i16], [16 x i16], [16 x i16], [16 x i16], [25 x %struct.blockd], i32, %struct.yv12_buffer_config, %struct.yv12_buffer_config, %struct.modeinfo*, i32, i32, i32, i32, [3 x i8*], [3 x i8*], [2 x i32], %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES*, i8, i8, i8, i8, [3 x i8], [2 x [4 x i8]], i8, i8, [4 x i8], [4 x i8], [4 x i8], [4 x i8], i32, i32, i32, i32, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, void (i8*, i32, i32, i32, i8*, i32)*, i8*, i32, %struct.vpx_internal_error_info, [16 x i8], [704 x i8] }
%struct.modeinfo = type { %struct.MB_MODE_INFO, [16 x %union.b_mode_info] }
%struct.MB_MODE_INFO = type { i8, i8, i8, i8, %union.int_mv, i8, i8, i8, i8 }
%struct.ENTROPY_CONTEXT_PLANES = type { [4 x i8], [2 x i8], [2 x i8], i8 }
%struct.vpx_internal_error_info = type { i32, i32, [80 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.PARTITION_INFO = type { i32, [16 x %struct.anon] }
%struct.anon = type { i32, %union.int_mv }
%struct.search_site = type { %struct.MV, i32 }
%struct.MV = type { i16, i16 }
%struct.mv_context = type { [19 x i8] }
%union.int_mv = type { i32 }
%struct.vp8_token_state = type { i32, i32, i8, i8, i16 }

@vp8_block2above = external local_unnamed_addr constant [25 x i8], align 16
@vp8_block2left = external local_unnamed_addr constant [25 x i8], align 16
@plane_rd_mult = internal unnamed_addr constant [4 x i32] [i32 4, i32 16, i32 2, i32 4], align 16
@vp8_default_zig_zag1d = external local_unnamed_addr constant [16 x i32], align 16
@vp8_dct_value_tokens_ptr = external local_unnamed_addr constant %struct.TOKENVALUE*, align 8
@vp8_coef_bands = external local_unnamed_addr constant [16 x i8], align 16
@vp8_prev_token_class = external local_unnamed_addr constant [12 x i8], align 16
@vp8_dct_value_cost_ptr = external local_unnamed_addr constant i16*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_subtract_b(%struct.block* nocapture readonly, %struct.blockd* nocapture readonly, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.block, %struct.block* %0, i64 0, i32 9
  %5 = load i8**, i8*** %4, align 8
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.block, %struct.block* %0, i64 0, i32 10
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %6, i64 %9
  %11 = getelementptr inbounds %struct.block, %struct.block* %0, i64 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %struct.blockd, %struct.blockd* %1, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %struct.block, %struct.block* %0, i64 0, i32 11
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %2 to i64
  %18 = sext i32 %16 to i64
  tail call void @vpx_subtract_block_sse2(i32 4, i32 4, i16* %12, i64 %17, i8* %10, i64 %18, i8* %14, i64 %17) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @vpx_subtract_block_sse2(i32, i32, i16*, i64, i8*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_subtract_mbuv(i16*, i8*, i8*, i32, i8*, i8*, i32) local_unnamed_addr #0 {
  %8 = getelementptr inbounds i16, i16* %0, i64 256
  %9 = getelementptr inbounds i16, i16* %0, i64 320
  %10 = sext i32 %3 to i64
  %11 = sext i32 %6 to i64
  tail call void @vpx_subtract_block_sse2(i32 8, i32 8, i16* %8, i64 8, i8* %1, i64 %10, i8* %4, i64 %11) #3
  tail call void @vpx_subtract_block_sse2(i32 8, i32 8, i16* %9, i64 8, i8* %2, i64 %10, i8* %5, i64 %11) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_subtract_mby(i16*, i8*, i32, i8*, i32) local_unnamed_addr #0 {
  %6 = sext i32 %2 to i64
  %7 = sext i32 %4 to i64
  tail call void @vpx_subtract_block_sse2(i32 16, i32 16, i16* %0, i64 16, i8* %1, i64 %6, i8* %3, i64 %7) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_transform_mbuv(%struct.macroblock* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 68
  %3 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %2, align 8
  %4 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 16, i32 0
  %5 = load i16*, i16** %4, align 8
  %6 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 16, i32 1
  %7 = load i16*, i16** %6, align 8
  tail call void %3(i16* %5, i16* %7, i32 16) #3
  %8 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %2, align 8
  %9 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 18, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 18, i32 1
  %12 = load i16*, i16** %11, align 8
  tail call void %8(i16* %10, i16* %12, i32 16) #3
  %13 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %2, align 8
  %14 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 20, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 20, i32 1
  %17 = load i16*, i16** %16, align 8
  tail call void %13(i16* %15, i16* %17, i32 16) #3
  %18 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %2, align 8
  %19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 22, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 22, i32 1
  %22 = load i16*, i16** %21, align 8
  tail call void %18(i16* %20, i16* %22, i32 16) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_transform_intra_mby(%struct.macroblock*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 68
  %3 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %2, align 8
  %4 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 0, i32 0
  %5 = load i16*, i16** %4, align 8
  %6 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 0, i32 1
  %7 = load i16*, i16** %6, align 8
  tail call void %3(i16* %5, i16* %7, i32 32) #3
  %8 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %2, align 8
  %9 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 2, i32 0
  %10 = load i16*, i16** %9, align 8
  %11 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 2, i32 1
  %12 = load i16*, i16** %11, align 8
  tail call void %8(i16* %10, i16* %12, i32 32) #3
  %13 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %2, align 8
  %14 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 4, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 4, i32 1
  %17 = load i16*, i16** %16, align 8
  tail call void %13(i16* %15, i16* %17, i32 32) #3
  %18 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %2, align 8
  %19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 6, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 6, i32 1
  %22 = load i16*, i16** %21, align 8
  tail call void %18(i16* %20, i16* %22, i32 32) #3
  %23 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %2, align 8
  %24 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 8, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 8, i32 1
  %27 = load i16*, i16** %26, align 8
  tail call void %23(i16* %25, i16* %27, i32 32) #3
  %28 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %2, align 8
  %29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 10, i32 0
  %30 = load i16*, i16** %29, align 8
  %31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 10, i32 1
  %32 = load i16*, i16** %31, align 8
  tail call void %28(i16* %30, i16* %32, i32 32) #3
  %33 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %2, align 8
  %34 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 12, i32 0
  %35 = load i16*, i16** %34, align 8
  %36 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 12, i32 1
  %37 = load i16*, i16** %36, align 8
  tail call void %33(i16* %35, i16* %37, i32 32) #3
  %38 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %2, align 8
  %39 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 14, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 14, i32 1
  %42 = load i16*, i16** %41, align 8
  tail call void %38(i16* %40, i16* %42, i32 32) #3
  %43 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 384
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 0
  %45 = load i16, i16* %44, align 2
  store i16 %45, i16* %43, align 2
  %46 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 16
  %47 = load i16, i16* %46, align 2
  %48 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 385
  store i16 %47, i16* %48, align 2
  %49 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 32
  %50 = load i16, i16* %49, align 2
  %51 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 386
  store i16 %50, i16* %51, align 2
  %52 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 48
  %53 = load i16, i16* %52, align 2
  %54 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 387
  store i16 %53, i16* %54, align 2
  %55 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 64
  %56 = load i16, i16* %55, align 2
  %57 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 388
  store i16 %56, i16* %57, align 2
  %58 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 80
  %59 = load i16, i16* %58, align 2
  %60 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 389
  store i16 %59, i16* %60, align 2
  %61 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 96
  %62 = load i16, i16* %61, align 2
  %63 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 390
  store i16 %62, i16* %63, align 2
  %64 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 112
  %65 = load i16, i16* %64, align 2
  %66 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 391
  store i16 %65, i16* %66, align 2
  %67 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 128
  %68 = load i16, i16* %67, align 2
  %69 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 392
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 144
  %71 = load i16, i16* %70, align 2
  %72 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 393
  store i16 %71, i16* %72, align 2
  %73 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 160
  %74 = load i16, i16* %73, align 2
  %75 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 394
  store i16 %74, i16* %75, align 2
  %76 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 176
  %77 = load i16, i16* %76, align 2
  %78 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 395
  store i16 %77, i16* %78, align 2
  %79 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 192
  %80 = load i16, i16* %79, align 2
  %81 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 396
  store i16 %80, i16* %81, align 2
  %82 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 208
  %83 = load i16, i16* %82, align 2
  %84 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 397
  store i16 %83, i16* %84, align 2
  %85 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 224
  %86 = load i16, i16* %85, align 2
  %87 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 398
  store i16 %86, i16* %87, align 2
  %88 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 240
  %89 = load i16, i16* %88, align 2
  %90 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 399
  store i16 %89, i16* %90, align 2
  %91 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 69
  %92 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %91, align 32
  %93 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 24, i32 0
  %94 = load i16*, i16** %93, align 8
  %95 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 24, i32 1
  %96 = load i16*, i16** %95, align 8
  tail call void %92(i16* %94, i16* %96, i32 8) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_optimize_mby(%struct.macroblock* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca %struct.ENTROPY_CONTEXT_PLANES, align 1
  %3 = alloca %struct.ENTROPY_CONTEXT_PLANES, align 1
  %4 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %4) #3
  %5 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 -86, i64 9, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %5) #3
  %6 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 -86, i64 9, i1 false)
  %7 = load %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES** %6, align 16
  %8 = icmp eq %struct.ENTROPY_CONTEXT_PLANES* %7, null
  br i1 %8, label %103, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 22
  %11 = load %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES** %10, align 8
  %12 = icmp eq %struct.ENTROPY_CONTEXT_PLANES* %11, null
  br i1 %12, label %103, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %11, i64 0, i32 0, i64 0
  %15 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %7, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 %15, i64 9, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %5, i8* align 1 %14, i64 9, i1 false)
  %16 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 13
  %17 = load %struct.modeinfo*, %struct.modeinfo** %16, align 32
  %18 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %17, i64 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 4
  %20 = icmp ne i8 %19, 4
  %21 = icmp ne i8 %19, 9
  %22 = and i1 %20, %21
  %23 = select i1 %22, i32 0, i32 3
  br label %24

24:                                               ; preds = %24, %13
  %25 = phi i64 [ 0, %13 ], [ %35, %24 ]
  %26 = getelementptr inbounds [25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = zext i8 %27 to i64
  %29 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %28
  %30 = getelementptr inbounds [25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 %25
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %32
  %34 = trunc i64 %25 to i32
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 %34, i32 %23, i8* %29, i8* %33)
  %35 = add nuw nsw i64 %25, 1
  %36 = icmp eq i64 %35, 16
  br i1 %36, label %37, label %24

37:                                               ; preds = %24
  switch i8 %19, label %38 [
    i8 9, label %103
    i8 4, label %103
  ]

38:                                               ; preds = %37
  %39 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 24), align 8
  %40 = zext i8 %39 to i64
  %41 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %40
  %42 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 24), align 8
  %43 = zext i8 %42 to i64
  %44 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %43
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 24, i32 1, i8* %41, i8* %44)
  %45 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 9, i64 24, i32 3
  %46 = load i16*, i16** %45, align 8
  %47 = load i16, i16* %46, align 2
  %48 = icmp sgt i16 %47, 34
  br i1 %48, label %49, label %53

49:                                               ; preds = %38
  %50 = getelementptr inbounds i16, i16* %46, i64 1
  %51 = load i16, i16* %50, align 2
  %52 = icmp sgt i16 %51, 34
  br i1 %52, label %103, label %53

53:                                               ; preds = %49, %38
  %54 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 9, i64 24, i32 5
  %55 = load i8*, i8** %54, align 8
  %56 = load i8, i8* %55, align 1
  %57 = icmp sgt i8 %56, 0
  br i1 %57, label %58, label %97

58:                                               ; preds = %53
  %59 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 9, i64 24, i32 1
  %60 = load i16*, i16** %59, align 8
  %61 = sext i8 %56 to i64
  br label %64

62:                                               ; preds = %64
  %63 = icmp eq i64 %78, %61
  br i1 %63, label %79, label %64

64:                                               ; preds = %62, %58
  %65 = phi i64 [ 0, %58 ], [ %78, %62 ]
  %66 = phi i32 [ 0, %58 ], [ %76, %62 ]
  %67 = getelementptr inbounds [16 x i32], [16 x i32]* @vp8_default_zig_zag1d, i64 0, i64 %65
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i16, i16* %60, i64 %69
  %71 = load i16, i16* %70, align 2
  %72 = sext i16 %71 to i32
  %73 = icmp slt i32 %72, 0
  %74 = sub nsw i32 0, %72
  %75 = select i1 %73, i32 %74, i32 %72
  %76 = add nuw nsw i32 %75, %66
  %77 = icmp slt i32 %76, 35
  %78 = add nuw nsw i64 %65, 1
  br i1 %77, label %62, label %103

79:                                               ; preds = %62
  %80 = icmp ult i32 %76, 35
  br i1 %80, label %81, label %103

81:                                               ; preds = %79
  %82 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 9, i64 24, i32 0
  br label %83

83:                                               ; preds = %83, %81
  %84 = phi i64 [ 0, %81 ], [ %92, %83 ]
  %85 = getelementptr inbounds [16 x i32], [16 x i32]* @vp8_default_zig_zag1d, i64 0, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = load i16*, i16** %82, align 8
  %88 = sext i32 %86 to i64
  %89 = getelementptr inbounds i16, i16* %87, i64 %88
  store i16 0, i16* %89, align 2
  %90 = load i16*, i16** %59, align 8
  %91 = getelementptr inbounds i16, i16* %90, i64 %88
  store i16 0, i16* %91, align 2
  %92 = add nuw nsw i64 %84, 1
  %93 = load i8*, i8** %54, align 8
  %94 = load i8, i8* %93, align 1
  %95 = sext i8 %94 to i64
  %96 = icmp slt i64 %92, %95
  br i1 %96, label %83, label %97

97:                                               ; preds = %83, %53
  %98 = phi i8* [ %55, %53 ], [ %93, %83 ]
  store i8 0, i8* %98, align 1
  %99 = load i8*, i8** %54, align 8
  %100 = load i8, i8* %99, align 1
  %101 = icmp ne i8 %100, 0
  %102 = zext i1 %101 to i8
  store i8 %102, i8* %44, align 1
  store i8 %102, i8* %41, align 1
  br label %103

103:                                              ; preds = %64, %37, %37, %97, %79, %49, %9, %1
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %5) #3
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %4) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @optimize_b(%struct.macroblock* nocapture readonly, i32, i32, i8* nocapture, i8* nocapture) unnamed_addr #0 {
  %6 = alloca [17 x [2 x %struct.vp8_token_state]], align 16
  %7 = alloca [2 x i32], align 4
  %8 = bitcast [17 x [2 x %struct.vp8_token_state]]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 408, i8* nonnull %8) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -86, i64 408, i1 false)
  %9 = bitcast [2 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #3
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 0
  %11 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 1
  %12 = sext i32 %2 to i64
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @plane_rd_mult, i64 0, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %1 to i64
  %16 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 9, i64 %15, i32 3
  %17 = load i16*, i16** %16, align 8
  %18 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 %15, i32 1
  %19 = load i16*, i16** %18, align 8
  %20 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 9, i64 %15, i32 0
  %21 = load i16*, i16** %20, align 8
  %22 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 9, i64 %15, i32 1
  %23 = load i16*, i16** %22, align 8
  %24 = icmp eq i32 %2, 0
  %25 = zext i1 %24 to i32
  %26 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 9, i64 %15, i32 5
  %27 = load i8*, i8** %26, align 8
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  %30 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 18
  %31 = load i32, i32* %30, align 8
  %32 = mul nsw i32 %31, %14
  %33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 13
  %34 = load %struct.modeinfo*, %struct.modeinfo** %33, align 32
  %35 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %34, i64 0, i32 0, i32 2
  %36 = load i8, i8* %35, align 2
  %37 = icmp eq i8 %36, 0
  %38 = mul nsw i32 %32, 9
  %39 = ashr i32 %38, 4
  %40 = select i1 %37, i32 %39, i32 %32
  %41 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 17
  %42 = load i32, i32* %41, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %10, align 4
  %43 = sext i8 %28 to i64
  %44 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %43, i64 0
  %45 = getelementptr inbounds %struct.vp8_token_state, %struct.vp8_token_state* %44, i64 0, i32 0
  store i32 0, i32* %45, align 8
  %46 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %43, i64 0, i32 1
  store i32 0, i32* %46, align 4
  %47 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %43, i64 0, i32 2
  store i8 16, i8* %47, align 8
  %48 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %43, i64 0, i32 3
  store i8 11, i8* %48, align 1
  %49 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %43, i64 0, i32 4
  store i16 0, i16* %49, align 2
  %50 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %43, i64 1
  %51 = bitcast %struct.vp8_token_state* %50 to i8*
  %52 = bitcast %struct.vp8_token_state* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 8 %52, i64 12, i1 false)
  %53 = icmp sgt i32 %29, %25
  br i1 %53, label %54, label %311

54:                                               ; preds = %5
  %55 = load %struct.TOKENVALUE*, %struct.TOKENVALUE** @vp8_dct_value_tokens_ptr, align 8
  %56 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 29
  %57 = load i16*, i16** @vp8_dct_value_cost_ptr, align 8
  %58 = zext i1 %24 to i64
  br label %59

59:                                               ; preds = %54, %303
  %60 = phi i64 [ %43, %54 ], [ %65, %303 ]
  %61 = phi i32 [ 0, %54 ], [ %304, %303 ]
  %62 = phi i32 [ 0, %54 ], [ %305, %303 ]
  %63 = phi i32 [ %29, %54 ], [ %307, %303 ]
  %64 = phi i32 [ 0, %54 ], [ %306, %303 ]
  %65 = add nsw i64 %60, -1
  %66 = getelementptr inbounds [16 x i32], [16 x i32]* @vp8_default_zig_zag1d, i64 0, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i16, i16* %21, i64 %68
  %70 = load i16, i16* %69, align 2
  %71 = sext i16 %70 to i32
  %72 = icmp eq i16 %70, 0
  br i1 %72, label %274, label %73

73:                                               ; preds = %59
  %74 = sext i32 %63 to i64
  %75 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %74, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %74, i64 1, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %74, i64 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %74, i64 1, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = sext i16 %70 to i64
  %84 = getelementptr inbounds %struct.TOKENVALUE, %struct.TOKENVALUE* %55, i64 %83, i32 0
  %85 = load i16, i16* %84, align 2
  %86 = icmp slt i32 %63, 16
  br i1 %86, label %87, label %108

87:                                               ; preds = %73
  %88 = getelementptr inbounds [16 x i8], [16 x i8]* @vp8_coef_bands, i64 0, i64 %60
  %89 = load i8, i8* %88, align 1
  %90 = sext i16 %85 to i64
  %91 = getelementptr inbounds [12 x i8], [12 x i8]* @vp8_prev_token_class, i64 0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = load [8 x [3 x [12 x i32]]]*, [8 x [3 x [12 x i32]]]** %56, align 8
  %94 = zext i8 %89 to i64
  %95 = zext i8 %92 to i64
  %96 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %74, i64 0, i32 3
  %97 = load i8, i8* %96, align 1
  %98 = sext i8 %97 to i64
  %99 = getelementptr inbounds [8 x [3 x [12 x i32]]], [8 x [3 x [12 x i32]]]* %93, i64 %12, i64 %94, i64 %95, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = add nsw i32 %100, %80
  %102 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %74, i64 1, i32 3
  %103 = load i8, i8* %102, align 1
  %104 = sext i8 %103 to i64
  %105 = getelementptr inbounds [8 x [3 x [12 x i32]]], [8 x [3 x [12 x i32]]]* %93, i64 %12, i64 %94, i64 %95, i64 %104
  %106 = load i32, i32* %105, align 4
  %107 = add nsw i32 %106, %82
  br label %108

108:                                              ; preds = %87, %73
  %109 = phi i32 [ %101, %87 ], [ %80, %73 ]
  %110 = phi i32 [ %107, %87 ], [ %82, %73 ]
  %111 = mul nsw i32 %109, %40
  %112 = add nsw i32 %111, 128
  %113 = ashr i32 %112, 8
  %114 = mul nsw i32 %76, %42
  %115 = add nsw i32 %113, %114
  %116 = mul nsw i32 %110, %40
  %117 = add nsw i32 %116, 128
  %118 = ashr i32 %117, 8
  %119 = mul nsw i32 %78, %42
  %120 = add nsw i32 %118, %119
  %121 = icmp eq i32 %115, %120
  %122 = and i32 %112, 255
  %123 = and i32 %117, 255
  %124 = select i1 %121, i32 %122, i32 %115
  %125 = select i1 %121, i32 %123, i32 %120
  %126 = icmp slt i32 %125, %124
  %127 = zext i1 %126 to i32
  %128 = getelementptr inbounds i16, i16* %57, i64 %83
  %129 = load i16, i16* %128, align 2
  %130 = sext i16 %129 to i32
  %131 = getelementptr inbounds i16, i16* %23, i64 %68
  %132 = load i16, i16* %131, align 2
  %133 = sext i16 %132 to i32
  %134 = getelementptr inbounds i16, i16* %19, i64 %68
  %135 = load i16, i16* %134, align 2
  %136 = sext i16 %135 to i32
  %137 = sub nsw i32 %133, %136
  %138 = mul nsw i32 %137, %137
  %139 = select i1 %126, i32 %110, i32 %109
  %140 = add nsw i32 %139, %130
  %141 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %65, i64 0, i32 0
  store i32 %140, i32* %141, align 8
  %142 = select i1 %126, i32 %78, i32 %76
  %143 = add nsw i32 %142, %138
  %144 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %65, i64 0, i32 1
  store i32 %143, i32* %144, align 4
  %145 = trunc i32 %63 to i8
  %146 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %65, i64 0, i32 2
  store i8 %145, i8* %146, align 8
  %147 = trunc i16 %85 to i8
  %148 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %65, i64 0, i32 3
  store i8 %147, i8* %148, align 1
  %149 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %65, i64 0, i32 4
  store i16 %70, i16* %149, align 2
  %150 = trunc i64 %65 to i32
  %151 = shl i32 %127, %150
  %152 = or i32 %62, %151
  %153 = load i32, i32* %79, align 8
  %154 = icmp slt i32 %71, 0
  %155 = sub nsw i32 0, %71
  %156 = select i1 %154, i32 %155, i32 %71
  %157 = getelementptr inbounds i16, i16* %17, i64 %68
  %158 = load i16, i16* %157, align 2
  %159 = sext i16 %158 to i32
  %160 = mul nsw i32 %156, %159
  %161 = load i16, i16* %134, align 2
  %162 = sext i16 %161 to i32
  %163 = icmp slt i32 %162, 0
  %164 = sub nsw i32 0, %162
  %165 = select i1 %163, i32 %164, i32 %162
  %166 = icmp sgt i32 %160, %165
  %167 = add nsw i32 %165, %159
  %168 = icmp slt i32 %160, %167
  %169 = and i1 %166, %168
  br i1 %169, label %170, label %177

170:                                              ; preds = %108
  %171 = lshr i16 %70, 15
  %172 = zext i16 %171 to i32
  %173 = sub nsw i32 0, %172
  %174 = shl nsw i32 %173, 1
  %175 = or i32 %174, 1
  %176 = sub nsw i32 %71, %175
  br label %177

177:                                              ; preds = %170, %108
  %178 = phi i32 [ %176, %170 ], [ %71, %108 ]
  %179 = phi i32 [ %173, %170 ], [ %64, %108 ]
  %180 = icmp eq i32 %178, 0
  br i1 %180, label %181, label %190

181:                                              ; preds = %177
  %182 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %74, i64 0, i32 3
  %183 = load i8, i8* %182, align 1
  %184 = icmp eq i8 %183, 11
  %185 = select i1 %184, i32 11, i32 0
  %186 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %74, i64 1, i32 3
  %187 = load i8, i8* %186, align 1
  %188 = icmp eq i8 %187, 11
  %189 = select i1 %188, i32 11, i32 0
  br label %195

190:                                              ; preds = %177
  %191 = sext i32 %178 to i64
  %192 = getelementptr inbounds %struct.TOKENVALUE, %struct.TOKENVALUE* %55, i64 %191, i32 0
  %193 = load i16, i16* %192, align 2
  %194 = sext i16 %193 to i32
  br label %195

195:                                              ; preds = %190, %181
  %196 = phi i32 [ %194, %190 ], [ %185, %181 ]
  %197 = phi i32 [ %194, %190 ], [ %189, %181 ]
  br i1 %86, label %198, label %231

198:                                              ; preds = %195
  %199 = getelementptr inbounds [16 x i8], [16 x i8]* @vp8_coef_bands, i64 0, i64 %60
  %200 = load i8, i8* %199, align 1
  %201 = icmp eq i32 %196, 11
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = sext i32 %196 to i64
  %204 = getelementptr inbounds [12 x i8], [12 x i8]* @vp8_prev_token_class, i64 0, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = load [8 x [3 x [12 x i32]]]*, [8 x [3 x [12 x i32]]]** %56, align 8
  %207 = zext i8 %200 to i64
  %208 = zext i8 %205 to i64
  %209 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %74, i64 0, i32 3
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i64
  %212 = getelementptr inbounds [8 x [3 x [12 x i32]]], [8 x [3 x [12 x i32]]]* %206, i64 %12, i64 %207, i64 %208, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = add nsw i32 %213, %153
  br label %215

215:                                              ; preds = %198, %202
  %216 = phi i32 [ %214, %202 ], [ %153, %198 ]
  %217 = icmp eq i32 %197, 11
  br i1 %217, label %231, label %218

218:                                              ; preds = %215
  %219 = sext i32 %197 to i64
  %220 = getelementptr inbounds [12 x i8], [12 x i8]* @vp8_prev_token_class, i64 0, i64 %219
  %221 = load i8, i8* %220, align 1
  %222 = load [8 x [3 x [12 x i32]]]*, [8 x [3 x [12 x i32]]]** %56, align 8
  %223 = zext i8 %200 to i64
  %224 = zext i8 %221 to i64
  %225 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %74, i64 1, i32 3
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i64
  %228 = getelementptr inbounds [8 x [3 x [12 x i32]]], [8 x [3 x [12 x i32]]]* %222, i64 %12, i64 %223, i64 %224, i64 %227
  %229 = load i32, i32* %228, align 4
  %230 = add nsw i32 %229, %82
  br label %231

231:                                              ; preds = %215, %218, %195
  %232 = phi i32 [ %216, %218 ], [ %216, %215 ], [ %153, %195 ]
  %233 = phi i32 [ %230, %218 ], [ %82, %215 ], [ %82, %195 ]
  %234 = mul nsw i32 %232, %40
  %235 = add nsw i32 %234, 128
  %236 = ashr i32 %235, 8
  %237 = add nsw i32 %236, %114
  %238 = mul nsw i32 %233, %40
  %239 = add nsw i32 %238, 128
  %240 = ashr i32 %239, 8
  %241 = add nsw i32 %240, %119
  %242 = icmp eq i32 %237, %241
  %243 = and i32 %235, 255
  %244 = and i32 %239, 255
  %245 = select i1 %242, i32 %243, i32 %237
  %246 = select i1 %242, i32 %244, i32 %241
  %247 = icmp slt i32 %246, %245
  %248 = zext i1 %247 to i32
  %249 = sext i32 %178 to i64
  %250 = getelementptr inbounds i16, i16* %57, i64 %249
  %251 = load i16, i16* %250, align 2
  %252 = sext i16 %251 to i32
  br i1 %169, label %253, label %258

253:                                              ; preds = %231
  %254 = add nsw i32 %179, %159
  %255 = xor i32 %254, %179
  %256 = sub nsw i32 %137, %255
  %257 = mul nsw i32 %256, %256
  br label %258

258:                                              ; preds = %253, %231
  %259 = phi i32 [ %257, %253 ], [ %138, %231 ]
  %260 = select i1 %247, i32 %233, i32 %232
  %261 = add nsw i32 %260, %252
  %262 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %65, i64 1, i32 0
  store i32 %261, i32* %262, align 4
  %263 = select i1 %247, i32 %78, i32 %76
  %264 = add nsw i32 %259, %263
  %265 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %65, i64 1, i32 1
  store i32 %264, i32* %265, align 4
  %266 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %65, i64 1, i32 2
  store i8 %145, i8* %266, align 4
  %267 = select i1 %247, i32 %197, i32 %196
  %268 = trunc i32 %267 to i8
  %269 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %65, i64 1, i32 3
  store i8 %268, i8* %269, align 1
  %270 = trunc i32 %178 to i16
  %271 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %65, i64 1, i32 4
  store i16 %270, i16* %271, align 2
  %272 = shl i32 %248, %150
  %273 = or i32 %61, %272
  br label %303

274:                                              ; preds = %59
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* @vp8_coef_bands, i64 0, i64 %60
  %276 = load i8, i8* %275, align 1
  %277 = sext i32 %63 to i64
  %278 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %277, i64 0, i32 3
  %279 = load i8, i8* %278, align 1
  %280 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %277, i64 1, i32 3
  %281 = load i8, i8* %280, align 1
  %282 = icmp eq i8 %279, 11
  br i1 %282, label %292, label %283

283:                                              ; preds = %274
  %284 = load [8 x [3 x [12 x i32]]]*, [8 x [3 x [12 x i32]]]** %56, align 8
  %285 = zext i8 %276 to i64
  %286 = sext i8 %279 to i64
  %287 = getelementptr inbounds [8 x [3 x [12 x i32]]], [8 x [3 x [12 x i32]]]* %284, i64 %12, i64 %285, i64 0, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %277, i64 0, i32 0
  %290 = load i32, i32* %289, align 8
  %291 = add nsw i32 %290, %288
  store i32 %291, i32* %289, align 8
  store i8 0, i8* %278, align 1
  br label %292

292:                                              ; preds = %274, %283
  %293 = icmp eq i8 %281, 11
  br i1 %293, label %303, label %294

294:                                              ; preds = %292
  %295 = load [8 x [3 x [12 x i32]]]*, [8 x [3 x [12 x i32]]]** %56, align 8
  %296 = zext i8 %276 to i64
  %297 = sext i8 %281 to i64
  %298 = getelementptr inbounds [8 x [3 x [12 x i32]]], [8 x [3 x [12 x i32]]]* %295, i64 %12, i64 %296, i64 0, i64 %297
  %299 = load i32, i32* %298, align 4
  %300 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %277, i64 1, i32 0
  %301 = load i32, i32* %300, align 4
  %302 = add nsw i32 %301, %299
  store i32 %302, i32* %300, align 4
  store i8 0, i8* %280, align 1
  br label %303

303:                                              ; preds = %292, %294, %258
  %304 = phi i32 [ %273, %258 ], [ %61, %294 ], [ %61, %292 ]
  %305 = phi i32 [ %152, %258 ], [ %62, %294 ], [ %62, %292 ]
  %306 = phi i32 [ %179, %258 ], [ %64, %294 ], [ %64, %292 ]
  %307 = phi i32 [ %150, %258 ], [ %63, %294 ], [ %63, %292 ]
  %308 = icmp sgt i64 %65, %58
  br i1 %308, label %59, label %309

309:                                              ; preds = %303
  %310 = trunc i64 %65 to i32
  store i32 %305, i32* %10, align 4
  store i32 %304, i32* %11, align 4
  br label %311

311:                                              ; preds = %309, %5
  %312 = phi i32 [ %307, %309 ], [ %29, %5 ]
  %313 = phi i32 [ %310, %309 ], [ %29, %5 ]
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds [16 x i8], [16 x i8]* @vp8_coef_bands, i64 0, i64 %314
  %316 = load i8, i8* %315, align 1
  %317 = load i8, i8* %3, align 1
  %318 = sext i8 %317 to i64
  %319 = load i8, i8* %4, align 1
  %320 = sext i8 %319 to i64
  %321 = add nsw i64 %320, %318
  %322 = sext i32 %312 to i64
  %323 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %322, i64 0, i32 0
  %324 = load i32, i32* %323, align 8
  %325 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %322, i64 1, i32 0
  %326 = load i32, i32* %325, align 4
  %327 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %322, i64 0, i32 1
  %328 = load i32, i32* %327, align 4
  %329 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %322, i64 1, i32 1
  %330 = load i32, i32* %329, align 4
  %331 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %322, i64 0, i32 3
  %332 = load i8, i8* %331, align 1
  %333 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %322, i64 1, i32 3
  %334 = load i8, i8* %333, align 1
  %335 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 29
  %336 = load [8 x [3 x [12 x i32]]]*, [8 x [3 x [12 x i32]]]** %335, align 8
  %337 = zext i8 %316 to i64
  %338 = sext i8 %332 to i64
  %339 = getelementptr inbounds [8 x [3 x [12 x i32]]], [8 x [3 x [12 x i32]]]* %336, i64 %12, i64 %337, i64 %321, i64 %338
  %340 = load i32, i32* %339, align 4
  %341 = add nsw i32 %340, %324
  %342 = sext i8 %334 to i64
  %343 = getelementptr inbounds [8 x [3 x [12 x i32]]], [8 x [3 x [12 x i32]]]* %336, i64 %12, i64 %337, i64 %321, i64 %342
  %344 = load i32, i32* %343, align 4
  %345 = add nsw i32 %344, %326
  %346 = mul nsw i32 %341, %40
  %347 = add nsw i32 %346, 128
  %348 = ashr i32 %347, 8
  %349 = mul nsw i32 %328, %42
  %350 = add nsw i32 %348, %349
  %351 = mul nsw i32 %345, %40
  %352 = add nsw i32 %351, 128
  %353 = ashr i32 %352, 8
  %354 = mul nsw i32 %330, %42
  %355 = add nsw i32 %353, %354
  %356 = icmp eq i32 %350, %355
  %357 = xor i1 %24, true
  %358 = sext i1 %357 to i32
  %359 = icmp slt i32 %312, %29
  br i1 %359, label %360, label %393

360:                                              ; preds = %311
  %361 = and i32 %352, 255
  %362 = select i1 %356, i32 %361, i32 %355
  %363 = and i32 %347, 255
  %364 = select i1 %356, i32 %363, i32 %350
  %365 = icmp slt i32 %362, %364
  %366 = zext i1 %365 to i32
  br label %367

367:                                              ; preds = %360, %367
  %368 = phi i32 [ %387, %367 ], [ %312, %360 ]
  %369 = phi i32 [ %391, %367 ], [ %366, %360 ]
  %370 = phi i32 [ %376, %367 ], [ %358, %360 ]
  %371 = sext i32 %368 to i64
  %372 = zext i32 %369 to i64
  %373 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %371, i64 %372, i32 4
  %374 = load i16, i16* %373, align 2
  %375 = icmp eq i16 %374, 0
  %376 = select i1 %375, i32 %370, i32 %368
  %377 = getelementptr inbounds [16 x i32], [16 x i32]* @vp8_default_zig_zag1d, i64 0, i64 %371
  %378 = load i32, i32* %377, align 4
  %379 = sext i32 %378 to i64
  %380 = getelementptr inbounds i16, i16* %21, i64 %379
  store i16 %374, i16* %380, align 2
  %381 = getelementptr inbounds i16, i16* %17, i64 %379
  %382 = load i16, i16* %381, align 2
  %383 = mul i16 %382, %374
  %384 = getelementptr inbounds i16, i16* %23, i64 %379
  store i16 %383, i16* %384, align 2
  %385 = getelementptr inbounds [17 x [2 x %struct.vp8_token_state]], [17 x [2 x %struct.vp8_token_state]]* %6, i64 0, i64 %371, i64 %372, i32 2
  %386 = load i8, i8* %385, align 4
  %387 = sext i8 %386 to i32
  %388 = getelementptr inbounds [2 x i32], [2 x i32]* %7, i64 0, i64 %372
  %389 = load i32, i32* %388, align 4
  %390 = lshr i32 %389, %368
  %391 = and i32 %390, 1
  %392 = icmp slt i8 %386, %28
  br i1 %392, label %367, label %393

393:                                              ; preds = %367, %311
  %394 = phi i32 [ %358, %311 ], [ %376, %367 ]
  %395 = add nsw i32 %394, 1
  %396 = icmp ne i32 %395, %25
  %397 = zext i1 %396 to i8
  store i8 %397, i8* %4, align 1
  store i8 %397, i8* %3, align 1
  %398 = trunc i32 %395 to i8
  %399 = load i8*, i8** %26, align 8
  store i8 %398, i8* %399, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #3
  call void @llvm.lifetime.end.p0i8(i64 408, i8* nonnull %8) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_optimize_mbuv(%struct.macroblock* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca %struct.ENTROPY_CONTEXT_PLANES, align 1
  %3 = alloca %struct.ENTROPY_CONTEXT_PLANES, align 1
  %4 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %4) #3
  %5 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %4, i8 -86, i64 9, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %5) #3
  %6 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %5, i8 -86, i64 9, i1 false)
  %7 = load %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES** %6, align 16
  %8 = icmp eq %struct.ENTROPY_CONTEXT_PLANES* %7, null
  br i1 %8, label %64, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 22
  %11 = load %struct.ENTROPY_CONTEXT_PLANES*, %struct.ENTROPY_CONTEXT_PLANES** %10, align 8
  %12 = icmp eq %struct.ENTROPY_CONTEXT_PLANES* %11, null
  br i1 %12, label %64, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %11, i64 0, i32 0, i64 0
  %15 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %7, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %4, i8* align 1 %15, i64 9, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %5, i8* align 1 %14, i64 9, i1 false)
  %16 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 16), align 16
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %17
  %19 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 16), align 16
  %20 = zext i8 %19 to i64
  %21 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %20
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 16, i32 2, i8* %18, i8* %21)
  %22 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 17), align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %23
  %25 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 17), align 1
  %26 = zext i8 %25 to i64
  %27 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %26
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 17, i32 2, i8* %24, i8* %27)
  %28 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 18), align 2
  %29 = zext i8 %28 to i64
  %30 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %29
  %31 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 18), align 2
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %32
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 18, i32 2, i8* %30, i8* %33)
  %34 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 19), align 1
  %35 = zext i8 %34 to i64
  %36 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %35
  %37 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 19), align 1
  %38 = zext i8 %37 to i64
  %39 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %38
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 19, i32 2, i8* %36, i8* %39)
  %40 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 20), align 4
  %41 = zext i8 %40 to i64
  %42 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %41
  %43 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 20), align 4
  %44 = zext i8 %43 to i64
  %45 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %44
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 20, i32 2, i8* %42, i8* %45)
  %46 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 21), align 1
  %47 = zext i8 %46 to i64
  %48 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %47
  %49 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 21), align 1
  %50 = zext i8 %49 to i64
  %51 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %50
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 21, i32 2, i8* %48, i8* %51)
  %52 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 22), align 2
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %53
  %55 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 22), align 2
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %56
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 22, i32 2, i8* %54, i8* %57)
  %58 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 23), align 1
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %59
  %61 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 23), align 1
  %62 = zext i8 %61 to i64
  %63 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %62
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 23, i32 2, i8* %60, i8* %63)
  br label %64

64:                                               ; preds = %13, %9, %1
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %5) #3
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %4) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_encode_inter16x16(%struct.macroblock*) local_unnamed_addr #0 {
  %2 = alloca %struct.ENTROPY_CONTEXT_PLANES, align 1
  %3 = alloca %struct.ENTROPY_CONTEXT_PLANES, align 1
  %4 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6
  tail call void @vp8_build_inter_predictors_mb(%struct.macroblockd* %4) #3
  %5 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0
  %6 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 0, i32 9
  %7 = load i8**, i8*** %6, align 8
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 0, i32 11
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 12, i32 13
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 12, i32 4
  %14 = load i32, i32* %13, align 16
  %15 = sext i32 %10 to i64
  %16 = sext i32 %14 to i64
  tail call void @vpx_subtract_block_sse2(i32 16, i32 16, i16* %5, i64 16, i8* %8, i64 %15, i8* %12, i64 %16) #3
  %17 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 5, i32 14
  %18 = load i8*, i8** %17, align 32
  %19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 5, i32 15
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 5, i32 9
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 12, i32 14
  %24 = load i8*, i8** %23, align 32
  %25 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 12, i32 15
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 12, i32 9
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 256
  %30 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 320
  %31 = sext i32 %22 to i64
  %32 = sext i32 %28 to i64
  tail call void @vpx_subtract_block_sse2(i32 8, i32 8, i16* %29, i64 8, i8* %18, i64 %31, i8* %24, i64 %32) #3
  tail call void @vpx_subtract_block_sse2(i32 8, i32 8, i16* %30, i64 8, i8* %20, i64 %31, i8* %26, i64 %32) #3
  %33 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 68
  %34 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %33, align 8
  %35 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 0, i32 1
  %38 = load i16*, i16** %37, align 8
  tail call void %34(i16* %36, i16* %38, i32 32) #3
  %39 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %33, align 8
  %40 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 2, i32 0
  %41 = load i16*, i16** %40, align 8
  %42 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 2, i32 1
  %43 = load i16*, i16** %42, align 8
  tail call void %39(i16* %41, i16* %43, i32 32) #3
  %44 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %33, align 8
  %45 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 4, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 4, i32 1
  %48 = load i16*, i16** %47, align 8
  tail call void %44(i16* %46, i16* %48, i32 32) #3
  %49 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %33, align 8
  %50 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 6, i32 0
  %51 = load i16*, i16** %50, align 8
  %52 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 6, i32 1
  %53 = load i16*, i16** %52, align 8
  tail call void %49(i16* %51, i16* %53, i32 32) #3
  %54 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %33, align 8
  %55 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 8, i32 0
  %56 = load i16*, i16** %55, align 8
  %57 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 8, i32 1
  %58 = load i16*, i16** %57, align 8
  tail call void %54(i16* %56, i16* %58, i32 32) #3
  %59 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %33, align 8
  %60 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 10, i32 0
  %61 = load i16*, i16** %60, align 8
  %62 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 10, i32 1
  %63 = load i16*, i16** %62, align 8
  tail call void %59(i16* %61, i16* %63, i32 32) #3
  %64 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %33, align 8
  %65 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 12, i32 0
  %66 = load i16*, i16** %65, align 8
  %67 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 12, i32 1
  %68 = load i16*, i16** %67, align 8
  tail call void %64(i16* %66, i16* %68, i32 32) #3
  %69 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %33, align 8
  %70 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 14, i32 0
  %71 = load i16*, i16** %70, align 8
  %72 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 14, i32 1
  %73 = load i16*, i16** %72, align 8
  tail call void %69(i16* %71, i16* %73, i32 32) #3
  %74 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 13
  %75 = load %struct.modeinfo*, %struct.modeinfo** %74, align 32
  %76 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %75, i64 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 4
  %78 = icmp eq i8 %77, 9
  br i1 %78, label %128, label %79

79:                                               ; preds = %1
  %80 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 384
  %81 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 0
  %82 = load i16, i16* %81, align 2
  store i16 %82, i16* %80, align 2
  %83 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 16
  %84 = load i16, i16* %83, align 2
  %85 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 385
  store i16 %84, i16* %85, align 2
  %86 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 32
  %87 = load i16, i16* %86, align 2
  %88 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 386
  store i16 %87, i16* %88, align 2
  %89 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 48
  %90 = load i16, i16* %89, align 2
  %91 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 387
  store i16 %90, i16* %91, align 2
  %92 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 64
  %93 = load i16, i16* %92, align 2
  %94 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 388
  store i16 %93, i16* %94, align 2
  %95 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 80
  %96 = load i16, i16* %95, align 2
  %97 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 389
  store i16 %96, i16* %97, align 2
  %98 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 96
  %99 = load i16, i16* %98, align 2
  %100 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 390
  store i16 %99, i16* %100, align 2
  %101 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 112
  %102 = load i16, i16* %101, align 2
  %103 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 391
  store i16 %102, i16* %103, align 2
  %104 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 128
  %105 = load i16, i16* %104, align 2
  %106 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 392
  store i16 %105, i16* %106, align 2
  %107 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 144
  %108 = load i16, i16* %107, align 2
  %109 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 393
  store i16 %108, i16* %109, align 2
  %110 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 160
  %111 = load i16, i16* %110, align 2
  %112 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 394
  store i16 %111, i16* %112, align 2
  %113 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 176
  %114 = load i16, i16* %113, align 2
  %115 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 395
  store i16 %114, i16* %115, align 2
  %116 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 192
  %117 = load i16, i16* %116, align 2
  %118 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 396
  store i16 %117, i16* %118, align 2
  %119 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 208
  %120 = load i16, i16* %119, align 2
  %121 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 397
  store i16 %120, i16* %121, align 2
  %122 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 224
  %123 = load i16, i16* %122, align 2
  %124 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 398
  store i16 %123, i16* %124, align 2
  %125 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 240
  %126 = load i16, i16* %125, align 2
  %127 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 399
  store i16 %126, i16* %127, align 2
  br label %128

128:                                              ; preds = %79, %1
  %129 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %33, align 8
  %130 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 16, i32 0
  %131 = load i16*, i16** %130, align 8
  %132 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 16, i32 1
  %133 = load i16*, i16** %132, align 8
  tail call void %129(i16* %131, i16* %133, i32 16) #3
  %134 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %33, align 8
  %135 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 18, i32 0
  %136 = load i16*, i16** %135, align 8
  %137 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 18, i32 1
  %138 = load i16*, i16** %137, align 8
  tail call void %134(i16* %136, i16* %138, i32 16) #3
  %139 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %33, align 8
  %140 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 20, i32 0
  %141 = load i16*, i16** %140, align 8
  %142 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 20, i32 1
  %143 = load i16*, i16** %142, align 8
  tail call void %139(i16* %141, i16* %143, i32 16) #3
  %144 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %33, align 8
  %145 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 22, i32 0
  %146 = load i16*, i16** %145, align 8
  %147 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 22, i32 1
  %148 = load i16*, i16** %147, align 8
  tail call void %144(i16* %146, i16* %148, i32 16) #3
  %149 = load %struct.modeinfo*, %struct.modeinfo** %74, align 32
  %150 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %149, i64 0, i32 0, i32 0
  %151 = load i8, i8* %150, align 4
  %152 = icmp eq i8 %151, 9
  br i1 %152, label %160, label %153

153:                                              ; preds = %128
  %154 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 69
  %155 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %154, align 32
  %156 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 24, i32 0
  %157 = load i16*, i16** %156, align 8
  %158 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 24, i32 1
  %159 = load i16*, i16** %158, align 8
  tail call void %155(i16* %157, i16* %159, i32 8) #3
  br label %160

160:                                              ; preds = %128, %153
  tail call void @vp8_quantize_mb(%struct.macroblock* %0) #3
  %161 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 39
  %162 = load i32, i32* %161, align 32
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %308, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %165) #3
  %166 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %165, i8 -86, i64 9, i1 false) #3
  call void @llvm.lifetime.start.p0i8(i64 9, i8* nonnull %166) #3
  %167 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 21
  %168 = bitcast %struct.ENTROPY_CONTEXT_PLANES** %167 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %166, i8 -86, i64 9, i1 false) #3
  %169 = load i8*, i8** %168, align 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %165, i8* align 1 %169, i64 9, i1 false) #3
  %170 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 22
  %171 = bitcast %struct.ENTROPY_CONTEXT_PLANES** %170 to i8**
  %172 = load i8*, i8** %171, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %166, i8* align 1 %172, i64 9, i1 false) #3
  %173 = load %struct.modeinfo*, %struct.modeinfo** %74, align 32
  %174 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %173, i64 0, i32 0, i32 0
  %175 = load i8, i8* %174, align 4
  %176 = icmp ne i8 %175, 4
  %177 = icmp ne i8 %175, 9
  %178 = and i1 %176, %177
  %179 = select i1 %178, i32 0, i32 3
  br label %180

180:                                              ; preds = %180, %164
  %181 = phi i64 [ 0, %164 ], [ %191, %180 ]
  %182 = getelementptr inbounds [25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 %181
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %184
  %186 = getelementptr inbounds [25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 %181
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %188
  %190 = trunc i64 %181 to i32
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 %190, i32 %179, i8* %185, i8* %189) #3
  %191 = add nuw nsw i64 %181, 1
  %192 = icmp eq i64 %191, 16
  br i1 %192, label %193, label %180

193:                                              ; preds = %180
  %194 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 16), align 16
  %195 = zext i8 %194 to i64
  %196 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %195
  %197 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 16), align 16
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %198
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 16, i32 2, i8* %196, i8* %199) #3
  %200 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 17), align 1
  %201 = zext i8 %200 to i64
  %202 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %201
  %203 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 17), align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %204
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 17, i32 2, i8* %202, i8* %205) #3
  %206 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 18), align 2
  %207 = zext i8 %206 to i64
  %208 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %207
  %209 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 18), align 2
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %210
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 18, i32 2, i8* %208, i8* %211) #3
  %212 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 19), align 1
  %213 = zext i8 %212 to i64
  %214 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %213
  %215 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 19), align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %216
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 19, i32 2, i8* %214, i8* %217) #3
  %218 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 20), align 4
  %219 = zext i8 %218 to i64
  %220 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %219
  %221 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 20), align 4
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %222
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 20, i32 2, i8* %220, i8* %223) #3
  %224 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 21), align 1
  %225 = zext i8 %224 to i64
  %226 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %225
  %227 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 21), align 1
  %228 = zext i8 %227 to i64
  %229 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %228
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 21, i32 2, i8* %226, i8* %229) #3
  %230 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 22), align 2
  %231 = zext i8 %230 to i64
  %232 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %231
  %233 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 22), align 2
  %234 = zext i8 %233 to i64
  %235 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %234
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 22, i32 2, i8* %232, i8* %235) #3
  %236 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 23), align 1
  %237 = zext i8 %236 to i64
  %238 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %237
  %239 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 23), align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %240
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 23, i32 2, i8* %238, i8* %241) #3
  switch i8 %175, label %242 [
    i8 9, label %307
    i8 4, label %307
  ]

242:                                              ; preds = %193
  %243 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2above, i64 0, i64 24), align 8
  %244 = zext i8 %243 to i64
  %245 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %2, i64 0, i32 0, i64 %244
  %246 = load i8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @vp8_block2left, i64 0, i64 24), align 8
  %247 = zext i8 %246 to i64
  %248 = getelementptr inbounds %struct.ENTROPY_CONTEXT_PLANES, %struct.ENTROPY_CONTEXT_PLANES* %3, i64 0, i32 0, i64 %247
  call fastcc void @optimize_b(%struct.macroblock* %0, i32 24, i32 1, i8* %245, i8* %248) #3
  %249 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 9, i64 24, i32 3
  %250 = load i16*, i16** %249, align 8
  %251 = load i16, i16* %250, align 2
  %252 = icmp sgt i16 %251, 34
  br i1 %252, label %253, label %257

253:                                              ; preds = %242
  %254 = getelementptr inbounds i16, i16* %250, i64 1
  %255 = load i16, i16* %254, align 2
  %256 = icmp sgt i16 %255, 34
  br i1 %256, label %307, label %257

257:                                              ; preds = %253, %242
  %258 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 9, i64 24, i32 5
  %259 = load i8*, i8** %258, align 8
  %260 = load i8, i8* %259, align 1
  %261 = icmp sgt i8 %260, 0
  br i1 %261, label %262, label %301

262:                                              ; preds = %257
  %263 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 9, i64 24, i32 1
  %264 = load i16*, i16** %263, align 8
  %265 = sext i8 %260 to i64
  br label %268

266:                                              ; preds = %268
  %267 = icmp eq i64 %282, %265
  br i1 %267, label %283, label %268

268:                                              ; preds = %266, %262
  %269 = phi i64 [ 0, %262 ], [ %282, %266 ]
  %270 = phi i32 [ 0, %262 ], [ %280, %266 ]
  %271 = getelementptr inbounds [16 x i32], [16 x i32]* @vp8_default_zig_zag1d, i64 0, i64 %269
  %272 = load i32, i32* %271, align 4
  %273 = sext i32 %272 to i64
  %274 = getelementptr inbounds i16, i16* %264, i64 %273
  %275 = load i16, i16* %274, align 2
  %276 = sext i16 %275 to i32
  %277 = icmp slt i32 %276, 0
  %278 = sub nsw i32 0, %276
  %279 = select i1 %277, i32 %278, i32 %276
  %280 = add nuw nsw i32 %279, %270
  %281 = icmp slt i32 %280, 35
  %282 = add nuw nsw i64 %269, 1
  br i1 %281, label %266, label %307

283:                                              ; preds = %266
  %284 = icmp ult i32 %280, 35
  br i1 %284, label %285, label %307

285:                                              ; preds = %283
  %286 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 9, i64 24, i32 0
  br label %287

287:                                              ; preds = %287, %285
  %288 = phi i64 [ 0, %285 ], [ %296, %287 ]
  %289 = getelementptr inbounds [16 x i32], [16 x i32]* @vp8_default_zig_zag1d, i64 0, i64 %288
  %290 = load i32, i32* %289, align 4
  %291 = load i16*, i16** %286, align 8
  %292 = sext i32 %290 to i64
  %293 = getelementptr inbounds i16, i16* %291, i64 %292
  store i16 0, i16* %293, align 2
  %294 = load i16*, i16** %263, align 8
  %295 = getelementptr inbounds i16, i16* %294, i64 %292
  store i16 0, i16* %295, align 2
  %296 = add nuw nsw i64 %288, 1
  %297 = load i8*, i8** %258, align 8
  %298 = load i8, i8* %297, align 1
  %299 = sext i8 %298 to i64
  %300 = icmp slt i64 %296, %299
  br i1 %300, label %287, label %301

301:                                              ; preds = %287, %257
  %302 = phi i8* [ %259, %257 ], [ %297, %287 ]
  store i8 0, i8* %302, align 1
  %303 = load i8*, i8** %258, align 8
  %304 = load i8, i8* %303, align 1
  %305 = icmp ne i8 %304, 0
  %306 = zext i1 %305 to i8
  store i8 %306, i8* %248, align 1
  store i8 %306, i8* %245, align 1
  br label %307

307:                                              ; preds = %268, %193, %193, %253, %283, %301
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %166) #3
  call void @llvm.lifetime.end.p0i8(i64 9, i8* nonnull %165) #3
  br label %308

308:                                              ; preds = %160, %307
  ret void
}

declare void @vp8_build_inter_predictors_mb(%struct.macroblockd*) local_unnamed_addr #2

declare void @vp8_quantize_mb(%struct.macroblock*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @vp8_encode_inter16x16y(%struct.macroblock*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6
  %3 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 12, i32 13
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 12, i32 4
  %6 = load i32, i32* %5, align 16
  tail call void @vp8_build_inter16x16_predictors_mby(%struct.macroblockd* %2, i8* %4, i32 %6) #3
  %7 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 0
  %8 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 0, i32 9
  %9 = load i8**, i8*** %8, align 8
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 0, i32 11
  %12 = load i32, i32* %11, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = load i32, i32* %5, align 16
  %15 = sext i32 %12 to i64
  %16 = sext i32 %14 to i64
  tail call void @vpx_subtract_block_sse2(i32 16, i32 16, i16* %7, i64 16, i8* %10, i64 %15, i8* %13, i64 %16) #3
  %17 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 68
  %18 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %17, align 8
  %19 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 0, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 0, i32 1
  %22 = load i16*, i16** %21, align 8
  tail call void %18(i16* %20, i16* %22, i32 32) #3
  %23 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %17, align 8
  %24 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 2, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 2, i32 1
  %27 = load i16*, i16** %26, align 8
  tail call void %23(i16* %25, i16* %27, i32 32) #3
  %28 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %17, align 8
  %29 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 4, i32 0
  %30 = load i16*, i16** %29, align 8
  %31 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 4, i32 1
  %32 = load i16*, i16** %31, align 8
  tail call void %28(i16* %30, i16* %32, i32 32) #3
  %33 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %17, align 8
  %34 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 6, i32 0
  %35 = load i16*, i16** %34, align 8
  %36 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 6, i32 1
  %37 = load i16*, i16** %36, align 8
  tail call void %33(i16* %35, i16* %37, i32 32) #3
  %38 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %17, align 8
  %39 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 8, i32 0
  %40 = load i16*, i16** %39, align 8
  %41 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 8, i32 1
  %42 = load i16*, i16** %41, align 8
  tail call void %38(i16* %40, i16* %42, i32 32) #3
  %43 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %17, align 8
  %44 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 10, i32 0
  %45 = load i16*, i16** %44, align 8
  %46 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 10, i32 1
  %47 = load i16*, i16** %46, align 8
  tail call void %43(i16* %45, i16* %47, i32 32) #3
  %48 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %17, align 8
  %49 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 12, i32 0
  %50 = load i16*, i16** %49, align 8
  %51 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 12, i32 1
  %52 = load i16*, i16** %51, align 8
  tail call void %48(i16* %50, i16* %52, i32 32) #3
  %53 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %17, align 8
  %54 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 14, i32 0
  %55 = load i16*, i16** %54, align 8
  %56 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 14, i32 1
  %57 = load i16*, i16** %56, align 8
  tail call void %53(i16* %55, i16* %57, i32 32) #3
  %58 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 13
  %59 = load %struct.modeinfo*, %struct.modeinfo** %58, align 32
  %60 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %59, i64 0, i32 0, i32 0
  %61 = load i8, i8* %60, align 4
  %62 = icmp eq i8 %61, 9
  br i1 %62, label %118, label %63

63:                                               ; preds = %1
  %64 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 384
  %65 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 0
  %66 = load i16, i16* %65, align 2
  store i16 %66, i16* %64, align 2
  %67 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 16
  %68 = load i16, i16* %67, align 2
  %69 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 385
  store i16 %68, i16* %69, align 2
  %70 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 32
  %71 = load i16, i16* %70, align 2
  %72 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 386
  store i16 %71, i16* %72, align 2
  %73 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 48
  %74 = load i16, i16* %73, align 2
  %75 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 387
  store i16 %74, i16* %75, align 2
  %76 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 64
  %77 = load i16, i16* %76, align 2
  %78 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 388
  store i16 %77, i16* %78, align 2
  %79 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 80
  %80 = load i16, i16* %79, align 2
  %81 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 389
  store i16 %80, i16* %81, align 2
  %82 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 96
  %83 = load i16, i16* %82, align 2
  %84 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 390
  store i16 %83, i16* %84, align 2
  %85 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 112
  %86 = load i16, i16* %85, align 2
  %87 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 391
  store i16 %86, i16* %87, align 2
  %88 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 128
  %89 = load i16, i16* %88, align 2
  %90 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 392
  store i16 %89, i16* %90, align 2
  %91 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 144
  %92 = load i16, i16* %91, align 2
  %93 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 393
  store i16 %92, i16* %93, align 2
  %94 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 160
  %95 = load i16, i16* %94, align 2
  %96 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 394
  store i16 %95, i16* %96, align 2
  %97 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 176
  %98 = load i16, i16* %97, align 2
  %99 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 395
  store i16 %98, i16* %99, align 2
  %100 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 192
  %101 = load i16, i16* %100, align 2
  %102 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 396
  store i16 %101, i16* %102, align 2
  %103 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 208
  %104 = load i16, i16* %103, align 2
  %105 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 397
  store i16 %104, i16* %105, align 2
  %106 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 224
  %107 = load i16, i16* %106, align 2
  %108 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 398
  store i16 %107, i16* %108, align 2
  %109 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 1, i64 240
  %110 = load i16, i16* %109, align 2
  %111 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 0, i64 399
  store i16 %110, i16* %111, align 2
  %112 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 69
  %113 = load void (i16*, i16*, i32)*, void (i16*, i16*, i32)** %112, align 32
  %114 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 24, i32 0
  %115 = load i16*, i16** %114, align 8
  %116 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 4, i64 24, i32 1
  %117 = load i16*, i16** %116, align 8
  tail call void %113(i16* %115, i16* %117, i32 8) #3
  br label %118

118:                                              ; preds = %1, %63
  tail call void @vp8_quantize_mby(%struct.macroblock* %0) #3
  %119 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 5, i64 0
  %120 = load %struct.modeinfo*, %struct.modeinfo** %58, align 32
  %121 = getelementptr inbounds %struct.modeinfo, %struct.modeinfo* %120, i64 0, i32 0, i32 0
  %122 = load i8, i8* %121, align 4
  %123 = icmp eq i8 %122, 9
  br i1 %123, label %151, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 3, i64 24
  %126 = load i8, i8* %125, align 8
  %127 = icmp sgt i8 %126, 1
  %128 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 9, i64 24, i32 1
  %129 = load i16*, i16** %128, align 8
  %130 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 1, i64 0
  br i1 %127, label %131, label %132

131:                                              ; preds = %124
  tail call void @vp8_short_inv_walsh4x4_sse2(i16* %129, i16* %130) #3
  br label %133

132:                                              ; preds = %124
  tail call void @vp8_short_inv_walsh4x4_1_c(i16* %129, i16* %130) #3
  br label %133

133:                                              ; preds = %132, %131
  br label %134

134:                                              ; preds = %162, %133
  %135 = phi i64 [ 0, %133 ], [ %164, %162 ]
  %136 = phi i16* [ %130, %133 ], [ %163, %162 ]
  %137 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 3, i64 %135
  %138 = load i8, i8* %137, align 1
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %134
  %141 = load i16, i16* %136, align 2
  %142 = icmp eq i16 %141, 0
  br i1 %142, label %144, label %143

143:                                              ; preds = %140
  store i8 1, i8* %137, align 1
  br label %144

144:                                              ; preds = %143, %140, %134
  %145 = or i64 %135, 1
  %146 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 3, i64 %145
  %147 = load i8, i8* %146, align 1
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %157, label %162

149:                                              ; preds = %162
  %150 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 6, i64 0
  br label %151

151:                                              ; preds = %118, %149
  %152 = phi i16* [ %150, %149 ], [ %119, %118 ]
  %153 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 1, i64 0
  %154 = load i8*, i8** %3, align 8
  %155 = load i32, i32* %5, align 16
  %156 = getelementptr inbounds %struct.macroblock, %struct.macroblock* %0, i64 0, i32 6, i32 3, i64 0
  tail call void @vp8_dequant_idct_add_y_block_sse2(i16* %153, i16* %152, i8* %154, i32 %155, i8* %156) #3
  ret void

157:                                              ; preds = %144
  %158 = getelementptr inbounds i16, i16* %136, i64 16
  %159 = load i16, i16* %158, align 2
  %160 = icmp eq i16 %159, 0
  br i1 %160, label %162, label %161

161:                                              ; preds = %157
  store i8 1, i8* %146, align 1
  br label %162

162:                                              ; preds = %161, %157, %144
  %163 = getelementptr inbounds i16, i16* %136, i64 32
  %164 = add nuw nsw i64 %135, 2
  %165 = icmp eq i64 %164, 16
  br i1 %165, label %149, label %134
}

declare void @vp8_build_inter16x16_predictors_mby(%struct.macroblockd*, i8*, i32) local_unnamed_addr #2

declare void @vp8_quantize_mby(%struct.macroblock*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @vp8_short_inv_walsh4x4_sse2(i16*, i16*) local_unnamed_addr #2

declare void @vp8_short_inv_walsh4x4_1_c(i16*, i16*) local_unnamed_addr #2

declare void @vp8_dequant_idct_add_y_block_sse2(i16*, i16*, i8*, i32, i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
