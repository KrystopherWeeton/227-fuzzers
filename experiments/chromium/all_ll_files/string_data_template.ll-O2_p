; ModuleID = '../../third_party/pdfium/core/fxcrt/string_data_template.cpp'
source_filename = "../../third_party/pdfium/core/fxcrt/string_data_template.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::StringDataTemplate.1" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.pdfium::base::PartitionAllocatorGeneric" = type { %"struct.pdfium::base::PartitionRootGeneric" }
%"struct.pdfium::base::PartitionRootGeneric" = type { %"struct.pdfium::base::internal::PartitionRootBase", %"class.pdfium::base::subtle::SpinLock", [65 x i64], [65 x i64], [521 x %"struct.pdfium::base::internal::PartitionBucket"*], [136 x %"struct.pdfium::base::internal::PartitionBucket"] }
%"struct.pdfium::base::internal::PartitionRootBase" = type { i32 (...)**, i64, i64, i64, i32, i32, i8, i8*, i8*, i8*, %"struct.pdfium::base::internal::PartitionSuperPageExtentEntry"*, %"struct.pdfium::base::internal::PartitionSuperPageExtentEntry"*, %"struct.pdfium::base::internal::PartitionDirectMapExtent"*, [16 x %"struct.pdfium::base::internal::PartitionPage"*], i16, i64 }
%"struct.pdfium::base::internal::PartitionSuperPageExtentEntry" = type { %"struct.pdfium::base::internal::PartitionRootBase"*, i8*, i8*, %"struct.pdfium::base::internal::PartitionSuperPageExtentEntry"* }
%"struct.pdfium::base::internal::PartitionDirectMapExtent" = type { %"struct.pdfium::base::internal::PartitionDirectMapExtent"*, %"struct.pdfium::base::internal::PartitionDirectMapExtent"*, %"struct.pdfium::base::internal::PartitionBucket"*, i64 }
%"struct.pdfium::base::internal::PartitionBucket" = type { %"struct.pdfium::base::internal::PartitionPage"*, %"struct.pdfium::base::internal::PartitionPage"*, %"struct.pdfium::base::internal::PartitionPage"*, i32, i32 }
%"struct.pdfium::base::internal::PartitionPage" = type { %"struct.pdfium::base::internal::PartitionFreelistEntry"*, %"struct.pdfium::base::internal::PartitionPage"*, %"struct.pdfium::base::internal::PartitionBucket"*, i16, i16, i16, i16 }
%"struct.pdfium::base::internal::PartitionFreelistEntry" = type { %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"* }
%"struct.pdfium::base::internal::EncodedPartitionFreelistEntry" = type { [8 x i8] }
%"class.pdfium::base::subtle::SpinLock" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.pdfium::base::internal::DeferredUnmap" = type { i8*, i64 }

$_ZN5fxcrt18StringDataTemplateIcE6CreateEm = comdat any

$_ZN5fxcrt18StringDataTemplateIcE6CreateEPKcm = comdat any

$_ZN5fxcrt18StringDataTemplateIcE12CopyContentsEPKcm = comdat any

$_ZN5fxcrt18StringDataTemplateIcE6RetainEv = comdat any

$_ZN5fxcrt18StringDataTemplateIcE7ReleaseEv = comdat any

$_ZNK5fxcrt18StringDataTemplateIcE17CanOperateInPlaceEm = comdat any

$_ZN5fxcrt18StringDataTemplateIcE12CopyContentsERKS1_ = comdat any

$_ZN5fxcrt18StringDataTemplateIcE14CopyContentsAtEmPKcm = comdat any

$_ZN5fxcrt18StringDataTemplateIcEC5Emm = comdat any

$_ZN5fxcrt18StringDataTemplateIwE6CreateEm = comdat any

$_ZN5fxcrt18StringDataTemplateIwE6CreateEPKwm = comdat any

$_ZN5fxcrt18StringDataTemplateIwE12CopyContentsEPKwm = comdat any

$_ZN5fxcrt18StringDataTemplateIwE6RetainEv = comdat any

$_ZN5fxcrt18StringDataTemplateIwE7ReleaseEv = comdat any

$_ZNK5fxcrt18StringDataTemplateIwE17CanOperateInPlaceEm = comdat any

$_ZN5fxcrt18StringDataTemplateIwE12CopyContentsERKS1_ = comdat any

$_ZN5fxcrt18StringDataTemplateIwE14CopyContentsAtEmPKwm = comdat any

$_ZN5fxcrt18StringDataTemplateIwEC5Emm = comdat any

@.str = private unnamed_addr constant [19 x i8] c"StringDataTemplate\00", align 1
@_ZN6pdfium4base19PartitionAllocHooks14hooks_enabled_E = external local_unnamed_addr global %"struct.std::__1::atomic.3", align 1

@_ZN5fxcrt18StringDataTemplateIcEC1Emm = weak_odr hidden unnamed_addr alias void (%"class.fxcrt::StringDataTemplate"*, i64, i64), void (%"class.fxcrt::StringDataTemplate"*, i64, i64)* @_ZN5fxcrt18StringDataTemplateIcEC2Emm
@_ZN5fxcrt18StringDataTemplateIwEC1Emm = weak_odr hidden unnamed_addr alias void (%"class.fxcrt::StringDataTemplate.1"*, i64, i64), void (%"class.fxcrt::StringDataTemplate.1"*, i64, i64)* @_ZN5fxcrt18StringDataTemplateIwEC2Emm

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.fxcrt::StringDataTemplate"* @_ZN5fxcrt18StringDataTemplateIcE6CreateEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8, align 1
  %3 = alloca i8*, align 8
  %4 = zext i64 %0 to i65
  %5 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %4, i65 25) #5
  %6 = extractvalue { i65, i1 } %5, 1
  %7 = extractvalue { i65, i1 } %5, 0
  %8 = icmp slt i65 %7, 0
  %9 = or i1 %6, %8
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = and i65 %7, 18446744073709551615
  %12 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %11, i65 15) #5
  %13 = extractvalue { i65, i1 } %12, 1
  %14 = extractvalue { i65, i1 } %12, 0
  %15 = icmp slt i65 %14, 0
  %16 = or i1 %13, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %1, %10
  tail call void @llvm.trap() #5
  unreachable

18:                                               ; preds = %10
  %19 = trunc i65 %14 to i64
  %20 = and i64 %19, -16
  %21 = add i64 %20, -25
  %22 = tail call dereferenceable(9808) %"class.pdfium::base::PartitionAllocatorGeneric"* @_Z27GetStringPartitionAllocatorv() #5
  %23 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %24 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3"* @_ZN6pdfium4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %25 = and i8 %24, 1
  %26 = icmp ne i8 %25, 0
  br i1 %26, label %27, label %29, !prof !2

27:                                               ; preds = %18
  %28 = call zeroext i1 @_ZN6pdfium4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %3, i32 0, i64 %20, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)) #5
  br i1 %28, label %74, label %29

29:                                               ; preds = %27, %18
  %30 = call i64 @llvm.ctlz.i64(i64 %20, i1 false) #5, !range !3
  %31 = sub nuw nsw i64 64, %30
  %32 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %22, i64 0, i32 0, i32 2, i64 %31
  %33 = load i64, i64* %32, align 8
  %34 = lshr i64 %20, %33
  %35 = and i64 %34, 7
  %36 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %22, i64 0, i32 0, i32 3, i64 %31
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, %20
  %39 = shl nsw i64 %31, 3
  %40 = or i64 %35, %39
  %41 = icmp ne i64 %38, 0
  %42 = zext i1 %41 to i64
  %43 = add nsw i64 %40, %42
  %44 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %22, i64 0, i32 0, i32 4, i64 %43
  %45 = load %"struct.pdfium::base::internal::PartitionBucket"*, %"struct.pdfium::base::internal::PartitionBucket"** %44, align 8
  %46 = icmp eq %"struct.pdfium::base::internal::PartitionBucket"* %45, null
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %29
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !5
  unreachable

48:                                               ; preds = %29
  %49 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %22, i64 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.pdfium::base::subtle::SpinLock", %"class.pdfium::base::subtle::SpinLock"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw xchg i32* %50, i32 1 acquire
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !6

53:                                               ; preds = %48
  call void @_ZN6pdfium4base6subtle8SpinLock8LockSlowEv(%"class.pdfium::base::subtle::SpinLock"* %49) #5
  br label %54

54:                                               ; preds = %53, %48
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #5
  store i8 0, i8* %2, align 1
  %55 = getelementptr inbounds %"struct.pdfium::base::internal::PartitionBucket", %"struct.pdfium::base::internal::PartitionBucket"* %45, i64 0, i32 0
  %56 = load %"struct.pdfium::base::internal::PartitionPage"*, %"struct.pdfium::base::internal::PartitionPage"** %55, align 8
  %57 = getelementptr inbounds %"struct.pdfium::base::internal::PartitionPage", %"struct.pdfium::base::internal::PartitionPage"* %56, i64 0, i32 0
  %58 = load %"struct.pdfium::base::internal::PartitionFreelistEntry"*, %"struct.pdfium::base::internal::PartitionFreelistEntry"** %57, align 8
  %59 = icmp eq %"struct.pdfium::base::internal::PartitionFreelistEntry"* %58, null
  br i1 %59, label %69, label %60, !prof !2

60:                                               ; preds = %54
  %61 = bitcast %"struct.pdfium::base::internal::PartitionFreelistEntry"* %58 to i8*
  %62 = bitcast %"struct.pdfium::base::internal::PartitionFreelistEntry"* %58 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = call i64 @llvm.bswap.i64(i64 %63) #5
  %65 = inttoptr i64 %64 to %"struct.pdfium::base::internal::PartitionFreelistEntry"*
  store %"struct.pdfium::base::internal::PartitionFreelistEntry"* %65, %"struct.pdfium::base::internal::PartitionFreelistEntry"** %57, align 8
  %66 = getelementptr inbounds %"struct.pdfium::base::internal::PartitionPage", %"struct.pdfium::base::internal::PartitionPage"* %56, i64 0, i32 3
  %67 = load i16, i16* %66, align 8
  %68 = add i16 %67, 1
  store i16 %68, i16* %66, align 8
  br label %72

69:                                               ; preds = %54
  %70 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %22, i64 0, i32 0, i32 0
  %71 = call i8* @_ZN6pdfium4base8internal15PartitionBucket13SlowPathAllocEPNS1_17PartitionRootBaseEimPb(%"struct.pdfium::base::internal::PartitionBucket"* nonnull %45, %"struct.pdfium::base::internal::PartitionRootBase"* %70, i32 0, i64 %20, i8* nonnull %2) #5
  br label %72

72:                                               ; preds = %69, %60
  %73 = phi i8* [ %61, %60 ], [ %71, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #5
  store i8* %73, i8** %3, align 8
  store atomic i32 0, i32* %50 release, align 4
  br i1 %26, label %74, label %76

74:                                               ; preds = %72, %27
  %75 = load i8*, i8** %3, align 8
  call void @_ZN6pdfium4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %75, i64 %20, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)) #5
  br label %76

76:                                               ; preds = %74, %72
  %77 = bitcast i8** %3 to %"class.fxcrt::StringDataTemplate"**
  %78 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %77, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #5
  %79 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %78, i64 0, i32 0
  store i64 0, i64* %79, align 8
  %80 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %78, i64 0, i32 1
  store i64 %0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %78, i64 0, i32 2
  store i64 %21, i64* %81, align 8
  %82 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %78, i64 0, i32 3, i64 %0
  store i8 0, i8* %82, align 1
  ret %"class.fxcrt::StringDataTemplate"* %78
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(9808) %"class.pdfium::base::PartitionAllocatorGeneric"* @_Z27GetStringPartitionAllocatorv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.fxcrt::StringDataTemplate"* @_ZN5fxcrt18StringDataTemplateIcE6CreateEPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %"class.fxcrt::StringDataTemplate"* @_ZN5fxcrt18StringDataTemplateIcE6CreateEm(i64 %1)
  %4 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 3, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 1 %0, i64 %1, i1 false) #5
  %5 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %3, i64 0, i32 3, i64 %1
  store i8 0, i8* %5, align 1
  ret %"class.fxcrt::StringDataTemplate"* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5fxcrt18StringDataTemplateIcE12CopyContentsEPKcm(%"class.fxcrt::StringDataTemplate"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %0, i64 0, i32 3, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 1 %1, i64 %2, i1 false)
  %5 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %0, i64 0, i32 3, i64 %2
  store i8 0, i8* %5, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5fxcrt18StringDataTemplateIcE6RetainEv(%"class.fxcrt::StringDataTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add nsw i64 %3, 1
  store i64 %4, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5fxcrt18StringDataTemplateIcE7ReleaseEv(%"class.fxcrt::StringDataTemplate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.pdfium::base::internal::DeferredUnmap", align 8
  %3 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add nsw i64 %4, -1
  store i64 %5, i64* %3, align 8
  %6 = icmp slt i64 %4, 2
  br i1 %6, label %7, label %69

7:                                                ; preds = %1
  %8 = tail call dereferenceable(9808) %"class.pdfium::base::PartitionAllocatorGeneric"* @_Z27GetStringPartitionAllocatorv() #5
  %9 = bitcast %"class.fxcrt::StringDataTemplate"* %0 to i8*
  %10 = icmp eq %"class.fxcrt::StringDataTemplate"* %0, null
  br i1 %10, label %69, label %11, !prof !2

11:                                               ; preds = %7
  %12 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3"* @_ZN6pdfium4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  tail call void @_ZN6pdfium4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8* nonnull %9) #5
  %16 = tail call zeroext i1 @_ZN6pdfium4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8* nonnull %9) #5
  br i1 %16, label %69, label %17

17:                                               ; preds = %15, %11
  %18 = ptrtoint %"class.fxcrt::StringDataTemplate"* %0 to i64
  %19 = and i64 %18, -2097152
  %20 = or i64 %19, 4096
  %21 = inttoptr i64 %20 to i8*
  %22 = lshr i64 %18, 9
  %23 = and i64 %22, 4064
  %24 = getelementptr inbounds i8, i8* %21, i64 %23
  %25 = getelementptr inbounds i8, i8* %24, i64 28
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 4
  %28 = zext i16 %27 to i64
  %29 = shl nuw nsw i64 %28, 5
  %30 = sub nsw i64 0, %29
  %31 = getelementptr inbounds i8, i8* %24, i64 %30
  %32 = bitcast i8* %31 to %"struct.pdfium::base::internal::PartitionPage"*
  %33 = bitcast %"struct.pdfium::base::internal::DeferredUnmap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #5
  %34 = getelementptr inbounds %"struct.pdfium::base::internal::DeferredUnmap", %"struct.pdfium::base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.pdfium::base::internal::DeferredUnmap", %"struct.pdfium::base::internal::DeferredUnmap"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false) #5
  %36 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %8, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.pdfium::base::subtle::SpinLock", %"class.pdfium::base::subtle::SpinLock"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw xchg i32* %37, i32 1 acquire
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40, !prof !6

40:                                               ; preds = %17
  tail call void @_ZN6pdfium4base6subtle8SpinLock8LockSlowEv(%"class.pdfium::base::subtle::SpinLock"* %36) #5
  br label %41

41:                                               ; preds = %40, %17
  %42 = bitcast i8* %31 to %"struct.pdfium::base::internal::PartitionFreelistEntry"**
  %43 = load %"struct.pdfium::base::internal::PartitionFreelistEntry"*, %"struct.pdfium::base::internal::PartitionFreelistEntry"** %42, align 32
  %44 = bitcast %"class.fxcrt::StringDataTemplate"* %0 to %"struct.pdfium::base::internal::PartitionFreelistEntry"*
  %45 = icmp eq %"struct.pdfium::base::internal::PartitionFreelistEntry"* %43, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %41
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !7
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !8
  unreachable

47:                                               ; preds = %41
  %48 = ptrtoint %"struct.pdfium::base::internal::PartitionFreelistEntry"* %43 to i64
  %49 = tail call i64 @llvm.bswap.i64(i64 %48) #5
  %50 = inttoptr i64 %49 to %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"*
  %51 = bitcast %"class.fxcrt::StringDataTemplate"* %0 to %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"* %50, %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"** %51, align 8
  %52 = bitcast i8* %31 to %"class.fxcrt::StringDataTemplate"**
  store %"class.fxcrt::StringDataTemplate"* %0, %"class.fxcrt::StringDataTemplate"** %52, align 32
  %53 = getelementptr inbounds i8, i8* %31, i64 24
  %54 = bitcast i8* %53 to i16*
  %55 = load i16, i16* %54, align 8
  %56 = add i16 %55, -1
  store i16 %56, i16* %54, align 8
  %57 = icmp slt i16 %56, 1
  br i1 %57, label %58, label %62, !prof !2

58:                                               ; preds = %47
  %59 = tail call { i8*, i64 } @_ZN6pdfium4base8internal13PartitionPage12FreeSlowPathEv(%"struct.pdfium::base::internal::PartitionPage"* %32) #5
  %60 = extractvalue { i8*, i64 } %59, 0
  %61 = extractvalue { i8*, i64 } %59, 1
  br label %62

62:                                               ; preds = %58, %47
  %63 = phi i8* [ %60, %58 ], [ null, %47 ]
  %64 = phi i64 [ %61, %58 ], [ 0, %47 ]
  store i8* %63, i8** %34, align 8
  store i64 %64, i64* %35, align 8
  store atomic i32 0, i32* %37 release, align 4
  %65 = load i8*, i8** %34, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67, !prof !6

67:                                               ; preds = %62
  call void @_ZN6pdfium4base8internal13DeferredUnmap5UnmapEv(%"struct.pdfium::base::internal::DeferredUnmap"* nonnull %2) #5
  br label %68

68:                                               ; preds = %67, %62
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #5
  br label %69

69:                                               ; preds = %68, %15, %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5fxcrt18StringDataTemplateIcE17CanOperateInPlaceEm(%"class.fxcrt::StringDataTemplate"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp slt i64 %4, 2
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp uge i64 %8, %1
  br label %10

10:                                               ; preds = %6, %2
  %11 = phi i1 [ false, %2 ], [ %9, %6 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5fxcrt18StringDataTemplateIcE12CopyContentsERKS1_(%"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %0, i64 0, i32 3, i64 0
  %4 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %1, i64 0, i32 3, i64 0
  %5 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 %7, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5fxcrt18StringDataTemplateIcE14CopyContentsAtEmPKcm(%"class.fxcrt::StringDataTemplate"*, i64, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %0, i64 0, i32 3, i64 %1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %2, i64 %3, i1 false)
  %6 = add i64 %3, %1
  %7 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %0, i64 0, i32 3, i64 %6
  store i8 0, i8* %7, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5fxcrt18StringDataTemplateIcEC2Emm(%"class.fxcrt::StringDataTemplate"*, i64, i64) unnamed_addr #0 comdat($_ZN5fxcrt18StringDataTemplateIcEC5Emm) align 2 {
  %4 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %0, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %0, i64 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %0, i64 0, i32 2
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %0, i64 0, i32 3, i64 %1
  store i8 0, i8* %7, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.fxcrt::StringDataTemplate.1"* @_ZN5fxcrt18StringDataTemplateIwE6CreateEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i8, align 1
  %3 = alloca i8*, align 8
  %4 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %0, i64 4) #5
  %5 = extractvalue { i64, i1 } %4, 1
  br i1 %5, label %21, label %6

6:                                                ; preds = %1
  %7 = extractvalue { i64, i1 } %4, 0
  %8 = zext i64 %7 to i65
  %9 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %8, i65 28) #5
  %10 = extractvalue { i65, i1 } %9, 1
  %11 = extractvalue { i65, i1 } %9, 0
  %12 = icmp slt i65 %11, 0
  %13 = or i1 %10, %12
  br i1 %13, label %21, label %14

14:                                               ; preds = %6
  %15 = and i65 %11, 18446744073709551612
  %16 = tail call { i65, i1 } @llvm.sadd.with.overflow.i65(i65 %15, i65 15) #5
  %17 = extractvalue { i65, i1 } %16, 1
  %18 = extractvalue { i65, i1 } %16, 0
  %19 = icmp slt i65 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %1, %6, %14
  tail call void @llvm.trap() #5
  unreachable

22:                                               ; preds = %14
  %23 = trunc i65 %18 to i64
  %24 = and i64 %23, -16
  %25 = add i64 %24, -28
  %26 = lshr exact i64 %25, 2
  %27 = tail call dereferenceable(9808) %"class.pdfium::base::PartitionAllocatorGeneric"* @_Z27GetStringPartitionAllocatorv() #5
  %28 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %29 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3"* @_ZN6pdfium4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %30 = and i8 %29, 1
  %31 = icmp ne i8 %30, 0
  br i1 %31, label %32, label %34, !prof !2

32:                                               ; preds = %22
  %33 = call zeroext i1 @_ZN6pdfium4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %3, i32 0, i64 %24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)) #5
  br i1 %33, label %79, label %34

34:                                               ; preds = %32, %22
  %35 = call i64 @llvm.ctlz.i64(i64 %24, i1 false) #5, !range !3
  %36 = sub nuw nsw i64 64, %35
  %37 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %27, i64 0, i32 0, i32 2, i64 %36
  %38 = load i64, i64* %37, align 8
  %39 = lshr i64 %24, %38
  %40 = and i64 %39, 7
  %41 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %27, i64 0, i32 0, i32 3, i64 %36
  %42 = load i64, i64* %41, align 8
  %43 = and i64 %42, %24
  %44 = shl nsw i64 %36, 3
  %45 = or i64 %40, %44
  %46 = icmp ne i64 %43, 0
  %47 = zext i1 %46 to i64
  %48 = add nsw i64 %45, %47
  %49 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %27, i64 0, i32 0, i32 4, i64 %48
  %50 = load %"struct.pdfium::base::internal::PartitionBucket"*, %"struct.pdfium::base::internal::PartitionBucket"** %49, align 8
  %51 = icmp eq %"struct.pdfium::base::internal::PartitionBucket"* %50, null
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %34
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !5
  unreachable

53:                                               ; preds = %34
  %54 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %27, i64 0, i32 0, i32 1
  %55 = getelementptr inbounds %"class.pdfium::base::subtle::SpinLock", %"class.pdfium::base::subtle::SpinLock"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw xchg i32* %55, i32 1 acquire
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !6

58:                                               ; preds = %53
  call void @_ZN6pdfium4base6subtle8SpinLock8LockSlowEv(%"class.pdfium::base::subtle::SpinLock"* %54) #5
  br label %59

59:                                               ; preds = %58, %53
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #5
  store i8 0, i8* %2, align 1
  %60 = getelementptr inbounds %"struct.pdfium::base::internal::PartitionBucket", %"struct.pdfium::base::internal::PartitionBucket"* %50, i64 0, i32 0
  %61 = load %"struct.pdfium::base::internal::PartitionPage"*, %"struct.pdfium::base::internal::PartitionPage"** %60, align 8
  %62 = getelementptr inbounds %"struct.pdfium::base::internal::PartitionPage", %"struct.pdfium::base::internal::PartitionPage"* %61, i64 0, i32 0
  %63 = load %"struct.pdfium::base::internal::PartitionFreelistEntry"*, %"struct.pdfium::base::internal::PartitionFreelistEntry"** %62, align 8
  %64 = icmp eq %"struct.pdfium::base::internal::PartitionFreelistEntry"* %63, null
  br i1 %64, label %74, label %65, !prof !2

65:                                               ; preds = %59
  %66 = bitcast %"struct.pdfium::base::internal::PartitionFreelistEntry"* %63 to i8*
  %67 = bitcast %"struct.pdfium::base::internal::PartitionFreelistEntry"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = call i64 @llvm.bswap.i64(i64 %68) #5
  %70 = inttoptr i64 %69 to %"struct.pdfium::base::internal::PartitionFreelistEntry"*
  store %"struct.pdfium::base::internal::PartitionFreelistEntry"* %70, %"struct.pdfium::base::internal::PartitionFreelistEntry"** %62, align 8
  %71 = getelementptr inbounds %"struct.pdfium::base::internal::PartitionPage", %"struct.pdfium::base::internal::PartitionPage"* %61, i64 0, i32 3
  %72 = load i16, i16* %71, align 8
  %73 = add i16 %72, 1
  store i16 %73, i16* %71, align 8
  br label %77

74:                                               ; preds = %59
  %75 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %27, i64 0, i32 0, i32 0
  %76 = call i8* @_ZN6pdfium4base8internal15PartitionBucket13SlowPathAllocEPNS1_17PartitionRootBaseEimPb(%"struct.pdfium::base::internal::PartitionBucket"* nonnull %50, %"struct.pdfium::base::internal::PartitionRootBase"* %75, i32 0, i64 %24, i8* nonnull %2) #5
  br label %77

77:                                               ; preds = %74, %65
  %78 = phi i8* [ %66, %65 ], [ %76, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #5
  store i8* %78, i8** %3, align 8
  store atomic i32 0, i32* %55 release, align 4
  br i1 %31, label %79, label %81

79:                                               ; preds = %77, %32
  %80 = load i8*, i8** %3, align 8
  call void @_ZN6pdfium4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %80, i64 %24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0)) #5
  br label %81

81:                                               ; preds = %79, %77
  %82 = bitcast i8** %3 to %"class.fxcrt::StringDataTemplate.1"**
  %83 = load %"class.fxcrt::StringDataTemplate.1"*, %"class.fxcrt::StringDataTemplate.1"** %82, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #5
  %84 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %83, i64 0, i32 0
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %83, i64 0, i32 1
  store i64 %0, i64* %85, align 8
  %86 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %83, i64 0, i32 2
  store i64 %26, i64* %86, align 8
  %87 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %83, i64 0, i32 3, i64 %0
  store i32 0, i32* %87, align 4
  ret %"class.fxcrt::StringDataTemplate.1"* %83
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.fxcrt::StringDataTemplate.1"* @_ZN5fxcrt18StringDataTemplateIwE6CreateEPKwm(i32*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call %"class.fxcrt::StringDataTemplate.1"* @_ZN5fxcrt18StringDataTemplateIwE6CreateEm(i64 %1)
  %4 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %3, i64 0, i32 3
  %5 = bitcast [1 x i32]* %4 to i8*
  %6 = bitcast i32* %0 to i8*
  %7 = shl i64 %1, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 4 %6, i64 %7, i1 false) #5
  %8 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %3, i64 0, i32 3, i64 %1
  store i32 0, i32* %8, align 4
  ret %"class.fxcrt::StringDataTemplate.1"* %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5fxcrt18StringDataTemplateIwE12CopyContentsEPKwm(%"class.fxcrt::StringDataTemplate.1"*, i32*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %0, i64 0, i32 3
  %5 = bitcast [1 x i32]* %4 to i8*
  %6 = bitcast i32* %1 to i8*
  %7 = shl i64 %2, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 4 %6, i64 %7, i1 false)
  %8 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %0, i64 0, i32 3, i64 %2
  store i32 0, i32* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5fxcrt18StringDataTemplateIwE6RetainEv(%"class.fxcrt::StringDataTemplate.1"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add nsw i64 %3, 1
  store i64 %4, i64* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5fxcrt18StringDataTemplateIwE7ReleaseEv(%"class.fxcrt::StringDataTemplate.1"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.pdfium::base::internal::DeferredUnmap", align 8
  %3 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add nsw i64 %4, -1
  store i64 %5, i64* %3, align 8
  %6 = icmp slt i64 %4, 2
  br i1 %6, label %7, label %69

7:                                                ; preds = %1
  %8 = tail call dereferenceable(9808) %"class.pdfium::base::PartitionAllocatorGeneric"* @_Z27GetStringPartitionAllocatorv() #5
  %9 = bitcast %"class.fxcrt::StringDataTemplate.1"* %0 to i8*
  %10 = icmp eq %"class.fxcrt::StringDataTemplate.1"* %0, null
  br i1 %10, label %69, label %11, !prof !2

11:                                               ; preds = %7
  %12 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3"* @_ZN6pdfium4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  tail call void @_ZN6pdfium4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8* nonnull %9) #5
  %16 = tail call zeroext i1 @_ZN6pdfium4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8* nonnull %9) #5
  br i1 %16, label %69, label %17

17:                                               ; preds = %15, %11
  %18 = ptrtoint %"class.fxcrt::StringDataTemplate.1"* %0 to i64
  %19 = and i64 %18, -2097152
  %20 = or i64 %19, 4096
  %21 = inttoptr i64 %20 to i8*
  %22 = lshr i64 %18, 9
  %23 = and i64 %22, 4064
  %24 = getelementptr inbounds i8, i8* %21, i64 %23
  %25 = getelementptr inbounds i8, i8* %24, i64 28
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 4
  %28 = zext i16 %27 to i64
  %29 = shl nuw nsw i64 %28, 5
  %30 = sub nsw i64 0, %29
  %31 = getelementptr inbounds i8, i8* %24, i64 %30
  %32 = bitcast i8* %31 to %"struct.pdfium::base::internal::PartitionPage"*
  %33 = bitcast %"struct.pdfium::base::internal::DeferredUnmap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #5
  %34 = getelementptr inbounds %"struct.pdfium::base::internal::DeferredUnmap", %"struct.pdfium::base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.pdfium::base::internal::DeferredUnmap", %"struct.pdfium::base::internal::DeferredUnmap"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 0, i64 16, i1 false) #5
  %36 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %8, i64 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.pdfium::base::subtle::SpinLock", %"class.pdfium::base::subtle::SpinLock"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw xchg i32* %37, i32 1 acquire
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40, !prof !6

40:                                               ; preds = %17
  tail call void @_ZN6pdfium4base6subtle8SpinLock8LockSlowEv(%"class.pdfium::base::subtle::SpinLock"* %36) #5
  br label %41

41:                                               ; preds = %40, %17
  %42 = bitcast i8* %31 to %"struct.pdfium::base::internal::PartitionFreelistEntry"**
  %43 = load %"struct.pdfium::base::internal::PartitionFreelistEntry"*, %"struct.pdfium::base::internal::PartitionFreelistEntry"** %42, align 32
  %44 = bitcast %"class.fxcrt::StringDataTemplate.1"* %0 to %"struct.pdfium::base::internal::PartitionFreelistEntry"*
  %45 = icmp eq %"struct.pdfium::base::internal::PartitionFreelistEntry"* %43, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %41
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !7
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !8
  unreachable

47:                                               ; preds = %41
  %48 = ptrtoint %"struct.pdfium::base::internal::PartitionFreelistEntry"* %43 to i64
  %49 = tail call i64 @llvm.bswap.i64(i64 %48) #5
  %50 = inttoptr i64 %49 to %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"*
  %51 = bitcast %"class.fxcrt::StringDataTemplate.1"* %0 to %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"* %50, %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"** %51, align 8
  %52 = bitcast i8* %31 to %"class.fxcrt::StringDataTemplate.1"**
  store %"class.fxcrt::StringDataTemplate.1"* %0, %"class.fxcrt::StringDataTemplate.1"** %52, align 32
  %53 = getelementptr inbounds i8, i8* %31, i64 24
  %54 = bitcast i8* %53 to i16*
  %55 = load i16, i16* %54, align 8
  %56 = add i16 %55, -1
  store i16 %56, i16* %54, align 8
  %57 = icmp slt i16 %56, 1
  br i1 %57, label %58, label %62, !prof !2

58:                                               ; preds = %47
  %59 = tail call { i8*, i64 } @_ZN6pdfium4base8internal13PartitionPage12FreeSlowPathEv(%"struct.pdfium::base::internal::PartitionPage"* %32) #5
  %60 = extractvalue { i8*, i64 } %59, 0
  %61 = extractvalue { i8*, i64 } %59, 1
  br label %62

62:                                               ; preds = %58, %47
  %63 = phi i8* [ %60, %58 ], [ null, %47 ]
  %64 = phi i64 [ %61, %58 ], [ 0, %47 ]
  store i8* %63, i8** %34, align 8
  store i64 %64, i64* %35, align 8
  store atomic i32 0, i32* %37 release, align 4
  %65 = load i8*, i8** %34, align 8
  %66 = icmp eq i8* %65, null
  br i1 %66, label %68, label %67, !prof !6

67:                                               ; preds = %62
  call void @_ZN6pdfium4base8internal13DeferredUnmap5UnmapEv(%"struct.pdfium::base::internal::DeferredUnmap"* nonnull %2) #5
  br label %68

68:                                               ; preds = %67, %62
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #5
  br label %69

69:                                               ; preds = %68, %15, %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK5fxcrt18StringDataTemplateIwE17CanOperateInPlaceEm(%"class.fxcrt::StringDataTemplate.1"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp slt i64 %4, 2
  br i1 %5, label %6, label %10

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp uge i64 %8, %1
  br label %10

10:                                               ; preds = %6, %2
  %11 = phi i1 [ false, %2 ], [ %9, %6 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5fxcrt18StringDataTemplateIwE12CopyContentsERKS1_(%"class.fxcrt::StringDataTemplate.1"*, %"class.fxcrt::StringDataTemplate.1"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %0, i64 0, i32 3, i64 0
  %4 = bitcast i32* %3 to i8*
  %5 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %1, i64 0, i32 3, i64 0
  %6 = bitcast i32* %5 to i8*
  %7 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = shl i64 %8, 2
  %10 = add i64 %9, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %6, i64 %10, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5fxcrt18StringDataTemplateIwE14CopyContentsAtEmPKwm(%"class.fxcrt::StringDataTemplate.1"*, i64, i32*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %0, i64 0, i32 3, i64 %1
  %6 = bitcast i32* %5 to i8*
  %7 = bitcast i32* %2 to i8*
  %8 = shl i64 %3, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 %8, i1 false)
  %9 = add i64 %3, %1
  %10 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %0, i64 0, i32 3, i64 %9
  store i32 0, i32* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN5fxcrt18StringDataTemplateIwEC2Emm(%"class.fxcrt::StringDataTemplate.1"*, i64, i64) unnamed_addr #0 comdat($_ZN5fxcrt18StringDataTemplateIwEC5Emm) align 2 {
  %4 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %0, i64 0, i32 0
  store i64 0, i64* %4, align 8
  %5 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %0, i64 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %0, i64 0, i32 2
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.1", %"class.fxcrt::StringDataTemplate.1"* %0, i64 0, i32 3, i64 %1
  store i32 0, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #3

; Function Attrs: nounwind readnone speculatable
declare { i65, i1 } @llvm.sadd.with.overflow.i65(i65, i65) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare zeroext i1 @_ZN6pdfium4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8**, i32, i64, i8*) local_unnamed_addr #2

declare void @_ZN6pdfium4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #3

declare void @_ZN6pdfium4base6subtle8SpinLock8LockSlowEv(%"class.pdfium::base::subtle::SpinLock"*) local_unnamed_addr #2

declare i8* @_ZN6pdfium4base8internal15PartitionBucket13SlowPathAllocEPNS1_17PartitionRootBaseEimPb(%"struct.pdfium::base::internal::PartitionBucket"*, %"struct.pdfium::base::internal::PartitionRootBase"*, i32, i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #3

declare void @_ZN6pdfium4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN6pdfium4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8*) local_unnamed_addr #2

declare { i8*, i64 } @_ZN6pdfium4base8internal13PartitionPage12FreeSlowPathEv(%"struct.pdfium::base::internal::PartitionPage"*) local_unnamed_addr #2

declare void @_ZN6pdfium4base8internal13DeferredUnmap5UnmapEv(%"struct.pdfium::base::internal::DeferredUnmap"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i64 0, i64 65}
!4 = !{i32 -2142661723}
!5 = !{i32 -2142661702}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{i32 -2142897324}
!8 = !{i32 -2142897303}
