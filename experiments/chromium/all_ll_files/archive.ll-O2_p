; ModuleID = '../../third_party/unrar/src/archive.cpp'
source_filename = "../../third_party/unrar/src/archive.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.ErrorHandler = type <{ i32, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%class.Archive = type <{ %class.File, %class.CryptData, %class.ComprDataIO, i8, [7 x i8], %class.RAROptions*, %class.RarTime, i32, i32, i8, [7 x i8], %class.QuickOpen, i8, [7 x i8], i64, %struct.BaseBlock, %struct.MarkHeader, %struct.MainHeader, %struct.CryptHeader, [4 x i8], %struct.FileHeader, %struct.EndArcHeader, %struct.SubBlockHeader, [4 x i8], %struct.FileHeader, %struct.CommentHeader, %struct.ProtectHeader, %struct.UnixOwnersHeader, %struct.EAHeader, %struct.StreamHeader, [4 x i8], i64, i64, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i64, i8, i8, [16 x i8], i8, i8, i32, i64, i64, i64, i8, [3 x i8], [2048 x i32], [4 x i8] }>
%class.File = type { i32 (...)**, i64, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, [2048 x i32], i32, i64 }
%class.CryptData = type { [4 x %"struct.CryptData::KDF3CacheItem"], i32, [4 x %"struct.CryptData::KDF5CacheItem"], i32, i32, %class.Rijndael, [256 x i32], [256 x i8], [4 x i32], [3 x i8], [4 x i16] }
%"struct.CryptData::KDF3CacheItem" = type { %class.SecPassword, [8 x i8], [16 x i8], [16 x i8], i8, [3 x i8] }
%class.SecPassword = type <{ [128 x i32], i8, i8, [2 x i8] }>
%"struct.CryptData::KDF5CacheItem" = type { %class.SecPassword, [16 x i8], [32 x i8], i32, [32 x i8], [32 x i8] }
%class.Rijndael = type { i8, i32, [16 x i8], [15 x [4 x [4 x i8]]] }
%class.ComprDataIO = type <{ i8, [7 x i8], i64, i8*, i8, [7 x i8], i64, i8*, i64, i8*, i64, i8, i8, i8, i8, [4 x i8], %class.File*, %class.File*, %class.CmdAdd*, %struct.FileHeader*, i64*, %class.CryptData*, %class.CryptData*, i32, i32, i8, i8, i8, [5 x i8], i64, i64, i64, i64, i64, i64, i64, %class.DataHash, %class.DataHash, %class.DataHash, i8, i8, [6 x i8] }>
%class.CmdAdd = type opaque
%class.DataHash = type <{ i32, i32, %struct.blake2sp_state*, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2sp_state = type <{ [8 x %struct.blake2s_state], %struct.blake2s_state, [512 x i8], i64, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2s_state = type <{ [240 x i8], i8*, i32*, i32*, i32*, i64, i8, [7 x i8] }>
%class.ThreadPool = type { i32, [64 x i64], i32, i32, [64 x %"struct.ThreadPool::QueueEntry"], i32, i32, i8, i32, %union.pthread_cond_t, %union.pthread_mutex_t, i8, %union.pthread_cond_t, %union.pthread_mutex_t, %union.pthread_mutex_t }
%"struct.ThreadPool::QueueEntry" = type { void (i8*)*, i8* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1, %union.anon.2, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1 = type { i64 }
%union.anon.2 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.RarTime = type { i64 }
%class.QuickOpen = type <{ %class.Archive*, i8, [7 x i8], %struct.QuickOpenItem*, %struct.QuickOpenItem*, i8*, i64, %class.CryptData, i8, [7 x i8], i64, i64, i64, i64, i64, i64, %class.Array, i64, i64, i8, [7 x i8] }>
%struct.QuickOpenItem = type { i8*, i64, i64, %struct.QuickOpenItem* }
%class.Array = type <{ i8*, i64, i64, i64, i8, [7 x i8] }>
%struct.BaseBlock = type { i32, i32, i32, i32, i8 }
%struct.MarkHeader = type { [8 x i8], i32 }
%struct.MainHeader = type { %struct.BaseBlock, i16, i32, i8, i8, i8, i64, i64, i64, i64 }
%struct.CryptHeader = type { %struct.BaseBlock, i8, i32, [16 x i8], [8 x i8] }
%struct.EndArcHeader = type { %struct.BaseBlock, i32, i32, i8, i8, i8, i8 }
%struct.SubBlockHeader = type <{ %struct.BlockHeader, i16, i8, i8 }>
%struct.BlockHeader = type { %struct.BaseBlock, i32 }
%struct.FileHeader = type { %struct.BlockHeader, i8, i32, i8, %union.anon, [2048 x i32], %class.Array, %class.RarTime, %class.RarTime, %class.RarTime, i64, i64, i64, %struct.HashValue, i32, i8, i8, i8, i8, i32, i8, [16 x i8], [16 x i8], i8, [8 x i8], i8, [32 x i8], i32, i8, i8, i8, i8, i64, i8, i8, i8, i32, i32, [2048 x i32], i8, i8, i8, i8, [256 x i8], [256 x i8], i32, i32 }
%union.anon = type { i32 }
%struct.HashValue = type { i32, %union.anon.0 }
%union.anon.0 = type { i32, [28 x i8] }
%struct.CommentHeader = type <{ %struct.BaseBlock, i16, i8, i8, i16, [2 x i8] }>
%struct.ProtectHeader = type { %struct.BlockHeader, i8, i16, i32, [8 x i8] }
%struct.UnixOwnersHeader = type { %struct.SubBlockHeader.base, i16, i16, [256 x i8], [256 x i8] }
%struct.SubBlockHeader.base = type <{ %struct.BlockHeader, i16, i8 }>
%struct.EAHeader = type { %struct.SubBlockHeader.base, i32, i8, i8, i32 }
%struct.StreamHeader = type <{ %struct.SubBlockHeader.base, i8, i32, i8, i8, [2 x i8], i32, i16, [260 x i8], [2 x i8] }>
%class.RAROptions = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array.4, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32, [4 x i8] }>
%class.Array.4 = type <{ i64*, i64, i64, i64, i8, [7 x i8] }>
%struct.FilterMode = type { i32, i32, i32 }
%class.Array.6 = type <{ i32*, i64, i64, i64, i8, [7 x i8] }>
%class.uiMsgStore = type <{ [8 x i32*], [8 x i32], i32, i32, i32, [4 x i8] }>
%class.Unpack = type { %class.ComprDataIO*, %class.BitInput, %class.ThreadPool*, %struct.UnpackThreadData*, i32, i8*, %class.Array, %class.Array, %class.Array.9, [4 x i32], i32, i32, i32, i64, i64, i32, i32, %struct.UnpackBlockHeader, %struct.UnpackBlockTables, i64, i8*, %class.FragmentedWindow, i8, i64, i8, i8, i8, i64, i8, [256 x i16], [256 x i16], [256 x i16], [256 x i16], [256 x i8], [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x %struct.DecodeTable], [1028 x i8], i8, i32, i32, i32, [4 x %struct.AudioVariables], i32, i32, %class.ModelPPM, i32, [404 x i8], i32, i8, i8, i8, %class.RarVM, %class.BitInput, %class.Array.12, %class.Array.12, %class.Array.14, i32, i64, i64 }
%struct.UnpackThreadData = type <{ %class.Unpack*, %class.BitInput, i8, [3 x i8], %struct.UnpackBlockHeader, i8, [3 x i8], %struct.UnpackBlockTables, i32, i8, i8, i8, i8, %struct.UnpackDecodedItem*, i32, i32, i32, [4 x i8] }>
%struct.UnpackDecodedItem = type { i32, i16, %union.anon.8 }
%union.anon.8 = type { i32 }
%class.Array.9 = type <{ %struct.UnpackFilter*, i64, i64, i64, i8, [7 x i8] }>
%struct.UnpackFilter = type { i8, i32, i32, i8, i8 }
%struct.UnpackBlockHeader = type { i32, i32, i32, i32, i8, i8 }
%struct.UnpackBlockTables = type { %struct.DecodeTable, %struct.DecodeTable, %struct.DecodeTable, %struct.DecodeTable, %struct.DecodeTable }
%struct.DecodeTable = type { i32, [16 x i32], [16 x i32], i32, [1024 x i8], [1024 x i16], [306 x i16] }
%class.FragmentedWindow = type { [32 x i8*], [32 x i64] }
%struct.AudioVariables = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [11 x i32], i32, i32 }
%class.ModelPPM = type <{ i8, [25 x [16 x %struct.RARPPM_SEE2_CONTEXT]], %struct.RARPPM_SEE2_CONTEXT, [3 x i8], %struct.RARPPM_CONTEXT*, %struct.RARPPM_CONTEXT*, %struct.RARPPM_CONTEXT*, %struct.RARPPM_STATE*, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], [256 x i8], [256 x i8], i8, i8, i8, i8, [128 x [64 x i16]], [4 x i8], %class.RangeCoder, %class.SubAllocator }>
%struct.RARPPM_SEE2_CONTEXT = type { i16, i8, i8 }
%struct.RARPPM_CONTEXT = type <{ i16, %union.anon.11, %struct.RARPPM_CONTEXT* }>
%union.anon.11 = type { %"struct.RARPPM_CONTEXT::FreqData" }
%"struct.RARPPM_CONTEXT::FreqData" = type <{ i16, %struct.RARPPM_STATE* }>
%struct.RARPPM_STATE = type <{ i8, i8, %struct.RARPPM_CONTEXT* }>
%class.RangeCoder = type { i32, i32, i32, %"struct.RangeCoder::SUBRANGE", %class.Unpack* }
%"struct.RangeCoder::SUBRANGE" = type { i32, i32, i32 }
%class.SubAllocator = type { i64, [38 x i8], [128 x i8], i8, i8*, i8*, i8*, [38 x %"struct.SubAllocator::RAR_NODE"], i8*, i8*, i8*, i8* }
%"struct.SubAllocator::RAR_NODE" = type { %"struct.SubAllocator::RAR_NODE"* }
%class.RarVM = type { i8*, [8 x i32] }
%class.BitInput = type { i32, i32, i8, i8* }
%class.Array.12 = type <{ %struct.UnpackFilter30**, i64, i64, i64, i8, [7 x i8] }>
%struct.UnpackFilter30 = type { i32, i32, i8, i32, %struct.VM_PreparedProgram }
%struct.VM_PreparedProgram = type <{ i32, [7 x i32], i8*, i32, [4 x i8] }>
%class.Array.14 = type <{ i32*, i64, i64, i64, i8, [7 x i8] }>
%class.Array.16 = type <{ i8*, i64, i64, i64, i8, [7 x i8] }>

$_ZN4File8IsOpenedEv = comdat any

$_ZN5ArrayIwE3AddEm = comdat any

$_ZN5ArrayIhE3AddEm = comdat any

$_ZN5ArrayIcE3AddEm = comdat any

@.str = private unnamed_addr constant [4 x i32] [i32 67, i32 77, i32 84, i32 0], align 4
@_ZTV7Archive = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.Archive*)* @_ZN7ArchiveD2Ev to i8*), i8* bitcast (void (%class.Archive*)* @_ZN7ArchiveD0Ev to i8*), i8* bitcast (i1 (%class.Archive*, i32*, i32)* @_ZN7Archive4OpenEPKwj to i8*), i8* bitcast (i1 (%class.File*)* @_ZN4File5CloseEv to i8*), i8* bitcast (i32 (%class.Archive*, i8*, i64)* @_ZN7Archive4ReadEPvm to i8*), i8* bitcast (void (%class.Archive*, i64, i32)* @_ZN7Archive4SeekEli to i8*), i8* bitcast (i64 (%class.Archive*)* @_ZN7Archive4TellEv to i8*), i8* bitcast (i1 (%class.File*)* @_ZN4File8IsOpenedEv to i8*)] }, align 8
@ErrHandler = external global %class.ErrorHandler, align 4
@.str.2 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4
@.str.3 = private unnamed_addr constant [44 x i32] [i32 77, i32 97, i32 120, i32 105, i32 109, i32 117, i32 109, i32 32, i32 97, i32 108, i32 108, i32 111, i32 119, i32 101, i32 100, i32 32, i32 97, i32 114, i32 114, i32 97, i32 121, i32 32, i32 115, i32 105, i32 122, i32 101, i32 32, i32 40, i32 37, i32 117, i32 41, i32 32, i32 105, i32 115, i32 32, i32 101, i32 120, i32 99, i32 101, i32 101, i32 100, i32 101, i32 100, i32 0], align 4

@_ZN7ArchiveC1EP10RAROptions = hidden unnamed_addr alias void (%class.Archive*, %class.RAROptions*), void (%class.Archive*, %class.RAROptions*)* @_ZN7ArchiveC2EP10RAROptions
@_ZN7ArchiveD1Ev = hidden unnamed_addr alias void (%class.Archive*), void (%class.Archive*)* @_ZN7ArchiveD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7Archive10GetCommentEP5ArrayIwE(%class.Archive*, %class.Array.6*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 36
  %4 = load i8, i8* %3, align 2, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = bitcast %class.Archive* %0 to i64 (%class.Archive*)***
  %8 = load i64 (%class.Archive*)**, i64 (%class.Archive*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%class.Archive*)*, i64 (%class.Archive*)** %8, i64 6
  %10 = load i64 (%class.Archive*)*, i64 (%class.Archive*)** %9, align 8
  %11 = tail call i64 %10(%class.Archive* %0) #11
  %12 = tail call zeroext i1 @_ZN7Archive12DoGetCommentEP5ArrayIwE(%class.Archive* %0, %class.Array.6* %1)
  %13 = bitcast %class.Archive* %0 to void (%class.Archive*, i64, i32)***
  %14 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %14, i64 5
  %16 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %15, align 8
  tail call void %16(%class.Archive* %0, i64 %11, i32 0) #11
  br label %17

17:                                               ; preds = %2, %6
  %18 = phi i1 [ %12, %6 ], [ false, %2 ]
  ret i1 %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7Archive12DoGetCommentEP5ArrayIwE(%class.Archive*, %class.Array.6*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.uiMsgStore, align 8
  %4 = alloca %class.uiMsgStore, align 8
  %5 = alloca %class.uiMsgStore, align 8
  %6 = alloca %class.ComprDataIO, align 8
  %7 = alloca %class.Unpack, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %class.Array, align 8
  %11 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %29

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 44
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 7
  %18 = bitcast %class.Archive* %0 to void (%class.Archive*, i64, i32)***
  %19 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %19, i64 5
  %21 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %20, align 8
  tail call void %21(%class.Archive* %0, i64 %17, i32 0) #11
  %22 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  %23 = tail call zeroext i8 @_ZN4File7GetByteEv(%class.File* %22) #11
  %24 = zext i8 %23 to i32
  %25 = tail call zeroext i8 @_ZN4File7GetByteEv(%class.File* %22) #11
  %26 = zext i8 %25 to i32
  %27 = shl nuw nsw i32 %26, 8
  %28 = or i32 %27, %24
  br label %82

29:                                               ; preds = %2
  %30 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 3
  %31 = load i8, i8* %30, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 44
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, 20
  %37 = bitcast %class.Archive* %0 to void (%class.Archive*, i64, i32)***
  %38 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %37, align 8
  %39 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %38, i64 5
  %40 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %39, align 8
  tail call void %40(%class.Archive* %0, i64 %36, i32 0) #11
  %41 = tail call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* %0) #11
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %316, label %43

43:                                               ; preds = %33
  %44 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 117
  br i1 %46, label %57, label %316

47:                                               ; preds = %29
  %48 = tail call i64 @_ZN7Archive11GetStartPosEv(%class.Archive* %0) #11
  %49 = bitcast %class.Archive* %0 to void (%class.Archive*, i64, i32)***
  %50 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %49, align 8
  %51 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %50, i64 5
  %52 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %51, align 8
  tail call void %52(%class.Archive* %0, i64 %48, i32 0) #11
  %53 = tail call i64 @_ZN7Archive14SearchSubBlockEPKw(%class.Archive* %0, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @.str, i64 0, i64 0)) #11
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %316, label %55

55:                                               ; preds = %47
  %56 = tail call zeroext i1 @_ZN7Archive15ReadCommentDataEP5ArrayIwE(%class.Archive* %0, %class.Array.6* %1)
  br label %316

57:                                               ; preds = %43
  %58 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 25, i32 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = icmp ult i32 %63, 13
  br i1 %64, label %65, label %80

65:                                               ; preds = %57, %61
  %66 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %67 = bitcast %class.uiMsgStore* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %67) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 112, i1 false) #11
  %68 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 0
  %69 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 1
  %70 = bitcast i32** %69 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %70, align 8
  %71 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 3
  %72 = bitcast i32** %71 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %72, align 8
  %73 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 5
  %74 = bitcast i32** %73 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %74, align 8
  %75 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32** %75, align 8
  %76 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 1, i64 0
  %77 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 4
  %78 = bitcast i32* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 40, i1 false) #11
  store i32 58, i32* %77, align 8
  %79 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 2
  store i32 1, i32* %79, align 8
  store i32* %66, i32** %68, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %67) #11
  br label %316

80:                                               ; preds = %61
  %81 = add i32 %63, -13
  br label %82

82:                                               ; preds = %80, %14
  %83 = phi i32 [ %28, %14 ], [ %81, %80 ]
  %84 = load i32, i32* %11, align 8
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %90

86:                                               ; preds = %82
  %87 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 4
  %88 = load i8, i8* %87, align 1, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %201, label %101

90:                                               ; preds = %82
  %91 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 25, i32 3
  %92 = load i8, i8* %91, align 1
  %93 = icmp eq i8 %92, 48
  br i1 %93, label %201, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 25, i32 2
  %96 = load i8, i8* %95, align 2
  %97 = add i8 %96, -15
  %98 = icmp ugt i8 %97, 14
  %99 = icmp ugt i8 %92, 53
  %100 = or i1 %98, %99
  br i1 %100, label %316, label %101

101:                                              ; preds = %94, %86
  %102 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 312, i8* nonnull %102) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 -86, i64 312, i1 false)
  call void @_ZN11ComprDataIOC1Ev(%class.ComprDataIO* nonnull %6) #11
  %103 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %6, i64 0, i32 12
  store i8 1, i8* %103, align 1
  %104 = load i32, i32* %11, align 8
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %118

106:                                              ; preds = %101
  %107 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  %108 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* %107) #11
  %109 = call zeroext i8 @_ZN4File7GetByteEv(%class.File* %107) #11
  %110 = icmp ult i32 %83, 2
  br i1 %110, label %198, label %111

111:                                              ; preds = %106
  %112 = zext i8 %108 to i64
  %113 = zext i8 %109 to i64
  %114 = shl nuw nsw i64 %113, 8
  %115 = or i64 %114, %112
  %116 = add i32 %83, -2
  call void @_ZN11ComprDataIO18SetCmt13EncryptionEv(%class.ComprDataIO* nonnull %6) #11
  %117 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 25, i32 2
  store i8 15, i8* %117, align 2
  br label %122

118:                                              ; preds = %101
  %119 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 25, i32 1
  %120 = load i16, i16* %119, align 4
  %121 = zext i16 %120 to i64
  br label %122

122:                                              ; preds = %118, %111
  %123 = phi i32 [ %116, %111 ], [ %83, %118 ]
  %124 = phi i64 [ %115, %111 ], [ %121, %118 ]
  %125 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  call void @_ZN11ComprDataIO8SetFilesEP4FileS1_(%class.ComprDataIO* nonnull %6, %class.File* %125, %class.File* null) #11
  %126 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %6, i64 0, i32 11
  store i8 0, i8* %126, align 8
  %127 = zext i32 %123 to i64
  %128 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %6, i64 0, i32 10
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %6, i64 0, i32 38
  call void @_ZN8DataHash4InitE9HASH_TYPEj(%class.DataHash* %129, i32 2, i32 1) #11
  %130 = getelementptr inbounds %class.ComprDataIO, %class.ComprDataIO* %6, i64 0, i32 14
  store i8 1, i8* %130, align 1
  %131 = bitcast %class.Unpack* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 59768, i8* nonnull %131) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %131, i8 -86, i64 59768, i1 false)
  call void @_ZN6UnpackC1EP11ComprDataIO(%class.Unpack* nonnull %7, %class.ComprDataIO* nonnull %6) #11
  call void @_ZN6Unpack4InitEmb(%class.Unpack* nonnull %7, i64 65536, i1 zeroext false) #11
  %132 = and i64 %124, 4294967295
  %133 = getelementptr inbounds %class.Unpack, %class.Unpack* %7, i64 0, i32 23
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %class.Unpack, %class.Unpack* %7, i64 0, i32 28
  store i8 0, i8* %134, align 8
  %135 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 25, i32 2
  %136 = load i8, i8* %135, align 2
  %137 = zext i8 %136 to i32
  call void @_ZN6Unpack8DoUnpackEjb(%class.Unpack* nonnull %7, i32 %137, i1 zeroext false) #11
  %138 = load i32, i32* %11, align 8
  %139 = icmp eq i32 %138, 1
  br i1 %139, label %161, label %140

140:                                              ; preds = %122
  %141 = call i32 @_ZN8DataHash8GetCRC32Ev(%class.DataHash* %129) #11
  %142 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 25, i32 4
  %143 = load i16, i16* %142, align 8
  %144 = trunc i32 %141 to i16
  %145 = icmp eq i16 %143, %144
  br i1 %145, label %161, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %148 = bitcast %class.uiMsgStore* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %148) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %148, i8 -86, i64 112, i1 false) #11
  %149 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 0
  %150 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 1
  %151 = bitcast i32** %150 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %151, align 8
  %152 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 3
  %153 = bitcast i32** %152 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %153, align 8
  %154 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 5
  %155 = bitcast i32** %154 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %155, align 8
  %156 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32** %156, align 8
  %157 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 1, i64 0
  %158 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 4
  %159 = bitcast i32* %157 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %159, i8 0, i64 40, i1 false) #11
  store i32 58, i32* %158, align 8
  %160 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 2
  store i32 1, i32* %160, align 8
  store i32* %147, i32** %149, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %148) #11
  br label %196

161:                                              ; preds = %140, %122
  %162 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %162) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %163 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #11
  store i64 -6148914691236517206, i64* %9, align 8
  call void @_ZN11ComprDataIO15GetUnpackedDataEPPhPm(%class.ComprDataIO* nonnull %6, i8** nonnull %8, i64* nonnull %9) #11
  %164 = load i64, i64* %9, align 8
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %195, label %166

166:                                              ; preds = %161
  %167 = add i64 %164, 1
  %168 = getelementptr inbounds %class.Array.6, %class.Array.6* %1, i64 0, i32 2
  %169 = load i64, i64* %168, align 8
  %170 = icmp ult i64 %169, %167
  %171 = getelementptr inbounds %class.Array.6, %class.Array.6* %1, i64 0, i32 1
  br i1 %170, label %172, label %176

172:                                              ; preds = %166
  %173 = load i64, i64* %171, align 8
  %174 = sub i64 %167, %173
  call void @_ZN5ArrayIwE3AddEm(%class.Array.6* %1, i64 %174) #11
  %175 = load i64, i64* %171, align 8
  br label %177

176:                                              ; preds = %166
  store i64 %167, i64* %171, align 8
  br label %177

177:                                              ; preds = %172, %176
  %178 = phi i64 [ %175, %172 ], [ %167, %176 ]
  %179 = getelementptr inbounds %class.Array.6, %class.Array.6* %1, i64 0, i32 0
  %180 = bitcast %class.Array.6* %1 to i8**
  %181 = load i8*, i8** %180, align 8
  %182 = shl i64 %178, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %181, i8 0, i64 %182, i1 false)
  %183 = load i8*, i8** %8, align 8
  %184 = load i32*, i32** %179, align 8
  %185 = load i64, i64* %171, align 8
  %186 = call zeroext i1 @_Z10CharToWidePKcPwm(i8* %183, i32* %184, i64 %185) #11
  %187 = load i32*, i32** %179, align 8
  %188 = call i64 @wcslen(i32* %187) #12
  %189 = load i64, i64* %168, align 8
  %190 = icmp ult i64 %189, %188
  br i1 %190, label %191, label %194

191:                                              ; preds = %177
  %192 = load i64, i64* %171, align 8
  %193 = sub i64 %188, %192
  call void @_ZN5ArrayIwE3AddEm(%class.Array.6* %1, i64 %193) #11
  br label %195

194:                                              ; preds = %177
  store i64 %188, i64* %171, align 8
  br label %195

195:                                              ; preds = %194, %191, %161
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %162) #11
  br label %196

196:                                              ; preds = %195, %146
  %197 = phi i32 [ 1, %146 ], [ 0, %195 ]
  call void @_ZN6UnpackD1Ev(%class.Unpack* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 59768, i8* nonnull %131) #11
  br label %198

198:                                              ; preds = %106, %196
  %199 = phi i32 [ %197, %196 ], [ 1, %106 ]
  call void @_ZN11ComprDataIOD1Ev(%class.ComprDataIO* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 312, i8* nonnull %102) #11
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %312, label %316

201:                                              ; preds = %86, %90
  %202 = icmp eq i32 %83, 0
  br i1 %202, label %316, label %203

203:                                              ; preds = %201
  %204 = bitcast %class.Array* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %204) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 -86, i64 40, i1 false)
  %205 = zext i32 %83 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 0, i64 33, i1 false) #11
  call void @_ZN5ArrayIhE3AddEm(%class.Array* nonnull %10, i64 %205) #11
  %206 = getelementptr inbounds %class.Array, %class.Array* %10, i64 0, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = bitcast %class.Archive* %0 to i32 (%class.Archive*, i8*, i64)***
  %209 = load i32 (%class.Archive*, i8*, i64)**, i32 (%class.Archive*, i8*, i64)*** %208, align 8
  %210 = getelementptr inbounds i32 (%class.Archive*, i8*, i64)*, i32 (%class.Archive*, i8*, i64)** %209, i64 4
  %211 = load i32 (%class.Archive*, i8*, i64)*, i32 (%class.Archive*, i8*, i64)** %210, align 8
  %212 = call i32 %211(%class.Archive* %0, i8* %207, i64 %205) #11
  %213 = icmp sgt i32 %212, -1
  %214 = icmp ult i32 %212, %83
  %215 = and i1 %213, %214
  br i1 %215, label %216, label %226

216:                                              ; preds = %203
  %217 = zext i32 %212 to i64
  %218 = getelementptr inbounds %class.Array, %class.Array* %10, i64 0, i32 2
  %219 = load i64, i64* %218, align 8
  %220 = icmp ult i64 %219, %217
  %221 = getelementptr inbounds %class.Array, %class.Array* %10, i64 0, i32 1
  br i1 %220, label %222, label %225

222:                                              ; preds = %216
  %223 = load i64, i64* %221, align 8
  %224 = sub i64 %217, %223
  call void @_ZN5ArrayIhE3AddEm(%class.Array* nonnull %10, i64 %224) #11
  br label %226

225:                                              ; preds = %216
  store i64 %217, i64* %221, align 8
  br label %226

226:                                              ; preds = %225, %222, %203
  %227 = phi i32 [ %83, %203 ], [ %212, %222 ], [ %212, %225 ]
  %228 = load i32, i32* %11, align 8
  %229 = icmp eq i32 %228, 1
  br i1 %229, label %268, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 25, i32 4
  %232 = load i16, i16* %231, align 8
  %233 = zext i16 %232 to i32
  %234 = load i8*, i8** %206, align 8
  %235 = zext i32 %227 to i64
  %236 = call i32 @_Z5CRC32jPKvm(i32 -1, i8* %234, i64 %235) #11
  %237 = and i32 %236, 65535
  %238 = xor i32 %237, 65535
  %239 = icmp eq i32 %238, %233
  br i1 %239, label %268, label %240

240:                                              ; preds = %230
  %241 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %242 = bitcast %class.uiMsgStore* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %242) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %242, i8 -86, i64 112, i1 false) #11
  %243 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 0
  %244 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 1
  %245 = bitcast i32** %244 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %245, align 8
  %246 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 3
  %247 = bitcast i32** %246 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %247, align 8
  %248 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 5
  %249 = bitcast i32** %248 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %249, align 8
  %250 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32** %250, align 8
  %251 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 1, i64 0
  %252 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 4
  %253 = bitcast i32* %251 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %253, i8 0, i64 40, i1 false) #11
  store i32 58, i32* %252, align 8
  %254 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 2
  store i32 1, i32* %254, align 8
  store i32* %241, i32** %243, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %242) #11
  %255 = load i8*, i8** %206, align 8
  %256 = icmp eq i8* %255, null
  br i1 %256, label %267, label %257

257:                                              ; preds = %240
  %258 = getelementptr inbounds %class.Array, %class.Array* %10, i64 0, i32 4
  %259 = load i8, i8* %258, align 8, !range !2
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %265, label %261

261:                                              ; preds = %257
  %262 = getelementptr inbounds %class.Array, %class.Array* %10, i64 0, i32 2
  %263 = load i64, i64* %262, align 8
  call void @_Z9cleandataPvm(i8* nonnull %255, i64 %263) #11
  %264 = load i8*, i8** %206, align 8
  br label %265

265:                                              ; preds = %261, %257
  %266 = phi i8* [ %255, %257 ], [ %264, %261 ]
  call void @free(i8* %266) #11
  br label %267

267:                                              ; preds = %240, %265
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %204) #11
  br label %316

268:                                              ; preds = %230, %226
  %269 = add i32 %227, 1
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds %class.Array.6, %class.Array.6* %1, i64 0, i32 2
  %272 = load i64, i64* %271, align 8
  %273 = icmp ult i64 %272, %270
  %274 = getelementptr inbounds %class.Array.6, %class.Array.6* %1, i64 0, i32 1
  br i1 %273, label %275, label %278

275:                                              ; preds = %268
  %276 = load i64, i64* %274, align 8
  %277 = sub i64 %270, %276
  call void @_ZN5ArrayIwE3AddEm(%class.Array.6* %1, i64 %277) #11
  br label %279

278:                                              ; preds = %268
  store i64 %270, i64* %274, align 8
  br label %279

279:                                              ; preds = %275, %278
  call void @_ZN5ArrayIhE3AddEm(%class.Array* nonnull %10, i64 1) #11
  %280 = getelementptr inbounds %class.Array, %class.Array* %10, i64 0, i32 1
  %281 = load i64, i64* %280, align 8
  %282 = add i64 %281, -1
  %283 = load i8*, i8** %206, align 8
  %284 = getelementptr inbounds i8, i8* %283, i64 %282
  store i8 0, i8* %284, align 1
  %285 = load i8*, i8** %206, align 8
  %286 = getelementptr inbounds %class.Array.6, %class.Array.6* %1, i64 0, i32 0
  %287 = load i32*, i32** %286, align 8
  %288 = load i64, i64* %274, align 8
  %289 = call zeroext i1 @_Z10CharToWidePKcPwm(i8* %285, i32* %287, i64 %288) #11
  %290 = load i32*, i32** %286, align 8
  %291 = call i64 @wcslen(i32* %290) #12
  %292 = load i64, i64* %271, align 8
  %293 = icmp ult i64 %292, %291
  br i1 %293, label %294, label %297

294:                                              ; preds = %279
  %295 = load i64, i64* %274, align 8
  %296 = sub i64 %291, %295
  call void @_ZN5ArrayIwE3AddEm(%class.Array.6* %1, i64 %296) #11
  br label %298

297:                                              ; preds = %279
  store i64 %291, i64* %274, align 8
  br label %298

298:                                              ; preds = %294, %297
  %299 = load i8*, i8** %206, align 8
  %300 = icmp eq i8* %299, null
  br i1 %300, label %311, label %301

301:                                              ; preds = %298
  %302 = getelementptr inbounds %class.Array, %class.Array* %10, i64 0, i32 4
  %303 = load i8, i8* %302, align 8, !range !2
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %309, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %class.Array, %class.Array* %10, i64 0, i32 2
  %307 = load i64, i64* %306, align 8
  call void @_Z9cleandataPvm(i8* nonnull %299, i64 %307) #11
  %308 = load i8*, i8** %206, align 8
  br label %309

309:                                              ; preds = %305, %301
  %310 = phi i8* [ %299, %301 ], [ %308, %305 ]
  call void @free(i8* %310) #11
  br label %311

311:                                              ; preds = %298, %309
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %204) #11
  br label %312

312:                                              ; preds = %311, %198
  %313 = getelementptr inbounds %class.Array.6, %class.Array.6* %1, i64 0, i32 1
  %314 = load i64, i64* %313, align 8
  %315 = icmp ne i64 %314, 0
  br label %316

316:                                              ; preds = %267, %201, %94, %55, %47, %33, %43, %198, %312, %65
  %317 = phi i1 [ %315, %312 ], [ false, %198 ], [ false, %65 ], [ false, %43 ], [ false, %33 ], [ false, %47 ], [ %56, %55 ], [ false, %94 ], [ false, %201 ], [ false, %267 ]
  ret i1 %317
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i8 @_ZN4File7GetByteEv(%class.File*) local_unnamed_addr #2

declare i64 @_ZN7Archive10ReadHeaderEv(%class.Archive*) local_unnamed_addr #2

declare i64 @_ZN7Archive11GetStartPosEv(%class.Archive*) local_unnamed_addr #2

declare i64 @_ZN7Archive14SearchSubBlockEPKw(%class.Archive*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7Archive15ReadCommentDataEP5ArrayIwE(%class.Archive*, %class.Array.6*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.Array, align 8
  %4 = bitcast %class.Array* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 33, i1 false) #11
  %5 = call zeroext i1 @_ZN7Archive11ReadSubDataEP5ArrayIhEP4Fileb(%class.Archive* %0, %class.Array* nonnull %3, %class.File* null, i1 zeroext false) #11
  br i1 %5, label %6, label %59

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.Array, %class.Array* %3, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  call void @_ZN5ArrayIhE3AddEm(%class.Array* nonnull %3, i64 1) #11
  %9 = load i64, i64* %7, align 8
  %10 = add i64 %9, -1
  %11 = getelementptr inbounds %class.Array, %class.Array* %3, i64 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  store i8 0, i8* %13, align 1
  %14 = add i64 %8, 1
  %15 = getelementptr inbounds %class.Array.6, %class.Array.6* %1, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, %14
  %18 = getelementptr inbounds %class.Array.6, %class.Array.6* %1, i64 0, i32 1
  br i1 %17, label %19, label %22

19:                                               ; preds = %6
  %20 = load i64, i64* %18, align 8
  %21 = sub i64 %14, %20
  call void @_ZN5ArrayIwE3AddEm(%class.Array.6* %1, i64 %21) #11
  br label %23

22:                                               ; preds = %6
  store i64 %14, i64* %18, align 8
  br label %23

23:                                               ; preds = %19, %22
  %24 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 3
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = load i8*, i8** %11, align 8
  %29 = getelementptr inbounds %class.Array.6, %class.Array.6* %1, i64 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = load i64, i64* %18, align 8
  %32 = call zeroext i1 @_Z9UtfToWidePKcPwm(i8* %28, i32* %30, i64 %31) #11
  br label %49

33:                                               ; preds = %23
  %34 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 4, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = load i8*, i8** %11, align 8
  %39 = getelementptr inbounds %class.Array.6, %class.Array.6* %1, i64 0, i32 0
  %40 = load i32*, i32** %39, align 8
  br i1 %37, label %46, label %41

41:                                               ; preds = %33
  %42 = lshr i64 %8, 1
  %43 = call i32* @_Z9RawToWidePKhPwm(i8* %38, i32* %40, i64 %42) #11
  %44 = load i32*, i32** %39, align 8
  %45 = getelementptr inbounds i32, i32* %44, i64 %42
  store i32 0, i32* %45, align 4
  br label %49

46:                                               ; preds = %33
  %47 = load i64, i64* %18, align 8
  %48 = call zeroext i1 @_Z10CharToWidePKcPwm(i8* %38, i32* %40, i64 %47) #11
  br label %49

49:                                               ; preds = %41, %46, %27
  %50 = getelementptr inbounds %class.Array.6, %class.Array.6* %1, i64 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = call i64 @wcslen(i32* %51) #12
  %53 = load i64, i64* %15, align 8
  %54 = icmp ult i64 %53, %52
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = load i64, i64* %18, align 8
  %57 = sub i64 %52, %56
  call void @_ZN5ArrayIwE3AddEm(%class.Array.6* %1, i64 %57) #11
  br label %59

58:                                               ; preds = %49
  store i64 %52, i64* %18, align 8
  br label %59

59:                                               ; preds = %58, %55, %2
  %60 = phi i1 [ false, %2 ], [ true, %55 ], [ true, %58 ]
  %61 = getelementptr inbounds %class.Array, %class.Array* %3, i64 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = icmp eq i8* %62, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.Array, %class.Array* %3, i64 0, i32 4
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %class.Array, %class.Array* %3, i64 0, i32 2
  %70 = load i64, i64* %69, align 8
  call void @_Z9cleandataPvm(i8* nonnull %62, i64 %70) #11
  %71 = load i8*, i8** %61, align 8
  br label %72

72:                                               ; preds = %68, %64
  %73 = phi i8* [ %62, %64 ], [ %71, %68 ]
  call void @free(i8* %73) #11
  br label %74

74:                                               ; preds = %59, %72
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #11
  ret i1 %60
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN11ComprDataIOC1Ev(%class.ComprDataIO*) unnamed_addr #2

declare void @_ZN11ComprDataIO18SetCmt13EncryptionEv(%class.ComprDataIO*) local_unnamed_addr #2

declare void @_ZN11ComprDataIO8SetFilesEP4FileS1_(%class.ComprDataIO*, %class.File*, %class.File*) local_unnamed_addr #2

declare void @_ZN8DataHash4InitE9HASH_TYPEj(%class.DataHash*, i32, i32) local_unnamed_addr #2

declare void @_ZN6UnpackC1EP11ComprDataIO(%class.Unpack*, %class.ComprDataIO*) unnamed_addr #2

declare void @_ZN6Unpack4InitEmb(%class.Unpack*, i64, i1 zeroext) local_unnamed_addr #2

declare void @_ZN6Unpack8DoUnpackEjb(%class.Unpack*, i32, i1 zeroext) local_unnamed_addr #2

declare i32 @_ZN8DataHash8GetCRC32Ev(%class.DataHash*) local_unnamed_addr #2

declare void @_ZN11ComprDataIO15GetUnpackedDataEPPhPm(%class.ComprDataIO*, i8**, i64*) local_unnamed_addr #2

declare zeroext i1 @_Z10CharToWidePKcPwm(i8*, i32*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @wcslen(i32* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6UnpackD1Ev(%class.Unpack*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN11ComprDataIOD1Ev(%class.ComprDataIO*) unnamed_addr #4

declare i32 @_Z5CRC32jPKvm(i32, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN7Archive11ReadSubDataEP5ArrayIhEP4Fileb(%class.Archive*, %class.Array*, %class.File*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_Z9UtfToWidePKcPwm(i8*, i32*, i64) local_unnamed_addr #2

declare i32* @_Z9RawToWidePKhPwm(i8*, i32*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7Archive11ViewCommentEv(%class.Archive*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.Array.6, align 8
  %3 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 5
  %4 = load %class.RAROptions*, %class.RAROptions** %3, align 8
  %5 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %4, i64 0, i32 41
  %6 = load i8, i8* %5, align 2, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %54

8:                                                ; preds = %1
  %9 = bitcast %class.Array.6* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 33, i1 false) #11
  %10 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 36
  %11 = load i8, i8* %10, align 2, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %36, label %13

13:                                               ; preds = %8
  %14 = bitcast %class.Archive* %0 to i64 (%class.Archive*)***
  %15 = load i64 (%class.Archive*)**, i64 (%class.Archive*)*** %14, align 8
  %16 = getelementptr inbounds i64 (%class.Archive*)*, i64 (%class.Archive*)** %15, i64 6
  %17 = load i64 (%class.Archive*)*, i64 (%class.Archive*)** %16, align 8
  %18 = tail call i64 %17(%class.Archive* %0) #11
  %19 = call zeroext i1 @_ZN7Archive12DoGetCommentEP5ArrayIwE(%class.Archive* %0, %class.Array.6* nonnull %2) #11
  %20 = bitcast %class.Archive* %0 to void (%class.Archive*, i64, i32)***
  %21 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %21, i64 5
  %23 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %22, align 8
  call void %23(%class.Archive* %0, i64 %18, i32 0) #11
  br i1 %19, label %24, label %36

24:                                               ; preds = %13
  %25 = getelementptr inbounds %class.Array.6, %class.Array.6* %2, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %class.Array.6, %class.Array.6* %2, i64 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = call i32* @wcschr(i32* %28, i32 signext 26) #12
  %30 = icmp eq i32* %29, null
  %31 = ptrtoint i32* %29 to i64
  %32 = ptrtoint i32* %28 to i64
  %33 = sub i64 %31, %32
  %34 = ashr exact i64 %33, 2
  %35 = select i1 %30, i64 %26, i64 %34
  call void @_Z10OutCommentPKwm(i32* %28, i64 %35) #11
  br label %36

36:                                               ; preds = %8, %24, %13
  %37 = getelementptr inbounds %class.Array.6, %class.Array.6* %2, i64 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = icmp eq i32* %38, null
  %40 = bitcast i32* %38 to i8*
  br i1 %39, label %53, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %class.Array.6, %class.Array.6* %2, i64 0, i32 4
  %43 = load i8, i8* %42, align 8, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.Array.6, %class.Array.6* %2, i64 0, i32 2
  %47 = load i64, i64* %46, align 8
  %48 = shl i64 %47, 2
  call void @_Z9cleandataPvm(i8* nonnull %40, i64 %48) #11
  %49 = bitcast %class.Array.6* %2 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %45, %41
  %52 = phi i8* [ %50, %45 ], [ %40, %41 ]
  call void @free(i8* %52) #11
  br label %53

53:                                               ; preds = %36, %51
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %9) #11
  br label %54

54:                                               ; preds = %1, %53
  ret void
}

; Function Attrs: nounwind readonly
declare i32* @wcschr(i32*, i32 signext) local_unnamed_addr #5

declare void @_Z10OutCommentPKwm(i32*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7ArchiveC2EP10RAROptions(%class.Archive*, %class.RAROptions*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  tail call void @_ZN4FileC2Ev(%class.File* %3) #11
  %4 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV7Archive, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 1
  tail call void @_ZN9CryptDataC1Ev(%class.CryptData* %5) #11
  %6 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 2
  tail call void @_ZN11ComprDataIOC1Ev(%class.ComprDataIO* %6) #11
  %7 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 6, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 11
  tail call void @_ZN9QuickOpenC1Ev(%class.QuickOpen* %8) #11
  %9 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 6
  %10 = bitcast %class.Array* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 33, i1 false) #11
  %11 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 7, i32 0
  %12 = bitcast i64* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 6
  %14 = bitcast %class.Array* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 33, i1 false) #11
  %15 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 7, i32 0
  %16 = bitcast i64* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #11
  %17 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 5
  store %class.RAROptions* null, %class.RAROptions** %17, align 8
  %18 = icmp eq %class.RAROptions* %1, null
  %19 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 3
  %20 = zext i1 %18 to i8
  store i8 %20, i8* %19, align 8
  br i1 %18, label %21, label %24

21:                                               ; preds = %2
  %22 = tail call i8* @_Znwm(i64 67592) #13
  %23 = bitcast i8* %22 to %class.RAROptions*
  tail call void @_ZN10RAROptionsC1Ev(%class.RAROptions* nonnull %23) #11
  br label %24

24:                                               ; preds = %2, %21
  %25 = phi %class.RAROptions* [ %23, %21 ], [ %1, %2 ]
  store %class.RAROptions* %25, %class.RAROptions** %17, align 8
  %26 = getelementptr inbounds %class.RAROptions, %class.RAROptions* %25, i64 0, i32 64
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 11
  store i8 %27, i8* %28, align 1
  %29 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  store i32 2, i32* %29, align 8
  %30 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 34
  %31 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 44
  store i64 0, i64* %31, align 8
  store i64 0, i64* %7, align 8
  %32 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 46
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  store i8 0, i8* %33, align 8
  %34 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 7
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 31
  %36 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17
  %37 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 21
  %38 = bitcast %struct.EndArcHeader* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 32, i1 false)
  %39 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 50
  %40 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 56, i64 0
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 48
  store i8 0, i8* %41, align 2
  %42 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 9
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 12
  store i8 0, i8* %43, align 8
  %44 = bitcast %struct.MainHeader* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 116, i1 false)
  %45 = bitcast i64* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 9, i1 false)
  %46 = bitcast i32* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 29, i1 false)
  ret void
}

declare void @_ZN4FileC2Ev(%class.File*) unnamed_addr #2

declare void @_ZN9CryptDataC1Ev(%class.CryptData*) unnamed_addr #2

declare void @_ZN9QuickOpenC1Ev(%class.QuickOpen*) unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN10RAROptionsC1Ev(%class.RAROptions*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7ArchiveD2Ev(%class.Archive*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV7Archive, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 5
  %8 = load %class.RAROptions*, %class.RAROptions** %7, align 8
  %9 = icmp eq %class.RAROptions* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  tail call void @_ZN10RAROptionsD1Ev(%class.RAROptions* nonnull %8) #11
  %11 = bitcast %class.RAROptions* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #13
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 6, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 6, i32 4
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 6, i32 2
  %22 = load i64, i64* %21, align 8
  tail call void @_Z9cleandataPvm(i8* nonnull %14, i64 %22) #11
  %23 = load i8*, i8** %13, align 8
  br label %24

24:                                               ; preds = %20, %16
  %25 = phi i8* [ %14, %16 ], [ %23, %20 ]
  tail call void @free(i8* %25) #11
  br label %26

26:                                               ; preds = %12, %24
  %27 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 6, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 6, i32 4
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 6, i32 2
  %36 = load i64, i64* %35, align 8
  tail call void @_Z9cleandataPvm(i8* nonnull %28, i64 %36) #11
  %37 = load i8*, i8** %27, align 8
  br label %38

38:                                               ; preds = %34, %30
  %39 = phi i8* [ %28, %30 ], [ %37, %34 ]
  tail call void @free(i8* %39) #11
  br label %40

40:                                               ; preds = %26, %38
  %41 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 11
  tail call void @_ZN9QuickOpenD1Ev(%class.QuickOpen* %41) #11
  %42 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 2
  tail call void @_ZN11ComprDataIOD1Ev(%class.ComprDataIO* %42) #11
  %43 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 1
  tail call void @_ZN9CryptDataD1Ev(%class.CryptData* %43) #11
  %44 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  tail call void @_ZN4FileD2Ev(%class.File* %44) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10RAROptionsD1Ev(%class.RAROptions*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9QuickOpenD1Ev(%class.QuickOpen*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9CryptDataD1Ev(%class.CryptData*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4FileD2Ev(%class.File*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7ArchiveD0Ev(%class.Archive*) unnamed_addr #0 align 2 {
  tail call void @_ZN7ArchiveD2Ev(%class.Archive* %0) #11
  %2 = bitcast %class.Archive* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7Archive8CheckArcEb(%class.Archive*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.uiMsgStore, align 8
  %4 = tail call zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive* %0, i1 zeroext %1)
  br i1 %4, label %25, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 46
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %24

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %11 = bitcast %class.uiMsgStore* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 112, i1 false) #11
  %12 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 0
  %13 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 1
  %14 = bitcast i32** %13 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %14, align 8
  %15 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 3
  %16 = bitcast i32** %15 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %16, align 8
  %17 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 5
  %18 = bitcast i32** %17 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %18, align 8
  %19 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32** %19, align 8
  %20 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 1, i64 0
  %21 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 4
  %22 = bitcast i32* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 40, i1 false) #11
  store i32 57, i32* %21, align 8
  %23 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 2
  store i32 1, i32* %23, align 8
  store i32* %10, i32** %12, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #11
  br label %24

24:                                               ; preds = %5, %9
  call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 2) #11
  br label %25

25:                                               ; preds = %24, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.uiMsgStore, align 8
  %4 = alloca %class.uiMsgStore, align 8
  %5 = alloca %class.uiMsgStore, align 8
  %6 = alloca %class.Array.16, align 8
  %7 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 42
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 45
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZN4File8IsDeviceEv(%class.File* %9) #11
  br i1 %10, label %11, label %26

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %13 = bitcast %class.uiMsgStore* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %13) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 112, i1 false) #11
  %14 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 0
  %15 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 1
  %16 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 2
  %17 = bitcast i32** %16 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %17, align 8
  %18 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 4
  %19 = bitcast i32** %18 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %19, align 8
  %20 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 0, i64 6
  %21 = bitcast i32** %20 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %21, align 8
  %22 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 1, i64 0
  %23 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 4
  %24 = bitcast i32* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 40, i1 false) #11
  store i32 59, i32* %23, align 8
  %25 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %5, i64 0, i32 2
  store i32* %12, i32** %14, align 8
  store i32 2, i32* %25, align 8
  store i32* %12, i32** %15, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #11
  br label %361

26:                                               ; preds = %2
  %27 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 16, i32 0, i64 0
  %28 = bitcast %class.Archive* %0 to i32 (%class.Archive*, i8*, i64)***
  %29 = load i32 (%class.Archive*, i8*, i64)**, i32 (%class.Archive*, i8*, i64)*** %28, align 8
  %30 = getelementptr inbounds i32 (%class.Archive*, i8*, i64)*, i32 (%class.Archive*, i8*, i64)** %29, i64 4
  %31 = load i32 (%class.Archive*, i8*, i64)*, i32 (%class.Archive*, i8*, i64)** %30, align 8
  %32 = tail call i32 %31(%class.Archive* %0, i8* %27, i64 7) #11
  %33 = icmp eq i32 %32, 7
  br i1 %33, label %34, label %361

34:                                               ; preds = %26
  %35 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 44
  store i64 0, i64* %35, align 8
  %36 = load i8, i8* %27, align 1
  %37 = icmp eq i8 %36, 82
  br i1 %37, label %38, label %86

38:                                               ; preds = %34
  %39 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 16, i32 0, i64 1
  %40 = load i8, i8* %39, align 1
  switch i8 %40, label %86 [
    i8 69, label %41
    i8 97, label %49
  ]

41:                                               ; preds = %38
  %42 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 16, i32 0, i64 2
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 126
  br i1 %44, label %45, label %86

45:                                               ; preds = %41
  %46 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 16, i32 0, i64 3
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 94
  br i1 %48, label %74, label %86

49:                                               ; preds = %38
  %50 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 16, i32 0, i64 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 114
  br i1 %52, label %53, label %86

53:                                               ; preds = %49
  %54 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 16, i32 0, i64 3
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 33
  br i1 %56, label %57, label %86

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 16, i32 0, i64 4
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 26
  br i1 %60, label %61, label %86

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 16, i32 0, i64 5
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 7
  br i1 %64, label %65, label %86

65:                                               ; preds = %61
  %66 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 16, i32 0, i64 6
  %67 = load i8, i8* %66, align 1
  switch i8 %67, label %69 [
    i8 0, label %71
    i8 1, label %68
  ]

68:                                               ; preds = %65
  br label %71

69:                                               ; preds = %65
  %70 = icmp ult i8 %67, 5
  br i1 %70, label %71, label %86

71:                                               ; preds = %68, %65, %69
  %72 = phi i32 [ 2, %65 ], [ 3, %68 ], [ 4, %69 ]
  %73 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  store i32 %72, i32* %73, align 8
  br label %214

74:                                               ; preds = %45
  %75 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  store i32 1, i32* %75, align 8
  %76 = bitcast %class.Archive* %0 to i64 (%class.Archive*)***
  %77 = load i64 (%class.Archive*)**, i64 (%class.Archive*)*** %76, align 8
  %78 = getelementptr inbounds i64 (%class.Archive*)*, i64 (%class.Archive*)** %77, i64 6
  %79 = load i64 (%class.Archive*)*, i64 (%class.Archive*)** %78, align 8
  %80 = tail call i64 %79(%class.Archive* %0) #11
  %81 = add nsw i64 %80, -7
  %82 = bitcast %class.Archive* %0 to void (%class.Archive*, i64, i32)***
  %83 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %82, align 8
  %84 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %83, i64 5
  %85 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %84, align 8
  tail call void %85(%class.Archive* %0, i64 %81, i32 0) #11
  br label %214

86:                                               ; preds = %38, %41, %45, %69, %61, %57, %53, %49, %34
  %87 = bitcast %class.Array.16* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %87) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 33, i1 false) #11
  call void @_ZN5ArrayIcE3AddEm(%class.Array.16* nonnull %6, i64 2097152) #11
  %88 = bitcast %class.Archive* %0 to i64 (%class.Archive*)***
  %89 = load i64 (%class.Archive*)**, i64 (%class.Archive*)*** %88, align 8
  %90 = getelementptr inbounds i64 (%class.Archive*)*, i64 (%class.Archive*)** %89, i64 6
  %91 = load i64 (%class.Archive*)*, i64 (%class.Archive*)** %90, align 8
  %92 = call i64 %91(%class.Archive* %0) #11
  %93 = getelementptr inbounds %class.Array.16, %class.Array.16* %6, i64 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = getelementptr inbounds %class.Array.16, %class.Array.16* %6, i64 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %96, -16
  %98 = load i32 (%class.Archive*, i8*, i64)**, i32 (%class.Archive*, i8*, i64)*** %28, align 8
  %99 = getelementptr inbounds i32 (%class.Archive*, i8*, i64)*, i32 (%class.Archive*, i8*, i64)** %98, i64 4
  %100 = load i32 (%class.Archive*, i8*, i64)*, i32 (%class.Archive*, i8*, i64)** %99, align 8
  %101 = call i32 %100(%class.Archive* %0, i8* %94, i64 %97) #11
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %103, label %198

103:                                              ; preds = %86
  %104 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  %105 = icmp slt i64 %92, 28
  %106 = icmp sgt i32 %101, 31
  %107 = sub nsw i64 28, %92
  %108 = zext i32 %101 to i64
  %109 = load i8*, i8** %93, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 %107
  %111 = getelementptr inbounds i8, i8* %110, i64 1
  %112 = getelementptr inbounds i8, i8* %110, i64 2
  %113 = getelementptr inbounds i8, i8* %110, i64 3
  br label %114

114:                                              ; preds = %195, %103
  %115 = phi i64 [ 0, %103 ], [ %196, %195 ]
  %116 = getelementptr inbounds i8, i8* %109, i64 %115
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 82
  br i1 %118, label %119, label %195

119:                                              ; preds = %114
  %120 = trunc i64 %115 to i32
  %121 = sub nsw i32 %101, %120
  %122 = icmp ult i32 %121, 4
  br i1 %122, label %195, label %123

123:                                              ; preds = %119
  %124 = getelementptr inbounds i8, i8* %116, i64 1
  %125 = load i8, i8* %124, align 1
  %126 = icmp eq i8 %125, 69
  br i1 %126, label %127, label %135

127:                                              ; preds = %123
  %128 = getelementptr inbounds i8, i8* %116, i64 2
  %129 = load i8, i8* %128, align 1
  %130 = icmp eq i8 %129, 126
  br i1 %130, label %131, label %195

131:                                              ; preds = %127
  %132 = getelementptr inbounds i8, i8* %116, i64 3
  %133 = load i8, i8* %132, align 1
  %134 = icmp eq i8 %133, 94
  br i1 %134, label %164, label %195

135:                                              ; preds = %123
  %136 = icmp ugt i32 %121, 6
  %137 = icmp eq i8 %125, 97
  %138 = and i1 %136, %137
  br i1 %138, label %139, label %195

139:                                              ; preds = %135
  %140 = getelementptr inbounds i8, i8* %116, i64 2
  %141 = load i8, i8* %140, align 1
  %142 = icmp eq i8 %141, 114
  br i1 %142, label %143, label %195

143:                                              ; preds = %139
  %144 = getelementptr inbounds i8, i8* %116, i64 3
  %145 = load i8, i8* %144, align 1
  %146 = icmp eq i8 %145, 33
  br i1 %146, label %147, label %195

147:                                              ; preds = %143
  %148 = getelementptr inbounds i8, i8* %116, i64 4
  %149 = load i8, i8* %148, align 1
  %150 = icmp eq i8 %149, 26
  br i1 %150, label %151, label %195

151:                                              ; preds = %147
  %152 = getelementptr inbounds i8, i8* %116, i64 5
  %153 = load i8, i8* %152, align 1
  %154 = icmp eq i8 %153, 7
  br i1 %154, label %155, label %195

155:                                              ; preds = %151
  %156 = getelementptr inbounds i8, i8* %116, i64 6
  %157 = load i8, i8* %156, align 1
  switch i8 %157, label %158 [
    i8 0, label %160
    i8 1, label %162
  ]

158:                                              ; preds = %155
  %159 = icmp ult i8 %157, 5
  br i1 %159, label %160, label %195

160:                                              ; preds = %158, %155
  %161 = phi i32 [ 4, %158 ], [ 2, %155 ]
  br label %162

162:                                              ; preds = %155, %160
  %163 = phi i32 [ %161, %160 ], [ 3, %155 ]
  store i32 %163, i32* %104, align 8
  br label %180

164:                                              ; preds = %131
  store i32 1, i32* %104, align 8
  %165 = icmp ne i64 %115, 0
  %166 = and i1 %105, %165
  %167 = and i1 %106, %166
  br i1 %167, label %168, label %180

168:                                              ; preds = %164
  %169 = load i8, i8* %110, align 1
  %170 = icmp eq i8 %169, 82
  br i1 %170, label %171, label %195

171:                                              ; preds = %168
  %172 = load i8, i8* %111, align 1
  %173 = icmp eq i8 %172, 83
  br i1 %173, label %174, label %195

174:                                              ; preds = %171
  %175 = load i8, i8* %112, align 1
  %176 = icmp eq i8 %175, 70
  br i1 %176, label %177, label %195

177:                                              ; preds = %174
  %178 = load i8, i8* %113, align 1
  %179 = icmp eq i8 %178, 88
  br i1 %179, label %180, label %195

180:                                              ; preds = %177, %164, %162
  %181 = and i64 %115, 4294967295
  %182 = add nsw i64 %92, %181
  store i64 %182, i64* %35, align 8
  %183 = bitcast %class.Archive* %0 to void (%class.Archive*, i64, i32)***
  %184 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %183, align 8
  %185 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %184, i64 5
  %186 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %185, align 8
  call void %186(%class.Archive* %0, i64 %182, i32 0) #11
  %187 = load i32, i32* %104, align 8
  %188 = and i32 %187, -2
  %189 = icmp eq i32 %188, 2
  br i1 %189, label %190, label %198

190:                                              ; preds = %180
  %191 = load i32 (%class.Archive*, i8*, i64)**, i32 (%class.Archive*, i8*, i64)*** %28, align 8
  %192 = getelementptr inbounds i32 (%class.Archive*, i8*, i64)*, i32 (%class.Archive*, i8*, i64)** %191, i64 4
  %193 = load i32 (%class.Archive*, i8*, i64)*, i32 (%class.Archive*, i8*, i64)** %192, align 8
  %194 = call i32 %193(%class.Archive* %0, i8* %27, i64 7) #11
  br label %198

195:                                              ; preds = %119, %127, %131, %135, %139, %143, %147, %151, %158, %177, %174, %171, %168, %114
  %196 = add nuw nsw i64 %115, 1
  %197 = icmp eq i64 %196, %108
  br i1 %197, label %198, label %114

198:                                              ; preds = %195, %86, %180, %190
  %199 = load i64, i64* %35, align 8
  %200 = icmp eq i64 %199, 0
  %201 = load i8*, i8** %93, align 8
  %202 = icmp eq i8* %201, null
  br i1 %202, label %213, label %203

203:                                              ; preds = %198
  %204 = getelementptr inbounds %class.Array.16, %class.Array.16* %6, i64 0, i32 4
  %205 = load i8, i8* %204, align 8, !range !2
  %206 = icmp eq i8 %205, 0
  br i1 %206, label %211, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds %class.Array.16, %class.Array.16* %6, i64 0, i32 2
  %209 = load i64, i64* %208, align 8
  call void @_Z9cleandataPvm(i8* nonnull %201, i64 %209) #11
  %210 = load i8*, i8** %93, align 8
  br label %211

211:                                              ; preds = %207, %203
  %212 = phi i8* [ %201, %203 ], [ %210, %207 ]
  call void @free(i8* %212) #11
  br label %213

213:                                              ; preds = %198, %211
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %87) #11
  br i1 %200, label %361, label %214

214:                                              ; preds = %213, %71, %74
  %215 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  %216 = load i32, i32* %215, align 8
  switch i32 %216, label %242 [
    i32 4, label %217
    i32 3, label %232
  ]

217:                                              ; preds = %214
  %218 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %219 = bitcast %class.uiMsgStore* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %219) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %219, i8 -86, i64 112, i1 false) #11
  %220 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 0
  %221 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 1
  %222 = bitcast i32** %221 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %222, align 8
  %223 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 3
  %224 = bitcast i32** %223 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %224, align 8
  %225 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 5
  %226 = bitcast i32** %225 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %226, align 8
  %227 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32** %227, align 8
  %228 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 1, i64 0
  %229 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 4
  %230 = bitcast i32* %228 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %230, i8 0, i64 40, i1 false) #11
  store i32 60, i32* %229, align 8
  %231 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 2
  store i32 1, i32* %231, align 8
  store i32* %218, i32** %220, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %219) #11
  br label %361

232:                                              ; preds = %214
  %233 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 16, i32 0, i64 7
  %234 = load i32 (%class.Archive*, i8*, i64)**, i32 (%class.Archive*, i8*, i64)*** %28, align 8
  %235 = getelementptr inbounds i32 (%class.Archive*, i8*, i64)*, i32 (%class.Archive*, i8*, i64)** %234, i64 4
  %236 = load i32 (%class.Archive*, i8*, i64)*, i32 (%class.Archive*, i8*, i64)** %235, align 8
  %237 = call i32 %236(%class.Archive* %0, i8* %233, i64 1) #11
  %238 = icmp eq i32 %237, 1
  br i1 %238, label %239, label %361

239:                                              ; preds = %232
  %240 = load i8, i8* %233, align 1
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %242, label %361

242:                                              ; preds = %214, %239
  %243 = phi i32 [ 8, %239 ], [ 7, %214 ]
  %244 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 16, i32 1
  store i32 %243, i32* %244, align 4
  %245 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 32
  %246 = bitcast %class.Archive* %0 to void (%class.Archive*, i64, i32)***
  %247 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 8
  %248 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 9
  br label %249

249:                                              ; preds = %259, %242
  %250 = call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* %0) #11
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %264, label %252

252:                                              ; preds = %249
  %253 = load i64, i64* %245, align 8
  %254 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %246, align 8
  %255 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %254, i64 5
  %256 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %255, align 8
  call void %256(%class.Archive* %0, i64 %253, i32 0) #11
  %257 = load i32, i32* %247, align 4
  %258 = icmp eq i32 %257, 1
  br i1 %258, label %264, label %259

259:                                              ; preds = %252
  %260 = load i8, i8* %248, align 8, !range !2
  %261 = icmp ne i8 %260, 0
  %262 = icmp eq i32 %257, 4
  %263 = and i1 %262, %261
  br i1 %263, label %264, label %249

264:                                              ; preds = %249, %252, %259
  %265 = phi i1 [ true, %252 ], [ true, %259 ], [ false, %249 ]
  %266 = phi i1 [ false, %252 ], [ false, %259 ], [ true, %249 ]
  %267 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 46
  %268 = load i8, i8* %267, align 1, !range !2
  %269 = icmp eq i8 %268, 0
  %270 = or i1 %269, %1
  br i1 %270, label %271, label %361

271:                                              ; preds = %264
  %272 = load i8, i8* %8, align 8, !range !2
  %273 = icmp ne i8 %272, 0
  %274 = or i1 %266, %273
  br i1 %274, label %275, label %292

275:                                              ; preds = %271
  br i1 %269, label %276, label %291

276:                                              ; preds = %275
  %277 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %278 = bitcast %class.uiMsgStore* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %278) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %278, i8 -86, i64 112, i1 false) #11
  %279 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 0
  %280 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 1
  %281 = bitcast i32** %280 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %281, align 8
  %282 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 3
  %283 = bitcast i32** %282 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %283, align 8
  %284 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 5
  %285 = bitcast i32** %284 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %285, align 8
  %286 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32** %286, align 8
  %287 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 1, i64 0
  %288 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 4
  %289 = bitcast i32* %287 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %289, i8 0, i64 40, i1 false) #11
  store i32 27, i32* %288, align 8
  %290 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %4, i64 0, i32 2
  store i32 1, i32* %290, align 8
  store i32* %277, i32** %279, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %278) #11
  br label %291

291:                                              ; preds = %275, %276
  br i1 %1, label %292, label %361

292:                                              ; preds = %271, %291
  %293 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 17, i32 3
  %294 = load i8, i8* %293, align 4, !range !2
  %295 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 36
  store i8 %294, i8* %295, align 2
  br i1 %265, label %296, label %350

296:                                              ; preds = %292
  %297 = load i8, i8* %248, align 8, !range !2
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %302, label %299

299:                                              ; preds = %296
  %300 = load i8, i8* %7, align 4, !range !2
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %302, label %350

302:                                              ; preds = %299, %296
  %303 = bitcast %class.Archive* %0 to i64 (%class.Archive*)***
  %304 = load i64 (%class.Archive*)**, i64 (%class.Archive*)*** %303, align 8
  %305 = getelementptr inbounds i64 (%class.Archive*)*, i64 (%class.Archive*)** %304, i64 6
  %306 = load i64 (%class.Archive*)*, i64 (%class.Archive*)** %305, align 8
  %307 = call i64 %306(%class.Archive* %0) #11
  %308 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 31
  %309 = bitcast i64* %308 to <2 x i64>*
  %310 = load <2 x i64>, <2 x i64>* %309, align 8
  %311 = load i32, i32* %247, align 4
  %312 = call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* %0) #11
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %345, label %314

314:                                              ; preds = %302
  %315 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 35
  %316 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 24, i32 15
  %317 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 39
  br label %318

318:                                              ; preds = %314, %338
  %319 = load i32, i32* %247, align 4
  switch i32 %319, label %338 [
    i32 3, label %320
    i32 2, label %329
    i32 5, label %345
  ]

320:                                              ; preds = %318
  %321 = load i8, i8* %315, align 1, !range !2
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %326, label %323

323:                                              ; preds = %320
  %324 = load i8, i8* %316, align 8, !range !2
  %325 = xor i8 %324, 1
  br label %326

326:                                              ; preds = %320, %323
  %327 = phi i8 [ 0, %320 ], [ %325, %323 ]
  %328 = and i8 %327, 1
  store i8 %328, i8* %317, align 1
  br label %338

329:                                              ; preds = %318
  %330 = load i8, i8* %315, align 1, !range !2
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %336, label %332

332:                                              ; preds = %329
  %333 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 20, i32 15
  %334 = load i8, i8* %333, align 8, !range !2
  %335 = xor i8 %334, 1
  br label %336

336:                                              ; preds = %329, %332
  %337 = phi i8 [ 0, %329 ], [ %335, %332 ]
  store i8 %337, i8* %317, align 1
  br label %345

338:                                              ; preds = %318, %326
  %339 = load i64, i64* %245, align 8
  %340 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %246, align 8
  %341 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %340, i64 5
  %342 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %341, align 8
  call void %342(%class.Archive* %0, i64 %339, i32 0) #11
  %343 = call i64 @_ZN7Archive10ReadHeaderEv(%class.Archive* %0) #11
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %318

345:                                              ; preds = %338, %318, %302, %336
  %346 = bitcast i64* %308 to <2 x i64>*
  store <2 x i64> %310, <2 x i64>* %346, align 8
  store i32 %311, i32* %247, align 4
  %347 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %246, align 8
  %348 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %347, i64 5
  %349 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %348, align 8
  call void %349(%class.Archive* %0, i64 %307, i32 0) #11
  br label %350

350:                                              ; preds = %299, %345, %292
  %351 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 35
  %352 = load i8, i8* %351, align 1, !range !2
  %353 = icmp eq i8 %352, 0
  br i1 %353, label %358, label %354

354:                                              ; preds = %350
  %355 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 39
  %356 = load i8, i8* %355, align 1, !range !2
  %357 = icmp eq i8 %356, 0
  br i1 %357, label %361, label %358

358:                                              ; preds = %354, %350
  %359 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 56, i64 0
  %360 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* %359, i32* %360, i64 2048) #11
  br label %361

361:                                              ; preds = %213, %217, %239, %232, %358, %354, %291, %264, %26, %11
  %362 = phi i1 [ false, %11 ], [ false, %26 ], [ false, %217 ], [ false, %213 ], [ false, %239 ], [ false, %232 ], [ false, %264 ], [ false, %291 ], [ true, %354 ], [ true, %358 ]
  ret i1 %362
}

declare void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7Archive9CheckOpenEPKw(%class.Archive*, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.uiMsgStore, align 8
  %4 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  tail call void @_ZN4File5TOpenEPKw(%class.File* %4, i32* %1) #11
  %5 = tail call zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive* %0, i1 zeroext false) #11
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 46
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %12 = bitcast %class.uiMsgStore* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 112, i1 false) #11
  %13 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 0
  %14 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 1
  %15 = bitcast i32** %14 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %15, align 8
  %16 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 3
  %17 = bitcast i32** %16 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %17, align 8
  %18 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 5
  %19 = bitcast i32** %18 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %19, align 8
  %20 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32** %20, align 8
  %21 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 1, i64 0
  %22 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 4
  %23 = bitcast i32* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 40, i1 false) #11
  store i32 57, i32* %22, align 8
  %24 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 2
  store i32 1, i32* %24, align 8
  store i32* %11, i32** %13, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %12) #11
  br label %25

25:                                               ; preds = %10, %6
  call void @_ZN12ErrorHandler4ExitE8RAR_EXIT(%class.ErrorHandler* nonnull @ErrHandler, i32 2) #11
  br label %26

26:                                               ; preds = %2, %25
  ret void
}

declare void @_ZN4File5TOpenEPKw(%class.File*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7Archive10WCheckOpenEPKw(%class.Archive*, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.uiMsgStore, align 8
  %4 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZN4File5WOpenEPKw(%class.File* %4, i32* %1) #11
  br i1 %5, label %6, label %28

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive* %0, i1 zeroext false)
  br i1 %7, label %28, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0, i32 12, i64 0
  %10 = bitcast %class.uiMsgStore* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 112, i1 false) #11
  %11 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 0
  %12 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 1
  %13 = bitcast i32** %12 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %13, align 8
  %14 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 3
  %15 = bitcast i32** %14 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %15, align 8
  %16 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 5
  %17 = bitcast i32** %16 to <2 x i32*>*
  store <2 x i32*> <i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0)>, <2 x i32*>* %17, align 8
  %18 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 0, i64 7
  store i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.2, i64 0, i64 0), i32** %18, align 8
  %19 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 1, i64 0
  %20 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 4
  %21 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 40, i1 false) #11
  store i32 57, i32* %20, align 8
  %22 = getelementptr inbounds %class.uiMsgStore, %class.uiMsgStore* %3, i64 0, i32 2
  store i32 1, i32* %22, align 8
  store i32* %9, i32** %11, align 8
  call void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #11
  %23 = bitcast %class.Archive* %0 to i1 (%class.File*)***
  %24 = load i1 (%class.File*)**, i1 (%class.File*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%class.File*)*, i1 (%class.File*)** %24, i64 3
  %26 = load i1 (%class.File*)*, i1 (%class.File*)** %25, align 8
  %27 = call zeroext i1 %26(%class.File* %4) #11
  br label %28

28:                                               ; preds = %6, %2, %8
  %29 = phi i1 [ false, %8 ], [ false, %2 ], [ true, %6 ]
  ret i1 %29
}

declare zeroext i1 @_ZN4File5WOpenEPKw(%class.File*, i32*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN7Archive11IsSignatureEPKhm(i8* nocapture readonly, i64) local_unnamed_addr #8 align 2 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %48, label %4

4:                                                ; preds = %2
  %5 = load i8, i8* %0, align 1
  %6 = icmp eq i8 %5, 82
  %7 = icmp ugt i64 %1, 3
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %48

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %0, i64 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 69
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i64 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 126
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds i8, i8* %0, i64 3
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 94
  br i1 %20, label %48, label %21

21:                                               ; preds = %17, %13, %9
  %22 = icmp ugt i64 %1, 6
  %23 = icmp eq i8 %11, 97
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %48

25:                                               ; preds = %21
  %26 = getelementptr inbounds i8, i8* %0, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 114
  br i1 %28, label %29, label %48

29:                                               ; preds = %25
  %30 = getelementptr inbounds i8, i8* %0, i64 3
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 33
  br i1 %32, label %33, label %48

33:                                               ; preds = %29
  %34 = getelementptr inbounds i8, i8* %0, i64 4
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 26
  br i1 %36, label %37, label %48

37:                                               ; preds = %33
  %38 = getelementptr inbounds i8, i8* %0, i64 5
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 7
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = getelementptr inbounds i8, i8* %0, i64 6
  %43 = load i8, i8* %42, align 1
  switch i8 %43, label %45 [
    i8 0, label %48
    i8 1, label %44
  ]

44:                                               ; preds = %41
  br label %48

45:                                               ; preds = %41
  %46 = icmp ult i8 %43, 5
  %47 = select i1 %46, i32 4, i32 0
  ret i32 %47

48:                                               ; preds = %41, %17, %2, %44, %37, %33, %29, %25, %21, %4
  %49 = phi i32 [ 3, %44 ], [ 0, %37 ], [ 0, %33 ], [ 0, %29 ], [ 0, %25 ], [ 0, %21 ], [ 0, %4 ], [ 0, %2 ], [ 1, %17 ], [ 2, %41 ]
  ret i32 %49
}

declare zeroext i1 @_ZN4File8IsDeviceEv(%class.File*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7Archive10SeekToNextEv(%class.Archive*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 32
  %3 = load i64, i64* %2, align 8
  %4 = bitcast %class.Archive* %0 to void (%class.Archive*, i64, i32)***
  %5 = load void (%class.Archive*, i64, i32)**, void (%class.Archive*, i64, i32)*** %4, align 8
  %6 = getelementptr inbounds void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %5, i64 5
  %7 = load void (%class.Archive*, i64, i32)*, void (%class.Archive*, i64, i32)** %6, align 8
  tail call void %7(%class.Archive* %0, i64 %3, i32 0) #11
  ret void
}

declare void @_Z8wcsncpyzPwPKwm(i32*, i32*, i64) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN7Archive14FullHeaderSizeEm(%class.Archive* nocapture readonly, i64) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 42
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = sub i64 0, %1
  %8 = and i64 %7, 15
  %9 = add i64 %8, %1
  %10 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 33
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %13, label %15

13:                                               ; preds = %6
  %14 = add i64 %9, 16
  br label %17

15:                                               ; preds = %6
  %16 = add i64 %9, 8
  br label %17

17:                                               ; preds = %2, %13, %15
  %18 = phi i64 [ %14, %13 ], [ %16, %15 ], [ %1, %2 ]
  %19 = trunc i64 %18 to i32
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7Archive4OpenEPKwj(%class.Archive*, i32*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 11, i32 8
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZN4File4OpenEPKwj(%class.File* %5, i32* %1, i32 %2) #11
  ret i1 %6
}

declare zeroext i1 @_ZN4File4OpenEPKwj(%class.File*, i32*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7Archive4ReadEPvm(%class.Archive*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  store i64 -6148914691236517206, i64* %4, align 8
  %6 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 11
  %7 = call zeroext i1 @_ZN9QuickOpen4ReadEPvmRm(%class.QuickOpen* %6, i8* %1, i64 %2, i64* nonnull dereferenceable(8) %4) #11
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = load i64, i64* %4, align 8
  %10 = trunc i64 %9 to i32
  br label %14

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  %13 = call i32 @_ZN4File4ReadEPvm(%class.File* %12, i8* %1, i64 %2) #11
  br label %14

14:                                               ; preds = %11, %8
  %15 = phi i32 [ %10, %8 ], [ %13, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret i32 %15
}

declare zeroext i1 @_ZN9QuickOpen4ReadEPvmRm(%class.QuickOpen*, i8*, i64, i64* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN4File4ReadEPvm(%class.File*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7Archive4SeekEli(%class.Archive*, i64, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 11
  %5 = tail call zeroext i1 @_ZN9QuickOpen4SeekEli(%class.QuickOpen* %4, i64 %1, i32 %2) #11
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  tail call void @_ZN4File4SeekEli(%class.File* %7, i64 %1, i32 %2) #11
  br label %8

8:                                                ; preds = %6, %3
  ret void
}

declare zeroext i1 @_ZN9QuickOpen4SeekEli(%class.QuickOpen*, i64, i32) local_unnamed_addr #2

declare void @_ZN4File4SeekEli(%class.File*, i64, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7Archive4TellEv(%class.Archive*) unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #11
  store i64 -6148914691236517206, i64* %2, align 8
  %4 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 11
  %5 = call zeroext i1 @_ZN9QuickOpen4TellEPl(%class.QuickOpen* %4, i64* nonnull %2) #11
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = load i64, i64* %2, align 8
  br label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 0
  %10 = call i64 @_ZN4File4TellEv(%class.File* %9) #11
  br label %11

11:                                               ; preds = %8, %6
  %12 = phi i64 [ %7, %6 ], [ %10, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #11
  ret i64 %12
}

declare zeroext i1 @_ZN9QuickOpen4TellEPl(%class.QuickOpen*, i64*) local_unnamed_addr #2

declare i64 @_ZN4File4TellEv(%class.File*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7Archive17SetTempFileHandleEl(%class.Archive* nocapture, i64) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 14
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN7Archive17GetTempFileHandleEv(%class.Archive* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %class.Archive, %class.Archive* %0, i64 0, i32 14
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

declare zeroext i1 @_ZN4File5CloseEv(%class.File*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4File8IsOpenedEv(%class.File*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.File, %class.File* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, -1
  ret i1 %4
}

declare void @_ZN10uiMsgStore3MsgEv(%class.uiMsgStore*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ArrayIwE3AddEm(%class.Array.6*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.6, %class.Array.6* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.Array.6, %class.Array.6* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %56

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.Array.6, %class.Array.6* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp ugt i64 %5, %11
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([44 x i32], [44 x i32]* @.str.3, i64 0, i64 0), i64 %11) #11
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #11
  %16 = load i64, i64* %6, align 8
  %17 = load i64, i64* %3, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi i64 [ %5, %9 ], [ %17, %15 ]
  %20 = phi i64 [ %7, %9 ], [ %16, %15 ]
  %21 = lshr i64 %20, 2
  %22 = add i64 %20, 32
  %23 = add i64 %22, %21
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %19, i64 %23
  %26 = getelementptr inbounds %class.Array.6, %class.Array.6* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %18
  %30 = shl i64 %25, 2
  %31 = tail call noalias i8* @malloc(i64 %30) #11
  %32 = bitcast i8* %31 to i32*
  %33 = icmp eq i8* %31, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #11
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %class.Array.6, %class.Array.6* %0, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = icmp eq i32* %37, null
  %39 = bitcast i32* %37 to i8*
  br i1 %38, label %53, label %40

40:                                               ; preds = %35
  %41 = load i64, i64* %6, align 8
  %42 = shl i64 %41, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %31, i8* nonnull align 4 %39, i64 %42, i1 false)
  %43 = bitcast %class.Array.6* %0 to i8**
  tail call void @_Z9cleandataPvm(i8* nonnull %39, i64 %42) #11
  %44 = load i8*, i8** %43, align 8
  tail call void @free(i8* %44) #11
  br label %53

45:                                               ; preds = %18
  %46 = bitcast %class.Array.6* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = shl i64 %25, 2
  %49 = tail call i8* @realloc(i8* %47, i64 %48) #11
  %50 = bitcast i8* %49 to i32*
  %51 = icmp eq i8* %49, null
  br i1 %51, label %52, label %53

52:                                               ; preds = %45
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #11
  br label %53

53:                                               ; preds = %35, %45, %52, %40
  %54 = phi i32* [ %32, %40 ], [ %32, %35 ], [ null, %52 ], [ %50, %45 ]
  %55 = getelementptr inbounds %class.Array.6, %class.Array.6* %0, i64 0, i32 0
  store i32* %54, i32** %55, align 8
  store i64 %25, i64* %6, align 8
  br label %56

56:                                               ; preds = %53, %2
  ret void
}

declare void @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler*, i32*, ...) local_unnamed_addr #2

declare void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_Z9cleandataPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ArrayIhE3AddEm(%class.Array*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %49

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp ugt i64 %5, %11
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([44 x i32], [44 x i32]* @.str.3, i64 0, i64 0), i64 %11) #11
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #11
  %16 = load i64, i64* %6, align 8
  %17 = load i64, i64* %3, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi i64 [ %5, %9 ], [ %17, %15 ]
  %20 = phi i64 [ %7, %9 ], [ %16, %15 ]
  %21 = lshr i64 %20, 2
  %22 = add i64 %20, 32
  %23 = add i64 %22, %21
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %19, i64 %23
  %26 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %18
  %30 = tail call noalias i8* @malloc(i64 %25) #11
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #11
  br label %33

33:                                               ; preds = %32, %29
  %34 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %33
  %38 = load i64, i64* %6, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* nonnull align 1 %35, i64 %38, i1 false)
  tail call void @_Z9cleandataPvm(i8* nonnull %35, i64 %38) #11
  %39 = load i8*, i8** %34, align 8
  tail call void @free(i8* %39) #11
  br label %46

40:                                               ; preds = %18
  %41 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = tail call i8* @realloc(i8* %42, i64 %25) #11
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #11
  br label %46

46:                                               ; preds = %33, %40, %45, %37
  %47 = phi i8* [ %30, %37 ], [ %30, %33 ], [ null, %45 ], [ %43, %40 ]
  %48 = getelementptr inbounds %class.Array, %class.Array* %0, i64 0, i32 0
  store i8* %47, i8** %48, align 8
  store i64 %25, i64* %6, align 8
  br label %49

49:                                               ; preds = %46, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5ArrayIcE3AddEm(%class.Array.16*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.16, %class.Array.16* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %class.Array.16, %class.Array.16* %0, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %49

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.Array.16, %class.Array.16* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, 0
  %13 = icmp ugt i64 %5, %11
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %18

15:                                               ; preds = %9
  tail call void (%class.ErrorHandler*, i32*, ...) @_ZN12ErrorHandler13GeneralErrMsgEPKwz(%class.ErrorHandler* nonnull @ErrHandler, i32* getelementptr inbounds ([44 x i32], [44 x i32]* @.str.3, i64 0, i64 0), i64 %11) #11
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #11
  %16 = load i64, i64* %6, align 8
  %17 = load i64, i64* %3, align 8
  br label %18

18:                                               ; preds = %9, %15
  %19 = phi i64 [ %5, %9 ], [ %17, %15 ]
  %20 = phi i64 [ %7, %9 ], [ %16, %15 ]
  %21 = lshr i64 %20, 2
  %22 = add i64 %20, 32
  %23 = add i64 %22, %21
  %24 = icmp ugt i64 %19, %23
  %25 = select i1 %24, i64 %19, i64 %23
  %26 = getelementptr inbounds %class.Array.16, %class.Array.16* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %18
  %30 = tail call noalias i8* @malloc(i64 %25) #11
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #11
  br label %33

33:                                               ; preds = %32, %29
  %34 = getelementptr inbounds %class.Array.16, %class.Array.16* %0, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %46, label %37

37:                                               ; preds = %33
  %38 = load i64, i64* %6, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* nonnull align 1 %35, i64 %38, i1 false)
  tail call void @_Z9cleandataPvm(i8* nonnull %35, i64 %38) #11
  %39 = load i8*, i8** %34, align 8
  tail call void @free(i8* %39) #11
  br label %46

40:                                               ; preds = %18
  %41 = getelementptr inbounds %class.Array.16, %class.Array.16* %0, i64 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = tail call i8* @realloc(i8* %42, i64 %25) #11
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  tail call void @_ZN12ErrorHandler11MemoryErrorEv(%class.ErrorHandler* nonnull @ErrHandler) #11
  br label %46

46:                                               ; preds = %33, %40, %45, %37
  %47 = phi i8* [ %30, %37 ], [ %30, %33 ], [ null, %45 ], [ %43, %40 ]
  %48 = getelementptr inbounds %class.Array.16, %class.Array.16* %0, i64 0, i32 0
  store i8* %47, i8** %48, align 8
  store i64 %25, i64* %6, align 8
  br label %49

49:                                               ; preds = %46, %2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
