; ModuleID = '../../third_party/pdfium/xfa/fxfa/cxfa_fwltheme.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/cxfa_fwltheme.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CXFA_FWLTheme = type { %class.IFWL_ThemeProvider, %"class.std::__1::unique_ptr", %"class.fxcrt::RetainPtr", %"class.cppgc::internal::BasicMember.133", %"class.fxcrt::WideString", %class.CFX_RectF }
%class.IFWL_ThemeProvider = type { %"class.cppgc::GarbageCollectedMixin", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFDE_TextOut* }
%class.CFDE_TextOut = type { %"class.std::__1::unique_ptr.0", %"class.fxcrt::RetainPtr", float, float, float, float, i8, %struct.FDE_TextStyle, %"class.std::__1::vector.89", i32, i32, %"class.fxcrt::WideString", %class.CFX_Matrix, %"class.std::__1::deque", i32, i64, i32, %"class.std::__1::vector.123" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.CFGAS_TxtBreak* }
%class.CFGAS_TxtBreak = type { %class.CFGAS_Break, i32, i32 }
%class.CFGAS_Break = type { i32 (...)**, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.52", i8, [7 x i8], [2 x %class.CFGAS_BreakLine] }
%"class.fxcrt::UnownedPtr.52" = type { %class.CFGAS_BreakLine* }
%class.CFGAS_BreakLine = type <{ %"class.std::__1::vector.53", %"class.std::__1::vector.78", i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { %class.CFGAS_Char*, %class.CFGAS_Char*, %"class.std::__1::__compressed_pair.73" }
%class.CFGAS_Char = type <{ i8, i8, i8, i8, i32, i32, i16, i16, i16, [2 x i8], i32, i32, [4 x i8], %"class.fxcrt::RetainPtr.55", i16, [2 x i8], i32, i32, [4 x i8] }>
%"class.fxcrt::RetainPtr.55" = type { %"class.std::__1::unique_ptr.56" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.CFGAS_TextUserData* }
%class.CFGAS_TextUserData = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.59", %"class.fxcrt::RetainPtr.65" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::RetainPtr.59" = type { %"class.std::__1::unique_ptr.60" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %class.CFX_CSSComputedStyle* }
%class.CFX_CSSComputedStyle = type opaque
%"class.fxcrt::RetainPtr.65" = type { %"class.std::__1::unique_ptr.66" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %class.CFGAS_LinkUserData* }
%class.CFGAS_LinkUserData = type opaque
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %class.CFGAS_Char* }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %class.CFGAS_BreakPiece*, %class.CFGAS_BreakPiece*, %"class.std::__1::__compressed_pair.81" }
%class.CFGAS_BreakPiece = type { i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.fxcrt::UnownedPtr.80", %"class.fxcrt::RetainPtr.55" }
%"class.fxcrt::UnownedPtr.80" = type { %"class.std::__1::vector.53"* }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.CFGAS_BreakPiece* }
%struct.FDE_TextStyle = type { i8, i8, i8 }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { i32*, i32*, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { i32* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.119" }
%"struct.std::__1::__split_buffer" = type { %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"**, %"class.CFDE_TextOut::Line"**, %"class.std::__1::__compressed_pair.114" }
%"class.CFDE_TextOut::Line" = type { i8, %"class.std::__1::deque.102" }
%"class.std::__1::deque.102" = type { %"class.std::__1::__deque_base.103" }
%"class.std::__1::__deque_base.103" = type { %"struct.std::__1::__split_buffer.104", i64, %"class.std::__1::__compressed_pair.110" }
%"struct.std::__1::__split_buffer.104" = type { %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"**, %"struct.CFDE_TextOut::Piece"**, %"class.std::__1::__compressed_pair.105" }
%"struct.CFDE_TextOut::Piece" = type <{ i64, i64, i32, %class.CFX_RectF, [4 x i8] }>
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.CFDE_TextOut::Piece"** }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i64 }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.CFDE_TextOut::Line"** }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %class.TextCharPos*, %class.TextCharPos*, %"class.std::__1::__compressed_pair.125" }
%class.TextCharPos = type opaque
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %class.TextCharPos* }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.3" }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.CFGAS_GEFont* }
%class.CFGAS_GEFont = type { %"class.fxcrt::Retainable", %"class.pdfium::Optional", %"class.fxcrt::RetainPtr.6", %"class.fxcrt::MaybeOwned", %"class.std::__1::unique_ptr.15", %"class.std::__1::map", %"class.std::__1::map.27", %"class.std::__1::vector", %"class.std::__1::map.41" }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.fxcrt::RetainPtr.6" = type { %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.11", %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %class.CFX_Font* }
%class.CFX_Font = type opaque
%"class.fxcrt::UnownedPtr" = type { %class.CFX_Font* }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.CFX_UnicodeEncodingEx* }
%class.CFX_UnicodeEncodingEx = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::map.27" = type { %"class.std::__1::__tree.28" }
%"class.std::__1::__tree.28" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::RetainPtr"*, %"class.fxcrt::RetainPtr"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.fxcrt::RetainPtr"* }
%"class.std::__1::map.41" = type { %"class.std::__1::__tree.42" }
%"class.std::__1::__tree.42" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.43", %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.cppgc::internal::BasicMember.133" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.96" }
%"class.fxcrt::RetainPtr.96" = type { %"class.std::__1::unique_ptr.97" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CFX_RectF = type { float, float, float, float }
%"class.cppgc::Heap" = type { i32 (...)** }
%class.CXFA_FFApp = type { %"class.CFWL_App::AdapterIface", %"class.fxcrt::UnownedPtr.135", %"class.cppgc::internal::BasicMember.136", %"class.cppgc::internal::BasicMember.137", %"class.cppgc::internal::BasicMember.138", %"class.cppgc::internal::BasicMember.139" }
%"class.CFWL_App::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.fxcrt::UnownedPtr.135" = type { %class.IXFA_AppProvider* }
%class.IXFA_AppProvider = type { i32 (...)** }
%"class.cppgc::internal::BasicMember.136" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.137" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.138" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.139" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::Visitor" = type { i32 (...)** }
%class.CXFA_FFDoc = type opaque
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.152", i64 }
%"class.fxcrt::UnownedPtr.152" = type { i32* }
%class.CXFA_FontMgr = type { %"class.std::__1::map.141" }
%"class.std::__1::map.141" = type { %"class.std::__1::__tree.142" }
%"class.std::__1::__tree.142" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%class.CFGAS_GEModule = type { %"class.std::__1::unique_ptr.153" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %class.CFGAS_FontMgr* }
%class.CFGAS_FontMgr = type { %"class.std::__1::map.156", %"class.std::__1::set", %"class.std::__1::vector.174", %"class.std::__1::map.182" }
%"class.std::__1::map.156" = type { %"class.std::__1::__tree.157" }
%"class.std::__1::__tree.157" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.167" }
%"class.std::__1::__tree.167" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"class.std::__1::vector.174" = type { %"class.std::__1::__vector_base.175" }
%"class.std::__1::__vector_base.175" = type { %"class.std::__1::unique_ptr.176"*, %"class.std::__1::unique_ptr.176"*, %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::unique_ptr.176" = type opaque
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.std::__1::unique_ptr.176"* }
%"class.std::__1::map.182" = type { %"class.std::__1::__tree.183" }
%"class.std::__1::__tree.183" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%class.CFWL_ThemeBackground = type { %class.CFWL_ThemePart, %"class.fxcrt::UnownedPtr.201", %"class.fxcrt::UnownedPtr.209" }
%class.CFWL_ThemePart = type { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.194", i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.195" }
%"class.fxcrt::UnownedPtr.194" = type { %class.CFX_RectF* }
%"class.fxcrt::UnownedPtr.195" = type { %class.CFWL_Widget* }
%class.CFWL_Widget = type { %class.IFWL_WidgetDelegate, %"class.CFWL_Widget::Properties", %class.CFX_RectF, i32, i64, %"class.cppgc::internal::BasicMember.197", %"class.cppgc::internal::BasicMember.139", %"class.cppgc::internal::BasicMember.198", %"class.cppgc::internal::BasicMember.199", %"class.cppgc::internal::BasicMember.200" }
%class.IFWL_WidgetDelegate = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.CFWL_Widget::Properties" = type { i32, i32, i32 }
%"class.cppgc::internal::BasicMember.197" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.198" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.199" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.200" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::UnownedPtr.201" = type { %class.CFGAS_GEPath* }
%class.CFGAS_GEPath = type { %class.CFX_PathData }
%class.CFX_PathData = type { %"class.std::__1::vector.202" }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.204" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %class.FX_PATHPOINT* }
%"class.fxcrt::UnownedPtr.209" = type { %class.CFGAS_GEGraphics* }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.210", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.220" }
%"class.fxcrt::UnownedPtr.210" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.211" }
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { float*, float*, %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { float* }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.218", %"class.fxcrt::UnownedPtr.219" }
%"class.fxcrt::UnownedPtr.218" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.219" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.220" = type { %"class.std::__1::__vector_base.221" }
%"class.std::__1::__vector_base.221" = type { %"class.std::__1::unique_ptr.222"*, %"class.std::__1::unique_ptr.222"*, %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::unique_ptr.222" = type opaque
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.std::__1::unique_ptr.222"* }
%class.CFWL_WidgetTP = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.229" }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.CFWL_WidgetTP::CColorData"* }
%"struct.CFWL_WidgetTP::CColorData" = type { [4 x i32], [4 x i32], [4 x i32], [4 x i32] }
%class.CFWL_ThemeText = type { %class.CFWL_ThemePart, i8, %struct.FDE_TextStyle, %"class.fxcrt::WideString", %"class.fxcrt::UnownedPtr.209" }
%class.CXFA_FFWidget = type { %"class.CFWL_Widget::AdapterIface", %"class.cppgc::internal::BasicMember.236", %"class.cppgc::internal::BasicMember.237", %"class.cppgc::internal::BasicMember.238", %"class.cppgc::internal::BasicMember.239", %class.CFX_RectF }
%"class.CFWL_Widget::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::internal::BasicMember.236" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.237" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.238" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.239" = type { %"class.cppgc::internal::MemberBase" }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.246", %"class.pdfium::span.248", i32, %"class.fxcrt::UnownedPtr.250", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember.239", %"class.std::__1::vector.251", %"class.cppgc::internal::BasicMember.258", %"class.cppgc::internal::BasicMember.259" }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate.241", i32, %"class.cppgc::internal::BasicMember.244", %"class.cppgc::internal::BasicMember.245" }
%"class.fxcrt::StringViewTemplate.241" = type { %"class.pdfium::span.242" }
%"class.pdfium::span.242" = type { %"class.fxcrt::UnownedPtr.243", i64 }
%"class.fxcrt::UnownedPtr.243" = type { i8* }
%"class.cppgc::internal::BasicMember.244" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.245" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.239", %"class.cppgc::internal::BasicMember.239", %"class.cppgc::internal::BasicMember.239", %"class.cppgc::internal::BasicMember.239", %"class.cppgc::internal::BasicMember.239" }
%"class.pdfium::span.246" = type { %"class.fxcrt::UnownedPtr.247", i64 }
%"class.fxcrt::UnownedPtr.247" = type { %"struct.CXFA_Node::PropertyData"* }
%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"class.pdfium::span.248" = type { %"class.fxcrt::UnownedPtr.249", i64 }
%"class.fxcrt::UnownedPtr.249" = type { %"struct.CXFA_Node::AttributeData"* }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"class.fxcrt::UnownedPtr.250" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type opaque
%"class.std::__1::vector.251" = type { %"class.std::__1::__vector_base.252" }
%"class.std::__1::__vector_base.252" = type { %"class.cppgc::internal::BasicMember.239"*, %"class.cppgc::internal::BasicMember.239"*, %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.cppgc::internal::BasicMember.239"* }
%"class.cppgc::internal::BasicMember.258" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.259" = type { %"class.cppgc::internal::MemberBase" }
%class.CXFA_ContentLayoutItem = type { %class.CXFA_LayoutItem, %class.CFX_PTemplate, %class.CFX_STemplate, i16, %"class.cppgc::internal::BasicMember.236", %"class.cppgc::internal::BasicMember.236", %"class.cppgc::internal::BasicMember.263" }
%class.CXFA_LayoutItem = type { %"class.fxjs::GCedTreeNode", i32, %"class.cppgc::internal::BasicMember.239" }
%"class.fxjs::GCedTreeNode" = type { %"class.fxcrt::TreeNode.261" }
%"class.fxcrt::TreeNode.261" = type { i32 (...)**, %"class.cppgc::internal::BasicMember.262", %"class.cppgc::internal::BasicMember.262", %"class.cppgc::internal::BasicMember.262", %"class.cppgc::internal::BasicMember.262", %"class.cppgc::internal::BasicMember.262" }
%"class.cppgc::internal::BasicMember.262" = type { %"class.cppgc::internal::MemberBase" }
%class.CFX_STemplate = type { float, float }
%"class.cppgc::internal::BasicMember.263" = type { %"class.cppgc::internal::MemberBase" }
%class.CXFA_Para = type { %class.CXFA_Node }
%"class.cppgc::LivenessBroker" = type { i8 }

$_ZN13CXFA_FWLTheme18InvokePreFinalizerERKN5cppgc14LivenessBrokerEPv = comdat any

$_ZN5cppgc8internal14TraceTraitBaseI10CXFA_FFAppE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTV13CXFA_FWLTheme = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CXFA_FWLTheme*, %"class.cppgc::Visitor"*)* @_ZNK13CXFA_FWLTheme5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CXFA_FWLTheme*)* @_ZN13CXFA_FWLThemeD2Ev to i8*), i8* bitcast (void (%class.CXFA_FWLTheme*)* @_ZN13CXFA_FWLThemeD0Ev to i8*), i8* bitcast (void (%class.CXFA_FWLTheme*, %class.CFWL_ThemeBackground*)* @_ZN13CXFA_FWLTheme14DrawBackgroundERK20CFWL_ThemeBackground to i8*), i8* bitcast (void (%class.CXFA_FWLTheme*, %class.CFWL_ThemeText*)* @_ZN13CXFA_FWLTheme8DrawTextERK14CFWL_ThemeText to i8*), i8* bitcast (void (%class.CXFA_FWLTheme*, %class.CFWL_ThemeText*, %class.CFX_RectF*)* @_ZN13CXFA_FWLTheme12CalcTextRectERK14CFWL_ThemeTextP9CFX_RectF to i8*), i8* bitcast (float (%class.CXFA_FWLTheme*)* @_ZNK13CXFA_FWLTheme15GetCXBorderSizeEv to i8*), i8* bitcast (float (%class.CXFA_FWLTheme*)* @_ZNK13CXFA_FWLTheme15GetCYBorderSizeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CXFA_FWLTheme*, %class.CFWL_ThemePart*)* @_ZNK13CXFA_FWLTheme11GetUIMarginERK14CFWL_ThemePart to i8*), i8* bitcast (float (%class.CXFA_FWLTheme*, %class.CFWL_ThemePart*)* @_ZNK13CXFA_FWLTheme11GetFontSizeERK14CFWL_ThemePart to i8*), i8* bitcast (void (%"class.fxcrt::RetainPtr"*, %class.CXFA_FWLTheme*, %class.CFWL_ThemePart*)* @_ZNK13CXFA_FWLTheme7GetFontERK14CFWL_ThemePart to i8*), i8* bitcast (float (%class.CXFA_FWLTheme*, %class.CFWL_ThemePart*)* @_ZNK13CXFA_FWLTheme13GetLineHeightERK14CFWL_ThemePart to i8*), i8* bitcast (float (%class.CXFA_FWLTheme*)* @_ZNK13CXFA_FWLTheme17GetScrollBarWidthEv to i8*), i8* bitcast (i32 (%class.CXFA_FWLTheme*, %class.CFWL_ThemePart*)* @_ZNK13CXFA_FWLTheme12GetTextColorERK14CFWL_ThemePart to i8*), i8* bitcast (void (%class.CFX_STemplate*, %class.CXFA_FWLTheme*, %class.CFWL_ThemePart*)* @_ZNK13CXFA_FWLTheme18GetSpaceAboveBelowERK14CFWL_ThemePart to i8*)] }, align 8
@_ZN12_GLOBAL__N_117kFWLThemeCalFontsE = internal constant [3 x i32*] [i32* getelementptr inbounds ([6 x i32], [6 x i32]* @.str, i32 0, i32 0), i32* getelementptr inbounds ([12 x i32], [12 x i32]* @.str.1, i32 0, i32 0), i32* getelementptr inbounds ([12 x i32], [12 x i32]* @.str.2, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [6 x i32] [i32 65, i32 114, i32 105, i32 97, i32 108, i32 0], align 4
@.str.1 = private unnamed_addr constant [12 x i32] [i32 67, i32 111, i32 117, i32 114, i32 105, i32 101, i32 114, i32 32, i32 78, i32 101, i32 119, i32 0], align 4
@.str.2 = private unnamed_addr constant [12 x i32] [i32 68, i32 101, i32 106, i32 97, i32 86, i32 117, i32 32, i32 83, i32 97, i32 110, i32 115, i32 0], align 4
@.str.3 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4

@_ZN13CXFA_FWLThemeC1EPN5cppgc4HeapEP10CXFA_FFApp = hidden unnamed_addr alias void (%class.CXFA_FWLTheme*, %"class.cppgc::Heap"*, %class.CXFA_FFApp*), void (%class.CXFA_FWLTheme*, %"class.cppgc::Heap"*, %class.CXFA_FFApp*)* @_ZN13CXFA_FWLThemeC2EPN5cppgc4HeapEP10CXFA_FFApp
@_ZN13CXFA_FWLThemeD1Ev = hidden unnamed_addr alias void (%class.CXFA_FWLTheme*), void (%class.CXFA_FWLTheme*)* @_ZN13CXFA_FWLThemeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CXFA_FWLThemeC2EPN5cppgc4HeapEP10CXFA_FFApp(%class.CXFA_FWLTheme*, %"class.cppgc::Heap"*, %class.CXFA_FFApp*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 0
  tail call void @_ZN18IFWL_ThemeProviderC2EPN5cppgc4HeapE(%class.IFWL_ThemeProvider* %4, %"class.cppgc::Heap"* %1) #8
  %5 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV13CXFA_FWLTheme, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast %class.CXFA_FWLTheme* %0 to i8*
  tail call void @_ZN5cppgc8internal34PreFinalizerRegistrationDispatcher20RegisterPrefinalizerENS1_12PreFinalizerE(i8* %6, i1 (%"class.cppgc::LivenessBroker"*, i8*)* nonnull @_ZN13CXFA_FWLTheme18InvokePreFinalizerERKN5cppgc14LivenessBrokerEPv) #8
  %7 = tail call i8* @_Znwm(i64 200) #9
  %8 = bitcast i8* %7 to %class.CFDE_TextOut*
  tail call void @_ZN12CFDE_TextOutC1Ev(%class.CFDE_TextOut* nonnull %8) #8
  %9 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %class.CFDE_TextOut** %9 to i8**
  store i8* %7, i8** %10, align 8
  %11 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 2
  %12 = bitcast %"class.fxcrt::RetainPtr"* %11 to i64*
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 3
  %14 = bitcast %"class.cppgc::internal::BasicMember.133"* %13 to %class.CXFA_FFApp**
  store %class.CXFA_FFApp* %2, %class.CXFA_FFApp** %14, align 8
  %15 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 4
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %15) #8
  %16 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 5
  %17 = bitcast %class.CFX_RectF* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 16, i1 false) #8
  ret void
}

declare void @_ZN18IFWL_ThemeProviderC2EPN5cppgc4HeapE(%class.IFWL_ThemeProvider*, %"class.cppgc::Heap"*) unnamed_addr #1

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CXFA_FWLThemeD2Ev(%class.CXFA_FWLTheme*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV13CXFA_FWLTheme, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 4
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %3) #8
  %4 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %4, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %4, align 8
  %6 = icmp eq %class.CFGAS_GEFont* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %5, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add nsw i64 %9, -1
  store i64 %10, i64* %8, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %5, i64 0, i32 0
  %14 = bitcast %class.CFGAS_GEFont* %5 to void (%"class.fxcrt::Retainable"*)***
  %15 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, i64 1
  %17 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %16, align 8
  tail call void %17(%"class.fxcrt::Retainable"* nonnull %13) #8
  br label %18

18:                                               ; preds = %1, %7, %12
  %19 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %19, align 8
  store %class.CFDE_TextOut* null, %class.CFDE_TextOut** %19, align 8
  %21 = icmp eq %class.CFDE_TextOut* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  tail call void @_ZN12CFDE_TextOutD1Ev(%class.CFDE_TextOut* nonnull %20) #8
  %23 = bitcast %class.CFDE_TextOut* %20 to i8*
  tail call void @_ZdlPv(i8* %23) #9
  br label %24

24:                                               ; preds = %18, %22
  %25 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 0
  tail call void @_ZN18IFWL_ThemeProviderD2Ev(%class.IFWL_ThemeProvider* %25) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN18IFWL_ThemeProviderD2Ev(%class.IFWL_ThemeProvider*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CXFA_FWLThemeD0Ev(%class.CXFA_FWLTheme*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV13CXFA_FWLTheme, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 4
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %3) #8
  %4 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %4, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %4, align 8
  %6 = icmp eq %class.CFGAS_GEFont* %5, null
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %5, i64 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add nsw i64 %9, -1
  store i64 %10, i64* %8, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %5, i64 0, i32 0
  %14 = bitcast %class.CFGAS_GEFont* %5 to void (%"class.fxcrt::Retainable"*)***
  %15 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %15, i64 1
  %17 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %16, align 8
  tail call void %17(%"class.fxcrt::Retainable"* nonnull %13) #8
  br label %18

18:                                               ; preds = %12, %7, %1
  %19 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %19, align 8
  store %class.CFDE_TextOut* null, %class.CFDE_TextOut** %19, align 8
  %21 = icmp eq %class.CFDE_TextOut* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  tail call void @_ZN12CFDE_TextOutD1Ev(%class.CFDE_TextOut* nonnull %20) #8
  %23 = bitcast %class.CFDE_TextOut* %20 to i8*
  tail call void @_ZdlPv(i8* %23) #9
  br label %24

24:                                               ; preds = %18, %22
  %25 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 0
  tail call void @_ZN18IFWL_ThemeProviderD2Ev(%class.IFWL_ThemeProvider* %25) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CXFA_FWLTheme11PreFinalizeEv(%class.CXFA_FWLTheme* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %2, align 8
  store %class.CFDE_TextOut* null, %class.CFDE_TextOut** %2, align 8
  %4 = icmp eq %class.CFDE_TextOut* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN12CFDE_TextOutD1Ev(%class.CFDE_TextOut* nonnull %3) #8
  %6 = bitcast %class.CFDE_TextOut* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %1, %5
  tail call void @_ZN16CFWL_FontManager15DestroyInstanceEv() #8
  ret void
}

declare void @_ZN16CFWL_FontManager15DestroyInstanceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CXFA_FWLTheme5TraceEPN5cppgc7VisitorE(%class.CXFA_FWLTheme*, %"class.cppgc::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 0
  tail call void @_ZNK18IFWL_ThemeProvider5TraceEPN5cppgc7VisitorE(%class.IFWL_ThemeProvider* %3, %"class.cppgc::Visitor"* %1) #8
  %4 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 3
  %5 = bitcast %"class.cppgc::internal::BasicMember.133"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %11 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %11, i64 4
  %13 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.cppgc::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI10CXFA_FFAppE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %2, %8
  ret void
}

declare void @_ZNK18IFWL_ThemeProvider5TraceEPN5cppgc7VisitorE(%class.IFWL_ThemeProvider*, %"class.cppgc::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CXFA_FWLTheme16LoadCalendarFontEP10CXFA_FFDoc(%class.CXFA_FWLTheme* nocapture, %class.CXFA_FFDoc*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::RetainPtr", align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::RetainPtr", align 8
  %6 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %7, align 8
  %9 = icmp eq %class.CFGAS_GEFont* %8, null
  br i1 %9, label %10, label %108

10:                                               ; preds = %2
  %11 = bitcast %"class.fxcrt::RetainPtr"* %3 to i8*
  %12 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 3
  %13 = bitcast %"class.cppgc::internal::BasicMember.133"* %12 to %class.CXFA_FFApp**
  %14 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.fxcrt::RetainPtr"* %3 to i64*
  %18 = bitcast %"class.fxcrt::RetainPtr"* %6 to i64*
  br label %21

19:                                               ; preds = %65
  %20 = icmp eq i32** %68, getelementptr inbounds ([3 x i32*], [3 x i32*]* @_ZN12_GLOBAL__N_117kFWLThemeCalFontsE, i64 1, i64 0)
  br i1 %20, label %69, label %21

21:                                               ; preds = %10, %19
  %22 = phi i32** [ getelementptr inbounds ([3 x i32*], [3 x i32*]* @_ZN12_GLOBAL__N_117kFWLThemeCalFontsE, i64 0, i64 0), %10 ], [ %68, %19 ]
  %23 = load i32*, i32** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %24 = load %class.CXFA_FFApp*, %class.CXFA_FFApp** %13, align 8
  %25 = getelementptr inbounds %class.CXFA_FFApp, %class.CXFA_FFApp* %24, i64 0, i32 2
  %26 = bitcast %"class.cppgc::internal::BasicMember.136"* %25 to %class.CXFA_FontMgr**
  %27 = load %class.CXFA_FontMgr*, %class.CXFA_FontMgr** %26, align 8
  %28 = icmp eq i32* %23, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %21
  %30 = call i64 @wcslen(i32* nonnull %23) #10
  br label %31

31:                                               ; preds = %21, %29
  %32 = phi i64 [ %30, %29 ], [ 0, %21 ]
  store i32* %23, i32** %14, align 8
  store i64 %32, i64* %15, align 8
  call void @_ZN12CXFA_FontMgr7GetFontEP10CXFA_FFDocN5fxcrt18StringViewTemplateIwEEj(%"class.fxcrt::RetainPtr"* nonnull sret %3, %class.CXFA_FontMgr* %27, %class.CXFA_FFDoc* %1, %"class.fxcrt::StringViewTemplate"* nonnull %4, i32 0) #8
  %33 = load i64, i64* %17, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %16, align 8
  %34 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %7, align 8
  store i64 %33, i64* %18, align 8
  %35 = icmp eq %class.CFGAS_GEFont* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %31
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %16, align 8
  %37 = inttoptr i64 %33 to %class.CFGAS_GEFont*
  br label %65

38:                                               ; preds = %31
  %39 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %34, i64 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add nsw i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %16, align 8
  br label %63

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %34, i64 0, i32 0
  %46 = bitcast %class.CFGAS_GEFont* %34 to void (%"class.fxcrt::Retainable"*)***
  %47 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %47, i64 1
  %49 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %48, align 8
  call void %49(%"class.fxcrt::Retainable"* nonnull %45) #8
  %50 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %16, align 8
  %51 = bitcast %class.CFGAS_GEFont* %50 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %16, align 8
  %52 = icmp eq %class.CFGAS_GEFont* %50, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %44
  %54 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %50, i64 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = add nsw i64 %55, -1
  store i64 %56, i64* %54, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %58, label %63

58:                                               ; preds = %53
  %59 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %50, i64 0, i32 0
  %60 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %51, align 8
  %61 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %60, i64 1
  %62 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %61, align 8
  call void %62(%"class.fxcrt::Retainable"* nonnull %59) #8
  br label %63

63:                                               ; preds = %58, %53, %44, %43
  %64 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %7, align 8
  br label %65

65:                                               ; preds = %63, %36
  %66 = phi %class.CFGAS_GEFont* [ %64, %63 ], [ %37, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  %67 = icmp eq %class.CFGAS_GEFont* %66, null
  %68 = getelementptr inbounds i32*, i32** %22, i64 1
  br i1 %67, label %19, label %108

69:                                               ; preds = %19
  %70 = bitcast %"class.fxcrt::RetainPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #8
  %71 = call %class.CFGAS_GEModule* @_ZN14CFGAS_GEModule3GetEv() #8
  %72 = getelementptr inbounds %class.CFGAS_GEModule, %class.CFGAS_GEModule* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load %class.CFGAS_FontMgr*, %class.CFGAS_FontMgr** %72, align 8
  call void @_ZN13CFGAS_FontMgr17GetFontByCodePageEtjPKw(%"class.fxcrt::RetainPtr"* nonnull sret %5, %class.CFGAS_FontMgr* %73, i16 zeroext 1252, i32 0, i32* null) #8
  %74 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.fxcrt::RetainPtr"* %5 to i64*
  %76 = load i64, i64* %75, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %74, align 8
  %77 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %7, align 8
  store i64 %76, i64* %18, align 8
  %78 = icmp eq %class.CFGAS_GEFont* %77, null
  br i1 %78, label %79, label %80

79:                                               ; preds = %69
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %74, align 8
  br label %105

80:                                               ; preds = %69
  %81 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %77, i64 0, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = add nsw i64 %82, -1
  store i64 %83, i64* %81, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %86, label %85

85:                                               ; preds = %80
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %74, align 8
  br label %105

86:                                               ; preds = %80
  %87 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %77, i64 0, i32 0
  %88 = bitcast %class.CFGAS_GEFont* %77 to void (%"class.fxcrt::Retainable"*)***
  %89 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %89, i64 1
  %91 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %90, align 8
  call void %91(%"class.fxcrt::Retainable"* nonnull %87) #8
  %92 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %74, align 8
  %93 = bitcast %class.CFGAS_GEFont* %92 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %74, align 8
  %94 = icmp eq %class.CFGAS_GEFont* %92, null
  br i1 %94, label %105, label %95

95:                                               ; preds = %86
  %96 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %92, i64 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = add nsw i64 %97, -1
  store i64 %98, i64* %96, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %105

100:                                              ; preds = %95
  %101 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %92, i64 0, i32 0
  %102 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %93, align 8
  %103 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %102, i64 1
  %104 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %103, align 8
  call void %104(%"class.fxcrt::Retainable"* nonnull %101) #8
  br label %105

105:                                              ; preds = %85, %79, %86, %95, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #8
  %106 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %7, align 8
  %107 = icmp ne %class.CFGAS_GEFont* %106, null
  br label %108

108:                                              ; preds = %65, %2, %105
  %109 = phi i1 [ %107, %105 ], [ true, %2 ], [ true, %65 ]
  ret i1 %109
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN12CXFA_FontMgr7GetFontEP10CXFA_FFDocN5fxcrt18StringViewTemplateIwEEj(%"class.fxcrt::RetainPtr"* sret, %class.CXFA_FontMgr*, %class.CXFA_FFDoc*, %"class.fxcrt::StringViewTemplate"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %class.CFGAS_GEModule* @_ZN14CFGAS_GEModule3GetEv() local_unnamed_addr #1

declare void @_ZN13CFGAS_FontMgr17GetFontByCodePageEtjPKw(%"class.fxcrt::RetainPtr"* sret, %class.CFGAS_FontMgr*, i16 zeroext, i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CXFA_FWLTheme14DrawBackgroundERK20CFWL_ThemeBackground(%class.CXFA_FWLTheme*, %class.CFWL_ThemeBackground* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 7, i32 0
  %5 = load %class.CFWL_Widget*, %class.CFWL_Widget** %4, align 8
  %6 = tail call %class.CFWL_WidgetTP* @_ZNK18IFWL_ThemeProvider8GetThemeEPK11CFWL_Widget(%class.IFWL_ThemeProvider* %3, %class.CFWL_Widget* %5) #8
  %7 = bitcast %class.CFWL_WidgetTP* %6 to void (%class.CFWL_WidgetTP*, %class.CFWL_ThemeBackground*)***
  %8 = load void (%class.CFWL_WidgetTP*, %class.CFWL_ThemeBackground*)**, void (%class.CFWL_WidgetTP*, %class.CFWL_ThemeBackground*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.CFWL_WidgetTP*, %class.CFWL_ThemeBackground*)*, void (%class.CFWL_WidgetTP*, %class.CFWL_ThemeBackground*)** %8, i64 2
  %10 = load void (%class.CFWL_WidgetTP*, %class.CFWL_ThemeBackground*)*, void (%class.CFWL_WidgetTP*, %class.CFWL_ThemeBackground*)** %9, align 8
  tail call void %10(%class.CFWL_WidgetTP* %6, %class.CFWL_ThemeBackground* dereferenceable(80) %1) #8
  ret void
}

declare %class.CFWL_WidgetTP* @_ZNK18IFWL_ThemeProvider8GetThemeEPK11CFWL_Widget(%class.IFWL_ThemeProvider*, %class.CFWL_Widget*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CXFA_FWLTheme8DrawTextERK14CFWL_ThemeText(%class.CXFA_FWLTheme*, %class.CFWL_ThemeText* dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = alloca %"class.fxcrt::RetainPtr", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %6, align 8
  %8 = icmp eq %"class.fxcrt::StringDataTemplate"* %7, null
  br i1 %8, label %219, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %7, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %219, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 7, i32 0
  %15 = load %class.CFWL_Widget*, %class.CFWL_Widget** %14, align 8
  %16 = bitcast %class.CFWL_Widget* %15 to i32 (%class.CFWL_Widget*)***
  %17 = load i32 (%class.CFWL_Widget*)**, i32 (%class.CFWL_Widget*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%class.CFWL_Widget*)*, i32 (%class.CFWL_Widget*)** %17, i64 7
  %19 = load i32 (%class.CFWL_Widget*)*, i32 (%class.CFWL_Widget*)** %18, align 8
  %20 = tail call i32 %19(%class.CFWL_Widget* %15) #8
  %21 = icmp eq i32 %20, 10
  %22 = load %class.CFWL_Widget*, %class.CFWL_Widget** %14, align 8
  %23 = icmp eq %class.CFWL_Widget* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %13
  %25 = tail call %class.CFWL_Widget* @_ZNK11CFWL_Widget10GetOutmostEv(%class.CFWL_Widget* nonnull %22) #8
  %26 = icmp eq %class.CFWL_Widget* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %25, i64 0, i32 5
  %29 = bitcast %"class.cppgc::internal::BasicMember.197"* %28 to %class.CXFA_FFWidget**
  %30 = load %class.CXFA_FFWidget*, %class.CXFA_FFWidget** %29, align 8
  br label %31

31:                                               ; preds = %13, %24, %27
  %32 = phi %class.CXFA_FFWidget* [ %30, %27 ], [ null, %24 ], [ null, %13 ]
  %33 = icmp eq %class.CXFA_FFWidget* %32, null
  br i1 %21, label %34, label %127

34:                                               ; preds = %31
  br i1 %33, label %219, label %35

35:                                               ; preds = %34
  %36 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %37 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %36, align 8
  %38 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 2
  tail call void @_ZN12CFDE_TextOut9SetStylesERK13FDE_TextStyle(%class.CFDE_TextOut* %37, %struct.FDE_TextStyle* dereferenceable(3) %38) #8
  %39 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %36, align 8
  %40 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 1
  %41 = load i8, i8* %40, align 8
  tail call void @_ZN12CFDE_TextOut12SetAlignmentE17FDE_TextAlignment(%class.CFDE_TextOut* %39, i8 zeroext %41) #8
  %42 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %36, align 8
  %43 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 2
  tail call void @_ZN12CFDE_TextOut7SetFontERKN5fxcrt9RetainPtrI12CFGAS_GEFontEE(%class.CFDE_TextOut* %42, %"class.fxcrt::RetainPtr"* dereferenceable(8) %43) #8
  %44 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %36, align 8
  tail call void @_ZN12CFDE_TextOut11SetFontSizeEf(%class.CFDE_TextOut* %44, float 1.200000e+01) #8
  %45 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %36, align 8
  %46 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %45, i64 0, i32 9
  store i32 -16777216, i32* %46, align 8
  %47 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 4
  %48 = load i8, i8* %47, align 4
  %49 = icmp eq i8 %48, 11
  br i1 %49, label %50, label %62

50:                                               ; preds = %35
  %51 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 1
  %54 = icmp ne i32 %53, 0
  %55 = and i32 %52, 16512
  %56 = icmp eq i32 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %50
  %59 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %36, align 8
  %60 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %59, i64 0, i32 9
  store i32 -7829368, i32* %60, align 8
  %61 = load i8, i8* %47, align 4
  br label %62

62:                                               ; preds = %58, %35
  %63 = phi i8 [ %48, %35 ], [ %61, %58 ]
  %64 = icmp eq i8 %63, 4
  br i1 %64, label %65, label %68

65:                                               ; preds = %62
  %66 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %36, align 8
  %67 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %66, i64 0, i32 9
  store i32 -16737793, i32* %67, align 8
  br label %68

68:                                               ; preds = %50, %65, %62
  %69 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 4, i32 0
  %70 = load %class.CFGAS_GEGraphics*, %class.CFGAS_GEGraphics** %69, align 8
  %71 = tail call %class.CFX_RenderDevice* @_ZN16CFGAS_GEGraphics15GetRenderDeviceEv(%class.CFGAS_GEGraphics* %70) #8
  %72 = bitcast %class.CFWL_ThemeText* %1 to <4 x float>*
  %73 = load <4 x float>, <4 x float>* %72, align 8
  %74 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 0, i32 4
  %75 = bitcast float* %74 to <2 x float>*
  %76 = load <2 x float>, <2 x float>* %75, align 8
  %77 = tail call %class.CFX_Matrix* @_ZNK16CFGAS_GEGraphics9GetMatrixEv(%class.CFGAS_GEGraphics* %70) #8
  %78 = icmp eq %class.CFX_Matrix* %77, null
  br i1 %78, label %103, label %79

79:                                               ; preds = %68
  %80 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %77, i64 0, i32 2
  %81 = bitcast %class.CFX_Matrix* %77 to <2 x float>*
  %82 = load <2 x float>, <2 x float>* %81, align 4, !noalias !2
  %83 = shufflevector <2 x float> %82, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %84 = bitcast float* %80 to <2 x float>*
  %85 = load <2 x float>, <2 x float>* %84, align 4, !noalias !2
  %86 = shufflevector <2 x float> %85, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %87 = shufflevector <4 x float> %73, <4 x float> undef, <2 x i32> <i32 0, i32 2>
  %88 = shufflevector <2 x float> %87, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %89 = fmul <4 x float> %88, %83
  %90 = shufflevector <4 x float> %73, <4 x float> undef, <2 x i32> <i32 1, i32 3>
  %91 = shufflevector <2 x float> %90, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %92 = fmul <4 x float> %91, %86
  %93 = fadd <4 x float> %89, %92
  %94 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %77, i64 0, i32 4
  %95 = shufflevector <2 x float> %76, <2 x float> undef, <2 x i32> zeroinitializer
  %96 = fmul <2 x float> %95, %82
  %97 = shufflevector <2 x float> %76, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %98 = fmul <2 x float> %97, %85
  %99 = fadd <2 x float> %96, %98
  %100 = bitcast float* %94 to <2 x float>*
  %101 = load <2 x float>, <2 x float>* %100, align 4, !noalias !2
  %102 = fadd <2 x float> %99, %101
  br label %103

103:                                              ; preds = %68, %79
  %104 = phi <4 x float> [ %73, %68 ], [ %93, %79 ]
  %105 = phi <2 x float> [ %76, %68 ], [ %102, %79 ]
  %106 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %36, align 8
  %107 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %106, i64 0, i32 12, i32 0
  %108 = bitcast float* %107 to <4 x float>*
  store <4 x float> %104, <4 x float>* %108, align 8
  %109 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %106, i64 0, i32 12, i32 4
  %110 = extractelement <2 x float> %105, i32 0
  store float %110, float* %109, align 8
  %111 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %106, i64 0, i32 12, i32 5
  %112 = extractelement <2 x float> %105, i32 1
  store float %112, float* %111, align 4
  %113 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %36, align 8
  %114 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %6, align 8, !noalias !5
  %115 = icmp eq %"class.fxcrt::StringDataTemplate"* %114, null
  %116 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %114, i64 0, i32 3
  %117 = select i1 %115, [1 x i32]* @.str.3, [1 x i32]* %116
  %118 = getelementptr inbounds [1 x i32], [1 x i32]* %117, i64 0, i64 0
  br i1 %115, label %122, label %119

119:                                              ; preds = %103
  %120 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %114, i64 0, i32 1
  %121 = load i64, i64* %120, align 8, !noalias !5
  br label %122

122:                                              ; preds = %103, %119
  %123 = phi i64 [ %121, %119 ], [ 0, %103 ]
  %124 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %118, i32** %124, align 8, !alias.scope !5
  %125 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 1
  store i64 %123, i64* %125, align 8, !alias.scope !5
  %126 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 1
  call void @_ZN12CFDE_TextOut13DrawLogicTextEP16CFX_RenderDeviceN5fxcrt18StringViewTemplateIwEERK9CFX_RectF(%class.CFDE_TextOut* %113, %class.CFX_RenderDevice* %71, %"class.fxcrt::StringViewTemplate"* nonnull %3, %class.CFX_RectF* dereferenceable(16) %126) #8
  br label %219

127:                                              ; preds = %31
  br i1 %33, label %219, label %128

128:                                              ; preds = %127
  %129 = getelementptr inbounds %class.CXFA_FFWidget, %class.CXFA_FFWidget* %32, i64 0, i32 4
  %130 = bitcast %"class.cppgc::internal::BasicMember.239"* %129 to %class.CXFA_Node**
  %131 = load %class.CXFA_Node*, %class.CXFA_Node** %130, align 8
  %132 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 4, i32 0
  %133 = load %class.CFGAS_GEGraphics*, %class.CFGAS_GEGraphics** %132, align 8
  %134 = tail call %class.CFX_RenderDevice* @_ZN16CFGAS_GEGraphics15GetRenderDeviceEv(%class.CFGAS_GEGraphics* %133) #8
  %135 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %136 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %135, align 8
  %137 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 2
  tail call void @_ZN12CFDE_TextOut9SetStylesERK13FDE_TextStyle(%class.CFDE_TextOut* %136, %struct.FDE_TextStyle* dereferenceable(3) %137) #8
  %138 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %135, align 8
  %139 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 1
  %140 = load i8, i8* %139, align 8
  tail call void @_ZN12CFDE_TextOut12SetAlignmentE17FDE_TextAlignment(%class.CFDE_TextOut* %138, i8 zeroext %140) #8
  %141 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %135, align 8
  %142 = bitcast %"class.fxcrt::RetainPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #8
  %143 = tail call %class.CXFA_FFDoc* @_ZN13CXFA_FFWidget6GetDocEv(%class.CXFA_FFWidget* nonnull %32) #8
  call void @_ZN9CXFA_Node11GetFGASFontEP10CXFA_FFDoc(%"class.fxcrt::RetainPtr"* nonnull sret %4, %class.CXFA_Node* %131, %class.CXFA_FFDoc* %143) #8
  call void @_ZN12CFDE_TextOut7SetFontERKN5fxcrt9RetainPtrI12CFGAS_GEFontEE(%class.CFDE_TextOut* %141, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %4) #8
  %144 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %144, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %144, align 8
  %146 = icmp eq %class.CFGAS_GEFont* %145, null
  br i1 %146, label %158, label %147

147:                                              ; preds = %128
  %148 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %145, i64 0, i32 0, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = add nsw i64 %149, -1
  store i64 %150, i64* %148, align 8
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %158

152:                                              ; preds = %147
  %153 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %145, i64 0, i32 0
  %154 = bitcast %class.CFGAS_GEFont* %145 to void (%"class.fxcrt::Retainable"*)***
  %155 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %155, i64 1
  %157 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %156, align 8
  call void %157(%"class.fxcrt::Retainable"* nonnull %153) #8
  br label %158

158:                                              ; preds = %128, %147, %152
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #8
  %159 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %135, align 8
  %160 = call float @_ZNK9CXFA_Node11GetFontSizeEv(%class.CXFA_Node* %131) #8
  call void @_ZN12CFDE_TextOut11SetFontSizeEf(%class.CFDE_TextOut* %159, float %160) #8
  %161 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %135, align 8
  %162 = call i32 @_ZNK9CXFA_Node12GetTextColorEv(%class.CXFA_Node* %131) #8
  %163 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %161, i64 0, i32 9
  store i32 %162, i32* %163, align 8
  %164 = bitcast %class.CFWL_ThemeText* %1 to <4 x float>*
  %165 = load <4 x float>, <4 x float>* %164, align 8
  %166 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 0, i32 4
  %167 = bitcast float* %166 to <2 x float>*
  %168 = load <2 x float>, <2 x float>* %167, align 8
  %169 = call %class.CFX_Matrix* @_ZNK16CFGAS_GEGraphics9GetMatrixEv(%class.CFGAS_GEGraphics* %133) #8
  %170 = icmp eq %class.CFX_Matrix* %169, null
  br i1 %170, label %195, label %171

171:                                              ; preds = %158
  %172 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %169, i64 0, i32 2
  %173 = bitcast %class.CFX_Matrix* %169 to <2 x float>*
  %174 = load <2 x float>, <2 x float>* %173, align 4, !noalias !8
  %175 = shufflevector <2 x float> %174, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %176 = bitcast float* %172 to <2 x float>*
  %177 = load <2 x float>, <2 x float>* %176, align 4, !noalias !8
  %178 = shufflevector <2 x float> %177, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %179 = shufflevector <4 x float> %165, <4 x float> undef, <2 x i32> <i32 0, i32 2>
  %180 = shufflevector <2 x float> %179, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %181 = fmul <4 x float> %180, %175
  %182 = shufflevector <4 x float> %165, <4 x float> undef, <2 x i32> <i32 1, i32 3>
  %183 = shufflevector <2 x float> %182, <2 x float> undef, <4 x i32> <i32 0, i32 0, i32 1, i32 1>
  %184 = fmul <4 x float> %183, %178
  %185 = fadd <4 x float> %181, %184
  %186 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %169, i64 0, i32 4
  %187 = shufflevector <2 x float> %168, <2 x float> undef, <2 x i32> zeroinitializer
  %188 = fmul <2 x float> %187, %174
  %189 = shufflevector <2 x float> %168, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %190 = fmul <2 x float> %189, %177
  %191 = fadd <2 x float> %188, %190
  %192 = bitcast float* %186 to <2 x float>*
  %193 = load <2 x float>, <2 x float>* %192, align 4, !noalias !8
  %194 = fadd <2 x float> %191, %193
  br label %195

195:                                              ; preds = %158, %171
  %196 = phi <4 x float> [ %165, %158 ], [ %185, %171 ]
  %197 = phi <2 x float> [ %168, %158 ], [ %194, %171 ]
  %198 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %135, align 8
  %199 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %198, i64 0, i32 12, i32 0
  %200 = bitcast float* %199 to <4 x float>*
  store <4 x float> %196, <4 x float>* %200, align 8
  %201 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %198, i64 0, i32 12, i32 4
  %202 = extractelement <2 x float> %197, i32 0
  store float %202, float* %201, align 8
  %203 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %198, i64 0, i32 12, i32 5
  %204 = extractelement <2 x float> %197, i32 1
  store float %204, float* %203, align 4
  %205 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %135, align 8
  %206 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %6, align 8, !noalias !11
  %207 = icmp eq %"class.fxcrt::StringDataTemplate"* %206, null
  %208 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %206, i64 0, i32 3
  %209 = select i1 %207, [1 x i32]* @.str.3, [1 x i32]* %208
  %210 = getelementptr inbounds [1 x i32], [1 x i32]* %209, i64 0, i64 0
  br i1 %207, label %214, label %211

211:                                              ; preds = %195
  %212 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %206, i64 0, i32 1
  %213 = load i64, i64* %212, align 8, !noalias !11
  br label %214

214:                                              ; preds = %195, %211
  %215 = phi i64 [ %213, %211 ], [ 0, %195 ]
  %216 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %210, i32** %216, align 8, !alias.scope !11
  %217 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 %215, i64* %217, align 8, !alias.scope !11
  %218 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 1
  call void @_ZN12CFDE_TextOut13DrawLogicTextEP16CFX_RenderDeviceN5fxcrt18StringViewTemplateIwEERK9CFX_RectF(%class.CFDE_TextOut* %205, %class.CFX_RenderDevice* %134, %"class.fxcrt::StringViewTemplate"* nonnull %5, %class.CFX_RectF* dereferenceable(16) %218) #8
  br label %219

219:                                              ; preds = %2, %214, %127, %122, %34, %9
  ret void
}

declare void @_ZN12CFDE_TextOut9SetStylesERK13FDE_TextStyle(%class.CFDE_TextOut*, %struct.FDE_TextStyle* dereferenceable(3)) local_unnamed_addr #1

declare void @_ZN12CFDE_TextOut12SetAlignmentE17FDE_TextAlignment(%class.CFDE_TextOut*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN12CFDE_TextOut7SetFontERKN5fxcrt9RetainPtrI12CFGAS_GEFontEE(%class.CFDE_TextOut*, %"class.fxcrt::RetainPtr"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN12CFDE_TextOut11SetFontSizeEf(%class.CFDE_TextOut*, float) local_unnamed_addr #1

declare %class.CFX_RenderDevice* @_ZN16CFGAS_GEGraphics15GetRenderDeviceEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #1

declare %class.CFX_Matrix* @_ZNK16CFGAS_GEGraphics9GetMatrixEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #1

declare void @_ZN12CFDE_TextOut13DrawLogicTextEP16CFX_RenderDeviceN5fxcrt18StringViewTemplateIwEERK9CFX_RectF(%class.CFDE_TextOut*, %class.CFX_RenderDevice*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN9CXFA_Node11GetFGASFontEP10CXFA_FFDoc(%"class.fxcrt::RetainPtr"* sret, %class.CXFA_Node*, %class.CXFA_FFDoc*) local_unnamed_addr #1

declare %class.CXFA_FFDoc* @_ZN13CXFA_FFWidget6GetDocEv(%class.CXFA_FFWidget*) local_unnamed_addr #1

declare float @_ZNK9CXFA_Node11GetFontSizeEv(%class.CXFA_Node*) local_unnamed_addr #1

declare i32 @_ZNK9CXFA_Node12GetTextColorEv(%class.CXFA_Node*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13CXFA_FWLTheme11GetUIMarginERK14CFWL_ThemePart(%class.CXFA_FWLTheme* nocapture readnone, %class.CFWL_ThemePart* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_ThemePart, %class.CFWL_ThemePart* %1, i64 0, i32 7, i32 0
  %4 = load %class.CFWL_Widget*, %class.CFWL_Widget** %3, align 8
  %5 = icmp eq %class.CFWL_Widget* %4, null
  br i1 %5, label %55, label %6

6:                                                ; preds = %2
  %7 = tail call %class.CFWL_Widget* @_ZNK11CFWL_Widget10GetOutmostEv(%class.CFWL_Widget* nonnull %4) #8
  %8 = icmp eq %class.CFWL_Widget* %7, null
  br i1 %8, label %55, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %7, i64 0, i32 5
  %11 = bitcast %"class.cppgc::internal::BasicMember.197"* %10 to %class.CXFA_FFWidget**
  %12 = load %class.CXFA_FFWidget*, %class.CXFA_FFWidget** %11, align 8
  %13 = icmp eq %class.CXFA_FFWidget* %12, null
  br i1 %13, label %55, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.CXFA_FFWidget, %class.CXFA_FFWidget* %12, i64 0, i32 1
  %16 = bitcast %"class.cppgc::internal::BasicMember.236"* %15 to %class.CXFA_ContentLayoutItem**
  %17 = load %class.CXFA_ContentLayoutItem*, %class.CXFA_ContentLayoutItem** %16, align 8
  %18 = getelementptr inbounds %class.CXFA_FFWidget, %class.CXFA_FFWidget* %12, i64 0, i32 4
  %19 = bitcast %"class.cppgc::internal::BasicMember.239"* %18 to %class.CXFA_Node**
  %20 = load %class.CXFA_Node*, %class.CXFA_Node** %19, align 8
  %21 = tail call { <2 x float>, <2 x float> } @_ZN9CXFA_Node11GetUIMarginEv(%class.CXFA_Node* %20) #8
  %22 = extractvalue { <2 x float>, <2 x float> } %21, 0
  %23 = extractvalue { <2 x float>, <2 x float> } %21, 1
  %24 = tail call %class.CXFA_Para* @_ZNK9CXFA_Node15GetParaIfExistsEv(%class.CXFA_Node* %20) #8
  %25 = icmp eq %class.CXFA_Para* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %14
  %27 = tail call float @_ZN9CXFA_Para13GetMarginLeftEv(%class.CXFA_Para* nonnull %24) #8
  %28 = extractelement <2 x float> %22, i32 0
  %29 = fadd float %28, %27
  %30 = insertelement <2 x float> %22, float %29, i32 0
  %31 = tail call zeroext i1 @_ZN9CXFA_Node11IsMultiLineEv(%class.CXFA_Node* %20) #8
  br i1 %31, label %32, label %37

32:                                               ; preds = %26
  %33 = tail call float @_ZN9CXFA_Para14GetMarginRightEv(%class.CXFA_Para* nonnull %24) #8
  %34 = extractelement <2 x float> %23, i32 0
  %35 = fadd float %34, %33
  %36 = insertelement <2 x float> %23, float %35, i32 0
  br label %37

37:                                               ; preds = %14, %26, %32
  %38 = phi <2 x float> [ %36, %32 ], [ %23, %26 ], [ %23, %14 ]
  %39 = phi <2 x float> [ %30, %32 ], [ %30, %26 ], [ %22, %14 ]
  %40 = getelementptr inbounds %class.CXFA_ContentLayoutItem, %class.CXFA_ContentLayoutItem* %17, i64 0, i32 4
  %41 = bitcast %"class.cppgc::internal::BasicMember.236"* %40 to %class.CXFA_ContentLayoutItem**
  %42 = load %class.CXFA_ContentLayoutItem*, %class.CXFA_ContentLayoutItem** %41, align 8
  %43 = icmp eq %class.CXFA_ContentLayoutItem* %42, null
  %44 = getelementptr inbounds %class.CXFA_ContentLayoutItem, %class.CXFA_ContentLayoutItem* %17, i64 0, i32 5
  %45 = bitcast %"class.cppgc::internal::BasicMember.236"* %44 to %class.CXFA_ContentLayoutItem**
  %46 = load %class.CXFA_ContentLayoutItem*, %class.CXFA_ContentLayoutItem** %45, align 8
  %47 = icmp ne %class.CXFA_ContentLayoutItem* %46, null
  br i1 %43, label %48, label %51

48:                                               ; preds = %37
  %49 = insertelement <2 x float> %38, float 0.000000e+00, i32 1
  %50 = select i1 %47, <2 x float> %49, <2 x float> %38
  br label %55

51:                                               ; preds = %37
  %52 = insertelement <2 x float> %39, float 0.000000e+00, i32 1
  %53 = insertelement <2 x float> %38, float 0.000000e+00, i32 1
  %54 = select i1 %47, <2 x float> %53, <2 x float> %38
  br label %55

55:                                               ; preds = %2, %6, %48, %51, %9
  %56 = phi <2 x float> [ zeroinitializer, %9 ], [ %50, %48 ], [ %54, %51 ], [ zeroinitializer, %6 ], [ zeroinitializer, %2 ]
  %57 = phi <2 x float> [ zeroinitializer, %9 ], [ %39, %48 ], [ %52, %51 ], [ zeroinitializer, %6 ], [ zeroinitializer, %2 ]
  %58 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %57, 0
  %59 = insertvalue { <2 x float>, <2 x float> } %58, <2 x float> %56, 1
  ret { <2 x float>, <2 x float> } %59
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare { <2 x float>, <2 x float> } @_ZN9CXFA_Node11GetUIMarginEv(%class.CXFA_Node*) local_unnamed_addr #1

declare %class.CXFA_Para* @_ZNK9CXFA_Node15GetParaIfExistsEv(%class.CXFA_Node*) local_unnamed_addr #1

declare float @_ZN9CXFA_Para13GetMarginLeftEv(%class.CXFA_Para*) local_unnamed_addr #1

declare zeroext i1 @_ZN9CXFA_Node11IsMultiLineEv(%class.CXFA_Node*) local_unnamed_addr #1

declare float @_ZN9CXFA_Para14GetMarginRightEv(%class.CXFA_Para*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZNK13CXFA_FWLTheme15GetCXBorderSizeEv(%class.CXFA_FWLTheme* nocapture readnone) unnamed_addr #4 align 2 {
  ret float 1.000000e+00
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZNK13CXFA_FWLTheme15GetCYBorderSizeEv(%class.CXFA_FWLTheme* nocapture readnone) unnamed_addr #4 align 2 {
  ret float 1.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK13CXFA_FWLTheme11GetFontSizeERK14CFWL_ThemePart(%class.CXFA_FWLTheme* nocapture readnone, %class.CFWL_ThemePart* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_ThemePart, %class.CFWL_ThemePart* %1, i64 0, i32 7, i32 0
  %4 = load %class.CFWL_Widget*, %class.CFWL_Widget** %3, align 8
  %5 = icmp eq %class.CFWL_Widget* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = tail call %class.CFWL_Widget* @_ZNK11CFWL_Widget10GetOutmostEv(%class.CFWL_Widget* nonnull %4) #8
  %8 = icmp eq %class.CFWL_Widget* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %7, i64 0, i32 5
  %11 = bitcast %"class.cppgc::internal::BasicMember.197"* %10 to %class.CXFA_FFWidget**
  %12 = load %class.CXFA_FFWidget*, %class.CXFA_FFWidget** %11, align 8
  %13 = icmp eq %class.CXFA_FFWidget* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.CXFA_FFWidget, %class.CXFA_FFWidget* %12, i64 0, i32 4
  %16 = bitcast %"class.cppgc::internal::BasicMember.239"* %15 to %class.CXFA_Node**
  %17 = load %class.CXFA_Node*, %class.CXFA_Node** %16, align 8
  %18 = tail call float @_ZNK9CXFA_Node11GetFontSizeEv(%class.CXFA_Node* %17) #8
  br label %19

19:                                               ; preds = %2, %6, %9, %14
  %20 = phi float [ %18, %14 ], [ 1.200000e+01, %9 ], [ 1.200000e+01, %6 ], [ 1.200000e+01, %2 ]
  ret float %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CXFA_FWLTheme7GetFontERK14CFWL_ThemePart(%"class.fxcrt::RetainPtr"* noalias sret, %class.CXFA_FWLTheme*, %class.CFWL_ThemePart* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CFWL_ThemePart, %class.CFWL_ThemePart* %2, i64 0, i32 7, i32 0
  %5 = load %class.CFWL_Widget*, %class.CFWL_Widget** %4, align 8
  %6 = icmp eq %class.CFWL_Widget* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %3
  %8 = tail call %class.CFWL_Widget* @_ZNK11CFWL_Widget10GetOutmostEv(%class.CFWL_Widget* nonnull %5) #8
  %9 = icmp eq %class.CFWL_Widget* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %8, i64 0, i32 5
  %12 = bitcast %"class.cppgc::internal::BasicMember.197"* %11 to %class.CXFA_FFWidget**
  %13 = load %class.CXFA_FFWidget*, %class.CXFA_FFWidget** %12, align 8
  %14 = icmp eq %class.CXFA_FFWidget* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %class.CXFA_FFWidget, %class.CXFA_FFWidget* %13, i64 0, i32 4
  %17 = bitcast %"class.cppgc::internal::BasicMember.239"* %16 to %class.CXFA_Node**
  %18 = load %class.CXFA_Node*, %class.CXFA_Node** %17, align 8
  %19 = tail call %class.CXFA_FFDoc* @_ZN13CXFA_FFWidget6GetDocEv(%class.CXFA_FFWidget* nonnull %13) #8
  tail call void @_ZN9CXFA_Node11GetFGASFontEP10CXFA_FFDoc(%"class.fxcrt::RetainPtr"* sret %0, %class.CXFA_Node* %18, %class.CXFA_FFDoc* %19) #8
  br label %34

20:                                               ; preds = %3, %7, %10
  %21 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %1, i64 0, i32 0
  %22 = load %class.CFWL_Widget*, %class.CFWL_Widget** %4, align 8
  %23 = tail call %class.CFWL_WidgetTP* @_ZNK18IFWL_ThemeProvider8GetThemeEPK11CFWL_Widget(%class.IFWL_ThemeProvider* %21, %class.CFWL_Widget* %22) #8
  %24 = tail call dereferenceable(8) %"class.fxcrt::RetainPtr"* @_ZNK13CFWL_WidgetTP7GetFontEv(%class.CFWL_WidgetTP* %23) #8
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %25, align 8
  %27 = ptrtoint %class.CFGAS_GEFont* %26 to i64
  %28 = bitcast %"class.fxcrt::RetainPtr"* %0 to i64*
  store i64 %27, i64* %28, align 8
  %29 = icmp eq %class.CFGAS_GEFont* %26, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %20
  %31 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %26, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, 1
  store i64 %33, i64* %31, align 8
  br label %34

34:                                               ; preds = %30, %20, %15
  ret void
}

declare dereferenceable(8) %"class.fxcrt::RetainPtr"* @_ZNK13CFWL_WidgetTP7GetFontEv(%class.CFWL_WidgetTP*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK13CXFA_FWLTheme13GetLineHeightERK14CFWL_ThemePart(%class.CXFA_FWLTheme* nocapture readnone, %class.CFWL_ThemePart* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_ThemePart, %class.CFWL_ThemePart* %1, i64 0, i32 7, i32 0
  %4 = load %class.CFWL_Widget*, %class.CFWL_Widget** %3, align 8
  %5 = icmp eq %class.CFWL_Widget* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = tail call %class.CFWL_Widget* @_ZNK11CFWL_Widget10GetOutmostEv(%class.CFWL_Widget* nonnull %4) #8
  %8 = icmp eq %class.CFWL_Widget* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %7, i64 0, i32 5
  %11 = bitcast %"class.cppgc::internal::BasicMember.197"* %10 to %class.CXFA_FFWidget**
  %12 = load %class.CXFA_FFWidget*, %class.CXFA_FFWidget** %11, align 8
  %13 = icmp eq %class.CXFA_FFWidget* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.CXFA_FFWidget, %class.CXFA_FFWidget* %12, i64 0, i32 4
  %16 = bitcast %"class.cppgc::internal::BasicMember.239"* %15 to %class.CXFA_Node**
  %17 = load %class.CXFA_Node*, %class.CXFA_Node** %16, align 8
  %18 = tail call float @_ZNK9CXFA_Node13GetLineHeightEv(%class.CXFA_Node* %17) #8
  br label %19

19:                                               ; preds = %2, %6, %9, %14
  %20 = phi float [ %18, %14 ], [ 1.200000e+01, %9 ], [ 1.200000e+01, %6 ], [ 1.200000e+01, %2 ]
  ret float %20
}

declare float @_ZNK9CXFA_Node13GetLineHeightEv(%class.CXFA_Node*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZNK13CXFA_FWLTheme17GetScrollBarWidthEv(%class.CXFA_FWLTheme* nocapture readnone) unnamed_addr #4 align 2 {
  ret float 9.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13CXFA_FWLTheme12GetTextColorERK14CFWL_ThemePart(%class.CXFA_FWLTheme* nocapture readnone, %class.CFWL_ThemePart* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_ThemePart, %class.CFWL_ThemePart* %1, i64 0, i32 7, i32 0
  %4 = load %class.CFWL_Widget*, %class.CFWL_Widget** %3, align 8
  %5 = icmp eq %class.CFWL_Widget* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = tail call %class.CFWL_Widget* @_ZNK11CFWL_Widget10GetOutmostEv(%class.CFWL_Widget* nonnull %4) #8
  %8 = icmp eq %class.CFWL_Widget* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %7, i64 0, i32 5
  %11 = bitcast %"class.cppgc::internal::BasicMember.197"* %10 to %class.CXFA_FFWidget**
  %12 = load %class.CXFA_FFWidget*, %class.CXFA_FFWidget** %11, align 8
  %13 = icmp eq %class.CXFA_FFWidget* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.CXFA_FFWidget, %class.CXFA_FFWidget* %12, i64 0, i32 4
  %16 = bitcast %"class.cppgc::internal::BasicMember.239"* %15 to %class.CXFA_Node**
  %17 = load %class.CXFA_Node*, %class.CXFA_Node** %16, align 8
  %18 = tail call i32 @_ZNK9CXFA_Node12GetTextColorEv(%class.CXFA_Node* %17) #8
  br label %19

19:                                               ; preds = %2, %6, %9, %14
  %20 = phi i32 [ %18, %14 ], [ -16777216, %9 ], [ -16777216, %6 ], [ -16777216, %2 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CXFA_FWLTheme18GetSpaceAboveBelowERK14CFWL_ThemePart(%class.CFX_STemplate* noalias nocapture sret, %class.CXFA_FWLTheme* nocapture readnone, %class.CFWL_ThemePart* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %0, i64 0, i32 0
  %5 = getelementptr inbounds %class.CFX_STemplate, %class.CFX_STemplate* %0, i64 0, i32 1
  store float 0.000000e+00, float* %4, align 4
  store float 0.000000e+00, float* %5, align 4
  %6 = getelementptr inbounds %class.CFWL_ThemePart, %class.CFWL_ThemePart* %2, i64 0, i32 7, i32 0
  %7 = load %class.CFWL_Widget*, %class.CFWL_Widget** %6, align 8
  %8 = icmp eq %class.CFWL_Widget* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = tail call %class.CFWL_Widget* @_ZNK11CFWL_Widget10GetOutmostEv(%class.CFWL_Widget* nonnull %7) #8
  %11 = icmp eq %class.CFWL_Widget* %10, null
  br i1 %11, label %26, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %10, i64 0, i32 5
  %14 = bitcast %"class.cppgc::internal::BasicMember.197"* %13 to %class.CXFA_FFWidget**
  %15 = load %class.CXFA_FFWidget*, %class.CXFA_FFWidget** %14, align 8
  %16 = icmp eq %class.CXFA_FFWidget* %15, null
  br i1 %16, label %26, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CXFA_FFWidget, %class.CXFA_FFWidget* %15, i64 0, i32 4
  %19 = bitcast %"class.cppgc::internal::BasicMember.239"* %18 to %class.CXFA_Node**
  %20 = load %class.CXFA_Node*, %class.CXFA_Node** %19, align 8
  %21 = tail call %class.CXFA_Para* @_ZNK9CXFA_Node15GetParaIfExistsEv(%class.CXFA_Node* %20) #8
  %22 = icmp eq %class.CXFA_Para* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = tail call float @_ZN9CXFA_Para13GetSpaceAboveEv(%class.CXFA_Para* nonnull %21) #8
  store float %24, float* %4, align 4
  %25 = tail call float @_ZN9CXFA_Para13GetSpaceBelowEv(%class.CXFA_Para* nonnull %21) #8
  store float %25, float* %5, align 4
  br label %26

26:                                               ; preds = %3, %9, %23, %17, %12
  ret void
}

declare float @_ZN9CXFA_Para13GetSpaceAboveEv(%class.CXFA_Para*) local_unnamed_addr #1

declare float @_ZN9CXFA_Para13GetSpaceBelowEv(%class.CXFA_Para*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CXFA_FWLTheme12CalcTextRectERK14CFWL_ThemeTextP9CFX_RectF(%class.CXFA_FWLTheme*, %class.CFWL_ThemeText* dereferenceable(88), %class.CFX_RectF*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = alloca %"class.fxcrt::RetainPtr", align 8
  %6 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %7 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %7, align 8
  %9 = icmp eq %class.CFDE_TextOut* %8, null
  br i1 %9, label %101, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 0, i32 7, i32 0
  %12 = load %class.CFWL_Widget*, %class.CFWL_Widget** %11, align 8
  %13 = icmp eq %class.CFWL_Widget* %12, null
  br i1 %13, label %101, label %14

14:                                               ; preds = %10
  %15 = tail call %class.CFWL_Widget* @_ZNK11CFWL_Widget10GetOutmostEv(%class.CFWL_Widget* nonnull %12) #8
  %16 = icmp eq %class.CFWL_Widget* %15, null
  br i1 %16, label %101, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %15, i64 0, i32 5
  %19 = bitcast %"class.cppgc::internal::BasicMember.197"* %18 to %class.CXFA_FFWidget**
  %20 = load %class.CXFA_FFWidget*, %class.CXFA_FFWidget** %19, align 8
  %21 = icmp eq %class.CXFA_FFWidget* %20, null
  br i1 %21, label %101, label %22

22:                                               ; preds = %17
  %23 = load %class.CFWL_Widget*, %class.CFWL_Widget** %11, align 8
  %24 = bitcast %class.CFWL_Widget* %23 to i32 (%class.CFWL_Widget*)***
  %25 = load i32 (%class.CFWL_Widget*)**, i32 (%class.CFWL_Widget*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%class.CFWL_Widget*)*, i32 (%class.CFWL_Widget*)** %25, i64 7
  %27 = load i32 (%class.CFWL_Widget*)*, i32 (%class.CFWL_Widget*)** %26, align 8
  %28 = tail call i32 %27(%class.CFWL_Widget* %23) #8
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %30, label %55

30:                                               ; preds = %22
  %31 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %7, align 8
  %32 = getelementptr inbounds %class.CXFA_FWLTheme, %class.CXFA_FWLTheme* %0, i64 0, i32 2
  tail call void @_ZN12CFDE_TextOut7SetFontERKN5fxcrt9RetainPtrI12CFGAS_GEFontEE(%class.CFDE_TextOut* %31, %"class.fxcrt::RetainPtr"* dereferenceable(8) %32) #8
  %33 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %7, align 8
  tail call void @_ZN12CFDE_TextOut11SetFontSizeEf(%class.CFDE_TextOut* %33, float 1.200000e+01) #8
  %34 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %7, align 8
  %35 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %34, i64 0, i32 9
  store i32 -16777216, i32* %35, align 8
  %36 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %7, align 8
  %37 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 1
  %38 = load i8, i8* %37, align 8
  tail call void @_ZN12CFDE_TextOut12SetAlignmentE17FDE_TextAlignment(%class.CFDE_TextOut* %36, i8 zeroext %38) #8
  %39 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %7, align 8
  %40 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 2
  tail call void @_ZN12CFDE_TextOut9SetStylesERK13FDE_TextStyle(%class.CFDE_TextOut* %39, %struct.FDE_TextStyle* dereferenceable(3) %40) #8
  %41 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %7, align 8
  %42 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %42, align 8, !noalias !14
  %44 = icmp eq %"class.fxcrt::StringDataTemplate"* %43, null
  %45 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %43, i64 0, i32 3
  %46 = select i1 %44, [1 x i32]* @.str.3, [1 x i32]* %45
  %47 = getelementptr inbounds [1 x i32], [1 x i32]* %46, i64 0, i64 0
  br i1 %44, label %51, label %48

48:                                               ; preds = %30
  %49 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %43, i64 0, i32 1
  %50 = load i64, i64* %49, align 8, !noalias !14
  br label %51

51:                                               ; preds = %30, %48
  %52 = phi i64 [ %50, %48 ], [ 0, %30 ]
  %53 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %47, i32** %53, align 8, !alias.scope !14
  %54 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %4, i64 0, i32 0, i32 1
  store i64 %52, i64* %54, align 8, !alias.scope !14
  call void @_ZN12CFDE_TextOut13CalcLogicSizeEN5fxcrt18StringViewTemplateIwEEP9CFX_RectF(%class.CFDE_TextOut* %41, %"class.fxcrt::StringViewTemplate"* nonnull %4, %class.CFX_RectF* %2) #8
  br label %101

55:                                               ; preds = %22
  %56 = getelementptr inbounds %class.CXFA_FFWidget, %class.CXFA_FFWidget* %20, i64 0, i32 4
  %57 = bitcast %"class.cppgc::internal::BasicMember.239"* %56 to %class.CXFA_Node**
  %58 = load %class.CXFA_Node*, %class.CXFA_Node** %57, align 8
  %59 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %7, align 8
  %60 = bitcast %"class.fxcrt::RetainPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  %61 = tail call %class.CXFA_FFDoc* @_ZN13CXFA_FFWidget6GetDocEv(%class.CXFA_FFWidget* nonnull %20) #8
  call void @_ZN9CXFA_Node11GetFGASFontEP10CXFA_FFDoc(%"class.fxcrt::RetainPtr"* nonnull sret %5, %class.CXFA_Node* %58, %class.CXFA_FFDoc* %61) #8
  call void @_ZN12CFDE_TextOut7SetFontERKN5fxcrt9RetainPtrI12CFGAS_GEFontEE(%class.CFDE_TextOut* %59, %"class.fxcrt::RetainPtr"* nonnull dereferenceable(8) %5) #8
  %62 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %class.CFGAS_GEFont*, %class.CFGAS_GEFont** %62, align 8
  store %class.CFGAS_GEFont* null, %class.CFGAS_GEFont** %62, align 8
  %64 = icmp eq %class.CFGAS_GEFont* %63, null
  br i1 %64, label %76, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %63, i64 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = add nsw i64 %67, -1
  store i64 %68, i64* %66, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %65
  %71 = getelementptr inbounds %class.CFGAS_GEFont, %class.CFGAS_GEFont* %63, i64 0, i32 0
  %72 = bitcast %class.CFGAS_GEFont* %63 to void (%"class.fxcrt::Retainable"*)***
  %73 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %73, i64 1
  %75 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %74, align 8
  call void %75(%"class.fxcrt::Retainable"* nonnull %71) #8
  br label %76

76:                                               ; preds = %55, %65, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %77 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %7, align 8
  %78 = call float @_ZNK9CXFA_Node11GetFontSizeEv(%class.CXFA_Node* %58) #8
  call void @_ZN12CFDE_TextOut11SetFontSizeEf(%class.CFDE_TextOut* %77, float %78) #8
  %79 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %7, align 8
  %80 = call i32 @_ZNK9CXFA_Node12GetTextColorEv(%class.CXFA_Node* %58) #8
  %81 = getelementptr inbounds %class.CFDE_TextOut, %class.CFDE_TextOut* %79, i64 0, i32 9
  store i32 %80, i32* %81, align 8
  %82 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %7, align 8
  %83 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 1
  %84 = load i8, i8* %83, align 8
  call void @_ZN12CFDE_TextOut12SetAlignmentE17FDE_TextAlignment(%class.CFDE_TextOut* %82, i8 zeroext %84) #8
  %85 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %7, align 8
  %86 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 2
  call void @_ZN12CFDE_TextOut9SetStylesERK13FDE_TextStyle(%class.CFDE_TextOut* %85, %struct.FDE_TextStyle* dereferenceable(3) %86) #8
  %87 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %7, align 8
  %88 = getelementptr inbounds %class.CFWL_ThemeText, %class.CFWL_ThemeText* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %88, align 8, !noalias !17
  %90 = icmp eq %"class.fxcrt::StringDataTemplate"* %89, null
  %91 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %89, i64 0, i32 3
  %92 = select i1 %90, [1 x i32]* @.str.3, [1 x i32]* %91
  %93 = getelementptr inbounds [1 x i32], [1 x i32]* %92, i64 0, i64 0
  br i1 %90, label %97, label %94

94:                                               ; preds = %76
  %95 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %89, i64 0, i32 1
  %96 = load i64, i64* %95, align 8, !noalias !17
  br label %97

97:                                               ; preds = %76, %94
  %98 = phi i64 [ %96, %94 ], [ 0, %76 ]
  %99 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  store i32* %93, i32** %99, align 8, !alias.scope !17
  %100 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %6, i64 0, i32 0, i32 1
  store i64 %98, i64* %100, align 8, !alias.scope !17
  call void @_ZN12CFDE_TextOut13CalcLogicSizeEN5fxcrt18StringViewTemplateIwEEP9CFX_RectF(%class.CFDE_TextOut* %87, %"class.fxcrt::StringViewTemplate"* nonnull %6, %class.CFX_RectF* %2) #8
  br label %101

101:                                              ; preds = %3, %10, %14, %51, %97, %17
  ret void
}

declare void @_ZN12CFDE_TextOut13CalcLogicSizeEN5fxcrt18StringViewTemplateIwEEP9CFX_RectF(%class.CFDE_TextOut*, %"class.fxcrt::StringViewTemplate"*, %class.CFX_RectF*) local_unnamed_addr #1

declare %class.CFWL_Widget* @_ZNK11CFWL_Widget10GetOutmostEv(%class.CFWL_Widget*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @wcslen(i32* nocapture) local_unnamed_addr #5

declare void @_ZN5cppgc8internal34PreFinalizerRegistrationDispatcher20RegisterPrefinalizerENS1_12PreFinalizerE(i8*, i1 (%"class.cppgc::LivenessBroker"*, i8*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN13CXFA_FWLTheme18InvokePreFinalizerERKN5cppgc14LivenessBrokerEPv(%"class.cppgc::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZNK5cppgc14LivenessBroker21IsHeapObjectAliveImplEPKv(%"class.cppgc::LivenessBroker"* %0, i8* nonnull %1) #8
  br i1 %5, label %14, label %6

6:                                                ; preds = %2, %4
  %7 = getelementptr inbounds i8, i8* %1, i64 96
  %8 = bitcast i8* %7 to %class.CFDE_TextOut**
  %9 = load %class.CFDE_TextOut*, %class.CFDE_TextOut** %8, align 8
  store %class.CFDE_TextOut* null, %class.CFDE_TextOut** %8, align 8
  %10 = icmp eq %class.CFDE_TextOut* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  tail call void @_ZN12CFDE_TextOutD1Ev(%class.CFDE_TextOut* nonnull %9) #8
  %12 = bitcast %class.CFDE_TextOut* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  br label %13

13:                                               ; preds = %6, %11
  tail call void @_ZN16CFWL_FontManager15DestroyInstanceEv() #8
  br label %14

14:                                               ; preds = %4, %13
  %15 = phi i1 [ true, %13 ], [ false, %4 ]
  ret i1 %15
}

declare zeroext i1 @_ZNK5cppgc14LivenessBroker21IsHeapObjectAliveImplEPKv(%"class.cppgc::LivenessBroker"*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN12CFDE_TextOutC1Ev(%class.CFDE_TextOut*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12CFDE_TextOutD1Ev(%class.CFDE_TextOut*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI10CXFA_FFAppE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CXFA_FFApp*
  %4 = bitcast i8* %1 to void (%class.CXFA_FFApp*, %"class.cppgc::Visitor"*)***
  %5 = load void (%class.CXFA_FFApp*, %"class.cppgc::Visitor"*)**, void (%class.CXFA_FFApp*, %"class.cppgc::Visitor"*)*** %4, align 8
  %6 = load void (%class.CXFA_FFApp*, %"class.cppgc::Visitor"*)*, void (%class.CXFA_FFApp*, %"class.cppgc::Visitor"*)** %5, align 8
  tail call void %6(%class.CXFA_FFApp* %3, %"class.cppgc::Visitor"* %0) #8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!4 = distinct !{!4, !"_ZNK10CFX_MatrixmlERKS_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!10 = distinct !{!10, !"_ZNK10CFX_MatrixmlERKS_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!13 = distinct !{!13, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!19 = distinct !{!19, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
