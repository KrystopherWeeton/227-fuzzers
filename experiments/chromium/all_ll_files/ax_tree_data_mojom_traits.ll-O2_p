; ModuleID = '../../ui/accessibility/mojom/ax_tree_data_mojom_traits.cc'
source_filename = "../../ui/accessibility/mojom/ax_tree_data_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ax::mojom::internal::AXTreeData_Data" = type { %"struct.mojo::internal::StructHeader", %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data", %"struct.mojo::internal::Pointer.0", i8, [3 x i8], float, %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0", i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"class.ax::mojom::internal::AXTreeID_Data" = type { i32, i32, %"union.ax::mojom::internal::AXTreeID_Data::Union_" }
%"union.ax::mojom::internal::AXTreeID_Data::Union_" = type { %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.3", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.1"*, %"class.mojo::ScopedHandleBase.1"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.1" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.1"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.5" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.14, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.16", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.13", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.14 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15" }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i32 }
%"struct.ui::AXTreeData" = type <{ i32 (...)**, %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.ui::AXTreeID", %"class.std::__1::basic_string", i8, [3 x i8], float, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, [3 x i8], i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.ui::AXTreeID" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.23 }
%union.anon.23 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom18AXTreeDataDataViewEN2ui10AXTreeDataEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXTreeData_Data"*, %"class.mojo::Message"*, %"struct.ui::AXTreeData"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data"* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 1
  %10 = tail call zeroext i1 @_ZN4mojo11UnionTraitsIN2ax5mojom16AXTreeIDDataViewEN2ui8AXTreeIDEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXTreeID_Data"* nonnull %4, %"class.mojo::Message"* %1, %"class.ui::AXTreeID"* %9) #4
  br i1 %10, label %11, label %281

11:                                               ; preds = %3, %8
  %12 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 2
  %13 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 2
  %18 = tail call zeroext i1 @_ZN4mojo11UnionTraitsIN2ax5mojom16AXTreeIDDataViewEN2ui8AXTreeIDEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXTreeID_Data"* nonnull %12, %"class.mojo::Message"* %1, %"class.ui::AXTreeID"* %17) #4
  br i1 %18, label %19, label %281

19:                                               ; preds = %11, %16
  %20 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 3
  %21 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 3
  %26 = tail call zeroext i1 @_ZN4mojo11UnionTraitsIN2ax5mojom16AXTreeIDDataViewEN2ui8AXTreeIDEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXTreeID_Data"* nonnull %20, %"class.mojo::Message"* %1, %"class.ui::AXTreeID"* %25) #4
  br i1 %26, label %27, label %281

27:                                               ; preds = %19, %24
  %28 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 4
  %29 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 4
  %30 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %29, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  %33 = bitcast %"struct.mojo::internal::Pointer.0"* %29 to i8*
  %34 = getelementptr inbounds i8, i8* %33, i64 %31
  br i1 %32, label %80, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = getelementptr inbounds i8, i8* %34, i64 4
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = zext i32 %39 to i64
  %41 = tail call i1 @llvm.is.constant.i64(i64 %40) #4
  %42 = icmp ult i32 %39, 23
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %62

44:                                               ; preds = %35
  %45 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %40, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  br label %56

53:                                               ; preds = %44
  %54 = trunc i32 %39 to i8
  store i8 %54, i8* %46, align 1
  %55 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  br label %56

56:                                               ; preds = %53, %49
  %57 = phi i8* [ %52, %49 ], [ %55, %53 ]
  %58 = icmp eq i32 %39, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %57, i8* align 1 %36, i64 %40, i1 false) #4
  br label %60

60:                                               ; preds = %59, %56
  %61 = getelementptr inbounds i8, i8* %57, i64 %40
  store i8 0, i8* %61, align 1
  br label %65

62:                                               ; preds = %35
  %63 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %28, i8* %36, i64 %40) #4
  %64 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %65

65:                                               ; preds = %62, %60
  %66 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %64, %62 ], [ %45, %60 ]
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %66, i64 0, i32 1, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %73 = select i1 %69, i8* %71, i8* %72
  %74 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %68 to i64
  %77 = select i1 %69, i64 %75, i64 %76
  %78 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %73, i64 %77) #4
  br i1 %78, label %80, label %79

79:                                               ; preds = %65
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #4
  br label %80

80:                                               ; preds = %79, %65, %27
  %81 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 5
  %82 = load i8, i8* %81, align 1
  %83 = and i8 %82, 1
  %84 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 5
  store i8 %83, i8* %84, align 8
  %85 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 7
  %86 = bitcast float* %85 to i32*
  %87 = load i32, i32* %86, align 1
  %88 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 7
  %89 = bitcast float* %88 to i32*
  store i32 %87, i32* %89, align 4
  %90 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 8
  %91 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 8
  %92 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %91, i64 0, i32 0
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 0
  %95 = bitcast %"struct.mojo::internal::Pointer.0"* %91 to i8*
  %96 = getelementptr inbounds i8, i8* %95, i64 %93
  br i1 %94, label %142, label %97

97:                                               ; preds = %80
  %98 = getelementptr inbounds i8, i8* %96, i64 8
  %99 = getelementptr inbounds i8, i8* %96, i64 4
  %100 = bitcast i8* %99 to i32*
  %101 = load i32, i32* %100, align 1
  %102 = zext i32 %101 to i64
  %103 = tail call i1 @llvm.is.constant.i64(i64 %102) #4
  %104 = icmp ult i32 %101, 23
  %105 = and i1 %104, %103
  br i1 %105, label %106, label %124

106:                                              ; preds = %97
  %107 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %115

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %102, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  br label %118

115:                                              ; preds = %106
  %116 = trunc i32 %101 to i8
  store i8 %116, i8* %108, align 1
  %117 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  br label %118

118:                                              ; preds = %115, %111
  %119 = phi i8* [ %114, %111 ], [ %117, %115 ]
  %120 = icmp eq i32 %101, 0
  br i1 %120, label %122, label %121

121:                                              ; preds = %118
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %119, i8* align 1 %98, i64 %102, i1 false) #4
  br label %122

122:                                              ; preds = %121, %118
  %123 = getelementptr inbounds i8, i8* %119, i64 %102
  store i8 0, i8* %123, align 1
  br label %127

124:                                              ; preds = %97
  %125 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %90, i8* %98, i64 %102) #4
  %126 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %127

127:                                              ; preds = %124, %122
  %128 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %126, %124 ], [ %107, %122 ]
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  %135 = select i1 %131, i8* %133, i8* %134
  %136 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %137 = load i64, i64* %136, align 8
  %138 = zext i8 %130 to i64
  %139 = select i1 %131, i64 %137, i64 %138
  %140 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %135, i64 %139) #4
  br i1 %140, label %142, label %141

141:                                              ; preds = %127
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #4
  br label %142

142:                                              ; preds = %141, %127, %80
  %143 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 9
  %144 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 9
  %145 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %144, i64 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = icmp eq i64 %146, 0
  %148 = bitcast %"struct.mojo::internal::Pointer.0"* %144 to i8*
  %149 = getelementptr inbounds i8, i8* %148, i64 %146
  br i1 %147, label %195, label %150

150:                                              ; preds = %142
  %151 = getelementptr inbounds i8, i8* %149, i64 8
  %152 = getelementptr inbounds i8, i8* %149, i64 4
  %153 = bitcast i8* %152 to i32*
  %154 = load i32, i32* %153, align 1
  %155 = zext i32 %154 to i64
  %156 = tail call i1 @llvm.is.constant.i64(i64 %155) #4
  %157 = icmp ult i32 %154, 23
  %158 = and i1 %157, %156
  br i1 %158, label %159, label %177

159:                                              ; preds = %150
  %160 = bitcast %"class.std::__1::basic_string"* %143 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  br i1 %163, label %164, label %168

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %155, i64* %165, align 8
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load i8*, i8** %166, align 8
  br label %171

168:                                              ; preds = %159
  %169 = trunc i32 %154 to i8
  store i8 %169, i8* %161, align 1
  %170 = bitcast %"class.std::__1::basic_string"* %143 to i8*
  br label %171

171:                                              ; preds = %168, %164
  %172 = phi i8* [ %167, %164 ], [ %170, %168 ]
  %173 = icmp eq i32 %154, 0
  br i1 %173, label %175, label %174

174:                                              ; preds = %171
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %172, i8* align 1 %151, i64 %155, i1 false) #4
  br label %175

175:                                              ; preds = %174, %171
  %176 = getelementptr inbounds i8, i8* %172, i64 %155
  store i8 0, i8* %176, align 1
  br label %180

177:                                              ; preds = %150
  %178 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %143, i8* %151, i64 %155) #4
  %179 = bitcast %"class.std::__1::basic_string"* %143 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %180

180:                                              ; preds = %177, %175
  %181 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %179, %177 ], [ %160, %175 ]
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  %183 = load i8, i8* %182, align 1
  %184 = icmp slt i8 %183, 0
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  %187 = bitcast %"class.std::__1::basic_string"* %143 to i8*
  %188 = select i1 %184, i8* %186, i8* %187
  %189 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %190 = load i64, i64* %189, align 8
  %191 = zext i8 %183 to i64
  %192 = select i1 %184, i64 %190, i64 %191
  %193 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %188, i64 %192) #4
  br i1 %193, label %195, label %194

194:                                              ; preds = %180
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #4
  br label %195

195:                                              ; preds = %194, %180, %142
  %196 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 10
  %197 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 10
  %198 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %197, i64 0, i32 0
  %199 = load i64, i64* %198, align 8
  %200 = icmp eq i64 %199, 0
  %201 = bitcast %"struct.mojo::internal::Pointer.0"* %197 to i8*
  %202 = getelementptr inbounds i8, i8* %201, i64 %199
  br i1 %200, label %248, label %203

203:                                              ; preds = %195
  %204 = getelementptr inbounds i8, i8* %202, i64 8
  %205 = getelementptr inbounds i8, i8* %202, i64 4
  %206 = bitcast i8* %205 to i32*
  %207 = load i32, i32* %206, align 1
  %208 = zext i32 %207 to i64
  %209 = tail call i1 @llvm.is.constant.i64(i64 %208) #4
  %210 = icmp ult i32 %207, 23
  %211 = and i1 %210, %209
  br i1 %211, label %212, label %230

212:                                              ; preds = %203
  %213 = bitcast %"class.std::__1::basic_string"* %196 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %213, i64 0, i32 1, i32 0
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %221

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %208, i64* %218, align 8
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load i8*, i8** %219, align 8
  br label %224

221:                                              ; preds = %212
  %222 = trunc i32 %207 to i8
  store i8 %222, i8* %214, align 1
  %223 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  br label %224

224:                                              ; preds = %221, %217
  %225 = phi i8* [ %220, %217 ], [ %223, %221 ]
  %226 = icmp eq i32 %207, 0
  br i1 %226, label %228, label %227

227:                                              ; preds = %224
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %225, i8* align 1 %204, i64 %208, i1 false) #4
  br label %228

228:                                              ; preds = %227, %224
  %229 = getelementptr inbounds i8, i8* %225, i64 %208
  store i8 0, i8* %229, align 1
  br label %233

230:                                              ; preds = %203
  %231 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %196, i8* %204, i64 %208) #4
  %232 = bitcast %"class.std::__1::basic_string"* %196 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %233

233:                                              ; preds = %230, %228
  %234 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %232, %230 ], [ %213, %228 ]
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  %238 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load i8*, i8** %238, align 8
  %240 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  %241 = select i1 %237, i8* %239, i8* %240
  %242 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %243 = load i64, i64* %242, align 8
  %244 = zext i8 %236 to i64
  %245 = select i1 %237, i64 %243, i64 %244
  %246 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %241, i64 %245) #4
  br i1 %246, label %248, label %247

247:                                              ; preds = %233
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #4
  br label %248

248:                                              ; preds = %247, %233, %195
  %249 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 11
  %250 = load i32, i32* %249, align 1
  %251 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 11
  store i32 %250, i32* %251, align 8
  %252 = load i8, i8* %81, align 1
  %253 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 12
  %254 = lshr i8 %252, 1
  %255 = and i8 %254, 1
  store i8 %255, i8* %253, align 4
  %256 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 12
  %257 = load i32, i32* %256, align 1
  %258 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 14
  store i32 %257, i32* %258, align 8
  %259 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 13
  %260 = load i32, i32* %259, align 1
  %261 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 15
  store i32 %260, i32* %261, align 4
  %262 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 14
  %263 = load i32, i32* %262, align 1
  %264 = icmp ult i32 %263, 3
  %265 = select i1 %264, i32 %263, i32 0
  %266 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 16
  store i32 %265, i32* %266, align 8
  %267 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 15
  %268 = load i32, i32* %267, align 1
  %269 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 17
  store i32 %268, i32* %269, align 4
  %270 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 16
  %271 = load i32, i32* %270, align 1
  %272 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 18
  store i32 %271, i32* %272, align 8
  %273 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 17
  %274 = load i32, i32* %273, align 1
  %275 = icmp ult i32 %274, 3
  %276 = select i1 %275, i32 %274, i32 0
  %277 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 19
  store i32 %276, i32* %277, align 4
  %278 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeData_Data", %"class.ax::mojom::internal::AXTreeData_Data"* %0, i64 0, i32 18
  %279 = load i32, i32* %278, align 1
  %280 = getelementptr inbounds %"struct.ui::AXTreeData", %"struct.ui::AXTreeData"* %2, i64 0, i32 20
  store i32 %279, i32* %280, align 8
  br label %281

281:                                              ; preds = %24, %16, %8, %248
  %282 = phi i1 [ true, %248 ], [ false, %8 ], [ false, %16 ], [ false, %24 ]
  ret i1 %282
}

declare zeroext i1 @_ZN4mojo11UnionTraitsIN2ax5mojom16AXTreeIDDataViewEN2ui8AXTreeIDEE4ReadES3_PS5_(%"class.ax::mojom::internal::AXTreeID_Data"*, %"class.mojo::Message"*, %"class.ui::AXTreeID"*) local_unnamed_addr #1

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
