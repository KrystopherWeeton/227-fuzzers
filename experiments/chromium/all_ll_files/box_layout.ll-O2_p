; ModuleID = '../../ui/views/layout/box_layout.cc'
source_filename = "../../ui/views/layout/box_layout.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::ClassProperty" = type opaque
%"class.views::BoxLayout::ViewWrapper" = type { %"class.views::View"*, %"class.views::BoxLayout"*, %"class.gfx::Insets" }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.35", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.42", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.61", %"class.absl::optional.67", i8, [7 x i8], %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.89", i8, i8, [3 x i8], %"class.std::__1::vector.94", %"class.std::__1::unique_ptr.101", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.107", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.120", %"class.base::ObserverList.126", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.1" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.4", %"class.std::__1::vector.11", %"class.ui::EventHandler"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.6" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.18", %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.26" }
%"class.std::__1::map.26" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.views::View"** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::vector.35"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.51", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.49, %class.SkTDArray.50, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.49 = type { i8*, i32, i32 }
%class.SkTDArray.50 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.56 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.51" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.56 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.57", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i8 }
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i8 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.67" = type { %"class.absl::optional_internal::optional_data.68" }
%"class.absl::optional_internal::optional_data.68" = type { %"class.absl::optional_internal::optional_data_base.69" }
%"class.absl::optional_internal::optional_data_base.69" = type { %"class.absl::optional_internal::optional_data_dtor_base.70" }
%"class.absl::optional_internal::optional_data_dtor_base.70" = type { i8, %union.anon.71 }
%union.anon.71 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.views::Border"* }
%"class.views::Border" = type opaque
%"class.ui::PaintCache" = type <{ %class.sk_sp.84, float, [4 x i8] }>
%class.sk_sp.84 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.85", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { i8* }
%"class.ui::NativeTheme" = type opaque
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, %union.anon.93 }
%union.anon.93 = type { i8 }
%"class.std::__1::vector.94" = type { %"class.std::__1::__vector_base.95" }
%"class.std::__1::__vector_base.95" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type opaque
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.std::__1::vector.110"* }
%"class.std::__1::vector.110" = type opaque
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.views::ViewTargeterDelegate" = type opaque
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.126" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.127", i64, i32, [4 x i8] }>
%"class.base::LinkedList.127" = type { %"class.base::LinkNode.128" }
%"class.base::LinkNode.128" = type { %"class.base::internal::LinkNodeBase" }
%"class.views::BoxLayout" = type { %"class.views::LayoutManager", i32, %"class.gfx::Insets", i32, i32, i32, %"class.std::__1::map.130", i32, i32, i8, %"class.views::View"* }
%"class.std::__1::map.130" = type { %"class.std::__1::__tree.131" }
%"class.std::__1::__tree.131" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.132", %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.views::View"*, %"struct.views::BoxLayout::Flex" }
%"struct.views::BoxLayout::Flex" = type { i32, i8 }
%"class.views::SizeBounds" = type { %"class.views::SizeBound", %"class.views::SizeBound" }
%"class.views::SizeBound" = type { %"class.absl::optional.143" }
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, %union.anon.147 }
%union.anon.147 = type { i32 }

$_ZNSt3__16__treeINS_12__value_typeIPKN5views4ViewENS2_9BoxLayout4FlexEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZN5views11kMarginsKeyE = external local_unnamed_addr constant %"struct.ui::ClassProperty"*, align 8
@_ZTVN5views9BoxLayoutE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::BoxLayout"*)* @_ZN5views9BoxLayoutD2Ev to i8*), i8* bitcast (void (%"class.views::BoxLayout"*)* @_ZN5views9BoxLayoutD0Ev to i8*), i8* bitcast (void (%"class.views::BoxLayout"*, %"class.views::View"*)* @_ZN5views9BoxLayout9InstalledEPNS_4ViewE to i8*), i8* bitcast (void (%"class.views::LayoutManager"*)* @_ZN5views13LayoutManager16InvalidateLayoutEv to i8*), i8* bitcast (void (%"class.views::BoxLayout"*, %"class.views::View"*)* @_ZN5views9BoxLayout6LayoutEPNS_4ViewE to i8*), i8* bitcast (i64 (%"class.views::BoxLayout"*, %"class.views::View"*)* @_ZNK5views9BoxLayout16GetPreferredSizeEPKNS_4ViewE to i8*), i8* bitcast (i64 (%"class.views::LayoutManager"*, %"class.views::View"*)* @_ZNK5views13LayoutManager14GetMinimumSizeEPKNS_4ViewE to i8*), i8* bitcast (i32 (%"class.views::BoxLayout"*, %"class.views::View"*, i32)* @_ZNK5views9BoxLayout26GetPreferredHeightForWidthEPKNS_4ViewEi to i8*), i8* bitcast (void (%"class.views::SizeBounds"*, %"class.views::LayoutManager"*, %"class.views::View"*, %"class.views::View"*)* @_ZNK5views13LayoutManager16GetAvailableSizeEPKNS_4ViewES3_ to i8*), i8* bitcast (void (%"class.views::LayoutManager"*, %"class.views::View"*, %"class.views::View"*)* @_ZN5views13LayoutManager9ViewAddedEPNS_4ViewES2_ to i8*), i8* bitcast (void (%"class.views::BoxLayout"*, %"class.views::View"*, %"class.views::View"*)* @_ZN5views9BoxLayout11ViewRemovedEPNS_4ViewES2_ to i8*), i8* bitcast (void (%"class.views::LayoutManager"*, %"class.views::View"*, %"class.views::View"*, i1, i1)* @_ZN5views13LayoutManager17ViewVisibilitySetEPNS_4ViewES2_bb to i8*), i8* bitcast (void (%"class.std::__1::vector.35"*, %"class.views::LayoutManager"*, %"class.views::View"*)* @_ZNK5views13LayoutManager25GetChildViewsInPaintOrderEPKNS_4ViewE to i8*)] }, align 8

@_ZN5views9BoxLayout11ViewWrapperC1Ev = hidden unnamed_addr alias void (%"class.views::BoxLayout::ViewWrapper"*), void (%"class.views::BoxLayout::ViewWrapper"*)* @_ZN5views9BoxLayout11ViewWrapperC2Ev
@_ZN5views9BoxLayout11ViewWrapperC1EPKS0_PNS_4ViewE = hidden unnamed_addr alias void (%"class.views::BoxLayout::ViewWrapper"*, %"class.views::BoxLayout"*, %"class.views::View"*), void (%"class.views::BoxLayout::ViewWrapper"*, %"class.views::BoxLayout"*, %"class.views::View"*)* @_ZN5views9BoxLayout11ViewWrapperC2EPKS0_PNS_4ViewE
@_ZN5views9BoxLayout11ViewWrapperD1Ev = hidden unnamed_addr alias void (%"class.views::BoxLayout::ViewWrapper"*), void (%"class.views::BoxLayout::ViewWrapper"*)* @_ZN5views9BoxLayout11ViewWrapperD2Ev
@_ZN5views9BoxLayoutC1ENS0_11OrientationERKN3gfx6InsetsEib = hidden unnamed_addr alias void (%"class.views::BoxLayout"*, i32, %"class.gfx::Insets"*, i32, i1), void (%"class.views::BoxLayout"*, i32, %"class.gfx::Insets"*, i32, i1)* @_ZN5views9BoxLayoutC2ENS0_11OrientationERKN3gfx6InsetsEib
@_ZN5views9BoxLayoutD1Ev = hidden unnamed_addr alias void (%"class.views::BoxLayout"*), void (%"class.views::BoxLayout"*)* @_ZN5views9BoxLayoutD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9BoxLayout11ViewWrapperC2Ev(%"class.views::BoxLayout::ViewWrapper"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.views::BoxLayout::ViewWrapper"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9BoxLayout11ViewWrapperC2EPKS0_PNS_4ViewE(%"class.views::BoxLayout::ViewWrapper"* nocapture, %"class.views::BoxLayout"*, %"class.views::View"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 0
  store %"class.views::View"* %2, %"class.views::View"** %4, align 8
  %5 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 1
  store %"class.views::BoxLayout"* %1, %"class.views::BoxLayout"** %5, align 8
  %6 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2
  %7 = bitcast %"class.gfx::Insets"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 16, i1 false) #11
  %8 = icmp eq %"class.views::View"* %2, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.views::View", %"class.views::View"* %2, i64 0, i32 6
  %11 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN5views11kMarginsKeyE, align 8
  %12 = tail call %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %10, %"struct.ui::ClassProperty"* %11) #11
  %13 = icmp eq %"class.gfx::Insets"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.gfx::Insets"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 4 %15, i64 16, i1 false)
  br label %16

16:                                               ; preds = %3, %9, %14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"*, %"struct.ui::ClassProperty"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5views9BoxLayout11ViewWrapperD2Ev(%"class.views::BoxLayout::ViewWrapper"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout11ViewWrapper17GetHeightForWidthEi(%"class.views::BoxLayout::ViewWrapper"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 1
  %4 = load %"class.views::BoxLayout"*, %"class.views::BoxLayout"** %3, align 8
  %5 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %4, i64 0, i32 9
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 0
  %10 = load %"class.views::View"*, %"class.views::View"** %9, align 8
  %11 = bitcast %"class.views::View"* %10 to i32 (%"class.views::View"*, i32)***
  %12 = load i32 (%"class.views::View"*, i32)**, i32 (%"class.views::View"*, i32)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %12, i64 19
  %14 = load i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %13, align 8
  %15 = tail call i32 %14(%"class.views::View"* %10, i32 %1) #11
  br label %54

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 0
  %21 = load %"class.views::View"*, %"class.views::View"** %20, align 8
  br i1 %19, label %22, label %42

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = sub i32 %1, %24
  %28 = sub i32 %27, %26
  %29 = icmp sgt i32 %28, 0
  %30 = select i1 %29, i32 %28, i32 0
  %31 = bitcast %"class.views::View"* %21 to i32 (%"class.views::View"*, i32)***
  %32 = load i32 (%"class.views::View"*, i32)**, i32 (%"class.views::View"*, i32)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %32, i64 19
  %34 = load i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %33, align 8
  %35 = tail call i32 %34(%"class.views::View"* %21, i32 %30) #11
  %36 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %37, %35
  %41 = add i32 %40, %39
  br label %54

42:                                               ; preds = %16
  %43 = bitcast %"class.views::View"* %21 to i32 (%"class.views::View"*, i32)***
  %44 = load i32 (%"class.views::View"*, i32)**, i32 (%"class.views::View"*, i32)*** %43, align 8
  %45 = getelementptr inbounds i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %44, i64 19
  %46 = load i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %45, align 8
  %47 = tail call i32 %46(%"class.views::View"* %21, i32 %1) #11
  %48 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = add i32 %49, %47
  %53 = add i32 %52, %51
  br label %54

54:                                               ; preds = %42, %22, %8
  %55 = phi i32 [ %15, %8 ], [ %41, %22 ], [ %53, %42 ]
  ret i32 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5views9BoxLayout11ViewWrapper16GetPreferredSizeEv(%"class.views::BoxLayout::ViewWrapper"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 0
  %4 = load %"class.views::View"*, %"class.views::View"** %3, align 8
  %5 = tail call i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"* %4) #11
  store i64 %5, i64* %2, align 8
  %6 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 1
  %7 = load %"class.views::BoxLayout"*, %"class.views::BoxLayout"** %6, align 8
  %8 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %7, i64 0, i32 9
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %24

11:                                               ; preds = %1
  %12 = bitcast i64* %2 to %"class.gfx::Size"*
  %13 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = add nsw i32 %16, %14
  %18 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, %19
  call void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* nonnull %12, i32 %17, i32 %22) #11
  %23 = load i64, i64* %2, align 8
  br label %24

24:                                               ; preds = %1, %11
  %25 = phi i64 [ %5, %1 ], [ %23, %11 ]
  ret i64 %25
}

declare i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"*) local_unnamed_addr #2

declare void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9BoxLayout11ViewWrapper13SetBoundsRectERKN3gfx4RectE(%"class.views::BoxLayout::ViewWrapper"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %9 = bitcast %"class.gfx::Rect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %4, i8* align 4 %9, i64 16, i1 false)
  %10 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 1
  %11 = load %"class.views::BoxLayout"*, %"class.views::BoxLayout"** %10, align 8
  %12 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %11, i64 0, i32 9
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %64

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %11, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %39

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %23, %21
  store i32 %24, i32* %5, align 4
  %25 = icmp sgt i32 %24, 0
  %26 = sub nuw nsw i32 2147483647, %24
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = sub i32 %28, %23
  %32 = sub i32 %31, %30
  %33 = icmp sgt i32 %32, 0
  %34 = select i1 %33, i32 %32, i32 0
  %35 = and i1 %25, %33
  %36 = icmp ult i32 %26, %34
  %37 = and i1 %35, %36
  %38 = select i1 %37, i32 %26, i32 %34
  br label %59

39:                                               ; preds = %15
  %40 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, %41
  store i32 %44, i32* %6, align 4
  %45 = icmp sgt i32 %44, 0
  %46 = sub nuw nsw i32 2147483647, %44
  %47 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 2, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = sub i32 %48, %43
  %52 = sub i32 %51, %50
  %53 = icmp sgt i32 %52, 0
  %54 = select i1 %53, i32 %52, i32 0
  %55 = and i1 %45, %53
  %56 = icmp ult i32 %46, %54
  %57 = and i1 %55, %56
  %58 = select i1 %57, i32 %46, i32 %54
  br label %59

59:                                               ; preds = %39, %19
  %60 = phi i32 [ %38, %19 ], [ %58, %39 ]
  %61 = phi i32* [ %7, %19 ], [ %8, %39 ]
  %62 = icmp sgt i32 %60, 0
  %63 = select i1 %62, i32 %60, i32 0
  store i32 %63, i32* %61, align 4
  br label %64

64:                                               ; preds = %59, %2
  %65 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 0
  %66 = load %"class.views::View"*, %"class.views::View"** %65, align 8
  call void @_ZN5views4View13SetBoundsRectERKN3gfx4RectE(%"class.views::View"* %66, %"class.gfx::Rect"* nonnull dereferenceable(16) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret void
}

declare void @_ZN5views4View13SetBoundsRectERKN3gfx4RectE(%"class.views::View"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5views9BoxLayout11ViewWrapper7visibleEv(%"class.views::BoxLayout::ViewWrapper"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %0, i64 0, i32 0
  %3 = load %"class.views::View"*, %"class.views::View"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %3) #11
  ret i1 %4
}

declare zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9BoxLayoutC2ENS0_11OrientationERKN3gfx6InsetsEib(%"class.views::BoxLayout"*, i32, %"class.gfx::Insets"* nocapture readonly dereferenceable(16), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = zext i1 %4 to i8
  %7 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 0, i32 1
  store %"class.views::View"* null, %"class.views::View"** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5views9BoxLayoutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2
  %11 = bitcast %"class.gfx::Insets"* %10 to i8*
  %12 = bitcast %"class.gfx::Insets"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 16, i1 false)
  %13 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 3
  store i32 %3, i32* %13, align 4
  %14 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 4
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 5
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node_base"** %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %17, %"class.std::__1::__tree_end_node"** %18, align 8
  %20 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 7
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 8
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 9
  store i8 %6, i8* %22, align 8
  %23 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 10
  store %"class.views::View"* null, %"class.views::View"** %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9BoxLayoutD2Ev(%"class.views::BoxLayout"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5views9BoxLayoutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0
  %4 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN5views4ViewENS2_9BoxLayout4FlexEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.131"* %3, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 0
  tail call void @_ZN5views13LayoutManagerD2Ev(%"class.views::LayoutManager"* %7) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5views13LayoutManagerD2Ev(%"class.views::LayoutManager"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9BoxLayoutD0Ev(%"class.views::BoxLayout"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5views9BoxLayoutE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0
  %4 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN5views4ViewENS2_9BoxLayout4FlexEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.131"* %3, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 0
  tail call void @_ZN5views13LayoutManagerD2Ev(%"class.views::LayoutManager"* %7) #11
  %8 = bitcast %"class.views::BoxLayout"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9BoxLayout14SetOrientationENS0_11OrientationE(%"class.views::BoxLayout"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  %7 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 0
  %8 = bitcast %"class.views::BoxLayout"* %0 to void (%"class.views::LayoutManager"*)***
  %9 = load void (%"class.views::LayoutManager"*)**, void (%"class.views::LayoutManager"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.views::LayoutManager"*)*, void (%"class.views::LayoutManager"*)** %9, i64 3
  %11 = load void (%"class.views::LayoutManager"*)*, void (%"class.views::LayoutManager"*)** %10, align 8
  tail call void %11(%"class.views::LayoutManager"* %7) #11
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout14GetOrientationEv(%"class.views::BoxLayout"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9BoxLayout25SetCollapseMarginsSpacingEb(%"class.views::BoxLayout"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = zext i1 %1 to i32
  %4 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 9
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %3, %6
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %4, align 8
  %10 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 0
  %11 = bitcast %"class.views::BoxLayout"* %0 to void (%"class.views::LayoutManager"*)***
  %12 = load void (%"class.views::LayoutManager"*)**, void (%"class.views::LayoutManager"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.views::LayoutManager"*)*, void (%"class.views::LayoutManager"*)** %12, i64 3
  %14 = load void (%"class.views::LayoutManager"*)*, void (%"class.views::LayoutManager"*)** %13, align 8
  tail call void %14(%"class.views::LayoutManager"* %10) #11
  br label %15

15:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5views9BoxLayout25GetCollapseMarginsSpacingEv(%"class.views::BoxLayout"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9BoxLayout14SetFlexForViewEPKNS_4ViewEib(%"class.views::BoxLayout"*, %"class.views::View"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.views::View"* %1 to i64
  %6 = zext i1 %3 to i8
  %7 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6
  %8 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %40, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %36, %12
  %15 = phi %"class.std::__1::__tree_node"* [ %39, %36 ], [ %10, %12 ]
  %16 = phi %"class.std::__1::__tree_node_base"** [ %38, %36 ], [ %13, %12 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.views::View"*, %"class.views::View"** %17, align 8
  %19 = icmp ugt %"class.views::View"* %18, %1
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  %23 = icmp eq %"class.std::__1::__tree_node_base"* %22, null
  br i1 %23, label %24, label %36

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %42

26:                                               ; preds = %14
  %27 = icmp ult %"class.views::View"* %18, %1
  br i1 %27, label %28, label %34

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %42

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %42

36:                                               ; preds = %28, %20
  %37 = phi %"class.std::__1::__tree_node_base"* [ %22, %20 ], [ %30, %28 ]
  %38 = phi %"class.std::__1::__tree_node_base"** [ %21, %20 ], [ %29, %28 ]
  %39 = bitcast %"class.std::__1::__tree_node_base"* %37 to %"class.std::__1::__tree_node"*
  br label %14

40:                                               ; preds = %4
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  br label %42

42:                                               ; preds = %40, %34, %32, %24
  %43 = phi %"class.std::__1::__tree_end_node"* [ %8, %40 ], [ %25, %24 ], [ %33, %32 ], [ %35, %34 ]
  %44 = phi %"class.std::__1::__tree_node_base"** [ %41, %40 ], [ %21, %24 ], [ %29, %32 ], [ %16, %34 ]
  %45 = bitcast %"class.std::__1::__tree_node_base"** %44 to %"class.std::__1::__tree_node"**
  %46 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node"* %46, null
  br i1 %47, label %48, label %75

48:                                               ; preds = %42
  %49 = tail call i8* @_Znwm(i64 48) #12, !noalias !3
  %50 = getelementptr inbounds i8, i8* %49, i64 32
  %51 = bitcast i8* %50 to i64*
  store i64 %5, i64* %51, align 8, !noalias !3
  %52 = getelementptr inbounds i8, i8* %49, i64 40
  %53 = bitcast i8* %52 to i64*
  store i64 0, i64* %53, align 8, !noalias !3
  %54 = bitcast i8* %49 to %"class.std::__1::__tree_node"*
  %55 = bitcast i8* %49 to %"class.std::__1::__tree_node_base"*
  %56 = getelementptr inbounds i8, i8* %49, i64 16
  %57 = bitcast i8* %56 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %57, align 8
  %58 = bitcast %"class.std::__1::__tree_node_base"** %44 to i8**
  store i8* %49, i8** %58, align 8
  %59 = getelementptr inbounds %"class.std::__1::map.130", %"class.std::__1::map.130"* %7, i64 0, i32 0, i32 0
  %60 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %59, align 8
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node_base"* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %48
  %65 = ptrtoint %"class.std::__1::__tree_node_base"* %62 to i64
  %66 = bitcast %"class.std::__1::map.130"* %7 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  br label %68

68:                                               ; preds = %64, %48
  %69 = phi %"class.std::__1::__tree_node_base"* [ %55, %48 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %71, %"class.std::__1::__tree_node_base"* %69) #11
  %72 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %72, align 8
  br label %75

75:                                               ; preds = %42, %68
  %76 = phi %"class.std::__1::__tree_node"* [ %54, %68 ], [ %46, %42 ]
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %76, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 %2, i32* %77, align 4
  %78 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %79 = icmp eq %"class.std::__1::__tree_node"* %78, null
  br i1 %79, label %108, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %82

82:                                               ; preds = %104, %80
  %83 = phi %"class.std::__1::__tree_node"* [ %107, %104 ], [ %78, %80 ]
  %84 = phi %"class.std::__1::__tree_node_base"** [ %106, %104 ], [ %81, %80 ]
  %85 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 1, i32 0, i32 0
  %86 = load %"class.views::View"*, %"class.views::View"** %85, align 8
  %87 = icmp ugt %"class.views::View"* %86, %1
  br i1 %87, label %88, label %94

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %92, label %104

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 0, i32 0
  br label %110

94:                                               ; preds = %82
  %95 = icmp ult %"class.views::View"* %86, %1
  br i1 %95, label %96, label %102

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 0, i32 1
  %98 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %97, align 8
  %99 = icmp eq %"class.std::__1::__tree_node_base"* %98, null
  br i1 %99, label %100, label %104

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 0, i32 0
  br label %110

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %83, i64 0, i32 0, i32 0
  br label %110

104:                                              ; preds = %96, %88
  %105 = phi %"class.std::__1::__tree_node_base"* [ %90, %88 ], [ %98, %96 ]
  %106 = phi %"class.std::__1::__tree_node_base"** [ %89, %88 ], [ %97, %96 ]
  %107 = bitcast %"class.std::__1::__tree_node_base"* %105 to %"class.std::__1::__tree_node"*
  br label %82

108:                                              ; preds = %75
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  br label %110

110:                                              ; preds = %108, %102, %100, %92
  %111 = phi %"class.std::__1::__tree_end_node"* [ %8, %108 ], [ %93, %92 ], [ %101, %100 ], [ %103, %102 ]
  %112 = phi %"class.std::__1::__tree_node_base"** [ %109, %108 ], [ %89, %92 ], [ %97, %100 ], [ %84, %102 ]
  %113 = bitcast %"class.std::__1::__tree_node_base"** %112 to %"class.std::__1::__tree_node"**
  %114 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node"* %114, null
  br i1 %115, label %116, label %143

116:                                              ; preds = %110
  %117 = tail call i8* @_Znwm(i64 48) #12, !noalias !6
  %118 = getelementptr inbounds i8, i8* %117, i64 32
  %119 = bitcast i8* %118 to i64*
  store i64 %5, i64* %119, align 8, !noalias !6
  %120 = getelementptr inbounds i8, i8* %117, i64 40
  %121 = bitcast i8* %120 to i64*
  store i64 0, i64* %121, align 8, !noalias !6
  %122 = bitcast i8* %117 to %"class.std::__1::__tree_node"*
  %123 = bitcast i8* %117 to %"class.std::__1::__tree_node_base"*
  %124 = getelementptr inbounds i8, i8* %117, i64 16
  %125 = bitcast i8* %124 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %111, %"class.std::__1::__tree_end_node"** %125, align 8
  %126 = bitcast %"class.std::__1::__tree_node_base"** %112 to i8**
  store i8* %117, i8** %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::map.130", %"class.std::__1::map.130"* %7, i64 0, i32 0, i32 0
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %127, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, null
  br i1 %131, label %136, label %132

132:                                              ; preds = %116
  %133 = ptrtoint %"class.std::__1::__tree_node_base"* %130 to i64
  %134 = bitcast %"class.std::__1::map.130"* %7 to i64*
  store i64 %133, i64* %134, align 8
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %112, align 8
  br label %136

136:                                              ; preds = %132, %116
  %137 = phi %"class.std::__1::__tree_node_base"* [ %123, %116 ], [ %135, %132 ]
  %138 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %139 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %138, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %139, %"class.std::__1::__tree_node_base"* %137) #11
  %140 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 1
  store i64 %142, i64* %140, align 8
  br label %143

143:                                              ; preds = %110, %136
  %144 = phi %"class.std::__1::__tree_node"* [ %122, %136 ], [ %114, %110 ]
  %145 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %144, i64 0, i32 1, i32 0, i32 1, i32 1
  store i8 %6, i8* %145, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9BoxLayout16ClearFlexForViewEPKNS_4ViewE(%"class.views::BoxLayout"*, %"class.views::View"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0
  %4 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  %8 = bitcast %"class.std::__1::__tree_node"* %6 to %"class.std::__1::__tree_node_base"*
  br i1 %7, label %72, label %9

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::__tree_end_node"* [ %20, %9 ], [ %4, %2 ]
  %11 = phi %"class.std::__1::__tree_node"* [ %21, %9 ], [ %6, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.views::View"*, %"class.views::View"** %12, align 8
  %14 = icmp ult %"class.views::View"* %13, %1
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::__tree_node_base"** %15 to %"class.std::__1::__tree_node"**
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %11, i64 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::__tree_node"* %11 to %"class.std::__1::__tree_node"**
  %19 = select i1 %14, %"class.std::__1::__tree_node"** %16, %"class.std::__1::__tree_node"** %18
  %20 = select i1 %14, %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"* %17
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %22 = icmp eq %"class.std::__1::__tree_node"* %21, null
  br i1 %22, label %23, label %9

23:                                               ; preds = %9
  %24 = icmp eq %"class.std::__1::__tree_end_node"* %20, %4
  br i1 %24, label %72, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 4
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.views::View"**
  %28 = load %"class.views::View"*, %"class.views::View"** %27, align 8
  %29 = icmp ugt %"class.views::View"* %28, %1
  br i1 %29, label %72, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 1, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %42

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %20, i64 2
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_end_node"**
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %35
  br i1 %41, label %58, label %49

42:                                               ; preds = %30, %42
  %43 = phi %"class.std::__1::__tree_node_base"* [ %45, %42 ], [ %32, %30 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %47, label %42

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0
  br label %58

49:                                               ; preds = %34, %49
  %50 = phi %"class.std::__1::__tree_end_node"** [ %53, %49 ], [ %37, %34 ]
  %51 = bitcast %"class.std::__1::__tree_end_node"** %50 to %"class.std::__1::__tree_node_base"**
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %52, i64 0, i32 2
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %52
  br i1 %57, label %58, label %49

58:                                               ; preds = %49, %47, %34
  %59 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %38, %34 ], [ %54, %49 ]
  %60 = getelementptr inbounds %"class.std::__1::__tree.131", %"class.std::__1::__tree.131"* %3, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_end_node"* %61, %20
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = ptrtoint %"class.std::__1::__tree_end_node"* %59 to i64
  %65 = bitcast %"class.std::__1::__tree.131"* %3 to i64*
  store i64 %64, i64* %65, align 8
  br label %66

66:                                               ; preds = %63, %58
  %67 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, -1
  store i64 %69, i64* %67, align 8
  %70 = bitcast %"class.std::__1::__tree_end_node"* %20 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %8, %"class.std::__1::__tree_node_base"* %70) #11
  %71 = bitcast %"class.std::__1::__tree_end_node"* %20 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %2, %23, %25, %66
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views9BoxLayout14SetDefaultFlexEi(%"class.views::BoxLayout"* nocapture, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 7
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout14GetDefaultFlexEv(%"class.views::BoxLayout"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9BoxLayout6LayoutEPNS_4ViewE(%"class.views::BoxLayout"*, %"class.views::View"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = alloca %"class.gfx::Insets", align 4
  %5 = alloca { i64, i64 }, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.gfx::Rect"*
  %8 = alloca %"class.views::BoxLayout::ViewWrapper", align 8
  %9 = alloca %"class.gfx::Rect", align 4
  %10 = alloca %"class.views::BoxLayout::ViewWrapper", align 8
  %11 = alloca %"class.gfx::Rect", align 4
  %12 = alloca %"class.gfx::Rect", align 4
  %13 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %14 = bitcast { i64, i64 }* %6 to i32*
  %15 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %17 = bitcast i64* %16 to i32*
  %18 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 1
  %19 = tail call { i64, i64 } @_ZNK5views4View17GetContentsBoundsEv(%"class.views::View"* %1) #11
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %21 = extractvalue { i64, i64 } %19, 0
  store i64 %21, i64* %20, align 8
  %22 = extractvalue { i64, i64 } %19, 1
  store i64 %22, i64* %16, align 8
  %23 = bitcast { i64, i64 }* %5 to %"class.gfx::Insets"*
  %24 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  %25 = tail call { i64, i64 } @_ZNK5views9BoxLayout19MainAxisOuterMarginEv(%"class.views::BoxLayout"* %0) #11
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %27 = extractvalue { i64, i64 } %25, 0
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %29 = extractvalue { i64, i64 } %25, 1
  store i64 %29, i64* %28, align 8
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %7, %"class.gfx::Insets"* nonnull dereferenceable(16) %23) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  %30 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 9
  %31 = load i8, i8* %30, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %93

33:                                               ; preds = %2
  %34 = bitcast %"class.gfx::Insets"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %62

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %4, i64 0, i32 0
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %4, i64 0, i32 1
  store i32 %40, i32* %44, align 4
  %45 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %4, i64 0, i32 2
  store i32 0, i32* %45, align 4
  %46 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %4, i64 0, i32 3
  %47 = icmp sgt i32 %40, 0
  %48 = icmp sgt i32 %42, 0
  %49 = and i1 %47, %48
  %50 = sub nuw nsw i32 2147483647, %40
  %51 = icmp ult i32 %50, %42
  %52 = and i1 %51, %49
  br i1 %52, label %60, label %53

53:                                               ; preds = %38
  %54 = and i32 %42, %40
  %55 = icmp slt i32 %54, 0
  %56 = sub nsw i32 -2147483648, %40
  %57 = icmp sgt i32 %56, %42
  %58 = and i1 %57, %55
  %59 = select i1 %58, i32 %56, i32 %42
  br label %60

60:                                               ; preds = %53, %38
  %61 = phi i32 [ %59, %53 ], [ %50, %38 ]
  store i32 %61, i32* %46, align 4
  br label %86

62:                                               ; preds = %33
  %63 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %4, i64 0, i32 0
  store i32 %64, i32* %67, align 4
  %68 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %4, i64 0, i32 1
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %4, i64 0, i32 2
  %70 = icmp sgt i32 %64, 0
  %71 = icmp sgt i32 %66, 0
  %72 = and i1 %70, %71
  %73 = sub nuw nsw i32 2147483647, %64
  %74 = icmp ult i32 %73, %66
  %75 = and i1 %74, %72
  br i1 %75, label %83, label %76

76:                                               ; preds = %62
  %77 = and i32 %66, %64
  %78 = icmp slt i32 %77, 0
  %79 = sub nsw i32 -2147483648, %64
  %80 = icmp sgt i32 %79, %66
  %81 = and i1 %80, %78
  %82 = select i1 %81, i32 %79, i32 %66
  br label %83

83:                                               ; preds = %76, %62
  %84 = phi i32 [ %82, %76 ], [ %73, %62 ]
  store i32 %84, i32* %69, align 4
  %85 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %4, i64 0, i32 3
  store i32 0, i32* %85, align 4
  br label %86

86:                                               ; preds = %60, %83
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* nonnull %7, %"class.gfx::Insets"* nonnull dereferenceable(16) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #11
  %87 = call { i64, i64 } @_ZNK5views9BoxLayout22CrossAxisMaxViewMarginEv(%"class.views::BoxLayout"* %0)
  %88 = extractvalue { i64, i64 } %87, 0
  %89 = extractvalue { i64, i64 } %87, 1
  %90 = trunc i64 %88 to i32
  %91 = lshr i64 %88, 32
  %92 = trunc i64 %91 to i32
  br label %93

93:                                               ; preds = %2, %86
  %94 = phi i64 [ %89, %86 ], [ 0, %2 ]
  %95 = phi i32 [ %92, %86 ], [ 0, %2 ]
  %96 = phi i32 [ %90, %86 ], [ 0, %2 ]
  %97 = load i32, i32* %17, align 8
  %98 = icmp eq i32 %97, 0
  %99 = load i32, i32* %18, align 4
  %100 = icmp eq i32 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %815, label %102

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 14, i32 0, i32 0
  %104 = load %"class.views::View"**, %"class.views::View"*** %103, align 8
  %105 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 14, i32 0, i32 1
  %106 = load %"class.views::View"**, %"class.views::View"*** %105, align 8
  %107 = icmp eq %"class.views::View"** %104, %106
  br i1 %107, label %815, label %108

108:                                              ; preds = %102
  %109 = bitcast %"class.views::BoxLayout::ViewWrapper"* %8 to i8*
  %110 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %8, i64 0, i32 0
  %111 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %8, i64 0, i32 1
  %112 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %8, i64 0, i32 2, i32 2
  %113 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %8, i64 0, i32 2, i32 3
  %114 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %8, i64 0, i32 2
  %115 = bitcast %"class.gfx::Insets"* %114 to i8*
  %116 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN5views11kMarginsKeyE, align 8
  %117 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %118 = bitcast %"class.std::__1::__tree_end_node"* %117 to %"class.std::__1::__tree_node"**
  %119 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 7
  %120 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 10
  %121 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 3
  %122 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %123 = bitcast %"class.views::BoxLayout::ViewWrapper"* %8 to i8*
  br label %126

124:                                              ; preds = %236
  %125 = icmp eq i32 %238, 0
  br i1 %125, label %815, label %243

126:                                              ; preds = %108, %236
  %127 = phi i32 [ 0, %108 ], [ %239, %236 ]
  %128 = phi i32 [ 0, %108 ], [ %238, %236 ]
  %129 = phi i32 [ 0, %108 ], [ %237, %236 ]
  %130 = phi %"class.views::View"** [ %104, %108 ], [ %240, %236 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 -86, i64 32, i1 false)
  %131 = load %"class.views::View"*, %"class.views::View"** %130, align 8
  store %"class.views::View"* %131, %"class.views::View"** %110, align 8
  store %"class.views::BoxLayout"* %0, %"class.views::BoxLayout"** %111, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %115, i8 0, i64 16, i1 false) #11
  %132 = icmp eq %"class.views::View"* %131, null
  br i1 %132, label %139, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %"class.views::View", %"class.views::View"* %131, i64 0, i32 6
  %135 = call %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %134, %"struct.ui::ClassProperty"* %116) #11
  %136 = icmp eq %"class.gfx::Insets"* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  %138 = bitcast %"class.gfx::Insets"* %135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %115, i8* nonnull align 4 %138, i64 16, i1 false) #11
  br label %139

139:                                              ; preds = %126, %133, %137
  %140 = load %"class.views::View"*, %"class.views::View"** %110, align 8
  %141 = call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %140) #11
  br i1 %141, label %142, label %236

142:                                              ; preds = %139
  %143 = load %"class.views::View"*, %"class.views::View"** %110, align 8
  %144 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %118, align 8
  %145 = icmp eq %"class.std::__1::__tree_node"* %144, null
  br i1 %145, label %170, label %146

146:                                              ; preds = %142, %146
  %147 = phi %"class.std::__1::__tree_end_node"* [ %157, %146 ], [ %117, %142 ]
  %148 = phi %"class.std::__1::__tree_node"* [ %158, %146 ], [ %144, %142 ]
  %149 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %148, i64 0, i32 1, i32 0, i32 0
  %150 = load %"class.views::View"*, %"class.views::View"** %149, align 8
  %151 = icmp ult %"class.views::View"* %150, %143
  %152 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %148, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::__tree_node_base"** %152 to %"class.std::__1::__tree_node"**
  %154 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %148, i64 0, i32 0, i32 0
  %155 = bitcast %"class.std::__1::__tree_node"* %148 to %"class.std::__1::__tree_node"**
  %156 = select i1 %151, %"class.std::__1::__tree_node"** %153, %"class.std::__1::__tree_node"** %155
  %157 = select i1 %151, %"class.std::__1::__tree_end_node"* %147, %"class.std::__1::__tree_end_node"* %154
  %158 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %156, align 8
  %159 = icmp eq %"class.std::__1::__tree_node"* %158, null
  br i1 %159, label %160, label %146

160:                                              ; preds = %146
  %161 = icmp eq %"class.std::__1::__tree_end_node"* %157, %117
  br i1 %161, label %170, label %162

162:                                              ; preds = %160
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %157, i64 4
  %164 = bitcast %"class.std::__1::__tree_end_node"* %163 to %"class.views::View"**
  %165 = load %"class.views::View"*, %"class.views::View"** %164, align 8
  %166 = icmp ugt %"class.views::View"* %165, %143
  br i1 %166, label %170, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %157, i64 5
  %169 = bitcast %"class.std::__1::__tree_end_node"* %168 to i32*
  br label %170

170:                                              ; preds = %142, %160, %162, %167
  %171 = phi i32* [ %169, %167 ], [ %119, %162 ], [ %119, %160 ], [ %119, %142 ]
  %172 = load i32, i32* %171, align 8
  %173 = load i32, i32* %17, align 8
  %174 = call i32 @_ZNK5views9BoxLayout19MainAxisSizeForViewERKNS0_11ViewWrapperEi(%"class.views::BoxLayout"* %0, %"class.views::BoxLayout::ViewWrapper"* nonnull dereferenceable(32) %8, i32 %173)
  %175 = or i32 %174, %172
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %236, label %177

177:                                              ; preds = %170
  %178 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %130, i64 1
  %179 = load %"class.views::View"*, %"class.views::View"** %120, align 8
  %180 = getelementptr inbounds %"class.views::View", %"class.views::View"* %179, i64 0, i32 14, i32 0, i32 1
  %181 = load %"class.views::View"**, %"class.views::View"*** %180, align 8
  %182 = icmp eq %"class.views::View"** %181, %178
  br i1 %182, label %216, label %183

183:                                              ; preds = %177, %187
  %184 = phi %"class.views::View"** [ %188, %187 ], [ %178, %177 ]
  %185 = load %"class.views::View"*, %"class.views::View"** %184, align 8
  %186 = call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %185) #11
  br i1 %186, label %190, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %184, i64 1
  %189 = icmp eq %"class.views::View"** %188, %181
  br i1 %189, label %190, label %183

190:                                              ; preds = %187, %183
  %191 = phi %"class.views::View"** [ %181, %187 ], [ %184, %183 ]
  %192 = load %"class.views::View"*, %"class.views::View"** %120, align 8
  %193 = getelementptr inbounds %"class.views::View", %"class.views::View"* %192, i64 0, i32 14, i32 0, i32 1
  %194 = load %"class.views::View"**, %"class.views::View"*** %193, align 8
  %195 = icmp eq %"class.views::View"** %191, %194
  br i1 %195, label %216, label %196

196:                                              ; preds = %190
  %197 = load %"class.views::View"*, %"class.views::View"** %191, align 8
  %198 = icmp eq %"class.views::View"* %197, null
  br i1 %198, label %216, label %199

199:                                              ; preds = %196
  %200 = getelementptr inbounds %"class.views::View", %"class.views::View"* %197, i64 0, i32 6
  %201 = call %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %200, %"struct.ui::ClassProperty"* %116) #11
  %202 = icmp eq %"class.gfx::Insets"* %201, null
  br i1 %202, label %208, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %201, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %201, i64 0, i32 1
  %207 = load i32, i32* %206, align 4
  br label %208

208:                                              ; preds = %199, %203
  %209 = phi i32 [ 0, %199 ], [ %207, %203 ]
  %210 = phi i32 [ 0, %199 ], [ %205, %203 ]
  %211 = load i8, i8* %30, align 8, !range !2
  %212 = icmp eq i8 %211, 0
  %213 = load %"class.views::View"*, %"class.views::View"** %110, align 8
  %214 = icmp eq %"class.views::View"* %213, null
  %215 = or i1 %212, %214
  br i1 %215, label %216, label %218

216:                                              ; preds = %177, %190, %196, %208
  %217 = load i32, i32* %121, align 4
  br label %230

218:                                              ; preds = %208
  %219 = load i32, i32* %122, align 8
  %220 = icmp eq i32 %219, 0
  %221 = load i32, i32* %113, align 4
  %222 = load i32, i32* %112, align 8
  %223 = select i1 %220, i32 %221, i32 %222
  %224 = select i1 %220, i32 %209, i32 %210
  %225 = icmp slt i32 %223, %224
  %226 = load i32, i32* %121, align 4
  %227 = select i1 %225, i32 %224, i32 %223
  %228 = icmp slt i32 %226, %227
  %229 = select i1 %228, i32 %227, i32 %226
  br label %230

230:                                              ; preds = %216, %218
  %231 = phi i32 [ %229, %218 ], [ %217, %216 ]
  %232 = add i32 %174, %127
  %233 = add i32 %232, %231
  %234 = add nsw i32 %128, 1
  %235 = add nsw i32 %172, %129
  br label %236

236:                                              ; preds = %230, %170, %139
  %237 = phi i32 [ %129, %170 ], [ %235, %230 ], [ %129, %139 ]
  %238 = phi i32 [ %128, %170 ], [ %234, %230 ], [ %128, %139 ]
  %239 = phi i32 [ %127, %170 ], [ %233, %230 ], [ %127, %139 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #11
  %240 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %130, i64 1
  %241 = load %"class.views::View"**, %"class.views::View"*** %105, align 8
  %242 = icmp eq %"class.views::View"** %240, %241
  br i1 %242, label %124, label %126

243:                                              ; preds = %124
  %244 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 3
  %245 = load i32, i32* %244, align 4
  %246 = sub nsw i32 %239, %245
  %247 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %248 = load i32, i32* %247, align 8
  %249 = icmp eq i32 %248, 0
  %250 = load i32, i32* %17, align 8
  %251 = load i32, i32* %18, align 4
  %252 = select i1 %249, i32 %250, i32 %251
  %253 = sub nsw i32 %252, %246
  %254 = load i32, i32* %14, align 8
  %255 = load i32, i32* %15, align 4
  %256 = select i1 %249, i32 %254, i32 %255
  %257 = icmp eq i32 %237, 0
  br i1 %257, label %258, label %266

258:                                              ; preds = %243
  %259 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 4
  %260 = load i32, i32* %259, align 8
  switch i32 %260, label %266 [
    i32 2, label %264
    i32 1, label %261
  ]

261:                                              ; preds = %258
  %262 = sdiv i32 %253, 2
  %263 = add nsw i32 %256, %262
  br label %266

264:                                              ; preds = %258
  %265 = add nsw i32 %256, %253
  br label %266

266:                                              ; preds = %243, %261, %264, %258
  %267 = phi i32 [ %256, %243 ], [ %256, %258 ], [ %263, %261 ], [ %265, %264 ]
  %268 = phi i32 [ %252, %243 ], [ %252, %258 ], [ %246, %261 ], [ %246, %264 ]
  %269 = bitcast %"class.gfx::Rect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %269) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %269, i8* nonnull align 8 %13, i64 16, i1 false)
  %270 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1, i32 0
  %271 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 0, i32 0
  %272 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 1, i32 1
  %273 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %9, i64 0, i32 0, i32 1
  %274 = select i1 %249, i32* %271, i32* %273
  %275 = select i1 %249, i32* %270, i32* %272
  store i32 %267, i32* %274, align 4
  %276 = icmp sgt i32 %267, 0
  %277 = sub nuw nsw i32 2147483647, %267
  %278 = icmp sgt i32 %268, 0
  %279 = and i1 %278, %276
  %280 = icmp ult i32 %277, %268
  %281 = and i1 %280, %279
  %282 = select i1 %281, i32 %277, i32 %268
  %283 = icmp sgt i32 %282, 0
  %284 = select i1 %283, i32 %282, i32 0
  store i32 %284, i32* %275, align 4
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %7, %"class.gfx::Rect"* nonnull dereferenceable(16) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %269) #11
  %285 = load %"class.views::View"**, %"class.views::View"*** %103, align 8
  %286 = load %"class.views::View"**, %"class.views::View"*** %105, align 8
  %287 = icmp eq %"class.views::View"** %285, %286
  br i1 %287, label %815, label %288

288:                                              ; preds = %266
  %289 = bitcast %"class.views::BoxLayout::ViewWrapper"* %10 to i8*
  %290 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %10, i64 0, i32 0
  %291 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %10, i64 0, i32 1
  %292 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %10, i64 0, i32 2, i32 0
  %293 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %10, i64 0, i32 2, i32 1
  %294 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %10, i64 0, i32 2, i32 2
  %295 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %10, i64 0, i32 2, i32 3
  %296 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %10, i64 0, i32 2
  %297 = bitcast %"class.gfx::Insets"* %296 to i8*
  %298 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN5views11kMarginsKeyE, align 8
  %299 = bitcast %"class.gfx::Rect"* %11 to i8*
  %300 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 0
  %301 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 0, i32 1
  %302 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1, i32 0
  %303 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %11, i64 0, i32 1, i32 1
  %304 = bitcast %"class.gfx::Rect"* %12 to i8*
  %305 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 0, i32 0
  %306 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 0, i32 1
  %307 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 1, i32 0
  %308 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %12, i64 0, i32 1, i32 1
  %309 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %296, i64 0, i32 0
  %310 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 0
  %311 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 2
  %312 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 1
  %313 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 3
  %314 = bitcast %"class.gfx::Insets"* %296 to i64*
  %315 = bitcast i32* %294 to i64*
  %316 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 5
  %317 = lshr i64 %94, 32
  %318 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %319 = bitcast %"class.std::__1::__tree_end_node"* %318 to %"class.std::__1::__tree_node"**
  %320 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 7
  %321 = icmp sgt i32 %253, 0
  %322 = select i1 %321, i32 1, i32 -1
  %323 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 10
  %324 = bitcast %"class.gfx::Rect"* %3 to i8*
  %325 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 0
  %326 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 0, i32 1
  %327 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  %328 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 1
  %329 = bitcast %"class.views::BoxLayout::ViewWrapper"* %10 to i8*
  br label %330

330:                                              ; preds = %288, %808
  %331 = phi i32 [ 0, %288 ], [ %811, %808 ]
  %332 = phi i32 [ 0, %288 ], [ %810, %808 ]
  %333 = phi i32 [ %267, %288 ], [ %809, %808 ]
  %334 = phi %"class.views::View"** [ %285, %288 ], [ %812, %808 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %289) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %329, i8 -86, i64 32, i1 false)
  %335 = load %"class.views::View"*, %"class.views::View"** %334, align 8
  store %"class.views::View"* %335, %"class.views::View"** %290, align 8
  store %"class.views::BoxLayout"* %0, %"class.views::BoxLayout"** %291, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %297, i8 0, i64 16, i1 false) #11
  %336 = icmp eq %"class.views::View"* %335, null
  br i1 %336, label %343, label %337

337:                                              ; preds = %330
  %338 = getelementptr inbounds %"class.views::View", %"class.views::View"* %335, i64 0, i32 6
  %339 = call %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %338, %"struct.ui::ClassProperty"* %298) #11
  %340 = icmp eq %"class.gfx::Insets"* %339, null
  br i1 %340, label %343, label %341

341:                                              ; preds = %337
  %342 = bitcast %"class.gfx::Insets"* %339 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %297, i8* nonnull align 4 %342, i64 16, i1 false) #11
  br label %343

343:                                              ; preds = %330, %337, %341
  %344 = load %"class.views::View"*, %"class.views::View"** %290, align 8
  %345 = call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %344) #11
  br i1 %345, label %346, label %808

346:                                              ; preds = %343
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %299) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %299, i8* nonnull align 8 %13, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %304) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %304, i8* nonnull align 8 %13, i64 16, i1 false)
  %347 = load i8, i8* %30, align 8, !range !2
  %348 = icmp eq i8 %347, 0
  br i1 %348, label %405, label %349

349:                                              ; preds = %346
  %350 = load i32, i32* %247, align 8
  %351 = icmp eq i32 %350, 1
  br i1 %351, label %352, label %374

352:                                              ; preds = %349
  %353 = load i32, i32* %293, align 4
  %354 = load i32, i32* %312, align 4
  %355 = icmp slt i32 %353, %354
  %356 = select i1 %355, i32 %354, i32 %353
  %357 = load i32, i32* %295, align 4
  %358 = load i32, i32* %313, align 4
  %359 = icmp slt i32 %357, %358
  %360 = select i1 %359, i32 %358, i32 %357
  %361 = icmp sgt i32 %356, 0
  %362 = icmp sgt i32 %360, 0
  %363 = and i1 %361, %362
  %364 = sub nuw nsw i32 2147483647, %356
  %365 = icmp ult i32 %364, %360
  %366 = and i1 %365, %363
  br i1 %366, label %396, label %367

367:                                              ; preds = %352
  %368 = and i32 %360, %356
  %369 = icmp slt i32 %368, 0
  %370 = sub nsw i32 -2147483648, %356
  %371 = icmp sgt i32 %370, %360
  %372 = and i1 %371, %369
  %373 = select i1 %372, i32 %370, i32 %360
  br label %396

374:                                              ; preds = %349
  %375 = load i32, i32* %309, align 8
  %376 = load i32, i32* %310, align 4
  %377 = icmp slt i32 %375, %376
  %378 = select i1 %377, i32 %376, i32 %375
  %379 = load i32, i32* %294, align 8
  %380 = load i32, i32* %311, align 4
  %381 = icmp slt i32 %379, %380
  %382 = select i1 %381, i32 %380, i32 %379
  %383 = icmp sgt i32 %378, 0
  %384 = icmp sgt i32 %382, 0
  %385 = and i1 %383, %384
  %386 = sub nuw nsw i32 2147483647, %378
  %387 = icmp ult i32 %386, %382
  %388 = and i1 %387, %385
  br i1 %388, label %396, label %389

389:                                              ; preds = %374
  %390 = and i32 %382, %378
  %391 = icmp slt i32 %390, 0
  %392 = sub nsw i32 -2147483648, %378
  %393 = icmp sgt i32 %392, %382
  %394 = and i1 %393, %391
  %395 = select i1 %394, i32 %392, i32 %382
  br label %396

396:                                              ; preds = %352, %367, %374, %389
  %397 = phi i32 [ 0, %352 ], [ 0, %367 ], [ %378, %374 ], [ %378, %389 ]
  %398 = phi i32 [ %356, %352 ], [ %356, %367 ], [ 0, %374 ], [ 0, %389 ]
  %399 = phi i32 [ 0, %352 ], [ 0, %367 ], [ %386, %374 ], [ %395, %389 ]
  %400 = phi i32 [ %364, %352 ], [ %373, %367 ], [ 0, %374 ], [ 0, %389 ]
  %401 = zext i32 %400 to i64
  %402 = shl nuw i64 %401, 32
  %403 = zext i32 %399 to i64
  %404 = or i64 %402, %403
  br label %411

405:                                              ; preds = %346
  %406 = load i64, i64* %314, align 8
  %407 = trunc i64 %406 to i32
  %408 = lshr i64 %406, 32
  %409 = trunc i64 %408 to i32
  %410 = load i64, i64* %315, align 8
  br label %411

411:                                              ; preds = %405, %396
  %412 = phi i32 [ %407, %405 ], [ %397, %396 ]
  %413 = phi i32 [ %409, %405 ], [ %398, %396 ]
  %414 = phi i64 [ %410, %405 ], [ %404, %396 ]
  %415 = load i32, i32* %316, align 4
  switch i32 %415, label %425 [
    i32 0, label %416
    i32 2, label %416
  ]

416:                                              ; preds = %411, %411
  %417 = load i32, i32* %247, align 8
  %418 = icmp eq i32 %417, 1
  %419 = select i1 %418, i32 %413, i32 %412
  %420 = lshr i64 %414, 32
  %421 = select i1 %418, i64 %420, i64 %414
  %422 = trunc i64 %421 to i32
  br i1 %418, label %423, label %424

423:                                              ; preds = %416
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %12, i32 %419, i32 0, i32 %422, i32 0) #11
  br label %425

424:                                              ; preds = %416
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %12, i32 0, i32 %419, i32 0, i32 %422) #11
  br label %425

425:                                              ; preds = %424, %423, %411
  %426 = load i32, i32* %247, align 8
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %437

428:                                              ; preds = %425
  store i32 %333, i32* %300, align 4
  %429 = load i32, i32* %302, align 4
  %430 = icmp sgt i32 %333, 0
  %431 = icmp sgt i32 %429, 0
  %432 = and i1 %430, %431
  %433 = sub nuw nsw i32 2147483647, %333
  %434 = icmp ult i32 %433, %429
  %435 = and i1 %434, %432
  %436 = select i1 %435, i32 %433, i32 %429
  br label %446

437:                                              ; preds = %425
  store i32 %333, i32* %301, align 4
  %438 = load i32, i32* %303, align 4
  %439 = icmp sgt i32 %333, 0
  %440 = icmp sgt i32 %438, 0
  %441 = and i1 %439, %440
  %442 = sub nuw nsw i32 2147483647, %333
  %443 = icmp ult i32 %442, %438
  %444 = and i1 %443, %441
  %445 = select i1 %444, i32 %442, i32 %438
  br label %446

446:                                              ; preds = %428, %437
  %447 = phi i32 [ %436, %428 ], [ %445, %437 ]
  %448 = phi i32* [ %302, %428 ], [ %303, %437 ]
  %449 = icmp sgt i32 %447, 0
  %450 = select i1 %449, i32 %447, i32 0
  store i32 %450, i32* %448, align 4
  %451 = load i32, i32* %316, align 4
  %452 = icmp eq i32 %451, 0
  br i1 %452, label %533, label %453

453:                                              ; preds = %446
  %454 = load i8, i8* %30, align 8, !range !2
  %455 = icmp eq i8 %454, 0
  br i1 %455, label %456, label %466

456:                                              ; preds = %453
  %457 = icmp eq i32 %426, 1
  br i1 %457, label %458, label %462

458:                                              ; preds = %456
  %459 = load i32, i32* %293, align 4
  %460 = load i32, i32* %295, align 4
  %461 = add nsw i32 %460, %459
  br label %466

462:                                              ; preds = %456
  %463 = load i32, i32* %292, align 8
  %464 = load i32, i32* %294, align 8
  %465 = add nsw i32 %464, %463
  br label %466

466:                                              ; preds = %453, %458, %462
  %467 = phi i32 [ 0, %453 ], [ %461, %458 ], [ %465, %462 ]
  %468 = call i32 @_ZNK5views9BoxLayout20CrossAxisSizeForViewERKNS0_11ViewWrapperE(%"class.views::BoxLayout"* %0, %"class.views::BoxLayout::ViewWrapper"* nonnull dereferenceable(32) %10)
  %469 = sub nsw i32 %468, %467
  %470 = load i32, i32* %247, align 8
  %471 = icmp eq i32 %470, 1
  %472 = load i32, i32* %302, align 4
  %473 = load i32, i32* %303, align 4
  %474 = select i1 %471, i32 %472, i32 %473
  %475 = sub nsw i32 %474, %469
  %476 = load i32, i32* %300, align 4
  %477 = load i32, i32* %301, align 4
  %478 = select i1 %471, i32 %476, i32 %477
  %479 = load i32, i32* %316, align 4
  switch i32 %479, label %506 [
    i32 2, label %480
    i32 3, label %493
  ]

480:                                              ; preds = %466
  %481 = load i32, i32* %307, align 4
  %482 = load i32, i32* %308, align 4
  %483 = select i1 %471, i32 %481, i32 %482
  %484 = icmp sgt i32 %469, %483
  %485 = select i1 %484, i32 %483, i32 %469
  %486 = sdiv i32 %475, 2
  %487 = add nsw i32 %478, %486
  %488 = load i32, i32* %305, align 4
  %489 = load i32, i32* %306, align 4
  %490 = select i1 %471, i32 %488, i32 %489
  %491 = icmp slt i32 %487, %490
  %492 = select i1 %491, i32 %490, i32 %487
  br label %517

493:                                              ; preds = %466
  %494 = select i1 %471, i64 %317, i64 %94
  %495 = trunc i64 %494 to i32
  %496 = sub nsw i32 %475, %495
  %497 = add nsw i32 %478, %496
  %498 = load i8, i8* %30, align 8, !range !2
  %499 = icmp eq i8 %498, 0
  br i1 %499, label %500, label %517

500:                                              ; preds = %493
  %501 = load i32, i32* %293, align 4
  %502 = load i32, i32* %309, align 8
  %503 = select i1 %471, i32 %501, i32 %502
  br i1 %471, label %504, label %505

504:                                              ; preds = %500
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %12, i32 %503, i32 0, i32 %495, i32 0) #11
  br label %517

505:                                              ; preds = %500
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %12, i32 0, i32 %503, i32 0, i32 %495) #11
  br label %517

506:                                              ; preds = %466
  %507 = select i1 %471, i32 %95, i32 %96
  %508 = add nsw i32 %478, %507
  %509 = load i8, i8* %30, align 8, !range !2
  %510 = icmp eq i8 %509, 0
  br i1 %510, label %511, label %517

511:                                              ; preds = %506
  %512 = load i32, i32* %295, align 4
  %513 = load i32, i32* %294, align 8
  %514 = select i1 %471, i32 %512, i32 %513
  br i1 %471, label %515, label %516

515:                                              ; preds = %511
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %12, i32 %507, i32 0, i32 %514, i32 0) #11
  br label %517

516:                                              ; preds = %511
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %12, i32 0, i32 %507, i32 0, i32 %514) #11
  br label %517

517:                                              ; preds = %516, %515, %505, %504, %493, %506, %480
  %518 = phi i32 [ %508, %506 ], [ %497, %493 ], [ %492, %480 ], [ %497, %504 ], [ %497, %505 ], [ %508, %515 ], [ %508, %516 ]
  %519 = phi i32 [ %469, %506 ], [ %469, %493 ], [ %485, %480 ], [ %469, %504 ], [ %469, %505 ], [ %469, %515 ], [ %469, %516 ]
  %520 = load i32, i32* %247, align 8
  %521 = icmp eq i32 %520, 1
  %522 = select i1 %521, i32* %300, i32* %301
  %523 = select i1 %521, i32* %302, i32* %303
  store i32 %518, i32* %522, align 4
  %524 = icmp sgt i32 %518, 0
  %525 = sub nuw nsw i32 2147483647, %518
  %526 = icmp sgt i32 %519, 0
  %527 = and i1 %526, %524
  %528 = icmp ult i32 %525, %519
  %529 = and i1 %528, %527
  %530 = select i1 %529, i32 %525, i32 %519
  %531 = icmp sgt i32 %530, 0
  %532 = select i1 %531, i32 %530, i32 0
  store i32 %532, i32* %523, align 4
  br label %533

533:                                              ; preds = %517, %446
  %534 = load %"class.views::View"*, %"class.views::View"** %290, align 8
  %535 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %319, align 8
  %536 = icmp eq %"class.std::__1::__tree_node"* %535, null
  br i1 %536, label %561, label %537

537:                                              ; preds = %533, %537
  %538 = phi %"class.std::__1::__tree_end_node"* [ %548, %537 ], [ %318, %533 ]
  %539 = phi %"class.std::__1::__tree_node"* [ %549, %537 ], [ %535, %533 ]
  %540 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %539, i64 0, i32 1, i32 0, i32 0
  %541 = load %"class.views::View"*, %"class.views::View"** %540, align 8
  %542 = icmp ult %"class.views::View"* %541, %534
  %543 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %539, i64 0, i32 0, i32 1
  %544 = bitcast %"class.std::__1::__tree_node_base"** %543 to %"class.std::__1::__tree_node"**
  %545 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %539, i64 0, i32 0, i32 0
  %546 = bitcast %"class.std::__1::__tree_node"* %539 to %"class.std::__1::__tree_node"**
  %547 = select i1 %542, %"class.std::__1::__tree_node"** %544, %"class.std::__1::__tree_node"** %546
  %548 = select i1 %542, %"class.std::__1::__tree_end_node"* %538, %"class.std::__1::__tree_end_node"* %545
  %549 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %547, align 8
  %550 = icmp eq %"class.std::__1::__tree_node"* %549, null
  br i1 %550, label %551, label %537

551:                                              ; preds = %537
  %552 = icmp eq %"class.std::__1::__tree_end_node"* %548, %318
  br i1 %552, label %561, label %553

553:                                              ; preds = %551
  %554 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %548, i64 4
  %555 = bitcast %"class.std::__1::__tree_end_node"* %554 to %"class.views::View"**
  %556 = load %"class.views::View"*, %"class.views::View"** %555, align 8
  %557 = icmp ugt %"class.views::View"* %556, %534
  br i1 %557, label %561, label %558

558:                                              ; preds = %553
  %559 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %548, i64 5
  %560 = bitcast %"class.std::__1::__tree_end_node"* %559 to i32*
  br label %561

561:                                              ; preds = %533, %551, %553, %558
  %562 = phi i32* [ %560, %558 ], [ %320, %553 ], [ %320, %551 ], [ %320, %533 ]
  %563 = load i32, i32* %562, align 8
  %564 = icmp sgt i32 %563, 0
  br i1 %564, label %565, label %579

565:                                              ; preds = %561
  %566 = add nsw i32 %563, %331
  %567 = mul nsw i32 %566, %253
  %568 = sdiv i32 %567, %237
  %569 = srem i32 %567, %237
  %570 = sub nsw i32 %568, %332
  %571 = icmp slt i32 %569, 0
  %572 = sub nsw i32 0, %569
  %573 = select i1 %571, i32 %572, i32 %569
  %574 = shl nuw nsw i32 %573, 1
  %575 = icmp slt i32 %574, %237
  %576 = select i1 %575, i32 0, i32 %322
  %577 = add nsw i32 %570, %576
  %578 = add i32 %568, %576
  br label %579

579:                                              ; preds = %565, %561
  %580 = phi i32 [ %578, %565 ], [ %332, %561 ]
  %581 = phi i32 [ %566, %565 ], [ %331, %561 ]
  %582 = phi i32 [ %577, %565 ], [ 0, %561 ]
  %583 = load i32, i32* %17, align 8
  %584 = call i32 @_ZNK5views9BoxLayout19MainAxisSizeForViewERKNS0_11ViewWrapperEi(%"class.views::BoxLayout"* %0, %"class.views::BoxLayout::ViewWrapper"* nonnull dereferenceable(32) %10, i32 %583)
  %585 = load %"class.views::View"*, %"class.views::View"** %290, align 8
  %586 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %319, align 8
  %587 = icmp eq %"class.std::__1::__tree_node"* %586, null
  br i1 %587, label %634, label %588

588:                                              ; preds = %579, %588
  %589 = phi %"class.std::__1::__tree_end_node"* [ %599, %588 ], [ %318, %579 ]
  %590 = phi %"class.std::__1::__tree_node"* [ %600, %588 ], [ %586, %579 ]
  %591 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %590, i64 0, i32 1, i32 0, i32 0
  %592 = load %"class.views::View"*, %"class.views::View"** %591, align 8
  %593 = icmp ult %"class.views::View"* %592, %585
  %594 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %590, i64 0, i32 0, i32 1
  %595 = bitcast %"class.std::__1::__tree_node_base"** %594 to %"class.std::__1::__tree_node"**
  %596 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %590, i64 0, i32 0, i32 0
  %597 = bitcast %"class.std::__1::__tree_node"* %590 to %"class.std::__1::__tree_node"**
  %598 = select i1 %593, %"class.std::__1::__tree_node"** %595, %"class.std::__1::__tree_node"** %597
  %599 = select i1 %593, %"class.std::__1::__tree_end_node"* %589, %"class.std::__1::__tree_end_node"* %596
  %600 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %598, align 8
  %601 = icmp eq %"class.std::__1::__tree_node"* %600, null
  br i1 %601, label %602, label %588

602:                                              ; preds = %588
  %603 = icmp eq %"class.std::__1::__tree_end_node"* %599, %318
  br i1 %603, label %634, label %604

604:                                              ; preds = %602
  %605 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %599, i64 4
  %606 = bitcast %"class.std::__1::__tree_end_node"* %605 to %"class.views::View"**
  %607 = load %"class.views::View"*, %"class.views::View"** %606, align 8
  %608 = icmp ugt %"class.views::View"* %607, %585
  br i1 %608, label %634, label %609

609:                                              ; preds = %604
  %610 = bitcast %"class.std::__1::__tree_end_node"* %605 to %"struct.std::__1::pair"*
  %611 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %610, i64 0, i32 1, i32 1
  %612 = load i8, i8* %611, align 4, !range !2
  %613 = icmp eq i8 %612, 0
  br i1 %613, label %634, label %614

614:                                              ; preds = %609
  %615 = load i32, i32* %247, align 8
  %616 = icmp eq i32 %615, 0
  %617 = bitcast %"class.views::View"* %585 to i64 (%"class.views::View"*)***
  %618 = load i64 (%"class.views::View"*)**, i64 (%"class.views::View"*)*** %617, align 8
  %619 = getelementptr inbounds i64 (%"class.views::View"*)*, i64 (%"class.views::View"*)** %618, i64 17
  %620 = load i64 (%"class.views::View"*)*, i64 (%"class.views::View"*)** %619, align 8
  %621 = call i64 %620(%"class.views::View"* %585) #11
  %622 = lshr i64 %621, 32
  %623 = select i1 %616, i64 %621, i64 %622
  %624 = trunc i64 %623 to i32
  %625 = icmp sgt i32 %624, 0
  br i1 %625, label %626, label %634

626:                                              ; preds = %614
  %627 = load i8, i8* %30, align 8, !range !2
  %628 = icmp eq i8 %627, 0
  br i1 %628, label %629, label %634

629:                                              ; preds = %626
  %630 = load i32, i32* %293, align 4
  %631 = load i32, i32* %295, align 4
  %632 = add i32 %630, %624
  %633 = add i32 %632, %631
  br label %634

634:                                              ; preds = %604, %602, %579, %609, %626, %629, %614
  %635 = phi i32 [ %633, %629 ], [ %624, %626 ], [ %624, %614 ], [ 0, %609 ], [ 0, %579 ], [ 0, %602 ], [ 0, %604 ]
  %636 = add nsw i32 %584, %582
  %637 = icmp slt i32 %635, %636
  %638 = select i1 %637, i32 %636, i32 %635
  %639 = load i32, i32* %247, align 8
  %640 = icmp eq i32 %639, 0
  br i1 %640, label %641, label %653

641:                                              ; preds = %634
  %642 = load i32, i32* %300, align 4
  %643 = icmp sgt i32 %642, 0
  %644 = icmp sgt i32 %638, 0
  %645 = and i1 %644, %643
  %646 = sub nuw nsw i32 2147483647, %642
  %647 = icmp ult i32 %646, %638
  %648 = and i1 %647, %645
  %649 = select i1 %648, i32 %646, i32 %638
  %650 = icmp sgt i32 %649, 0
  %651 = select i1 %650, i32 %649, i32 0
  store i32 %651, i32* %302, align 4
  %652 = load i32, i32* %303, align 4
  br label %665

653:                                              ; preds = %634
  %654 = load i32, i32* %301, align 4
  %655 = icmp sgt i32 %654, 0
  %656 = icmp sgt i32 %638, 0
  %657 = and i1 %656, %655
  %658 = sub nuw nsw i32 2147483647, %654
  %659 = icmp ult i32 %658, %638
  %660 = and i1 %659, %657
  %661 = select i1 %660, i32 %658, i32 %638
  %662 = icmp sgt i32 %661, 0
  %663 = select i1 %662, i32 %661, i32 0
  store i32 %663, i32* %303, align 4
  %664 = load i32, i32* %302, align 4
  br label %665

665:                                              ; preds = %641, %653
  %666 = phi i32 [ %652, %641 ], [ %663, %653 ]
  %667 = phi i32 [ %651, %641 ], [ %664, %653 ]
  %668 = select i1 %640, i32 %667, i32 %666
  %669 = icmp sgt i32 %668, 0
  br i1 %669, label %702, label %670

670:                                              ; preds = %665
  %671 = load %"class.views::View"*, %"class.views::View"** %290, align 8
  %672 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %319, align 8
  %673 = icmp eq %"class.std::__1::__tree_node"* %672, null
  br i1 %673, label %698, label %674

674:                                              ; preds = %670, %674
  %675 = phi %"class.std::__1::__tree_end_node"* [ %685, %674 ], [ %318, %670 ]
  %676 = phi %"class.std::__1::__tree_node"* [ %686, %674 ], [ %672, %670 ]
  %677 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %676, i64 0, i32 1, i32 0, i32 0
  %678 = load %"class.views::View"*, %"class.views::View"** %677, align 8
  %679 = icmp ult %"class.views::View"* %678, %671
  %680 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %676, i64 0, i32 0, i32 1
  %681 = bitcast %"class.std::__1::__tree_node_base"** %680 to %"class.std::__1::__tree_node"**
  %682 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %676, i64 0, i32 0, i32 0
  %683 = bitcast %"class.std::__1::__tree_node"* %676 to %"class.std::__1::__tree_node"**
  %684 = select i1 %679, %"class.std::__1::__tree_node"** %681, %"class.std::__1::__tree_node"** %683
  %685 = select i1 %679, %"class.std::__1::__tree_end_node"* %675, %"class.std::__1::__tree_end_node"* %682
  %686 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %684, align 8
  %687 = icmp eq %"class.std::__1::__tree_node"* %686, null
  br i1 %687, label %688, label %674

688:                                              ; preds = %674
  %689 = icmp eq %"class.std::__1::__tree_end_node"* %685, %318
  br i1 %689, label %698, label %690

690:                                              ; preds = %688
  %691 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %685, i64 4
  %692 = bitcast %"class.std::__1::__tree_end_node"* %691 to %"class.views::View"**
  %693 = load %"class.views::View"*, %"class.views::View"** %692, align 8
  %694 = icmp ugt %"class.views::View"* %693, %671
  br i1 %694, label %698, label %695

695:                                              ; preds = %690
  %696 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %685, i64 5
  %697 = bitcast %"class.std::__1::__tree_end_node"* %696 to i32*
  br label %698

698:                                              ; preds = %670, %688, %690, %695
  %699 = phi i32* [ %697, %695 ], [ %320, %690 ], [ %320, %688 ], [ %320, %670 ]
  %700 = load i32, i32* %699, align 8
  %701 = icmp sgt i32 %700, 0
  br i1 %701, label %702, label %759

702:                                              ; preds = %698, %665
  %703 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %334, i64 1
  %704 = load %"class.views::View"*, %"class.views::View"** %323, align 8
  %705 = getelementptr inbounds %"class.views::View", %"class.views::View"* %704, i64 0, i32 14, i32 0, i32 1
  %706 = load %"class.views::View"**, %"class.views::View"*** %705, align 8
  %707 = icmp eq %"class.views::View"** %706, %703
  br i1 %707, label %741, label %708

708:                                              ; preds = %702, %712
  %709 = phi %"class.views::View"** [ %713, %712 ], [ %703, %702 ]
  %710 = load %"class.views::View"*, %"class.views::View"** %709, align 8
  %711 = call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %710) #11
  br i1 %711, label %715, label %712

712:                                              ; preds = %708
  %713 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %709, i64 1
  %714 = icmp eq %"class.views::View"** %713, %706
  br i1 %714, label %715, label %708

715:                                              ; preds = %712, %708
  %716 = phi %"class.views::View"** [ %706, %712 ], [ %709, %708 ]
  %717 = load %"class.views::View"*, %"class.views::View"** %323, align 8
  %718 = getelementptr inbounds %"class.views::View", %"class.views::View"* %717, i64 0, i32 14, i32 0, i32 1
  %719 = load %"class.views::View"**, %"class.views::View"*** %718, align 8
  %720 = icmp eq %"class.views::View"** %716, %719
  br i1 %720, label %741, label %721

721:                                              ; preds = %715
  %722 = load %"class.views::View"*, %"class.views::View"** %716, align 8
  %723 = icmp eq %"class.views::View"* %722, null
  br i1 %723, label %741, label %724

724:                                              ; preds = %721
  %725 = getelementptr inbounds %"class.views::View", %"class.views::View"* %722, i64 0, i32 6
  %726 = call %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %725, %"struct.ui::ClassProperty"* %298) #11
  %727 = icmp eq %"class.gfx::Insets"* %726, null
  br i1 %727, label %733, label %728

728:                                              ; preds = %724
  %729 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %726, i64 0, i32 0
  %730 = load i32, i32* %729, align 4
  %731 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %726, i64 0, i32 1
  %732 = load i32, i32* %731, align 4
  br label %733

733:                                              ; preds = %724, %728
  %734 = phi i32 [ 0, %724 ], [ %730, %728 ]
  %735 = phi i32 [ 0, %724 ], [ %732, %728 ]
  %736 = load i8, i8* %30, align 8, !range !2
  %737 = icmp eq i8 %736, 0
  %738 = load %"class.views::View"*, %"class.views::View"** %290, align 8
  %739 = icmp eq %"class.views::View"* %738, null
  %740 = or i1 %737, %739
  br i1 %740, label %741, label %743

741:                                              ; preds = %702, %715, %721, %733
  %742 = load i32, i32* %244, align 4
  br label %755

743:                                              ; preds = %733
  %744 = load i32, i32* %247, align 8
  %745 = icmp eq i32 %744, 0
  %746 = load i32, i32* %295, align 4
  %747 = load i32, i32* %294, align 8
  %748 = select i1 %745, i32 %746, i32 %747
  %749 = select i1 %745, i32 %735, i32 %734
  %750 = icmp slt i32 %748, %749
  %751 = load i32, i32* %244, align 4
  %752 = select i1 %750, i32 %749, i32 %748
  %753 = icmp slt i32 %751, %752
  %754 = select i1 %753, i32 %752, i32 %751
  br label %755

755:                                              ; preds = %741, %743
  %756 = phi i32 [ %754, %743 ], [ %742, %741 ]
  %757 = add i32 %668, %333
  %758 = add i32 %757, %756
  br label %759

759:                                              ; preds = %755, %698
  %760 = phi i32 [ %758, %755 ], [ %333, %698 ]
  call void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"* nonnull %11, %"class.gfx::Rect"* nonnull dereferenceable(16) %12) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %324) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %324, i8* nonnull align 4 %299, i64 16, i1 false) #11
  %761 = load %"class.views::BoxLayout"*, %"class.views::BoxLayout"** %291, align 8
  %762 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %761, i64 0, i32 9
  %763 = load i8, i8* %762, align 8, !range !2
  %764 = icmp eq i8 %763, 0
  br i1 %764, label %765, label %806

765:                                              ; preds = %759
  %766 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %761, i64 0, i32 1
  %767 = load i32, i32* %766, align 8
  %768 = icmp eq i32 %767, 0
  br i1 %768, label %769, label %785

769:                                              ; preds = %765
  %770 = load i32, i32* %300, align 4
  %771 = load i32, i32* %293, align 4
  %772 = add nsw i32 %771, %770
  store i32 %772, i32* %325, align 4
  %773 = icmp sgt i32 %772, 0
  %774 = sub nuw nsw i32 2147483647, %772
  %775 = load i32, i32* %302, align 4
  %776 = load i32, i32* %295, align 4
  %777 = sub i32 %775, %771
  %778 = sub i32 %777, %776
  %779 = icmp sgt i32 %778, 0
  %780 = select i1 %779, i32 %778, i32 0
  %781 = and i1 %773, %779
  %782 = icmp ult i32 %774, %780
  %783 = and i1 %781, %782
  %784 = select i1 %783, i32 %774, i32 %780
  br label %801

785:                                              ; preds = %765
  %786 = load i32, i32* %301, align 4
  %787 = load i32, i32* %292, align 8
  %788 = add nsw i32 %787, %786
  store i32 %788, i32* %326, align 4
  %789 = icmp sgt i32 %788, 0
  %790 = sub nuw nsw i32 2147483647, %788
  %791 = load i32, i32* %303, align 4
  %792 = load i32, i32* %294, align 8
  %793 = sub i32 %791, %787
  %794 = sub i32 %793, %792
  %795 = icmp sgt i32 %794, 0
  %796 = select i1 %795, i32 %794, i32 0
  %797 = and i1 %789, %795
  %798 = icmp ult i32 %790, %796
  %799 = and i1 %797, %798
  %800 = select i1 %799, i32 %790, i32 %796
  br label %801

801:                                              ; preds = %785, %769
  %802 = phi i32 [ %784, %769 ], [ %800, %785 ]
  %803 = phi i32* [ %327, %769 ], [ %328, %785 ]
  %804 = icmp sgt i32 %802, 0
  %805 = select i1 %804, i32 %802, i32 0
  store i32 %805, i32* %803, align 4
  br label %806

806:                                              ; preds = %801, %759
  %807 = load %"class.views::View"*, %"class.views::View"** %290, align 8
  call void @_ZN5views4View13SetBoundsRectERKN3gfx4RectE(%"class.views::View"* %807, %"class.gfx::Rect"* nonnull dereferenceable(16) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %324) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %304) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %299) #11
  br label %808

808:                                              ; preds = %343, %806
  %809 = phi i32 [ %760, %806 ], [ %333, %343 ]
  %810 = phi i32 [ %580, %806 ], [ %332, %343 ]
  %811 = phi i32 [ %581, %806 ], [ %331, %343 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %289) #11
  %812 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %334, i64 1
  %813 = load %"class.views::View"**, %"class.views::View"*** %105, align 8
  %814 = icmp eq %"class.views::View"** %812, %813
  br i1 %814, label %815, label %330

815:                                              ; preds = %808, %102, %266, %93, %124
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  ret void
}

declare { i64, i64 } @_ZNK5views4View17GetContentsBoundsEv(%"class.views::View"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views9BoxLayout23AdjustMainAxisForMarginEPN3gfx4RectE(%"class.views::BoxLayout"*, %"class.gfx::Rect"*) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.gfx::Insets"*
  %5 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = tail call { i64, i64 } @_ZNK5views9BoxLayout19MainAxisOuterMarginEv(%"class.views::BoxLayout"* %0)
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %8 = extractvalue { i64, i64 } %6, 0
  store i64 %8, i64* %7, align 8
  %9 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %10 = extractvalue { i64, i64 } %6, 1
  store i64 %10, i64* %9, align 8
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* %1, %"class.gfx::Insets"* nonnull dereferenceable(16) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views9BoxLayout24AdjustCrossAxisForInsetsEPN3gfx4RectE(%"class.views::BoxLayout"* nocapture readonly, %"class.gfx::Rect"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Insets", align 4
  %4 = bitcast %"class.gfx::Insets"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %32

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %3, i64 0, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %3, i64 0, i32 1
  store i32 %10, i32* %14, align 4
  %15 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %3, i64 0, i32 2
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %3, i64 0, i32 3
  %17 = icmp sgt i32 %10, 0
  %18 = icmp sgt i32 %12, 0
  %19 = and i1 %17, %18
  %20 = sub nuw nsw i32 2147483647, %10
  %21 = icmp ult i32 %20, %12
  %22 = and i1 %21, %19
  br i1 %22, label %30, label %23

23:                                               ; preds = %8
  %24 = and i32 %12, %10
  %25 = icmp slt i32 %24, 0
  %26 = sub nsw i32 -2147483648, %10
  %27 = icmp sgt i32 %26, %12
  %28 = and i1 %27, %25
  %29 = select i1 %28, i32 %26, i32 %12
  br label %30

30:                                               ; preds = %8, %23
  %31 = phi i32 [ %29, %23 ], [ %20, %8 ]
  store i32 %31, i32* %16, align 4
  br label %56

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %3, i64 0, i32 0
  store i32 %34, i32* %37, align 4
  %38 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %3, i64 0, i32 1
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %3, i64 0, i32 2
  %40 = icmp sgt i32 %34, 0
  %41 = icmp sgt i32 %36, 0
  %42 = and i1 %40, %41
  %43 = sub nuw nsw i32 2147483647, %34
  %44 = icmp ult i32 %43, %36
  %45 = and i1 %44, %42
  br i1 %45, label %53, label %46

46:                                               ; preds = %32
  %47 = and i32 %36, %34
  %48 = icmp slt i32 %47, 0
  %49 = sub nsw i32 -2147483648, %34
  %50 = icmp sgt i32 %49, %36
  %51 = and i1 %50, %48
  %52 = select i1 %51, i32 %49, i32 %36
  br label %53

53:                                               ; preds = %32, %46
  %54 = phi i32 [ %52, %46 ], [ %43, %32 ]
  store i32 %54, i32* %39, align 4
  %55 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %3, i64 0, i32 3
  store i32 0, i32* %55, align 4
  br label %56

56:                                               ; preds = %53, %30
  call void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"* %1, %"class.gfx::Insets"* nonnull dereferenceable(16) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5views9BoxLayout22CrossAxisMaxViewMarginEv(%"class.views::BoxLayout"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 10
  %3 = load %"class.views::View"*, %"class.views::View"** %2, align 8
  %4 = getelementptr inbounds %"class.views::View", %"class.views::View"* %3, i64 0, i32 14, i32 0, i32 0
  %5 = load %"class.views::View"**, %"class.views::View"*** %4, align 8
  %6 = getelementptr inbounds %"class.views::View", %"class.views::View"* %3, i64 0, i32 14, i32 0, i32 1
  %7 = load %"class.views::View"**, %"class.views::View"*** %6, align 8
  %8 = icmp eq %"class.views::View"** %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN5views11kMarginsKeyE, align 8
  %11 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  br label %24

12:                                               ; preds = %58, %1
  %13 = phi i32 [ 0, %1 ], [ %59, %58 ]
  %14 = phi i32 [ 0, %1 ], [ %60, %58 ]
  %15 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 1
  %18 = icmp sgt i32 %13, 0
  %19 = icmp sgt i32 %14, 0
  %20 = and i1 %18, %19
  %21 = sub nuw nsw i32 2147483647, %13
  %22 = icmp ult i32 %21, %14
  %23 = and i1 %22, %20
  br i1 %17, label %63, label %71

24:                                               ; preds = %9, %58
  %25 = phi %"class.views::View"** [ %5, %9 ], [ %61, %58 ]
  %26 = phi i32 [ 0, %9 ], [ %60, %58 ]
  %27 = phi i32 [ 0, %9 ], [ %59, %58 ]
  %28 = load %"class.views::View"*, %"class.views::View"** %25, align 8
  %29 = icmp eq %"class.views::View"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.views::View", %"class.views::View"* %28, i64 0, i32 6
  %32 = tail call %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %31, %"struct.ui::ClassProperty"* %10) #11
  %33 = icmp eq %"class.gfx::Insets"* %32, null
  br i1 %33, label %43, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %32, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %32, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %32, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %32, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  br label %43

43:                                               ; preds = %24, %30, %34
  %44 = phi i32 [ 0, %24 ], [ 0, %30 ], [ %36, %34 ]
  %45 = phi i32 [ 0, %24 ], [ 0, %30 ], [ %38, %34 ]
  %46 = phi i32 [ 0, %24 ], [ 0, %30 ], [ %40, %34 ]
  %47 = phi i32 [ 0, %24 ], [ 0, %30 ], [ %42, %34 ]
  %48 = tail call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %28) #11
  br i1 %48, label %49, label %58

49:                                               ; preds = %43
  %50 = load i32, i32* %11, align 8
  %51 = icmp eq i32 %50, 1
  %52 = select i1 %51, i32 %45, i32 %44
  %53 = icmp slt i32 %27, %52
  %54 = select i1 %53, i32 %52, i32 %27
  %55 = select i1 %51, i32 %47, i32 %46
  %56 = icmp slt i32 %26, %55
  %57 = select i1 %56, i32 %55, i32 %26
  br label %58

58:                                               ; preds = %43, %49
  %59 = phi i32 [ %54, %49 ], [ %27, %43 ]
  %60 = phi i32 [ %57, %49 ], [ %26, %43 ]
  %61 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %25, i64 1
  %62 = icmp eq %"class.views::View"** %61, %7
  br i1 %62, label %12, label %24

63:                                               ; preds = %12
  br i1 %23, label %79, label %64

64:                                               ; preds = %63
  %65 = and i32 %14, %13
  %66 = icmp slt i32 %65, 0
  %67 = sub nsw i32 -2147483648, %13
  %68 = icmp sgt i32 %67, %14
  %69 = and i1 %68, %66
  %70 = select i1 %69, i32 %67, i32 %14
  br label %79

71:                                               ; preds = %12
  br i1 %23, label %79, label %72

72:                                               ; preds = %71
  %73 = and i32 %14, %13
  %74 = icmp slt i32 %73, 0
  %75 = sub nsw i32 -2147483648, %13
  %76 = icmp sgt i32 %75, %14
  %77 = and i1 %76, %74
  %78 = select i1 %77, i32 %75, i32 %14
  br label %79

79:                                               ; preds = %72, %71, %64, %63
  %80 = phi i32 [ 0, %63 ], [ 0, %64 ], [ %13, %71 ], [ %13, %72 ]
  %81 = phi i32 [ %13, %63 ], [ %13, %64 ], [ 0, %71 ], [ 0, %72 ]
  %82 = phi i32 [ 0, %63 ], [ 0, %64 ], [ %21, %71 ], [ %78, %72 ]
  %83 = phi i32 [ %21, %63 ], [ %70, %64 ], [ 0, %71 ], [ 0, %72 ]
  %84 = zext i32 %81 to i64
  %85 = shl nuw i64 %84, 32
  %86 = zext i32 %80 to i64
  %87 = or i64 %85, %86
  %88 = insertvalue { i64, i64 } undef, i64 %87, 0
  %89 = zext i32 %83 to i64
  %90 = shl nuw i64 %89, 32
  %91 = zext i32 %82 to i64
  %92 = or i64 %90, %91
  %93 = insertvalue { i64, i64 } %88, i64 %92, 1
  ret { i64, i64 } %93
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout14GetFlexForViewEPKNS_4ViewE(%"class.views::BoxLayout"*, %"class.views::View"*) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %12 = icmp ult %"class.views::View"* %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.views::View"**
  %26 = load %"class.views::View"*, %"class.views::View"** %25, align 8
  %27 = icmp ugt %"class.views::View"* %26, %1
  br i1 %27, label %28, label %30

28:                                               ; preds = %23, %21, %2
  %29 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 7
  br label %33

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 5
  %32 = bitcast %"class.std::__1::__tree_end_node"* %31 to i32*
  br label %33

33:                                               ; preds = %30, %28
  %34 = phi i32* [ %29, %28 ], [ %32, %30 ]
  %35 = load i32, i32* %34, align 8
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout19MainAxisSizeForViewERKNS0_11ViewWrapperEi(%"class.views::BoxLayout"* nocapture readonly, %"class.views::BoxLayout::ViewWrapper"* readonly dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %36

10:                                               ; preds = %3
  %11 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 0
  %13 = load %"class.views::View"*, %"class.views::View"** %12, align 8
  %14 = tail call i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"* %13) #11
  store i64 %14, i64* %5, align 8
  %15 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 1
  %16 = load %"class.views::BoxLayout"*, %"class.views::BoxLayout"** %15, align 8
  %17 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %16, i64 0, i32 9
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %33

20:                                               ; preds = %10
  %21 = bitcast i64* %5 to %"class.gfx::Size"*
  %22 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 3
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, %23
  %27 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, %28
  call void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* nonnull %21, i32 %26, i32 %31) #11
  %32 = load i64, i64* %5, align 8
  br label %33

33:                                               ; preds = %10, %20
  %34 = phi i64 [ %14, %10 ], [ %32, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  %35 = trunc i64 %34 to i32
  br label %122

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 5
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %69, label %40

40:                                               ; preds = %36
  %41 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 0
  %43 = load %"class.views::View"*, %"class.views::View"** %42, align 8
  %44 = tail call i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"* %43) #11
  store i64 %44, i64* %4, align 8
  %45 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 1
  %46 = load %"class.views::BoxLayout"*, %"class.views::BoxLayout"** %45, align 8
  %47 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %46, i64 0, i32 9
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %63

50:                                               ; preds = %40
  %51 = bitcast i64* %4 to %"class.gfx::Size"*
  %52 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 3
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i32 %55, %53
  %57 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = add nsw i32 %60, %58
  call void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* nonnull %51, i32 %56, i32 %61) #11
  %62 = load i64, i64* %4, align 8
  br label %63

63:                                               ; preds = %40, %50
  %64 = phi i64 [ %44, %40 ], [ %62, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  %65 = trunc i64 %64 to i32
  %66 = icmp slt i32 %65, %2
  %67 = load i32, i32* %6, align 4
  %68 = select i1 %66, i32 %65, i32 %67
  br label %69

69:                                               ; preds = %36, %63
  %70 = phi i32 [ %68, %63 ], [ %2, %36 ]
  %71 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 1
  %72 = load %"class.views::BoxLayout"*, %"class.views::BoxLayout"** %71, align 8
  %73 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %72, i64 0, i32 9
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 0
  %78 = load %"class.views::View"*, %"class.views::View"** %77, align 8
  %79 = bitcast %"class.views::View"* %78 to i32 (%"class.views::View"*, i32)***
  %80 = load i32 (%"class.views::View"*, i32)**, i32 (%"class.views::View"*, i32)*** %79, align 8
  %81 = getelementptr inbounds i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %80, i64 19
  %82 = load i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %81, align 8
  %83 = call i32 %82(%"class.views::View"* %78, i32 %70) #11
  br label %122

84:                                               ; preds = %69
  %85 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %72, i64 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 0
  %89 = load %"class.views::View"*, %"class.views::View"** %88, align 8
  br i1 %87, label %90, label %110

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 3
  %94 = load i32, i32* %93, align 4
  %95 = sub i32 %70, %92
  %96 = sub i32 %95, %94
  %97 = icmp sgt i32 %96, 0
  %98 = select i1 %97, i32 %96, i32 0
  %99 = bitcast %"class.views::View"* %89 to i32 (%"class.views::View"*, i32)***
  %100 = load i32 (%"class.views::View"*, i32)**, i32 (%"class.views::View"*, i32)*** %99, align 8
  %101 = getelementptr inbounds i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %100, i64 19
  %102 = load i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %101, align 8
  %103 = call i32 %102(%"class.views::View"* %89, i32 %98) #11
  %104 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = add i32 %105, %103
  %109 = add i32 %108, %107
  br label %122

110:                                              ; preds = %84
  %111 = bitcast %"class.views::View"* %89 to i32 (%"class.views::View"*, i32)***
  %112 = load i32 (%"class.views::View"*, i32)**, i32 (%"class.views::View"*, i32)*** %111, align 8
  %113 = getelementptr inbounds i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %112, i64 19
  %114 = load i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %113, align 8
  %115 = call i32 %114(%"class.views::View"* %89, i32 %70) #11
  %116 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = add i32 %117, %115
  %121 = add i32 %120, %119
  br label %122

122:                                              ; preds = %110, %90, %76, %33
  %123 = phi i32 [ %35, %33 ], [ %83, %76 ], [ %109, %90 ], [ %121, %110 ]
  ret i32 %123
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout26MainAxisMarginBetweenViewsERKNS0_11ViewWrapperES3_(%"class.views::BoxLayout"* nocapture readonly, %"class.views::BoxLayout::ViewWrapper"* nocapture readonly dereferenceable(32), %"class.views::BoxLayout::ViewWrapper"* nocapture readonly dereferenceable(32)) local_unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 9
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 0
  %9 = load %"class.views::View"*, %"class.views::View"** %8, align 8
  %10 = icmp eq %"class.views::View"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %2, i64 0, i32 0
  %13 = load %"class.views::View"*, %"class.views::View"** %12, align 8
  %14 = icmp eq %"class.views::View"* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %11, %7, %3
  %16 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  br label %38

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = select i1 %22, i32 %24, i32 %26
  %28 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %2, i64 0, i32 2, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %2, i64 0, i32 2, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = select i1 %22, i32 %29, i32 %31
  %33 = icmp slt i32 %27, %32
  %34 = load i32, i32* %19, align 4
  %35 = select i1 %33, i32 %32, i32 %27
  %36 = icmp slt i32 %34, %35
  %37 = select i1 %36, i32 %35, i32 %34
  br label %38

38:                                               ; preds = %18, %15
  %39 = phi i32 [ %37, %18 ], [ %17, %15 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::View"* @_ZNK5views9BoxLayout15NextVisibleViewENSt3__111__wrap_iterIPKPNS_4ViewEEE(%"class.views::BoxLayout"* nocapture readonly, %"class.views::View"**) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 10
  %4 = load %"class.views::View"*, %"class.views::View"** %3, align 8
  %5 = getelementptr inbounds %"class.views::View", %"class.views::View"* %4, i64 0, i32 14, i32 0, i32 1
  %6 = load %"class.views::View"**, %"class.views::View"*** %5, align 8
  %7 = icmp eq %"class.views::View"** %6, %1
  br i1 %7, label %23, label %8

8:                                                ; preds = %2, %12
  %9 = phi %"class.views::View"** [ %13, %12 ], [ %1, %2 ]
  %10 = load %"class.views::View"*, %"class.views::View"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %10) #11
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %9, i64 1
  %14 = icmp eq %"class.views::View"** %13, %6
  br i1 %14, label %15, label %8

15:                                               ; preds = %8, %12
  %16 = phi %"class.views::View"** [ %6, %12 ], [ %9, %8 ]
  %17 = load %"class.views::View"*, %"class.views::View"** %3, align 8
  %18 = getelementptr inbounds %"class.views::View", %"class.views::View"* %17, i64 0, i32 14, i32 0, i32 1
  %19 = load %"class.views::View"**, %"class.views::View"*** %18, align 8
  %20 = icmp eq %"class.views::View"** %16, %19
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  %22 = load %"class.views::View"*, %"class.views::View"** %16, align 8
  br label %23

23:                                               ; preds = %2, %15, %21
  %24 = phi %"class.views::View"* [ %22, %21 ], [ null, %15 ], [ null, %2 ]
  ret %"class.views::View"* %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout12MainAxisSizeERKN3gfx4RectE(%"class.views::BoxLayout"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = select i1 %5, i32 %7, i32 %9
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout16MainAxisPositionERKN3gfx4RectE(%"class.views::BoxLayout"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = select i1 %5, i32 %7, i32 %9
  ret i32 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5views9BoxLayout19SetMainAxisPositionEiPN3gfx4RectE(%"class.views::BoxLayout"* nocapture readonly, i32, %"class.gfx::Rect"* nocapture) local_unnamed_addr #9 align 2 {
  %4 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %18

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  store i32 %1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %1, 0
  %12 = icmp sgt i32 %10, 0
  %13 = and i1 %11, %12
  %14 = sub nuw nsw i32 2147483647, %1
  %15 = icmp ult i32 %14, %10
  %16 = and i1 %15, %13
  %17 = select i1 %16, i32 %14, i32 %10
  br label %29

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  store i32 %1, i32* %19, align 4
  %20 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %1, 0
  %23 = icmp sgt i32 %21, 0
  %24 = and i1 %22, %23
  %25 = sub nuw nsw i32 2147483647, %1
  %26 = icmp ult i32 %25, %21
  %27 = and i1 %26, %24
  %28 = select i1 %27, i32 %25, i32 %21
  br label %29

29:                                               ; preds = %18, %7
  %30 = phi i32 [ %28, %18 ], [ %17, %7 ]
  %31 = phi i32* [ %20, %18 ], [ %9, %7 ]
  %32 = icmp sgt i32 %30, 0
  %33 = select i1 %32, i32 %30, i32 0
  store i32 %33, i32* %31, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5views9BoxLayout15SetMainAxisSizeEiPN3gfx4RectE(%"class.views::BoxLayout"* nocapture readonly, i32, %"class.gfx::Rect"* nocapture) local_unnamed_addr #9 align 2 {
  %4 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %20

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  %11 = icmp sgt i32 %1, 0
  %12 = and i1 %11, %10
  %13 = sub nuw nsw i32 2147483647, %9
  %14 = icmp ult i32 %13, %1
  %15 = and i1 %14, %12
  %16 = select i1 %15, i32 %13, i32 %1
  %17 = icmp sgt i32 %16, 0
  %18 = select i1 %17, i32 %16, i32 0
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  store i32 %18, i32* %19, align 4
  br label %33

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 0
  %24 = icmp sgt i32 %1, 0
  %25 = and i1 %24, %23
  %26 = sub nuw nsw i32 2147483647, %22
  %27 = icmp ult i32 %26, %1
  %28 = and i1 %27, %25
  %29 = select i1 %28, i32 %26, i32 %1
  %30 = icmp sgt i32 %29, 0
  %31 = select i1 %30, i32 %29, i32 0
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  store i32 %31, i32* %32, align 4
  br label %33

33:                                               ; preds = %20, %7
  ret void
}

declare void @_ZN3gfx4Rect9IntersectERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views9BoxLayout14InsetCrossAxisEPN3gfx4RectEii(%"class.views::BoxLayout"* nocapture readonly, %"class.gfx::Rect"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  tail call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* %1, i32 %2, i32 0, i32 %3, i32 0) #11
  br label %10

9:                                                ; preds = %4
  tail call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* %1, i32 0, i32 %2, i32 0, i32 %3) #11
  br label %10

10:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout21CrossAxisLeadingInsetERKN3gfx6InsetsE(%"class.views::BoxLayout"* nocapture readonly, %"class.gfx::Insets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  %6 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = select i1 %5, i32 %7, i32 %9
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout22CrossAxisTrailingInsetERKN3gfx6InsetsE(%"class.views::BoxLayout"* nocapture readonly, %"class.gfx::Insets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  %6 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = select i1 %5, i32 %7, i32 %9
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout26CrossAxisMarginSizeForViewERKNS0_11ViewWrapperE(%"class.views::BoxLayout"* nocapture readonly, %"class.views::BoxLayout::ViewWrapper"* nocapture readonly dereferenceable(32)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %22

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %14, %12
  br label %22

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = add nsw i32 %20, %18
  br label %22

22:                                               ; preds = %2, %10, %16
  %23 = phi i32 [ 0, %2 ], [ %15, %10 ], [ %21, %16 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout20CrossAxisSizeForViewERKNS0_11ViewWrapperE(%"class.views::BoxLayout"* nocapture readonly, %"class.views::BoxLayout::ViewWrapper"* readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %34

8:                                                ; preds = %2
  %9 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 0
  %11 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %12 = tail call i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"* %11) #11
  store i64 %12, i64* %4, align 8
  %13 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 1
  %14 = load %"class.views::BoxLayout"*, %"class.views::BoxLayout"** %13, align 8
  %15 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %8
  %19 = bitcast i64* %4 to %"class.gfx::Size"*
  %20 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = add nsw i32 %23, %21
  %25 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = add nsw i32 %28, %26
  call void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* nonnull %19, i32 %24, i32 %29) #11
  %30 = load i64, i64* %4, align 8
  br label %31

31:                                               ; preds = %8, %18
  %32 = phi i64 [ %12, %8 ], [ %30, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  %33 = trunc i64 %32 to i32
  br label %109

34:                                               ; preds = %2
  %35 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 0
  %37 = load %"class.views::View"*, %"class.views::View"** %36, align 8
  %38 = tail call i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"* %37) #11
  store i64 %38, i64* %3, align 8
  %39 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 1
  %40 = load %"class.views::BoxLayout"*, %"class.views::BoxLayout"** %39, align 8
  %41 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %40, i64 0, i32 9
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  %45 = trunc i64 %38 to i32
  br label %64

46:                                               ; preds = %34
  %47 = bitcast i64* %3 to %"class.gfx::Size"*
  %48 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = add nsw i32 %51, %49
  %53 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = add nsw i32 %56, %54
  call void @_ZN3gfx4Size7EnlargeEii(%"class.gfx::Size"* nonnull %47, i32 %52, i32 %57) #11
  %58 = load i64, i64* %3, align 8
  %59 = load %"class.views::BoxLayout"*, %"class.views::BoxLayout"** %39, align 8
  %60 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %59, i64 0, i32 9
  %61 = load i8, i8* %60, align 8, !range !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  %62 = trunc i64 %58 to i32
  %63 = icmp eq i8 %61, 0
  br i1 %63, label %72, label %64

64:                                               ; preds = %44, %46
  %65 = phi i32 [ %45, %44 ], [ %62, %46 ]
  %66 = load %"class.views::View"*, %"class.views::View"** %36, align 8
  %67 = bitcast %"class.views::View"* %66 to i32 (%"class.views::View"*, i32)***
  %68 = load i32 (%"class.views::View"*, i32)**, i32 (%"class.views::View"*, i32)*** %67, align 8
  %69 = getelementptr inbounds i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %68, i64 19
  %70 = load i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %69, align 8
  %71 = call i32 %70(%"class.views::View"* %66, i32 %65) #11
  br label %109

72:                                               ; preds = %46
  %73 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %59, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 0
  %76 = load %"class.views::View"*, %"class.views::View"** %36, align 8
  br i1 %75, label %77, label %97

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 3
  %81 = load i32, i32* %80, align 4
  %82 = sub i32 %62, %79
  %83 = sub i32 %82, %81
  %84 = icmp sgt i32 %83, 0
  %85 = select i1 %84, i32 %83, i32 0
  %86 = bitcast %"class.views::View"* %76 to i32 (%"class.views::View"*, i32)***
  %87 = load i32 (%"class.views::View"*, i32)**, i32 (%"class.views::View"*, i32)*** %86, align 8
  %88 = getelementptr inbounds i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %87, i64 19
  %89 = load i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %88, align 8
  %90 = call i32 %89(%"class.views::View"* %76, i32 %85) #11
  %91 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = add i32 %92, %90
  %96 = add i32 %95, %94
  br label %109

97:                                               ; preds = %72
  %98 = bitcast %"class.views::View"* %76 to i32 (%"class.views::View"*, i32)***
  %99 = load i32 (%"class.views::View"*, i32)**, i32 (%"class.views::View"*, i32)*** %98, align 8
  %100 = getelementptr inbounds i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %99, i64 19
  %101 = load i32 (%"class.views::View"*, i32)*, i32 (%"class.views::View"*, i32)** %100, align 8
  %102 = call i32 %101(%"class.views::View"* %76, i32 %62) #11
  %103 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = add i32 %104, %102
  %108 = add i32 %107, %106
  br label %109

109:                                              ; preds = %97, %77, %64, %31
  %110 = phi i32 [ %33, %31 ], [ %71, %64 ], [ %96, %77 ], [ %108, %97 ]
  ret i32 %110
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout13CrossAxisSizeERKN3gfx4RectE(%"class.views::BoxLayout"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  %6 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = select i1 %5, i32 %7, i32 %9
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout17CrossAxisPositionERKN3gfx4RectE(%"class.views::BoxLayout"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  %6 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = select i1 %5, i32 %7, i32 %9
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout20CrossAxisLeadingEdgeERKN3gfx4RectE(%"class.views::BoxLayout"* nocapture readonly, %"class.gfx::Rect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  %6 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %1, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = select i1 %5, i32 %7, i32 %9
  ret i32 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5views9BoxLayout20SetCrossAxisPositionEiPN3gfx4RectE(%"class.views::BoxLayout"* nocapture readonly, i32, %"class.gfx::Rect"* nocapture) local_unnamed_addr #9 align 2 {
  %4 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %18

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  store i32 %1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %1, 0
  %12 = icmp sgt i32 %10, 0
  %13 = and i1 %11, %12
  %14 = sub nuw nsw i32 2147483647, %1
  %15 = icmp ult i32 %14, %10
  %16 = and i1 %15, %13
  %17 = select i1 %16, i32 %14, i32 %10
  br label %29

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  store i32 %1, i32* %19, align 4
  %20 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %1, 0
  %23 = icmp sgt i32 %21, 0
  %24 = and i1 %22, %23
  %25 = sub nuw nsw i32 2147483647, %1
  %26 = icmp ult i32 %25, %21
  %27 = and i1 %26, %24
  %28 = select i1 %27, i32 %25, i32 %21
  br label %29

29:                                               ; preds = %18, %7
  %30 = phi i32 [ %28, %18 ], [ %17, %7 ]
  %31 = phi i32* [ %20, %18 ], [ %9, %7 ]
  %32 = icmp sgt i32 %30, 0
  %33 = select i1 %32, i32 %30, i32 0
  store i32 %33, i32* %31, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK5views9BoxLayout16SetCrossAxisSizeEiPN3gfx4RectE(%"class.views::BoxLayout"* nocapture readonly, i32, %"class.gfx::Rect"* nocapture) local_unnamed_addr #9 align 2 {
  %4 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %20

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, 0
  %11 = icmp sgt i32 %1, 0
  %12 = and i1 %11, %10
  %13 = sub nuw nsw i32 2147483647, %9
  %14 = icmp ult i32 %13, %1
  %15 = and i1 %14, %12
  %16 = select i1 %15, i32 %13, i32 %1
  %17 = icmp sgt i32 %16, 0
  %18 = select i1 %17, i32 %16, i32 0
  %19 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  store i32 %18, i32* %19, align 4
  br label %33

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 0
  %24 = icmp sgt i32 %1, 0
  %25 = and i1 %24, %23
  %26 = sub nuw nsw i32 2147483647, %22
  %27 = icmp ult i32 %26, %1
  %28 = and i1 %27, %25
  %29 = select i1 %28, i32 %26, i32 %1
  %30 = icmp sgt i32 %29, 0
  %31 = select i1 %30, i32 %29, i32 0
  %32 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  store i32 %31, i32* %32, align 4
  br label %33

33:                                               ; preds = %20, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout21GetMinimumSizeForViewEPKNS_4ViewE(%"class.views::BoxLayout"*, %"class.views::View"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %47, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %12 = icmp ult %"class.views::View"* %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %47, label %23

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.views::View"**
  %26 = load %"class.views::View"*, %"class.views::View"** %25, align 8
  %27 = icmp ugt %"class.views::View"* %26, %1
  br i1 %27, label %47, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"struct.std::__1::pair"*
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 4, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  %37 = bitcast %"class.views::View"* %1 to i64 (%"class.views::View"*)***
  %38 = load i64 (%"class.views::View"*)**, i64 (%"class.views::View"*)*** %37, align 8
  %39 = getelementptr inbounds i64 (%"class.views::View"*)*, i64 (%"class.views::View"*)** %38, i64 17
  %40 = load i64 (%"class.views::View"*)*, i64 (%"class.views::View"*)** %39, align 8
  %41 = tail call i64 %40(%"class.views::View"* %1) #11
  br i1 %36, label %42, label %44

42:                                               ; preds = %33
  %43 = trunc i64 %41 to i32
  br label %47

44:                                               ; preds = %33
  %45 = lshr i64 %41, 32
  %46 = trunc i64 %45 to i32
  br label %47

47:                                               ; preds = %23, %21, %2, %42, %44, %28
  %48 = phi i32 [ 0, %28 ], [ %43, %42 ], [ %46, %44 ], [ 0, %2 ], [ 0, %21 ], [ 0, %23 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5views9BoxLayout16GetPreferredSizeEPKNS_4ViewE(%"class.views::BoxLayout"*, %"class.views::View"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.gfx::Rect", align 4
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %146

8:                                                ; preds = %2
  %9 = bitcast %"class.gfx::Rect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %3, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 0, i64 16, i1 false) #11
  %11 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 10
  %12 = load %"class.views::View"*, %"class.views::View"** %11, align 8
  %13 = getelementptr inbounds %"class.views::View", %"class.views::View"* %12, i64 0, i32 14, i32 0, i32 0
  %14 = load %"class.views::View"**, %"class.views::View"*** %13, align 8
  %15 = getelementptr inbounds %"class.views::View", %"class.views::View"* %12, i64 0, i32 14, i32 0, i32 1
  %16 = load %"class.views::View"**, %"class.views::View"*** %15, align 8
  %17 = icmp eq %"class.views::View"** %14, %16
  br i1 %17, label %29, label %18

18:                                               ; preds = %8
  %19 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN5views11kMarginsKeyE, align 8
  %20 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 9
  %21 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 1
  %22 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 3
  %23 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 5
  %24 = bitcast %"class.gfx::Rect"* %4 to i8*
  %25 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  br label %39

29:                                               ; preds = %140, %8
  %30 = phi i32 [ 0, %8 ], [ %141, %140 ]
  %31 = phi i32 [ 0, %8 ], [ %142, %140 ]
  %32 = phi i32 [ 0, %8 ], [ %143, %140 ]
  %33 = add i32 %31, %30
  %34 = add i32 %33, %32
  %35 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 8
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %34, %36
  %38 = select i1 %37, i32 %36, i32 %34
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  br label %146

39:                                               ; preds = %18, %140
  %40 = phi i32 [ 0, %18 ], [ %143, %140 ]
  %41 = phi i32 [ 0, %18 ], [ %142, %140 ]
  %42 = phi i32 [ 0, %18 ], [ %141, %140 ]
  %43 = phi %"class.views::View"** [ %14, %18 ], [ %144, %140 ]
  %44 = load %"class.views::View"*, %"class.views::View"** %43, align 8
  %45 = icmp eq %"class.views::View"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.views::View", %"class.views::View"* %44, i64 0, i32 6
  %48 = call %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %47, %"struct.ui::ClassProperty"* %19) #11
  %49 = icmp eq %"class.gfx::Insets"* %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.gfx::Insets"* %48 to i64*
  %52 = load i64, i64* %51, align 4
  %53 = lshr i64 %52, 32
  %54 = trunc i64 %53 to i32
  %55 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %48, i64 0, i32 2
  %56 = bitcast i32* %55 to i64*
  %57 = load i64, i64* %56, align 4
  br label %58

58:                                               ; preds = %39, %46, %50
  %59 = phi i64 [ 0, %39 ], [ 0, %46 ], [ %57, %50 ]
  %60 = phi i32 [ 0, %39 ], [ 0, %46 ], [ %54, %50 ]
  %61 = phi i64 [ 0, %39 ], [ 0, %46 ], [ %52, %50 ]
  %62 = call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %44) #11
  br i1 %62, label %63, label %140

63:                                               ; preds = %58
  %64 = call i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"* %44) #11
  %65 = trunc i64 %64 to i32
  %66 = lshr i64 %64, 32
  %67 = trunc i64 %66 to i32
  %68 = load i8, i8* %20, align 8, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %96, label %70

70:                                               ; preds = %63
  %71 = load i32, i32* %21, align 4
  %72 = icmp slt i32 %60, %71
  %73 = select i1 %72, i32 %71, i32 %60
  %74 = lshr i64 %59, 32
  %75 = trunc i64 %74 to i32
  %76 = load i32, i32* %22, align 4
  %77 = icmp sgt i32 %76, %75
  %78 = select i1 %77, i32 %76, i32 %75
  %79 = icmp sgt i32 %73, 0
  %80 = icmp sgt i32 %78, 0
  %81 = and i1 %79, %80
  %82 = sub nuw nsw i32 2147483647, %73
  %83 = icmp ult i32 %82, %78
  %84 = and i1 %83, %81
  br i1 %84, label %92, label %85

85:                                               ; preds = %70
  %86 = and i32 %78, %73
  %87 = icmp slt i32 %86, 0
  %88 = sub nsw i32 -2147483648, %73
  %89 = icmp sgt i32 %88, %78
  %90 = and i1 %89, %87
  %91 = select i1 %90, i32 %88, i32 %78
  br label %92

92:                                               ; preds = %70, %85
  %93 = phi i32 [ %82, %70 ], [ %91, %85 ]
  %94 = zext i32 %93 to i64
  %95 = shl nuw i64 %94, 32
  br label %98

96:                                               ; preds = %63
  %97 = trunc i64 %61 to i32
  br label %98

98:                                               ; preds = %96, %92
  %99 = phi i32 [ %97, %96 ], [ 0, %92 ]
  %100 = phi i32 [ %60, %96 ], [ %73, %92 ]
  %101 = phi i64 [ %59, %96 ], [ %95, %92 ]
  %102 = load i32, i32* %23, align 4
  switch i32 %102, label %127 [
    i32 1, label %103
    i32 3, label %115
  ]

103:                                              ; preds = %98
  %104 = load i32, i32* %5, align 8
  %105 = icmp eq i32 %104, 1
  %106 = select i1 %105, i32 %100, i32 %99
  %107 = icmp slt i32 %41, %106
  %108 = select i1 %107, i32 %106, i32 %41
  %109 = lshr i64 %101, 32
  %110 = select i1 %105, i64 %109, i64 %101
  %111 = trunc i64 %110 to i32
  %112 = add nsw i32 %111, %65
  %113 = icmp slt i32 %40, %112
  %114 = select i1 %113, i32 %112, i32 %40
  br label %140

115:                                              ; preds = %98
  %116 = load i32, i32* %5, align 8
  %117 = icmp eq i32 %116, 1
  %118 = lshr i64 %101, 32
  %119 = select i1 %117, i64 %118, i64 %101
  %120 = trunc i64 %119 to i32
  %121 = icmp slt i32 %42, %120
  %122 = select i1 %121, i32 %120, i32 %42
  %123 = select i1 %117, i32 %100, i32 %99
  %124 = add nsw i32 %123, %65
  %125 = icmp slt i32 %40, %124
  %126 = select i1 %125, i32 %124, i32 %40
  br label %140

127:                                              ; preds = %98
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  %128 = sdiv i32 %65, -2
  store i32 %128, i32* %25, align 4
  store i32 0, i32* %26, align 4
  %129 = icmp sgt i32 %65, 0
  %130 = select i1 %129, i32 %65, i32 0
  store i32 %130, i32* %27, align 4
  %131 = icmp sgt i32 %67, 0
  %132 = select i1 %131, i32 %67, i32 0
  store i32 %132, i32* %28, align 4
  %133 = sub nsw i32 0, %60
  %134 = lshr i64 %59, 32
  %135 = trunc i64 %134 to i32
  %136 = sub nsw i32 0, %135
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %4, i32 %133, i32 0, i32 %136, i32 0) #11
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %3, %"class.gfx::Rect"* nonnull dereferenceable(16) %4) #11
  %137 = load i32, i32* %10, align 4
  %138 = icmp slt i32 %40, %137
  %139 = select i1 %138, i32 %137, i32 %40
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  br label %140

140:                                              ; preds = %58, %103, %127, %115
  %141 = phi i32 [ %122, %115 ], [ %42, %127 ], [ %42, %103 ], [ %42, %58 ]
  %142 = phi i32 [ %41, %115 ], [ %41, %127 ], [ %108, %103 ], [ %41, %58 ]
  %143 = phi i32 [ %126, %115 ], [ %139, %127 ], [ %114, %103 ], [ %40, %58 ]
  %144 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %43, i64 1
  %145 = icmp eq %"class.views::View"** %144, %16
  br i1 %145, label %29, label %39

146:                                              ; preds = %29, %2
  %147 = phi i32 [ %38, %29 ], [ 0, %2 ]
  %148 = call i64 @_ZNK5views9BoxLayout29GetPreferredSizeForChildWidthEPKNS_4ViewEi(%"class.views::BoxLayout"* %0, %"class.views::View"* %1, i32 %147)
  ret i64 %148
}

declare void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"*, i32, i32, i32, i32) local_unnamed_addr #2

declare void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5views9BoxLayout29GetPreferredSizeForChildWidthEPKNS_4ViewEi(%"class.views::BoxLayout"*, %"class.views::View"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gfx::Rect", align 4
  %5 = alloca %"class.gfx::Rect", align 8
  %6 = alloca %"class.views::BoxLayout::ViewWrapper", align 8
  %7 = bitcast %"class.gfx::Rect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %4, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %7, i8 0, i64 16, i1 false) #11
  %12 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %249

15:                                               ; preds = %3
  %16 = tail call { i64, i64 } @_ZNK5views9BoxLayout22CrossAxisMaxViewMarginEv(%"class.views::BoxLayout"* %0)
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = lshr i64 %17, 32
  %19 = extractvalue { i64, i64 } %16, 1
  %20 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 14, i32 0, i32 0
  %21 = load %"class.views::View"**, %"class.views::View"*** %20, align 8
  %22 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 14, i32 0, i32 1
  %23 = load %"class.views::View"**, %"class.views::View"*** %22, align 8
  %24 = icmp eq %"class.views::View"** %21, %23
  br i1 %24, label %43, label %25

25:                                               ; preds = %15
  %26 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN5views11kMarginsKeyE, align 8
  %27 = bitcast %"class.gfx::Rect"* %5 to i8*
  %28 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1, i32 1
  %32 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 9
  %33 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 0
  %34 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 2
  %35 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 5
  %36 = lshr i64 %19, 32
  %37 = bitcast %"class.gfx::Rect"* %5 to i64*
  %38 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 10
  %39 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 3
  br label %57

40:                                               ; preds = %244
  %41 = load i32, i32* %11, align 4
  %42 = load i32, i32* %9, align 4
  br label %43

43:                                               ; preds = %40, %15
  %44 = phi i32 [ %42, %40 ], [ 0, %15 ]
  %45 = phi i32 [ %41, %40 ], [ 0, %15 ]
  %46 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 8
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %45, %47
  %49 = select i1 %48, i32 %47, i32 %45
  %50 = icmp sgt i32 %44, 0
  %51 = icmp sgt i32 %49, 0
  %52 = and i1 %50, %51
  %53 = sub nuw nsw i32 2147483647, %44
  %54 = icmp ult i32 %53, %49
  %55 = and i1 %54, %52
  %56 = select i1 %55, i32 %53, i32 %49
  br label %375

57:                                               ; preds = %25, %244
  %58 = phi i32 [ 0, %25 ], [ %245, %244 ]
  %59 = phi %"class.views::View"** [ %21, %25 ], [ %246, %244 ]
  %60 = load %"class.views::View"*, %"class.views::View"** %59, align 8
  %61 = icmp eq %"class.views::View"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.views::View", %"class.views::View"* %60, i64 0, i32 6
  %64 = call %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %63, %"struct.ui::ClassProperty"* %26) #11
  %65 = icmp eq %"class.gfx::Insets"* %64, null
  br i1 %65, label %75, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.gfx::Insets"* %64 to i64*
  %68 = load i64, i64* %67, align 4
  %69 = trunc i64 %68 to i32
  %70 = lshr i64 %68, 32
  %71 = trunc i64 %70 to i32
  %72 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %64, i64 0, i32 2
  %73 = bitcast i32* %72 to i64*
  %74 = load i64, i64* %73, align 4
  br label %75

75:                                               ; preds = %57, %62, %66
  %76 = phi i64 [ 0, %57 ], [ 0, %62 ], [ %74, %66 ]
  %77 = phi i32 [ 0, %57 ], [ 0, %62 ], [ %71, %66 ]
  %78 = phi i32 [ 0, %57 ], [ 0, %62 ], [ %69, %66 ]
  %79 = call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %60) #11
  br i1 %79, label %80, label %244

80:                                               ; preds = %75
  %81 = call i64 @_ZNK5views4View16GetPreferredSizeEv(%"class.views::View"* %60) #11
  %82 = trunc i64 %81 to i32
  %83 = lshr i64 %81, 32
  %84 = trunc i64 %83 to i32
  %85 = icmp eq i32 %82, 0
  %86 = icmp eq i32 %84, 0
  %87 = or i1 %85, %86
  br i1 %87, label %244, label %88

88:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #11
  %89 = load i8, i8* %32, align 8, !range !2
  %90 = icmp eq i8 %89, 0
  %91 = lshr i64 %76, 32
  %92 = trunc i64 %91 to i32
  %93 = add nsw i32 %77, %92
  %94 = select i1 %90, i32 %93, i32 0
  %95 = add nsw i32 %94, %82
  store i32 %58, i32* %28, align 8
  store i32 0, i32* %29, align 4
  %96 = icmp sgt i32 %58, 0
  %97 = icmp sgt i32 %95, 0
  %98 = and i1 %96, %97
  %99 = sub nuw nsw i32 2147483647, %58
  %100 = icmp ult i32 %99, %95
  %101 = and i1 %100, %98
  %102 = select i1 %101, i32 %99, i32 %95
  %103 = icmp sgt i32 %102, 0
  %104 = select i1 %103, i32 %102, i32 0
  store i32 %104, i32* %30, align 8
  %105 = icmp sgt i32 %84, 0
  %106 = select i1 %105, i32 %84, i32 0
  store i32 %106, i32* %31, align 4
  br i1 %90, label %131, label %107

107:                                              ; preds = %88
  %108 = load i32, i32* %33, align 4
  %109 = icmp slt i32 %78, %108
  %110 = select i1 %109, i32 %108, i32 %78
  %111 = trunc i64 %76 to i32
  %112 = load i32, i32* %34, align 4
  %113 = icmp sgt i32 %112, %111
  %114 = select i1 %113, i32 %112, i32 %111
  %115 = icmp sgt i32 %110, 0
  %116 = icmp sgt i32 %114, 0
  %117 = and i1 %115, %116
  %118 = sub nuw nsw i32 2147483647, %110
  %119 = icmp ult i32 %118, %114
  %120 = and i1 %119, %117
  br i1 %120, label %128, label %121

121:                                              ; preds = %107
  %122 = and i32 %114, %110
  %123 = icmp slt i32 %122, 0
  %124 = sub nsw i32 -2147483648, %110
  %125 = icmp sgt i32 %124, %114
  %126 = and i1 %125, %123
  %127 = select i1 %126, i32 %124, i32 %114
  br label %128

128:                                              ; preds = %107, %121
  %129 = phi i32 [ %118, %107 ], [ %127, %121 ]
  %130 = zext i32 %129 to i64
  br label %131

131:                                              ; preds = %88, %128
  %132 = phi i64 [ %130, %128 ], [ %76, %88 ]
  %133 = phi i32 [ %110, %128 ], [ %78, %88 ]
  %134 = load i32, i32* %35, align 4
  switch i32 %134, label %174 [
    i32 1, label %135
    i32 3, label %155
  ]

135:                                              ; preds = %131
  %136 = load i32, i32* %12, align 8
  %137 = icmp eq i32 %136, 1
  %138 = select i1 %137, i64 %18, i64 %17
  %139 = trunc i64 %138 to i32
  %140 = sub nsw i32 0, %139
  %141 = trunc i64 %132 to i32
  %142 = sub nsw i32 0, %141
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %5, i32 0, i32 %140, i32 0, i32 %142) #11
  %143 = zext i32 %58 to i64
  store i64 %143, i64* %37, align 8
  %144 = load i32, i32* %30, align 8
  %145 = icmp sgt i32 %144, 0
  %146 = and i1 %96, %145
  %147 = icmp ult i32 %99, %144
  %148 = and i1 %147, %146
  %149 = select i1 %148, i32 %99, i32 %144
  %150 = icmp sgt i32 %149, 0
  %151 = select i1 %150, i32 %149, i32 0
  store i32 %151, i32* %30, align 8
  %152 = load i32, i32* %31, align 4
  %153 = icmp sgt i32 %152, 0
  %154 = select i1 %153, i32 %152, i32 0
  store i32 %154, i32* %31, align 4
  br label %189

155:                                              ; preds = %131
  %156 = sub nsw i32 0, %133
  %157 = load i32, i32* %12, align 8
  %158 = icmp eq i32 %157, 1
  %159 = select i1 %158, i64 %36, i64 %19
  %160 = trunc i64 %159 to i32
  %161 = sub nsw i32 0, %160
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %5, i32 0, i32 %156, i32 0, i32 %161) #11
  %162 = zext i32 %58 to i64
  store i64 %162, i64* %37, align 8
  %163 = load i32, i32* %30, align 8
  %164 = icmp sgt i32 %163, 0
  %165 = and i1 %96, %164
  %166 = icmp ult i32 %99, %163
  %167 = and i1 %166, %165
  %168 = select i1 %167, i32 %99, i32 %163
  %169 = icmp sgt i32 %168, 0
  %170 = select i1 %169, i32 %168, i32 0
  store i32 %170, i32* %30, align 8
  %171 = load i32, i32* %31, align 4
  %172 = icmp sgt i32 %171, 0
  %173 = select i1 %172, i32 %171, i32 0
  store i32 %173, i32* %31, align 4
  br label %189

174:                                              ; preds = %131
  %175 = sdiv i32 %106, -2
  %176 = zext i32 %175 to i64
  %177 = shl nuw i64 %176, 32
  %178 = zext i32 %58 to i64
  %179 = or i64 %177, %178
  store i64 %179, i64* %37, align 8
  %180 = and i1 %96, %103
  %181 = icmp ult i32 %99, %104
  %182 = and i1 %180, %181
  %183 = select i1 %182, i32 %99, i32 %104
  %184 = icmp sgt i32 %183, 0
  %185 = select i1 %184, i32 %183, i32 0
  store i32 %185, i32* %30, align 8
  store i32 %106, i32* %31, align 4
  %186 = sub nsw i32 0, %133
  %187 = trunc i64 %132 to i32
  %188 = sub nsw i32 0, %187
  call void @_ZN3gfx4Rect5InsetEiiii(%"class.gfx::Rect"* nonnull %5, i32 0, i32 %186, i32 0, i32 %188) #11
  br label %189

189:                                              ; preds = %155, %174, %135
  call void @_ZN3gfx4Rect5UnionERKS0_(%"class.gfx::Rect"* nonnull %4, %"class.gfx::Rect"* nonnull dereferenceable(16) %5) #11
  %190 = load i32, i32* %30, align 8
  %191 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %59, i64 1
  %192 = load %"class.views::View"*, %"class.views::View"** %38, align 8
  %193 = getelementptr inbounds %"class.views::View", %"class.views::View"* %192, i64 0, i32 14, i32 0, i32 1
  %194 = load %"class.views::View"**, %"class.views::View"*** %193, align 8
  %195 = icmp eq %"class.views::View"** %194, %191
  br i1 %195, label %227, label %196

196:                                              ; preds = %189, %200
  %197 = phi %"class.views::View"** [ %201, %200 ], [ %191, %189 ]
  %198 = load %"class.views::View"*, %"class.views::View"** %197, align 8
  %199 = call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %198) #11
  br i1 %199, label %203, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %197, i64 1
  %202 = icmp eq %"class.views::View"** %201, %194
  br i1 %202, label %203, label %196

203:                                              ; preds = %200, %196
  %204 = phi %"class.views::View"** [ %194, %200 ], [ %197, %196 ]
  %205 = load %"class.views::View"*, %"class.views::View"** %38, align 8
  %206 = getelementptr inbounds %"class.views::View", %"class.views::View"* %205, i64 0, i32 14, i32 0, i32 1
  %207 = load %"class.views::View"**, %"class.views::View"*** %206, align 8
  %208 = icmp eq %"class.views::View"** %204, %207
  br i1 %208, label %227, label %209

209:                                              ; preds = %203
  %210 = load %"class.views::View"*, %"class.views::View"** %204, align 8
  %211 = icmp eq %"class.views::View"* %210, null
  br i1 %211, label %227, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %"class.views::View", %"class.views::View"* %210, i64 0, i32 6
  %214 = call %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %213, %"struct.ui::ClassProperty"* %26) #11
  %215 = icmp eq %"class.gfx::Insets"* %214, null
  br i1 %215, label %221, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %214, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %214, i64 0, i32 1
  %220 = load i32, i32* %219, align 4
  br label %221

221:                                              ; preds = %212, %216
  %222 = phi i32 [ 0, %212 ], [ %218, %216 ]
  %223 = phi i32 [ 0, %212 ], [ %220, %216 ]
  %224 = load i8, i8* %32, align 8, !range !2
  %225 = icmp eq i8 %224, 0
  %226 = or i1 %61, %225
  br i1 %226, label %227, label %229

227:                                              ; preds = %189, %203, %209, %221
  %228 = load i32, i32* %39, align 4
  br label %240

229:                                              ; preds = %221
  %230 = load i32, i32* %12, align 8
  %231 = icmp eq i32 %230, 0
  %232 = select i1 %231, i64 %91, i64 %76
  %233 = trunc i64 %232 to i32
  %234 = select i1 %231, i32 %223, i32 %222
  %235 = icmp sgt i32 %234, %233
  %236 = load i32, i32* %39, align 4
  %237 = select i1 %235, i32 %234, i32 %233
  %238 = icmp slt i32 %236, %237
  %239 = select i1 %238, i32 %237, i32 %236
  br label %240

240:                                              ; preds = %227, %229
  %241 = phi i32 [ %239, %229 ], [ %228, %227 ]
  %242 = add i32 %190, %58
  %243 = add i32 %242, %241
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  br label %244

244:                                              ; preds = %80, %240, %75
  %245 = phi i32 [ %58, %75 ], [ %243, %240 ], [ %58, %80 ]
  %246 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %59, i64 1
  %247 = load %"class.views::View"**, %"class.views::View"*** %22, align 8
  %248 = icmp eq %"class.views::View"** %246, %247
  br i1 %248, label %40, label %57

249:                                              ; preds = %3
  %250 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 14, i32 0, i32 0
  %251 = load %"class.views::View"**, %"class.views::View"*** %250, align 8
  %252 = getelementptr inbounds %"class.views::View", %"class.views::View"* %1, i64 0, i32 14, i32 0, i32 1
  %253 = load %"class.views::View"**, %"class.views::View"*** %252, align 8
  %254 = icmp eq %"class.views::View"** %251, %253
  br i1 %254, label %271, label %255

255:                                              ; preds = %249
  %256 = bitcast %"class.views::BoxLayout::ViewWrapper"* %6 to i8*
  %257 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %6, i64 0, i32 0
  %258 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %6, i64 0, i32 1
  %259 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %6, i64 0, i32 2, i32 2
  %260 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %6, i64 0, i32 2, i32 3
  %261 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %6, i64 0, i32 2
  %262 = bitcast %"class.gfx::Insets"* %261 to i8*
  %263 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN5views11kMarginsKeyE, align 8
  %264 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 10
  %265 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 9
  %266 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 3
  %267 = bitcast %"class.views::BoxLayout::ViewWrapper"* %6 to i8*
  br label %291

268:                                              ; preds = %370
  %269 = load i32, i32* %8, align 4
  %270 = load i32, i32* %9, align 4
  br label %271

271:                                              ; preds = %268, %249
  %272 = phi i32 [ 0, %249 ], [ %270, %268 ]
  %273 = phi i32 [ 0, %249 ], [ %269, %268 ]
  %274 = phi i32 [ 0, %249 ], [ %371, %268 ]
  %275 = icmp sgt i32 %273, 0
  %276 = icmp sgt i32 %2, 0
  %277 = and i1 %276, %275
  %278 = sub nuw nsw i32 2147483647, %273
  %279 = icmp ult i32 %278, %2
  %280 = and i1 %279, %277
  %281 = select i1 %280, i32 %278, i32 %2
  %282 = icmp sgt i32 %281, 0
  %283 = select i1 %282, i32 %281, i32 0
  store i32 %283, i32* %10, align 4
  %284 = icmp sgt i32 %272, 0
  %285 = icmp sgt i32 %274, 0
  %286 = and i1 %285, %284
  %287 = sub nuw nsw i32 2147483647, %272
  %288 = icmp ult i32 %287, %274
  %289 = and i1 %288, %286
  %290 = select i1 %289, i32 %287, i32 %274
  br label %375

291:                                              ; preds = %255, %370
  %292 = phi i32 [ 0, %255 ], [ %371, %370 ]
  %293 = phi %"class.views::View"** [ %251, %255 ], [ %372, %370 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %256) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %267, i8 -86, i64 32, i1 false)
  %294 = load %"class.views::View"*, %"class.views::View"** %293, align 8
  store %"class.views::View"* %294, %"class.views::View"** %257, align 8
  store %"class.views::BoxLayout"* %0, %"class.views::BoxLayout"** %258, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %262, i8 0, i64 16, i1 false) #11
  %295 = icmp eq %"class.views::View"* %294, null
  br i1 %295, label %302, label %296

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"class.views::View", %"class.views::View"* %294, i64 0, i32 6
  %298 = call %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %297, %"struct.ui::ClassProperty"* %263) #11
  %299 = icmp eq %"class.gfx::Insets"* %298, null
  br i1 %299, label %302, label %300

300:                                              ; preds = %296
  %301 = bitcast %"class.gfx::Insets"* %298 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %262, i8* nonnull align 4 %301, i64 16, i1 false) #11
  br label %302

302:                                              ; preds = %291, %296, %300
  %303 = load %"class.views::View"*, %"class.views::View"** %257, align 8
  %304 = call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %303) #11
  br i1 %304, label %305, label %370

305:                                              ; preds = %302
  %306 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %293, i64 1
  %307 = load %"class.views::View"*, %"class.views::View"** %264, align 8
  %308 = getelementptr inbounds %"class.views::View", %"class.views::View"* %307, i64 0, i32 14, i32 0, i32 1
  %309 = load %"class.views::View"**, %"class.views::View"*** %308, align 8
  %310 = icmp eq %"class.views::View"** %309, %306
  br i1 %310, label %336, label %311

311:                                              ; preds = %305, %315
  %312 = phi %"class.views::View"** [ %316, %315 ], [ %306, %305 ]
  %313 = load %"class.views::View"*, %"class.views::View"** %312, align 8
  %314 = call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %313) #11
  br i1 %314, label %318, label %315

315:                                              ; preds = %311
  %316 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %312, i64 1
  %317 = icmp eq %"class.views::View"** %316, %309
  br i1 %317, label %318, label %311

318:                                              ; preds = %315, %311
  %319 = phi %"class.views::View"** [ %309, %315 ], [ %312, %311 ]
  %320 = load %"class.views::View"*, %"class.views::View"** %264, align 8
  %321 = getelementptr inbounds %"class.views::View", %"class.views::View"* %320, i64 0, i32 14, i32 0, i32 1
  %322 = load %"class.views::View"**, %"class.views::View"*** %321, align 8
  %323 = icmp eq %"class.views::View"** %319, %322
  br i1 %323, label %336, label %324

324:                                              ; preds = %318
  %325 = load %"class.views::View"*, %"class.views::View"** %319, align 8
  %326 = icmp eq %"class.views::View"* %325, null
  br i1 %326, label %336, label %327

327:                                              ; preds = %324
  %328 = getelementptr inbounds %"class.views::View", %"class.views::View"* %325, i64 0, i32 6
  %329 = call %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %328, %"struct.ui::ClassProperty"* %263) #11
  %330 = icmp eq %"class.gfx::Insets"* %329, null
  br i1 %330, label %336, label %331

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %329, i64 0, i32 0
  %333 = load i32, i32* %332, align 4
  %334 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %329, i64 0, i32 1
  %335 = load i32, i32* %334, align 4
  br label %336

336:                                              ; preds = %305, %318, %324, %327, %331
  %337 = phi %"class.views::View"* [ null, %324 ], [ %325, %327 ], [ %325, %331 ], [ null, %318 ], [ null, %305 ]
  %338 = phi i32 [ 0, %324 ], [ 0, %327 ], [ %333, %331 ], [ 0, %318 ], [ 0, %305 ]
  %339 = phi i32 [ 0, %324 ], [ 0, %327 ], [ %335, %331 ], [ 0, %318 ], [ 0, %305 ]
  %340 = call i32 @_ZNK5views9BoxLayout19MainAxisSizeForViewERKNS0_11ViewWrapperEi(%"class.views::BoxLayout"* %0, %"class.views::BoxLayout::ViewWrapper"* nonnull dereferenceable(32) %6, i32 %2)
  %341 = icmp ne %"class.views::View"* %337, null
  %342 = icmp sgt i32 %340, 0
  %343 = and i1 %341, %342
  br i1 %343, label %344, label %367

344:                                              ; preds = %336
  %345 = load i8, i8* %265, align 8, !range !2
  %346 = icmp eq i8 %345, 0
  %347 = load %"class.views::View"*, %"class.views::View"** %257, align 8
  %348 = icmp eq %"class.views::View"* %347, null
  %349 = or i1 %346, %348
  br i1 %349, label %350, label %352

350:                                              ; preds = %344
  %351 = load i32, i32* %266, align 4
  br label %364

352:                                              ; preds = %344
  %353 = load i32, i32* %12, align 8
  %354 = icmp eq i32 %353, 0
  %355 = load i32, i32* %260, align 4
  %356 = load i32, i32* %259, align 8
  %357 = select i1 %354, i32 %355, i32 %356
  %358 = select i1 %354, i32 %339, i32 %338
  %359 = icmp slt i32 %357, %358
  %360 = load i32, i32* %266, align 4
  %361 = select i1 %359, i32 %358, i32 %357
  %362 = icmp slt i32 %360, %361
  %363 = select i1 %362, i32 %361, i32 %360
  br label %364

364:                                              ; preds = %350, %352
  %365 = phi i32 [ %363, %352 ], [ %351, %350 ]
  %366 = add nsw i32 %365, %292
  br label %367

367:                                              ; preds = %364, %336
  %368 = phi i32 [ %366, %364 ], [ %292, %336 ]
  %369 = add nsw i32 %368, %340
  br label %370

370:                                              ; preds = %302, %367
  %371 = phi i32 [ %369, %367 ], [ %292, %302 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %256) #11
  %372 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %293, i64 1
  %373 = load %"class.views::View"**, %"class.views::View"*** %252, align 8
  %374 = icmp eq %"class.views::View"** %372, %373
  br i1 %374, label %268, label %291

375:                                              ; preds = %271, %43
  %376 = phi i32 [ %290, %271 ], [ %56, %43 ]
  %377 = icmp sgt i32 %376, 0
  %378 = select i1 %377, i32 %376, i32 0
  store i32 %378, i32* %11, align 4
  %379 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 10
  %380 = load %"class.views::View"*, %"class.views::View"** %379, align 8
  %381 = call i64 @_ZNK5views9BoxLayout12NonChildSizeEPKNS_4ViewE(%"class.views::BoxLayout"* %0, %"class.views::View"* %380)
  %382 = trunc i64 %381 to i32
  %383 = lshr i64 %381, 32
  %384 = trunc i64 %383 to i32
  %385 = load i32, i32* %10, align 4
  %386 = add nsw i32 %385, %382
  %387 = load i32, i32* %11, align 4
  %388 = add nsw i32 %387, %384
  %389 = icmp sgt i32 %386, 0
  %390 = select i1 %389, i32 %386, i32 0
  %391 = icmp sgt i32 %388, 0
  %392 = select i1 %391, i32 %388, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  %393 = zext i32 %392 to i64
  %394 = shl nuw nsw i64 %393, 32
  %395 = zext i32 %390 to i64
  %396 = or i64 %394, %395
  ret i64 %396
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout26GetPreferredHeightForWidthEPKNS_4ViewEi(%"class.views::BoxLayout"*, %"class.views::View"*, i32) unnamed_addr #0 align 2 {
  %4 = tail call i64 @_ZNK5views9BoxLayout12NonChildSizeEPKNS_4ViewE(%"class.views::BoxLayout"* %0, %"class.views::View"* %1)
  %5 = trunc i64 %4 to i32
  %6 = sub nsw i32 %2, %5
  %7 = tail call i64 @_ZNK5views9BoxLayout29GetPreferredSizeForChildWidthEPKNS_4ViewEi(%"class.views::BoxLayout"* %0, %"class.views::View"* %1, i32 %6)
  %8 = lshr i64 %7, 32
  %9 = trunc i64 %8 to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5views9BoxLayout12NonChildSizeEPKNS_4ViewE(%"class.views::BoxLayout"*, %"class.views::View"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.views::View"* %1 to { i64, i64 } (%"class.views::View"*)***
  %4 = load { i64, i64 } (%"class.views::View"*)**, { i64, i64 } (%"class.views::View"*)*** %3, align 8
  %5 = getelementptr inbounds { i64, i64 } (%"class.views::View"*)*, { i64, i64 } (%"class.views::View"*)** %4, i64 14
  %6 = load { i64, i64 } (%"class.views::View"*)*, { i64, i64 } (%"class.views::View"*)** %5, align 8
  %7 = tail call { i64, i64 } %6(%"class.views::View"* %1) #11
  %8 = extractvalue { i64, i64 } %7, 0
  %9 = trunc i64 %8 to i32
  %10 = lshr i64 %8, 32
  %11 = trunc i64 %10 to i32
  %12 = extractvalue { i64, i64 } %7, 1
  %13 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 9
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %30

16:                                               ; preds = %2
  %17 = lshr i64 %12, 32
  %18 = trunc i64 %17 to i32
  %19 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %18, %11
  %24 = add i32 %23, %20
  %25 = add i32 %24, %22
  %26 = trunc i64 %12 to i32
  %27 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = add i32 %26, %9
  br label %57

30:                                               ; preds = %2
  %31 = tail call { i64, i64 } @_ZNK5views9BoxLayout19MainAxisOuterMarginEv(%"class.views::BoxLayout"* %0)
  %32 = extractvalue { i64, i64 } %31, 0
  %33 = trunc i64 %32 to i32
  %34 = lshr i64 %32, 32
  %35 = trunc i64 %34 to i32
  %36 = extractvalue { i64, i64 } %31, 1
  %37 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = lshr i64 %12, 32
  %44 = trunc i64 %43 to i32
  %45 = lshr i64 %36, 32
  %46 = trunc i64 %45 to i32
  %47 = add i32 %44, %11
  %48 = add i32 %47, %40
  %49 = add i32 %48, %35
  %50 = add i32 %49, %46
  %51 = add i32 %50, %42
  %52 = trunc i64 %12 to i32
  %53 = trunc i64 %36 to i32
  %54 = add i32 %52, %9
  %55 = add i32 %54, %38
  %56 = add i32 %55, %33
  br label %57

57:                                               ; preds = %30, %16
  %58 = phi i32 [ %53, %30 ], [ %28, %16 ]
  %59 = phi i32 [ %56, %30 ], [ %29, %16 ]
  %60 = phi i32 [ %51, %30 ], [ %25, %16 ]
  %61 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %59, %58
  %64 = add i32 %63, %62
  %65 = icmp sgt i32 %60, 0
  %66 = select i1 %65, i32 %60, i32 0
  %67 = icmp sgt i32 %64, 0
  %68 = select i1 %67, i32 %64, i32 0
  %69 = zext i32 %68 to i64
  %70 = shl nuw nsw i64 %69, 32
  %71 = zext i32 %66 to i64
  %72 = or i64 %70, %71
  ret i64 %72
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views9BoxLayout9InstalledEPNS_4ViewE(%"class.views::BoxLayout"* nocapture, %"class.views::View"*) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 10
  store %"class.views::View"* %1, %"class.views::View"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views9BoxLayout11ViewRemovedEPNS_4ViewES2_(%"class.views::BoxLayout"*, %"class.views::View"* nocapture readnone, %"class.views::View"* readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0
  %5 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  %9 = bitcast %"class.std::__1::__tree_node"* %7 to %"class.std::__1::__tree_node_base"*
  br i1 %8, label %73, label %10

10:                                               ; preds = %3, %10
  %11 = phi %"class.std::__1::__tree_end_node"* [ %21, %10 ], [ %5, %3 ]
  %12 = phi %"class.std::__1::__tree_node"* [ %22, %10 ], [ %7, %3 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.views::View"*, %"class.views::View"** %13, align 8
  %15 = icmp ult %"class.views::View"* %14, %2
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node"* %12 to %"class.std::__1::__tree_node"**
  %20 = select i1 %15, %"class.std::__1::__tree_node"** %17, %"class.std::__1::__tree_node"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %5
  br i1 %25, label %73, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to %"class.views::View"**
  %29 = load %"class.views::View"*, %"class.views::View"** %28, align 8
  %30 = icmp ugt %"class.views::View"* %29, %2
  br i1 %30, label %73, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 1, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %43

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 2
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_end_node"**
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, %36
  br i1 %42, label %59, label %50

43:                                               ; preds = %31, %43
  %44 = phi %"class.std::__1::__tree_node_base"* [ %46, %43 ], [ %33, %31 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %43

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0
  br label %59

50:                                               ; preds = %35, %50
  %51 = phi %"class.std::__1::__tree_end_node"** [ %54, %50 ], [ %38, %35 ]
  %52 = bitcast %"class.std::__1::__tree_end_node"** %51 to %"class.std::__1::__tree_node_base"**
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 2
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %53
  br i1 %58, label %59, label %50

59:                                               ; preds = %50, %48, %35
  %60 = phi %"class.std::__1::__tree_end_node"* [ %49, %48 ], [ %39, %35 ], [ %55, %50 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree.131", %"class.std::__1::__tree.131"* %4, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %62, %21
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = ptrtoint %"class.std::__1::__tree_end_node"* %60 to i64
  %66 = bitcast %"class.std::__1::__tree.131"* %4 to i64*
  store i64 %65, i64* %66, align 8
  br label %67

67:                                               ; preds = %64, %59
  %68 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %9, %"class.std::__1::__tree_node_base"* %71) #11
  %72 = bitcast %"class.std::__1::__tree_end_node"* %21 to i8*
  tail call void @_ZdlPv(i8* %72) #12
  br label %73

73:                                               ; preds = %3, %24, %26, %67
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout20MainAxisLeadingInsetERKN3gfx6InsetsE(%"class.views::BoxLayout"* nocapture readonly, %"class.gfx::Insets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = select i1 %5, i32 %7, i32 %9
  ret i32 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout21MainAxisTrailingInsetERKN3gfx6InsetsE(%"class.views::BoxLayout"* nocapture readonly, %"class.gfx::Insets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = select i1 %5, i32 %7, i32 %9
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5views9BoxLayout19MainAxisOuterMarginEv(%"class.views::BoxLayout"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %135, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 10
  %7 = load %"class.views::View"*, %"class.views::View"** %6, align 8
  %8 = getelementptr inbounds %"class.views::View", %"class.views::View"* %7, i64 0, i32 14, i32 0, i32 0
  %9 = load %"class.views::View"**, %"class.views::View"*** %8, align 8
  %10 = getelementptr inbounds %"class.views::View", %"class.views::View"* %7, i64 0, i32 14, i32 0, i32 1
  %11 = load %"class.views::View"**, %"class.views::View"*** %10, align 8
  %12 = icmp eq %"class.views::View"** %11, %9
  br i1 %12, label %39, label %13

13:                                               ; preds = %5, %17
  %14 = phi %"class.views::View"** [ %18, %17 ], [ %9, %5 ]
  %15 = load %"class.views::View"*, %"class.views::View"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %15) #11
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %14, i64 1
  %19 = icmp eq %"class.views::View"** %18, %11
  br i1 %19, label %20, label %13

20:                                               ; preds = %17, %13
  %21 = phi %"class.views::View"** [ %11, %17 ], [ %14, %13 ]
  %22 = load %"class.views::View"*, %"class.views::View"** %6, align 8
  %23 = getelementptr inbounds %"class.views::View", %"class.views::View"* %22, i64 0, i32 14, i32 0, i32 1
  %24 = load %"class.views::View"**, %"class.views::View"*** %23, align 8
  %25 = icmp eq %"class.views::View"** %21, %24
  br i1 %25, label %39, label %26

26:                                               ; preds = %20
  %27 = load %"class.views::View"*, %"class.views::View"** %21, align 8
  %28 = icmp eq %"class.views::View"* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.views::View", %"class.views::View"* %27, i64 0, i32 6
  %31 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN5views11kMarginsKeyE, align 8
  %32 = tail call %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %30, %"struct.ui::ClassProperty"* %31) #11
  %33 = icmp eq %"class.gfx::Insets"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %32, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %32, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %5, %20, %26, %29, %34
  %40 = phi i32 [ 0, %26 ], [ 0, %29 ], [ %38, %34 ], [ 0, %20 ], [ 0, %5 ]
  %41 = phi i32 [ 0, %26 ], [ 0, %29 ], [ %36, %34 ], [ 0, %20 ], [ 0, %5 ]
  %42 = load %"class.views::View"*, %"class.views::View"** %6, align 8
  %43 = getelementptr inbounds %"class.views::View", %"class.views::View"* %42, i64 0, i32 14, i32 0, i32 1
  %44 = load %"class.views::View"**, %"class.views::View"*** %43, align 8
  %45 = getelementptr inbounds %"class.views::View", %"class.views::View"* %42, i64 0, i32 14, i32 0, i32 0
  %46 = load %"class.views::View"**, %"class.views::View"*** %45, align 8
  br label %47

47:                                               ; preds = %50, %39
  %48 = phi %"class.views::View"** [ %44, %39 ], [ %51, %50 ]
  %49 = icmp eq %"class.views::View"** %48, %46
  br i1 %49, label %54, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %48, i64 -1
  %52 = load %"class.views::View"*, %"class.views::View"** %51, align 8
  %53 = tail call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %52) #11
  br i1 %53, label %54, label %47

54:                                               ; preds = %50, %47
  %55 = phi %"class.views::View"** [ %46, %47 ], [ %48, %50 ]
  %56 = load %"class.views::View"**, %"class.views::View"*** %45, align 8
  %57 = icmp eq %"class.views::View"** %55, %56
  br i1 %57, label %72, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %55, i64 -1
  %60 = load %"class.views::View"*, %"class.views::View"** %59, align 8
  %61 = icmp eq %"class.views::View"* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.views::View", %"class.views::View"* %60, i64 0, i32 6
  %64 = load %"struct.ui::ClassProperty"*, %"struct.ui::ClassProperty"** @_ZN5views11kMarginsKeyE, align 8
  %65 = tail call %"class.gfx::Insets"* @_ZNK2ui15PropertyHandler11GetPropertyIPN3gfx6InsetsEEET_PKNS_13ClassPropertyIS5_EE(%"class.ui::PropertyHandler"* %63, %"struct.ui::ClassProperty"* %64) #11
  %66 = icmp eq %"class.gfx::Insets"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %65, i64 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %65, i64 0, i32 3
  %71 = load i32, i32* %70, align 4
  br label %72

72:                                               ; preds = %54, %58, %62, %67
  %73 = phi i32 [ 0, %58 ], [ 0, %62 ], [ %69, %67 ], [ 0, %54 ]
  %74 = phi i32 [ 0, %58 ], [ 0, %62 ], [ %71, %67 ], [ 0, %54 ]
  %75 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %100

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp slt i32 %80, %40
  %82 = select i1 %81, i32 %40, i32 %80
  %83 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = icmp slt i32 %84, %74
  %86 = select i1 %85, i32 %74, i32 %84
  %87 = icmp sgt i32 %82, 0
  %88 = icmp sgt i32 %86, 0
  %89 = and i1 %87, %88
  %90 = sub nuw nsw i32 2147483647, %82
  %91 = icmp ult i32 %90, %86
  %92 = and i1 %91, %89
  br i1 %92, label %122, label %93

93:                                               ; preds = %78
  %94 = and i32 %86, %82
  %95 = icmp slt i32 %94, 0
  %96 = sub nsw i32 -2147483648, %82
  %97 = icmp sgt i32 %96, %86
  %98 = and i1 %97, %95
  %99 = select i1 %98, i32 %96, i32 %86
  br label %122

100:                                              ; preds = %72
  %101 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp slt i32 %102, %41
  %104 = select i1 %103, i32 %41, i32 %102
  %105 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 2
  %106 = load i32, i32* %105, align 4
  %107 = icmp slt i32 %106, %73
  %108 = select i1 %107, i32 %73, i32 %106
  %109 = icmp sgt i32 %104, 0
  %110 = icmp sgt i32 %108, 0
  %111 = and i1 %109, %110
  %112 = sub nuw nsw i32 2147483647, %104
  %113 = icmp ult i32 %112, %108
  %114 = and i1 %113, %111
  br i1 %114, label %122, label %115

115:                                              ; preds = %100
  %116 = and i32 %108, %104
  %117 = icmp slt i32 %116, 0
  %118 = sub nsw i32 -2147483648, %104
  %119 = icmp sgt i32 %118, %108
  %120 = and i1 %119, %117
  %121 = select i1 %120, i32 %118, i32 %108
  br label %122

122:                                              ; preds = %78, %93, %100, %115
  %123 = phi i32 [ 0, %78 ], [ 0, %93 ], [ %104, %100 ], [ %104, %115 ]
  %124 = phi i32 [ %82, %78 ], [ %82, %93 ], [ 0, %100 ], [ 0, %115 ]
  %125 = phi i32 [ 0, %78 ], [ 0, %93 ], [ %112, %100 ], [ %121, %115 ]
  %126 = phi i32 [ %90, %78 ], [ %99, %93 ], [ 0, %100 ], [ 0, %115 ]
  %127 = zext i32 %124 to i64
  %128 = shl nuw i64 %127, 32
  %129 = zext i32 %123 to i64
  %130 = or i64 %128, %129
  %131 = zext i32 %126 to i64
  %132 = shl nuw i64 %131, 32
  %133 = zext i32 %125 to i64
  %134 = or i64 %132, %133
  br label %180

135:                                              ; preds = %1
  %136 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %157

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = icmp sgt i32 %141, 0
  %143 = select i1 %142, i32 %141, i32 0
  %144 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 3
  %145 = load i32, i32* %144, align 4
  %146 = icmp sgt i32 %145, 0
  %147 = select i1 %146, i32 %145, i32 0
  %148 = and i1 %142, %146
  %149 = xor i32 %143, 2147483647
  %150 = icmp ult i32 %149, %147
  %151 = and i1 %148, %150
  %152 = select i1 %151, i32 %149, i32 %147
  %153 = zext i32 %143 to i64
  %154 = shl nuw nsw i64 %153, 32
  %155 = zext i32 %152 to i64
  %156 = shl nuw nsw i64 %155, 32
  br label %173

157:                                              ; preds = %135
  %158 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = icmp sgt i32 %159, 0
  %161 = select i1 %160, i32 %159, i32 0
  %162 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 2, i32 2
  %163 = load i32, i32* %162, align 4
  %164 = icmp sgt i32 %163, 0
  %165 = select i1 %164, i32 %163, i32 0
  %166 = and i1 %160, %164
  %167 = xor i32 %161, 2147483647
  %168 = icmp ult i32 %167, %165
  %169 = and i1 %166, %168
  %170 = select i1 %169, i32 %167, i32 %165
  %171 = zext i32 %161 to i64
  %172 = zext i32 %170 to i64
  br label %173

173:                                              ; preds = %157, %139
  %174 = phi i64 [ 0, %139 ], [ %171, %157 ]
  %175 = phi i64 [ %154, %139 ], [ 0, %157 ]
  %176 = phi i64 [ 0, %139 ], [ %172, %157 ]
  %177 = phi i64 [ %156, %139 ], [ 0, %157 ]
  %178 = or i64 %175, %174
  %179 = or i64 %177, %176
  br label %180

180:                                              ; preds = %173, %122
  %181 = phi i64 [ %130, %122 ], [ %178, %173 ]
  %182 = phi i64 [ %134, %122 ], [ %179, %173 ]
  %183 = insertvalue { i64, i64 } undef, i64 %181, 0
  %184 = insertvalue { i64, i64 } %183, i64 %182, 1
  ret { i64, i64 } %184
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::View"* @_ZNK5views9BoxLayout16FirstVisibleViewEv(%"class.views::BoxLayout"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 10
  %3 = load %"class.views::View"*, %"class.views::View"** %2, align 8
  %4 = getelementptr inbounds %"class.views::View", %"class.views::View"* %3, i64 0, i32 14, i32 0, i32 0
  %5 = load %"class.views::View"**, %"class.views::View"*** %4, align 8
  %6 = getelementptr inbounds %"class.views::View", %"class.views::View"* %3, i64 0, i32 14, i32 0, i32 1
  %7 = load %"class.views::View"**, %"class.views::View"*** %6, align 8
  %8 = icmp eq %"class.views::View"** %7, %5
  br i1 %8, label %24, label %9

9:                                                ; preds = %1, %13
  %10 = phi %"class.views::View"** [ %14, %13 ], [ %5, %1 ]
  %11 = load %"class.views::View"*, %"class.views::View"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %11) #11
  br i1 %12, label %16, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %10, i64 1
  %15 = icmp eq %"class.views::View"** %14, %7
  br i1 %15, label %16, label %9

16:                                               ; preds = %13, %9
  %17 = phi %"class.views::View"** [ %7, %13 ], [ %10, %9 ]
  %18 = load %"class.views::View"*, %"class.views::View"** %2, align 8
  %19 = getelementptr inbounds %"class.views::View", %"class.views::View"* %18, i64 0, i32 14, i32 0, i32 1
  %20 = load %"class.views::View"**, %"class.views::View"*** %19, align 8
  %21 = icmp eq %"class.views::View"** %17, %20
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = load %"class.views::View"*, %"class.views::View"** %17, align 8
  br label %24

24:                                               ; preds = %1, %16, %22
  %25 = phi %"class.views::View"* [ %23, %22 ], [ null, %16 ], [ null, %1 ]
  ret %"class.views::View"* %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.views::View"* @_ZNK5views9BoxLayout15LastVisibleViewEv(%"class.views::BoxLayout"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 10
  %3 = load %"class.views::View"*, %"class.views::View"** %2, align 8
  %4 = getelementptr inbounds %"class.views::View", %"class.views::View"* %3, i64 0, i32 14, i32 0, i32 1
  %5 = load %"class.views::View"**, %"class.views::View"*** %4, align 8
  %6 = getelementptr inbounds %"class.views::View", %"class.views::View"* %3, i64 0, i32 14, i32 0, i32 0
  %7 = load %"class.views::View"**, %"class.views::View"*** %6, align 8
  br label %8

8:                                                ; preds = %11, %1
  %9 = phi %"class.views::View"** [ %5, %1 ], [ %12, %11 ]
  %10 = icmp eq %"class.views::View"** %9, %7
  br i1 %10, label %15, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %9, i64 -1
  %13 = load %"class.views::View"*, %"class.views::View"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK5views4View10GetVisibleEv(%"class.views::View"* %13) #11
  br i1 %14, label %15, label %8

15:                                               ; preds = %8, %11
  %16 = phi %"class.views::View"** [ %7, %8 ], [ %9, %11 ]
  %17 = load %"class.views::View"**, %"class.views::View"*** %6, align 8
  %18 = icmp eq %"class.views::View"** %16, %17
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.views::View"*, %"class.views::View"** %16, i64 -1
  %21 = load %"class.views::View"*, %"class.views::View"** %20, align 8
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi %"class.views::View"* [ %21, %19 ], [ null, %15 ]
  ret %"class.views::View"* %23
}

declare void @_ZN3gfx4Rect5InsetERKNS_6InsetsE(%"class.gfx::Rect"*, %"class.gfx::Insets"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5views9BoxLayout29CrossAxisLeadingMarginForViewERKNS0_11ViewWrapperE(%"class.views::BoxLayout"* nocapture readonly, %"class.views::BoxLayout::ViewWrapper"* nocapture readonly dereferenceable(32)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.views::BoxLayout", %"class.views::BoxLayout"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  %10 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.views::BoxLayout::ViewWrapper", %"class.views::BoxLayout::ViewWrapper"* %1, i64 0, i32 2, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = select i1 %9, i32 %11, i32 %13
  br label %15

15:                                               ; preds = %2, %6
  %16 = phi i32 [ %14, %6 ], [ 0, %2 ]
  ret i32 %16
}

declare void @_ZN5views13LayoutManager16InvalidateLayoutEv(%"class.views::LayoutManager"*) unnamed_addr #2

declare i64 @_ZNK5views13LayoutManager14GetMinimumSizeEPKNS_4ViewE(%"class.views::LayoutManager"*, %"class.views::View"*) unnamed_addr #2

declare void @_ZNK5views13LayoutManager16GetAvailableSizeEPKNS_4ViewES3_(%"class.views::SizeBounds"* sret, %"class.views::LayoutManager"*, %"class.views::View"*, %"class.views::View"*) unnamed_addr #2

declare void @_ZN5views13LayoutManager9ViewAddedEPNS_4ViewES2_(%"class.views::LayoutManager"*, %"class.views::View"*, %"class.views::View"*) unnamed_addr #2

declare void @_ZN5views13LayoutManager17ViewVisibilitySetEPNS_4ViewES2_bb(%"class.views::LayoutManager"*, %"class.views::View"*, %"class.views::View"*, i1 zeroext, i1 zeroext) unnamed_addr #2

declare void @_ZNK5views13LayoutManager25GetChildViewsInPaintOrderEPKNS_4ViewE(%"class.std::__1::vector.35"* sret, %"class.views::LayoutManager"*, %"class.views::View"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN5views4ViewENS2_9BoxLayout4FlexEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.131"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN5views4ViewENS2_9BoxLayout4FlexEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.131"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN5views4ViewENS2_9BoxLayout4FlexEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.131"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !2
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !2
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !2
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !2
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !2
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !2
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_12__value_typeIPKN5views4ViewENS2_9BoxLayout4FlexEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_12__value_typeIPKN5views4ViewENS2_9BoxLayout4FlexEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeIPKN5views4ViewENS2_9BoxLayout4FlexEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeIPKN5views4ViewENS2_9BoxLayout4FlexEEENS_19__map_value_compareIS5_S8_NS_4lessIS5_EELb1EEENS_9allocatorIS8_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSK_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINSD_ISS_EEEEEEDpOT_"}
