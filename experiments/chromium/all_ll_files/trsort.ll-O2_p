; ModuleID = '../../courgette/third_party/divsufsort/trsort.cc'
source_filename = "../../courgette/third_party/divsufsort/trsort.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.courgette::PagedArray" = type { i32**, i64, i64 }
%"class.courgette::PagedArray_iterator" = type { %"class.courgette::PagedArray"*, i64 }
%struct.anon = type { %"class.courgette::PagedArray_iterator.0", %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator", i32, i32 }
%"class.courgette::PagedArray_iterator.0" = type { %"class.courgette::PagedArray"*, i64 }

@_ZN6divsuf12_GLOBAL__N_18lg_tableE = internal unnamed_addr constant [256 x i32] [i32 -1, i32 0, i32 1, i32 1, i32 2, i32 2, i32 2, i32 2, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7], align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6divsuf6trsortEN9courgette19PagedArray_iteratorINS0_10PagedArrayIiLi18EEEiEES4_ii(%"class.courgette::PagedArray"*, i64, %"class.courgette::PagedArray"*, i64, i32, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.courgette::PagedArray_iterator", align 8
  %8 = alloca %"class.courgette::PagedArray_iterator", align 8
  %9 = alloca [64 x %struct.anon], align 16
  %10 = alloca %"class.courgette::PagedArray_iterator", align 8
  %11 = alloca %"class.courgette::PagedArray_iterator", align 8
  %12 = alloca %"class.courgette::PagedArray_iterator", align 8
  %13 = alloca %"class.courgette::PagedArray_iterator", align 8
  %14 = icmp ugt i32 %4, 65535
  br i1 %14, label %15, label %30

15:                                               ; preds = %6
  %16 = icmp ugt i32 %4, 16777215
  br i1 %16, label %17, label %23

17:                                               ; preds = %15
  %18 = lshr i32 %4, 24
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, 24
  br label %45

23:                                               ; preds = %15
  %24 = lshr i32 %4, 16
  %25 = and i32 %24, 255
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = add nsw i32 %28, 16
  br label %45

30:                                               ; preds = %6
  %31 = and i32 %4, 65280
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %30
  %34 = lshr i32 %4, 8
  %35 = and i32 %34, 255
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %38, 8
  br label %45

40:                                               ; preds = %30
  %41 = and i32 %4, 255
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %42
  %44 = load i32, i32* %43, align 4
  br label %45

45:                                               ; preds = %17, %23, %33, %40
  %46 = phi i32 [ %22, %17 ], [ %29, %23 ], [ %39, %33 ], [ %44, %40 ]
  %47 = sub nsw i32 0, %4
  %48 = lshr i64 %3, 18
  %49 = and i64 %3, 262143
  %50 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %2, i64 0, i32 0
  %51 = load i32**, i32*** %50, align 8
  %52 = getelementptr inbounds i32*, i32** %51, i64 %48
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %49
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, %47
  br i1 %56, label %57, label %3037

57:                                               ; preds = %45
  %58 = sext i32 %5 to i64
  %59 = add i64 %58, %1
  %60 = shl nsw i32 %46, 1
  %61 = sdiv i32 %60, 3
  %62 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %0, i64 0, i32 0
  %63 = add i64 %3, 1
  %64 = bitcast %"class.courgette::PagedArray_iterator"* %13 to i8*
  %65 = bitcast %"class.courgette::PagedArray_iterator"* %12 to i8*
  %66 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %13, i64 0, i32 0
  %67 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %13, i64 0, i32 1
  %68 = bitcast [64 x %struct.anon]* %9 to i8*
  %69 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 0, i32 3
  %70 = bitcast i32* %69 to i8*
  %71 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 1
  %72 = bitcast %struct.anon* %71 to i8*
  %73 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 2
  %74 = bitcast %struct.anon* %73 to i8*
  %75 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 3
  %76 = bitcast %struct.anon* %75 to i8*
  %77 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 4
  %78 = bitcast %struct.anon* %77 to i8*
  %79 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 5
  %80 = bitcast %struct.anon* %79 to i8*
  %81 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 6
  %82 = bitcast %struct.anon* %81 to i8*
  %83 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 7
  %84 = bitcast %struct.anon* %83 to i8*
  %85 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 8
  %86 = bitcast %struct.anon* %85 to i8*
  %87 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 9
  %88 = bitcast %struct.anon* %87 to i8*
  %89 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 10
  %90 = bitcast %struct.anon* %89 to i8*
  %91 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 11
  %92 = bitcast %struct.anon* %91 to i8*
  %93 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 12
  %94 = bitcast %struct.anon* %93 to i8*
  %95 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 13
  %96 = bitcast %struct.anon* %95 to i8*
  %97 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 14
  %98 = bitcast %struct.anon* %97 to i8*
  %99 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 15
  %100 = bitcast %struct.anon* %99 to i8*
  %101 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 16
  %102 = bitcast %struct.anon* %101 to i8*
  %103 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 17
  %104 = bitcast %struct.anon* %103 to i8*
  %105 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 18
  %106 = bitcast %struct.anon* %105 to i8*
  %107 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 19
  %108 = bitcast %struct.anon* %107 to i8*
  %109 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 20
  %110 = bitcast %struct.anon* %109 to i8*
  %111 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 21
  %112 = bitcast %struct.anon* %111 to i8*
  %113 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 22
  %114 = bitcast %struct.anon* %113 to i8*
  %115 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 23
  %116 = bitcast %struct.anon* %115 to i8*
  %117 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 24
  %118 = bitcast %struct.anon* %117 to i8*
  %119 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 25
  %120 = bitcast %struct.anon* %119 to i8*
  %121 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 26
  %122 = bitcast %struct.anon* %121 to i8*
  %123 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 27
  %124 = bitcast %struct.anon* %123 to i8*
  %125 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 28
  %126 = bitcast %struct.anon* %125 to i8*
  %127 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 29
  %128 = bitcast %struct.anon* %127 to i8*
  %129 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 30
  %130 = bitcast %struct.anon* %129 to i8*
  %131 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 31
  %132 = bitcast %struct.anon* %131 to i8*
  %133 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 32
  %134 = bitcast %struct.anon* %133 to i8*
  %135 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 33
  %136 = bitcast %struct.anon* %135 to i8*
  %137 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 34
  %138 = bitcast %struct.anon* %137 to i8*
  %139 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 35
  %140 = bitcast %struct.anon* %139 to i8*
  %141 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 36
  %142 = bitcast %struct.anon* %141 to i8*
  %143 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 37
  %144 = bitcast %struct.anon* %143 to i8*
  %145 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 38
  %146 = bitcast %struct.anon* %145 to i8*
  %147 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 39
  %148 = bitcast %struct.anon* %147 to i8*
  %149 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 40
  %150 = bitcast %struct.anon* %149 to i8*
  %151 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 41
  %152 = bitcast %struct.anon* %151 to i8*
  %153 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 42
  %154 = bitcast %struct.anon* %153 to i8*
  %155 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 43
  %156 = bitcast %struct.anon* %155 to i8*
  %157 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 44
  %158 = bitcast %struct.anon* %157 to i8*
  %159 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 45
  %160 = bitcast %struct.anon* %159 to i8*
  %161 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 46
  %162 = bitcast %struct.anon* %161 to i8*
  %163 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 47
  %164 = bitcast %struct.anon* %163 to i8*
  %165 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 48
  %166 = bitcast %struct.anon* %165 to i8*
  %167 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 49
  %168 = bitcast %struct.anon* %167 to i8*
  %169 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 50
  %170 = bitcast %struct.anon* %169 to i8*
  %171 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 51
  %172 = bitcast %struct.anon* %171 to i8*
  %173 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 52
  %174 = bitcast %struct.anon* %173 to i8*
  %175 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 53
  %176 = bitcast %struct.anon* %175 to i8*
  %177 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 54
  %178 = bitcast %struct.anon* %177 to i8*
  %179 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 55
  %180 = bitcast %struct.anon* %179 to i8*
  %181 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 56
  %182 = bitcast %struct.anon* %181 to i8*
  %183 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 57
  %184 = bitcast %struct.anon* %183 to i8*
  %185 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 58
  %186 = bitcast %struct.anon* %185 to i8*
  %187 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 59
  %188 = bitcast %struct.anon* %187 to i8*
  %189 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 60
  %190 = bitcast %struct.anon* %189 to i8*
  %191 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 61
  %192 = bitcast %struct.anon* %191 to i8*
  %193 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 62
  %194 = bitcast %struct.anon* %193 to i8*
  %195 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 63
  %196 = bitcast %struct.anon* %195 to i8*
  %197 = bitcast %"class.courgette::PagedArray_iterator"* %10 to i8*
  %198 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %10, i64 0, i32 0
  %199 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %10, i64 0, i32 1
  %200 = bitcast %"class.courgette::PagedArray_iterator"* %11 to i8*
  %201 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %11, i64 0, i32 0
  %202 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %11, i64 0, i32 1
  %203 = bitcast %"class.courgette::PagedArray_iterator"* %13 to i64*
  %204 = bitcast %"class.courgette::PagedArray_iterator"* %10 to i64*
  %205 = bitcast %"class.courgette::PagedArray_iterator"* %8 to i8*
  %206 = bitcast %"class.courgette::PagedArray_iterator"* %7 to i8*
  %207 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %7, i64 0, i32 0
  %208 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %7, i64 0, i32 1
  %209 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %8, i64 0, i32 0
  %210 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %8, i64 0, i32 1
  %211 = bitcast %"class.courgette::PagedArray_iterator"* %7 to i64*
  %212 = bitcast %"class.courgette::PagedArray_iterator"* %8 to i64*
  %213 = sext i32 %4 to i64
  %214 = add i64 %213, %3
  br label %215

215:                                              ; preds = %57, %3028
  %216 = phi i64 [ %59, %57 ], [ %3030, %3028 ]
  %217 = phi i32 [ %61, %57 ], [ %3010, %3028 ]
  %218 = phi i32 [ %4, %57 ], [ %3009, %3028 ]
  %219 = sub i64 %216, %1
  %220 = shl i64 %219, 32
  %221 = ashr exact i64 %220, 32
  br label %222

222:                                              ; preds = %215, %3008
  %223 = phi i32 [ %3009, %3008 ], [ %218, %215 ]
  %224 = phi i32 [ %3010, %3008 ], [ %217, %215 ]
  %225 = phi i64 [ %3011, %3008 ], [ %3, %215 ]
  %226 = phi i32 [ %3012, %3008 ], [ 0, %215 ]
  %227 = phi i32 [ %3013, %3008 ], [ 0, %215 ]
  %228 = lshr i64 %225, 18
  %229 = and i64 %225, 262143
  %230 = load i32**, i32*** %50, align 8
  %231 = getelementptr inbounds i32*, i32** %230, i64 %228
  %232 = load i32*, i32** %231, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 %229
  %234 = load i32, i32* %233, align 4
  %235 = icmp slt i32 %234, 0
  br i1 %235, label %236, label %240

236:                                              ; preds = %222
  %237 = sext i32 %234 to i64
  %238 = sub i64 %225, %237
  %239 = add nsw i32 %234, %227
  br label %3008

240:                                              ; preds = %222
  %241 = icmp eq i32 %227, 0
  br i1 %241, label %250, label %242

242:                                              ; preds = %240
  %243 = sext i32 %227 to i64
  %244 = add i64 %225, %243
  %245 = lshr i64 %244, 18
  %246 = and i64 %244, 262143
  %247 = getelementptr inbounds i32*, i32** %230, i64 %245
  %248 = load i32*, i32** %247, align 8
  %249 = getelementptr inbounds i32, i32* %248, i64 %246
  store i32 %227, i32* %249, align 4
  br label %250

250:                                              ; preds = %240, %242
  %251 = sext i32 %234 to i64
  %252 = add i64 %251, %1
  %253 = lshr i64 %252, 18
  %254 = and i64 %252, 262143
  %255 = load i32**, i32*** %62, align 8
  %256 = getelementptr inbounds i32*, i32** %255, i64 %253
  %257 = load i32*, i32** %256, align 8
  %258 = getelementptr inbounds i32, i32* %257, i64 %254
  %259 = load i32, i32* %258, align 4
  %260 = sext i32 %259 to i64
  %261 = add i64 %63, %260
  %262 = sub i64 %261, %225
  %263 = icmp sgt i64 %262, 1
  br i1 %263, label %264, label %3005

264:                                              ; preds = %250
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65)
  store %"class.courgette::PagedArray"* %2, %"class.courgette::PagedArray"** %66, align 8
  store i64 %261, i64* %67, align 8
  call void @llvm.lifetime.start.p0i8(i64 3584, i8* nonnull %68) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %70, i8 -86, i64 3536, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %68, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %74, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %78, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %82, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %86, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %90, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %94, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %98, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %102, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %106, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %110, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %114, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %118, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %122, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %126, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %130, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %134, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %138, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %142, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %146, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %150, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %154, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %158, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %160, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %162, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %166, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %170, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %172, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %174, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %176, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %178, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %182, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %184, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %186, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %190, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 16 %194, i8 0, i64 48, i1 false) #3
  call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 0, i64 48, i1 false) #3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %197) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 0, i64 16, i1 false) #3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %200) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 0, i64 16, i1 false) #3
  %265 = trunc i64 %262 to i32
  %266 = icmp ugt i32 %265, 65535
  br i1 %266, label %267, label %281

267:                                              ; preds = %264
  %268 = icmp ugt i32 %265, 16777215
  br i1 %268, label %269, label %275

269:                                              ; preds = %267
  %270 = lshr i64 %262, 24
  %271 = and i64 %270, 255
  %272 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %271
  %273 = load i32, i32* %272, align 4
  %274 = add nsw i32 %273, 24
  br label %294

275:                                              ; preds = %267
  %276 = lshr i64 %262, 16
  %277 = and i64 %276, 255
  %278 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %277
  %279 = load i32, i32* %278, align 4
  %280 = add nsw i32 %279, 16
  br label %294

281:                                              ; preds = %264
  %282 = and i32 %265, 65280
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %290, label %284

284:                                              ; preds = %281
  %285 = lshr i64 %262, 8
  %286 = and i64 %285, 255
  %287 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = add nsw i32 %288, 8
  br label %294

290:                                              ; preds = %281
  %291 = and i64 %262, 255
  %292 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %291
  %293 = load i32, i32* %292, align 4
  br label %294

294:                                              ; preds = %290, %284, %275, %269
  %295 = phi i32 [ %274, %269 ], [ %280, %275 ], [ %289, %284 ], [ %293, %290 ]
  br label %296

296:                                              ; preds = %2986, %294
  %297 = phi i32 [ %223, %294 ], [ %2987, %2986 ]
  %298 = phi i32 [ %224, %294 ], [ %2988, %2986 ]
  %299 = phi i32 [ 0, %294 ], [ %2989, %2986 ]
  %300 = phi %"class.courgette::PagedArray"* [ %2, %294 ], [ %2990, %2986 ]
  %301 = phi i64 [ %225, %294 ], [ %2991, %2986 ]
  %302 = phi %"class.courgette::PagedArray"* [ %0, %294 ], [ %2992, %2986 ]
  %303 = phi i64 [ %216, %294 ], [ %2993, %2986 ]
  %304 = phi i32 [ -1, %294 ], [ %2994, %2986 ]
  %305 = phi i32 [ 0, %294 ], [ %2995, %2986 ]
  %306 = phi i32 [ %295, %294 ], [ %2996, %2986 ]
  %307 = icmp slt i32 %306, 0
  br i1 %307, label %313, label %308

308:                                              ; preds = %296
  %309 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %302, i64 0, i32 0
  %310 = load i64, i64* %67, align 8
  %311 = sub i64 %310, %301
  %312 = icmp slt i64 %311, 9
  br i1 %312, label %1238, label %1347

313:                                              ; preds = %296
  switch i32 %306, label %976 [
    i32 -1, label %314
    i32 -2, label %667
  ]

314:                                              ; preds = %313
  %315 = sub i64 %303, %221
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %65, i8* nonnull align 8 %64, i64 16, i1 false) #3
  %316 = load i64, i64* %67, align 8
  %317 = sub i64 %316, %3
  %318 = trunc i64 %317 to i32
  %319 = add i32 %318, -1
  call fastcc void @_ZN6divsuf12_GLOBAL__N_112tr_partitionEN9courgette19PagedArray_iteratorIKNS1_10PagedArrayIiLi18EEEKiEENS2_IS4_iEES8_S8_PS8_S9_i(%"class.courgette::PagedArray"* %302, i64 %315, %"class.courgette::PagedArray"* %300, i64 %301, %"class.courgette::PagedArray"* %300, i64 %301, %"class.courgette::PagedArray_iterator"* nonnull byval(%"class.courgette::PagedArray_iterator") align 8 %12, %"class.courgette::PagedArray_iterator"* nonnull %10, %"class.courgette::PagedArray_iterator"* nonnull %11, i32 %319) #3
  %320 = load i64, i64* %199, align 8
  %321 = icmp ult i64 %320, %316
  br i1 %321, label %322, label %349

322:                                              ; preds = %314
  %323 = sub i64 %320, %3
  %324 = trunc i64 %323 to i32
  %325 = add i32 %324, -1
  %326 = icmp ult i64 %301, %320
  br i1 %326, label %327, label %349

327:                                              ; preds = %322
  %328 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %300, i64 0, i32 0
  br label %329

329:                                              ; preds = %329, %327
  %330 = phi i64 [ %301, %327 ], [ %346, %329 ]
  %331 = lshr i64 %330, 18
  %332 = and i64 %330, 262143
  %333 = load i32**, i32*** %328, align 8
  %334 = getelementptr inbounds i32*, i32** %333, i64 %331
  %335 = load i32*, i32** %334, align 8
  %336 = getelementptr inbounds i32, i32* %335, i64 %332
  %337 = load i32, i32* %336, align 4
  %338 = sext i32 %337 to i64
  %339 = add i64 %338, %1
  %340 = lshr i64 %339, 18
  %341 = and i64 %339, 262143
  %342 = load i32**, i32*** %62, align 8
  %343 = getelementptr inbounds i32*, i32** %342, i64 %340
  %344 = load i32*, i32** %343, align 8
  %345 = getelementptr inbounds i32, i32* %344, i64 %341
  store i32 %325, i32* %345, align 4
  %346 = add nuw i64 %330, 1
  %347 = load i64, i64* %199, align 8
  %348 = icmp ult i64 %346, %347
  br i1 %348, label %329, label %349

349:                                              ; preds = %329, %322, %314
  %350 = phi i64 [ %320, %322 ], [ %320, %314 ], [ %347, %329 ]
  %351 = load i64, i64* %202, align 8
  %352 = load i64, i64* %67, align 8
  %353 = icmp ult i64 %351, %352
  br i1 %353, label %354, label %384

354:                                              ; preds = %349
  %355 = sub i64 %351, %3
  %356 = trunc i64 %355 to i32
  %357 = add i32 %356, -1
  %358 = icmp ult i64 %350, %351
  br i1 %358, label %359, label %384

359:                                              ; preds = %354
  %360 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  %361 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %360, i64 0, i32 0
  br label %362

362:                                              ; preds = %362, %359
  %363 = phi i64 [ %350, %359 ], [ %379, %362 ]
  %364 = lshr i64 %363, 18
  %365 = and i64 %363, 262143
  %366 = load i32**, i32*** %361, align 8
  %367 = getelementptr inbounds i32*, i32** %366, i64 %364
  %368 = load i32*, i32** %367, align 8
  %369 = getelementptr inbounds i32, i32* %368, i64 %365
  %370 = load i32, i32* %369, align 4
  %371 = sext i32 %370 to i64
  %372 = add i64 %371, %1
  %373 = lshr i64 %372, 18
  %374 = and i64 %372, 262143
  %375 = load i32**, i32*** %62, align 8
  %376 = getelementptr inbounds i32*, i32** %375, i64 %373
  %377 = load i32*, i32** %376, align 8
  %378 = getelementptr inbounds i32, i32* %377, i64 %374
  store i32 %357, i32* %378, align 4
  %379 = add nuw i64 %363, 1
  %380 = load i64, i64* %202, align 8
  %381 = icmp ult i64 %379, %380
  br i1 %381, label %362, label %382

382:                                              ; preds = %362
  %383 = load i64, i64* %199, align 8
  br label %384

384:                                              ; preds = %382, %354, %349
  %385 = phi i64 [ %383, %382 ], [ %350, %354 ], [ %350, %349 ]
  %386 = phi i64 [ %380, %382 ], [ %351, %354 ], [ %351, %349 ]
  %387 = sub i64 %386, %385
  %388 = icmp sgt i64 %387, 1
  br i1 %388, label %389, label %410

389:                                              ; preds = %384
  %390 = sext i32 %305 to i64
  %391 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %390, i32 0
  %392 = bitcast %"class.courgette::PagedArray_iterator.0"* %391 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %392, i8 0, i64 16, i1 false) #3
  %393 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %390, i32 1
  %394 = bitcast %"class.courgette::PagedArray_iterator"* %393 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %394, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %395 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %390, i32 2
  %396 = bitcast %"class.courgette::PagedArray_iterator"* %395 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %396, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %397 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %390, i32 3
  store i32 0, i32* %397, align 8
  %398 = add nsw i32 %305, 1
  %399 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %390, i32 4
  store i32 0, i32* %399, align 4
  %400 = sext i32 %398 to i64
  %401 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %400, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %401, align 8
  %402 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %400, i32 0, i32 1
  store i64 %315, i64* %402, align 8
  %403 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %400, i32 1, i32 0
  store %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"** %403, align 8
  %404 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %400, i32 1, i32 1
  store i64 %301, i64* %404, align 8
  %405 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %400, i32 2
  %406 = bitcast %"class.courgette::PagedArray_iterator"* %405 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %406, i8* nonnull align 8 %64, i64 16, i1 false) #3
  %407 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %400, i32 3
  store i32 -2, i32* %407, align 8
  %408 = add nsw i32 %305, 2
  %409 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %400, i32 4
  store i32 %304, i32* %409, align 4
  br label %410

410:                                              ; preds = %389, %384
  %411 = phi i32 [ %305, %389 ], [ %304, %384 ]
  %412 = phi i32 [ %408, %389 ], [ %305, %384 ]
  %413 = sub i64 %385, %301
  %414 = load i64, i64* %67, align 8
  %415 = sub i64 %414, %386
  %416 = icmp sgt i64 %413, %415
  br i1 %416, label %542, label %417

417:                                              ; preds = %410
  %418 = icmp sgt i64 %413, 1
  br i1 %418, label %419, label %490

419:                                              ; preds = %417
  %420 = sext i32 %412 to i64
  %421 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %420, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %421, align 8
  %422 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %420, i32 0, i32 1
  store i64 %303, i64* %422, align 8
  %423 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %420, i32 1
  %424 = bitcast %"class.courgette::PagedArray_iterator"* %423 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %424, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %425 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %420, i32 2
  %426 = bitcast %"class.courgette::PagedArray_iterator"* %425 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %426, i8* nonnull align 8 %64, i64 16, i1 false) #3
  %427 = trunc i64 %415 to i32
  %428 = icmp ugt i32 %427, 65535
  br i1 %428, label %429, label %443

429:                                              ; preds = %419
  %430 = icmp ugt i32 %427, 16777215
  br i1 %430, label %431, label %437

431:                                              ; preds = %429
  %432 = lshr i64 %415, 24
  %433 = and i64 %432, 255
  %434 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %433
  %435 = load i32, i32* %434, align 4
  %436 = add nsw i32 %435, 24
  br label %456

437:                                              ; preds = %429
  %438 = lshr i64 %415, 16
  %439 = and i64 %438, 255
  %440 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %439
  %441 = load i32, i32* %440, align 4
  %442 = add nsw i32 %441, 16
  br label %456

443:                                              ; preds = %419
  %444 = and i32 %427, 65280
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %452, label %446

446:                                              ; preds = %443
  %447 = lshr i64 %415, 8
  %448 = and i64 %447, 255
  %449 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %448
  %450 = load i32, i32* %449, align 4
  %451 = add nsw i32 %450, 8
  br label %456

452:                                              ; preds = %443
  %453 = and i64 %415, 255
  %454 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %453
  %455 = load i32, i32* %454, align 4
  br label %456

456:                                              ; preds = %452, %446, %437, %431
  %457 = phi i32 [ %436, %431 ], [ %442, %437 ], [ %451, %446 ], [ %455, %452 ]
  %458 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %420, i32 3
  store i32 %457, i32* %458, align 8
  %459 = add nsw i32 %412, 1
  %460 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %420, i32 4
  store i32 %411, i32* %460, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %461 = trunc i64 %413 to i32
  %462 = icmp ugt i32 %461, 65535
  br i1 %462, label %463, label %477

463:                                              ; preds = %456
  %464 = icmp ugt i32 %461, 16777215
  br i1 %464, label %465, label %471

465:                                              ; preds = %463
  %466 = lshr i64 %413, 24
  %467 = and i64 %466, 255
  %468 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %467
  %469 = load i32, i32* %468, align 4
  %470 = add nsw i32 %469, 24
  br label %2986

471:                                              ; preds = %463
  %472 = lshr i64 %413, 16
  %473 = and i64 %472, 255
  %474 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %473
  %475 = load i32, i32* %474, align 4
  %476 = add nsw i32 %475, 16
  br label %2986

477:                                              ; preds = %456
  %478 = and i32 %461, 65280
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %486, label %480

480:                                              ; preds = %477
  %481 = lshr i64 %413, 8
  %482 = and i64 %481, 255
  %483 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %482
  %484 = load i32, i32* %483, align 4
  %485 = add nsw i32 %484, 8
  br label %2986

486:                                              ; preds = %477
  %487 = and i64 %413, 255
  %488 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %487
  %489 = load i32, i32* %488, align 4
  br label %2986

490:                                              ; preds = %417
  %491 = icmp sgt i64 %415, 1
  br i1 %491, label %492, label %523

492:                                              ; preds = %490
  %493 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %201, align 8
  %494 = trunc i64 %415 to i32
  %495 = icmp ugt i32 %494, 65535
  br i1 %495, label %496, label %510

496:                                              ; preds = %492
  %497 = icmp ugt i32 %494, 16777215
  br i1 %497, label %498, label %504

498:                                              ; preds = %496
  %499 = lshr i64 %415, 24
  %500 = and i64 %499, 255
  %501 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %500
  %502 = load i32, i32* %501, align 4
  %503 = add nsw i32 %502, 24
  br label %2986

504:                                              ; preds = %496
  %505 = lshr i64 %415, 16
  %506 = and i64 %505, 255
  %507 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %506
  %508 = load i32, i32* %507, align 4
  %509 = add nsw i32 %508, 16
  br label %2986

510:                                              ; preds = %492
  %511 = and i32 %494, 65280
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %519, label %513

513:                                              ; preds = %510
  %514 = lshr i64 %415, 8
  %515 = and i64 %514, 255
  %516 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %515
  %517 = load i32, i32* %516, align 4
  %518 = add nsw i32 %517, 8
  br label %2986

519:                                              ; preds = %510
  %520 = and i64 %415, 255
  %521 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %520
  %522 = load i32, i32* %521, align 4
  br label %2986

523:                                              ; preds = %490
  %524 = icmp eq i32 %412, 0
  br i1 %524, label %2997, label %525

525:                                              ; preds = %523
  %526 = add nsw i32 %412, -1
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %527, i32 0, i32 0
  %529 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %528, align 8
  %530 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %527, i32 0, i32 1
  %531 = load i64, i64* %530, align 8
  %532 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %527, i32 1, i32 0
  %533 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %532, align 8
  %534 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %527, i32 1, i32 1
  %535 = load i64, i64* %534, align 8
  %536 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %527, i32 2
  %537 = bitcast %"class.courgette::PagedArray_iterator"* %536 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %537, i64 16, i1 false) #3
  %538 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %527, i32 3
  %539 = load i32, i32* %538, align 8
  %540 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %527, i32 4
  %541 = load i32, i32* %540, align 4
  br label %2986

542:                                              ; preds = %410
  %543 = icmp sgt i64 %415, 1
  br i1 %543, label %544, label %616

544:                                              ; preds = %542
  %545 = sext i32 %412 to i64
  %546 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %545, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %546, align 8
  %547 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %545, i32 0, i32 1
  store i64 %303, i64* %547, align 8
  %548 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %545, i32 1, i32 0
  store %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"** %548, align 8
  %549 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %545, i32 1, i32 1
  store i64 %301, i64* %549, align 8
  %550 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %545, i32 2
  %551 = bitcast %"class.courgette::PagedArray_iterator"* %550 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %551, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %552 = trunc i64 %413 to i32
  %553 = icmp ugt i32 %552, 65535
  br i1 %553, label %554, label %568

554:                                              ; preds = %544
  %555 = icmp ugt i32 %552, 16777215
  br i1 %555, label %556, label %562

556:                                              ; preds = %554
  %557 = lshr i64 %413, 24
  %558 = and i64 %557, 255
  %559 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %558
  %560 = load i32, i32* %559, align 4
  %561 = add nsw i32 %560, 24
  br label %581

562:                                              ; preds = %554
  %563 = lshr i64 %413, 16
  %564 = and i64 %563, 255
  %565 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %564
  %566 = load i32, i32* %565, align 4
  %567 = add nsw i32 %566, 16
  br label %581

568:                                              ; preds = %544
  %569 = and i32 %552, 65280
  %570 = icmp eq i32 %569, 0
  br i1 %570, label %577, label %571

571:                                              ; preds = %568
  %572 = lshr i64 %413, 8
  %573 = and i64 %572, 255
  %574 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %573
  %575 = load i32, i32* %574, align 4
  %576 = add nsw i32 %575, 8
  br label %581

577:                                              ; preds = %568
  %578 = and i64 %413, 255
  %579 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %578
  %580 = load i32, i32* %579, align 4
  br label %581

581:                                              ; preds = %577, %571, %562, %556
  %582 = phi i32 [ %561, %556 ], [ %567, %562 ], [ %576, %571 ], [ %580, %577 ]
  %583 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %545, i32 3
  store i32 %582, i32* %583, align 8
  %584 = add nsw i32 %412, 1
  %585 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %545, i32 4
  store i32 %411, i32* %585, align 4
  %586 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %201, align 8
  %587 = trunc i64 %415 to i32
  %588 = icmp ugt i32 %587, 65535
  br i1 %588, label %589, label %603

589:                                              ; preds = %581
  %590 = icmp ugt i32 %587, 16777215
  br i1 %590, label %591, label %597

591:                                              ; preds = %589
  %592 = lshr i64 %415, 24
  %593 = and i64 %592, 255
  %594 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %593
  %595 = load i32, i32* %594, align 4
  %596 = add nsw i32 %595, 24
  br label %2986

597:                                              ; preds = %589
  %598 = lshr i64 %415, 16
  %599 = and i64 %598, 255
  %600 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %599
  %601 = load i32, i32* %600, align 4
  %602 = add nsw i32 %601, 16
  br label %2986

603:                                              ; preds = %581
  %604 = and i32 %587, 65280
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %612, label %606

606:                                              ; preds = %603
  %607 = lshr i64 %415, 8
  %608 = and i64 %607, 255
  %609 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %608
  %610 = load i32, i32* %609, align 4
  %611 = add nsw i32 %610, 8
  br label %2986

612:                                              ; preds = %603
  %613 = and i64 %415, 255
  %614 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %613
  %615 = load i32, i32* %614, align 4
  br label %2986

616:                                              ; preds = %542
  %617 = icmp sgt i64 %413, 1
  br i1 %617, label %618, label %648

618:                                              ; preds = %616
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %619 = trunc i64 %413 to i32
  %620 = icmp ugt i32 %619, 65535
  br i1 %620, label %621, label %635

621:                                              ; preds = %618
  %622 = icmp ugt i32 %619, 16777215
  br i1 %622, label %623, label %629

623:                                              ; preds = %621
  %624 = lshr i64 %413, 24
  %625 = and i64 %624, 255
  %626 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %625
  %627 = load i32, i32* %626, align 4
  %628 = add nsw i32 %627, 24
  br label %2986

629:                                              ; preds = %621
  %630 = lshr i64 %413, 16
  %631 = and i64 %630, 255
  %632 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %631
  %633 = load i32, i32* %632, align 4
  %634 = add nsw i32 %633, 16
  br label %2986

635:                                              ; preds = %618
  %636 = and i32 %619, 65280
  %637 = icmp eq i32 %636, 0
  br i1 %637, label %644, label %638

638:                                              ; preds = %635
  %639 = lshr i64 %413, 8
  %640 = and i64 %639, 255
  %641 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %640
  %642 = load i32, i32* %641, align 4
  %643 = add nsw i32 %642, 8
  br label %2986

644:                                              ; preds = %635
  %645 = and i64 %413, 255
  %646 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %645
  %647 = load i32, i32* %646, align 4
  br label %2986

648:                                              ; preds = %616
  %649 = icmp eq i32 %412, 0
  br i1 %649, label %2997, label %650

650:                                              ; preds = %648
  %651 = add nsw i32 %412, -1
  %652 = sext i32 %651 to i64
  %653 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %652, i32 0, i32 0
  %654 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %653, align 8
  %655 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %652, i32 0, i32 1
  %656 = load i64, i64* %655, align 8
  %657 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %652, i32 1, i32 0
  %658 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %657, align 8
  %659 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %652, i32 1, i32 1
  %660 = load i64, i64* %659, align 8
  %661 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %652, i32 2
  %662 = bitcast %"class.courgette::PagedArray_iterator"* %661 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %662, i64 16, i1 false) #3
  %663 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %652, i32 3
  %664 = load i32, i32* %663, align 8
  %665 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %652, i32 4
  %666 = load i32, i32* %665, align 4
  br label %2986

667:                                              ; preds = %313
  %668 = add nsw i32 %305, -1
  %669 = sext i32 %668 to i64
  %670 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %669, i32 1
  %671 = bitcast %"class.courgette::PagedArray_iterator"* %670 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %197, i8* align 8 %671, i64 16, i1 false) #3
  %672 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %669, i32 2
  %673 = bitcast %"class.courgette::PagedArray_iterator"* %672 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %200, i8* align 8 %673, i64 16, i1 false) #3
  %674 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %669, i32 3
  %675 = load i32, i32* %674, align 8
  %676 = icmp eq i32 %675, 0
  br i1 %676, label %677, label %783

677:                                              ; preds = %667
  %678 = load i64, i64* %199, align 8
  %679 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %201, align 8
  %680 = load i64, i64* %202, align 8
  %681 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %66, align 8
  %682 = load i64, i64* %67, align 8
  %683 = sub i64 %303, %1
  %684 = trunc i64 %683 to i32
  %685 = sub i64 %680, %3
  %686 = trunc i64 %685 to i32
  %687 = add i32 %686, -1
  %688 = add i64 %678, -1
  %689 = icmp ult i64 %688, %301
  br i1 %689, label %735, label %690

690:                                              ; preds = %677
  %691 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  %692 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %300, i64 0, i32 0
  %693 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %691, i64 0, i32 0
  br label %694

694:                                              ; preds = %731, %690
  %695 = phi i64 [ %688, %690 ], [ %732, %731 ]
  %696 = phi i64 [ %301, %690 ], [ %733, %731 ]
  %697 = lshr i64 %696, 18
  %698 = and i64 %696, 262143
  %699 = load i32**, i32*** %692, align 8
  %700 = getelementptr inbounds i32*, i32** %699, i64 %697
  %701 = load i32*, i32** %700, align 8
  %702 = getelementptr inbounds i32, i32* %701, i64 %698
  %703 = load i32, i32* %702, align 4
  %704 = sub nsw i32 %703, %684
  %705 = icmp sgt i32 %704, -1
  br i1 %705, label %706, label %731

706:                                              ; preds = %694
  %707 = sext i32 %704 to i64
  %708 = add i64 %707, %1
  %709 = lshr i64 %708, 18
  %710 = and i64 %708, 262143
  %711 = load i32**, i32*** %62, align 8
  %712 = getelementptr inbounds i32*, i32** %711, i64 %709
  %713 = load i32*, i32** %712, align 8
  %714 = getelementptr inbounds i32, i32* %713, i64 %710
  %715 = load i32, i32* %714, align 4
  %716 = icmp eq i32 %715, %687
  br i1 %716, label %717, label %731

717:                                              ; preds = %706
  %718 = add i64 %695, 1
  %719 = lshr i64 %718, 18
  %720 = and i64 %718, 262143
  %721 = load i32**, i32*** %693, align 8
  %722 = getelementptr inbounds i32*, i32** %721, i64 %719
  %723 = load i32*, i32** %722, align 8
  %724 = getelementptr inbounds i32, i32* %723, i64 %720
  store i32 %704, i32* %724, align 4
  %725 = sub i64 %718, %3
  %726 = trunc i64 %725 to i32
  %727 = load i32**, i32*** %62, align 8
  %728 = getelementptr inbounds i32*, i32** %727, i64 %709
  %729 = load i32*, i32** %728, align 8
  %730 = getelementptr inbounds i32, i32* %729, i64 %710
  store i32 %726, i32* %730, align 4
  br label %731

731:                                              ; preds = %717, %706, %694
  %732 = phi i64 [ %718, %717 ], [ %695, %706 ], [ %695, %694 ]
  %733 = add i64 %696, 1
  %734 = icmp ugt i64 %733, %732
  br i1 %734, label %735, label %694

735:                                              ; preds = %731, %677
  %736 = phi i64 [ %688, %677 ], [ %732, %731 ]
  %737 = add nuw i64 %736, 1
  %738 = icmp ult i64 %737, %680
  br i1 %738, label %739, label %957

739:                                              ; preds = %735
  %740 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %681, i64 0, i32 0
  %741 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %679, i64 0, i32 0
  br label %742

742:                                              ; preds = %780, %739
  %743 = phi i64 [ %682, %739 ], [ %745, %780 ]
  %744 = phi i64 [ %680, %739 ], [ %781, %780 ]
  %745 = add i64 %743, -1
  %746 = lshr i64 %745, 18
  %747 = and i64 %745, 262143
  %748 = load i32**, i32*** %740, align 8
  %749 = getelementptr inbounds i32*, i32** %748, i64 %746
  %750 = load i32*, i32** %749, align 8
  %751 = getelementptr inbounds i32, i32* %750, i64 %747
  %752 = load i32, i32* %751, align 4
  %753 = sub nsw i32 %752, %684
  %754 = icmp sgt i32 %753, -1
  br i1 %754, label %755, label %780

755:                                              ; preds = %742
  %756 = sext i32 %753 to i64
  %757 = add i64 %756, %1
  %758 = lshr i64 %757, 18
  %759 = and i64 %757, 262143
  %760 = load i32**, i32*** %62, align 8
  %761 = getelementptr inbounds i32*, i32** %760, i64 %758
  %762 = load i32*, i32** %761, align 8
  %763 = getelementptr inbounds i32, i32* %762, i64 %759
  %764 = load i32, i32* %763, align 4
  %765 = icmp eq i32 %764, %687
  br i1 %765, label %766, label %780

766:                                              ; preds = %755
  %767 = add i64 %744, -1
  %768 = lshr i64 %767, 18
  %769 = and i64 %767, 262143
  %770 = load i32**, i32*** %741, align 8
  %771 = getelementptr inbounds i32*, i32** %770, i64 %768
  %772 = load i32*, i32** %771, align 8
  %773 = getelementptr inbounds i32, i32* %772, i64 %769
  store i32 %753, i32* %773, align 4
  %774 = sub i64 %767, %3
  %775 = trunc i64 %774 to i32
  %776 = load i32**, i32*** %62, align 8
  %777 = getelementptr inbounds i32*, i32** %776, i64 %758
  %778 = load i32*, i32** %777, align 8
  %779 = getelementptr inbounds i32, i32* %778, i64 %759
  store i32 %775, i32* %779, align 4
  br label %780

780:                                              ; preds = %766, %755, %742
  %781 = phi i64 [ %767, %766 ], [ %744, %755 ], [ %744, %742 ]
  %782 = icmp ult i64 %737, %781
  br i1 %782, label %742, label %957

783:                                              ; preds = %667
  %784 = icmp sgt i32 %304, -1
  br i1 %784, label %785, label %788

785:                                              ; preds = %783
  %786 = sext i32 %304 to i64
  %787 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %786, i32 3
  store i32 -1, i32* %787, align 8
  br label %788

788:                                              ; preds = %785, %783
  %789 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  %790 = load i64, i64* %199, align 8
  %791 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %201, align 8
  %792 = load i64, i64* %202, align 8
  %793 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %66, align 8
  %794 = load i64, i64* %67, align 8
  %795 = sub i64 %303, %1
  %796 = trunc i64 %795 to i32
  %797 = sub i64 %792, %3
  %798 = trunc i64 %797 to i32
  %799 = add i32 %798, -1
  %800 = add i64 %790, -1
  %801 = icmp ult i64 %800, %301
  br i1 %801, label %805, label %802

802:                                              ; preds = %788
  %803 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %300, i64 0, i32 0
  %804 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %789, i64 0, i32 0
  br label %811

805:                                              ; preds = %860, %788
  %806 = phi i64 [ %800, %788 ], [ %861, %860 ]
  %807 = phi i32 [ -1, %788 ], [ %862, %860 ]
  %808 = icmp ult i64 %806, %301
  br i1 %808, label %895, label %809

809:                                              ; preds = %805
  %810 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %789, i64 0, i32 0
  br label %866

811:                                              ; preds = %860, %802
  %812 = phi i32 [ -1, %802 ], [ %863, %860 ]
  %813 = phi i32 [ -1, %802 ], [ %862, %860 ]
  %814 = phi i64 [ %800, %802 ], [ %861, %860 ]
  %815 = phi i64 [ %301, %802 ], [ %864, %860 ]
  %816 = lshr i64 %815, 18
  %817 = and i64 %815, 262143
  %818 = load i32**, i32*** %803, align 8
  %819 = getelementptr inbounds i32*, i32** %818, i64 %816
  %820 = load i32*, i32** %819, align 8
  %821 = getelementptr inbounds i32, i32* %820, i64 %817
  %822 = load i32, i32* %821, align 4
  %823 = sub nsw i32 %822, %796
  %824 = icmp sgt i32 %823, -1
  br i1 %824, label %825, label %860

825:                                              ; preds = %811
  %826 = sext i32 %823 to i64
  %827 = add i64 %826, %1
  %828 = lshr i64 %827, 18
  %829 = and i64 %827, 262143
  %830 = load i32**, i32*** %62, align 8
  %831 = getelementptr inbounds i32*, i32** %830, i64 %828
  %832 = load i32*, i32** %831, align 8
  %833 = getelementptr inbounds i32, i32* %832, i64 %829
  %834 = load i32, i32* %833, align 4
  %835 = icmp eq i32 %834, %799
  br i1 %835, label %836, label %860

836:                                              ; preds = %825
  %837 = add i64 %814, 1
  %838 = lshr i64 %837, 18
  %839 = and i64 %837, 262143
  %840 = load i32**, i32*** %804, align 8
  %841 = getelementptr inbounds i32*, i32** %840, i64 %838
  %842 = load i32*, i32** %841, align 8
  %843 = getelementptr inbounds i32, i32* %842, i64 %839
  store i32 %823, i32* %843, align 4
  %844 = sext i32 %822 to i64
  %845 = add i64 %844, %1
  %846 = lshr i64 %845, 18
  %847 = and i64 %845, 262143
  %848 = load i32**, i32*** %62, align 8
  %849 = getelementptr inbounds i32*, i32** %848, i64 %846
  %850 = load i32*, i32** %849, align 8
  %851 = getelementptr inbounds i32, i32* %850, i64 %847
  %852 = load i32, i32* %851, align 4
  %853 = icmp eq i32 %812, %852
  %854 = sub i64 %837, %3
  %855 = trunc i64 %854 to i32
  %856 = select i1 %853, i32 %813, i32 %855
  %857 = getelementptr inbounds i32*, i32** %848, i64 %828
  %858 = load i32*, i32** %857, align 8
  %859 = getelementptr inbounds i32, i32* %858, i64 %829
  store i32 %856, i32* %859, align 4
  br label %860

860:                                              ; preds = %836, %825, %811
  %861 = phi i64 [ %837, %836 ], [ %814, %825 ], [ %814, %811 ]
  %862 = phi i32 [ %856, %836 ], [ %813, %825 ], [ %813, %811 ]
  %863 = phi i32 [ %852, %836 ], [ %812, %825 ], [ %812, %811 ]
  %864 = add i64 %815, 1
  %865 = icmp ugt i64 %864, %861
  br i1 %865, label %805, label %811

866:                                              ; preds = %892, %809
  %867 = phi i32 [ -1, %809 ], [ %885, %892 ]
  %868 = phi i32 [ %807, %809 ], [ %889, %892 ]
  %869 = phi i64 [ %806, %809 ], [ %893, %892 ]
  %870 = lshr i64 %869, 18
  %871 = and i64 %869, 262143
  %872 = load i32**, i32*** %810, align 8
  %873 = getelementptr inbounds i32*, i32** %872, i64 %870
  %874 = load i32*, i32** %873, align 8
  %875 = getelementptr inbounds i32, i32* %874, i64 %871
  %876 = load i32, i32* %875, align 4
  %877 = sext i32 %876 to i64
  %878 = add i64 %877, %1
  %879 = lshr i64 %878, 18
  %880 = and i64 %878, 262143
  %881 = load i32**, i32*** %62, align 8
  %882 = getelementptr inbounds i32*, i32** %881, i64 %879
  %883 = load i32*, i32** %882, align 8
  %884 = getelementptr inbounds i32, i32* %883, i64 %880
  %885 = load i32, i32* %884, align 4
  %886 = icmp eq i32 %867, %885
  %887 = sub i64 %869, %3
  %888 = trunc i64 %887 to i32
  %889 = select i1 %886, i32 %868, i32 %888
  %890 = icmp eq i32 %889, %885
  br i1 %890, label %892, label %891

891:                                              ; preds = %866
  store i32 %889, i32* %884, align 4
  br label %892

892:                                              ; preds = %891, %866
  %893 = add i64 %869, -1
  %894 = icmp ult i64 %893, %301
  br i1 %894, label %895, label %866

895:                                              ; preds = %892, %805
  %896 = phi i32 [ %807, %805 ], [ %889, %892 ]
  %897 = add i64 %806, 1
  %898 = icmp ult i64 %897, %792
  br i1 %898, label %899, label %957

899:                                              ; preds = %895
  %900 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %793, i64 0, i32 0
  %901 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %791, i64 0, i32 0
  br label %902

902:                                              ; preds = %952, %899
  %903 = phi i64 [ %794, %899 ], [ %907, %952 ]
  %904 = phi i32 [ -1, %899 ], [ %955, %952 ]
  %905 = phi i32 [ %896, %899 ], [ %954, %952 ]
  %906 = phi i64 [ %792, %899 ], [ %953, %952 ]
  %907 = add i64 %903, -1
  %908 = lshr i64 %907, 18
  %909 = and i64 %907, 262143
  %910 = load i32**, i32*** %900, align 8
  %911 = getelementptr inbounds i32*, i32** %910, i64 %908
  %912 = load i32*, i32** %911, align 8
  %913 = getelementptr inbounds i32, i32* %912, i64 %909
  %914 = load i32, i32* %913, align 4
  %915 = sub nsw i32 %914, %796
  %916 = icmp sgt i32 %915, -1
  br i1 %916, label %917, label %952

917:                                              ; preds = %902
  %918 = sext i32 %915 to i64
  %919 = add i64 %918, %1
  %920 = lshr i64 %919, 18
  %921 = and i64 %919, 262143
  %922 = load i32**, i32*** %62, align 8
  %923 = getelementptr inbounds i32*, i32** %922, i64 %920
  %924 = load i32*, i32** %923, align 8
  %925 = getelementptr inbounds i32, i32* %924, i64 %921
  %926 = load i32, i32* %925, align 4
  %927 = icmp eq i32 %926, %799
  br i1 %927, label %928, label %952

928:                                              ; preds = %917
  %929 = add i64 %906, -1
  %930 = lshr i64 %929, 18
  %931 = and i64 %929, 262143
  %932 = load i32**, i32*** %901, align 8
  %933 = getelementptr inbounds i32*, i32** %932, i64 %930
  %934 = load i32*, i32** %933, align 8
  %935 = getelementptr inbounds i32, i32* %934, i64 %931
  store i32 %915, i32* %935, align 4
  %936 = sext i32 %914 to i64
  %937 = add i64 %936, %1
  %938 = lshr i64 %937, 18
  %939 = and i64 %937, 262143
  %940 = load i32**, i32*** %62, align 8
  %941 = getelementptr inbounds i32*, i32** %940, i64 %938
  %942 = load i32*, i32** %941, align 8
  %943 = getelementptr inbounds i32, i32* %942, i64 %939
  %944 = load i32, i32* %943, align 4
  %945 = icmp eq i32 %904, %944
  %946 = sub i64 %929, %3
  %947 = trunc i64 %946 to i32
  %948 = select i1 %945, i32 %905, i32 %947
  %949 = getelementptr inbounds i32*, i32** %940, i64 %920
  %950 = load i32*, i32** %949, align 8
  %951 = getelementptr inbounds i32, i32* %950, i64 %921
  store i32 %948, i32* %951, align 4
  br label %952

952:                                              ; preds = %928, %917, %902
  %953 = phi i64 [ %929, %928 ], [ %906, %917 ], [ %906, %902 ]
  %954 = phi i32 [ %948, %928 ], [ %905, %917 ], [ %905, %902 ]
  %955 = phi i32 [ %944, %928 ], [ %904, %917 ], [ %904, %902 ]
  %956 = icmp ult i64 %897, %953
  br i1 %956, label %902, label %957

957:                                              ; preds = %952, %780, %895, %735
  %958 = icmp eq i32 %668, 0
  br i1 %958, label %2997, label %959

959:                                              ; preds = %957
  %960 = add nsw i32 %305, -2
  %961 = sext i32 %960 to i64
  %962 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %961, i32 0, i32 0
  %963 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %962, align 8
  %964 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %961, i32 0, i32 1
  %965 = load i64, i64* %964, align 8
  %966 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %961, i32 1, i32 0
  %967 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %966, align 8
  %968 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %961, i32 1, i32 1
  %969 = load i64, i64* %968, align 8
  %970 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %961, i32 2
  %971 = bitcast %"class.courgette::PagedArray_iterator"* %970 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %971, i64 16, i1 false) #3
  %972 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %961, i32 3
  %973 = load i32, i32* %972, align 8
  %974 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %961, i32 4
  %975 = load i32, i32* %974, align 4
  br label %2986

976:                                              ; preds = %1810, %1337, %1735, %1238, %313
  %977 = lshr i64 %301, 18
  %978 = and i64 %301, 262143
  %979 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %300, i64 0, i32 0
  %980 = load i32**, i32*** %979, align 8
  %981 = getelementptr inbounds i32*, i32** %980, i64 %977
  %982 = load i32*, i32** %981, align 8
  %983 = getelementptr inbounds i32, i32* %982, i64 %978
  %984 = load i32, i32* %983, align 4
  %985 = icmp sgt i32 %984, -1
  br i1 %985, label %986, label %1022

986:                                              ; preds = %976
  store %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"** %198, align 8
  store i64 %301, i64* %199, align 8
  %987 = load i64, i64* %67, align 8
  %988 = load i32**, i32*** %979, align 8
  br label %989

989:                                              ; preds = %1012, %986
  %990 = phi i32** [ %1016, %1012 ], [ %988, %986 ]
  %991 = phi i64 [ %1009, %1012 ], [ %301, %986 ]
  %992 = sub i64 %991, %3
  %993 = trunc i64 %992 to i32
  %994 = lshr i64 %991, 18
  %995 = and i64 %991, 262143
  %996 = getelementptr inbounds i32*, i32** %990, i64 %994
  %997 = load i32*, i32** %996, align 8
  %998 = getelementptr inbounds i32, i32* %997, i64 %995
  %999 = load i32, i32* %998, align 4
  %1000 = sext i32 %999 to i64
  %1001 = add i64 %1000, %1
  %1002 = lshr i64 %1001, 18
  %1003 = and i64 %1001, 262143
  %1004 = load i32**, i32*** %62, align 8
  %1005 = getelementptr inbounds i32*, i32** %1004, i64 %1002
  %1006 = load i32*, i32** %1005, align 8
  %1007 = getelementptr inbounds i32, i32* %1006, i64 %1003
  store i32 %993, i32* %1007, align 4
  %1008 = load i64, i64* %199, align 8
  %1009 = add i64 %1008, 1
  store i64 %1009, i64* %199, align 8
  %1010 = icmp ult i64 %1009, %987
  %1011 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  br i1 %1010, label %1012, label %1022

1012:                                             ; preds = %989
  %1013 = lshr i64 %1009, 18
  %1014 = and i64 %1009, 262143
  %1015 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1011, i64 0, i32 0
  %1016 = load i32**, i32*** %1015, align 8
  %1017 = getelementptr inbounds i32*, i32** %1016, i64 %1013
  %1018 = load i32*, i32** %1017, align 8
  %1019 = getelementptr inbounds i32, i32* %1018, i64 %1014
  %1020 = load i32, i32* %1019, align 4
  %1021 = icmp sgt i32 %1020, -1
  br i1 %1021, label %989, label %1022

1022:                                             ; preds = %1012, %989, %976
  %1023 = phi %"class.courgette::PagedArray"* [ %300, %976 ], [ %1011, %989 ], [ %1011, %1012 ]
  %1024 = phi i64 [ %301, %976 ], [ %1009, %989 ], [ %1009, %1012 ]
  %1025 = load i64, i64* %67, align 8
  %1026 = icmp ult i64 %1024, %1025
  br i1 %1026, label %1027, label %1219

1027:                                             ; preds = %1022
  store %"class.courgette::PagedArray"* %1023, %"class.courgette::PagedArray"** %198, align 8
  store i64 %1024, i64* %199, align 8
  %1028 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1023, i64 0, i32 0
  %1029 = load i32**, i32*** %1028, align 8
  br label %1030

1030:                                             ; preds = %1030, %1027
  %1031 = phi i32** [ %1046, %1030 ], [ %1029, %1027 ]
  %1032 = phi i64 [ %1041, %1030 ], [ %1024, %1027 ]
  %1033 = lshr i64 %1032, 18
  %1034 = and i64 %1032, 262143
  %1035 = getelementptr inbounds i32*, i32** %1031, i64 %1033
  %1036 = load i32*, i32** %1035, align 8
  %1037 = getelementptr inbounds i32, i32* %1036, i64 %1034
  %1038 = load i32, i32* %1037, align 4
  %1039 = xor i32 %1038, -1
  store i32 %1039, i32* %1037, align 4
  %1040 = load i64, i64* %199, align 8
  %1041 = add i64 %1040, 1
  store i64 %1041, i64* %199, align 8
  %1042 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  %1043 = lshr i64 %1041, 18
  %1044 = and i64 %1041, 262143
  %1045 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1042, i64 0, i32 0
  %1046 = load i32**, i32*** %1045, align 8
  %1047 = getelementptr inbounds i32*, i32** %1046, i64 %1043
  %1048 = load i32*, i32** %1047, align 8
  %1049 = getelementptr inbounds i32, i32* %1048, i64 %1044
  %1050 = load i32, i32* %1049, align 4
  %1051 = icmp slt i32 %1050, 0
  br i1 %1051, label %1030, label %1052

1052:                                             ; preds = %1030
  %1053 = sext i32 %1050 to i64
  %1054 = add i64 %1053, %1
  %1055 = lshr i64 %1054, 18
  %1056 = and i64 %1054, 262143
  %1057 = load i32**, i32*** %62, align 8
  %1058 = getelementptr inbounds i32*, i32** %1057, i64 %1055
  %1059 = load i32*, i32** %1058, align 8
  %1060 = getelementptr inbounds i32, i32* %1059, i64 %1056
  %1061 = load i32, i32* %1060, align 4
  %1062 = add i64 %303, %1053
  %1063 = lshr i64 %1062, 18
  %1064 = and i64 %1062, 262143
  %1065 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %302, i64 0, i32 0
  %1066 = load i32**, i32*** %1065, align 8
  %1067 = getelementptr inbounds i32*, i32** %1066, i64 %1063
  %1068 = load i32*, i32** %1067, align 8
  %1069 = getelementptr inbounds i32, i32* %1068, i64 %1064
  %1070 = load i32, i32* %1069, align 4
  %1071 = icmp eq i32 %1061, %1070
  br i1 %1071, label %1107, label %1072

1072:                                             ; preds = %1052
  %1073 = sub i64 %1041, %1024
  %1074 = trunc i64 %1073 to i32
  %1075 = add i32 %1074, 1
  %1076 = icmp ugt i32 %1075, 65535
  br i1 %1076, label %1077, label %1092

1077:                                             ; preds = %1072
  %1078 = icmp ugt i32 %1075, 16777215
  br i1 %1078, label %1079, label %1085

1079:                                             ; preds = %1077
  %1080 = lshr i32 %1075, 24
  %1081 = zext i32 %1080 to i64
  %1082 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %1081
  %1083 = load i32, i32* %1082, align 4
  %1084 = add nsw i32 %1083, 24
  br label %1107

1085:                                             ; preds = %1077
  %1086 = lshr i32 %1075, 16
  %1087 = and i32 %1086, 255
  %1088 = zext i32 %1087 to i64
  %1089 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %1088
  %1090 = load i32, i32* %1089, align 4
  %1091 = add nsw i32 %1090, 16
  br label %1107

1092:                                             ; preds = %1072
  %1093 = and i32 %1075, 65280
  %1094 = icmp eq i32 %1093, 0
  br i1 %1094, label %1102, label %1095

1095:                                             ; preds = %1092
  %1096 = lshr i32 %1075, 8
  %1097 = and i32 %1096, 255
  %1098 = zext i32 %1097 to i64
  %1099 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %1098
  %1100 = load i32, i32* %1099, align 4
  %1101 = add nsw i32 %1100, 8
  br label %1107

1102:                                             ; preds = %1092
  %1103 = and i32 %1075, 255
  %1104 = zext i32 %1103 to i64
  %1105 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %1104
  %1106 = load i32, i32* %1105, align 4
  br label %1107

1107:                                             ; preds = %1102, %1095, %1085, %1079, %1052
  %1108 = phi i32 [ -1, %1052 ], [ %1084, %1079 ], [ %1091, %1085 ], [ %1101, %1095 ], [ %1106, %1102 ]
  %1109 = add i64 %1040, 2
  store i64 %1109, i64* %199, align 8
  %1110 = load i64, i64* %67, align 8
  %1111 = icmp ult i64 %1109, %1110
  br i1 %1111, label %1112, label %1143

1112:                                             ; preds = %1107
  store %"class.courgette::PagedArray"* %1023, %"class.courgette::PagedArray"** %201, align 8
  store i64 %1024, i64* %202, align 8
  %1113 = sub i64 %1109, %3
  %1114 = trunc i64 %1113 to i32
  %1115 = add i32 %1114, -1
  %1116 = icmp ult i64 %1024, %1109
  br i1 %1116, label %1117, label %1143

1117:                                             ; preds = %1112, %1140
  %1118 = phi %"class.courgette::PagedArray"* [ %1142, %1140 ], [ %1023, %1112 ]
  %1119 = phi i32** [ %1141, %1140 ], [ %1057, %1112 ]
  %1120 = phi i64 [ %1137, %1140 ], [ %1024, %1112 ]
  %1121 = lshr i64 %1120, 18
  %1122 = and i64 %1120, 262143
  %1123 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1118, i64 0, i32 0
  %1124 = load i32**, i32*** %1123, align 8
  %1125 = getelementptr inbounds i32*, i32** %1124, i64 %1121
  %1126 = load i32*, i32** %1125, align 8
  %1127 = getelementptr inbounds i32, i32* %1126, i64 %1122
  %1128 = load i32, i32* %1127, align 4
  %1129 = sext i32 %1128 to i64
  %1130 = add i64 %1129, %1
  %1131 = lshr i64 %1130, 18
  %1132 = and i64 %1130, 262143
  %1133 = getelementptr inbounds i32*, i32** %1119, i64 %1131
  %1134 = load i32*, i32** %1133, align 8
  %1135 = getelementptr inbounds i32, i32* %1134, i64 %1132
  store i32 %1115, i32* %1135, align 4
  %1136 = load i64, i64* %202, align 8
  %1137 = add i64 %1136, 1
  store i64 %1137, i64* %202, align 8
  %1138 = load i64, i64* %199, align 8
  %1139 = icmp ult i64 %1137, %1138
  br i1 %1139, label %1140, label %1143

1140:                                             ; preds = %1117
  %1141 = load i32**, i32*** %62, align 8
  %1142 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %201, align 8
  br label %1117

1143:                                             ; preds = %1117, %1112, %1107
  %1144 = phi i64 [ %1109, %1112 ], [ %1109, %1107 ], [ %1138, %1117 ]
  %1145 = sub i64 %1144, %1024
  %1146 = trunc i64 %1145 to i32
  %1147 = icmp slt i32 %297, %1146
  br i1 %1147, label %1148, label %1153

1148:                                             ; preds = %1143
  %1149 = icmp eq i32 %298, 0
  br i1 %1149, label %1188, label %1150

1150:                                             ; preds = %1148
  %1151 = add i32 %297, %4
  %1152 = add nsw i32 %298, -1
  br label %1153

1153:                                             ; preds = %1143, %1150
  %1154 = phi i32 [ %1151, %1150 ], [ %297, %1143 ]
  %1155 = phi i32 [ %1152, %1150 ], [ %298, %1143 ]
  %1156 = sub i32 %1154, %1146
  %1157 = load i64, i64* %67, align 8
  %1158 = sub i64 %1157, %1144
  %1159 = icmp sgt i64 %1145, %1158
  br i1 %1159, label %1172, label %1160

1160:                                             ; preds = %1153
  %1161 = sext i32 %305 to i64
  %1162 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1161, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %1162, align 8
  %1163 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1161, i32 0, i32 1
  store i64 %303, i64* %1163, align 8
  %1164 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1161, i32 1
  %1165 = bitcast %"class.courgette::PagedArray_iterator"* %1164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1165, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %1166 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1161, i32 2
  %1167 = bitcast %"class.courgette::PagedArray_iterator"* %1166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1167, i8* nonnull align 8 %64, i64 16, i1 false) #3
  %1168 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1161, i32 3
  store i32 -3, i32* %1168, align 8
  %1169 = add nsw i32 %305, 1
  %1170 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1161, i32 4
  store i32 %304, i32* %1170, align 4
  %1171 = add i64 %303, %221
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %197, i64 16, i1 false) #3
  br label %2986

1172:                                             ; preds = %1153
  %1173 = icmp sgt i64 %1158, 1
  %1174 = add i64 %303, %221
  br i1 %1173, label %1175, label %1187

1175:                                             ; preds = %1172
  %1176 = sext i32 %305 to i64
  %1177 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1176, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %1177, align 8
  %1178 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1176, i32 0, i32 1
  store i64 %1174, i64* %1178, align 8
  %1179 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1176, i32 1, i32 0
  store %"class.courgette::PagedArray"* %1023, %"class.courgette::PagedArray"** %1179, align 8
  %1180 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1176, i32 1, i32 1
  store i64 %1024, i64* %1180, align 8
  %1181 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1176, i32 2
  %1182 = bitcast %"class.courgette::PagedArray_iterator"* %1181 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1182, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %1183 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1176, i32 3
  store i32 %1108, i32* %1183, align 8
  %1184 = add nsw i32 %305, 1
  %1185 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1176, i32 4
  store i32 %304, i32* %1185, align 4
  %1186 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  br label %2986

1187:                                             ; preds = %1172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %197, i64 16, i1 false) #3
  br label %2986

1188:                                             ; preds = %1148
  %1189 = add nsw i32 %299, %1146
  %1190 = icmp sgt i32 %304, -1
  br i1 %1190, label %1191, label %1194

1191:                                             ; preds = %1188
  %1192 = sext i32 %304 to i64
  %1193 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1192, i32 3
  store i32 -1, i32* %1193, align 8
  br label %1194

1194:                                             ; preds = %1191, %1188
  %1195 = load i64, i64* %67, align 8
  %1196 = sub i64 %1195, %1144
  %1197 = icmp sgt i64 %1196, 1
  br i1 %1197, label %1198, label %1200

1198:                                             ; preds = %1194
  %1199 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  br label %2986

1200:                                             ; preds = %1194
  %1201 = icmp eq i32 %305, 0
  br i1 %1201, label %2997, label %1202

1202:                                             ; preds = %1200
  %1203 = add nsw i32 %305, -1
  %1204 = sext i32 %1203 to i64
  %1205 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1204, i32 0, i32 0
  %1206 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %1205, align 8
  %1207 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1204, i32 0, i32 1
  %1208 = load i64, i64* %1207, align 8
  %1209 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1204, i32 1, i32 0
  %1210 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %1209, align 8
  %1211 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1204, i32 1, i32 1
  %1212 = load i64, i64* %1211, align 8
  %1213 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1204, i32 2
  %1214 = bitcast %"class.courgette::PagedArray_iterator"* %1213 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %1214, i64 16, i1 false) #3
  %1215 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1204, i32 3
  %1216 = load i32, i32* %1215, align 8
  %1217 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1204, i32 4
  %1218 = load i32, i32* %1217, align 4
  br label %2986

1219:                                             ; preds = %1022
  %1220 = icmp eq i32 %305, 0
  br i1 %1220, label %2997, label %1221

1221:                                             ; preds = %1219
  %1222 = add nsw i32 %305, -1
  %1223 = sext i32 %1222 to i64
  %1224 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1223, i32 0, i32 0
  %1225 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %1224, align 8
  %1226 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1223, i32 0, i32 1
  %1227 = load i64, i64* %1226, align 8
  %1228 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1223, i32 1, i32 0
  %1229 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %1228, align 8
  %1230 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1223, i32 1, i32 1
  %1231 = load i64, i64* %1230, align 8
  %1232 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1223, i32 2
  %1233 = bitcast %"class.courgette::PagedArray_iterator"* %1232 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %1233, i64 16, i1 false) #3
  %1234 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1223, i32 3
  %1235 = load i32, i32* %1234, align 8
  %1236 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %1223, i32 4
  %1237 = load i32, i32* %1236, align 4
  br label %2986

1238:                                             ; preds = %308
  %1239 = add i64 %301, 1
  %1240 = icmp ult i64 %1239, %310
  br i1 %1240, label %1241, label %976

1241:                                             ; preds = %1238
  %1242 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %300, i64 0, i32 0
  br label %1243

1243:                                             ; preds = %1337, %1241
  %1244 = phi i64 [ %1239, %1241 ], [ %1345, %1337 ]
  %1245 = phi i64 [ %301, %1241 ], [ %1244, %1337 ]
  %1246 = lshr i64 %1244, 18
  %1247 = and i64 %1244, 262143
  %1248 = load i32**, i32*** %1242, align 8
  %1249 = getelementptr inbounds i32*, i32** %1248, i64 %1246
  %1250 = load i32*, i32** %1249, align 8
  %1251 = getelementptr inbounds i32, i32* %1250, i64 %1247
  %1252 = load i32, i32* %1251, align 4
  %1253 = sext i32 %1252 to i64
  %1254 = add i64 %303, %1253
  %1255 = lshr i64 %1254, 18
  %1256 = and i64 %1254, 262143
  %1257 = load i32**, i32*** %309, align 8
  %1258 = getelementptr inbounds i32*, i32** %1257, i64 %1255
  %1259 = load i32*, i32** %1258, align 8
  %1260 = getelementptr inbounds i32, i32* %1259, i64 %1256
  %1261 = load i32, i32* %1260, align 4
  %1262 = lshr i64 %1245, 18
  %1263 = and i64 %1245, 262143
  %1264 = getelementptr inbounds i32*, i32** %1248, i64 %1262
  %1265 = load i32*, i32** %1264, align 8
  %1266 = getelementptr inbounds i32, i32* %1265, i64 %1263
  %1267 = load i32, i32* %1266, align 4
  %1268 = sext i32 %1267 to i64
  %1269 = add i64 %303, %1268
  %1270 = lshr i64 %1269, 18
  %1271 = and i64 %1269, 262143
  %1272 = getelementptr inbounds i32*, i32** %1257, i64 %1270
  %1273 = load i32*, i32** %1272, align 8
  %1274 = getelementptr inbounds i32, i32* %1273, i64 %1271
  %1275 = load i32, i32* %1274, align 4
  %1276 = sub nsw i32 %1261, %1275
  %1277 = icmp slt i32 %1276, 0
  br i1 %1277, label %1294, label %1324

1278:                                             ; preds = %1315
  %1279 = load i32**, i32*** %309, align 8
  %1280 = getelementptr inbounds i32*, i32** %1279, i64 %1255
  %1281 = load i32*, i32** %1280, align 8
  %1282 = getelementptr inbounds i32, i32* %1281, i64 %1256
  %1283 = load i32, i32* %1282, align 4
  %1284 = sext i32 %1322 to i64
  %1285 = add i64 %303, %1284
  %1286 = lshr i64 %1285, 18
  %1287 = and i64 %1285, 262143
  %1288 = getelementptr inbounds i32*, i32** %1279, i64 %1286
  %1289 = load i32*, i32** %1288, align 8
  %1290 = getelementptr inbounds i32, i32* %1289, i64 %1287
  %1291 = load i32, i32* %1290, align 4
  %1292 = sub nsw i32 %1283, %1291
  %1293 = icmp slt i32 %1292, 0
  br i1 %1293, label %1294, label %1324

1294:                                             ; preds = %1243, %1278
  %1295 = phi i32 [ %1292, %1278 ], [ %1276, %1243 ]
  %1296 = phi i64 [ %1313, %1278 ], [ %1245, %1243 ]
  %1297 = phi i32** [ %1318, %1278 ], [ %1248, %1243 ]
  br label %1298

1298:                                             ; preds = %1315, %1294
  %1299 = phi i32** [ %1318, %1315 ], [ %1297, %1294 ]
  %1300 = phi i64 [ %1313, %1315 ], [ %1296, %1294 ]
  %1301 = lshr i64 %1300, 18
  %1302 = and i64 %1300, 262143
  %1303 = getelementptr inbounds i32*, i32** %1299, i64 %1301
  %1304 = load i32*, i32** %1303, align 8
  %1305 = getelementptr inbounds i32, i32* %1304, i64 %1302
  %1306 = load i32, i32* %1305, align 4
  %1307 = add i64 %1300, 1
  %1308 = lshr i64 %1307, 18
  %1309 = and i64 %1307, 262143
  %1310 = getelementptr inbounds i32*, i32** %1299, i64 %1308
  %1311 = load i32*, i32** %1310, align 8
  %1312 = getelementptr inbounds i32, i32* %1311, i64 %1309
  store i32 %1306, i32* %1312, align 4
  %1313 = add i64 %1300, -1
  %1314 = icmp ult i64 %1313, %301
  br i1 %1314, label %1324, label %1315

1315:                                             ; preds = %1298
  %1316 = lshr i64 %1313, 18
  %1317 = and i64 %1313, 262143
  %1318 = load i32**, i32*** %1242, align 8
  %1319 = getelementptr inbounds i32*, i32** %1318, i64 %1316
  %1320 = load i32*, i32** %1319, align 8
  %1321 = getelementptr inbounds i32, i32* %1320, i64 %1317
  %1322 = load i32, i32* %1321, align 4
  %1323 = icmp slt i32 %1322, 0
  br i1 %1323, label %1298, label %1278

1324:                                             ; preds = %1278, %1298, %1243
  %1325 = phi i32 [ %1276, %1243 ], [ %1295, %1298 ], [ %1292, %1278 ]
  %1326 = phi i64 [ %1245, %1243 ], [ %1313, %1298 ], [ %1313, %1278 ]
  %1327 = icmp eq i32 %1325, 0
  br i1 %1327, label %1328, label %1337

1328:                                             ; preds = %1324
  %1329 = lshr i64 %1326, 18
  %1330 = and i64 %1326, 262143
  %1331 = load i32**, i32*** %1242, align 8
  %1332 = getelementptr inbounds i32*, i32** %1331, i64 %1329
  %1333 = load i32*, i32** %1332, align 8
  %1334 = getelementptr inbounds i32, i32* %1333, i64 %1330
  %1335 = load i32, i32* %1334, align 4
  %1336 = xor i32 %1335, -1
  store i32 %1336, i32* %1334, align 4
  br label %1337

1337:                                             ; preds = %1328, %1324
  %1338 = add i64 %1326, 1
  %1339 = lshr i64 %1338, 18
  %1340 = and i64 %1338, 262143
  %1341 = load i32**, i32*** %1242, align 8
  %1342 = getelementptr inbounds i32*, i32** %1341, i64 %1339
  %1343 = load i32*, i32** %1342, align 8
  %1344 = getelementptr inbounds i32, i32* %1343, i64 %1340
  store i32 %1252, i32* %1344, align 4
  %1345 = add i64 %1244, 1
  %1346 = icmp eq i64 %1345, %310
  br i1 %1346, label %976, label %1243

1347:                                             ; preds = %308
  %1348 = icmp eq i32 %306, 0
  br i1 %1348, label %1349, label %1816

1349:                                             ; preds = %1347
  %1350 = trunc i64 %311 to i32
  %1351 = and i32 %1350, 1
  %1352 = icmp eq i32 %1351, 0
  br i1 %1352, label %1353, label %1397

1353:                                             ; preds = %1349
  %1354 = add nsw i32 %1350, -1
  %1355 = sdiv i32 %1354, 2
  %1356 = sext i32 %1355 to i64
  %1357 = add i64 %301, %1356
  %1358 = lshr i64 %1357, 18
  %1359 = and i64 %1357, 262143
  %1360 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %300, i64 0, i32 0
  %1361 = load i32**, i32*** %1360, align 8
  %1362 = getelementptr inbounds i32*, i32** %1361, i64 %1358
  %1363 = load i32*, i32** %1362, align 8
  %1364 = getelementptr inbounds i32, i32* %1363, i64 %1359
  %1365 = load i32, i32* %1364, align 4
  %1366 = sext i32 %1365 to i64
  %1367 = add i64 %303, %1366
  %1368 = lshr i64 %1367, 18
  %1369 = and i64 %1367, 262143
  %1370 = load i32**, i32*** %309, align 8
  %1371 = getelementptr inbounds i32*, i32** %1370, i64 %1368
  %1372 = load i32*, i32** %1371, align 8
  %1373 = getelementptr inbounds i32, i32* %1372, i64 %1369
  %1374 = load i32, i32* %1373, align 4
  %1375 = sext i32 %1354 to i64
  %1376 = add i64 %301, %1375
  %1377 = lshr i64 %1376, 18
  %1378 = and i64 %1376, 262143
  %1379 = getelementptr inbounds i32*, i32** %1361, i64 %1377
  %1380 = load i32*, i32** %1379, align 8
  %1381 = getelementptr inbounds i32, i32* %1380, i64 %1378
  %1382 = load i32, i32* %1381, align 4
  %1383 = sext i32 %1382 to i64
  %1384 = add i64 %303, %1383
  %1385 = lshr i64 %1384, 18
  %1386 = and i64 %1384, 262143
  %1387 = getelementptr inbounds i32*, i32** %1370, i64 %1385
  %1388 = load i32*, i32** %1387, align 8
  %1389 = getelementptr inbounds i32, i32* %1388, i64 %1386
  %1390 = load i32, i32* %1389, align 4
  %1391 = icmp slt i32 %1374, %1390
  br i1 %1391, label %1392, label %1397

1392:                                             ; preds = %1353
  store i32 %1365, i32* %1381, align 4
  %1393 = load i32**, i32*** %1360, align 8
  %1394 = getelementptr inbounds i32*, i32** %1393, i64 %1358
  %1395 = load i32*, i32** %1394, align 8
  %1396 = getelementptr inbounds i32, i32* %1395, i64 %1359
  store i32 %1382, i32* %1396, align 4
  br label %1397

1397:                                             ; preds = %1392, %1353, %1349
  %1398 = phi i32 [ %1354, %1392 ], [ %1354, %1353 ], [ %1350, %1349 ]
  %1399 = icmp sgt i32 %1398, 1
  br i1 %1399, label %1400, label %1505

1400:                                             ; preds = %1397
  %1401 = lshr i32 %1398, 1
  %1402 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %300, i64 0, i32 0
  %1403 = zext i32 %1401 to i64
  br label %1404

1404:                                             ; preds = %1497, %1400
  %1405 = phi i64 [ %1403, %1400 ], [ %1406, %1497 ]
  %1406 = add nsw i64 %1405, -1
  %1407 = add i64 %1406, %301
  %1408 = lshr i64 %1407, 18
  %1409 = and i64 %1407, 262143
  %1410 = load i32**, i32*** %1402, align 8
  %1411 = getelementptr inbounds i32*, i32** %1410, i64 %1408
  %1412 = load i32*, i32** %1411, align 8
  %1413 = getelementptr inbounds i32, i32* %1412, i64 %1409
  %1414 = load i32, i32* %1413, align 4
  %1415 = sext i32 %1414 to i64
  %1416 = add i64 %303, %1415
  %1417 = lshr i64 %1416, 18
  %1418 = and i64 %1416, 262143
  %1419 = load i32**, i32*** %309, align 8
  %1420 = getelementptr inbounds i32*, i32** %1419, i64 %1417
  %1421 = load i32*, i32** %1420, align 8
  %1422 = getelementptr inbounds i32, i32* %1421, i64 %1418
  %1423 = load i32, i32* %1422, align 4
  %1424 = trunc i64 %1406 to i32
  %1425 = shl nsw i32 %1424, 1
  %1426 = or i32 %1425, 1
  %1427 = icmp slt i32 %1426, %1398
  br i1 %1427, label %1428, label %1497

1428:                                             ; preds = %1404, %1495
  %1429 = phi i32** [ %1496, %1495 ], [ %1419, %1404 ]
  %1430 = phi i32** [ %1494, %1495 ], [ %1410, %1404 ]
  %1431 = phi i32 [ %1492, %1495 ], [ %1426, %1404 ]
  %1432 = phi i32 [ %1467, %1495 ], [ %1424, %1404 ]
  %1433 = add nsw i32 %1431, 1
  %1434 = sext i32 %1431 to i64
  %1435 = add i64 %301, %1434
  %1436 = lshr i64 %1435, 18
  %1437 = and i64 %1435, 262143
  %1438 = getelementptr inbounds i32*, i32** %1430, i64 %1436
  %1439 = load i32*, i32** %1438, align 8
  %1440 = getelementptr inbounds i32, i32* %1439, i64 %1437
  %1441 = load i32, i32* %1440, align 4
  %1442 = sext i32 %1441 to i64
  %1443 = add i64 %303, %1442
  %1444 = lshr i64 %1443, 18
  %1445 = and i64 %1443, 262143
  %1446 = getelementptr inbounds i32*, i32** %1429, i64 %1444
  %1447 = load i32*, i32** %1446, align 8
  %1448 = getelementptr inbounds i32, i32* %1447, i64 %1445
  %1449 = load i32, i32* %1448, align 4
  %1450 = sext i32 %1433 to i64
  %1451 = add i64 %301, %1450
  %1452 = lshr i64 %1451, 18
  %1453 = and i64 %1451, 262143
  %1454 = getelementptr inbounds i32*, i32** %1430, i64 %1452
  %1455 = load i32*, i32** %1454, align 8
  %1456 = getelementptr inbounds i32, i32* %1455, i64 %1453
  %1457 = load i32, i32* %1456, align 4
  %1458 = sext i32 %1457 to i64
  %1459 = add i64 %303, %1458
  %1460 = lshr i64 %1459, 18
  %1461 = and i64 %1459, 262143
  %1462 = getelementptr inbounds i32*, i32** %1429, i64 %1460
  %1463 = load i32*, i32** %1462, align 8
  %1464 = getelementptr inbounds i32, i32* %1463, i64 %1461
  %1465 = load i32, i32* %1464, align 4
  %1466 = icmp slt i32 %1449, %1465
  %1467 = select i1 %1466, i32 %1433, i32 %1431
  %1468 = select i1 %1466, i32 %1465, i32 %1449
  %1469 = icmp sgt i32 %1468, %1423
  br i1 %1469, label %1475, label %1470

1470:                                             ; preds = %1428
  %1471 = sext i32 %1432 to i64
  %1472 = add i64 %301, %1471
  %1473 = lshr i64 %1472, 18
  %1474 = and i64 %1472, 262143
  br label %1497

1475:                                             ; preds = %1428
  %1476 = sext i32 %1467 to i64
  %1477 = add i64 %301, %1476
  %1478 = lshr i64 %1477, 18
  %1479 = and i64 %1477, 262143
  %1480 = getelementptr inbounds i32*, i32** %1430, i64 %1478
  %1481 = load i32*, i32** %1480, align 8
  %1482 = getelementptr inbounds i32, i32* %1481, i64 %1479
  %1483 = load i32, i32* %1482, align 4
  %1484 = sext i32 %1432 to i64
  %1485 = add i64 %301, %1484
  %1486 = lshr i64 %1485, 18
  %1487 = and i64 %1485, 262143
  %1488 = getelementptr inbounds i32*, i32** %1430, i64 %1486
  %1489 = load i32*, i32** %1488, align 8
  %1490 = getelementptr inbounds i32, i32* %1489, i64 %1487
  store i32 %1483, i32* %1490, align 4
  %1491 = shl nsw i32 %1467, 1
  %1492 = or i32 %1491, 1
  %1493 = icmp slt i32 %1492, %1398
  %1494 = load i32**, i32*** %1402, align 8
  br i1 %1493, label %1495, label %1497

1495:                                             ; preds = %1475
  %1496 = load i32**, i32*** %309, align 8
  br label %1428

1497:                                             ; preds = %1475, %1470, %1404
  %1498 = phi i64 [ %1409, %1404 ], [ %1474, %1470 ], [ %1479, %1475 ]
  %1499 = phi i64 [ %1408, %1404 ], [ %1473, %1470 ], [ %1478, %1475 ]
  %1500 = phi i32** [ %1410, %1404 ], [ %1430, %1470 ], [ %1494, %1475 ]
  %1501 = getelementptr inbounds i32*, i32** %1500, i64 %1499
  %1502 = load i32*, i32** %1501, align 8
  %1503 = getelementptr inbounds i32, i32* %1502, i64 %1498
  store i32 %1414, i32* %1503, align 4
  %1504 = icmp sgt i64 %1406, 0
  br i1 %1504, label %1404, label %1505

1505:                                             ; preds = %1497, %1397
  br i1 %1352, label %1506, label %1615

1506:                                             ; preds = %1505
  %1507 = lshr i64 %301, 18
  %1508 = and i64 %301, 262143
  %1509 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %300, i64 0, i32 0
  %1510 = load i32**, i32*** %1509, align 8
  %1511 = getelementptr inbounds i32*, i32** %1510, i64 %1507
  %1512 = load i32*, i32** %1511, align 8
  %1513 = getelementptr inbounds i32, i32* %1512, i64 %1508
  %1514 = load i32, i32* %1513, align 4
  %1515 = sext i32 %1398 to i64
  %1516 = add i64 %301, %1515
  %1517 = lshr i64 %1516, 18
  %1518 = and i64 %1516, 262143
  %1519 = getelementptr inbounds i32*, i32** %1510, i64 %1517
  %1520 = load i32*, i32** %1519, align 8
  %1521 = getelementptr inbounds i32, i32* %1520, i64 %1518
  %1522 = load i32, i32* %1521, align 4
  store i32 %1522, i32* %1513, align 4
  %1523 = load i32**, i32*** %1509, align 8
  %1524 = getelementptr inbounds i32*, i32** %1523, i64 %1517
  %1525 = load i32*, i32** %1524, align 8
  %1526 = getelementptr inbounds i32, i32* %1525, i64 %1518
  store i32 %1514, i32* %1526, align 4
  %1527 = load i32**, i32*** %1509, align 8
  %1528 = getelementptr inbounds i32*, i32** %1527, i64 %1507
  %1529 = load i32*, i32** %1528, align 8
  %1530 = getelementptr inbounds i32, i32* %1529, i64 %1508
  %1531 = load i32, i32* %1530, align 4
  %1532 = sext i32 %1531 to i64
  %1533 = add i64 %303, %1532
  %1534 = lshr i64 %1533, 18
  %1535 = and i64 %1533, 262143
  %1536 = load i32**, i32*** %309, align 8
  %1537 = getelementptr inbounds i32*, i32** %1536, i64 %1534
  %1538 = load i32*, i32** %1537, align 8
  %1539 = getelementptr inbounds i32, i32* %1538, i64 %1535
  %1540 = load i32, i32* %1539, align 4
  br i1 %1399, label %1541, label %1608

1541:                                             ; preds = %1506, %1606
  %1542 = phi i32** [ %1607, %1606 ], [ %1536, %1506 ]
  %1543 = phi i32** [ %1605, %1606 ], [ %1527, %1506 ]
  %1544 = phi i32 [ %1603, %1606 ], [ 1, %1506 ]
  %1545 = phi i64 [ %1588, %1606 ], [ 0, %1506 ]
  %1546 = add nsw i32 %1544, 1
  %1547 = sext i32 %1544 to i64
  %1548 = add i64 %301, %1547
  %1549 = lshr i64 %1548, 18
  %1550 = and i64 %1548, 262143
  %1551 = getelementptr inbounds i32*, i32** %1543, i64 %1549
  %1552 = load i32*, i32** %1551, align 8
  %1553 = getelementptr inbounds i32, i32* %1552, i64 %1550
  %1554 = load i32, i32* %1553, align 4
  %1555 = sext i32 %1554 to i64
  %1556 = add i64 %303, %1555
  %1557 = lshr i64 %1556, 18
  %1558 = and i64 %1556, 262143
  %1559 = getelementptr inbounds i32*, i32** %1542, i64 %1557
  %1560 = load i32*, i32** %1559, align 8
  %1561 = getelementptr inbounds i32, i32* %1560, i64 %1558
  %1562 = load i32, i32* %1561, align 4
  %1563 = sext i32 %1546 to i64
  %1564 = add i64 %301, %1563
  %1565 = lshr i64 %1564, 18
  %1566 = and i64 %1564, 262143
  %1567 = getelementptr inbounds i32*, i32** %1543, i64 %1565
  %1568 = load i32*, i32** %1567, align 8
  %1569 = getelementptr inbounds i32, i32* %1568, i64 %1566
  %1570 = load i32, i32* %1569, align 4
  %1571 = sext i32 %1570 to i64
  %1572 = add i64 %303, %1571
  %1573 = lshr i64 %1572, 18
  %1574 = and i64 %1572, 262143
  %1575 = getelementptr inbounds i32*, i32** %1542, i64 %1573
  %1576 = load i32*, i32** %1575, align 8
  %1577 = getelementptr inbounds i32, i32* %1576, i64 %1574
  %1578 = load i32, i32* %1577, align 4
  %1579 = icmp slt i32 %1562, %1578
  %1580 = select i1 %1579, i32 %1546, i32 %1544
  %1581 = select i1 %1579, i32 %1578, i32 %1562
  %1582 = icmp sgt i32 %1581, %1540
  br i1 %1582, label %1587, label %1583

1583:                                             ; preds = %1541
  %1584 = add i64 %1545, %301
  %1585 = lshr i64 %1584, 18
  %1586 = and i64 %1584, 262143
  br label %1608

1587:                                             ; preds = %1541
  %1588 = sext i32 %1580 to i64
  %1589 = add i64 %301, %1588
  %1590 = lshr i64 %1589, 18
  %1591 = and i64 %1589, 262143
  %1592 = getelementptr inbounds i32*, i32** %1543, i64 %1590
  %1593 = load i32*, i32** %1592, align 8
  %1594 = getelementptr inbounds i32, i32* %1593, i64 %1591
  %1595 = load i32, i32* %1594, align 4
  %1596 = add i64 %1545, %301
  %1597 = lshr i64 %1596, 18
  %1598 = and i64 %1596, 262143
  %1599 = getelementptr inbounds i32*, i32** %1543, i64 %1597
  %1600 = load i32*, i32** %1599, align 8
  %1601 = getelementptr inbounds i32, i32* %1600, i64 %1598
  store i32 %1595, i32* %1601, align 4
  %1602 = shl nsw i32 %1580, 1
  %1603 = or i32 %1602, 1
  %1604 = icmp slt i32 %1603, %1398
  %1605 = load i32**, i32*** %1509, align 8
  br i1 %1604, label %1606, label %1608

1606:                                             ; preds = %1587
  %1607 = load i32**, i32*** %309, align 8
  br label %1541

1608:                                             ; preds = %1587, %1583, %1506
  %1609 = phi i64 [ %1508, %1506 ], [ %1586, %1583 ], [ %1591, %1587 ]
  %1610 = phi i64 [ %1507, %1506 ], [ %1585, %1583 ], [ %1590, %1587 ]
  %1611 = phi i32** [ %1527, %1506 ], [ %1543, %1583 ], [ %1605, %1587 ]
  %1612 = getelementptr inbounds i32*, i32** %1611, i64 %1610
  %1613 = load i32*, i32** %1612, align 8
  %1614 = getelementptr inbounds i32, i32* %1613, i64 %1609
  store i32 %1531, i32* %1614, align 4
  br label %1615

1615:                                             ; preds = %1608, %1505
  %1616 = add i32 %1398, -1
  %1617 = icmp sgt i32 %1616, 0
  br i1 %1617, label %1618, label %1735

1618:                                             ; preds = %1615
  %1619 = lshr i64 %301, 18
  %1620 = and i64 %301, 262143
  %1621 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %300, i64 0, i32 0
  %1622 = sext i32 %1616 to i64
  br label %1623

1623:                                             ; preds = %1722, %1618
  %1624 = phi i64 [ %1622, %1618 ], [ %1733, %1722 ]
  %1625 = load i32**, i32*** %1621, align 8
  %1626 = getelementptr inbounds i32*, i32** %1625, i64 %1619
  %1627 = load i32*, i32** %1626, align 8
  %1628 = getelementptr inbounds i32, i32* %1627, i64 %1620
  %1629 = load i32, i32* %1628, align 4
  %1630 = add i64 %1624, %301
  %1631 = lshr i64 %1630, 18
  %1632 = and i64 %1630, 262143
  %1633 = getelementptr inbounds i32*, i32** %1625, i64 %1631
  %1634 = load i32*, i32** %1633, align 8
  %1635 = getelementptr inbounds i32, i32* %1634, i64 %1632
  %1636 = load i32, i32* %1635, align 4
  store i32 %1636, i32* %1628, align 4
  %1637 = load i32**, i32*** %1621, align 8
  %1638 = getelementptr inbounds i32*, i32** %1637, i64 %1619
  %1639 = load i32*, i32** %1638, align 8
  %1640 = getelementptr inbounds i32, i32* %1639, i64 %1620
  %1641 = load i32, i32* %1640, align 4
  %1642 = sext i32 %1641 to i64
  %1643 = add i64 %303, %1642
  %1644 = lshr i64 %1643, 18
  %1645 = and i64 %1643, 262143
  %1646 = load i32**, i32*** %309, align 8
  %1647 = getelementptr inbounds i32*, i32** %1646, i64 %1644
  %1648 = load i32*, i32** %1647, align 8
  %1649 = getelementptr inbounds i32, i32* %1648, i64 %1645
  %1650 = load i32, i32* %1649, align 4
  %1651 = icmp eq i64 %1624, 1
  br i1 %1651, label %1722, label %1652

1652:                                             ; preds = %1623, %1720
  %1653 = phi i32** [ %1721, %1720 ], [ %1646, %1623 ]
  %1654 = phi i32** [ %1719, %1720 ], [ %1637, %1623 ]
  %1655 = phi i32 [ %1716, %1720 ], [ 1, %1623 ]
  %1656 = phi i32 [ %1691, %1720 ], [ 0, %1623 ]
  %1657 = add nsw i32 %1655, 1
  %1658 = sext i32 %1655 to i64
  %1659 = add i64 %301, %1658
  %1660 = lshr i64 %1659, 18
  %1661 = and i64 %1659, 262143
  %1662 = getelementptr inbounds i32*, i32** %1654, i64 %1660
  %1663 = load i32*, i32** %1662, align 8
  %1664 = getelementptr inbounds i32, i32* %1663, i64 %1661
  %1665 = load i32, i32* %1664, align 4
  %1666 = sext i32 %1665 to i64
  %1667 = add i64 %303, %1666
  %1668 = lshr i64 %1667, 18
  %1669 = and i64 %1667, 262143
  %1670 = getelementptr inbounds i32*, i32** %1653, i64 %1668
  %1671 = load i32*, i32** %1670, align 8
  %1672 = getelementptr inbounds i32, i32* %1671, i64 %1669
  %1673 = load i32, i32* %1672, align 4
  %1674 = sext i32 %1657 to i64
  %1675 = add i64 %301, %1674
  %1676 = lshr i64 %1675, 18
  %1677 = and i64 %1675, 262143
  %1678 = getelementptr inbounds i32*, i32** %1654, i64 %1676
  %1679 = load i32*, i32** %1678, align 8
  %1680 = getelementptr inbounds i32, i32* %1679, i64 %1677
  %1681 = load i32, i32* %1680, align 4
  %1682 = sext i32 %1681 to i64
  %1683 = add i64 %303, %1682
  %1684 = lshr i64 %1683, 18
  %1685 = and i64 %1683, 262143
  %1686 = getelementptr inbounds i32*, i32** %1653, i64 %1684
  %1687 = load i32*, i32** %1686, align 8
  %1688 = getelementptr inbounds i32, i32* %1687, i64 %1685
  %1689 = load i32, i32* %1688, align 4
  %1690 = icmp slt i32 %1673, %1689
  %1691 = select i1 %1690, i32 %1657, i32 %1655
  %1692 = select i1 %1690, i32 %1689, i32 %1673
  %1693 = icmp sgt i32 %1692, %1650
  br i1 %1693, label %1699, label %1694

1694:                                             ; preds = %1652
  %1695 = sext i32 %1656 to i64
  %1696 = add i64 %301, %1695
  %1697 = lshr i64 %1696, 18
  %1698 = and i64 %1696, 262143
  br label %1722

1699:                                             ; preds = %1652
  %1700 = sext i32 %1691 to i64
  %1701 = add i64 %301, %1700
  %1702 = lshr i64 %1701, 18
  %1703 = and i64 %1701, 262143
  %1704 = getelementptr inbounds i32*, i32** %1654, i64 %1702
  %1705 = load i32*, i32** %1704, align 8
  %1706 = getelementptr inbounds i32, i32* %1705, i64 %1703
  %1707 = load i32, i32* %1706, align 4
  %1708 = sext i32 %1656 to i64
  %1709 = add i64 %301, %1708
  %1710 = lshr i64 %1709, 18
  %1711 = and i64 %1709, 262143
  %1712 = getelementptr inbounds i32*, i32** %1654, i64 %1710
  %1713 = load i32*, i32** %1712, align 8
  %1714 = getelementptr inbounds i32, i32* %1713, i64 %1711
  store i32 %1707, i32* %1714, align 4
  %1715 = shl nsw i32 %1691, 1
  %1716 = or i32 %1715, 1
  %1717 = sext i32 %1716 to i64
  %1718 = icmp sgt i64 %1624, %1717
  %1719 = load i32**, i32*** %1621, align 8
  br i1 %1718, label %1720, label %1722

1720:                                             ; preds = %1699
  %1721 = load i32**, i32*** %309, align 8
  br label %1652

1722:                                             ; preds = %1699, %1694, %1623
  %1723 = phi i64 [ %1620, %1623 ], [ %1698, %1694 ], [ %1703, %1699 ]
  %1724 = phi i64 [ %1619, %1623 ], [ %1697, %1694 ], [ %1702, %1699 ]
  %1725 = phi i32** [ %1637, %1623 ], [ %1654, %1694 ], [ %1719, %1699 ]
  %1726 = getelementptr inbounds i32*, i32** %1725, i64 %1724
  %1727 = load i32*, i32** %1726, align 8
  %1728 = getelementptr inbounds i32, i32* %1727, i64 %1723
  store i32 %1641, i32* %1728, align 4
  %1729 = load i32**, i32*** %1621, align 8
  %1730 = getelementptr inbounds i32*, i32** %1729, i64 %1631
  %1731 = load i32*, i32** %1730, align 8
  %1732 = getelementptr inbounds i32, i32* %1731, i64 %1632
  store i32 %1629, i32* %1732, align 4
  %1733 = add nsw i64 %1624, -1
  %1734 = icmp sgt i64 %1733, 0
  br i1 %1734, label %1623, label %1735

1735:                                             ; preds = %1722, %1615
  %1736 = load i64, i64* %203, align 8
  %1737 = load i64, i64* %67, align 8
  %1738 = add i64 %1737, -1
  store i64 %1736, i64* %204, align 8
  store i64 %1738, i64* %199, align 8
  %1739 = icmp ult i64 %301, %1738
  br i1 %1739, label %1740, label %976

1740:                                             ; preds = %1735
  %1741 = inttoptr i64 %1736 to %"class.courgette::PagedArray"*
  br label %1742

1742:                                             ; preds = %1814, %1740
  %1743 = phi i64 [ %1811, %1814 ], [ %301, %1740 ]
  %1744 = phi %"class.courgette::PagedArray"* [ %1815, %1814 ], [ %1741, %1740 ]
  %1745 = phi i64 [ %1812, %1814 ], [ %1738, %1740 ]
  %1746 = lshr i64 %1745, 18
  %1747 = and i64 %1745, 262143
  %1748 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1744, i64 0, i32 0
  %1749 = load i32**, i32*** %1748, align 8
  %1750 = getelementptr inbounds i32*, i32** %1749, i64 %1746
  %1751 = load i32*, i32** %1750, align 8
  %1752 = getelementptr inbounds i32, i32* %1751, i64 %1747
  %1753 = load i32, i32* %1752, align 4
  %1754 = sext i32 %1753 to i64
  %1755 = add i64 %303, %1754
  %1756 = lshr i64 %1755, 18
  %1757 = and i64 %1755, 262143
  %1758 = load i32**, i32*** %309, align 8
  %1759 = getelementptr inbounds i32*, i32** %1758, i64 %1756
  %1760 = load i32*, i32** %1759, align 8
  %1761 = getelementptr inbounds i32, i32* %1760, i64 %1757
  %1762 = load i32, i32* %1761, align 4
  store %"class.courgette::PagedArray"* %1744, %"class.courgette::PagedArray"** %201, align 8
  %1763 = add i64 %1745, -1
  store i64 %1763, i64* %202, align 8
  %1764 = icmp ugt i64 %1743, %1763
  br i1 %1764, label %1810, label %1765

1765:                                             ; preds = %1742
  %1766 = lshr i64 %1763, 18
  %1767 = and i64 %1763, 262143
  %1768 = load i32**, i32*** %1748, align 8
  %1769 = getelementptr inbounds i32*, i32** %1768, i64 %1766
  %1770 = load i32*, i32** %1769, align 8
  %1771 = getelementptr inbounds i32, i32* %1770, i64 %1767
  %1772 = load i32, i32* %1771, align 4
  %1773 = sext i32 %1772 to i64
  %1774 = add i64 %303, %1773
  %1775 = lshr i64 %1774, 18
  %1776 = and i64 %1774, 262143
  %1777 = load i32**, i32*** %309, align 8
  %1778 = getelementptr inbounds i32*, i32** %1777, i64 %1775
  %1779 = load i32*, i32** %1778, align 8
  %1780 = getelementptr inbounds i32, i32* %1779, i64 %1776
  %1781 = load i32, i32* %1780, align 4
  %1782 = icmp eq i32 %1781, %1762
  br i1 %1782, label %1783, label %1810

1783:                                             ; preds = %1765, %1790
  %1784 = phi i32 [ %1799, %1790 ], [ %1772, %1765 ]
  %1785 = phi i32* [ %1798, %1790 ], [ %1771, %1765 ]
  %1786 = xor i32 %1784, -1
  store i32 %1786, i32* %1785, align 4
  %1787 = load i64, i64* %202, align 8
  %1788 = add i64 %1787, -1
  store i64 %1788, i64* %202, align 8
  %1789 = icmp ugt i64 %301, %1788
  br i1 %1789, label %1810, label %1790

1790:                                             ; preds = %1783
  %1791 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %201, align 8
  %1792 = lshr i64 %1788, 18
  %1793 = and i64 %1788, 262143
  %1794 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1791, i64 0, i32 0
  %1795 = load i32**, i32*** %1794, align 8
  %1796 = getelementptr inbounds i32*, i32** %1795, i64 %1792
  %1797 = load i32*, i32** %1796, align 8
  %1798 = getelementptr inbounds i32, i32* %1797, i64 %1793
  %1799 = load i32, i32* %1798, align 4
  %1800 = sext i32 %1799 to i64
  %1801 = add i64 %303, %1800
  %1802 = lshr i64 %1801, 18
  %1803 = and i64 %1801, 262143
  %1804 = load i32**, i32*** %309, align 8
  %1805 = getelementptr inbounds i32*, i32** %1804, i64 %1802
  %1806 = load i32*, i32** %1805, align 8
  %1807 = getelementptr inbounds i32, i32* %1806, i64 %1803
  %1808 = load i32, i32* %1807, align 4
  %1809 = icmp eq i32 %1808, %1762
  br i1 %1809, label %1783, label %1810

1810:                                             ; preds = %1790, %1783, %1765, %1742
  %1811 = phi i64 [ %1743, %1742 ], [ %1743, %1765 ], [ %301, %1783 ], [ %301, %1790 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %197, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %1812 = load i64, i64* %199, align 8
  %1813 = icmp ult i64 %1811, %1812
  br i1 %1813, label %1814, label %976

1814:                                             ; preds = %1810
  %1815 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  br label %1742

1816:                                             ; preds = %1347
  %1817 = add nsw i32 %306, -1
  %1818 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %66, align 8
  %1819 = trunc i64 %311 to i32
  %1820 = sdiv i32 %1819, 2
  %1821 = sext i32 %1820 to i64
  %1822 = add i64 %301, %1821
  %1823 = icmp slt i32 %1819, 513
  br i1 %1823, label %1824, label %2112

1824:                                             ; preds = %1816
  %1825 = icmp slt i32 %1819, 33
  br i1 %1825, label %1826, label %1911

1826:                                             ; preds = %1824
  %1827 = add i64 %310, -1
  %1828 = lshr i64 %301, 18
  %1829 = and i64 %301, 262143
  %1830 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %300, i64 0, i32 0
  %1831 = load i32**, i32*** %1830, align 8
  %1832 = getelementptr inbounds i32*, i32** %1831, i64 %1828
  %1833 = load i32*, i32** %1832, align 8
  %1834 = getelementptr inbounds i32, i32* %1833, i64 %1829
  %1835 = load i32, i32* %1834, align 4
  %1836 = sext i32 %1835 to i64
  %1837 = add i64 %303, %1836
  %1838 = lshr i64 %1837, 18
  %1839 = and i64 %1837, 262143
  %1840 = load i32**, i32*** %309, align 8
  %1841 = getelementptr inbounds i32*, i32** %1840, i64 %1838
  %1842 = load i32*, i32** %1841, align 8
  %1843 = getelementptr inbounds i32, i32* %1842, i64 %1839
  %1844 = load i32, i32* %1843, align 4
  %1845 = lshr i64 %1822, 18
  %1846 = and i64 %1822, 262143
  %1847 = getelementptr inbounds i32*, i32** %1831, i64 %1845
  %1848 = load i32*, i32** %1847, align 8
  %1849 = getelementptr inbounds i32, i32* %1848, i64 %1846
  %1850 = load i32, i32* %1849, align 4
  %1851 = sext i32 %1850 to i64
  %1852 = add i64 %303, %1851
  %1853 = lshr i64 %1852, 18
  %1854 = and i64 %1852, 262143
  %1855 = getelementptr inbounds i32*, i32** %1840, i64 %1853
  %1856 = load i32*, i32** %1855, align 8
  %1857 = getelementptr inbounds i32, i32* %1856, i64 %1854
  %1858 = load i32, i32* %1857, align 4
  %1859 = icmp sgt i32 %1844, %1858
  %1860 = select i1 %1859, i64 %1822, i64 %301
  %1861 = select i1 %1859, i64 %301, i64 %1822
  %1862 = lshr i64 %1861, 18
  %1863 = and i64 %1861, 262143
  %1864 = getelementptr inbounds i32*, i32** %1831, i64 %1862
  %1865 = load i32*, i32** %1864, align 8
  %1866 = getelementptr inbounds i32, i32* %1865, i64 %1863
  %1867 = load i32, i32* %1866, align 4
  %1868 = sext i32 %1867 to i64
  %1869 = add i64 %303, %1868
  %1870 = lshr i64 %1869, 18
  %1871 = and i64 %1869, 262143
  %1872 = getelementptr inbounds i32*, i32** %1840, i64 %1870
  %1873 = load i32*, i32** %1872, align 8
  %1874 = getelementptr inbounds i32, i32* %1873, i64 %1871
  %1875 = load i32, i32* %1874, align 4
  %1876 = lshr i64 %1827, 18
  %1877 = and i64 %1827, 262143
  %1878 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1818, i64 0, i32 0
  %1879 = load i32**, i32*** %1878, align 8
  %1880 = getelementptr inbounds i32*, i32** %1879, i64 %1876
  %1881 = load i32*, i32** %1880, align 8
  %1882 = getelementptr inbounds i32, i32* %1881, i64 %1877
  %1883 = load i32, i32* %1882, align 4
  %1884 = sext i32 %1883 to i64
  %1885 = add i64 %303, %1884
  %1886 = lshr i64 %1885, 18
  %1887 = and i64 %1885, 262143
  %1888 = getelementptr inbounds i32*, i32** %1840, i64 %1886
  %1889 = load i32*, i32** %1888, align 8
  %1890 = getelementptr inbounds i32, i32* %1889, i64 %1887
  %1891 = load i32, i32* %1890, align 4
  %1892 = icmp sgt i32 %1875, %1891
  br i1 %1892, label %1893, label %2445

1893:                                             ; preds = %1826
  %1894 = lshr i64 %1860, 18
  %1895 = and i64 %1860, 262143
  %1896 = getelementptr inbounds i32*, i32** %1831, i64 %1894
  %1897 = load i32*, i32** %1896, align 8
  %1898 = getelementptr inbounds i32, i32* %1897, i64 %1895
  %1899 = load i32, i32* %1898, align 4
  %1900 = sext i32 %1899 to i64
  %1901 = add i64 %303, %1900
  %1902 = lshr i64 %1901, 18
  %1903 = and i64 %1901, 262143
  %1904 = getelementptr inbounds i32*, i32** %1840, i64 %1902
  %1905 = load i32*, i32** %1904, align 8
  %1906 = getelementptr inbounds i32, i32* %1905, i64 %1903
  %1907 = load i32, i32* %1906, align 4
  %1908 = icmp sgt i32 %1907, %1891
  %1909 = select i1 %1908, i64 %1860, i64 %1827
  %1910 = select i1 %1908, %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"* %1818
  br label %2445

1911:                                             ; preds = %1824
  %1912 = lshr i64 %311, 2
  %1913 = and i64 %1912, 1073741823
  %1914 = add i64 %1913, %301
  %1915 = add i64 %310, -1
  %1916 = sub i64 %1915, %1913
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %205) #3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %206) #3
  %1917 = ptrtoint %"class.courgette::PagedArray"* %1818 to i64
  store %"class.courgette::PagedArray"* %1818, %"class.courgette::PagedArray"** %207, align 8
  store i64 %1916, i64* %208, align 8
  store %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"** %209, align 8
  store i64 %1822, i64* %210, align 8
  %1918 = lshr i64 %1914, 18
  %1919 = and i64 %1914, 262143
  %1920 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %300, i64 0, i32 0
  %1921 = load i32**, i32*** %1920, align 8
  %1922 = getelementptr inbounds i32*, i32** %1921, i64 %1918
  %1923 = load i32*, i32** %1922, align 8
  %1924 = getelementptr inbounds i32, i32* %1923, i64 %1919
  %1925 = load i32, i32* %1924, align 4
  %1926 = sext i32 %1925 to i64
  %1927 = add i64 %303, %1926
  %1928 = lshr i64 %1927, 18
  %1929 = and i64 %1927, 262143
  %1930 = load i32**, i32*** %309, align 8
  %1931 = getelementptr inbounds i32*, i32** %1930, i64 %1928
  %1932 = load i32*, i32** %1931, align 8
  %1933 = getelementptr inbounds i32, i32* %1932, i64 %1929
  %1934 = load i32, i32* %1933, align 4
  %1935 = lshr i64 %1822, 18
  %1936 = and i64 %1822, 262143
  %1937 = getelementptr inbounds i32*, i32** %1921, i64 %1935
  %1938 = load i32*, i32** %1937, align 8
  %1939 = getelementptr inbounds i32, i32* %1938, i64 %1936
  %1940 = load i32, i32* %1939, align 4
  %1941 = sext i32 %1940 to i64
  %1942 = add i64 %303, %1941
  %1943 = lshr i64 %1942, 18
  %1944 = and i64 %1942, 262143
  %1945 = getelementptr inbounds i32*, i32** %1930, i64 %1943
  %1946 = load i32*, i32** %1945, align 8
  %1947 = getelementptr inbounds i32, i32* %1946, i64 %1944
  %1948 = load i32, i32* %1947, align 4
  %1949 = icmp sgt i32 %1934, %1948
  br i1 %1949, label %1950, label %1951

1950:                                             ; preds = %1911
  store %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"** %209, align 8
  store i64 %1914, i64* %210, align 8
  br label %1951

1951:                                             ; preds = %1950, %1911
  %1952 = phi i64 [ %1914, %1950 ], [ %1822, %1911 ]
  %1953 = phi i64 [ %1822, %1950 ], [ %1914, %1911 ]
  %1954 = ptrtoint %"class.courgette::PagedArray"* %300 to i64
  %1955 = lshr i64 %1916, 18
  %1956 = and i64 %1916, 262143
  %1957 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1818, i64 0, i32 0
  %1958 = load i32**, i32*** %1957, align 8
  %1959 = getelementptr inbounds i32*, i32** %1958, i64 %1955
  %1960 = load i32*, i32** %1959, align 8
  %1961 = getelementptr inbounds i32, i32* %1960, i64 %1956
  %1962 = load i32, i32* %1961, align 4
  %1963 = sext i32 %1962 to i64
  %1964 = add i64 %303, %1963
  %1965 = lshr i64 %1964, 18
  %1966 = and i64 %1964, 262143
  %1967 = getelementptr inbounds i32*, i32** %1930, i64 %1965
  %1968 = load i32*, i32** %1967, align 8
  %1969 = getelementptr inbounds i32, i32* %1968, i64 %1966
  %1970 = load i32, i32* %1969, align 4
  %1971 = lshr i64 %1915, 18
  %1972 = and i64 %1915, 262143
  %1973 = getelementptr inbounds i32*, i32** %1958, i64 %1971
  %1974 = load i32*, i32** %1973, align 8
  %1975 = getelementptr inbounds i32, i32* %1974, i64 %1972
  %1976 = load i32, i32* %1975, align 4
  %1977 = sext i32 %1976 to i64
  %1978 = add i64 %303, %1977
  %1979 = lshr i64 %1978, 18
  %1980 = and i64 %1978, 262143
  %1981 = getelementptr inbounds i32*, i32** %1930, i64 %1979
  %1982 = load i32*, i32** %1981, align 8
  %1983 = getelementptr inbounds i32, i32* %1982, i64 %1980
  %1984 = load i32, i32* %1983, align 4
  %1985 = icmp sgt i32 %1970, %1984
  br i1 %1985, label %1986, label %1987

1986:                                             ; preds = %1951
  store i64 %1917, i64* %211, align 8
  store i64 %1915, i64* %208, align 8
  br label %1987

1987:                                             ; preds = %1986, %1951
  %1988 = phi i32 [ %1984, %1986 ], [ %1970, %1951 ]
  %1989 = phi i64 [ %1916, %1986 ], [ %1915, %1951 ]
  %1990 = phi i64 [ %1915, %1986 ], [ %1916, %1951 ]
  %1991 = lshr i64 %1953, 18
  %1992 = and i64 %1953, 262143
  %1993 = getelementptr inbounds i32*, i32** %1921, i64 %1991
  %1994 = load i32*, i32** %1993, align 8
  %1995 = getelementptr inbounds i32, i32* %1994, i64 %1992
  %1996 = load i32, i32* %1995, align 4
  %1997 = sext i32 %1996 to i64
  %1998 = add i64 %303, %1997
  %1999 = lshr i64 %1998, 18
  %2000 = and i64 %1998, 262143
  %2001 = getelementptr inbounds i32*, i32** %1930, i64 %1999
  %2002 = load i32*, i32** %2001, align 8
  %2003 = getelementptr inbounds i32, i32* %2002, i64 %2000
  %2004 = load i32, i32* %2003, align 4
  %2005 = icmp sgt i32 %2004, %1988
  br i1 %2005, label %2006, label %2007

2006:                                             ; preds = %1987
  store %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"** %207, align 8
  store i64 %1953, i64* %208, align 8
  store i64 %1917, i64* %212, align 8
  store i64 %1989, i64* %210, align 8
  br label %2007

2007:                                             ; preds = %2006, %1987
  %2008 = phi i32** [ %1958, %2006 ], [ %1921, %1987 ]
  %2009 = phi i64 [ %1954, %2006 ], [ %1917, %1987 ]
  %2010 = phi i64 [ %1952, %2006 ], [ %1989, %1987 ]
  %2011 = phi i64 [ %1953, %2006 ], [ %1990, %1987 ]
  %2012 = phi %"class.courgette::PagedArray"* [ %300, %2006 ], [ %1818, %1987 ]
  %2013 = phi i64 [ %1989, %2006 ], [ %1952, %1987 ]
  %2014 = phi %"class.courgette::PagedArray"* [ %1818, %2006 ], [ %300, %1987 ]
  %2015 = lshr i64 %301, 18
  %2016 = and i64 %301, 262143
  %2017 = getelementptr inbounds i32*, i32** %1921, i64 %2015
  %2018 = load i32*, i32** %2017, align 8
  %2019 = getelementptr inbounds i32, i32* %2018, i64 %2016
  %2020 = load i32, i32* %2019, align 4
  %2021 = sext i32 %2020 to i64
  %2022 = add i64 %303, %2021
  %2023 = lshr i64 %2022, 18
  %2024 = and i64 %2022, 262143
  %2025 = getelementptr inbounds i32*, i32** %1930, i64 %2023
  %2026 = load i32*, i32** %2025, align 8
  %2027 = getelementptr inbounds i32, i32* %2026, i64 %2024
  %2028 = load i32, i32* %2027, align 4
  %2029 = lshr i64 %2013, 18
  %2030 = and i64 %2013, 262143
  %2031 = getelementptr inbounds i32*, i32** %2008, i64 %2029
  %2032 = load i32*, i32** %2031, align 8
  %2033 = getelementptr inbounds i32, i32* %2032, i64 %2030
  %2034 = load i32, i32* %2033, align 4
  %2035 = sext i32 %2034 to i64
  %2036 = add i64 %303, %2035
  %2037 = lshr i64 %2036, 18
  %2038 = and i64 %2036, 262143
  %2039 = getelementptr inbounds i32*, i32** %1930, i64 %2037
  %2040 = load i32*, i32** %2039, align 8
  %2041 = getelementptr inbounds i32, i32* %2040, i64 %2038
  %2042 = load i32, i32* %2041, align 4
  %2043 = icmp sgt i32 %2028, %2042
  br i1 %2043, label %2044, label %2045

2044:                                             ; preds = %2007
  store %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"** %209, align 8
  store i64 %301, i64* %210, align 8
  br label %2045

2045:                                             ; preds = %2044, %2007
  %2046 = phi i32 [ %2042, %2044 ], [ %2028, %2007 ]
  %2047 = phi %"class.courgette::PagedArray"* [ %300, %2044 ], [ %2014, %2007 ]
  %2048 = phi i64 [ %301, %2044 ], [ %2013, %2007 ]
  %2049 = phi i64 [ %2030, %2044 ], [ %2016, %2007 ]
  %2050 = phi i64 [ %2029, %2044 ], [ %2015, %2007 ]
  %2051 = phi i64 [ %2013, %2044 ], [ %301, %2007 ]
  %2052 = phi %"class.courgette::PagedArray"* [ %2014, %2044 ], [ %300, %2007 ]
  %2053 = lshr i64 %2011, 18
  %2054 = and i64 %2011, 262143
  %2055 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %2012, i64 0, i32 0
  %2056 = load i32**, i32*** %2055, align 8
  %2057 = getelementptr inbounds i32*, i32** %2056, i64 %2053
  %2058 = load i32*, i32** %2057, align 8
  %2059 = getelementptr inbounds i32, i32* %2058, i64 %2054
  %2060 = load i32, i32* %2059, align 4
  %2061 = sext i32 %2060 to i64
  %2062 = add i64 %303, %2061
  %2063 = lshr i64 %2062, 18
  %2064 = and i64 %2062, 262143
  %2065 = getelementptr inbounds i32*, i32** %1930, i64 %2063
  %2066 = load i32*, i32** %2065, align 8
  %2067 = getelementptr inbounds i32, i32* %2066, i64 %2064
  %2068 = load i32, i32* %2067, align 4
  %2069 = icmp sgt i32 %2046, %2068
  br i1 %2069, label %2070, label %2086

2070:                                             ; preds = %2045
  %2071 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %2052, i64 0, i32 0
  store %"class.courgette::PagedArray"* %2052, %"class.courgette::PagedArray"** %207, align 8
  store i64 %2051, i64* %208, align 8
  store i64 %2009, i64* %212, align 8
  store i64 %2010, i64* %210, align 8
  %2072 = inttoptr i64 %2009 to %"class.courgette::PagedArray"*
  %2073 = load i32**, i32*** %2071, align 8
  %2074 = getelementptr inbounds i32*, i32** %2073, i64 %2050
  %2075 = load i32*, i32** %2074, align 8
  %2076 = getelementptr inbounds i32, i32* %2075, i64 %2049
  %2077 = load i32, i32* %2076, align 4
  %2078 = sext i32 %2077 to i64
  %2079 = add i64 %303, %2078
  %2080 = lshr i64 %2079, 18
  %2081 = and i64 %2079, 262143
  %2082 = getelementptr inbounds i32*, i32** %1930, i64 %2080
  %2083 = load i32*, i32** %2082, align 8
  %2084 = getelementptr inbounds i32, i32* %2083, i64 %2081
  %2085 = load i32, i32* %2084, align 4
  br label %2086

2086:                                             ; preds = %2070, %2045
  %2087 = phi i32 [ %2085, %2070 ], [ %2068, %2045 ]
  %2088 = phi i64 [ %2010, %2070 ], [ %2048, %2045 ]
  %2089 = phi %"class.courgette::PagedArray"* [ %2072, %2070 ], [ %2047, %2045 ]
  %2090 = lshr i64 %2088, 18
  %2091 = and i64 %2088, 262143
  %2092 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %2089, i64 0, i32 0
  %2093 = load i32**, i32*** %2092, align 8
  %2094 = getelementptr inbounds i32*, i32** %2093, i64 %2090
  %2095 = load i32*, i32** %2094, align 8
  %2096 = getelementptr inbounds i32, i32* %2095, i64 %2091
  %2097 = load i32, i32* %2096, align 4
  %2098 = sext i32 %2097 to i64
  %2099 = add i64 %303, %2098
  %2100 = lshr i64 %2099, 18
  %2101 = and i64 %2099, 262143
  %2102 = getelementptr inbounds i32*, i32** %1930, i64 %2100
  %2103 = load i32*, i32** %2102, align 8
  %2104 = getelementptr inbounds i32, i32* %2103, i64 %2101
  %2105 = load i32, i32* %2104, align 4
  %2106 = icmp sgt i32 %2105, %2087
  %2107 = select i1 %2106, %"class.courgette::PagedArray_iterator"* %7, %"class.courgette::PagedArray_iterator"* %8
  %2108 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %2107, i64 0, i32 0
  %2109 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %2107, i64 0, i32 1
  %2110 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %2108, align 8
  %2111 = load i64, i64* %2109, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %205) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #3
  br label %2445

2112:                                             ; preds = %1816
  %2113 = lshr i32 %1819, 3
  %2114 = zext i32 %2113 to i64
  %2115 = add i64 %301, %2114
  %2116 = shl nuw nsw i32 %2113, 1
  %2117 = zext i32 %2116 to i64
  %2118 = add i64 %301, %2117
  %2119 = lshr i64 %301, 18
  %2120 = and i64 %301, 262143
  %2121 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %300, i64 0, i32 0
  %2122 = load i32**, i32*** %2121, align 8
  %2123 = getelementptr inbounds i32*, i32** %2122, i64 %2119
  %2124 = load i32*, i32** %2123, align 8
  %2125 = getelementptr inbounds i32, i32* %2124, i64 %2120
  %2126 = load i32, i32* %2125, align 4
  %2127 = sext i32 %2126 to i64
  %2128 = add i64 %303, %2127
  %2129 = lshr i64 %2128, 18
  %2130 = and i64 %2128, 262143
  %2131 = load i32**, i32*** %309, align 8
  %2132 = getelementptr inbounds i32*, i32** %2131, i64 %2129
  %2133 = load i32*, i32** %2132, align 8
  %2134 = getelementptr inbounds i32, i32* %2133, i64 %2130
  %2135 = load i32, i32* %2134, align 4
  %2136 = lshr i64 %2115, 18
  %2137 = and i64 %2115, 262143
  %2138 = getelementptr inbounds i32*, i32** %2122, i64 %2136
  %2139 = load i32*, i32** %2138, align 8
  %2140 = getelementptr inbounds i32, i32* %2139, i64 %2137
  %2141 = load i32, i32* %2140, align 4
  %2142 = sext i32 %2141 to i64
  %2143 = add i64 %303, %2142
  %2144 = lshr i64 %2143, 18
  %2145 = and i64 %2143, 262143
  %2146 = getelementptr inbounds i32*, i32** %2131, i64 %2144
  %2147 = load i32*, i32** %2146, align 8
  %2148 = getelementptr inbounds i32, i32* %2147, i64 %2145
  %2149 = load i32, i32* %2148, align 4
  %2150 = icmp sgt i32 %2135, %2149
  %2151 = select i1 %2150, i64 %2115, i64 %301
  %2152 = select i1 %2150, i64 %301, i64 %2115
  %2153 = lshr i64 %2152, 18
  %2154 = and i64 %2152, 262143
  %2155 = getelementptr inbounds i32*, i32** %2122, i64 %2153
  %2156 = load i32*, i32** %2155, align 8
  %2157 = getelementptr inbounds i32, i32* %2156, i64 %2154
  %2158 = load i32, i32* %2157, align 4
  %2159 = sext i32 %2158 to i64
  %2160 = add i64 %303, %2159
  %2161 = lshr i64 %2160, 18
  %2162 = and i64 %2160, 262143
  %2163 = getelementptr inbounds i32*, i32** %2131, i64 %2161
  %2164 = load i32*, i32** %2163, align 8
  %2165 = getelementptr inbounds i32, i32* %2164, i64 %2162
  %2166 = load i32, i32* %2165, align 4
  %2167 = lshr i64 %2118, 18
  %2168 = and i64 %2118, 262143
  %2169 = getelementptr inbounds i32*, i32** %2122, i64 %2167
  %2170 = load i32*, i32** %2169, align 8
  %2171 = getelementptr inbounds i32, i32* %2170, i64 %2168
  %2172 = load i32, i32* %2171, align 4
  %2173 = sext i32 %2172 to i64
  %2174 = add i64 %303, %2173
  %2175 = lshr i64 %2174, 18
  %2176 = and i64 %2174, 262143
  %2177 = getelementptr inbounds i32*, i32** %2131, i64 %2175
  %2178 = load i32*, i32** %2177, align 8
  %2179 = getelementptr inbounds i32, i32* %2178, i64 %2176
  %2180 = load i32, i32* %2179, align 4
  %2181 = icmp sgt i32 %2166, %2180
  br i1 %2181, label %2182, label %2199

2182:                                             ; preds = %2112
  %2183 = lshr i64 %2151, 18
  %2184 = and i64 %2151, 262143
  %2185 = getelementptr inbounds i32*, i32** %2122, i64 %2183
  %2186 = load i32*, i32** %2185, align 8
  %2187 = getelementptr inbounds i32, i32* %2186, i64 %2184
  %2188 = load i32, i32* %2187, align 4
  %2189 = sext i32 %2188 to i64
  %2190 = add i64 %303, %2189
  %2191 = lshr i64 %2190, 18
  %2192 = and i64 %2190, 262143
  %2193 = getelementptr inbounds i32*, i32** %2131, i64 %2191
  %2194 = load i32*, i32** %2193, align 8
  %2195 = getelementptr inbounds i32, i32* %2194, i64 %2192
  %2196 = load i32, i32* %2195, align 4
  %2197 = icmp sgt i32 %2196, %2180
  %2198 = select i1 %2197, i64 %2151, i64 %2118
  br label %2199

2199:                                             ; preds = %2182, %2112
  %2200 = phi i64 [ %2152, %2112 ], [ %2198, %2182 ]
  %2201 = sub i64 %1822, %2114
  %2202 = add i64 %1822, %2114
  %2203 = lshr i64 %2201, 18
  %2204 = and i64 %2201, 262143
  %2205 = getelementptr inbounds i32*, i32** %2122, i64 %2203
  %2206 = load i32*, i32** %2205, align 8
  %2207 = getelementptr inbounds i32, i32* %2206, i64 %2204
  %2208 = load i32, i32* %2207, align 4
  %2209 = sext i32 %2208 to i64
  %2210 = add i64 %303, %2209
  %2211 = lshr i64 %2210, 18
  %2212 = and i64 %2210, 262143
  %2213 = getelementptr inbounds i32*, i32** %2131, i64 %2211
  %2214 = load i32*, i32** %2213, align 8
  %2215 = getelementptr inbounds i32, i32* %2214, i64 %2212
  %2216 = load i32, i32* %2215, align 4
  %2217 = lshr i64 %1822, 18
  %2218 = and i64 %1822, 262143
  %2219 = getelementptr inbounds i32*, i32** %2122, i64 %2217
  %2220 = load i32*, i32** %2219, align 8
  %2221 = getelementptr inbounds i32, i32* %2220, i64 %2218
  %2222 = load i32, i32* %2221, align 4
  %2223 = sext i32 %2222 to i64
  %2224 = add i64 %303, %2223
  %2225 = lshr i64 %2224, 18
  %2226 = and i64 %2224, 262143
  %2227 = getelementptr inbounds i32*, i32** %2131, i64 %2225
  %2228 = load i32*, i32** %2227, align 8
  %2229 = getelementptr inbounds i32, i32* %2228, i64 %2226
  %2230 = load i32, i32* %2229, align 4
  %2231 = icmp sgt i32 %2216, %2230
  %2232 = select i1 %2231, i64 %1822, i64 %2201
  %2233 = select i1 %2231, i64 %2201, i64 %1822
  %2234 = lshr i64 %2233, 18
  %2235 = and i64 %2233, 262143
  %2236 = getelementptr inbounds i32*, i32** %2122, i64 %2234
  %2237 = load i32*, i32** %2236, align 8
  %2238 = getelementptr inbounds i32, i32* %2237, i64 %2235
  %2239 = load i32, i32* %2238, align 4
  %2240 = sext i32 %2239 to i64
  %2241 = add i64 %303, %2240
  %2242 = lshr i64 %2241, 18
  %2243 = and i64 %2241, 262143
  %2244 = getelementptr inbounds i32*, i32** %2131, i64 %2242
  %2245 = load i32*, i32** %2244, align 8
  %2246 = getelementptr inbounds i32, i32* %2245, i64 %2243
  %2247 = load i32, i32* %2246, align 4
  %2248 = lshr i64 %2202, 18
  %2249 = and i64 %2202, 262143
  %2250 = getelementptr inbounds i32*, i32** %2122, i64 %2248
  %2251 = load i32*, i32** %2250, align 8
  %2252 = getelementptr inbounds i32, i32* %2251, i64 %2249
  %2253 = load i32, i32* %2252, align 4
  %2254 = sext i32 %2253 to i64
  %2255 = add i64 %303, %2254
  %2256 = lshr i64 %2255, 18
  %2257 = and i64 %2255, 262143
  %2258 = getelementptr inbounds i32*, i32** %2131, i64 %2256
  %2259 = load i32*, i32** %2258, align 8
  %2260 = getelementptr inbounds i32, i32* %2259, i64 %2257
  %2261 = load i32, i32* %2260, align 4
  %2262 = icmp sgt i32 %2247, %2261
  br i1 %2262, label %2263, label %2280

2263:                                             ; preds = %2199
  %2264 = lshr i64 %2232, 18
  %2265 = and i64 %2232, 262143
  %2266 = getelementptr inbounds i32*, i32** %2122, i64 %2264
  %2267 = load i32*, i32** %2266, align 8
  %2268 = getelementptr inbounds i32, i32* %2267, i64 %2265
  %2269 = load i32, i32* %2268, align 4
  %2270 = sext i32 %2269 to i64
  %2271 = add i64 %303, %2270
  %2272 = lshr i64 %2271, 18
  %2273 = and i64 %2271, 262143
  %2274 = getelementptr inbounds i32*, i32** %2131, i64 %2272
  %2275 = load i32*, i32** %2274, align 8
  %2276 = getelementptr inbounds i32, i32* %2275, i64 %2273
  %2277 = load i32, i32* %2276, align 4
  %2278 = icmp sgt i32 %2277, %2261
  %2279 = select i1 %2278, i64 %2232, i64 %2202
  br label %2280

2280:                                             ; preds = %2263, %2199
  %2281 = phi i64 [ %2233, %2199 ], [ %2279, %2263 ]
  %2282 = add i64 %310, -1
  %2283 = sub i64 %2282, %2117
  %2284 = sub i64 %2282, %2114
  %2285 = lshr i64 %2283, 18
  %2286 = and i64 %2283, 262143
  %2287 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %1818, i64 0, i32 0
  %2288 = load i32**, i32*** %2287, align 8
  %2289 = getelementptr inbounds i32*, i32** %2288, i64 %2285
  %2290 = load i32*, i32** %2289, align 8
  %2291 = getelementptr inbounds i32, i32* %2290, i64 %2286
  %2292 = load i32, i32* %2291, align 4
  %2293 = sext i32 %2292 to i64
  %2294 = add i64 %303, %2293
  %2295 = lshr i64 %2294, 18
  %2296 = and i64 %2294, 262143
  %2297 = getelementptr inbounds i32*, i32** %2131, i64 %2295
  %2298 = load i32*, i32** %2297, align 8
  %2299 = getelementptr inbounds i32, i32* %2298, i64 %2296
  %2300 = load i32, i32* %2299, align 4
  %2301 = lshr i64 %2284, 18
  %2302 = and i64 %2284, 262143
  %2303 = getelementptr inbounds i32*, i32** %2288, i64 %2301
  %2304 = load i32*, i32** %2303, align 8
  %2305 = getelementptr inbounds i32, i32* %2304, i64 %2302
  %2306 = load i32, i32* %2305, align 4
  %2307 = sext i32 %2306 to i64
  %2308 = add i64 %303, %2307
  %2309 = lshr i64 %2308, 18
  %2310 = and i64 %2308, 262143
  %2311 = getelementptr inbounds i32*, i32** %2131, i64 %2309
  %2312 = load i32*, i32** %2311, align 8
  %2313 = getelementptr inbounds i32, i32* %2312, i64 %2310
  %2314 = load i32, i32* %2313, align 4
  %2315 = icmp sgt i32 %2300, %2314
  %2316 = select i1 %2315, i64 %2284, i64 %2283
  %2317 = select i1 %2315, i64 %2283, i64 %2284
  %2318 = lshr i64 %2317, 18
  %2319 = and i64 %2317, 262143
  %2320 = getelementptr inbounds i32*, i32** %2288, i64 %2318
  %2321 = load i32*, i32** %2320, align 8
  %2322 = getelementptr inbounds i32, i32* %2321, i64 %2319
  %2323 = load i32, i32* %2322, align 4
  %2324 = sext i32 %2323 to i64
  %2325 = add i64 %303, %2324
  %2326 = lshr i64 %2325, 18
  %2327 = and i64 %2325, 262143
  %2328 = getelementptr inbounds i32*, i32** %2131, i64 %2326
  %2329 = load i32*, i32** %2328, align 8
  %2330 = getelementptr inbounds i32, i32* %2329, i64 %2327
  %2331 = load i32, i32* %2330, align 4
  %2332 = lshr i64 %2282, 18
  %2333 = and i64 %2282, 262143
  %2334 = getelementptr inbounds i32*, i32** %2288, i64 %2332
  %2335 = load i32*, i32** %2334, align 8
  %2336 = getelementptr inbounds i32, i32* %2335, i64 %2333
  %2337 = load i32, i32* %2336, align 4
  %2338 = sext i32 %2337 to i64
  %2339 = add i64 %303, %2338
  %2340 = lshr i64 %2339, 18
  %2341 = and i64 %2339, 262143
  %2342 = getelementptr inbounds i32*, i32** %2131, i64 %2340
  %2343 = load i32*, i32** %2342, align 8
  %2344 = getelementptr inbounds i32, i32* %2343, i64 %2341
  %2345 = load i32, i32* %2344, align 4
  %2346 = icmp sgt i32 %2331, %2345
  br i1 %2346, label %2347, label %2378

2347:                                             ; preds = %2280
  %2348 = lshr i64 %2316, 18
  %2349 = and i64 %2316, 262143
  %2350 = getelementptr inbounds i32*, i32** %2288, i64 %2348
  %2351 = load i32*, i32** %2350, align 8
  %2352 = getelementptr inbounds i32, i32* %2351, i64 %2349
  %2353 = load i32, i32* %2352, align 4
  %2354 = sext i32 %2353 to i64
  %2355 = add i64 %303, %2354
  %2356 = lshr i64 %2355, 18
  %2357 = and i64 %2355, 262143
  %2358 = getelementptr inbounds i32*, i32** %2131, i64 %2356
  %2359 = load i32*, i32** %2358, align 8
  %2360 = getelementptr inbounds i32, i32* %2359, i64 %2357
  %2361 = load i32, i32* %2360, align 4
  %2362 = icmp sgt i32 %2361, %2345
  %2363 = select i1 %2362, i64 %2316, i64 %2282
  %2364 = lshr i64 %2363, 18
  %2365 = and i64 %2363, 262143
  %2366 = getelementptr inbounds i32*, i32** %2288, i64 %2364
  %2367 = load i32*, i32** %2366, align 8
  %2368 = getelementptr inbounds i32, i32* %2367, i64 %2365
  %2369 = load i32, i32* %2368, align 4
  %2370 = sext i32 %2369 to i64
  %2371 = add i64 %303, %2370
  %2372 = lshr i64 %2371, 18
  %2373 = and i64 %2371, 262143
  %2374 = getelementptr inbounds i32*, i32** %2131, i64 %2372
  %2375 = load i32*, i32** %2374, align 8
  %2376 = getelementptr inbounds i32, i32* %2375, i64 %2373
  %2377 = load i32, i32* %2376, align 4
  br label %2378

2378:                                             ; preds = %2347, %2280
  %2379 = phi i32 [ %2331, %2280 ], [ %2377, %2347 ]
  %2380 = phi i64 [ %2317, %2280 ], [ %2363, %2347 ]
  %2381 = lshr i64 %2200, 18
  %2382 = and i64 %2200, 262143
  %2383 = getelementptr inbounds i32*, i32** %2122, i64 %2381
  %2384 = load i32*, i32** %2383, align 8
  %2385 = getelementptr inbounds i32, i32* %2384, i64 %2382
  %2386 = load i32, i32* %2385, align 4
  %2387 = sext i32 %2386 to i64
  %2388 = add i64 %303, %2387
  %2389 = lshr i64 %2388, 18
  %2390 = and i64 %2388, 262143
  %2391 = getelementptr inbounds i32*, i32** %2131, i64 %2389
  %2392 = load i32*, i32** %2391, align 8
  %2393 = getelementptr inbounds i32, i32* %2392, i64 %2390
  %2394 = load i32, i32* %2393, align 4
  %2395 = lshr i64 %2281, 18
  %2396 = and i64 %2281, 262143
  %2397 = getelementptr inbounds i32*, i32** %2122, i64 %2395
  %2398 = load i32*, i32** %2397, align 8
  %2399 = getelementptr inbounds i32, i32* %2398, i64 %2396
  %2400 = load i32, i32* %2399, align 4
  %2401 = sext i32 %2400 to i64
  %2402 = add i64 %303, %2401
  %2403 = lshr i64 %2402, 18
  %2404 = and i64 %2402, 262143
  %2405 = getelementptr inbounds i32*, i32** %2131, i64 %2403
  %2406 = load i32*, i32** %2405, align 8
  %2407 = getelementptr inbounds i32, i32* %2406, i64 %2404
  %2408 = load i32, i32* %2407, align 4
  %2409 = icmp sgt i32 %2394, %2408
  %2410 = select i1 %2409, i64 %2281, i64 %2200
  %2411 = select i1 %2409, i64 %2200, i64 %2281
  %2412 = lshr i64 %2411, 18
  %2413 = and i64 %2411, 262143
  %2414 = getelementptr inbounds i32*, i32** %2122, i64 %2412
  %2415 = load i32*, i32** %2414, align 8
  %2416 = getelementptr inbounds i32, i32* %2415, i64 %2413
  %2417 = load i32, i32* %2416, align 4
  %2418 = sext i32 %2417 to i64
  %2419 = add i64 %303, %2418
  %2420 = lshr i64 %2419, 18
  %2421 = and i64 %2419, 262143
  %2422 = getelementptr inbounds i32*, i32** %2131, i64 %2420
  %2423 = load i32*, i32** %2422, align 8
  %2424 = getelementptr inbounds i32, i32* %2423, i64 %2421
  %2425 = load i32, i32* %2424, align 4
  %2426 = icmp sgt i32 %2425, %2379
  br i1 %2426, label %2427, label %2445

2427:                                             ; preds = %2378
  %2428 = lshr i64 %2410, 18
  %2429 = and i64 %2410, 262143
  %2430 = getelementptr inbounds i32*, i32** %2122, i64 %2428
  %2431 = load i32*, i32** %2430, align 8
  %2432 = getelementptr inbounds i32, i32* %2431, i64 %2429
  %2433 = load i32, i32* %2432, align 4
  %2434 = sext i32 %2433 to i64
  %2435 = add i64 %303, %2434
  %2436 = lshr i64 %2435, 18
  %2437 = and i64 %2435, 262143
  %2438 = getelementptr inbounds i32*, i32** %2131, i64 %2436
  %2439 = load i32*, i32** %2438, align 8
  %2440 = getelementptr inbounds i32, i32* %2439, i64 %2437
  %2441 = load i32, i32* %2440, align 4
  %2442 = icmp sgt i32 %2441, %2379
  %2443 = select i1 %2442, i64 %2410, i64 %2380
  %2444 = select i1 %2442, %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"* %1818
  br label %2445

2445:                                             ; preds = %2427, %2378, %2086, %1893, %1826
  %2446 = phi i64 [ %2120, %2427 ], [ %2120, %2378 ], [ %2016, %2086 ], [ %1829, %1893 ], [ %1829, %1826 ]
  %2447 = phi i64 [ %2119, %2427 ], [ %2119, %2378 ], [ %2015, %2086 ], [ %1828, %1893 ], [ %1828, %1826 ]
  %2448 = phi %"class.courgette::PagedArray"* [ %2444, %2427 ], [ %300, %2378 ], [ %2110, %2086 ], [ %1910, %1893 ], [ %300, %1826 ]
  %2449 = phi i64 [ %2443, %2427 ], [ %2411, %2378 ], [ %2111, %2086 ], [ %1909, %1893 ], [ %1861, %1826 ]
  store %"class.courgette::PagedArray"* %2448, %"class.courgette::PagedArray"** %198, align 8
  store i64 %2449, i64* %199, align 8
  %2450 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %300, i64 0, i32 0
  %2451 = load i32**, i32*** %2450, align 8
  %2452 = getelementptr inbounds i32*, i32** %2451, i64 %2447
  %2453 = load i32*, i32** %2452, align 8
  %2454 = getelementptr inbounds i32, i32* %2453, i64 %2446
  %2455 = load i32, i32* %2454, align 4
  %2456 = lshr i64 %2449, 18
  %2457 = and i64 %2449, 262143
  %2458 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %2448, i64 0, i32 0
  %2459 = load i32**, i32*** %2458, align 8
  %2460 = getelementptr inbounds i32*, i32** %2459, i64 %2456
  %2461 = load i32*, i32** %2460, align 8
  %2462 = getelementptr inbounds i32, i32* %2461, i64 %2457
  %2463 = load i32, i32* %2462, align 4
  store i32 %2463, i32* %2454, align 4
  %2464 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  %2465 = load i64, i64* %199, align 8
  %2466 = lshr i64 %2465, 18
  %2467 = and i64 %2465, 262143
  %2468 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %2464, i64 0, i32 0
  %2469 = load i32**, i32*** %2468, align 8
  %2470 = getelementptr inbounds i32*, i32** %2469, i64 %2466
  %2471 = load i32*, i32** %2470, align 8
  %2472 = getelementptr inbounds i32, i32* %2471, i64 %2467
  store i32 %2455, i32* %2472, align 4
  %2473 = load i32**, i32*** %2450, align 8
  %2474 = getelementptr inbounds i32*, i32** %2473, i64 %2447
  %2475 = load i32*, i32** %2474, align 8
  %2476 = getelementptr inbounds i32, i32* %2475, i64 %2446
  %2477 = load i32, i32* %2476, align 4
  %2478 = sext i32 %2477 to i64
  %2479 = add i64 %303, %2478
  %2480 = lshr i64 %2479, 18
  %2481 = and i64 %2479, 262143
  %2482 = load i32**, i32*** %309, align 8
  %2483 = getelementptr inbounds i32*, i32** %2482, i64 %2480
  %2484 = load i32*, i32** %2483, align 8
  %2485 = getelementptr inbounds i32, i32* %2484, i64 %2481
  %2486 = load i32, i32* %2485, align 4
  %2487 = add i64 %301, 1
  call fastcc void @_ZN6divsuf12_GLOBAL__N_112tr_partitionEN9courgette19PagedArray_iteratorIKNS1_10PagedArrayIiLi18EEEKiEENS2_IS4_iEES8_S8_PS8_S9_i(%"class.courgette::PagedArray"* %302, i64 %303, %"class.courgette::PagedArray"* %300, i64 %301, %"class.courgette::PagedArray"* %300, i64 %2487, %"class.courgette::PagedArray_iterator"* nonnull byval(%"class.courgette::PagedArray_iterator") align 8 %13, %"class.courgette::PagedArray_iterator"* nonnull %10, %"class.courgette::PagedArray_iterator"* nonnull %11, i32 %2486) #3
  %2488 = load i64, i64* %67, align 8
  %2489 = sub i64 %2488, %301
  %2490 = load i64, i64* %202, align 8
  %2491 = load i64, i64* %199, align 8
  %2492 = sub i64 %2490, %2491
  %2493 = icmp eq i64 %2489, %2492
  br i1 %2493, label %2918, label %2494

2494:                                             ; preds = %2445
  %2495 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  %2496 = lshr i64 %2491, 18
  %2497 = and i64 %2491, 262143
  %2498 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %2495, i64 0, i32 0
  %2499 = load i32**, i32*** %2498, align 8
  %2500 = getelementptr inbounds i32*, i32** %2499, i64 %2496
  %2501 = load i32*, i32** %2500, align 8
  %2502 = getelementptr inbounds i32, i32* %2501, i64 %2497
  %2503 = load i32, i32* %2502, align 4
  %2504 = sext i32 %2503 to i64
  %2505 = add i64 %2504, %1
  %2506 = lshr i64 %2505, 18
  %2507 = and i64 %2505, 262143
  %2508 = load i32**, i32*** %62, align 8
  %2509 = getelementptr inbounds i32*, i32** %2508, i64 %2506
  %2510 = load i32*, i32** %2509, align 8
  %2511 = getelementptr inbounds i32, i32* %2510, i64 %2507
  %2512 = load i32, i32* %2511, align 4
  %2513 = icmp eq i32 %2512, %2486
  br i1 %2513, label %2544, label %2514

2514:                                             ; preds = %2494
  %2515 = trunc i64 %2492 to i32
  %2516 = icmp ugt i32 %2515, 65535
  br i1 %2516, label %2517, label %2531

2517:                                             ; preds = %2514
  %2518 = icmp ugt i32 %2515, 16777215
  br i1 %2518, label %2519, label %2525

2519:                                             ; preds = %2517
  %2520 = lshr i64 %2492, 24
  %2521 = and i64 %2520, 255
  %2522 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2521
  %2523 = load i32, i32* %2522, align 4
  %2524 = add nsw i32 %2523, 24
  br label %2544

2525:                                             ; preds = %2517
  %2526 = lshr i64 %2492, 16
  %2527 = and i64 %2526, 255
  %2528 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2527
  %2529 = load i32, i32* %2528, align 4
  %2530 = add nsw i32 %2529, 16
  br label %2544

2531:                                             ; preds = %2514
  %2532 = and i32 %2515, 65280
  %2533 = icmp eq i32 %2532, 0
  br i1 %2533, label %2540, label %2534

2534:                                             ; preds = %2531
  %2535 = lshr i64 %2492, 8
  %2536 = and i64 %2535, 255
  %2537 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2536
  %2538 = load i32, i32* %2537, align 4
  %2539 = add nsw i32 %2538, 8
  br label %2544

2540:                                             ; preds = %2531
  %2541 = and i64 %2492, 255
  %2542 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2541
  %2543 = load i32, i32* %2542, align 4
  br label %2544

2544:                                             ; preds = %2540, %2534, %2525, %2519, %2494
  %2545 = phi i32 [ -1, %2494 ], [ %2524, %2519 ], [ %2530, %2525 ], [ %2539, %2534 ], [ %2543, %2540 ]
  %2546 = sub i64 %2491, %3
  %2547 = trunc i64 %2546 to i32
  %2548 = add i32 %2547, -1
  %2549 = icmp ult i64 %301, %2491
  br i1 %2549, label %2550, label %2589

2550:                                             ; preds = %2544
  %2551 = load i32**, i32*** %2450, align 8
  %2552 = getelementptr inbounds i32*, i32** %2551, i64 %2447
  %2553 = load i32*, i32** %2552, align 8
  %2554 = getelementptr inbounds i32, i32* %2553, i64 %2446
  %2555 = load i32, i32* %2554, align 4
  %2556 = sext i32 %2555 to i64
  %2557 = add i64 %2556, %1
  %2558 = lshr i64 %2557, 18
  %2559 = and i64 %2557, 262143
  %2560 = getelementptr inbounds i32*, i32** %2508, i64 %2558
  %2561 = load i32*, i32** %2560, align 8
  %2562 = getelementptr inbounds i32, i32* %2561, i64 %2559
  store i32 %2548, i32* %2562, align 4
  %2563 = load i64, i64* %199, align 8
  %2564 = icmp ult i64 %2487, %2563
  br i1 %2564, label %2565, label %2585

2565:                                             ; preds = %2550, %2565
  %2566 = phi i64 [ %2582, %2565 ], [ %2487, %2550 ]
  %2567 = load i32**, i32*** %62, align 8
  %2568 = lshr i64 %2566, 18
  %2569 = and i64 %2566, 262143
  %2570 = load i32**, i32*** %2450, align 8
  %2571 = getelementptr inbounds i32*, i32** %2570, i64 %2568
  %2572 = load i32*, i32** %2571, align 8
  %2573 = getelementptr inbounds i32, i32* %2572, i64 %2569
  %2574 = load i32, i32* %2573, align 4
  %2575 = sext i32 %2574 to i64
  %2576 = add i64 %2575, %1
  %2577 = lshr i64 %2576, 18
  %2578 = and i64 %2576, 262143
  %2579 = getelementptr inbounds i32*, i32** %2567, i64 %2577
  %2580 = load i32*, i32** %2579, align 8
  %2581 = getelementptr inbounds i32, i32* %2580, i64 %2578
  store i32 %2548, i32* %2581, align 4
  %2582 = add nuw i64 %2566, 1
  %2583 = load i64, i64* %199, align 8
  %2584 = icmp ult i64 %2582, %2583
  br i1 %2584, label %2565, label %2585

2585:                                             ; preds = %2565, %2550
  %2586 = phi i64 [ %2563, %2550 ], [ %2583, %2565 ]
  %2587 = load i64, i64* %202, align 8
  %2588 = load i64, i64* %67, align 8
  br label %2589

2589:                                             ; preds = %2585, %2544
  %2590 = phi i64 [ %2488, %2544 ], [ %2588, %2585 ]
  %2591 = phi i64 [ %2490, %2544 ], [ %2587, %2585 ]
  %2592 = phi i64 [ %2491, %2544 ], [ %2586, %2585 ]
  %2593 = icmp ult i64 %2591, %2590
  br i1 %2593, label %2594, label %2624

2594:                                             ; preds = %2589
  %2595 = sub i64 %2591, %3
  %2596 = trunc i64 %2595 to i32
  %2597 = add i32 %2596, -1
  %2598 = icmp ult i64 %2592, %2591
  br i1 %2598, label %2599, label %2624

2599:                                             ; preds = %2594
  %2600 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  %2601 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %2600, i64 0, i32 0
  br label %2602

2602:                                             ; preds = %2602, %2599
  %2603 = phi i64 [ %2592, %2599 ], [ %2619, %2602 ]
  %2604 = lshr i64 %2603, 18
  %2605 = and i64 %2603, 262143
  %2606 = load i32**, i32*** %2601, align 8
  %2607 = getelementptr inbounds i32*, i32** %2606, i64 %2604
  %2608 = load i32*, i32** %2607, align 8
  %2609 = getelementptr inbounds i32, i32* %2608, i64 %2605
  %2610 = load i32, i32* %2609, align 4
  %2611 = sext i32 %2610 to i64
  %2612 = add i64 %2611, %1
  %2613 = lshr i64 %2612, 18
  %2614 = and i64 %2612, 262143
  %2615 = load i32**, i32*** %62, align 8
  %2616 = getelementptr inbounds i32*, i32** %2615, i64 %2613
  %2617 = load i32*, i32** %2616, align 8
  %2618 = getelementptr inbounds i32, i32* %2617, i64 %2614
  store i32 %2597, i32* %2618, align 4
  %2619 = add nuw i64 %2603, 1
  %2620 = load i64, i64* %202, align 8
  %2621 = icmp ult i64 %2619, %2620
  br i1 %2621, label %2602, label %2622

2622:                                             ; preds = %2602
  %2623 = load i64, i64* %199, align 8
  br label %2624

2624:                                             ; preds = %2622, %2594, %2589
  %2625 = phi i64 [ %2623, %2622 ], [ %2592, %2594 ], [ %2592, %2589 ]
  %2626 = phi i64 [ %2620, %2622 ], [ %2591, %2594 ], [ %2591, %2589 ]
  %2627 = sub i64 %2626, %2625
  %2628 = icmp sgt i64 %2627, 1
  br i1 %2628, label %2629, label %2840

2629:                                             ; preds = %2624
  %2630 = trunc i64 %2627 to i32
  %2631 = icmp slt i32 %297, %2630
  br i1 %2631, label %2632, label %2637

2632:                                             ; preds = %2629
  %2633 = icmp eq i32 %298, 0
  br i1 %2633, label %2834, label %2634

2634:                                             ; preds = %2632
  %2635 = add i32 %297, %4
  %2636 = add nsw i32 %298, -1
  br label %2637

2637:                                             ; preds = %2629, %2634
  %2638 = phi i32 [ %2635, %2634 ], [ %297, %2629 ]
  %2639 = phi i32 [ %2636, %2634 ], [ %298, %2629 ]
  %2640 = sub i32 %2638, %2630
  %2641 = sub i64 %2625, %301
  %2642 = load i64, i64* %67, align 8
  %2643 = sub i64 %2642, %2626
  %2644 = icmp sgt i64 %2641, %2643
  br i1 %2644, label %2739, label %2645

2645:                                             ; preds = %2637
  %2646 = icmp sgt i64 %2643, %2627
  br i1 %2646, label %2688, label %2647

2647:                                             ; preds = %2645
  %2648 = icmp sgt i64 %2641, 1
  br i1 %2648, label %2649, label %2671

2649:                                             ; preds = %2647
  %2650 = add i64 %303, %221
  %2651 = sext i32 %305 to i64
  %2652 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2651, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2652, align 8
  %2653 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2651, i32 0, i32 1
  store i64 %2650, i64* %2653, align 8
  %2654 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2651, i32 1
  %2655 = bitcast %"class.courgette::PagedArray_iterator"* %2654 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2655, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %2656 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2651, i32 2
  %2657 = bitcast %"class.courgette::PagedArray_iterator"* %2656 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2657, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %2658 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2651, i32 3
  store i32 %2545, i32* %2658, align 8
  %2659 = add nsw i32 %305, 1
  %2660 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2651, i32 4
  store i32 %304, i32* %2660, align 4
  %2661 = sext i32 %2659 to i64
  %2662 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2661, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2662, align 8
  %2663 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2661, i32 0, i32 1
  store i64 %303, i64* %2663, align 8
  %2664 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2661, i32 1
  %2665 = bitcast %"class.courgette::PagedArray_iterator"* %2664 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2665, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %2666 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2661, i32 2
  %2667 = bitcast %"class.courgette::PagedArray_iterator"* %2666 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2667, i8* nonnull align 8 %64, i64 16, i1 false) #3
  %2668 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2661, i32 3
  store i32 %1817, i32* %2668, align 8
  %2669 = add nsw i32 %305, 2
  %2670 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2661, i32 4
  store i32 %304, i32* %2670, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %197, i64 16, i1 false) #3
  br label %2986

2671:                                             ; preds = %2647
  %2672 = icmp sgt i64 %2643, 1
  %2673 = add i64 %303, %221
  br i1 %2672, label %2674, label %2686

2674:                                             ; preds = %2671
  %2675 = sext i32 %305 to i64
  %2676 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2675, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2676, align 8
  %2677 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2675, i32 0, i32 1
  store i64 %2673, i64* %2677, align 8
  %2678 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2675, i32 1
  %2679 = bitcast %"class.courgette::PagedArray_iterator"* %2678 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2679, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %2680 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2675, i32 2
  %2681 = bitcast %"class.courgette::PagedArray_iterator"* %2680 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2681, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %2682 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2675, i32 3
  store i32 %2545, i32* %2682, align 8
  %2683 = add nsw i32 %305, 1
  %2684 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2675, i32 4
  store i32 %304, i32* %2684, align 4
  %2685 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %201, align 8
  br label %2986

2686:                                             ; preds = %2671
  %2687 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %200, i64 16, i1 false) #3
  br label %2986

2688:                                             ; preds = %2645
  %2689 = icmp sgt i64 %2641, %2627
  br i1 %2689, label %2716, label %2690

2690:                                             ; preds = %2688
  %2691 = icmp sgt i64 %2641, 1
  %2692 = sext i32 %305 to i64
  %2693 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2692, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2693, align 8
  %2694 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2692, i32 0, i32 1
  store i64 %303, i64* %2694, align 8
  %2695 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2692, i32 1
  %2696 = bitcast %"class.courgette::PagedArray_iterator"* %2695 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2696, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %2697 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2692, i32 2
  %2698 = bitcast %"class.courgette::PagedArray_iterator"* %2697 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2698, i8* nonnull align 8 %64, i64 16, i1 false) #3
  %2699 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2692, i32 3
  store i32 %1817, i32* %2699, align 8
  %2700 = add nsw i32 %305, 1
  %2701 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2692, i32 4
  store i32 %304, i32* %2701, align 4
  %2702 = add i64 %303, %221
  br i1 %2691, label %2703, label %2714

2703:                                             ; preds = %2690
  %2704 = sext i32 %2700 to i64
  %2705 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2704, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2705, align 8
  %2706 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2704, i32 0, i32 1
  store i64 %2702, i64* %2706, align 8
  %2707 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2704, i32 1
  %2708 = bitcast %"class.courgette::PagedArray_iterator"* %2707 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2708, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %2709 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2704, i32 2
  %2710 = bitcast %"class.courgette::PagedArray_iterator"* %2709 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2710, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %2711 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2704, i32 3
  store i32 %2545, i32* %2711, align 8
  %2712 = add nsw i32 %305, 2
  %2713 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2704, i32 4
  store i32 %304, i32* %2713, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %197, i64 16, i1 false) #3
  br label %2986

2714:                                             ; preds = %2690
  %2715 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %200, i64 16, i1 false) #3
  br label %2986

2716:                                             ; preds = %2688
  %2717 = sext i32 %305 to i64
  %2718 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2717, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2718, align 8
  %2719 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2717, i32 0, i32 1
  store i64 %303, i64* %2719, align 8
  %2720 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2717, i32 1
  %2721 = bitcast %"class.courgette::PagedArray_iterator"* %2720 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2721, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %2722 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2717, i32 2
  %2723 = bitcast %"class.courgette::PagedArray_iterator"* %2722 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2723, i8* nonnull align 8 %64, i64 16, i1 false) #3
  %2724 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2717, i32 3
  store i32 %1817, i32* %2724, align 8
  %2725 = add nsw i32 %305, 1
  %2726 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2717, i32 4
  store i32 %304, i32* %2726, align 4
  %2727 = sext i32 %2725 to i64
  %2728 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2727, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2728, align 8
  %2729 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2727, i32 0, i32 1
  store i64 %303, i64* %2729, align 8
  %2730 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2727, i32 1, i32 0
  store %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"** %2730, align 8
  %2731 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2727, i32 1, i32 1
  store i64 %301, i64* %2731, align 8
  %2732 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2727, i32 2
  %2733 = bitcast %"class.courgette::PagedArray_iterator"* %2732 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2733, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %2734 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2727, i32 3
  store i32 %1817, i32* %2734, align 8
  %2735 = add nsw i32 %305, 2
  %2736 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2727, i32 4
  store i32 %304, i32* %2736, align 4
  %2737 = add i64 %303, %221
  %2738 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %200, i64 16, i1 false) #3
  br label %2986

2739:                                             ; preds = %2637
  %2740 = icmp sgt i64 %2641, %2627
  br i1 %2740, label %2782, label %2741

2741:                                             ; preds = %2739
  %2742 = icmp sgt i64 %2643, 1
  br i1 %2742, label %2743, label %2766

2743:                                             ; preds = %2741
  %2744 = add i64 %303, %221
  %2745 = sext i32 %305 to i64
  %2746 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2745, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2746, align 8
  %2747 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2745, i32 0, i32 1
  store i64 %2744, i64* %2747, align 8
  %2748 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2745, i32 1
  %2749 = bitcast %"class.courgette::PagedArray_iterator"* %2748 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2749, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %2750 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2745, i32 2
  %2751 = bitcast %"class.courgette::PagedArray_iterator"* %2750 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2751, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %2752 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2745, i32 3
  store i32 %2545, i32* %2752, align 8
  %2753 = add nsw i32 %305, 1
  %2754 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2745, i32 4
  store i32 %304, i32* %2754, align 4
  %2755 = sext i32 %2753 to i64
  %2756 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2755, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2756, align 8
  %2757 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2755, i32 0, i32 1
  store i64 %303, i64* %2757, align 8
  %2758 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2755, i32 1, i32 0
  store %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"** %2758, align 8
  %2759 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2755, i32 1, i32 1
  store i64 %301, i64* %2759, align 8
  %2760 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2755, i32 2
  %2761 = bitcast %"class.courgette::PagedArray_iterator"* %2760 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2761, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %2762 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2755, i32 3
  store i32 %1817, i32* %2762, align 8
  %2763 = add nsw i32 %305, 2
  %2764 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2755, i32 4
  store i32 %304, i32* %2764, align 4
  %2765 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %201, align 8
  br label %2986

2766:                                             ; preds = %2741
  %2767 = icmp sgt i64 %2641, 1
  %2768 = add i64 %303, %221
  br i1 %2767, label %2769, label %2780

2769:                                             ; preds = %2766
  %2770 = sext i32 %305 to i64
  %2771 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2770, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2771, align 8
  %2772 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2770, i32 0, i32 1
  store i64 %2768, i64* %2772, align 8
  %2773 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2770, i32 1
  %2774 = bitcast %"class.courgette::PagedArray_iterator"* %2773 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2774, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %2775 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2770, i32 2
  %2776 = bitcast %"class.courgette::PagedArray_iterator"* %2775 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2776, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %2777 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2770, i32 3
  store i32 %2545, i32* %2777, align 8
  %2778 = add nsw i32 %305, 1
  %2779 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2770, i32 4
  store i32 %304, i32* %2779, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %197, i64 16, i1 false) #3
  br label %2986

2780:                                             ; preds = %2766
  %2781 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %200, i64 16, i1 false) #3
  br label %2986

2782:                                             ; preds = %2739
  %2783 = icmp sgt i64 %2643, %2627
  br i1 %2783, label %2811, label %2784

2784:                                             ; preds = %2782
  %2785 = icmp sgt i64 %2643, 1
  %2786 = sext i32 %305 to i64
  %2787 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2786, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2787, align 8
  %2788 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2786, i32 0, i32 1
  store i64 %303, i64* %2788, align 8
  %2789 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2786, i32 1, i32 0
  store %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"** %2789, align 8
  %2790 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2786, i32 1, i32 1
  store i64 %301, i64* %2790, align 8
  %2791 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2786, i32 2
  %2792 = bitcast %"class.courgette::PagedArray_iterator"* %2791 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2792, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %2793 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2786, i32 3
  store i32 %1817, i32* %2793, align 8
  %2794 = add nsw i32 %305, 1
  %2795 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2786, i32 4
  store i32 %304, i32* %2795, align 4
  %2796 = add i64 %303, %221
  br i1 %2785, label %2797, label %2809

2797:                                             ; preds = %2784
  %2798 = sext i32 %2794 to i64
  %2799 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2798, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2799, align 8
  %2800 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2798, i32 0, i32 1
  store i64 %2796, i64* %2800, align 8
  %2801 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2798, i32 1
  %2802 = bitcast %"class.courgette::PagedArray_iterator"* %2801 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2802, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %2803 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2798, i32 2
  %2804 = bitcast %"class.courgette::PagedArray_iterator"* %2803 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2804, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %2805 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2798, i32 3
  store i32 %2545, i32* %2805, align 8
  %2806 = add nsw i32 %305, 2
  %2807 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2798, i32 4
  store i32 %304, i32* %2807, align 4
  %2808 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %201, align 8
  br label %2986

2809:                                             ; preds = %2784
  %2810 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %200, i64 16, i1 false) #3
  br label %2986

2811:                                             ; preds = %2782
  %2812 = sext i32 %305 to i64
  %2813 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2812, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2813, align 8
  %2814 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2812, i32 0, i32 1
  store i64 %303, i64* %2814, align 8
  %2815 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2812, i32 1, i32 0
  store %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"** %2815, align 8
  %2816 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2812, i32 1, i32 1
  store i64 %301, i64* %2816, align 8
  %2817 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2812, i32 2
  %2818 = bitcast %"class.courgette::PagedArray_iterator"* %2817 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2818, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %2819 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2812, i32 3
  store i32 %1817, i32* %2819, align 8
  %2820 = add nsw i32 %305, 1
  %2821 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2812, i32 4
  store i32 %304, i32* %2821, align 4
  %2822 = sext i32 %2820 to i64
  %2823 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2822, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2823, align 8
  %2824 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2822, i32 0, i32 1
  store i64 %303, i64* %2824, align 8
  %2825 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2822, i32 1
  %2826 = bitcast %"class.courgette::PagedArray_iterator"* %2825 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2826, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %2827 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2822, i32 2
  %2828 = bitcast %"class.courgette::PagedArray_iterator"* %2827 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2828, i8* nonnull align 8 %64, i64 16, i1 false) #3
  %2829 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2822, i32 3
  store i32 %1817, i32* %2829, align 8
  %2830 = add nsw i32 %305, 2
  %2831 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2822, i32 4
  store i32 %304, i32* %2831, align 4
  %2832 = add i64 %303, %221
  %2833 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %198, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %200, i64 16, i1 false) #3
  br label %2986

2834:                                             ; preds = %2632
  %2835 = add nsw i32 %299, %2630
  %2836 = icmp sgt i32 %304, -1
  br i1 %2836, label %2837, label %2840

2837:                                             ; preds = %2834
  %2838 = sext i32 %304 to i64
  %2839 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2838, i32 3
  store i32 -1, i32* %2839, align 8
  br label %2840

2840:                                             ; preds = %2837, %2834, %2624
  %2841 = phi i32 [ %2835, %2837 ], [ %2835, %2834 ], [ %299, %2624 ]
  %2842 = sub i64 %2625, %301
  %2843 = load i64, i64* %67, align 8
  %2844 = sub i64 %2843, %2626
  %2845 = icmp sgt i64 %2842, %2844
  br i1 %2845, label %2882, label %2846

2846:                                             ; preds = %2840
  %2847 = icmp sgt i64 %2842, 1
  br i1 %2847, label %2848, label %2859

2848:                                             ; preds = %2846
  %2849 = sext i32 %305 to i64
  %2850 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2849, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2850, align 8
  %2851 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2849, i32 0, i32 1
  store i64 %303, i64* %2851, align 8
  %2852 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2849, i32 1
  %2853 = bitcast %"class.courgette::PagedArray_iterator"* %2852 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2853, i8* nonnull align 8 %200, i64 16, i1 false) #3
  %2854 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2849, i32 2
  %2855 = bitcast %"class.courgette::PagedArray_iterator"* %2854 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2855, i8* nonnull align 8 %64, i64 16, i1 false) #3
  %2856 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2849, i32 3
  store i32 %1817, i32* %2856, align 8
  %2857 = add nsw i32 %305, 1
  %2858 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2849, i32 4
  store i32 %304, i32* %2858, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %197, i64 16, i1 false) #3
  br label %2986

2859:                                             ; preds = %2846
  %2860 = icmp sgt i64 %2844, 1
  br i1 %2860, label %2861, label %2863

2861:                                             ; preds = %2859
  %2862 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %201, align 8
  br label %2986

2863:                                             ; preds = %2859
  %2864 = icmp eq i32 %305, 0
  br i1 %2864, label %2997, label %2865

2865:                                             ; preds = %2863
  %2866 = add nsw i32 %305, -1
  %2867 = sext i32 %2866 to i64
  %2868 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2867, i32 0, i32 0
  %2869 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %2868, align 8
  %2870 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2867, i32 0, i32 1
  %2871 = load i64, i64* %2870, align 8
  %2872 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2867, i32 1, i32 0
  %2873 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %2872, align 8
  %2874 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2867, i32 1, i32 1
  %2875 = load i64, i64* %2874, align 8
  %2876 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2867, i32 2
  %2877 = bitcast %"class.courgette::PagedArray_iterator"* %2876 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %2877, i64 16, i1 false) #3
  %2878 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2867, i32 3
  %2879 = load i32, i32* %2878, align 8
  %2880 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2867, i32 4
  %2881 = load i32, i32* %2880, align 4
  br label %2986

2882:                                             ; preds = %2840
  %2883 = icmp sgt i64 %2844, 1
  br i1 %2883, label %2884, label %2896

2884:                                             ; preds = %2882
  %2885 = sext i32 %305 to i64
  %2886 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2885, i32 0, i32 0
  store %"class.courgette::PagedArray"* %302, %"class.courgette::PagedArray"** %2886, align 8
  %2887 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2885, i32 0, i32 1
  store i64 %303, i64* %2887, align 8
  %2888 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2885, i32 1, i32 0
  store %"class.courgette::PagedArray"* %300, %"class.courgette::PagedArray"** %2888, align 8
  %2889 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2885, i32 1, i32 1
  store i64 %301, i64* %2889, align 8
  %2890 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2885, i32 2
  %2891 = bitcast %"class.courgette::PagedArray_iterator"* %2890 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2891, i8* nonnull align 8 %197, i64 16, i1 false) #3
  %2892 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2885, i32 3
  store i32 %1817, i32* %2892, align 8
  %2893 = add nsw i32 %305, 1
  %2894 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2885, i32 4
  store i32 %304, i32* %2894, align 4
  %2895 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %201, align 8
  br label %2986

2896:                                             ; preds = %2882
  %2897 = icmp sgt i64 %2842, 1
  br i1 %2897, label %2898, label %2899

2898:                                             ; preds = %2896
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %197, i64 16, i1 false) #3
  br label %2986

2899:                                             ; preds = %2896
  %2900 = icmp eq i32 %305, 0
  br i1 %2900, label %2997, label %2901

2901:                                             ; preds = %2899
  %2902 = add nsw i32 %305, -1
  %2903 = sext i32 %2902 to i64
  %2904 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2903, i32 0, i32 0
  %2905 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %2904, align 8
  %2906 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2903, i32 0, i32 1
  %2907 = load i64, i64* %2906, align 8
  %2908 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2903, i32 1, i32 0
  %2909 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %2908, align 8
  %2910 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2903, i32 1, i32 1
  %2911 = load i64, i64* %2910, align 8
  %2912 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2903, i32 2
  %2913 = bitcast %"class.courgette::PagedArray_iterator"* %2912 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %2913, i64 16, i1 false) #3
  %2914 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2903, i32 3
  %2915 = load i32, i32* %2914, align 8
  %2916 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2903, i32 4
  %2917 = load i32, i32* %2916, align 4
  br label %2986

2918:                                             ; preds = %2445
  %2919 = trunc i64 %2489 to i32
  %2920 = icmp slt i32 %297, %2919
  br i1 %2920, label %2921, label %2926

2921:                                             ; preds = %2918
  %2922 = icmp eq i32 %298, 0
  br i1 %2922, label %2961, label %2923

2923:                                             ; preds = %2921
  %2924 = add i32 %297, %4
  %2925 = add nsw i32 %298, -1
  br label %2926

2926:                                             ; preds = %2918, %2923
  %2927 = phi i32 [ %2924, %2923 ], [ %297, %2918 ]
  %2928 = phi i32 [ %2925, %2923 ], [ %298, %2918 ]
  %2929 = sub i32 %2927, %2919
  %2930 = icmp ugt i32 %2919, 65535
  br i1 %2930, label %2931, label %2945

2931:                                             ; preds = %2926
  %2932 = icmp ugt i32 %2919, 16777215
  br i1 %2932, label %2933, label %2939

2933:                                             ; preds = %2931
  %2934 = lshr i64 %2489, 24
  %2935 = and i64 %2934, 255
  %2936 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2935
  %2937 = load i32, i32* %2936, align 4
  %2938 = add nsw i32 %2937, 24
  br label %2958

2939:                                             ; preds = %2931
  %2940 = lshr i64 %2489, 16
  %2941 = and i64 %2940, 255
  %2942 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2941
  %2943 = load i32, i32* %2942, align 4
  %2944 = add nsw i32 %2943, 16
  br label %2958

2945:                                             ; preds = %2926
  %2946 = and i32 %2919, 65280
  %2947 = icmp eq i32 %2946, 0
  br i1 %2947, label %2954, label %2948

2948:                                             ; preds = %2945
  %2949 = lshr i64 %2489, 8
  %2950 = and i64 %2949, 255
  %2951 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2950
  %2952 = load i32, i32* %2951, align 4
  %2953 = add nsw i32 %2952, 8
  br label %2958

2954:                                             ; preds = %2945
  %2955 = and i64 %2489, 255
  %2956 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6divsuf12_GLOBAL__N_18lg_tableE, i64 0, i64 %2955
  %2957 = load i32, i32* %2956, align 4
  br label %2958

2958:                                             ; preds = %2954, %2948, %2939, %2933
  %2959 = phi i32 [ %2938, %2933 ], [ %2944, %2939 ], [ %2953, %2948 ], [ %2957, %2954 ]
  %2960 = add i64 %303, %221
  br label %2986

2961:                                             ; preds = %2921
  %2962 = add nsw i32 %299, %2919
  %2963 = icmp sgt i32 %304, -1
  br i1 %2963, label %2964, label %2967

2964:                                             ; preds = %2961
  %2965 = sext i32 %304 to i64
  %2966 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2965, i32 3
  store i32 -1, i32* %2966, align 8
  br label %2967

2967:                                             ; preds = %2964, %2961
  %2968 = icmp eq i32 %305, 0
  br i1 %2968, label %2997, label %2969

2969:                                             ; preds = %2967
  %2970 = add nsw i32 %305, -1
  %2971 = sext i32 %2970 to i64
  %2972 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2971, i32 0, i32 0
  %2973 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %2972, align 8
  %2974 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2971, i32 0, i32 1
  %2975 = load i64, i64* %2974, align 8
  %2976 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2971, i32 1, i32 0
  %2977 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %2976, align 8
  %2978 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2971, i32 1, i32 1
  %2979 = load i64, i64* %2978, align 8
  %2980 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2971, i32 2
  %2981 = bitcast %"class.courgette::PagedArray_iterator"* %2980 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 %2981, i64 16, i1 false) #3
  %2982 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2971, i32 3
  %2983 = load i32, i32* %2982, align 8
  %2984 = getelementptr inbounds [64 x %struct.anon], [64 x %struct.anon]* %9, i64 0, i64 %2971, i32 4
  %2985 = load i32, i32* %2984, align 4
  br label %2986

2986:                                             ; preds = %2969, %2958, %2901, %2898, %2884, %2865, %2861, %2848, %2811, %2809, %2797, %2780, %2769, %2743, %2716, %2714, %2703, %2686, %2674, %2649, %1221, %1202, %1198, %1187, %1175, %1160, %959, %650, %644, %638, %629, %623, %612, %606, %597, %591, %525, %519, %513, %504, %498, %486, %480, %471, %465
  %2987 = phi i32 [ %297, %1198 ], [ %297, %1202 ], [ %1156, %1175 ], [ %1156, %1187 ], [ %1156, %1160 ], [ %297, %1221 ], [ %297, %959 ], [ %297, %591 ], [ %297, %597 ], [ %297, %612 ], [ %297, %606 ], [ %297, %623 ], [ %297, %629 ], [ %297, %644 ], [ %297, %638 ], [ %297, %650 ], [ %297, %465 ], [ %297, %471 ], [ %297, %486 ], [ %297, %480 ], [ %297, %498 ], [ %297, %504 ], [ %297, %519 ], [ %297, %513 ], [ %297, %525 ], [ %297, %2969 ], [ %2929, %2958 ], [ %297, %2884 ], [ %297, %2898 ], [ %297, %2901 ], [ %297, %2848 ], [ %297, %2861 ], [ %297, %2865 ], [ %2640, %2811 ], [ %2640, %2797 ], [ %2640, %2809 ], [ %2640, %2743 ], [ %2640, %2769 ], [ %2640, %2780 ], [ %2640, %2716 ], [ %2640, %2703 ], [ %2640, %2714 ], [ %2640, %2649 ], [ %2640, %2674 ], [ %2640, %2686 ]
  %2988 = phi i32 [ 0, %1198 ], [ 0, %1202 ], [ %1155, %1175 ], [ %1155, %1187 ], [ %1155, %1160 ], [ %298, %1221 ], [ %298, %959 ], [ %298, %591 ], [ %298, %597 ], [ %298, %612 ], [ %298, %606 ], [ %298, %623 ], [ %298, %629 ], [ %298, %644 ], [ %298, %638 ], [ %298, %650 ], [ %298, %465 ], [ %298, %471 ], [ %298, %486 ], [ %298, %480 ], [ %298, %498 ], [ %298, %504 ], [ %298, %519 ], [ %298, %513 ], [ %298, %525 ], [ 0, %2969 ], [ %2928, %2958 ], [ %298, %2884 ], [ %298, %2898 ], [ %298, %2901 ], [ %298, %2848 ], [ %298, %2861 ], [ %298, %2865 ], [ %2639, %2811 ], [ %2639, %2797 ], [ %2639, %2809 ], [ %2639, %2743 ], [ %2639, %2769 ], [ %2639, %2780 ], [ %2639, %2716 ], [ %2639, %2703 ], [ %2639, %2714 ], [ %2639, %2649 ], [ %2639, %2674 ], [ %2639, %2686 ]
  %2989 = phi i32 [ %1189, %1198 ], [ %1189, %1202 ], [ %299, %1175 ], [ %299, %1187 ], [ %299, %1160 ], [ %299, %1221 ], [ %299, %959 ], [ %299, %591 ], [ %299, %597 ], [ %299, %612 ], [ %299, %606 ], [ %299, %623 ], [ %299, %629 ], [ %299, %644 ], [ %299, %638 ], [ %299, %650 ], [ %299, %465 ], [ %299, %471 ], [ %299, %486 ], [ %299, %480 ], [ %299, %498 ], [ %299, %504 ], [ %299, %519 ], [ %299, %513 ], [ %299, %525 ], [ %2962, %2969 ], [ %299, %2958 ], [ %2841, %2884 ], [ %2841, %2898 ], [ %2841, %2901 ], [ %2841, %2848 ], [ %2841, %2861 ], [ %2841, %2865 ], [ %299, %2811 ], [ %299, %2797 ], [ %299, %2809 ], [ %299, %2743 ], [ %299, %2769 ], [ %299, %2780 ], [ %299, %2716 ], [ %299, %2703 ], [ %299, %2714 ], [ %299, %2649 ], [ %299, %2674 ], [ %299, %2686 ]
  %2990 = phi %"class.courgette::PagedArray"* [ %1199, %1198 ], [ %1210, %1202 ], [ %1186, %1175 ], [ %1023, %1187 ], [ %1023, %1160 ], [ %1229, %1221 ], [ %967, %959 ], [ %586, %591 ], [ %586, %597 ], [ %586, %612 ], [ %586, %606 ], [ %300, %623 ], [ %300, %629 ], [ %300, %644 ], [ %300, %638 ], [ %658, %650 ], [ %300, %465 ], [ %300, %471 ], [ %300, %486 ], [ %300, %480 ], [ %493, %498 ], [ %493, %504 ], [ %493, %519 ], [ %493, %513 ], [ %533, %525 ], [ %2977, %2969 ], [ %300, %2958 ], [ %2895, %2884 ], [ %300, %2898 ], [ %2909, %2901 ], [ %300, %2848 ], [ %2862, %2861 ], [ %2873, %2865 ], [ %2833, %2811 ], [ %2808, %2797 ], [ %2810, %2809 ], [ %2765, %2743 ], [ %300, %2769 ], [ %2781, %2780 ], [ %2738, %2716 ], [ %300, %2703 ], [ %2715, %2714 ], [ %300, %2649 ], [ %2685, %2674 ], [ %2687, %2686 ]
  %2991 = phi i64 [ %1144, %1198 ], [ %1212, %1202 ], [ %1144, %1175 ], [ %1024, %1187 ], [ %1024, %1160 ], [ %1231, %1221 ], [ %969, %959 ], [ %386, %591 ], [ %386, %597 ], [ %386, %612 ], [ %386, %606 ], [ %301, %623 ], [ %301, %629 ], [ %301, %644 ], [ %301, %638 ], [ %660, %650 ], [ %301, %465 ], [ %301, %471 ], [ %301, %486 ], [ %301, %480 ], [ %386, %498 ], [ %386, %504 ], [ %386, %519 ], [ %386, %513 ], [ %535, %525 ], [ %2979, %2969 ], [ %301, %2958 ], [ %2626, %2884 ], [ %301, %2898 ], [ %2911, %2901 ], [ %301, %2848 ], [ %2626, %2861 ], [ %2875, %2865 ], [ %2625, %2811 ], [ %2626, %2797 ], [ %2625, %2809 ], [ %2626, %2743 ], [ %301, %2769 ], [ %2625, %2780 ], [ %2625, %2716 ], [ %301, %2703 ], [ %2625, %2714 ], [ %301, %2649 ], [ %2626, %2674 ], [ %2625, %2686 ]
  %2992 = phi %"class.courgette::PagedArray"* [ %302, %1198 ], [ %1206, %1202 ], [ %302, %1175 ], [ %302, %1187 ], [ %302, %1160 ], [ %1225, %1221 ], [ %963, %959 ], [ %302, %591 ], [ %302, %597 ], [ %302, %612 ], [ %302, %606 ], [ %302, %623 ], [ %302, %629 ], [ %302, %644 ], [ %302, %638 ], [ %654, %650 ], [ %302, %465 ], [ %302, %471 ], [ %302, %486 ], [ %302, %480 ], [ %302, %498 ], [ %302, %504 ], [ %302, %519 ], [ %302, %513 ], [ %529, %525 ], [ %2973, %2969 ], [ %302, %2958 ], [ %302, %2884 ], [ %302, %2898 ], [ %2905, %2901 ], [ %302, %2848 ], [ %302, %2861 ], [ %2869, %2865 ], [ %302, %2811 ], [ %302, %2797 ], [ %302, %2809 ], [ %302, %2743 ], [ %302, %2769 ], [ %302, %2780 ], [ %302, %2716 ], [ %302, %2703 ], [ %302, %2714 ], [ %302, %2649 ], [ %302, %2674 ], [ %302, %2686 ]
  %2993 = phi i64 [ %303, %1198 ], [ %1208, %1202 ], [ %303, %1175 ], [ %1174, %1187 ], [ %1171, %1160 ], [ %1227, %1221 ], [ %965, %959 ], [ %303, %591 ], [ %303, %597 ], [ %303, %612 ], [ %303, %606 ], [ %303, %623 ], [ %303, %629 ], [ %303, %644 ], [ %303, %638 ], [ %656, %650 ], [ %303, %465 ], [ %303, %471 ], [ %303, %486 ], [ %303, %480 ], [ %303, %498 ], [ %303, %504 ], [ %303, %519 ], [ %303, %513 ], [ %531, %525 ], [ %2975, %2969 ], [ %2960, %2958 ], [ %303, %2884 ], [ %303, %2898 ], [ %2907, %2901 ], [ %303, %2848 ], [ %303, %2861 ], [ %2871, %2865 ], [ %2832, %2811 ], [ %303, %2797 ], [ %2796, %2809 ], [ %303, %2743 ], [ %303, %2769 ], [ %2768, %2780 ], [ %2737, %2716 ], [ %303, %2703 ], [ %2702, %2714 ], [ %303, %2649 ], [ %303, %2674 ], [ %2673, %2686 ]
  %2994 = phi i32 [ %304, %1198 ], [ %1218, %1202 ], [ %304, %1175 ], [ %304, %1187 ], [ %304, %1160 ], [ %1237, %1221 ], [ %975, %959 ], [ %411, %591 ], [ %411, %597 ], [ %411, %612 ], [ %411, %606 ], [ %411, %623 ], [ %411, %629 ], [ %411, %644 ], [ %411, %638 ], [ %666, %650 ], [ %411, %465 ], [ %411, %471 ], [ %411, %486 ], [ %411, %480 ], [ %411, %498 ], [ %411, %504 ], [ %411, %519 ], [ %411, %513 ], [ %541, %525 ], [ %2985, %2969 ], [ %304, %2958 ], [ %304, %2884 ], [ %304, %2898 ], [ %2917, %2901 ], [ %304, %2848 ], [ %304, %2861 ], [ %2881, %2865 ], [ %304, %2811 ], [ %304, %2797 ], [ %304, %2809 ], [ %304, %2743 ], [ %304, %2769 ], [ %304, %2780 ], [ %304, %2716 ], [ %304, %2703 ], [ %304, %2714 ], [ %304, %2649 ], [ %304, %2674 ], [ %304, %2686 ]
  %2995 = phi i32 [ %305, %1198 ], [ %1203, %1202 ], [ %1184, %1175 ], [ %305, %1187 ], [ %1169, %1160 ], [ %1222, %1221 ], [ %960, %959 ], [ %584, %591 ], [ %584, %597 ], [ %584, %612 ], [ %584, %606 ], [ %412, %623 ], [ %412, %629 ], [ %412, %644 ], [ %412, %638 ], [ %651, %650 ], [ %459, %465 ], [ %459, %471 ], [ %459, %486 ], [ %459, %480 ], [ %412, %498 ], [ %412, %504 ], [ %412, %519 ], [ %412, %513 ], [ %526, %525 ], [ %2970, %2969 ], [ %305, %2958 ], [ %2893, %2884 ], [ %305, %2898 ], [ %2902, %2901 ], [ %2857, %2848 ], [ %305, %2861 ], [ %2866, %2865 ], [ %2830, %2811 ], [ %2806, %2797 ], [ %2794, %2809 ], [ %2763, %2743 ], [ %2778, %2769 ], [ %305, %2780 ], [ %2735, %2716 ], [ %2712, %2703 ], [ %2700, %2714 ], [ %2669, %2649 ], [ %2683, %2674 ], [ %305, %2686 ]
  %2996 = phi i32 [ -3, %1198 ], [ %1216, %1202 ], [ -3, %1175 ], [ %1108, %1187 ], [ %1108, %1160 ], [ %1235, %1221 ], [ %973, %959 ], [ %596, %591 ], [ %602, %597 ], [ %615, %612 ], [ %611, %606 ], [ %628, %623 ], [ %634, %629 ], [ %647, %644 ], [ %643, %638 ], [ %664, %650 ], [ %470, %465 ], [ %476, %471 ], [ %489, %486 ], [ %485, %480 ], [ %503, %498 ], [ %509, %504 ], [ %522, %519 ], [ %518, %513 ], [ %539, %525 ], [ %2983, %2969 ], [ %2959, %2958 ], [ %1817, %2884 ], [ %1817, %2898 ], [ %2915, %2901 ], [ %1817, %2848 ], [ %1817, %2861 ], [ %2879, %2865 ], [ %2545, %2811 ], [ %1817, %2797 ], [ %2545, %2809 ], [ %1817, %2743 ], [ %1817, %2769 ], [ %2545, %2780 ], [ %2545, %2716 ], [ %1817, %2703 ], [ %2545, %2714 ], [ %1817, %2649 ], [ %1817, %2674 ], [ %2545, %2686 ]
  br label %296

2997:                                             ; preds = %523, %648, %957, %1200, %1219, %2863, %2899, %2967
  %2998 = phi i32 [ %299, %523 ], [ %299, %648 ], [ %299, %957 ], [ %1189, %1200 ], [ %299, %1219 ], [ %2841, %2863 ], [ %2841, %2899 ], [ %2962, %2967 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %200) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #3
  call void @llvm.lifetime.end.p0i8(i64 3584, i8* nonnull %68) #3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65)
  %2999 = icmp eq i32 %2998, 0
  br i1 %2999, label %3002, label %3000

3000:                                             ; preds = %2997
  %3001 = add nsw i32 %2998, %226
  br label %3008

3002:                                             ; preds = %2997
  %3003 = sub i64 %225, %261
  %3004 = trunc i64 %3003 to i32
  br label %3008

3005:                                             ; preds = %250
  %3006 = icmp eq i64 %262, 1
  %3007 = sext i1 %3006 to i32
  br label %3008

3008:                                             ; preds = %3002, %3000, %3005, %236
  %3009 = phi i32 [ %223, %236 ], [ %297, %3002 ], [ %297, %3000 ], [ %223, %3005 ]
  %3010 = phi i32 [ %224, %236 ], [ %298, %3002 ], [ %298, %3000 ], [ %224, %3005 ]
  %3011 = phi i64 [ %238, %236 ], [ %261, %3002 ], [ %261, %3000 ], [ %261, %3005 ]
  %3012 = phi i32 [ %226, %236 ], [ %226, %3002 ], [ %3001, %3000 ], [ %226, %3005 ]
  %3013 = phi i32 [ %239, %236 ], [ %3004, %3002 ], [ 0, %3000 ], [ %3007, %3005 ]
  %3014 = icmp ult i64 %3011, %214
  br i1 %3014, label %222, label %3015

3015:                                             ; preds = %3008
  %3016 = icmp eq i32 %3013, 0
  br i1 %3016, label %3026, label %3017

3017:                                             ; preds = %3015
  %3018 = sext i32 %3013 to i64
  %3019 = add i64 %3011, %3018
  %3020 = lshr i64 %3019, 18
  %3021 = and i64 %3019, 262143
  %3022 = load i32**, i32*** %50, align 8
  %3023 = getelementptr inbounds i32*, i32** %3022, i64 %3020
  %3024 = load i32*, i32** %3023, align 8
  %3025 = getelementptr inbounds i32, i32* %3024, i64 %3021
  store i32 %3013, i32* %3025, align 4
  br label %3026

3026:                                             ; preds = %3015, %3017
  %3027 = icmp eq i32 %3012, 0
  br i1 %3027, label %3037, label %3028

3028:                                             ; preds = %3026
  %3029 = shl i64 %216, 1
  %3030 = sub i64 %3029, %1
  %3031 = load i32**, i32*** %50, align 8
  %3032 = getelementptr inbounds i32*, i32** %3031, i64 %48
  %3033 = load i32*, i32** %3032, align 8
  %3034 = getelementptr inbounds i32, i32* %3033, i64 %49
  %3035 = load i32, i32* %3034, align 4
  %3036 = icmp sgt i32 %3035, %47
  br i1 %3036, label %215, label %3037

3037:                                             ; preds = %3028, %3026, %45
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @_ZN6divsuf12_GLOBAL__N_112tr_partitionEN9courgette19PagedArray_iteratorIKNS1_10PagedArrayIiLi18EEEKiEENS2_IS4_iEES8_S8_PS8_S9_i(%"class.courgette::PagedArray"*, i64, %"class.courgette::PagedArray"*, i64, %"class.courgette::PagedArray"*, i64, %"class.courgette::PagedArray_iterator"* nocapture byval(%"class.courgette::PagedArray_iterator") align 8, %"class.courgette::PagedArray_iterator"* nocapture, %"class.courgette::PagedArray_iterator"* nocapture, i32) unnamed_addr #2 {
  %11 = add i64 %5, -1
  %12 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %6, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %4, i64 0, i32 0
  %15 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %0, i64 0, i32 0
  br label %16

16:                                               ; preds = %20, %10
  %17 = phi i64 [ %11, %10 ], [ %18, %20 ]
  %18 = add i64 %17, 1
  %19 = icmp ult i64 %18, %13
  br i1 %19, label %20, label %101

20:                                               ; preds = %16
  %21 = lshr i64 %18, 18
  %22 = and i64 %18, 262143
  %23 = load i32**, i32*** %14, align 8
  %24 = getelementptr inbounds i32*, i32** %23, i64 %21
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 %22
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = add i64 %28, %1
  %30 = lshr i64 %29, 18
  %31 = and i64 %29, 262143
  %32 = load i32**, i32*** %15, align 8
  %33 = getelementptr inbounds i32*, i32** %32, i64 %30
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 %31
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, %9
  br i1 %37, label %16, label %38

38:                                               ; preds = %20
  %39 = icmp slt i32 %36, %9
  br i1 %39, label %40, label %101

40:                                               ; preds = %38
  %41 = add i64 %17, 2
  %42 = icmp ult i64 %41, %13
  br i1 %42, label %43, label %101

43:                                               ; preds = %40
  %44 = lshr i64 %41, 18
  %45 = and i64 %41, 262143
  %46 = getelementptr inbounds i32*, i32** %23, i64 %44
  %47 = load i32*, i32** %46, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 %45
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = add i64 %50, %1
  %52 = lshr i64 %51, 18
  %53 = and i64 %51, 262143
  %54 = getelementptr inbounds i32*, i32** %32, i64 %52
  %55 = load i32*, i32** %54, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 %53
  %57 = load i32, i32* %56, align 4
  %58 = icmp sgt i32 %57, %9
  br i1 %58, label %101, label %59

59:                                               ; preds = %43, %83
  %60 = phi i32 [ %99, %83 ], [ %57, %43 ]
  %61 = phi i32 [ %91, %83 ], [ %49, %43 ]
  %62 = phi i32* [ %90, %83 ], [ %48, %43 ]
  %63 = phi i64 [ %80, %83 ], [ %18, %43 ]
  %64 = phi i64 [ %81, %83 ], [ %41, %43 ]
  %65 = phi i32** [ %84, %83 ], [ %23, %43 ]
  %66 = icmp eq i32 %60, %9
  br i1 %66, label %67, label %79

67:                                               ; preds = %59
  %68 = lshr i64 %63, 18
  %69 = and i64 %63, 262143
  %70 = getelementptr inbounds i32*, i32** %65, i64 %68
  %71 = load i32*, i32** %70, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 %69
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %62, align 4
  %74 = load i32**, i32*** %14, align 8
  %75 = getelementptr inbounds i32*, i32** %74, i64 %68
  %76 = load i32*, i32** %75, align 8
  %77 = getelementptr inbounds i32, i32* %76, i64 %69
  store i32 %61, i32* %77, align 4
  %78 = add i64 %63, 1
  br label %79

79:                                               ; preds = %67, %59
  %80 = phi i64 [ %78, %67 ], [ %63, %59 ]
  %81 = add i64 %64, 1
  %82 = icmp eq i64 %81, %13
  br i1 %82, label %101, label %83

83:                                               ; preds = %79
  %84 = load i32**, i32*** %14, align 8
  %85 = load i32**, i32*** %15, align 8
  %86 = lshr i64 %81, 18
  %87 = and i64 %81, 262143
  %88 = getelementptr inbounds i32*, i32** %84, i64 %86
  %89 = load i32*, i32** %88, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 %87
  %91 = load i32, i32* %90, align 4
  %92 = sext i32 %91 to i64
  %93 = add i64 %92, %1
  %94 = lshr i64 %93, 18
  %95 = and i64 %93, 262143
  %96 = getelementptr inbounds i32*, i32** %85, i64 %94
  %97 = load i32*, i32** %96, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %95
  %99 = load i32, i32* %98, align 4
  %100 = icmp sgt i32 %99, %9
  br i1 %100, label %101, label %59

101:                                              ; preds = %16, %79, %83, %43, %40, %38
  %102 = phi i64 [ %18, %38 ], [ %18, %40 ], [ %18, %43 ], [ %80, %83 ], [ %80, %79 ], [ %18, %16 ]
  %103 = phi i64 [ %18, %38 ], [ %41, %40 ], [ %41, %43 ], [ %81, %83 ], [ %13, %79 ], [ %18, %16 ]
  %104 = bitcast %"class.courgette::PagedArray_iterator"* %6 to i8*
  %105 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %6, i64 0, i32 0
  %106 = load %"class.courgette::PagedArray"*, %"class.courgette::PagedArray"** %105, align 8
  %107 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %106, i64 0, i32 0
  br label %108

108:                                              ; preds = %112, %101
  %109 = phi i64 [ %13, %101 ], [ %110, %112 ]
  %110 = add i64 %109, -1
  %111 = icmp ult i64 %103, %110
  br i1 %111, label %112, label %193

112:                                              ; preds = %108
  %113 = lshr i64 %110, 18
  %114 = and i64 %110, 262143
  %115 = load i32**, i32*** %107, align 8
  %116 = getelementptr inbounds i32*, i32** %115, i64 %113
  %117 = load i32*, i32** %116, align 8
  %118 = getelementptr inbounds i32, i32* %117, i64 %114
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = add i64 %120, %1
  %122 = lshr i64 %121, 18
  %123 = and i64 %121, 262143
  %124 = load i32**, i32*** %15, align 8
  %125 = getelementptr inbounds i32*, i32** %124, i64 %122
  %126 = load i32*, i32** %125, align 8
  %127 = getelementptr inbounds i32, i32* %126, i64 %123
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, %9
  br i1 %129, label %108, label %130

130:                                              ; preds = %112
  %131 = icmp sgt i32 %128, %9
  br i1 %131, label %132, label %193

132:                                              ; preds = %130
  %133 = add i64 %109, -2
  %134 = icmp ult i64 %103, %133
  br i1 %134, label %135, label %193

135:                                              ; preds = %132
  %136 = lshr i64 %133, 18
  %137 = and i64 %133, 262143
  %138 = getelementptr inbounds i32*, i32** %115, i64 %136
  %139 = load i32*, i32** %138, align 8
  %140 = getelementptr inbounds i32, i32* %139, i64 %137
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = add i64 %142, %1
  %144 = lshr i64 %143, 18
  %145 = and i64 %143, 262143
  %146 = getelementptr inbounds i32*, i32** %124, i64 %144
  %147 = load i32*, i32** %146, align 8
  %148 = getelementptr inbounds i32, i32* %147, i64 %145
  %149 = load i32, i32* %148, align 4
  %150 = icmp slt i32 %149, %9
  br i1 %150, label %193, label %151

151:                                              ; preds = %135, %175
  %152 = phi i32 [ %191, %175 ], [ %149, %135 ]
  %153 = phi i32 [ %183, %175 ], [ %141, %135 ]
  %154 = phi i32* [ %182, %175 ], [ %140, %135 ]
  %155 = phi i64 [ %172, %175 ], [ %110, %135 ]
  %156 = phi i64 [ %173, %175 ], [ %133, %135 ]
  %157 = phi i32** [ %176, %175 ], [ %115, %135 ]
  %158 = icmp eq i32 %152, %9
  br i1 %158, label %159, label %171

159:                                              ; preds = %151
  %160 = lshr i64 %155, 18
  %161 = and i64 %155, 262143
  %162 = getelementptr inbounds i32*, i32** %157, i64 %160
  %163 = load i32*, i32** %162, align 8
  %164 = getelementptr inbounds i32, i32* %163, i64 %161
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %154, align 4
  %166 = load i32**, i32*** %107, align 8
  %167 = getelementptr inbounds i32*, i32** %166, i64 %160
  %168 = load i32*, i32** %167, align 8
  %169 = getelementptr inbounds i32, i32* %168, i64 %161
  store i32 %153, i32* %169, align 4
  %170 = add i64 %155, -1
  br label %171

171:                                              ; preds = %159, %151
  %172 = phi i64 [ %170, %159 ], [ %155, %151 ]
  %173 = add i64 %156, -1
  %174 = icmp ult i64 %103, %173
  br i1 %174, label %175, label %193

175:                                              ; preds = %171
  %176 = load i32**, i32*** %107, align 8
  %177 = load i32**, i32*** %15, align 8
  %178 = lshr i64 %173, 18
  %179 = and i64 %173, 262143
  %180 = getelementptr inbounds i32*, i32** %176, i64 %178
  %181 = load i32*, i32** %180, align 8
  %182 = getelementptr inbounds i32, i32* %181, i64 %179
  %183 = load i32, i32* %182, align 4
  %184 = sext i32 %183 to i64
  %185 = add i64 %184, %1
  %186 = lshr i64 %185, 18
  %187 = and i64 %185, 262143
  %188 = getelementptr inbounds i32*, i32** %177, i64 %186
  %189 = load i32*, i32** %188, align 8
  %190 = getelementptr inbounds i32, i32* %189, i64 %187
  %191 = load i32, i32* %190, align 4
  %192 = icmp slt i32 %191, %9
  br i1 %192, label %193, label %151

193:                                              ; preds = %108, %175, %171, %135, %132, %130
  %194 = phi i64 [ %110, %130 ], [ %133, %132 ], [ %133, %135 ], [ %173, %171 ], [ %173, %175 ], [ %110, %108 ]
  %195 = phi i64 [ %110, %130 ], [ %110, %132 ], [ %110, %135 ], [ %172, %171 ], [ %172, %175 ], [ %110, %108 ]
  %196 = icmp ult i64 %103, %194
  br i1 %196, label %197, label %307

197:                                              ; preds = %193, %303
  %198 = phi i64 [ %304, %303 ], [ %195, %193 ]
  %199 = phi i64 [ %305, %303 ], [ %194, %193 ]
  %200 = phi i64 [ %262, %303 ], [ %103, %193 ]
  %201 = phi i64 [ %261, %303 ], [ %102, %193 ]
  %202 = lshr i64 %200, 18
  %203 = and i64 %200, 262143
  %204 = load i32**, i32*** %14, align 8
  %205 = getelementptr inbounds i32*, i32** %204, i64 %202
  %206 = load i32*, i32** %205, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 %203
  %208 = load i32, i32* %207, align 4
  %209 = lshr i64 %199, 18
  %210 = and i64 %199, 262143
  %211 = load i32**, i32*** %107, align 8
  %212 = getelementptr inbounds i32*, i32** %211, i64 %209
  %213 = load i32*, i32** %212, align 8
  %214 = getelementptr inbounds i32, i32* %213, i64 %210
  %215 = load i32, i32* %214, align 4
  store i32 %215, i32* %207, align 4
  %216 = load i32**, i32*** %107, align 8
  %217 = getelementptr inbounds i32*, i32** %216, i64 %209
  %218 = load i32*, i32** %217, align 8
  %219 = getelementptr inbounds i32, i32* %218, i64 %210
  store i32 %208, i32* %219, align 4
  %220 = add nuw i64 %200, 1
  %221 = icmp ult i64 %220, %199
  br i1 %221, label %222, label %260

222:                                              ; preds = %197, %256
  %223 = phi i64 [ %258, %256 ], [ %220, %197 ]
  %224 = phi i64 [ %257, %256 ], [ %201, %197 ]
  %225 = lshr i64 %223, 18
  %226 = and i64 %223, 262143
  %227 = load i32**, i32*** %14, align 8
  %228 = getelementptr inbounds i32*, i32** %227, i64 %225
  %229 = load i32*, i32** %228, align 8
  %230 = getelementptr inbounds i32, i32* %229, i64 %226
  %231 = load i32, i32* %230, align 4
  %232 = sext i32 %231 to i64
  %233 = add i64 %232, %1
  %234 = lshr i64 %233, 18
  %235 = and i64 %233, 262143
  %236 = load i32**, i32*** %15, align 8
  %237 = getelementptr inbounds i32*, i32** %236, i64 %234
  %238 = load i32*, i32** %237, align 8
  %239 = getelementptr inbounds i32, i32* %238, i64 %235
  %240 = load i32, i32* %239, align 4
  %241 = icmp sgt i32 %240, %9
  br i1 %241, label %260, label %242

242:                                              ; preds = %222
  %243 = icmp eq i32 %240, %9
  br i1 %243, label %244, label %256

244:                                              ; preds = %242
  %245 = lshr i64 %224, 18
  %246 = and i64 %224, 262143
  %247 = getelementptr inbounds i32*, i32** %227, i64 %245
  %248 = load i32*, i32** %247, align 8
  %249 = getelementptr inbounds i32, i32* %248, i64 %246
  %250 = load i32, i32* %249, align 4
  store i32 %250, i32* %230, align 4
  %251 = load i32**, i32*** %14, align 8
  %252 = getelementptr inbounds i32*, i32** %251, i64 %245
  %253 = load i32*, i32** %252, align 8
  %254 = getelementptr inbounds i32, i32* %253, i64 %246
  store i32 %231, i32* %254, align 4
  %255 = add i64 %224, 1
  br label %256

256:                                              ; preds = %244, %242
  %257 = phi i64 [ %255, %244 ], [ %224, %242 ]
  %258 = add i64 %223, 1
  %259 = icmp eq i64 %258, %199
  br i1 %259, label %260, label %222

260:                                              ; preds = %222, %256, %197
  %261 = phi i64 [ %201, %197 ], [ %224, %222 ], [ %257, %256 ]
  %262 = phi i64 [ %220, %197 ], [ %223, %222 ], [ %199, %256 ]
  %263 = add i64 %199, -1
  %264 = icmp ult i64 %262, %263
  br i1 %264, label %265, label %303

265:                                              ; preds = %260, %299
  %266 = phi i64 [ %301, %299 ], [ %263, %260 ]
  %267 = phi i64 [ %300, %299 ], [ %198, %260 ]
  %268 = lshr i64 %266, 18
  %269 = and i64 %266, 262143
  %270 = load i32**, i32*** %107, align 8
  %271 = getelementptr inbounds i32*, i32** %270, i64 %268
  %272 = load i32*, i32** %271, align 8
  %273 = getelementptr inbounds i32, i32* %272, i64 %269
  %274 = load i32, i32* %273, align 4
  %275 = sext i32 %274 to i64
  %276 = add i64 %275, %1
  %277 = lshr i64 %276, 18
  %278 = and i64 %276, 262143
  %279 = load i32**, i32*** %15, align 8
  %280 = getelementptr inbounds i32*, i32** %279, i64 %277
  %281 = load i32*, i32** %280, align 8
  %282 = getelementptr inbounds i32, i32* %281, i64 %278
  %283 = load i32, i32* %282, align 4
  %284 = icmp slt i32 %283, %9
  br i1 %284, label %303, label %285

285:                                              ; preds = %265
  %286 = icmp eq i32 %283, %9
  br i1 %286, label %287, label %299

287:                                              ; preds = %285
  %288 = lshr i64 %267, 18
  %289 = and i64 %267, 262143
  %290 = getelementptr inbounds i32*, i32** %270, i64 %288
  %291 = load i32*, i32** %290, align 8
  %292 = getelementptr inbounds i32, i32* %291, i64 %289
  %293 = load i32, i32* %292, align 4
  store i32 %293, i32* %273, align 4
  %294 = load i32**, i32*** %107, align 8
  %295 = getelementptr inbounds i32*, i32** %294, i64 %288
  %296 = load i32*, i32** %295, align 8
  %297 = getelementptr inbounds i32, i32* %296, i64 %289
  store i32 %274, i32* %297, align 4
  %298 = add i64 %267, -1
  br label %299

299:                                              ; preds = %287, %285
  %300 = phi i64 [ %298, %287 ], [ %267, %285 ]
  %301 = add i64 %266, -1
  %302 = icmp ult i64 %262, %301
  br i1 %302, label %265, label %303

303:                                              ; preds = %299, %265, %260
  %304 = phi i64 [ %198, %260 ], [ %267, %265 ], [ %300, %299 ]
  %305 = phi i64 [ %263, %260 ], [ %266, %265 ], [ %301, %299 ]
  %306 = icmp ult i64 %262, %305
  br i1 %306, label %197, label %307

307:                                              ; preds = %303, %193
  %308 = phi i64 [ %102, %193 ], [ %261, %303 ]
  %309 = phi i64 [ %103, %193 ], [ %262, %303 ]
  %310 = phi i64 [ %195, %193 ], [ %304, %303 ]
  %311 = icmp ugt i64 %308, %310
  br i1 %311, label %392, label %312

312:                                              ; preds = %307
  %313 = sub i64 %308, %3
  %314 = trunc i64 %313 to i32
  %315 = sub i64 %309, %308
  %316 = trunc i64 %315 to i32
  %317 = icmp sgt i32 %314, %316
  %318 = select i1 %317, i32 %316, i32 %314
  %319 = icmp sgt i32 %318, 0
  br i1 %319, label %320, label %350

320:                                              ; preds = %312
  %321 = sext i32 %318 to i64
  %322 = sub i64 %309, %321
  %323 = getelementptr inbounds %"class.courgette::PagedArray", %"class.courgette::PagedArray"* %2, i64 0, i32 0
  br label %324

324:                                              ; preds = %320, %324
  %325 = phi i32 [ %318, %320 ], [ %346, %324 ]
  %326 = phi i64 [ %322, %320 ], [ %348, %324 ]
  %327 = phi i64 [ %3, %320 ], [ %347, %324 ]
  %328 = lshr i64 %327, 18
  %329 = and i64 %327, 262143
  %330 = load i32**, i32*** %323, align 8
  %331 = getelementptr inbounds i32*, i32** %330, i64 %328
  %332 = load i32*, i32** %331, align 8
  %333 = getelementptr inbounds i32, i32* %332, i64 %329
  %334 = load i32, i32* %333, align 4
  %335 = lshr i64 %326, 18
  %336 = and i64 %326, 262143
  %337 = load i32**, i32*** %14, align 8
  %338 = getelementptr inbounds i32*, i32** %337, i64 %335
  %339 = load i32*, i32** %338, align 8
  %340 = getelementptr inbounds i32, i32* %339, i64 %336
  %341 = load i32, i32* %340, align 4
  store i32 %341, i32* %333, align 4
  %342 = load i32**, i32*** %14, align 8
  %343 = getelementptr inbounds i32*, i32** %342, i64 %335
  %344 = load i32*, i32** %343, align 8
  %345 = getelementptr inbounds i32, i32* %344, i64 %336
  store i32 %334, i32* %345, align 4
  %346 = add nsw i32 %325, -1
  %347 = add i64 %327, 1
  %348 = add i64 %326, 1
  %349 = icmp sgt i32 %346, 0
  br i1 %349, label %324, label %350

350:                                              ; preds = %324, %312
  %351 = sub i64 1, %309
  %352 = add i64 %351, %310
  %353 = trunc i64 %352 to i32
  %354 = sub i64 %13, %310
  %355 = trunc i64 %354 to i32
  %356 = add i32 %355, -1
  %357 = icmp slt i32 %356, %353
  %358 = select i1 %357, i32 %356, i32 %353
  %359 = icmp sgt i32 %358, 0
  br i1 %359, label %360, label %389

360:                                              ; preds = %350
  %361 = sext i32 %358 to i64
  %362 = sub i64 %13, %361
  br label %363

363:                                              ; preds = %360, %363
  %364 = phi i32 [ %358, %360 ], [ %385, %363 ]
  %365 = phi i64 [ %362, %360 ], [ %387, %363 ]
  %366 = phi i64 [ %309, %360 ], [ %386, %363 ]
  %367 = lshr i64 %366, 18
  %368 = and i64 %366, 262143
  %369 = load i32**, i32*** %14, align 8
  %370 = getelementptr inbounds i32*, i32** %369, i64 %367
  %371 = load i32*, i32** %370, align 8
  %372 = getelementptr inbounds i32, i32* %371, i64 %368
  %373 = load i32, i32* %372, align 4
  %374 = lshr i64 %365, 18
  %375 = and i64 %365, 262143
  %376 = load i32**, i32*** %107, align 8
  %377 = getelementptr inbounds i32*, i32** %376, i64 %374
  %378 = load i32*, i32** %377, align 8
  %379 = getelementptr inbounds i32, i32* %378, i64 %375
  %380 = load i32, i32* %379, align 4
  store i32 %380, i32* %372, align 4
  %381 = load i32**, i32*** %107, align 8
  %382 = getelementptr inbounds i32*, i32** %381, i64 %374
  %383 = load i32*, i32** %382, align 8
  %384 = getelementptr inbounds i32, i32* %383, i64 %375
  store i32 %373, i32* %384, align 4
  %385 = add nsw i32 %364, -1
  %386 = add i64 %366, 1
  %387 = add i64 %365, 1
  %388 = icmp sgt i32 %385, 0
  br i1 %388, label %363, label %389

389:                                              ; preds = %363, %350
  %390 = add i64 %315, %3
  %391 = sub i64 %13, %352
  store i64 %391, i64* %12, align 8
  br label %392

392:                                              ; preds = %307, %389
  %393 = phi i64 [ %390, %389 ], [ %3, %307 ]
  %394 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %7, i64 0, i32 0
  store %"class.courgette::PagedArray"* %2, %"class.courgette::PagedArray"** %394, align 8
  %395 = getelementptr inbounds %"class.courgette::PagedArray_iterator", %"class.courgette::PagedArray_iterator"* %7, i64 0, i32 1
  store i64 %393, i64* %395, align 8
  %396 = bitcast %"class.courgette::PagedArray_iterator"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %396, i8* nonnull align 8 %104, i64 16, i1 false)
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
