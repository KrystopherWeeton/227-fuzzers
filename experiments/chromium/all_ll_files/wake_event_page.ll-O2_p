; ModuleID = '../../extensions/renderer/wake_event_page.cc'
source_filename = "../../extensions/renderer/wake_event_page.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [96 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.extensions::WakeEventPage::RequestData" = type { i32, %"class.base::OnceCallback.213" }
%"class.base::OnceCallback.213" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.178", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.178" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.extensions::WakeEventPage" = type { %"class.content::RenderThreadObserver", %class.scoped_refptr, %"class.std::__1::unordered_map", %"class.base::Lock" }
%"class.content::RenderThreadObserver" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.IPC::SyncMessageFilter"* }
%"class.IPC::SyncMessageFilter" = type { %"class.IPC::MessageFilter.base", %"class.IPC::Sender", %"class.IPC::Channel"*, %class.scoped_refptr.1, %class.scoped_refptr.1, %"class.std::__1::set", %"class.std::__1::vector", %"class.base::Lock", %"class.base::WaitableEvent"* }
%"class.IPC::MessageFilter.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.IPC::Channel" = type <{ %"class.IPC::Sender", i8, [7 x i8] }>
%class.scoped_refptr.1 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2" }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::unique_ptr"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.12, i8, [7 x i8] }>
%class.scoped_refptr.12 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.13", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.18", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.33", [4 x i8] }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20", %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.content::RenderThread" = type { %"class.content::ChildThread" }
%"class.content::ChildThread" = type { %"class.IPC::Sender" }
%"class.IPC::MessageFilter" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.v8::Function" = type { i8 }
%"class.extensions::ScriptContext" = type <{ i8, [7 x i8], %"class.v8::Global", %"class.blink::WebLocalFrame"*, %class.scoped_refptr.37, i32, [4 x i8], %class.scoped_refptr.37, i32, [4 x i8], %"class.base::UnguessableToken", %"class.std::__1::unique_ptr.134", %"class.extensions::SafeBuiltins", %"class.extensions::APIPermissionSet", %"class.std::__1::vector.193", %"class.v8::Isolate"*, %class.GURL, %class.GURL, i64, %"class.base::ThreadChecker", [7 x i8] }>
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%"class.blink::WebLocalFrame" = type opaque
%class.scoped_refptr.37 = type { %"class.extensions::Extension"* }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe.38", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.58", %"class.std::__1::vector.64", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.84", %"class.std::__1::map", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe.38" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set.44" }
%"class.std::__1::set.44" = type { %"class.std::__1::__tree.45" }
%"class.std::__1::__tree.45" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.46", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.66" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.extensions::InstallWarning"* }
%"class.base::Version" = type { %"class.std::__1::vector.77" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { i32*, i32*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.87", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.90" }
%"union.absl::variant_internal::DestructibleUnionImpl.90" = type { %"union.absl::variant_internal::DestructibleUnionImpl.91" }
%"union.absl::variant_internal::DestructibleUnionImpl.91" = type { %"union.absl::variant_internal::DestructibleUnionImpl.92" }
%"union.absl::variant_internal::DestructibleUnionImpl.92" = type { %"union.absl::variant_internal::DestructibleUnionImpl.93" }
%"union.absl::variant_internal::DestructibleUnionImpl.93" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.125" }
%"class.std::__1::__tree.125" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.extensions::ModuleSystem"* }
%"class.extensions::ModuleSystem" = type { %"class.extensions::ObjectBackedNativeHandler", %"class.extensions::ScriptContext"*, %"class.extensions::SourceMap"*, %"class.std::__1::map.146", i32, %"class.std::__1::unique_ptr.155", %"class.std::__1::set.161", %"class.std::__1::vector.169", %"class.v8::Eternal", %"class.base::RepeatingCallback", %"class.std::__1::set.161" }
%"class.extensions::ObjectBackedNativeHandler" = type { %"class.extensions::NativeHandler.base", i32, %"class.v8::PersistentValueVector", %"class.extensions::ScriptContext"*, %"class.v8::Global.144" }
%"class.extensions::NativeHandler.base" = type <{ i32 (...)**, i8 }>
%"class.v8::PersistentValueVector" = type { %"class.v8::Isolate"*, %"class.std::__1::vector.137" }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { i64*, i64*, %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { i64* }
%"class.v8::Global.144" = type { %"class.v8::PersistentBase.145" }
%"class.v8::PersistentBase.145" = type { %"class.v8::ObjectTemplate"* }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.extensions::SourceMap" = type opaque
%"class.std::__1::map.146" = type { %"class.std::__1::__tree.147" }
%"class.std::__1::__tree.147" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.extensions::ModuleSystem::ExceptionHandler"* }
%"class.extensions::ModuleSystem::ExceptionHandler" = type { i32 (...)**, %"class.extensions::ScriptContext"* }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"class.std::__1::unique_ptr.171"*, %"class.std::__1::unique_ptr.171"*, %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::unique_ptr.171" = type opaque
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.std::__1::unique_ptr.171"* }
%"class.v8::Eternal" = type { %"class.v8::FunctionTemplate"* }
%"class.v8::FunctionTemplate" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::set.161" = type { %"class.std::__1::__tree.162" }
%"class.std::__1::__tree.162" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.extensions::SafeBuiltins" = type { %"class.extensions::ScriptContext"* }
%"class.extensions::APIPermissionSet" = type { %"class.extensions::BaseSetOperators" }
%"class.extensions::BaseSetOperators" = type { %"class.std::__1::map.182" }
%"class.std::__1::map.182" = type { %"class.std::__1::__tree.183" }
%"class.std::__1::__tree.183" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::vector.193" = type { %"class.std::__1::__vector_base.194" }
%"class.std::__1::__vector_base.194" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.195" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.base::OnceCallback"* }
%"class.v8::Isolate" = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.71" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.GURL* }
%"class.base::ThreadChecker" = type { i8 }
%"class.v8::EscapableHandleScope" = type { %"class.v8::HandleScope", i64* }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::internal::Isolate" = type opaque
%"class.base::RepeatingCallback.205" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.v8::String" = type { i8 }
%"class.v8::Private" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.206 }
%class.scoped_refptr.206 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.207", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.207" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.208" }
%"struct.std::__1::atomic.208" = type { %"struct.std::__1::__atomic_base.209" }
%"struct.std::__1::__atomic_base.209" = type { %"struct.std::__1::__atomic_base.210" }
%"struct.std::__1::__atomic_base.210" = type { %"struct.std::__1::__cxx_atomic_impl.211" }
%"struct.std::__1::__cxx_atomic_impl.211" = type { %"struct.std::__1::__cxx_atomic_base_impl.212" }
%"struct.std::__1::__cxx_atomic_base_impl.212" = type { i8 }
%"class.std::__1::tuple.253" = type { %"struct.std::__1::__tuple_impl.254" }
%"struct.std::__1::__tuple_impl.254" = type { %"class.std::__1::__tuple_leaf.255" }
%"class.std::__1::__tuple_leaf.255" = type { i32* }
%"class.std::__1::tuple.256" = type { i8 }
%"class.IPC::MessageT" = type { %"class.IPC::Message" }
%"class.IPC::Message" = type { %"class.base::Pickle", i8, %class.scoped_refptr.220 }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%class.scoped_refptr.220 = type { %"class.IPC::MessageAttachmentSet"* }
%"class.IPC::MessageAttachmentSet" = type opaque
%"class.base::TaskAnnotator::ScopedSetIpcHash" = type { %"class.base::TaskAnnotator::ScopedSetIpcHash"*, i32, i8* }
%"struct.IPC::Message::Header" = type { %"struct.base::Pickle::Header", i32, i32, i32, i16, i16 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::tuple.262" = type { %"struct.std::__1::__tuple_impl.263" }
%"struct.std::__1::__tuple_impl.263" = type <{ %"class.std::__1::__tuple_leaf.264", %"class.std::__1::__tuple_leaf.265", [3 x i8] }>
%"class.std::__1::__tuple_leaf.264" = type { i32 }
%"class.std::__1::__tuple_leaf.265" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259", %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.221" }
%"struct.std::__1::pair.221" = type { i32, %"class.std::__1::unique_ptr.214" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.extensions::WakeEventPage::RequestData"* }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.29"*, i8, [7 x i8] }>
%"class.std::__1::allocator.29" = type { i8 }
%"class.blink::AssociatedInterfaceRegistry" = type opaque
%"class.extensions::WakeEventPage::WakeEventPageNativeHandler" = type { %"class.extensions::ObjectBackedNativeHandler", %"class.base::RepeatingCallback.205", %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::RepeatingCallback.227" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.231 }
%class.scoped_refptr.231 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.v8::Global.229" = type { %"class.v8::PersistentBase.230" }
%"class.v8::PersistentBase.230" = type { %"class.v8::Function"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.v8::Local.203" = type { %"class.v8::Value"* }
%"class.v8::Local" = type { %"class.v8::Function"* }
%"class.v8::Boolean" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN3IPC8MessageTI39ExtensionMsg_WakeEventPageResponse_MetaNSt3__15tupleIJibEEEvE8DispatchIN10extensions13WakeEventPageES8_vMS8_FvibEEEbPKNS_7MessageEPT_PT0_PT1_T2_ = comdat any

$_ZN7content20RenderThreadObserver22RegisterMojoInterfacesEPN5blink27AssociatedInterfaceRegistryE = comdat any

$_ZN7content20RenderThreadObserver24UnregisterMojoInterfacesEPN5blink27AssociatedInterfaceRegistryE = comdat any

$_ZN7content20RenderThreadObserver17PluginListChangedEv = comdat any

$_ZN10extensions13WakeEventPage26WakeEventPageNativeHandler10DeleteSelfEv = comdat any

$_ZN10extensions13WakeEventPage26WakeEventPageNativeHandlerD2Ev = comdat any

$_ZN10extensions13WakeEventPage26WakeEventPageNativeHandlerD0Ev = comdat any

$_ZN10extensions13WakeEventPage26WakeEventPageNativeHandler9AddRoutesEv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN10extensions13WakeEventPage26WakeEventPageNativeHandler15DoWakeEventPageERKN2v820FunctionCallbackInfoINS2_5ValueEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvRKN2v820FunctionCallbackInfoINS6_5ValueEEEEJNS0_17UnretainedWrapperIS5_EEEEEFvSB_EE3RunEPNS0_13BindStateBaseESB_ = comdat any

$_ZN4base8internal9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvRKN2v820FunctionCallbackInfoINS5_5ValueEEEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN10extensions13WakeEventPage26WakeEventPageNativeHandler18OnEventPageIsAwakeEN2v86GlobalINS2_8FunctionEEEb = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS6_8FunctionEEEbEJNS_7WeakPtrIS5_EES9_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb = comdat any

$_ZN4base8internal13FunctorTraitsIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS5_8FunctionEEEbEvE6InvokeISA_NS_7WeakPtrIS4_EEJS8_bEEEvT_OT0_DpOT1_ = comdat any

$_ZN4base8internal9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS5_8FunctionEEEbEJNS_7WeakPtrIS4_EES8_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS6_8FunctionEEEbEJNS_7WeakPtrIS5_EES9_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base12LazyInstanceIN10extensions13WakeEventPageENS_8internal34DestructorAtExitLazyInstanceTraitsIS2_EEE6OnExitEPv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions13WakeEventPageEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_12OnceCallbackIFvbEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvSD_SG_EE3RunEPNS0_13BindStateBaseESD_OSG_ = comdat any

$_ZN4base8internal9BindStateIMN10extensions13WakeEventPageEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS_12OnceCallbackIFvbEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_PvEEEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvbEEEJbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateINS_12OnceCallbackIFvbEEEJbEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvbEEEJbEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE = comdat any

$_ZTVN10extensions13WakeEventPage26WakeEventPageNativeHandlerE = comdat any

@_ZN10extensions12_GLOBAL__N_126g_wake_event_page_instanceE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@.str = private constant [14 x i8] c"WakeEventPage\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"../../extensions/renderer/wake_event_page.cc\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"wake_event_page->IsFunction()\00", align 1
@_ZTVN10extensions13WakeEventPageE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::WakeEventPage"*)* @_ZN10extensions13WakeEventPageD2Ev to i8*), i8* bitcast (void (%"class.extensions::WakeEventPage"*)* @_ZN10extensions13WakeEventPageD0Ev to i8*), i8* bitcast (void (%"class.content::RenderThreadObserver"*, %"class.blink::AssociatedInterfaceRegistry"*)* @_ZN7content20RenderThreadObserver22RegisterMojoInterfacesEPN5blink27AssociatedInterfaceRegistryE to i8*), i8* bitcast (void (%"class.content::RenderThreadObserver"*, %"class.blink::AssociatedInterfaceRegistry"*)* @_ZN7content20RenderThreadObserver24UnregisterMojoInterfacesEPN5blink27AssociatedInterfaceRegistryE to i8*), i8* bitcast (i1 (%"class.extensions::WakeEventPage"*, %"class.IPC::Message"*)* @_ZN10extensions13WakeEventPage24OnControlMessageReceivedERKN3IPC7MessageE to i8*), i8* bitcast (void (%"class.content::RenderThreadObserver"*)* @_ZN7content20RenderThreadObserver17PluginListChangedEv to i8*)] }, align 8
@_ZZN10extensions13WakeEventPage11MakeRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base12OnceCallbackIFvbEEEE15sequence_number = internal global { { { i32 } } } zeroinitializer, align 4
@.str.3 = private unnamed_addr constant [22 x i8] c"it != requests_.end()\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"No request with ID \00", align 1
@_ZTVN10extensions13WakeEventPage26WakeEventPageNativeHandlerE = linkonce_odr hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)* @_ZN10extensions13WakeEventPage26WakeEventPageNativeHandlerD2Ev to i8*), i8* bitcast (void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)* @_ZN10extensions13WakeEventPage26WakeEventPageNativeHandlerD0Ev to i8*), i8* bitcast (void (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandler10InitializeEv to i8*), i8* bitcast (i1 (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandler13IsInitializedEv to i8*), i8* bitcast (%"class.v8::Object"* (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandler11NewInstanceEv to i8*), i8* bitcast (void (%"class.extensions::ObjectBackedNativeHandler"*)* @_ZN10extensions25ObjectBackedNativeHandler10InvalidateEv to i8*), i8* bitcast (void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)* @_ZN10extensions13WakeEventPage26WakeEventPageNativeHandler9AddRoutesEv to i8*)] }, comdat, align 8
@.str.6 = private unnamed_addr constant [19 x i8] c"1 == args.Length()\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"args[0]->IsFunction()\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"!extension_id.empty()\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@_ZN39ExtensionMsg_WakeEventPageResponse_Meta5kNameE = external constant [0 x i8], align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"../../base/bind_internal.h\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"!IsNull(functor_)\00", align 1

@_ZN10extensions13WakeEventPage11RequestDataC1EiN4base12OnceCallbackIFvbEEE = hidden unnamed_addr alias void (%"struct.extensions::WakeEventPage::RequestData"*, i32, %"class.base::OnceCallback.213"*), void (%"struct.extensions::WakeEventPage::RequestData"*, i32, %"class.base::OnceCallback.213"*)* @_ZN10extensions13WakeEventPage11RequestDataC2EiN4base12OnceCallbackIFvbEEE
@_ZN10extensions13WakeEventPage11RequestDataD1Ev = hidden unnamed_addr alias void (%"struct.extensions::WakeEventPage::RequestData"*), void (%"struct.extensions::WakeEventPage::RequestData"*)* @_ZN10extensions13WakeEventPage11RequestDataD2Ev
@_ZN10extensions13WakeEventPageC1Ev = hidden unnamed_addr alias void (%"class.extensions::WakeEventPage"*), void (%"class.extensions::WakeEventPage"*)* @_ZN10extensions13WakeEventPageC2Ev
@_ZN10extensions13WakeEventPageD1Ev = hidden unnamed_addr alias void (%"class.extensions::WakeEventPage"*), void (%"class.extensions::WakeEventPage"*)* @_ZN10extensions13WakeEventPageD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::WakeEventPage"* @_ZN10extensions13WakeEventPage3GetEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_126g_wake_event_page_instanceE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_126g_wake_event_page_instanceE, i64 0, i32 0)) #9
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions13WakeEventPageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_126g_wake_event_page_instanceE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_126g_wake_event_page_instanceE, i64 0, i32 1, i64 8), i8 0, i64 40, i1 false) #9
  store i32 1065353216, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_126g_wake_event_page_instanceE, i64 0, i32 1, i64 48) to i32*), align 8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_126g_wake_event_page_instanceE, i64 0, i32 1, i64 56) to %"class.base::internal::LockImpl"*)) #9
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_126g_wake_event_page_instanceE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_126g_wake_event_page_instanceE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceIN10extensions13WakeEventPageENS_8internal34DestructorAtExitLazyInstanceTraitsIS2_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_126g_wake_event_page_instanceE to i8*)) #9
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_126g_wake_event_page_instanceE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN10extensions12_GLOBAL__N_126g_wake_event_page_instanceE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %"class.extensions::WakeEventPage"*
  ret %"class.extensions::WakeEventPage"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13WakeEventPage4InitEPN7content12RenderThreadE(%"class.extensions::WakeEventPage"*, %"class.content::RenderThread"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.content::RenderThread"* %1 to %"class.IPC::SyncMessageFilter"* (%"class.content::RenderThread"*)***
  %4 = load %"class.IPC::SyncMessageFilter"* (%"class.content::RenderThread"*)**, %"class.IPC::SyncMessageFilter"* (%"class.content::RenderThread"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.IPC::SyncMessageFilter"* (%"class.content::RenderThread"*)*, %"class.IPC::SyncMessageFilter"* (%"class.content::RenderThread"*)** %4, i64 10
  %6 = load %"class.IPC::SyncMessageFilter"* (%"class.content::RenderThread"*)*, %"class.IPC::SyncMessageFilter"* (%"class.content::RenderThread"*)** %5, align 8
  %7 = tail call %"class.IPC::SyncMessageFilter"* %6(%"class.content::RenderThread"* %1) #9
  %8 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 1
  %9 = icmp eq %"class.IPC::SyncMessageFilter"* %7, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.IPC::SyncMessageFilter", %"class.IPC::SyncMessageFilter"* %7, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %10, %2
  %14 = ptrtoint %"class.IPC::SyncMessageFilter"* %7 to i64
  %15 = bitcast %class.scoped_refptr* %8 to i64*
  %16 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %8, i64 0, i32 0
  %17 = load %"class.IPC::SyncMessageFilter"*, %"class.IPC::SyncMessageFilter"** %16, align 8
  store i64 %14, i64* %15, align 8
  %18 = icmp eq %"class.IPC::SyncMessageFilter"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.IPC::SyncMessageFilter", %"class.IPC::SyncMessageFilter"* %17, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe"* %25 to %"class.IPC::MessageFilter"*
  %27 = bitcast %"class.base::RefCountedThreadSafe"* %25 to void (%"class.IPC::MessageFilter"*)***
  %28 = load void (%"class.IPC::MessageFilter"*)**, void (%"class.IPC::MessageFilter"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.IPC::MessageFilter"*)*, void (%"class.IPC::MessageFilter"*)** %28, i64 8
  %30 = load void (%"class.IPC::MessageFilter"*)*, void (%"class.IPC::MessageFilter"*)** %29, align 8
  tail call void %30(%"class.IPC::MessageFilter"* nonnull %26) #9
  br label %31

31:                                               ; preds = %13, %19, %24
  %32 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 0
  %33 = bitcast %"class.content::RenderThread"* %1 to void (%"class.content::RenderThread"*, %"class.content::RenderThreadObserver"*)***
  %34 = load void (%"class.content::RenderThread"*, %"class.content::RenderThreadObserver"*)**, void (%"class.content::RenderThread"*, %"class.content::RenderThreadObserver"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.content::RenderThread"*, %"class.content::RenderThreadObserver"*)*, void (%"class.content::RenderThread"*, %"class.content::RenderThreadObserver"*)** %34, i64 18
  %36 = load void (%"class.content::RenderThread"*, %"class.content::RenderThreadObserver"*)*, void (%"class.content::RenderThread"*, %"class.content::RenderThreadObserver"*)** %35, align 8
  tail call void %36(%"class.content::RenderThread"* %1, %"class.content::RenderThreadObserver"* %32) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Function"* @_ZN10extensions13WakeEventPage13GetForContextEPNS_13ScriptContextE(%"class.extensions::WakeEventPage"*, %"class.extensions::ScriptContext"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.v8::EscapableHandleScope", align 8
  %5 = alloca %"class.base::RepeatingCallback.205", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %1, i64 0, i32 15
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = bitcast %"class.v8::EscapableHandleScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #9
  %10 = bitcast %"class.v8::EscapableHandleScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  call void @_ZN2v820EscapableHandleScopeC1EPNS_7IsolateE(%"class.v8::EscapableHandleScope"* nonnull %4, %"class.v8::Isolate"* %8) #9
  %11 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %1, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.v8::Context"*, %"class.v8::Context"** %11, align 8
  %13 = icmp eq %"class.v8::Context"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.v8::Isolate"** %7 to %"class.v8::internal::Isolate"**
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %17 = bitcast %"class.v8::Context"* %12 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %16, i64 %18) #9
  %20 = bitcast i64* %19 to %"class.v8::Context"*
  br label %21

21:                                               ; preds = %2, %14
  %22 = phi %"class.v8::Context"* [ %20, %14 ], [ null, %2 ]
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %22) #9
  %23 = call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 0, i32 -1) #9
  %24 = icmp eq %"class.v8::String"* %23, null
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %21
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %26

26:                                               ; preds = %21, %25
  %27 = call %"class.v8::Private"* @_ZN2v87Private6ForApiEPNS_7IsolateENS_5LocalINS_6StringEEE(%"class.v8::Isolate"* %8, %"class.v8::String"* %23) #9
  %28 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %22) #9
  %29 = call %"class.v8::Value"* @_ZN2v86Object10GetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEE(%"class.v8::Object"* %28, %"class.v8::Context"* %22, %"class.v8::Private"* %27) #9
  %30 = ptrtoint %"class.v8::Value"* %29 to i64
  %31 = icmp eq %"class.v8::Value"* %29, null
  br i1 %31, label %54, label %32

32:                                               ; preds = %26
  %33 = bitcast %"class.v8::Value"* %29 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, 3
  %36 = icmp eq i64 %35, 1
  br i1 %36, label %37, label %104

37:                                               ; preds = %32
  %38 = add i64 %34, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = and i64 %34, -4294967296
  %42 = zext i32 %40 to i64
  %43 = or i64 %41, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load i16, i16* %45, align 2
  %47 = icmp eq i16 %46, 67
  br i1 %47, label %48, label %104

48:                                               ; preds = %37
  %49 = add i64 %34, 23
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, -2
  %53 = icmp eq i32 %52, 10
  br i1 %53, label %54, label %104

54:                                               ; preds = %26, %48
  %55 = call i8* @_Znwm(i64 88) #10
  %56 = bitcast %"class.base::RepeatingCallback.205"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  %57 = ptrtoint %"class.extensions::WakeEventPage"* %0 to i64
  %58 = call i8* @_Znwm(i64 56) #10, !noalias !3
  %59 = bitcast i8* %58 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %59, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.213"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions13WakeEventPageEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_12OnceCallbackIFvbEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvSD_SG_EE3RunEPNS0_13BindStateBaseESD_OSG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10extensions13WakeEventPageEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS_12OnceCallbackIFvbEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !3
  %60 = getelementptr inbounds i8, i8* %58, i64 32
  %61 = bitcast i8* %60 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.extensions::WakeEventPage"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.213"*)* @_ZN10extensions13WakeEventPage11MakeRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base12OnceCallbackIFvbEEE to i64), i64 0>, <2 x i64>* %61, align 8, !noalias !3
  %62 = getelementptr inbounds i8, i8* %58, i64 48
  %63 = bitcast i8* %62 to i64*
  store i64 %57, i64* %63, align 8, !noalias !3
  %64 = bitcast %"class.base::RepeatingCallback.205"* %5 to i8**
  store i8* %58, i8** %64, align 8, !alias.scope !3
  %65 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65)
  %66 = bitcast i8* %55 to %"class.extensions::ObjectBackedNativeHandler"*
  call void @_ZN10extensions25ObjectBackedNativeHandlerC2EPNS_13ScriptContextE(%"class.extensions::ObjectBackedNativeHandler"* nonnull %66, %"class.extensions::ScriptContext"* %1) #9
  %67 = bitcast i8* %55 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions13WakeEventPage26WakeEventPageNativeHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds i8, i8* %55, i64 64
  %69 = bitcast i8* %68 to %"class.base::internal::CallbackBaseCopyable"*
  %70 = getelementptr inbounds %"class.base::RepeatingCallback.205", %"class.base::RepeatingCallback.205"* %5, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %69, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %70) #9
  %71 = getelementptr inbounds i8, i8* %55, i64 72
  %72 = bitcast i8* %71 to %"class.base::internal::WeakPtrFactoryBase"*
  %73 = ptrtoint i8* %55 to i64
  call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %72, i64 %73) #9
  %74 = call i8* @_Znwm(i64 56) #10, !noalias !8
  %75 = bitcast i8* %74 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %75, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !8
  %76 = getelementptr inbounds i8, i8* %74, i64 32
  %77 = bitcast i8* %76 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)* @_ZN10extensions13WakeEventPage26WakeEventPageNativeHandler10DeleteSelfEv to i64), i64 0>, <2 x i64>* %77, align 8, !noalias !8
  %78 = getelementptr inbounds i8, i8* %74, i64 48
  %79 = bitcast i8* %78 to i64*
  store i64 %73, i64* %79, align 8, !noalias !8
  %80 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %74, i8** %80, align 8, !alias.scope !8
  call void @_ZN10extensions13ScriptContext23AddInvalidationObserverEN4base12OnceCallbackIFvvEEE(%"class.extensions::ScriptContext"* %1, %"class.base::OnceCallback"* nonnull %3) #9
  %81 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %81) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65)
  %82 = getelementptr inbounds %"class.base::RepeatingCallback.205", %"class.base::RepeatingCallback.205"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %82) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN10extensions25ObjectBackedNativeHandler10InitializeEv(%"class.extensions::ObjectBackedNativeHandler"* nonnull %66) #9
  %83 = bitcast i8* %55 to %"class.v8::Object"* (%"class.extensions::ObjectBackedNativeHandler"*)***
  %84 = load %"class.v8::Object"* (%"class.extensions::ObjectBackedNativeHandler"*)**, %"class.v8::Object"* (%"class.extensions::ObjectBackedNativeHandler"*)*** %83, align 8
  %85 = getelementptr inbounds %"class.v8::Object"* (%"class.extensions::ObjectBackedNativeHandler"*)*, %"class.v8::Object"* (%"class.extensions::ObjectBackedNativeHandler"*)** %84, i64 4
  %86 = load %"class.v8::Object"* (%"class.extensions::ObjectBackedNativeHandler"*)*, %"class.v8::Object"* (%"class.extensions::ObjectBackedNativeHandler"*)** %85, align 8
  %87 = call %"class.v8::Object"* %86(%"class.extensions::ObjectBackedNativeHandler"* nonnull %66) #9
  %88 = call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %22) #9
  %89 = call %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"* %88, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 0, i32 -1) #9
  %90 = icmp eq %"class.v8::String"* %89, null
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %54
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %92

92:                                               ; preds = %91, %54
  %93 = bitcast %"class.v8::String"* %89 to %"class.v8::Value"*
  %94 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %87, %"class.v8::Context"* %22, %"class.v8::Value"* %93) #9
  %95 = icmp eq %"class.v8::Value"* %94, null
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %92
  call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %97

97:                                               ; preds = %92, %96
  %98 = ptrtoint %"class.v8::Value"* %94 to i64
  %99 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %22) #9
  %100 = call i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"* %99, %"class.v8::Context"* %22, %"class.v8::Private"* %27, %"class.v8::Value"* %94) #9
  %101 = trunc i16 %100 to i8
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %104, !prof !2

103:                                              ; preds = %97
  call void @_ZN2v82V817FromJustIsNothingEv() #9
  br label %104

104:                                              ; preds = %37, %32, %103, %97, %48
  %105 = phi i64 [ %30, %48 ], [ %98, %97 ], [ %98, %103 ], [ %30, %32 ], [ %30, %37 ]
  %106 = inttoptr i64 %105 to %"class.v8::Value"*
  %107 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %106) #9
  br i1 %107, label %111, label %108

108:                                              ; preds = %104
  %109 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 148, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0)) #9
  %110 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #9
  br label %111

111:                                              ; preds = %104, %108
  %112 = inttoptr i64 %105 to i64*
  %113 = call i64* @_ZN2v820EscapableHandleScope6EscapeEPm(%"class.v8::EscapableHandleScope"* nonnull %4, i64* %112) #9
  %114 = bitcast i64* %113 to %"class.v8::Function"*
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %22) #9
  %115 = getelementptr inbounds %"class.v8::EscapableHandleScope", %"class.v8::EscapableHandleScope"* %4, i64 0, i32 0
  call void @_ZN2v811HandleScopeD2Ev(%"class.v8::HandleScope"* nonnull %115) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #9
  ret %"class.v8::Function"* %114
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v820EscapableHandleScopeC1EPNS_7IsolateE(%"class.v8::EscapableHandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare %"class.v8::Private"* @_ZN2v87Private6ForApiEPNS_7IsolateENS_5LocalINS_6StringEEE(%"class.v8::Isolate"*, %"class.v8::String"*) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object10GetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Private"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13WakeEventPage11MakeRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base12OnceCallbackIFvbEEE(%"class.extensions::WakeEventPage"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::OnceCallback.213"* nocapture) #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.253", align 8
  %5 = alloca %"class.std::__1::tuple.256", align 1
  %6 = alloca %"class.base::OnceCallback.213", align 8
  %7 = alloca i32, align 4
  %8 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #9
  %9 = atomicrmw add i32* getelementptr inbounds ({ { { i32 } } }, { { { i32 } } }* @_ZZN10extensions13WakeEventPage11MakeRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base12OnceCallbackIFvbEEEE15sequence_number, i64 0, i32 0, i32 0, i32 0), i32 1 monotonic
  store i32 %9, i32* %7, align 4
  %10 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #9
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !13

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #9
  br label %16

16:                                               ; preds = %3, %14
  %17 = tail call i32 @_ZN7content12WorkerThread12GetCurrentIdEv() #9
  %18 = bitcast %"class.base::OnceCallback.213"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = tail call i8* @_Znwm(i64 16) #10
  %20 = getelementptr inbounds %"class.base::OnceCallback.213", %"class.base::OnceCallback.213"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback.213"* %2 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %23 = bitcast i8* %19 to i32*
  store i32 %17, i32* %23, align 8
  %24 = getelementptr inbounds i8, i8* %19, i64 8
  %25 = getelementptr inbounds %"class.base::OnceCallback.213", %"class.base::OnceCallback.213"* %6, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast i8* %24 to i64*
  store i64 %22, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %27 = getelementptr inbounds %"class.base::OnceCallback.213", %"class.base::OnceCallback.213"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %28 = ptrtoint i8* %19 to i64
  %29 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 2, i32 0
  %30 = bitcast %"class.std::__1::tuple.253"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.std::__1::tuple.253", %"class.std::__1::tuple.253"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::tuple.256", %"class.std::__1::tuple.256"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #9
  %33 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %29, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.253"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.256"* nonnull dereferenceable(1) %5) #9
  %34 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %33, 0
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %34, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  %36 = bitcast %"struct.std::__1::__hash_node_base"* %35 to %"struct.extensions::WakeEventPage::RequestData"**
  %37 = load %"struct.extensions::WakeEventPage::RequestData"*, %"struct.extensions::WakeEventPage::RequestData"** %36, align 8
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %35 to i64*
  store i64 %28, i64* %38, align 8
  %39 = icmp eq %"struct.extensions::WakeEventPage::RequestData"* %37, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %16
  %41 = getelementptr inbounds %"struct.extensions::WakeEventPage::RequestData", %"struct.extensions::WakeEventPage::RequestData"* %37, i64 0, i32 1, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %41) #9
  %42 = bitcast %"struct.extensions::WakeEventPage::RequestData"* %37 to i8*
  call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %40, %16
  %44 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #9
  %45 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 1, i32 0
  %46 = load %"class.IPC::SyncMessageFilter"*, %"class.IPC::SyncMessageFilter"** %45, align 8
  %47 = call i8* @_Znwm(i64 56) #10
  %48 = bitcast i8* %47 to %"class.IPC::MessageT"*
  call void @_ZN3IPC8MessageTI35ExtensionHostMsg_WakeEventPage_MetaNSt3__15tupleIJiNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvEC2ENS_7RoutingERKiRKS9_(%"class.IPC::MessageT"* nonnull %48, i32 2147483647, i32* nonnull dereferenceable(4) %7, %"class.std::__1::basic_string"* dereferenceable(24) %1) #9
  %49 = bitcast i8* %47 to %"class.IPC::Message"*
  %50 = bitcast %"class.IPC::SyncMessageFilter"* %46 to i1 (%"class.IPC::SyncMessageFilter"*, %"class.IPC::Message"*)***
  %51 = load i1 (%"class.IPC::SyncMessageFilter"*, %"class.IPC::Message"*)**, i1 (%"class.IPC::SyncMessageFilter"*, %"class.IPC::Message"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.IPC::SyncMessageFilter"*, %"class.IPC::Message"*)*, i1 (%"class.IPC::SyncMessageFilter"*, %"class.IPC::Message"*)** %51, i64 9
  %53 = load i1 (%"class.IPC::SyncMessageFilter"*, %"class.IPC::Message"*)*, i1 (%"class.IPC::SyncMessageFilter"*, %"class.IPC::Message"*)** %52, align 8
  %54 = call zeroext i1 %53(%"class.IPC::SyncMessageFilter"* %46, %"class.IPC::Message"* nonnull %49) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #9
  ret void
}

declare void @_ZN10extensions25ObjectBackedNativeHandler10InitializeEv(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #2

declare i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Private"*, %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD2Ev(%"class.v8::HandleScope"*) unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN10extensions13WakeEventPage11RequestDataC2EiN4base12OnceCallbackIFvbEEE(%"struct.extensions::WakeEventPage::RequestData"* nocapture, i32, %"class.base::OnceCallback.213"* nocapture) unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"struct.extensions::WakeEventPage::RequestData", %"struct.extensions::WakeEventPage::RequestData"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.extensions::WakeEventPage::RequestData", %"struct.extensions::WakeEventPage::RequestData"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::OnceCallback.213", %"class.base::OnceCallback.213"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback.213"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback.213"* %5 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13WakeEventPage11RequestDataD2Ev(%"struct.extensions::WakeEventPage::RequestData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.extensions::WakeEventPage::RequestData", %"struct.extensions::WakeEventPage::RequestData"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13WakeEventPageC2Ev(%"class.extensions::WakeEventPage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions13WakeEventPageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 2, i32 0, i32 3
  %5 = bitcast %"class.std::__1::__compressed_pair.33"* %4 to i32*
  %6 = bitcast %"class.IPC::SyncMessageFilter"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 40, i1 false)
  store i32 1065353216, i32* %5, align 4
  %7 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %7) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13WakeEventPageD2Ev(%"class.extensions::WakeEventPage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN10extensions13WakeEventPageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #9
  %4 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %4, align 8
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"struct.std::__1::__hash_node_base"* [ %10, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %8, i64 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %8, i64 3
  %12 = bitcast %"struct.std::__1::__hash_node_base"* %11 to %"struct.extensions::WakeEventPage::RequestData"**
  %13 = load %"struct.extensions::WakeEventPage::RequestData"*, %"struct.extensions::WakeEventPage::RequestData"** %12, align 8
  store %"struct.extensions::WakeEventPage::RequestData"* null, %"struct.extensions::WakeEventPage::RequestData"** %12, align 8
  %14 = icmp eq %"struct.extensions::WakeEventPage::RequestData"* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"struct.extensions::WakeEventPage::RequestData", %"struct.extensions::WakeEventPage::RequestData"* %13, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %16) #9
  %17 = bitcast %"struct.extensions::WakeEventPage::RequestData"* %13 to i8*
  tail call void @_ZdlPv(i8* %17) #10
  br label %18

18:                                               ; preds = %15, %7
  %19 = bitcast %"struct.std::__1::__hash_node_base"* %8 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  %20 = icmp eq %"struct.std::__1::__hash_node_base"* %10, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"struct.std::__1::__hash_node_base"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %21, %25
  %28 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 1, i32 0
  %29 = load %"class.IPC::SyncMessageFilter"*, %"class.IPC::SyncMessageFilter"** %28, align 8
  %30 = icmp eq %"class.IPC::SyncMessageFilter"* %29, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.IPC::SyncMessageFilter", %"class.IPC::SyncMessageFilter"* %29, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %43

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %32, i64 -2
  %38 = bitcast %"class.base::RefCountedThreadSafe"* %37 to %"class.IPC::MessageFilter"*
  %39 = bitcast %"class.base::RefCountedThreadSafe"* %37 to void (%"class.IPC::MessageFilter"*)***
  %40 = load void (%"class.IPC::MessageFilter"*)**, void (%"class.IPC::MessageFilter"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.IPC::MessageFilter"*)*, void (%"class.IPC::MessageFilter"*)** %40, i64 8
  %42 = load void (%"class.IPC::MessageFilter"*)*, void (%"class.IPC::MessageFilter"*)** %41, align 8
  tail call void %42(%"class.IPC::MessageFilter"* nonnull %38) #9
  br label %43

43:                                               ; preds = %27, %31, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13WakeEventPageD0Ev(%"class.extensions::WakeEventPage"*) unnamed_addr #0 align 2 {
  tail call void @_ZN10extensions13WakeEventPageD2Ev(%"class.extensions::WakeEventPage"* %0) #9
  %2 = bitcast %"class.extensions::WakeEventPage"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i32 @_ZN7content12WorkerThread12GetCurrentIdEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions13WakeEventPage24OnControlMessageReceivedERKN3IPC7MessageE(%"class.extensions::WakeEventPage"*, %"class.IPC::Message"* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TaskAnnotator::ScopedSetIpcHash", align 8
  %4 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.base::Pickle::Header"** %4 to %"struct.IPC::Message::Header"**
  %6 = load %"struct.IPC::Message::Header"*, %"struct.IPC::Message::Header"** %5, align 8
  %7 = getelementptr inbounds %"struct.IPC::Message::Header", %"struct.IPC::Message::Header"* %6, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 459079
  br i1 %9, label %10, label %16

10:                                               ; preds = %2
  %11 = bitcast %"class.base::TaskAnnotator::ScopedSetIpcHash"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZN4base13TaskAnnotator16ScopedSetIpcHashC1Ej(%"class.base::TaskAnnotator::ScopedSetIpcHash"* nonnull %3, i32 -1237136335) #9
  %12 = call zeroext i1 @_ZN3IPC8MessageTI39ExtensionMsg_WakeEventPageResponse_MetaNSt3__15tupleIJibEEEvE8DispatchIN10extensions13WakeEventPageES8_vMS8_FvibEEEbPKNS_7MessageEPT_PT0_PT1_T2_(%"class.IPC::Message"* %1, %"class.extensions::WakeEventPage"* %0, %"class.extensions::WakeEventPage"* %0, i8* null, i64 ptrtoint (void (%"class.extensions::WakeEventPage"*, i32, i1)* @_ZN10extensions13WakeEventPage23OnWakeEventPageResponseEib to i64), i64 0)
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.IPC::Message", %"class.IPC::Message"* %1, i64 0, i32 1
  store i8 1, i8* %14, align 8
  br label %15

15:                                               ; preds = %13, %10
  call void @_ZN4base13TaskAnnotator16ScopedSetIpcHashD1Ev(%"class.base::TaskAnnotator::ScopedSetIpcHash"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  br label %16

16:                                               ; preds = %2, %15
  %17 = phi i1 [ true, %15 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base13TaskAnnotator16ScopedSetIpcHashC1Ej(%"class.base::TaskAnnotator::ScopedSetIpcHash"*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3IPC8MessageTI39ExtensionMsg_WakeEventPageResponse_MetaNSt3__15tupleIJibEEEvE8DispatchIN10extensions13WakeEventPageES8_vMS8_FvibEEEbPKNS_7MessageEPT_PT0_PT1_T2_(%"class.IPC::Message"*, %"class.extensions::WakeEventPage"*, %"class.extensions::WakeEventPage"*, i8*, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.std::__1::tuple.262"*
  %10 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 69, i32 0), align 16
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %19, label %13, !prof !13

13:                                               ; preds = %6
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #9
  %15 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #9
  store i64 %17, i64* %16, align 8
  %18 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 69, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN39ExtensionMsg_WakeEventPageResponse_Meta5kNameE, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* null, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  br label %19

19:                                               ; preds = %6, %13
  %20 = phi i64 [ -6148914691236517206, %6 ], [ %18, %13 ]
  %21 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %6 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN39ExtensionMsg_WakeEventPageResponse_Meta5kNameE, i64 0, i64 0), %13 ]
  %22 = phi i8* [ null, %6 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 69, i32 0), %13 ]
  %23 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = bitcast i64* %8 to i32*
  %25 = getelementptr inbounds %"class.std::__1::tuple.262", %"class.std::__1::tuple.262"* %9, i64 0, i32 0, i32 1, i32 0
  store i64 -6148915424244269056, i64* %8, align 8
  %26 = call zeroext i1 @_ZN3IPC8MessageTI39ExtensionMsg_WakeEventPageResponse_MetaNSt3__15tupleIJibEEEvE4ReadEPKNS_7MessageEPS4_(%"class.IPC::Message"* %0, %"class.std::__1::tuple.262"* nonnull %9) #9
  br i1 %26, label %27, label %47

27:                                               ; preds = %19
  %28 = bitcast %"class.extensions::WakeEventPage"* %1 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %5
  %30 = bitcast i8* %29 to %"class.extensions::WakeEventPage"*
  %31 = and i64 %4, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %27
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.extensions::WakeEventPage"*, i32, i1)**
  %39 = load void (%"class.extensions::WakeEventPage"*, i32, i1)*, void (%"class.extensions::WakeEventPage"*, i32, i1)** %38, align 8
  br label %42

40:                                               ; preds = %27
  %41 = inttoptr i64 %4 to void (%"class.extensions::WakeEventPage"*, i32, i1)*
  br label %42

42:                                               ; preds = %33, %40
  %43 = phi void (%"class.extensions::WakeEventPage"*, i32, i1)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i32, i32* %24, align 8
  %45 = load i8, i8* %25, align 4, !range !14
  %46 = icmp ne i8 %45, 0
  call void %43(%"class.extensions::WakeEventPage"* %30, i32 %44, i1 zeroext %46) #9
  br label %47

47:                                               ; preds = %19, %42
  %48 = phi i1 [ true, %42 ], [ false, %19 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  %49 = icmp eq i8* %22, null
  br i1 %49, label %54, label %50

50:                                               ; preds = %47
  %51 = load i8, i8* %22, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %22, i8* %21, i64 %20) #9
  br label %54

54:                                               ; preds = %47, %50, %53
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions13WakeEventPage23OnWakeEventPageResponseEib(%"class.extensions::WakeEventPage"*, i32, i1 zeroext) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.213", align 8
  %5 = alloca %"class.std::__1::unique_ptr.257", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = zext i1 %2 to i8
  %10 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0, i32 0
  %12 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %11) #9
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14, !prof !13

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %10, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %15) #9
  br label %16

16:                                               ; preds = %3, %14
  %17 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 2
  %18 = sext i32 %1 to i64
  %19 = getelementptr inbounds %"class.extensions::WakeEventPage", %"class.extensions::WakeEventPage"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %70, label %22

22:                                               ; preds = %16
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #9, !range !15
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %26, %18
  br label %32

28:                                               ; preds = %22
  %29 = icmp ugt i64 %20, %18
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %30, %28, %25
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %70, label %39

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %37, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %42, label %70, label %43

43:                                               ; preds = %39
  %44 = add i64 %20, -1
  br label %45

45:                                               ; preds = %66, %43
  %46 = phi %"struct.std::__1::__hash_node_base"* [ %41, %43 ], [ %68, %66 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %45
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %44
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %56, %54, %52
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %66, label %70

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, %1
  br i1 %65, label %75, label %66

66:                                               ; preds = %61, %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  br i1 %69, label %70, label %45

70:                                               ; preds = %58, %66, %32, %16, %39
  %71 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 190, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #9
  %72 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %72, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i64 19) #9
  %74 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %73, i32 %1) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #9
  br label %75

75:                                               ; preds = %61, %70
  %76 = phi %"struct.std::__1::__hash_node_base"* [ null, %70 ], [ %46, %61 ]
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %76, i64 3
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to %"struct.extensions::WakeEventPage::RequestData"**
  %79 = load %"struct.extensions::WakeEventPage::RequestData"*, %"struct.extensions::WakeEventPage::RequestData"** %78, align 8
  store %"struct.extensions::WakeEventPage::RequestData"* null, %"struct.extensions::WakeEventPage::RequestData"** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %17, i64 0, i32 0
  %81 = bitcast %"class.std::__1::unique_ptr.257"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #9
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_PvEEEE(%"class.std::__1::unique_ptr.257"* nonnull sret %5, %"class.std::__1::__hash_table"* %80, %"struct.std::__1::__hash_node_base"* %76) #9
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %5, i64 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %82, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %75
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %5, i64 0, i32 0, i32 1, i32 0, i32 1
  %87 = load i8, i8* %86, align 8, !range !14
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %83, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %91 = load %"struct.extensions::WakeEventPage::RequestData"*, %"struct.extensions::WakeEventPage::RequestData"** %90, align 8
  store %"struct.extensions::WakeEventPage::RequestData"* null, %"struct.extensions::WakeEventPage::RequestData"** %90, align 8
  %92 = icmp eq %"struct.extensions::WakeEventPage::RequestData"* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"struct.extensions::WakeEventPage::RequestData", %"struct.extensions::WakeEventPage::RequestData"* %91, i64 0, i32 1, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %94) #9
  %95 = bitcast %"struct.extensions::WakeEventPage::RequestData"* %91 to i8*
  call void @_ZdlPv(i8* %95) #10
  br label %96

96:                                               ; preds = %93, %89, %85
  %97 = bitcast %"struct.std::__1::__hash_node"* %83 to i8*
  call void @_ZdlPv(i8* %97) #10
  br label %98

98:                                               ; preds = %75, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #9
  %99 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %11) #9
  %100 = getelementptr inbounds %"struct.extensions::WakeEventPage::RequestData", %"struct.extensions::WakeEventPage::RequestData"* %79, i64 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"struct.extensions::WakeEventPage::RequestData", %"struct.extensions::WakeEventPage::RequestData"* %79, i64 0, i32 1
  br i1 %102, label %104, label %115

104:                                              ; preds = %98
  %105 = bitcast %"class.base::OnceCallback.213"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #9
  %106 = getelementptr inbounds %"class.base::OnceCallback.213", %"class.base::OnceCallback.213"* %103, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.base::OnceCallback.213"* %103 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.base::OnceCallback.213"* %4 to i64*
  store i64 %108, i64* %109, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %106, align 8
  %110 = getelementptr inbounds %"class.base::OnceCallback.213", %"class.base::OnceCallback.213"* %4, i64 0, i32 0
  %111 = inttoptr i64 %108 to %"class.base::internal::BindStateBase"*
  %112 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %111, i64 0, i32 1
  %113 = bitcast void ()** %112 to void (%"class.base::internal::BindStateBase"*, i1)**
  %114 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %113, align 8
  call void %114(%"class.base::internal::BindStateBase"* %111, i1 zeroext %2) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %110) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #9
  br label %131

115:                                              ; preds = %98
  %116 = call i8* @_Znwm(i64 48) #10, !noalias !16
  %117 = bitcast i8* %116 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %117, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvbEEEJbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateINS_12OnceCallbackIFvbEEEJbEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvbEEEJbEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE) #9, !noalias !16
  %118 = getelementptr inbounds i8, i8* %116, i64 32
  %119 = getelementptr inbounds %"class.base::OnceCallback.213", %"class.base::OnceCallback.213"* %103, i64 0, i32 0, i32 0, i32 0
  %120 = bitcast %"class.base::OnceCallback.213"* %103 to i64*
  %121 = load i64, i64* %120, align 8, !noalias !16
  %122 = bitcast i8* %118 to i64*
  store i64 %121, i64* %122, align 8, !noalias !16
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %119, align 8, !noalias !16
  %123 = getelementptr inbounds i8, i8* %116, i64 40
  store i8 %9, i8* %123, align 1, !noalias !16
  %124 = icmp eq i64 %121, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %115
  %126 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #9, !noalias !16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i32 896, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0)) #9, !noalias !16
  %127 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9, !noalias !16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9, !noalias !16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #9, !noalias !16
  br label %128

128:                                              ; preds = %115, %125
  %129 = bitcast %"class.base::OnceCallback"* %8 to i8**
  store i8* %116, i8** %129, align 8, !alias.scope !16
  call void @_ZN7content12WorkerThread8PostTaskEiN4base12OnceCallbackIFvvEEE(i32 %101, %"class.base::OnceCallback"* nonnull %8) #9
  %130 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %130) #9
  br label %131

131:                                              ; preds = %128, %104
  %132 = icmp eq %"struct.extensions::WakeEventPage::RequestData"* %79, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %131
  %134 = getelementptr inbounds %"struct.extensions::WakeEventPage::RequestData", %"struct.extensions::WakeEventPage::RequestData"* %79, i64 0, i32 1, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %134) #9
  %135 = bitcast %"struct.extensions::WakeEventPage::RequestData"* %79 to i8*
  call void @_ZdlPv(i8* %135) #10
  br label %136

136:                                              ; preds = %131, %133
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base13TaskAnnotator16ScopedSetIpcHashD1Ev(%"class.base::TaskAnnotator::ScopedSetIpcHash"*) unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare void @_ZN7content12WorkerThread8PostTaskEiN4base12OnceCallbackIFvvEEE(i32, %"class.base::OnceCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content20RenderThreadObserver22RegisterMojoInterfacesEPN5blink27AssociatedInterfaceRegistryE(%"class.content::RenderThreadObserver"*, %"class.blink::AssociatedInterfaceRegistry"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content20RenderThreadObserver24UnregisterMojoInterfacesEPN5blink27AssociatedInterfaceRegistryE(%"class.content::RenderThreadObserver"*, %"class.blink::AssociatedInterfaceRegistry"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content20RenderThreadObserver17PluginListChangedEv(%"class.content::RenderThreadObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String11NewFromUtf8EPNS_7IsolateEPKcNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN10extensions25ObjectBackedNativeHandlerC2EPNS_13ScriptContextE(%"class.extensions::ObjectBackedNativeHandler"*, %"class.extensions::ScriptContext"*) unnamed_addr #2

declare void @_ZN10extensions13ScriptContext23AddInvalidationObserverEN4base12OnceCallbackIFvvEEE(%"class.extensions::ScriptContext"*, %"class.base::OnceCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions13WakeEventPage26WakeEventPageNativeHandler10DeleteSelfEv(%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 0
  %3 = bitcast %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0 to void (%"class.extensions::ObjectBackedNativeHandler"*)***
  %4 = load void (%"class.extensions::ObjectBackedNativeHandler"*)**, void (%"class.extensions::ObjectBackedNativeHandler"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.extensions::ObjectBackedNativeHandler"*)*, void (%"class.extensions::ObjectBackedNativeHandler"*)** %4, i64 5
  %6 = load void (%"class.extensions::ObjectBackedNativeHandler"*)*, void (%"class.extensions::ObjectBackedNativeHandler"*)** %5, align 8
  tail call void %6(%"class.extensions::ObjectBackedNativeHandler"* %2) #9
  %7 = icmp eq %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0 to void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)***
  %10 = load void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)**, void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)*, void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)** %10, i64 1
  %12 = load void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)*, void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)** %11, align 8
  tail call void %12(%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* nonnull %0) #9
  br label %13

13:                                               ; preds = %8, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions13WakeEventPage26WakeEventPageNativeHandlerD2Ev(%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions13WakeEventPage26WakeEventPageNativeHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #9
  %4 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #9
  %5 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions25ObjectBackedNativeHandlerD2Ev(%"class.extensions::ObjectBackedNativeHandler"* %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions13WakeEventPage26WakeEventPageNativeHandlerD0Ev(%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN10extensions13WakeEventPage26WakeEventPageNativeHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #9
  %4 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #9
  %5 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 0
  tail call void @_ZN10extensions25ObjectBackedNativeHandlerD2Ev(%"class.extensions::ObjectBackedNativeHandler"* %5) #9
  %6 = bitcast %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  ret void
}

declare zeroext i1 @_ZN10extensions25ObjectBackedNativeHandler13IsInitializedEv(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN10extensions25ObjectBackedNativeHandler11NewInstanceEv(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #2

declare void @_ZN10extensions25ObjectBackedNativeHandler10InvalidateEv(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions13WakeEventPage26WakeEventPageNativeHandler9AddRoutesEv(%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.base::RepeatingCallback.227", align 8
  %4 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 0
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 13, i8* %7, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13, i1 false) #9
  %8 = getelementptr inbounds i8, i8* %5, i64 13
  store i8 0, i8* %8, align 1
  %9 = ptrtoint %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0 to i64
  %10 = tail call i8* @_Znwm(i64 56) #10, !noalias !21
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.v8::FunctionCallbackInfo"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvRKN2v820FunctionCallbackInfoINS6_5ValueEEEEJNS0_17UnretainedWrapperIS5_EEEEEFvSB_EE3RunEPNS0_13BindStateBaseESB_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvRKN2v820FunctionCallbackInfoINS5_5ValueEEEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !21
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)* @_ZN10extensions13WakeEventPage26WakeEventPageNativeHandler15DoWakeEventPageERKN2v820FunctionCallbackInfoINS2_5ValueEEE to i64), i64 0>, <2 x i64>* %13, align 8, !noalias !21
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = bitcast i8* %14 to i64*
  store i64 %9, i64* %15, align 8, !noalias !21
  %16 = bitcast %"class.base::RepeatingCallback.227"* %3 to i8**
  store i8* %10, i8** %16, align 8, !alias.scope !21
  call void @_ZN10extensions25ObjectBackedNativeHandler20RouteHandlerFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base17RepeatingCallbackIFvRKN2v820FunctionCallbackInfoINSC_5ValueEEEEEE(%"class.extensions::ObjectBackedNativeHandler"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, %"class.base::RepeatingCallback.227"* nonnull %3) #9
  %17 = getelementptr inbounds %"class.base::RepeatingCallback.227", %"class.base::RepeatingCallback.227"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #9
  %18 = load i8, i8* %7, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %1, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret void
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvvEJNS0_17UnretainedWrapperIS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)**
  %21 = load void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)*, void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvvEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10extensions25ObjectBackedNativeHandlerD2Ev(%"class.extensions::ObjectBackedNativeHandler"*) unnamed_addr #4

declare void @_ZN10extensions25ObjectBackedNativeHandler20RouteHandlerFunctionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base17RepeatingCallbackIFvRKN2v820FunctionCallbackInfoINSC_5ValueEEEEEE(%"class.extensions::ObjectBackedNativeHandler"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::RepeatingCallback.227"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions13WakeEventPage26WakeEventPageNativeHandler15DoWakeEventPageERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.v8::Global.229", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = alloca %"class.base::OnceCallback.213", align 8
  %11 = alloca %"class.base::WeakPtr", align 8
  %12 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %13, align 8
  %14 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = icmp eq i32 %15, 1
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  store i8* null, i8** %13, align 8
  br label %28

19:                                               ; preds = %2
  %20 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 1) #9
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %15) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* %20, i8* %21) #9
  %22 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  store i8* %23, i8** %13, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 71, %"class.logging::CheckOpResult"* nonnull %5) #9
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #9
  br label %28

28:                                               ; preds = %18, %19, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  %29 = load i32, i32* %14, align 8
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 0
  %33 = load i64*, i64** %32, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 1
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, 160
  %37 = inttoptr i64 %36 to %"class.v8::Value"*
  br label %42

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 1
  %40 = bitcast i64** %39 to %"class.v8::Value"**
  %41 = load %"class.v8::Value"*, %"class.v8::Value"** %40, align 8
  br label %42

42:                                               ; preds = %31, %38
  %43 = phi %"class.v8::Value"* [ %37, %31 ], [ %41, %38 ]
  %44 = call zeroext i1 @_ZNK2v85Value10IsFunctionEv(%"class.v8::Value"* %43) #9
  br i1 %44, label %48, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0)) #9
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9
  br label %48

48:                                               ; preds = %42, %45
  %49 = bitcast %"class.v8::Global.229"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #9
  %50 = getelementptr inbounds %"class.v8::Global.229", %"class.v8::Global.229"* %8, i64 0, i32 0, i32 0
  store %"class.v8::Function"* inttoptr (i64 -6148914691236517206 to %"class.v8::Function"*), %"class.v8::Function"** %50, align 8
  %51 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 1
  %54 = bitcast i64* %53 to %"class.v8::internal::Isolate"**
  %55 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %54, align 8
  %56 = load i32, i32* %14, align 8
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %48
  %59 = ptrtoint %"class.v8::internal::Isolate"* %55 to i64
  %60 = add i64 %59, 160
  %61 = inttoptr i64 %60 to %"class.v8::Value"*
  br label %66

62:                                               ; preds = %48
  %63 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %1, i64 0, i32 1
  %64 = bitcast i64** %63 to %"class.v8::Value"**
  %65 = load %"class.v8::Value"*, %"class.v8::Value"** %64, align 8
  br label %66

66:                                               ; preds = %58, %62
  %67 = phi %"class.v8::Value"* [ %61, %58 ], [ %65, %62 ]
  %68 = icmp eq %"class.v8::Value"* %67, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %66
  %70 = bitcast %"class.v8::Value"* %67 to i64*
  %71 = call i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"* %55, i64* nonnull %70) #9
  %72 = bitcast i64* %71 to %"class.v8::Function"*
  br label %73

73:                                               ; preds = %66, %69
  %74 = phi %"class.v8::Function"* [ %72, %69 ], [ null, %66 ]
  store %"class.v8::Function"* %74, %"class.v8::Function"** %50, align 8
  %75 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 0, i32 3
  %76 = load %"class.extensions::ScriptContext"*, %"class.extensions::ScriptContext"** %75, align 8
  %77 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions13ScriptContext14GetExtensionIDEv(%"class.extensions::ScriptContext"* %76) #9
  %78 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = zext i8 %80 to i64
  %85 = select i1 %81, i64 %83, i64 %84
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %89, label %87

87:                                               ; preds = %73
  %88 = ptrtoint %"class.v8::Function"* %74 to i64
  br label %94

89:                                               ; preds = %73
  %90 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 77, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0)) #9
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #9
  %92 = bitcast %"class.v8::Global.229"* %8 to i64*
  %93 = load i64, i64* %92, align 8, !noalias !26
  br label %94

94:                                               ; preds = %87, %89
  %95 = phi i64 [ %88, %87 ], [ %93, %89 ]
  %96 = bitcast %"class.base::WeakPtr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #9
  %97 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #9, !noalias !31
  %98 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 2, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %98) #9, !noalias !31
  %99 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 2, i32 0, i32 1
  %100 = load i64, i64* %99, align 8, !noalias !31
  %101 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %101, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %100) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #9, !noalias !31
  %102 = call i8* @_Znwm(i64 72) #10, !noalias !26
  %103 = bitcast i8* %102 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %103, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS6_8FunctionEEEbEJNS_7WeakPtrIS5_EES9_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS5_8FunctionEEEbEJNS_7WeakPtrIS4_EES8_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS6_8FunctionEEEbEJNS_7WeakPtrIS5_EES9_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE) #9, !noalias !26
  %104 = getelementptr inbounds i8, i8* %102, i64 32
  %105 = bitcast i8* %104 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::Global.229"*, i1)* @_ZN10extensions13WakeEventPage26WakeEventPageNativeHandler18OnEventPageIsAwakeEN2v86GlobalINS2_8FunctionEEEb to i64), i64 0>, <2 x i64>* %105, align 8, !noalias !26
  %106 = getelementptr inbounds i8, i8* %102, i64 48
  %107 = bitcast i8* %106 to %"class.base::internal::WeakReference"*
  %108 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %107, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %108) #9, !noalias !26
  %109 = getelementptr inbounds i8, i8* %102, i64 56
  %110 = bitcast i8* %109 to i64*
  %111 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %11, i64 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8, !noalias !26
  store i64 %112, i64* %110, align 8, !noalias !26
  %113 = getelementptr inbounds i8, i8* %102, i64 64
  %114 = bitcast i8* %113 to i64*
  store i64 %95, i64* %114, align 8, !noalias !26
  %115 = icmp eq i64 %95, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %94
  %117 = bitcast %"class.v8::Global.229"* %8 to i64**
  %118 = bitcast i8* %113 to i64**
  call void @_ZN2v82V819MoveGlobalReferenceEPPmS2_(i64** nonnull %117, i64** %118) #9, !noalias !26
  store %"class.v8::Function"* null, %"class.v8::Function"** %50, align 8, !noalias !26
  br label %119

119:                                              ; preds = %94, %116
  %120 = bitcast %"class.base::OnceCallback.213"* %10 to i8**
  store i8* %102, i8** %120, align 8, !alias.scope !26
  %121 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %122 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %121, align 8
  %123 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %122, i64 0, i32 1
  %124 = bitcast void ()** %123 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.213"*)**
  %125 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.213"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.213"*)** %124, align 8
  call void %125(%"class.base::internal::BindStateBase"* %122, %"class.std::__1::basic_string"* dereferenceable(24) %77, %"class.base::OnceCallback.213"* nonnull dereferenceable(8) %10) #9
  %126 = getelementptr inbounds %"class.base::OnceCallback.213", %"class.base::OnceCallback.213"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %126) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %101) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #9
  %127 = load %"class.v8::Function"*, %"class.v8::Function"** %50, align 8
  %128 = icmp eq %"class.v8::Function"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = bitcast %"class.v8::Function"* %127 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %130) #9
  store %"class.v8::Function"* null, %"class.v8::Function"** %50, align 8
  br label %131

131:                                              ; preds = %119, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvRKN2v820FunctionCallbackInfoINS6_5ValueEEEEJNS0_17UnretainedWrapperIS5_EEEEEFvSB_EE3RunEPNS0_13BindStateBaseESB_(%"class.base::internal::BindStateBase"*, %"class.v8::FunctionCallbackInfo"* dereferenceable(24)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)**
  %22 = load void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)*, void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::FunctionCallbackInfo"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %13, %"class.v8::FunctionCallbackInfo"* dereferenceable(24) %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvRKN2v820FunctionCallbackInfoINS5_5ValueEEEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions13ScriptContext14GetExtensionIDEv(%"class.extensions::ScriptContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10extensions13WakeEventPage26WakeEventPageNativeHandler18OnEventPageIsAwakeEN2v86GlobalINS2_8FunctionEEEb(%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::Global.229"*, i1 zeroext) #0 comdat align 2 {
  %4 = alloca %"class.v8::HandleScope", align 8
  %5 = alloca [1 x %"class.v8::Local.203"], align 8
  %6 = alloca %"class.v8::Local", align 8
  %7 = getelementptr inbounds %"class.extensions::WakeEventPage::WakeEventPageNativeHandler", %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %0, i64 0, i32 0, i32 3
  %8 = load %"class.extensions::ScriptContext"*, %"class.extensions::ScriptContext"** %7, align 8
  %9 = getelementptr inbounds %"class.extensions::ScriptContext", %"class.extensions::ScriptContext"* %8, i64 0, i32 15
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = bitcast %"class.v8::HandleScope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = bitcast %"class.v8::HandleScope"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %4, %"class.v8::Isolate"* %10) #9
  %13 = bitcast [1 x %"class.v8::Local.203"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  %14 = getelementptr inbounds [1 x %"class.v8::Local.203"], [1 x %"class.v8::Local.203"]* %5, i64 0, i64 0
  %15 = ptrtoint %"class.v8::Isolate"* %10 to i64
  %16 = select i1 %2, i64 184, i64 192
  %17 = add i64 %16, %15
  %18 = inttoptr i64 %17 to %"class.v8::Boolean"*
  %19 = bitcast [1 x %"class.v8::Local.203"]* %5 to %"class.v8::Boolean"**
  store %"class.v8::Boolean"* %18, %"class.v8::Boolean"** %19, align 8
  %20 = load %"class.extensions::ScriptContext"*, %"class.extensions::ScriptContext"** %7, align 8
  %21 = bitcast %"class.v8::Local"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = getelementptr inbounds %"class.v8::Global.229", %"class.v8::Global.229"* %1, i64 0, i32 0, i32 0
  %23 = load %"class.v8::Function"*, %"class.v8::Function"** %22, align 8
  %24 = icmp eq %"class.v8::Function"* %23, null
  br i1 %24, label %31, label %25

25:                                               ; preds = %3
  %26 = bitcast %"class.v8::Function"* %23 to i64*
  %27 = bitcast %"class.v8::Isolate"* %10 to %"class.v8::internal::Isolate"*
  %28 = load i64, i64* %26, align 8
  %29 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %27, i64 %28) #9
  %30 = bitcast i64* %29 to %"class.v8::Function"*
  br label %31

31:                                               ; preds = %3, %25
  %32 = phi %"class.v8::Function"* [ %30, %25 ], [ null, %3 ]
  %33 = getelementptr inbounds %"class.v8::Local", %"class.v8::Local"* %6, i64 0, i32 0
  store %"class.v8::Function"* %32, %"class.v8::Function"** %33, align 8
  call void @_ZN10extensions13ScriptContext16SafeCallFunctionERKN2v85LocalINS1_8FunctionEEEiPNS2_INS1_5ValueEEE(%"class.extensions::ScriptContext"* %20, %"class.v8::Local"* nonnull dereferenceable(8) %6, i32 1, %"class.v8::Local.203"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i64* @_ZN2v82V818GlobalizeReferenceEPNS_8internal7IsolateEPm(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS6_8FunctionEEEbEJNS_7WeakPtrIS5_EES9_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb(%"class.base::internal::BindStateBase"*, i1 zeroext) #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = zext i1 %1 to i8
  store i8 %4, i8* %3, align 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::WeakPtr"*
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 2
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.v8::Global.229"*
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakReference"*
  %11 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %10) #9
  br i1 %11, label %12, label %23

12:                                               ; preds = %2
  %13 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 1
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %13 to %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"**
  %15 = load %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"** %14, align 8
  %16 = icmp eq %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = bitcast %"class.base::internal::BindStateBase"* %5 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %21 = bitcast void ()** %20 to i64*
  %22 = load i64, i64* %21, align 8
  call void @_ZN4base8internal13FunctorTraitsIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS5_8FunctionEEEbEvE6InvokeISA_NS_7WeakPtrIS4_EEJS8_bEEEvT_OT0_DpOT1_(i64 %19, i64 %22, %"class.base::WeakPtr"* dereferenceable(16) %7, %"class.v8::Global.229"* dereferenceable(8) %9, i8* nonnull dereferenceable(1) %3) #9
  br label %23

23:                                               ; preds = %2, %12, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal13FunctorTraitsIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS5_8FunctionEEEbEvE6InvokeISA_NS_7WeakPtrIS4_EEJS8_bEEEvT_OT0_DpOT1_(i64, i64, %"class.base::WeakPtr"* dereferenceable(16), %"class.v8::Global.229"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.v8::Global.229", align 8
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #9
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)) #9
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #9
  br label %13

13:                                               ; preds = %10, %5
  %14 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #9
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %16 = bitcast i64* %15 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = select i1 %14, i8* %17, i8* null
  %19 = getelementptr inbounds i8, i8* %18, i64 %1
  %20 = bitcast i8* %19 to %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*
  %21 = and i64 %0, 1
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %30, label %23

23:                                               ; preds = %13
  %24 = bitcast i8* %19 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = add i64 %0, -1
  %27 = getelementptr i8, i8* %25, i64 %26
  %28 = bitcast i8* %27 to void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::Global.229"*, i1)**
  %29 = load void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::Global.229"*, i1)*, void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::Global.229"*, i1)** %28, align 8
  br label %32

30:                                               ; preds = %13
  %31 = inttoptr i64 %0 to void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::Global.229"*, i1)*
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi void (%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.v8::Global.229"*, i1)* [ %29, %23 ], [ %31, %30 ]
  %34 = bitcast %"class.v8::Global.229"* %3 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.v8::Global.229"* %7 to i64*
  store i64 %35, i64* %36, align 8
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.v8::Global.229", %"class.v8::Global.229"* %3, i64 0, i32 0, i32 0
  %40 = bitcast %"class.v8::Global.229"* %3 to i64**
  %41 = bitcast %"class.v8::Global.229"* %7 to i64**
  call void @_ZN2v82V819MoveGlobalReferenceEPPmS2_(i64** %40, i64** nonnull %41) #9
  store %"class.v8::Function"* null, %"class.v8::Function"** %39, align 8
  br label %42

42:                                               ; preds = %32, %38
  %43 = load i8, i8* %4, align 1, !range !14
  %44 = icmp ne i8 %43, 0
  call void %33(%"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %20, %"class.v8::Global.229"* nonnull %7, i1 zeroext %44) #9
  %45 = getelementptr inbounds %"class.v8::Global.229", %"class.v8::Global.229"* %7, i64 0, i32 0, i32 0
  %46 = load %"class.v8::Function"*, %"class.v8::Function"** %45, align 8
  %47 = icmp eq %"class.v8::Function"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.v8::Function"* %46 to i64*
  call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %49) #9
  store %"class.v8::Function"* null, %"class.v8::Function"** %45, align 8
  br label %50

50:                                               ; preds = %42, %48
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZN2v82V819MoveGlobalReferenceEPPmS2_(i64**, i64**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS5_8FunctionEEEbEJNS_7WeakPtrIS4_EES8_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %14, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.v8::Function"**
  %6 = load %"class.v8::Function"*, %"class.v8::Function"** %5, align 8
  %7 = icmp eq %"class.v8::Function"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.v8::Function"* %6 to i64*
  tail call void @_ZN2v82V813DisposeGlobalEPm(i64* nonnull %9) #9
  store %"class.v8::Function"* null, %"class.v8::Function"** %5, align 8
  br label %10

10:                                               ; preds = %3, %8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %12) #9
  %13 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  br label %14

14:                                               ; preds = %10, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS6_8FunctionEEEbEJNS_7WeakPtrIS5_EES9_EEEEEbPKNS0_13BindStateBaseENSF_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"**
  %9 = load %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"*, %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"** %8, align 8
  %10 = icmp ne %"class.extensions::WakeEventPage::WakeEventPageNativeHandler"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #9
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #4

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #2

declare void @_ZN10extensions13ScriptContext16SafeCallFunctionERKN2v85LocalINS1_8FunctionEEEiPNS2_INS1_5ValueEEE(%"class.extensions::ScriptContext"*, %"class.v8::Local"* dereferenceable(8), i32, %"class.v8::Local.203"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #4

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #4

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

declare void @_ZN2v82V813DisposeGlobalEPm(i64*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #2

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !14
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12LazyInstanceIN10extensions13WakeEventPageENS_8internal34DestructorAtExitLazyInstanceTraitsIS2_EEE6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %"class.extensions::WakeEventPage"*
  %5 = inttoptr i64 %3 to void (%"class.extensions::WakeEventPage"*)***
  %6 = load void (%"class.extensions::WakeEventPage"*)**, void (%"class.extensions::WakeEventPage"*)*** %5, align 8
  %7 = load void (%"class.extensions::WakeEventPage"*)*, void (%"class.extensions::WakeEventPage"*)** %6, align 8
  tail call void %7(%"class.extensions::WakeEventPage"* %4) #9
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN10extensions13WakeEventPageEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_12OnceCallbackIFvbEEEEJNS0_17UnretainedWrapperIS4_EEEEEFvSD_SG_EE3RunEPNS0_13BindStateBaseESD_OSG_(%"class.base::internal::BindStateBase"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::OnceCallback.213"* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.base::OnceCallback.213", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i8**
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast %"class.base::internal::BindStateBase"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.213"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds i8, i8* %8, i64 %13
  %16 = bitcast i8* %15 to %"class.extensions::WakeEventPage"*
  %17 = and i64 %10, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %3
  %20 = bitcast i8* %15 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = add i64 %10, -1
  %23 = getelementptr i8, i8* %21, i64 %22
  %24 = bitcast i8* %23 to void (%"class.extensions::WakeEventPage"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.213"*)**
  %25 = load void (%"class.extensions::WakeEventPage"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.213"*)*, void (%"class.extensions::WakeEventPage"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.213"*)** %24, align 8
  br label %28

26:                                               ; preds = %3
  %27 = inttoptr i64 %10 to void (%"class.extensions::WakeEventPage"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.213"*)*
  br label %28

28:                                               ; preds = %19, %26
  %29 = phi void (%"class.extensions::WakeEventPage"*, %"class.std::__1::basic_string"*, %"class.base::OnceCallback.213"*)* [ %25, %19 ], [ %27, %26 ]
  %30 = getelementptr inbounds %"class.base::OnceCallback.213", %"class.base::OnceCallback.213"* %2, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::OnceCallback.213"* %2 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.base::OnceCallback.213"* %4 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  call void %29(%"class.extensions::WakeEventPage"* %16, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.base::OnceCallback.213"* nonnull %4) #9
  %34 = getelementptr inbounds %"class.base::OnceCallback.213", %"class.base::OnceCallback.213"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN10extensions13WakeEventPageEFvRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS_12OnceCallbackIFvbEEEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare i64* @_ZN2v820EscapableHandleScope6EscapeEPm(%"class.v8::EscapableHandleScope"*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE25__emplace_unique_key_argsIiJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSP_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.253"* dereferenceable(8), %"class.std::__1::tuple.256"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #9, !range !15
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, -1
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #10, !noalias !34
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.253", %"class.std::__1::tuple.253"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !34
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !34
  store i32 %62, i32* %61, align 8, !noalias !34
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to i64*
  store i64 0, i64* %64, align 8, !noalias !34
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !34
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8, !noalias !34
  %68 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #9, !range !15
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #9
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #9, !range !15
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, -1
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base"* %110, %"struct.std::__1::__hash_node_base"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #9, !range !15
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #9
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #9, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #9
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #9, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #9
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #11
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !37

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #9, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

declare void @_ZN3IPC8MessageTI35ExtensionHostMsg_WakeEventPage_MetaNSt3__15tupleIJiNS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEEEvEC2ENS_7RoutingERKiRKS9_(%"class.IPC::MessageT"*, i32, i32* dereferenceable(4), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

declare zeroext i1 @_ZN3IPC8MessageTI39ExtensionMsg_WakeEventPageResponse_MetaNSt3__15tupleIJibEEEvE4ReadEPKNS_7MessageEPS4_(%"class.IPC::Message"*, %"class.std::__1::tuple.262"*) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS9_PvEEEE(%"class.std::__1::unique_ptr.257"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #9, !range !15
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.26"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.257"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.29"** %98 to %"class.std::__1::__compressed_pair.26"**
  store %"class.std::__1::__compressed_pair.26"* %30, %"class.std::__1::__compressed_pair.26"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateINS_12OnceCallbackIFvbEEEJbEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::OnceCallback.213", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to i8*
  %6 = load i8, i8* %5, align 1, !range !14
  %7 = icmp ne i8 %6, 0
  %8 = bitcast %"class.base::OnceCallback.213"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::BindStateBase"**
  %10 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.213"* %2 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = getelementptr inbounds %"class.base::OnceCallback.213", %"class.base::OnceCallback.213"* %2, i64 0, i32 0
  %14 = inttoptr i64 %11 to %"class.base::internal::BindStateBase"*
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %14, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*, i1)**
  %17 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* %14, i1 zeroext %7) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateINS_12OnceCallbackIFvbEEEJbEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateINS_12OnceCallbackIFvbEEEJbEEEEEbPKNS0_13BindStateBaseENS7_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  switch i32 %1, label %10 [
    i32 0, label %4
    i32 1, label %7
  ]

4:                                                ; preds = %2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %6 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"* %5) #9
  br label %10

7:                                                ; preds = %2
  %8 = bitcast %"class.base::internal::BindStateBase"* %3 to %"class.base::internal::CallbackBase"*
  %9 = tail call zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"* %8) #9
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi i1 [ %9, %7 ], [ %6, %4 ], [ false, %2 ]
  ret i1 %11
}

declare zeroext i1 @_ZNK4base8internal12CallbackBase11IsCancelledEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal12CallbackBase10MaybeValidEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions13WakeEventPageEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_12OnceCallbackIFvbEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions13WakeEventPageEFvRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_12OnceCallbackIFvbEEEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIMN10extensions13WakeEventPageEFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_12OnceCallbackIFvbEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINSH_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIMN10extensions13WakeEventPageEFvRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_12OnceCallbackIFvbEEEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINSH_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvvEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvvEJNS_8internal17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!13 = !{!"branch_weights", i32 2000, i32 1}
!14 = !{i8 0, i8 2}
!15 = !{i64 0, i64 65}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvbEEEJRbEEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackENS2_IFvbEEEJRbEEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceINS_12OnceCallbackIFvbEEEJRbEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceINS_12OnceCallbackIFvbEEEJRbEEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS7_DpOS8_"}
!21 = !{!22, !24}
!22 = distinct !{!22, !23, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvRKN2v820FunctionCallbackInfoINS6_5ValueEEEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvRKN2v820FunctionCallbackInfoINS6_5ValueEEEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!24 = distinct !{!24, !25, !"_ZN4base13BindRepeatingIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvRKN2v820FunctionCallbackInfoINS4_5ValueEEEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!25 = distinct !{!25, !"_ZN4base13BindRepeatingIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvRKN2v820FunctionCallbackInfoINS4_5ValueEEEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINSC_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!26 = !{!27, !29}
!27 = distinct !{!27, !28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS6_8FunctionEEEbEJNS_7WeakPtrIS5_EES9_EEEDcOT0_DpOT1_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS6_8FunctionEEEbEJNS_7WeakPtrIS5_EES9_EEEDcOT0_DpOT1_"}
!29 = distinct !{!29, !30, !"_ZN4base8BindOnceIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS4_8FunctionEEEbEJNS_7WeakPtrIS3_EES7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8BindOnceIMN10extensions13WakeEventPage26WakeEventPageNativeHandlerEFvN2v86GlobalINS4_8FunctionEEEbEJNS_7WeakPtrIS3_EES7_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK4base14WeakPtrFactoryIN10extensions13WakeEventPage26WakeEventPageNativeHandlerEE10GetWeakPtrEv: argument 0"}
!33 = distinct !{!33, !"_ZNK4base14WeakPtrFactoryIN10extensions13WakeEventPage26WakeEventPageNativeHandlerEE10GetWeakPtrEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSP_IJEEEEEENS2_INS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSI_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!36 = distinct !{!36, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiNS_10unique_ptrIN10extensions13WakeEventPage11RequestDataENS_14default_deleteIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS9_SE_SC_Lb1EEENS_9allocatorIS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSP_IJEEEEEENS2_INS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINSI_ISW_EEEEEEmOT_DpOT0_"}
!37 = distinct !{!37, !38}
!38 = !{!"llvm.loop.unroll.disable"}
